// Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2020.1 (win64) Build 2902540 Wed May 27 19:54:49 MDT 2020
// Date        : Sun Jul 26 10:55:38 2020
// Host        : LAPTOP-KDBVI58S running 64-bit major release  (build 9200)
// Command     : write_verilog -mode funcsim -nolib -force -file
//               C:/Users/lesag/Documents/University/Personal_Projects/camera-filters/vivado/spartan_cam.sim/sim_1/impl/func/xsim/gamma_correction_tb_func_impl.v
// Design      : system_wrapper
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7s15ftgb196-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

module microblaze_0_local_memory_imp_OGE0N8
   (DLMB_readdbus,
    DLMB_ready,
    DLMB_wait,
    DLMB_ue,
    DLMB_ce,
    ILMB_readdbus,
    ILMB_ready,
    ILMB_wait,
    ILMB_ue,
    ILMB_ce,
    clk_out1,
    bus_struct_reset,
    DLMB_abus,
    DLMB_readstrobe,
    DLMB_writestrobe,
    DLMB_addrstrobe,
    DLMB_writedbus,
    DLMB_be,
    ILMB_abus,
    ILMB_readstrobe,
    ILMB_addrstrobe);
  output [0:31]DLMB_readdbus;
  output DLMB_ready;
  output DLMB_wait;
  output DLMB_ue;
  output DLMB_ce;
  output [0:31]ILMB_readdbus;
  output ILMB_ready;
  output ILMB_wait;
  output ILMB_ue;
  output ILMB_ce;
  input clk_out1;
  input [0:0]bus_struct_reset;
  input [0:31]DLMB_abus;
  input DLMB_readstrobe;
  input DLMB_writestrobe;
  input DLMB_addrstrobe;
  input [0:31]DLMB_writedbus;
  input [0:3]DLMB_be;
  input [0:31]ILMB_abus;
  input ILMB_readstrobe;
  input ILMB_addrstrobe;

  wire [0:31]DLMB_abus;
  wire DLMB_addrstrobe;
  wire [0:3]DLMB_be;
  wire [0:31]DLMB_readdbus;
  wire DLMB_ready;
  wire [0:31]DLMB_writedbus;
  wire DLMB_writestrobe;
  wire [0:31]ILMB_abus;
  wire ILMB_addrstrobe;
  wire [0:31]ILMB_readdbus;
  wire ILMB_ready;
  wire [0:0]bus_struct_reset;
  wire clk_out1;
  wire [0:31]microblaze_0_dlmb_bus_ABUS;
  wire microblaze_0_dlmb_bus_ADDRSTROBE;
  wire [0:3]microblaze_0_dlmb_bus_BE;
  wire [0:31]microblaze_0_dlmb_bus_READDBUS;
  wire microblaze_0_dlmb_bus_READY;
  wire [0:31]microblaze_0_dlmb_bus_WRITEDBUS;
  wire microblaze_0_dlmb_bus_WRITESTROBE;
  wire [0:31]microblaze_0_dlmb_cntlr_ADDR;
  wire microblaze_0_dlmb_cntlr_CLK;
  wire [0:31]microblaze_0_dlmb_cntlr_DIN;
  wire [31:0]microblaze_0_dlmb_cntlr_DOUT;
  wire microblaze_0_dlmb_cntlr_EN;
  wire [0:3]microblaze_0_dlmb_cntlr_WE;
  wire [0:31]microblaze_0_ilmb_bus_ABUS;
  wire microblaze_0_ilmb_bus_ADDRSTROBE;
  wire [0:31]microblaze_0_ilmb_bus_READDBUS;
  wire microblaze_0_ilmb_bus_READY;
  wire [0:31]microblaze_0_ilmb_bus_WRITEDBUS;
  wire [0:31]microblaze_0_ilmb_cntlr_ADDR;
  wire microblaze_0_ilmb_cntlr_CLK;
  wire [0:31]microblaze_0_ilmb_cntlr_DIN;
  wire [31:0]microblaze_0_ilmb_cntlr_DOUT;
  wire microblaze_0_ilmb_cntlr_EN;
  wire [0:3]microblaze_0_ilmb_cntlr_WE;
  wire NLW_dlmb_bram_if_cntlr_BRAM_Rst_A_UNCONNECTED;
  wire NLW_dlmb_bram_if_cntlr_LMB_ReadStrobe_UNCONNECTED;
  wire NLW_dlmb_bram_if_cntlr_Sl_CE_UNCONNECTED;
  wire NLW_dlmb_bram_if_cntlr_Sl_UE_UNCONNECTED;
  wire NLW_dlmb_bram_if_cntlr_Sl_Wait_UNCONNECTED;
  wire [0:31]NLW_dlmb_bram_if_cntlr_BRAM_Addr_A_UNCONNECTED;
  wire [0:31]NLW_dlmb_bram_if_cntlr_LMB_ABus_UNCONNECTED;
  wire NLW_dlmb_v10_LMB_CE_UNCONNECTED;
  wire NLW_dlmb_v10_LMB_Clk_UNCONNECTED;
  wire NLW_dlmb_v10_LMB_ReadStrobe_UNCONNECTED;
  wire NLW_dlmb_v10_LMB_Rst_UNCONNECTED;
  wire NLW_dlmb_v10_LMB_UE_UNCONNECTED;
  wire NLW_dlmb_v10_LMB_Wait_UNCONNECTED;
  wire NLW_dlmb_v10_M_ReadStrobe_UNCONNECTED;
  wire NLW_dlmb_v10_SYS_Rst_UNCONNECTED;
  wire [0:31]NLW_dlmb_v10_LMB_ABus_UNCONNECTED;
  wire [0:31]NLW_dlmb_v10_M_ABus_UNCONNECTED;
  wire [0:0]NLW_dlmb_v10_Sl_CE_UNCONNECTED;
  wire [0:0]NLW_dlmb_v10_Sl_UE_UNCONNECTED;
  wire [0:0]NLW_dlmb_v10_Sl_Wait_UNCONNECTED;
  wire NLW_ilmb_bram_if_cntlr_BRAM_Rst_A_UNCONNECTED;
  wire NLW_ilmb_bram_if_cntlr_LMB_ReadStrobe_UNCONNECTED;
  wire NLW_ilmb_bram_if_cntlr_LMB_WriteStrobe_UNCONNECTED;
  wire NLW_ilmb_bram_if_cntlr_Sl_CE_UNCONNECTED;
  wire NLW_ilmb_bram_if_cntlr_Sl_UE_UNCONNECTED;
  wire NLW_ilmb_bram_if_cntlr_Sl_Wait_UNCONNECTED;
  wire [0:31]NLW_ilmb_bram_if_cntlr_BRAM_Addr_A_UNCONNECTED;
  wire [0:31]NLW_ilmb_bram_if_cntlr_LMB_ABus_UNCONNECTED;
  wire [0:3]NLW_ilmb_bram_if_cntlr_LMB_BE_UNCONNECTED;
  wire NLW_ilmb_v10_LMB_CE_UNCONNECTED;
  wire NLW_ilmb_v10_LMB_Clk_UNCONNECTED;
  wire NLW_ilmb_v10_LMB_ReadStrobe_UNCONNECTED;
  wire NLW_ilmb_v10_LMB_Rst_UNCONNECTED;
  wire NLW_ilmb_v10_LMB_UE_UNCONNECTED;
  wire NLW_ilmb_v10_LMB_Wait_UNCONNECTED;
  wire NLW_ilmb_v10_LMB_WriteStrobe_UNCONNECTED;
  wire NLW_ilmb_v10_M_ReadStrobe_UNCONNECTED;
  wire NLW_ilmb_v10_M_WriteStrobe_UNCONNECTED;
  wire NLW_ilmb_v10_SYS_Rst_UNCONNECTED;
  wire [0:31]NLW_ilmb_v10_LMB_ABus_UNCONNECTED;
  wire [0:3]NLW_ilmb_v10_LMB_BE_UNCONNECTED;
  wire [0:31]NLW_ilmb_v10_M_ABus_UNCONNECTED;
  wire [0:3]NLW_ilmb_v10_M_BE_UNCONNECTED;
  wire [0:0]NLW_ilmb_v10_Sl_CE_UNCONNECTED;
  wire [0:0]NLW_ilmb_v10_Sl_UE_UNCONNECTED;
  wire [0:0]NLW_ilmb_v10_Sl_Wait_UNCONNECTED;
  wire NLW_lmb_bram_rsta_UNCONNECTED;
  wire NLW_lmb_bram_rsta_busy_UNCONNECTED;
  wire NLW_lmb_bram_rstb_UNCONNECTED;
  wire NLW_lmb_bram_rstb_busy_UNCONNECTED;
  wire [31:0]NLW_lmb_bram_addra_UNCONNECTED;
  wire [31:0]NLW_lmb_bram_addrb_UNCONNECTED;

  (* BMM_INFO_ADDRESS_SPACE = "byte  0x00000000 32 > system microblaze_0_local_memory/lmb_bram" *) 
  (* IMPORTED_FROM = "c:/Users/lesag/Documents/University/Personal_Projects/camera-filters/vivado/spartan_cam.srcs/sources_1/bd/system/ip/system_dlmb_bram_if_cntlr_0/system_dlmb_bram_if_cntlr_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* KEEP_HIERARCHY = "yes" *) 
  (* X_CORE_INFO = "lmb_bram_if_cntlr,Vivado 2020.1" *) 
  system_dlmb_bram_if_cntlr_0 dlmb_bram_if_cntlr
       (.BRAM_Addr_A({NLW_dlmb_bram_if_cntlr_BRAM_Addr_A_UNCONNECTED[0:18],microblaze_0_dlmb_cntlr_ADDR[19:29],NLW_dlmb_bram_if_cntlr_BRAM_Addr_A_UNCONNECTED[30:31]}),
        .BRAM_Clk_A(microblaze_0_dlmb_cntlr_CLK),
        .BRAM_Din_A({microblaze_0_dlmb_cntlr_DOUT[31],microblaze_0_dlmb_cntlr_DOUT[30],microblaze_0_dlmb_cntlr_DOUT[29],microblaze_0_dlmb_cntlr_DOUT[28],microblaze_0_dlmb_cntlr_DOUT[27],microblaze_0_dlmb_cntlr_DOUT[26],microblaze_0_dlmb_cntlr_DOUT[25],microblaze_0_dlmb_cntlr_DOUT[24],microblaze_0_dlmb_cntlr_DOUT[23],microblaze_0_dlmb_cntlr_DOUT[22],microblaze_0_dlmb_cntlr_DOUT[21],microblaze_0_dlmb_cntlr_DOUT[20],microblaze_0_dlmb_cntlr_DOUT[19],microblaze_0_dlmb_cntlr_DOUT[18],microblaze_0_dlmb_cntlr_DOUT[17],microblaze_0_dlmb_cntlr_DOUT[16],microblaze_0_dlmb_cntlr_DOUT[15],microblaze_0_dlmb_cntlr_DOUT[14],microblaze_0_dlmb_cntlr_DOUT[13],microblaze_0_dlmb_cntlr_DOUT[12],microblaze_0_dlmb_cntlr_DOUT[11],microblaze_0_dlmb_cntlr_DOUT[10],microblaze_0_dlmb_cntlr_DOUT[9],microblaze_0_dlmb_cntlr_DOUT[8],microblaze_0_dlmb_cntlr_DOUT[7],microblaze_0_dlmb_cntlr_DOUT[6],microblaze_0_dlmb_cntlr_DOUT[5],microblaze_0_dlmb_cntlr_DOUT[4],microblaze_0_dlmb_cntlr_DOUT[3],microblaze_0_dlmb_cntlr_DOUT[2],microblaze_0_dlmb_cntlr_DOUT[1],microblaze_0_dlmb_cntlr_DOUT[0]}),
        .BRAM_Dout_A(microblaze_0_dlmb_cntlr_DIN),
        .BRAM_EN_A(microblaze_0_dlmb_cntlr_EN),
        .BRAM_Rst_A(NLW_dlmb_bram_if_cntlr_BRAM_Rst_A_UNCONNECTED),
        .BRAM_WEN_A(microblaze_0_dlmb_cntlr_WE),
        .LMB_ABus({NLW_dlmb_bram_if_cntlr_LMB_ABus_UNCONNECTED[0],microblaze_0_dlmb_bus_ABUS[1],NLW_dlmb_bram_if_cntlr_LMB_ABus_UNCONNECTED[2:18],microblaze_0_dlmb_bus_ABUS[19:29],NLW_dlmb_bram_if_cntlr_LMB_ABus_UNCONNECTED[30:31]}),
        .LMB_AddrStrobe(microblaze_0_dlmb_bus_ADDRSTROBE),
        .LMB_BE(microblaze_0_dlmb_bus_BE),
        .LMB_Clk(clk_out1),
        .LMB_ReadStrobe(NLW_dlmb_bram_if_cntlr_LMB_ReadStrobe_UNCONNECTED),
        .LMB_Rst(bus_struct_reset),
        .LMB_WriteDBus(microblaze_0_dlmb_bus_WRITEDBUS),
        .LMB_WriteStrobe(microblaze_0_dlmb_bus_WRITESTROBE),
        .Sl_CE(NLW_dlmb_bram_if_cntlr_Sl_CE_UNCONNECTED),
        .Sl_DBus(microblaze_0_dlmb_bus_READDBUS),
        .Sl_Ready(microblaze_0_dlmb_bus_READY),
        .Sl_UE(NLW_dlmb_bram_if_cntlr_Sl_UE_UNCONNECTED),
        .Sl_Wait(NLW_dlmb_bram_if_cntlr_Sl_Wait_UNCONNECTED));
  (* IMPORTED_FROM = "c:/Users/lesag/Documents/University/Personal_Projects/camera-filters/vivado/spartan_cam.srcs/sources_1/bd/system/ip/system_dlmb_v10_0/system_dlmb_v10_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* X_CORE_INFO = "lmb_v10,Vivado 2020.1" *) 
  system_dlmb_v10_0 dlmb_v10
       (.LMB_ABus({NLW_dlmb_v10_LMB_ABus_UNCONNECTED[0],microblaze_0_dlmb_bus_ABUS[1],NLW_dlmb_v10_LMB_ABus_UNCONNECTED[2:18],microblaze_0_dlmb_bus_ABUS[19:29],NLW_dlmb_v10_LMB_ABus_UNCONNECTED[30:31]}),
        .LMB_AddrStrobe(microblaze_0_dlmb_bus_ADDRSTROBE),
        .LMB_BE(microblaze_0_dlmb_bus_BE),
        .LMB_CE(NLW_dlmb_v10_LMB_CE_UNCONNECTED),
        .LMB_Clk(NLW_dlmb_v10_LMB_Clk_UNCONNECTED),
        .LMB_ReadDBus(DLMB_readdbus),
        .LMB_ReadStrobe(NLW_dlmb_v10_LMB_ReadStrobe_UNCONNECTED),
        .LMB_Ready(DLMB_ready),
        .LMB_Rst(NLW_dlmb_v10_LMB_Rst_UNCONNECTED),
        .LMB_UE(NLW_dlmb_v10_LMB_UE_UNCONNECTED),
        .LMB_Wait(NLW_dlmb_v10_LMB_Wait_UNCONNECTED),
        .LMB_WriteDBus(microblaze_0_dlmb_bus_WRITEDBUS),
        .LMB_WriteStrobe(microblaze_0_dlmb_bus_WRITESTROBE),
        .M_ABus({NLW_dlmb_v10_M_ABus_UNCONNECTED[0],DLMB_abus[1],NLW_dlmb_v10_M_ABus_UNCONNECTED[2:18],DLMB_abus[19:29],NLW_dlmb_v10_M_ABus_UNCONNECTED[30:31]}),
        .M_AddrStrobe(DLMB_addrstrobe),
        .M_BE(DLMB_be),
        .M_DBus(DLMB_writedbus),
        .M_ReadStrobe(NLW_dlmb_v10_M_ReadStrobe_UNCONNECTED),
        .M_WriteStrobe(DLMB_writestrobe),
        .SYS_Rst(NLW_dlmb_v10_SYS_Rst_UNCONNECTED),
        .Sl_CE(NLW_dlmb_v10_Sl_CE_UNCONNECTED[0]),
        .Sl_DBus(microblaze_0_dlmb_bus_READDBUS),
        .Sl_Ready(microblaze_0_dlmb_bus_READY),
        .Sl_UE(NLW_dlmb_v10_Sl_UE_UNCONNECTED[0]),
        .Sl_Wait(NLW_dlmb_v10_Sl_Wait_UNCONNECTED[0]));
  (* IMPORTED_FROM = "c:/Users/lesag/Documents/University/Personal_Projects/camera-filters/vivado/spartan_cam.srcs/sources_1/bd/system/ip/system_ilmb_bram_if_cntlr_0/system_ilmb_bram_if_cntlr_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* X_CORE_INFO = "lmb_bram_if_cntlr,Vivado 2020.1" *) 
  system_ilmb_bram_if_cntlr_0 ilmb_bram_if_cntlr
       (.BRAM_Addr_A({NLW_ilmb_bram_if_cntlr_BRAM_Addr_A_UNCONNECTED[0:18],microblaze_0_ilmb_cntlr_ADDR[19:29],NLW_ilmb_bram_if_cntlr_BRAM_Addr_A_UNCONNECTED[30:31]}),
        .BRAM_Clk_A(microblaze_0_ilmb_cntlr_CLK),
        .BRAM_Din_A({microblaze_0_ilmb_cntlr_DOUT[31],microblaze_0_ilmb_cntlr_DOUT[30],microblaze_0_ilmb_cntlr_DOUT[29],microblaze_0_ilmb_cntlr_DOUT[28],microblaze_0_ilmb_cntlr_DOUT[27],microblaze_0_ilmb_cntlr_DOUT[26],microblaze_0_ilmb_cntlr_DOUT[25],microblaze_0_ilmb_cntlr_DOUT[24],microblaze_0_ilmb_cntlr_DOUT[23],microblaze_0_ilmb_cntlr_DOUT[22],microblaze_0_ilmb_cntlr_DOUT[21],microblaze_0_ilmb_cntlr_DOUT[20],microblaze_0_ilmb_cntlr_DOUT[19],microblaze_0_ilmb_cntlr_DOUT[18],microblaze_0_ilmb_cntlr_DOUT[17],microblaze_0_ilmb_cntlr_DOUT[16],microblaze_0_ilmb_cntlr_DOUT[15],microblaze_0_ilmb_cntlr_DOUT[14],microblaze_0_ilmb_cntlr_DOUT[13],microblaze_0_ilmb_cntlr_DOUT[12],microblaze_0_ilmb_cntlr_DOUT[11],microblaze_0_ilmb_cntlr_DOUT[10],microblaze_0_ilmb_cntlr_DOUT[9],microblaze_0_ilmb_cntlr_DOUT[8],microblaze_0_ilmb_cntlr_DOUT[7],microblaze_0_ilmb_cntlr_DOUT[6],microblaze_0_ilmb_cntlr_DOUT[5],microblaze_0_ilmb_cntlr_DOUT[4],microblaze_0_ilmb_cntlr_DOUT[3],microblaze_0_ilmb_cntlr_DOUT[2],microblaze_0_ilmb_cntlr_DOUT[1],microblaze_0_ilmb_cntlr_DOUT[0]}),
        .BRAM_Dout_A(microblaze_0_ilmb_cntlr_DIN),
        .BRAM_EN_A(microblaze_0_ilmb_cntlr_EN),
        .BRAM_Rst_A(NLW_ilmb_bram_if_cntlr_BRAM_Rst_A_UNCONNECTED),
        .BRAM_WEN_A(microblaze_0_ilmb_cntlr_WE),
        .LMB_ABus({NLW_ilmb_bram_if_cntlr_LMB_ABus_UNCONNECTED[0:18],microblaze_0_ilmb_bus_ABUS[19:29],NLW_ilmb_bram_if_cntlr_LMB_ABus_UNCONNECTED[30:31]}),
        .LMB_AddrStrobe(microblaze_0_ilmb_bus_ADDRSTROBE),
        .LMB_BE(NLW_ilmb_bram_if_cntlr_LMB_BE_UNCONNECTED[0:3]),
        .LMB_Clk(clk_out1),
        .LMB_ReadStrobe(NLW_ilmb_bram_if_cntlr_LMB_ReadStrobe_UNCONNECTED),
        .LMB_Rst(bus_struct_reset),
        .LMB_WriteDBus(microblaze_0_ilmb_bus_WRITEDBUS),
        .LMB_WriteStrobe(NLW_ilmb_bram_if_cntlr_LMB_WriteStrobe_UNCONNECTED),
        .Sl_CE(NLW_ilmb_bram_if_cntlr_Sl_CE_UNCONNECTED),
        .Sl_DBus(microblaze_0_ilmb_bus_READDBUS),
        .Sl_Ready(microblaze_0_ilmb_bus_READY),
        .Sl_UE(NLW_ilmb_bram_if_cntlr_Sl_UE_UNCONNECTED),
        .Sl_Wait(NLW_ilmb_bram_if_cntlr_Sl_Wait_UNCONNECTED));
  (* IMPORTED_FROM = "c:/Users/lesag/Documents/University/Personal_Projects/camera-filters/vivado/spartan_cam.srcs/sources_1/bd/system/ip/system_ilmb_v10_0/system_ilmb_v10_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* X_CORE_INFO = "lmb_v10,Vivado 2020.1" *) 
  system_ilmb_v10_0 ilmb_v10
       (.LMB_ABus({NLW_ilmb_v10_LMB_ABus_UNCONNECTED[0:18],microblaze_0_ilmb_bus_ABUS[19:29],NLW_ilmb_v10_LMB_ABus_UNCONNECTED[30:31]}),
        .LMB_AddrStrobe(microblaze_0_ilmb_bus_ADDRSTROBE),
        .LMB_BE(NLW_ilmb_v10_LMB_BE_UNCONNECTED[0:3]),
        .LMB_CE(NLW_ilmb_v10_LMB_CE_UNCONNECTED),
        .LMB_Clk(NLW_ilmb_v10_LMB_Clk_UNCONNECTED),
        .LMB_ReadDBus(ILMB_readdbus),
        .LMB_ReadStrobe(NLW_ilmb_v10_LMB_ReadStrobe_UNCONNECTED),
        .LMB_Ready(ILMB_ready),
        .LMB_Rst(NLW_ilmb_v10_LMB_Rst_UNCONNECTED),
        .LMB_UE(NLW_ilmb_v10_LMB_UE_UNCONNECTED),
        .LMB_Wait(NLW_ilmb_v10_LMB_Wait_UNCONNECTED),
        .LMB_WriteDBus(microblaze_0_ilmb_bus_WRITEDBUS),
        .LMB_WriteStrobe(NLW_ilmb_v10_LMB_WriteStrobe_UNCONNECTED),
        .M_ABus({NLW_ilmb_v10_M_ABus_UNCONNECTED[0:18],ILMB_abus[19:29],NLW_ilmb_v10_M_ABus_UNCONNECTED[30:31]}),
        .M_AddrStrobe(ILMB_addrstrobe),
        .M_BE(NLW_ilmb_v10_M_BE_UNCONNECTED[0:3]),
        .M_DBus({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .M_ReadStrobe(NLW_ilmb_v10_M_ReadStrobe_UNCONNECTED),
        .M_WriteStrobe(NLW_ilmb_v10_M_WriteStrobe_UNCONNECTED),
        .SYS_Rst(NLW_ilmb_v10_SYS_Rst_UNCONNECTED),
        .Sl_CE(NLW_ilmb_v10_Sl_CE_UNCONNECTED[0]),
        .Sl_DBus(microblaze_0_ilmb_bus_READDBUS),
        .Sl_Ready(microblaze_0_ilmb_bus_READY),
        .Sl_UE(NLW_ilmb_v10_Sl_UE_UNCONNECTED[0]),
        .Sl_Wait(NLW_ilmb_v10_Sl_Wait_UNCONNECTED[0]));
  (* IMPORTED_FROM = "c:/Users/lesag/Documents/University/Personal_Projects/camera-filters/vivado/spartan_cam.srcs/sources_1/bd/system/ip/system_lmb_bram_0/system_lmb_bram_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* X_CORE_INFO = "blk_mem_gen_v8_4_4,Vivado 2020.1" *) 
  system_lmb_bram_0 lmb_bram
       (.addra({NLW_lmb_bram_addra_UNCONNECTED[31:13],microblaze_0_dlmb_cntlr_ADDR[19],microblaze_0_dlmb_cntlr_ADDR[20],microblaze_0_dlmb_cntlr_ADDR[21],microblaze_0_dlmb_cntlr_ADDR[22],microblaze_0_dlmb_cntlr_ADDR[23],microblaze_0_dlmb_cntlr_ADDR[24],microblaze_0_dlmb_cntlr_ADDR[25],microblaze_0_dlmb_cntlr_ADDR[26],microblaze_0_dlmb_cntlr_ADDR[27],microblaze_0_dlmb_cntlr_ADDR[28],microblaze_0_dlmb_cntlr_ADDR[29],NLW_lmb_bram_addra_UNCONNECTED[1:0]}),
        .addrb({NLW_lmb_bram_addrb_UNCONNECTED[31:13],microblaze_0_ilmb_cntlr_ADDR[19],microblaze_0_ilmb_cntlr_ADDR[20],microblaze_0_ilmb_cntlr_ADDR[21],microblaze_0_ilmb_cntlr_ADDR[22],microblaze_0_ilmb_cntlr_ADDR[23],microblaze_0_ilmb_cntlr_ADDR[24],microblaze_0_ilmb_cntlr_ADDR[25],microblaze_0_ilmb_cntlr_ADDR[26],microblaze_0_ilmb_cntlr_ADDR[27],microblaze_0_ilmb_cntlr_ADDR[28],microblaze_0_ilmb_cntlr_ADDR[29],NLW_lmb_bram_addrb_UNCONNECTED[1:0]}),
        .clka(microblaze_0_dlmb_cntlr_CLK),
        .clkb(microblaze_0_ilmb_cntlr_CLK),
        .dina({microblaze_0_dlmb_cntlr_DIN[0],microblaze_0_dlmb_cntlr_DIN[1],microblaze_0_dlmb_cntlr_DIN[2],microblaze_0_dlmb_cntlr_DIN[3],microblaze_0_dlmb_cntlr_DIN[4],microblaze_0_dlmb_cntlr_DIN[5],microblaze_0_dlmb_cntlr_DIN[6],microblaze_0_dlmb_cntlr_DIN[7],microblaze_0_dlmb_cntlr_DIN[8],microblaze_0_dlmb_cntlr_DIN[9],microblaze_0_dlmb_cntlr_DIN[10],microblaze_0_dlmb_cntlr_DIN[11],microblaze_0_dlmb_cntlr_DIN[12],microblaze_0_dlmb_cntlr_DIN[13],microblaze_0_dlmb_cntlr_DIN[14],microblaze_0_dlmb_cntlr_DIN[15],microblaze_0_dlmb_cntlr_DIN[16],microblaze_0_dlmb_cntlr_DIN[17],microblaze_0_dlmb_cntlr_DIN[18],microblaze_0_dlmb_cntlr_DIN[19],microblaze_0_dlmb_cntlr_DIN[20],microblaze_0_dlmb_cntlr_DIN[21],microblaze_0_dlmb_cntlr_DIN[22],microblaze_0_dlmb_cntlr_DIN[23],microblaze_0_dlmb_cntlr_DIN[24],microblaze_0_dlmb_cntlr_DIN[25],microblaze_0_dlmb_cntlr_DIN[26],microblaze_0_dlmb_cntlr_DIN[27],microblaze_0_dlmb_cntlr_DIN[28],microblaze_0_dlmb_cntlr_DIN[29],microblaze_0_dlmb_cntlr_DIN[30],microblaze_0_dlmb_cntlr_DIN[31]}),
        .dinb({microblaze_0_ilmb_cntlr_DIN[0],microblaze_0_ilmb_cntlr_DIN[1],microblaze_0_ilmb_cntlr_DIN[2],microblaze_0_ilmb_cntlr_DIN[3],microblaze_0_ilmb_cntlr_DIN[4],microblaze_0_ilmb_cntlr_DIN[5],microblaze_0_ilmb_cntlr_DIN[6],microblaze_0_ilmb_cntlr_DIN[7],microblaze_0_ilmb_cntlr_DIN[8],microblaze_0_ilmb_cntlr_DIN[9],microblaze_0_ilmb_cntlr_DIN[10],microblaze_0_ilmb_cntlr_DIN[11],microblaze_0_ilmb_cntlr_DIN[12],microblaze_0_ilmb_cntlr_DIN[13],microblaze_0_ilmb_cntlr_DIN[14],microblaze_0_ilmb_cntlr_DIN[15],microblaze_0_ilmb_cntlr_DIN[16],microblaze_0_ilmb_cntlr_DIN[17],microblaze_0_ilmb_cntlr_DIN[18],microblaze_0_ilmb_cntlr_DIN[19],microblaze_0_ilmb_cntlr_DIN[20],microblaze_0_ilmb_cntlr_DIN[21],microblaze_0_ilmb_cntlr_DIN[22],microblaze_0_ilmb_cntlr_DIN[23],microblaze_0_ilmb_cntlr_DIN[24],microblaze_0_ilmb_cntlr_DIN[25],microblaze_0_ilmb_cntlr_DIN[26],microblaze_0_ilmb_cntlr_DIN[27],microblaze_0_ilmb_cntlr_DIN[28],microblaze_0_ilmb_cntlr_DIN[29],microblaze_0_ilmb_cntlr_DIN[30],microblaze_0_ilmb_cntlr_DIN[31]}),
        .douta(microblaze_0_dlmb_cntlr_DOUT),
        .doutb(microblaze_0_ilmb_cntlr_DOUT),
        .ena(microblaze_0_dlmb_cntlr_EN),
        .enb(microblaze_0_ilmb_cntlr_EN),
        .rsta(NLW_lmb_bram_rsta_UNCONNECTED),
        .rsta_busy(NLW_lmb_bram_rsta_busy_UNCONNECTED),
        .rstb(NLW_lmb_bram_rstb_UNCONNECTED),
        .rstb_busy(NLW_lmb_bram_rstb_busy_UNCONNECTED),
        .wea({microblaze_0_dlmb_cntlr_WE[0],microblaze_0_dlmb_cntlr_WE[1],microblaze_0_dlmb_cntlr_WE[2],microblaze_0_dlmb_cntlr_WE[3]}),
        .web({microblaze_0_ilmb_cntlr_WE[0],microblaze_0_ilmb_cntlr_WE[1],microblaze_0_ilmb_cntlr_WE[2],microblaze_0_ilmb_cntlr_WE[3]}));
endmodule

(* HW_HANDOFF = "system.hwdef" *) 
module system
   (TMDS_0_clk_n,
    TMDS_0_clk_p,
    TMDS_0_data_n,
    TMDS_0_data_p,
    UART_0_rxd,
    UART_0_txd,
    buttons,
    cam_gpio,
    cam_iic_scl_i,
    cam_iic_scl_o,
    cam_iic_scl_t,
    cam_iic_sda_i,
    cam_iic_sda_o,
    cam_iic_sda_t,
    clk_in1_0,
    clk_rxn_0,
    clk_rxp_0,
    data_lp_n_0,
    data_lp_p_0,
    data_rxn_0,
    data_rxp_0,
    led_tri_o);
  (* X_INTERFACE_INFO = "digilentinc.com:interface:tmds:1.0 TMDS_0 CLK_N" *) output TMDS_0_clk_n;
  (* X_INTERFACE_INFO = "digilentinc.com:interface:tmds:1.0 TMDS_0 CLK_P" *) output TMDS_0_clk_p;
  (* X_INTERFACE_INFO = "digilentinc.com:interface:tmds:1.0 TMDS_0 DATA_N" *) output [2:0]TMDS_0_data_n;
  (* X_INTERFACE_INFO = "digilentinc.com:interface:tmds:1.0 TMDS_0 DATA_P" *) output [2:0]TMDS_0_data_p;
  (* X_INTERFACE_INFO = "xilinx.com:interface:uart:1.0 UART_0 RxD" *) input UART_0_rxd;
  (* X_INTERFACE_INFO = "xilinx.com:interface:uart:1.0 UART_0 TxD" *) output UART_0_txd;
  input [1:0]buttons;
  output [0:0]cam_gpio;
  (* X_INTERFACE_INFO = "xilinx.com:interface:iic:1.0 cam_iic SCL_I" *) input cam_iic_scl_i;
  (* X_INTERFACE_INFO = "xilinx.com:interface:iic:1.0 cam_iic SCL_O" *) output cam_iic_scl_o;
  (* X_INTERFACE_INFO = "xilinx.com:interface:iic:1.0 cam_iic SCL_T" *) output cam_iic_scl_t;
  (* X_INTERFACE_INFO = "xilinx.com:interface:iic:1.0 cam_iic SDA_I" *) input cam_iic_sda_i;
  (* X_INTERFACE_INFO = "xilinx.com:interface:iic:1.0 cam_iic SDA_O" *) output cam_iic_sda_o;
  (* X_INTERFACE_INFO = "xilinx.com:interface:iic:1.0 cam_iic SDA_T" *) output cam_iic_sda_t;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLK.CLK_IN1_0 CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME CLK.CLK_IN1_0, CLK_DOMAIN system_clk_in1_0, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, INSERT_VIP 0, PHASE 0.000" *) input clk_in1_0;
  input clk_rxn_0;
  input clk_rxp_0;
  input [0:0]data_lp_n_0;
  input [0:0]data_lp_p_0;
  input [1:0]data_rxn_0;
  input [1:0]data_rxp_0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:gpio:1.0 led TRI_O" *) output [1:0]led_tri_o;

  wire TMDS_0_clk_n;
  wire TMDS_0_clk_p;
  wire [2:0]TMDS_0_data_n;
  wire [2:0]TMDS_0_data_p;
  wire UART_0_rxd;
  wire UART_0_txd;
  wire [23:0]bayer2rgb_0_data_out;
  wire bayer2rgb_0_de_out;
  wire bayer2rgb_0_hsync_out;
  wire bayer2rgb_0_vsync_out;
  wire [1:0]buttons;
  wire [0:0]cam_gpio;
  wire cam_iic_scl_i;
  wire cam_iic_scl_o;
  wire cam_iic_scl_t;
  wire cam_iic_sda_i;
  wire cam_iic_sda_o;
  wire cam_iic_sda_t;
  wire clk_in1_0;
  wire clk_rxn_0;
  wire clk_rxp_0;
  wire clk_wiz_0_locked;
  wire clk_wiz_1_clk_out1;
  wire clk_wiz_1_clk_out2;
  wire [7:0]csi2_d_phy_rx_0_RX_MIPI_PPI_DL0_RXDATAHS;
  wire csi2_d_phy_rx_0_RX_MIPI_PPI_DL0_RXVALIDHS;
  wire [7:0]csi2_d_phy_rx_0_RX_MIPI_PPI_DL1_RXDATAHS;
  wire csi2_d_phy_rx_0_RX_MIPI_PPI_DL1_RXVALIDHS;
  wire csi2_d_phy_rx_0_rxbyteclkhs;
  wire [10:0]csi2dvp_0_hdata;
  wire [9:0]csi2dvp_0_vdata;
  wire csi2dvp_0_vid_active_video;
  wire [7:0]csi2dvp_0_vid_data;
  wire csi2dvp_0_vid_vsync;
  wire [15:0]csi_to_axis_0_M_AXIS_TDATA;
  wire csi_to_axis_0_M_AXIS_TLAST;
  wire csi_to_axis_0_M_AXIS_TUSER;
  wire csi_to_axis_0_M_AXIS_TVALID;
  wire csi_to_axis_0_data_err_TRIG;
  wire [0:0]data_lp_n_0;
  wire [0:0]data_lp_p_0;
  wire [1:0]data_rxn_0;
  wire [1:0]data_rxp_0;
  wire [23:0]gamma_correction_0_rgb_data_out;
  wire [1:0]led_tri_o;
  wire mdm_1_debug_sys_rst;
  wire microblaze_0_Clk;
  wire [31:0]microblaze_0_M_AXI_DP_ARADDR;
  wire microblaze_0_M_AXI_DP_ARREADY;
  wire microblaze_0_M_AXI_DP_ARVALID;
  wire microblaze_0_M_AXI_DP_AWREADY;
  wire microblaze_0_M_AXI_DP_AWVALID;
  wire microblaze_0_M_AXI_DP_BVALID;
  wire [31:0]microblaze_0_M_AXI_DP_RDATA;
  wire microblaze_0_M_AXI_DP_RVALID;
  wire [31:0]microblaze_0_M_AXI_DP_WDATA;
  wire microblaze_0_M_AXI_DP_WREADY;
  wire microblaze_0_M_AXI_DP_WVALID;
  wire [8:0]microblaze_0_axi_periph_M00_AXI_ARADDR;
  wire microblaze_0_axi_periph_M00_AXI_ARREADY;
  wire microblaze_0_axi_periph_M00_AXI_ARVALID;
  wire microblaze_0_axi_periph_M00_AXI_AWREADY;
  wire microblaze_0_axi_periph_M00_AXI_AWVALID;
  wire microblaze_0_axi_periph_M00_AXI_BREADY;
  wire microblaze_0_axi_periph_M00_AXI_BVALID;
  wire [31:0]microblaze_0_axi_periph_M00_AXI_RDATA;
  wire microblaze_0_axi_periph_M00_AXI_RREADY;
  wire microblaze_0_axi_periph_M00_AXI_RVALID;
  wire [31:0]microblaze_0_axi_periph_M00_AXI_WDATA;
  wire microblaze_0_axi_periph_M00_AXI_WREADY;
  wire microblaze_0_axi_periph_M00_AXI_WVALID;
  wire microblaze_0_axi_periph_M01_AXI_ARREADY;
  wire microblaze_0_axi_periph_M01_AXI_ARVALID;
  wire [3:0]microblaze_0_axi_periph_M01_AXI_AWADDR;
  wire microblaze_0_axi_periph_M01_AXI_AWREADY;
  wire microblaze_0_axi_periph_M01_AXI_AWVALID;
  wire microblaze_0_axi_periph_M01_AXI_BREADY;
  wire microblaze_0_axi_periph_M01_AXI_BVALID;
  wire [31:0]microblaze_0_axi_periph_M01_AXI_RDATA;
  wire microblaze_0_axi_periph_M01_AXI_RREADY;
  wire microblaze_0_axi_periph_M01_AXI_RVALID;
  wire [31:0]microblaze_0_axi_periph_M01_AXI_WDATA;
  wire microblaze_0_axi_periph_M01_AXI_WREADY;
  wire microblaze_0_axi_periph_M01_AXI_WVALID;
  wire [8:0]microblaze_0_axi_periph_M02_AXI_ARADDR;
  wire microblaze_0_axi_periph_M02_AXI_ARREADY;
  wire microblaze_0_axi_periph_M02_AXI_ARVALID;
  wire microblaze_0_axi_periph_M02_AXI_AWREADY;
  wire microblaze_0_axi_periph_M02_AXI_AWVALID;
  wire microblaze_0_axi_periph_M02_AXI_BREADY;
  wire microblaze_0_axi_periph_M02_AXI_BVALID;
  wire [31:0]microblaze_0_axi_periph_M02_AXI_RDATA;
  wire microblaze_0_axi_periph_M02_AXI_RREADY;
  wire microblaze_0_axi_periph_M02_AXI_RVALID;
  wire [31:0]microblaze_0_axi_periph_M02_AXI_WDATA;
  wire microblaze_0_axi_periph_M02_AXI_WREADY;
  wire microblaze_0_axi_periph_M02_AXI_WVALID;
  wire microblaze_0_debug_CAPTURE;
  wire microblaze_0_debug_CLK;
  wire [0:7]microblaze_0_debug_REG_EN;
  wire microblaze_0_debug_RST;
  wire microblaze_0_debug_SHIFT;
  wire microblaze_0_debug_TDI;
  wire microblaze_0_debug_TDO;
  wire microblaze_0_debug_UPDATE;
  wire [0:31]microblaze_0_dlmb_1_ABUS;
  wire microblaze_0_dlmb_1_ADDRSTROBE;
  wire [0:3]microblaze_0_dlmb_1_BE;
  wire [0:31]microblaze_0_dlmb_1_READDBUS;
  wire microblaze_0_dlmb_1_READY;
  wire [0:31]microblaze_0_dlmb_1_WRITEDBUS;
  wire microblaze_0_dlmb_1_WRITESTROBE;
  wire [0:31]microblaze_0_ilmb_1_ABUS;
  wire microblaze_0_ilmb_1_ADDRSTROBE;
  wire [0:31]microblaze_0_ilmb_1_READDBUS;
  wire microblaze_0_ilmb_1_READY;
  wire rst_clk_wiz_0_200M_bus_struct_reset;
  wire rst_clk_wiz_0_200M_interconnect_aresetn;
  wire rst_clk_wiz_0_200M_mb_reset;
  wire rst_clk_wiz_0_200M_peripheral_aresetn;
  wire [7:0]NLW_axi_gpio_0_s_axi_araddr_UNCONNECTED;
  wire [8:0]NLW_axi_gpio_0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_axi_gpio_0_s_axi_bresp_UNCONNECTED;
  wire [1:0]NLW_axi_gpio_0_s_axi_rresp_UNCONNECTED;
  wire [29:2]NLW_axi_gpio_0_s_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_axi_gpio_0_s_axi_wstrb_UNCONNECTED;
  wire NLW_axi_iic_0_iic2intc_irpt_UNCONNECTED;
  wire [0:0]NLW_axi_iic_0_gpo_UNCONNECTED;
  wire [8:0]NLW_axi_iic_0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_axi_iic_0_s_axi_bresp_UNCONNECTED;
  wire [30:11]NLW_axi_iic_0_s_axi_rdata_UNCONNECTED;
  wire [1:0]NLW_axi_iic_0_s_axi_rresp_UNCONNECTED;
  wire [30:11]NLW_axi_iic_0_s_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_axi_iic_0_s_axi_wstrb_UNCONNECTED;
  wire NLW_axi_uartlite_0_interrupt_UNCONNECTED;
  wire [3:0]NLW_axi_uartlite_0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_axi_uartlite_0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_axi_uartlite_0_s_axi_bresp_UNCONNECTED;
  wire [31:8]NLW_axi_uartlite_0_s_axi_rdata_UNCONNECTED;
  wire [1:0]NLW_axi_uartlite_0_s_axi_rresp_UNCONNECTED;
  wire [31:8]NLW_axi_uartlite_0_s_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_axi_uartlite_0_s_axi_wstrb_UNCONNECTED;
  wire NLW_bayer2rgb_0_hsync_in_UNCONNECTED;
  wire [0:0]NLW_bayer2rgb_0_hdata_UNCONNECTED;
  wire NLW_csi2_d_phy_rx_0_cl_enable_UNCONNECTED;
  wire NLW_csi2_d_phy_rx_0_cl_rxclkactivehs_UNCONNECTED;
  wire NLW_csi2_d_phy_rx_0_cl_stopstate_UNCONNECTED;
  wire NLW_csi2_d_phy_rx_0_dl0_enable_UNCONNECTED;
  wire NLW_csi2_d_phy_rx_0_dl0_rxactivehs_UNCONNECTED;
  wire NLW_csi2_d_phy_rx_0_dl0_rxsynchs_UNCONNECTED;
  wire NLW_csi2_d_phy_rx_0_dl1_enable_UNCONNECTED;
  wire NLW_csi2_d_phy_rx_0_dl1_rxactivehs_UNCONNECTED;
  wire NLW_csi2_d_phy_rx_0_dl1_rxsynchs_UNCONNECTED;
  wire NLW_csi2_d_phy_rx_0_dl2_enable_UNCONNECTED;
  wire NLW_csi2_d_phy_rx_0_dl2_rxactivehs_UNCONNECTED;
  wire NLW_csi2_d_phy_rx_0_dl2_rxsynchs_UNCONNECTED;
  wire NLW_csi2_d_phy_rx_0_dl2_rxvalidhs_UNCONNECTED;
  wire NLW_csi2_d_phy_rx_0_dl3_enable_UNCONNECTED;
  wire NLW_csi2_d_phy_rx_0_dl3_rxactivehs_UNCONNECTED;
  wire NLW_csi2_d_phy_rx_0_dl3_rxsynchs_UNCONNECTED;
  wire NLW_csi2_d_phy_rx_0_dl3_rxvalidhs_UNCONNECTED;
  wire NLW_csi2_d_phy_rx_0_trig_ack_UNCONNECTED;
  wire [7:0]NLW_csi2_d_phy_rx_0_dl2_datahs_UNCONNECTED;
  wire [7:0]NLW_csi2_d_phy_rx_0_dl3_datahs_UNCONNECTED;
  wire NLW_csi2dvp_0_s_axis_tready_UNCONNECTED;
  wire NLW_csi2dvp_0_vid_hsync_UNCONNECTED;
  wire [0:0]NLW_csi2dvp_0_hdata_UNCONNECTED;
  wire NLW_csi_to_axis_0_cl_enable_UNCONNECTED;
  wire NLW_csi_to_axis_0_cl_rxclkactivehs_UNCONNECTED;
  wire NLW_csi_to_axis_0_cl_stopstate_UNCONNECTED;
  wire NLW_csi_to_axis_0_dl0_enable_UNCONNECTED;
  wire NLW_csi_to_axis_0_dl0_rxactivehs_UNCONNECTED;
  wire NLW_csi_to_axis_0_dl0_rxsynchs_UNCONNECTED;
  wire NLW_csi_to_axis_0_dl1_enable_UNCONNECTED;
  wire NLW_csi_to_axis_0_dl1_rxactivehs_UNCONNECTED;
  wire NLW_csi_to_axis_0_dl1_rxsynchs_UNCONNECTED;
  wire NLW_csi_to_axis_0_m_axis_aclk_UNCONNECTED;
  wire NLW_csi_to_axis_0_m_axis_aresetn_UNCONNECTED;
  wire NLW_csi_to_axis_0_m_axis_tready_UNCONNECTED;
  wire NLW_csi_to_axis_0_trig_ack_UNCONNECTED;
  wire [2:0]NLW_gamma_correction_0_state_UNCONNECTED;
  wire NLW_mdm_1_Dbg_Disable_0_UNCONNECTED;
  wire NLW_microblaze_0_DCE_UNCONNECTED;
  wire NLW_microblaze_0_DUE_UNCONNECTED;
  wire NLW_microblaze_0_DWait_UNCONNECTED;
  wire NLW_microblaze_0_Dbg_Disable_UNCONNECTED;
  wire NLW_microblaze_0_ICE_UNCONNECTED;
  wire NLW_microblaze_0_IFetch_UNCONNECTED;
  wire NLW_microblaze_0_IUE_UNCONNECTED;
  wire NLW_microblaze_0_IWAIT_UNCONNECTED;
  wire NLW_microblaze_0_Interrupt_UNCONNECTED;
  wire NLW_microblaze_0_M_AXI_DP_BREADY_UNCONNECTED;
  wire NLW_microblaze_0_M_AXI_DP_RREADY_UNCONNECTED;
  wire NLW_microblaze_0_Read_Strobe_UNCONNECTED;
  wire [0:31]NLW_microblaze_0_Data_Addr_UNCONNECTED;
  wire [0:31]NLW_microblaze_0_Instr_Addr_UNCONNECTED;
  wire [0:1]NLW_microblaze_0_Interrupt_Ack_UNCONNECTED;
  wire [0:31]NLW_microblaze_0_Interrupt_Address_UNCONNECTED;
  wire [15:9]NLW_microblaze_0_M_AXI_DP_ARADDR_UNCONNECTED;
  wire [2:0]NLW_microblaze_0_M_AXI_DP_ARPROT_UNCONNECTED;
  wire [31:0]NLW_microblaze_0_M_AXI_DP_AWADDR_UNCONNECTED;
  wire [2:0]NLW_microblaze_0_M_AXI_DP_AWPROT_UNCONNECTED;
  wire [1:0]NLW_microblaze_0_M_AXI_DP_BRESP_UNCONNECTED;
  wire [1:0]NLW_microblaze_0_M_AXI_DP_RRESP_UNCONNECTED;
  wire [29:11]NLW_microblaze_0_M_AXI_DP_WDATA_UNCONNECTED;
  wire [3:0]NLW_microblaze_0_M_AXI_DP_WSTRB_UNCONNECTED;
  wire NLW_microblaze_0_axi_periph_M00_ACLK_UNCONNECTED;
  wire NLW_microblaze_0_axi_periph_M00_ARESETN_UNCONNECTED;
  wire NLW_microblaze_0_axi_periph_M01_ACLK_UNCONNECTED;
  wire NLW_microblaze_0_axi_periph_M01_ARESETN_UNCONNECTED;
  wire NLW_microblaze_0_axi_periph_M02_ACLK_UNCONNECTED;
  wire NLW_microblaze_0_axi_periph_M02_ARESETN_UNCONNECTED;
  wire NLW_microblaze_0_axi_periph_S00_ACLK_UNCONNECTED;
  wire NLW_microblaze_0_axi_periph_S00_ARESETN_UNCONNECTED;
  wire NLW_microblaze_0_axi_periph_S00_AXI_bready_UNCONNECTED;
  wire NLW_microblaze_0_axi_periph_S00_AXI_rready_UNCONNECTED;
  wire [31:9]NLW_microblaze_0_axi_periph_M00_AXI_araddr_UNCONNECTED;
  wire [31:0]NLW_microblaze_0_axi_periph_M00_AXI_awaddr_UNCONNECTED;
  wire [1:0]NLW_microblaze_0_axi_periph_M00_AXI_bresp_UNCONNECTED;
  wire [30:11]NLW_microblaze_0_axi_periph_M00_AXI_rdata_UNCONNECTED;
  wire [1:0]NLW_microblaze_0_axi_periph_M00_AXI_rresp_UNCONNECTED;
  wire [30:11]NLW_microblaze_0_axi_periph_M00_AXI_wdata_UNCONNECTED;
  wire [3:0]NLW_microblaze_0_axi_periph_M00_AXI_wstrb_UNCONNECTED;
  wire [31:0]NLW_microblaze_0_axi_periph_M01_AXI_araddr_UNCONNECTED;
  wire [31:0]NLW_microblaze_0_axi_periph_M01_AXI_awaddr_UNCONNECTED;
  wire [1:0]NLW_microblaze_0_axi_periph_M01_AXI_bresp_UNCONNECTED;
  wire [31:8]NLW_microblaze_0_axi_periph_M01_AXI_rdata_UNCONNECTED;
  wire [1:0]NLW_microblaze_0_axi_periph_M01_AXI_rresp_UNCONNECTED;
  wire [31:8]NLW_microblaze_0_axi_periph_M01_AXI_wdata_UNCONNECTED;
  wire [3:0]NLW_microblaze_0_axi_periph_M01_AXI_wstrb_UNCONNECTED;
  wire [31:0]NLW_microblaze_0_axi_periph_M02_AXI_araddr_UNCONNECTED;
  wire [31:0]NLW_microblaze_0_axi_periph_M02_AXI_awaddr_UNCONNECTED;
  wire [1:0]NLW_microblaze_0_axi_periph_M02_AXI_bresp_UNCONNECTED;
  wire [1:0]NLW_microblaze_0_axi_periph_M02_AXI_rresp_UNCONNECTED;
  wire [29:2]NLW_microblaze_0_axi_periph_M02_AXI_wdata_UNCONNECTED;
  wire [3:0]NLW_microblaze_0_axi_periph_M02_AXI_wstrb_UNCONNECTED;
  wire [15:9]NLW_microblaze_0_axi_periph_S00_AXI_araddr_UNCONNECTED;
  wire [2:0]NLW_microblaze_0_axi_periph_S00_AXI_arprot_UNCONNECTED;
  wire [31:0]NLW_microblaze_0_axi_periph_S00_AXI_awaddr_UNCONNECTED;
  wire [2:0]NLW_microblaze_0_axi_periph_S00_AXI_awprot_UNCONNECTED;
  wire [1:0]NLW_microblaze_0_axi_periph_S00_AXI_bresp_UNCONNECTED;
  wire [1:0]NLW_microblaze_0_axi_periph_S00_AXI_rresp_UNCONNECTED;
  wire [29:11]NLW_microblaze_0_axi_periph_S00_AXI_wdata_UNCONNECTED;
  wire [3:0]NLW_microblaze_0_axi_periph_S00_AXI_wstrb_UNCONNECTED;
  wire NLW_microblaze_0_local_memory_DLMB_ce_UNCONNECTED;
  wire NLW_microblaze_0_local_memory_DLMB_readstrobe_UNCONNECTED;
  wire NLW_microblaze_0_local_memory_DLMB_ue_UNCONNECTED;
  wire NLW_microblaze_0_local_memory_DLMB_wait_UNCONNECTED;
  wire NLW_microblaze_0_local_memory_ILMB_ce_UNCONNECTED;
  wire NLW_microblaze_0_local_memory_ILMB_readstrobe_UNCONNECTED;
  wire NLW_microblaze_0_local_memory_ILMB_ue_UNCONNECTED;
  wire NLW_microblaze_0_local_memory_ILMB_wait_UNCONNECTED;
  wire [0:31]NLW_microblaze_0_local_memory_DLMB_abus_UNCONNECTED;
  wire [0:31]NLW_microblaze_0_local_memory_ILMB_abus_UNCONNECTED;
  wire NLW_rgb2dvi_0_aRst_n_UNCONNECTED;
  wire NLW_rst_clk_wiz_0_200M_aux_reset_in_UNCONNECTED;
  wire NLW_rst_clk_wiz_0_200M_dcm_locked_UNCONNECTED;
  wire [0:0]NLW_rst_clk_wiz_0_200M_peripheral_reset_UNCONNECTED;

  (* IMPORTED_FROM = "c:/Users/lesag/Documents/University/Personal_Projects/camera-filters/vivado/spartan_cam.srcs/sources_1/bd/system/ip/system_axi_gpio_0_0/system_axi_gpio_0_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* X_CORE_INFO = "axi_gpio,Vivado 2020.1" *) 
  system_axi_gpio_0_0 axi_gpio_0
       (.gpio_io_o(led_tri_o),
        .s_axi_aclk(microblaze_0_Clk),
        .s_axi_araddr({microblaze_0_axi_periph_M02_AXI_ARADDR[8],NLW_axi_gpio_0_s_axi_araddr_UNCONNECTED[7:4],microblaze_0_axi_periph_M02_AXI_ARADDR[3:2],NLW_axi_gpio_0_s_axi_araddr_UNCONNECTED[1:0]}),
        .s_axi_aresetn(rst_clk_wiz_0_200M_peripheral_aresetn),
        .s_axi_arready(microblaze_0_axi_periph_M02_AXI_ARREADY),
        .s_axi_arvalid(microblaze_0_axi_periph_M02_AXI_ARVALID),
        .s_axi_awaddr(NLW_axi_gpio_0_s_axi_awaddr_UNCONNECTED[8:0]),
        .s_axi_awready(microblaze_0_axi_periph_M02_AXI_AWREADY),
        .s_axi_awvalid(microblaze_0_axi_periph_M02_AXI_AWVALID),
        .s_axi_bready(microblaze_0_axi_periph_M02_AXI_BREADY),
        .s_axi_bresp(NLW_axi_gpio_0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(microblaze_0_axi_periph_M02_AXI_BVALID),
        .s_axi_rdata(microblaze_0_axi_periph_M02_AXI_RDATA),
        .s_axi_rready(microblaze_0_axi_periph_M02_AXI_RREADY),
        .s_axi_rresp(NLW_axi_gpio_0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(microblaze_0_axi_periph_M02_AXI_RVALID),
        .s_axi_wdata({microblaze_0_axi_periph_M02_AXI_WDATA[31:30],NLW_axi_gpio_0_s_axi_wdata_UNCONNECTED[29:2],microblaze_0_axi_periph_M02_AXI_WDATA[1:0]}),
        .s_axi_wready(microblaze_0_axi_periph_M02_AXI_WREADY),
        .s_axi_wstrb(NLW_axi_gpio_0_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wvalid(microblaze_0_axi_periph_M02_AXI_WVALID));
  (* IMPORTED_FROM = "c:/Users/lesag/Documents/University/Personal_Projects/camera-filters/vivado/spartan_cam.srcs/sources_1/bd/system/ip/system_axi_iic_0_0/system_axi_iic_0_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* X_CORE_INFO = "axi_iic,Vivado 2020.1" *) 
  system_axi_iic_0_0 axi_iic_0
       (.gpo(NLW_axi_iic_0_gpo_UNCONNECTED[0]),
        .iic2intc_irpt(NLW_axi_iic_0_iic2intc_irpt_UNCONNECTED),
        .s_axi_aclk(microblaze_0_Clk),
        .s_axi_araddr(microblaze_0_axi_periph_M00_AXI_ARADDR),
        .s_axi_aresetn(rst_clk_wiz_0_200M_peripheral_aresetn),
        .s_axi_arready(microblaze_0_axi_periph_M00_AXI_ARREADY),
        .s_axi_arvalid(microblaze_0_axi_periph_M00_AXI_ARVALID),
        .s_axi_awaddr(NLW_axi_iic_0_s_axi_awaddr_UNCONNECTED[8:0]),
        .s_axi_awready(microblaze_0_axi_periph_M00_AXI_AWREADY),
        .s_axi_awvalid(microblaze_0_axi_periph_M00_AXI_AWVALID),
        .s_axi_bready(microblaze_0_axi_periph_M00_AXI_BREADY),
        .s_axi_bresp(NLW_axi_iic_0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(microblaze_0_axi_periph_M00_AXI_BVALID),
        .s_axi_rdata({microblaze_0_axi_periph_M00_AXI_RDATA[31],NLW_axi_iic_0_s_axi_rdata_UNCONNECTED[30:11],microblaze_0_axi_periph_M00_AXI_RDATA[10:0]}),
        .s_axi_rready(microblaze_0_axi_periph_M00_AXI_RREADY),
        .s_axi_rresp(NLW_axi_iic_0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(microblaze_0_axi_periph_M00_AXI_RVALID),
        .s_axi_wdata({microblaze_0_axi_periph_M00_AXI_WDATA[31],NLW_axi_iic_0_s_axi_wdata_UNCONNECTED[30:11],microblaze_0_axi_periph_M00_AXI_WDATA[10:0]}),
        .s_axi_wready(microblaze_0_axi_periph_M00_AXI_WREADY),
        .s_axi_wstrb(NLW_axi_iic_0_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wvalid(microblaze_0_axi_periph_M00_AXI_WVALID),
        .scl_i(cam_iic_scl_i),
        .scl_o(cam_iic_scl_o),
        .scl_t(cam_iic_scl_t),
        .sda_i(cam_iic_sda_i),
        .sda_o(cam_iic_sda_o),
        .sda_t(cam_iic_sda_t));
  (* IMPORTED_FROM = "c:/Users/lesag/Documents/University/Personal_Projects/camera-filters/vivado/spartan_cam.srcs/sources_1/bd/system/ip/system_axi_uartlite_0_0/system_axi_uartlite_0_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* X_CORE_INFO = "axi_uartlite,Vivado 2020.1" *) 
  system_axi_uartlite_0_0 axi_uartlite_0
       (.interrupt(NLW_axi_uartlite_0_interrupt_UNCONNECTED),
        .rx(UART_0_rxd),
        .s_axi_aclk(microblaze_0_Clk),
        .s_axi_araddr(NLW_axi_uartlite_0_s_axi_araddr_UNCONNECTED[3:0]),
        .s_axi_aresetn(rst_clk_wiz_0_200M_peripheral_aresetn),
        .s_axi_arready(microblaze_0_axi_periph_M01_AXI_ARREADY),
        .s_axi_arvalid(microblaze_0_axi_periph_M01_AXI_ARVALID),
        .s_axi_awaddr({microblaze_0_axi_periph_M01_AXI_AWADDR[3:2],NLW_axi_uartlite_0_s_axi_awaddr_UNCONNECTED[1:0]}),
        .s_axi_awready(microblaze_0_axi_periph_M01_AXI_AWREADY),
        .s_axi_awvalid(microblaze_0_axi_periph_M01_AXI_AWVALID),
        .s_axi_bready(microblaze_0_axi_periph_M01_AXI_BREADY),
        .s_axi_bresp(NLW_axi_uartlite_0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(microblaze_0_axi_periph_M01_AXI_BVALID),
        .s_axi_rdata({NLW_axi_uartlite_0_s_axi_rdata_UNCONNECTED[31:8],microblaze_0_axi_periph_M01_AXI_RDATA[7:0]}),
        .s_axi_rready(microblaze_0_axi_periph_M01_AXI_RREADY),
        .s_axi_rresp(NLW_axi_uartlite_0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(microblaze_0_axi_periph_M01_AXI_RVALID),
        .s_axi_wdata({NLW_axi_uartlite_0_s_axi_wdata_UNCONNECTED[31:8],microblaze_0_axi_periph_M01_AXI_WDATA[7:0]}),
        .s_axi_wready(microblaze_0_axi_periph_M01_AXI_WREADY),
        .s_axi_wstrb(NLW_axi_uartlite_0_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wvalid(microblaze_0_axi_periph_M01_AXI_WVALID),
        .tx(UART_0_txd));
  (* IMPORTED_FROM = "c:/Users/lesag/Documents/University/Personal_Projects/camera-filters/vivado/spartan_cam.srcs/sources_1/bd/system/ip/system_bayer2rgb_0_0/system_bayer2rgb_0_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* X_CORE_INFO = "bayer2rgb,Vivado 2020.1" *) 
  system_bayer2rgb_0_0 bayer2rgb_0
       (.clk(clk_wiz_1_clk_out1),
        .data_in(csi2dvp_0_vid_data),
        .data_out(bayer2rgb_0_data_out),
        .de_in(csi2dvp_0_vid_active_video),
        .de_out(bayer2rgb_0_de_out),
        .hdata({csi2dvp_0_hdata[10:1],NLW_bayer2rgb_0_hdata_UNCONNECTED[0]}),
        .hsync_in(NLW_bayer2rgb_0_hsync_in_UNCONNECTED),
        .hsync_out(bayer2rgb_0_hsync_out),
        .vdata(csi2dvp_0_vdata),
        .vsync_in(csi2dvp_0_vid_vsync),
        .vsync_out(bayer2rgb_0_vsync_out));
  (* IMPORTED_FROM = "c:/Users/lesag/Documents/University/Personal_Projects/camera-filters/vivado/spartan_cam.srcs/sources_1/bd/system/ip/system_clk_wiz_0_1/system_clk_wiz_0_1.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  system_clk_wiz_0_1 clk_wiz_0
       (.clk_in1(clk_in1_0),
        .clk_out1(microblaze_0_Clk),
        .locked(clk_wiz_0_locked));
  (* IMPORTED_FROM = "c:/Users/lesag/Documents/University/Personal_Projects/camera-filters/vivado/spartan_cam.srcs/sources_1/bd/system/ip/system_clk_wiz_1_0/system_clk_wiz_1_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  system_clk_wiz_1_0 clk_wiz_1
       (.clk_in1(csi2_d_phy_rx_0_rxbyteclkhs),
        .clk_out1(clk_wiz_1_clk_out1),
        .clk_out2(clk_wiz_1_clk_out2));
  (* IMPORTED_FROM = "c:/Users/lesag/Documents/University/Personal_Projects/camera-filters/vivado/spartan_cam.srcs/sources_1/bd/system/ip/system_csi2_d_phy_rx_0_1/system_csi2_d_phy_rx_0_1.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* X_CORE_INFO = "csi2_d_phy_rx,Vivado 2020.1" *) 
  system_csi2_d_phy_rx_0_1 csi2_d_phy_rx_0
       (.cl_enable(NLW_csi2_d_phy_rx_0_cl_enable_UNCONNECTED),
        .cl_rxclkactivehs(NLW_csi2_d_phy_rx_0_cl_rxclkactivehs_UNCONNECTED),
        .cl_stopstate(NLW_csi2_d_phy_rx_0_cl_stopstate_UNCONNECTED),
        .clk_rxn(clk_rxn_0),
        .clk_rxp(clk_rxp_0),
        .data_lp_n(data_lp_n_0),
        .data_lp_p(data_lp_p_0),
        .data_rxn(data_rxn_0),
        .data_rxp(data_rxp_0),
        .dl0_datahs(csi2_d_phy_rx_0_RX_MIPI_PPI_DL0_RXDATAHS),
        .dl0_enable(NLW_csi2_d_phy_rx_0_dl0_enable_UNCONNECTED),
        .dl0_rxactivehs(NLW_csi2_d_phy_rx_0_dl0_rxactivehs_UNCONNECTED),
        .dl0_rxsynchs(NLW_csi2_d_phy_rx_0_dl0_rxsynchs_UNCONNECTED),
        .dl0_rxvalidhs(csi2_d_phy_rx_0_RX_MIPI_PPI_DL0_RXVALIDHS),
        .dl1_datahs(csi2_d_phy_rx_0_RX_MIPI_PPI_DL1_RXDATAHS),
        .dl1_enable(NLW_csi2_d_phy_rx_0_dl1_enable_UNCONNECTED),
        .dl1_rxactivehs(NLW_csi2_d_phy_rx_0_dl1_rxactivehs_UNCONNECTED),
        .dl1_rxsynchs(NLW_csi2_d_phy_rx_0_dl1_rxsynchs_UNCONNECTED),
        .dl1_rxvalidhs(csi2_d_phy_rx_0_RX_MIPI_PPI_DL1_RXVALIDHS),
        .dl2_datahs(NLW_csi2_d_phy_rx_0_dl2_datahs_UNCONNECTED[7:0]),
        .dl2_enable(NLW_csi2_d_phy_rx_0_dl2_enable_UNCONNECTED),
        .dl2_rxactivehs(NLW_csi2_d_phy_rx_0_dl2_rxactivehs_UNCONNECTED),
        .dl2_rxsynchs(NLW_csi2_d_phy_rx_0_dl2_rxsynchs_UNCONNECTED),
        .dl2_rxvalidhs(NLW_csi2_d_phy_rx_0_dl2_rxvalidhs_UNCONNECTED),
        .dl3_datahs(NLW_csi2_d_phy_rx_0_dl3_datahs_UNCONNECTED[7:0]),
        .dl3_enable(NLW_csi2_d_phy_rx_0_dl3_enable_UNCONNECTED),
        .dl3_rxactivehs(NLW_csi2_d_phy_rx_0_dl3_rxactivehs_UNCONNECTED),
        .dl3_rxsynchs(NLW_csi2_d_phy_rx_0_dl3_rxsynchs_UNCONNECTED),
        .dl3_rxvalidhs(NLW_csi2_d_phy_rx_0_dl3_rxvalidhs_UNCONNECTED),
        .in_delay_clk(microblaze_0_Clk),
        .rxbyteclkhs(csi2_d_phy_rx_0_rxbyteclkhs),
        .trig_ack(NLW_csi2_d_phy_rx_0_trig_ack_UNCONNECTED),
        .trig_req(csi_to_axis_0_data_err_TRIG));
  (* IMPORTED_FROM = "c:/Users/lesag/Documents/University/Personal_Projects/camera-filters/vivado/spartan_cam.srcs/sources_1/bd/system/ip/system_csi2dvp_0_0/system_csi2dvp_0_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* X_CORE_INFO = "csi2dvp,Vivado 2020.1" *) 
  system_csi2dvp_0_0 csi2dvp_0
       (.hdata({csi2dvp_0_hdata[10:1],NLW_csi2dvp_0_hdata_UNCONNECTED[0]}),
        .s_axis_aclk(csi2_d_phy_rx_0_rxbyteclkhs),
        .s_axis_tdata(csi_to_axis_0_M_AXIS_TDATA),
        .s_axis_tlast(csi_to_axis_0_M_AXIS_TLAST),
        .s_axis_tready(NLW_csi2dvp_0_s_axis_tready_UNCONNECTED),
        .s_axis_tuser(csi_to_axis_0_M_AXIS_TUSER),
        .s_axis_tvalid(csi_to_axis_0_M_AXIS_TVALID),
        .vdata(csi2dvp_0_vdata),
        .vid_active_video(csi2dvp_0_vid_active_video),
        .vid_clk(clk_wiz_1_clk_out1),
        .vid_data(csi2dvp_0_vid_data),
        .vid_hsync(NLW_csi2dvp_0_vid_hsync_UNCONNECTED),
        .vid_vsync(csi2dvp_0_vid_vsync));
  (* IMPORTED_FROM = "c:/Users/lesag/Documents/University/Personal_Projects/camera-filters/vivado/spartan_cam.srcs/sources_1/bd/system/ip/system_csi_to_axis_0_1/system_csi_to_axis_0_1.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* X_CORE_INFO = "csi_to_axis_v1_0,Vivado 2018.2" *) 
  system_csi_to_axis_0_1 csi_to_axis_0
       (.cl_enable(NLW_csi_to_axis_0_cl_enable_UNCONNECTED),
        .cl_rxclkactivehs(NLW_csi_to_axis_0_cl_rxclkactivehs_UNCONNECTED),
        .cl_stopstate(NLW_csi_to_axis_0_cl_stopstate_UNCONNECTED),
        .dl0_datahs(csi2_d_phy_rx_0_RX_MIPI_PPI_DL0_RXDATAHS),
        .dl0_enable(NLW_csi_to_axis_0_dl0_enable_UNCONNECTED),
        .dl0_rxactivehs(NLW_csi_to_axis_0_dl0_rxactivehs_UNCONNECTED),
        .dl0_rxsynchs(NLW_csi_to_axis_0_dl0_rxsynchs_UNCONNECTED),
        .dl0_rxvalidhs(csi2_d_phy_rx_0_RX_MIPI_PPI_DL0_RXVALIDHS),
        .dl1_datahs(csi2_d_phy_rx_0_RX_MIPI_PPI_DL1_RXDATAHS),
        .dl1_enable(NLW_csi_to_axis_0_dl1_enable_UNCONNECTED),
        .dl1_rxactivehs(NLW_csi_to_axis_0_dl1_rxactivehs_UNCONNECTED),
        .dl1_rxsynchs(NLW_csi_to_axis_0_dl1_rxsynchs_UNCONNECTED),
        .dl1_rxvalidhs(csi2_d_phy_rx_0_RX_MIPI_PPI_DL1_RXVALIDHS),
        .enable_in(cam_gpio),
        .m_axis_aclk(NLW_csi_to_axis_0_m_axis_aclk_UNCONNECTED),
        .m_axis_aresetn(NLW_csi_to_axis_0_m_axis_aresetn_UNCONNECTED),
        .m_axis_tdata(csi_to_axis_0_M_AXIS_TDATA),
        .m_axis_tlast(csi_to_axis_0_M_AXIS_TLAST),
        .m_axis_tready(NLW_csi_to_axis_0_m_axis_tready_UNCONNECTED),
        .m_axis_tuser(csi_to_axis_0_M_AXIS_TUSER),
        .m_axis_tvalid(csi_to_axis_0_M_AXIS_TVALID),
        .rxbyteclkhs(csi2_d_phy_rx_0_rxbyteclkhs),
        .trig_ack(NLW_csi_to_axis_0_trig_ack_UNCONNECTED),
        .trig_req(csi_to_axis_0_data_err_TRIG));
  (* IMPORTED_FROM = "c:/Users/lesag/Documents/University/Personal_Projects/camera-filters/vivado/spartan_cam.srcs/sources_1/bd/system/ip/system_gamma_correction_0_0/system_gamma_correction_0_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* X_CORE_INFO = "gamma_correction,Vivado 2020.1" *) 
  system_gamma_correction_0_0 gamma_correction_0
       (.key(buttons),
        .rgb_data_in(bayer2rgb_0_data_out),
        .rgb_data_out(gamma_correction_0_rgb_data_out),
        .state(NLW_gamma_correction_0_state_UNCONNECTED[2:0]));
  (* IMPORTED_FROM = "c:/Users/lesag/Documents/University/Personal_Projects/camera-filters/vivado/spartan_cam.srcs/sources_1/bd/system/ip/system_mdm_1_0/system_mdm_1_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* X_CORE_INFO = "MDM,Vivado 2020.1" *) 
  system_mdm_1_0 mdm_1
       (.Dbg_Capture_0(microblaze_0_debug_CAPTURE),
        .Dbg_Clk_0(microblaze_0_debug_CLK),
        .Dbg_Disable_0(NLW_mdm_1_Dbg_Disable_0_UNCONNECTED),
        .Dbg_Reg_En_0(microblaze_0_debug_REG_EN),
        .Dbg_Rst_0(microblaze_0_debug_RST),
        .Dbg_Shift_0(microblaze_0_debug_SHIFT),
        .Dbg_TDI_0(microblaze_0_debug_TDI),
        .Dbg_TDO_0(microblaze_0_debug_TDO),
        .Dbg_Update_0(microblaze_0_debug_UPDATE),
        .Debug_SYS_Rst(mdm_1_debug_sys_rst));
  (* BMM_INFO_PROCESSOR = "microblaze-le > system microblaze_0_local_memory/dlmb_bram_if_cntlr" *) 
  (* IMPORTED_FROM = "c:/Users/lesag/Documents/University/Personal_Projects/camera-filters/vivado/spartan_cam.srcs/sources_1/bd/system/ip/system_microblaze_0_0/system_microblaze_0_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* KEEP_HIERARCHY = "yes" *) 
  (* X_CORE_INFO = "MicroBlaze,Vivado 2020.1" *) 
  system_microblaze_0_0 microblaze_0
       (.Byte_Enable(microblaze_0_dlmb_1_BE),
        .Clk(microblaze_0_Clk),
        .DCE(NLW_microblaze_0_DCE_UNCONNECTED),
        .DReady(microblaze_0_dlmb_1_READY),
        .DUE(NLW_microblaze_0_DUE_UNCONNECTED),
        .DWait(NLW_microblaze_0_DWait_UNCONNECTED),
        .D_AS(microblaze_0_dlmb_1_ADDRSTROBE),
        .Data_Addr({NLW_microblaze_0_Data_Addr_UNCONNECTED[0],microblaze_0_dlmb_1_ABUS[1],NLW_microblaze_0_Data_Addr_UNCONNECTED[2:18],microblaze_0_dlmb_1_ABUS[19:29],NLW_microblaze_0_Data_Addr_UNCONNECTED[30:31]}),
        .Data_Read(microblaze_0_dlmb_1_READDBUS),
        .Data_Write(microblaze_0_dlmb_1_WRITEDBUS),
        .Dbg_Capture(microblaze_0_debug_CAPTURE),
        .Dbg_Clk(microblaze_0_debug_CLK),
        .Dbg_Disable(NLW_microblaze_0_Dbg_Disable_UNCONNECTED),
        .Dbg_Reg_En(microblaze_0_debug_REG_EN),
        .Dbg_Shift(microblaze_0_debug_SHIFT),
        .Dbg_TDI(microblaze_0_debug_TDI),
        .Dbg_TDO(microblaze_0_debug_TDO),
        .Dbg_Update(microblaze_0_debug_UPDATE),
        .Debug_Rst(microblaze_0_debug_RST),
        .ICE(NLW_microblaze_0_ICE_UNCONNECTED),
        .IFetch(NLW_microblaze_0_IFetch_UNCONNECTED),
        .IReady(microblaze_0_ilmb_1_READY),
        .IUE(NLW_microblaze_0_IUE_UNCONNECTED),
        .IWAIT(NLW_microblaze_0_IWAIT_UNCONNECTED),
        .I_AS(microblaze_0_ilmb_1_ADDRSTROBE),
        .Instr(microblaze_0_ilmb_1_READDBUS),
        .Instr_Addr({NLW_microblaze_0_Instr_Addr_UNCONNECTED[0:18],microblaze_0_ilmb_1_ABUS[19:29],NLW_microblaze_0_Instr_Addr_UNCONNECTED[30:31]}),
        .Interrupt(NLW_microblaze_0_Interrupt_UNCONNECTED),
        .Interrupt_Ack(NLW_microblaze_0_Interrupt_Ack_UNCONNECTED[0:1]),
        .Interrupt_Address(NLW_microblaze_0_Interrupt_Address_UNCONNECTED[0:31]),
        .M_AXI_DP_ARADDR({microblaze_0_M_AXI_DP_ARADDR[31:16],NLW_microblaze_0_M_AXI_DP_ARADDR_UNCONNECTED[15:9],microblaze_0_M_AXI_DP_ARADDR[8:0]}),
        .M_AXI_DP_ARPROT(NLW_microblaze_0_M_AXI_DP_ARPROT_UNCONNECTED[2:0]),
        .M_AXI_DP_ARREADY(microblaze_0_M_AXI_DP_ARREADY),
        .M_AXI_DP_ARVALID(microblaze_0_M_AXI_DP_ARVALID),
        .M_AXI_DP_AWADDR(NLW_microblaze_0_M_AXI_DP_AWADDR_UNCONNECTED[31:0]),
        .M_AXI_DP_AWPROT(NLW_microblaze_0_M_AXI_DP_AWPROT_UNCONNECTED[2:0]),
        .M_AXI_DP_AWREADY(microblaze_0_M_AXI_DP_AWREADY),
        .M_AXI_DP_AWVALID(microblaze_0_M_AXI_DP_AWVALID),
        .M_AXI_DP_BREADY(NLW_microblaze_0_M_AXI_DP_BREADY_UNCONNECTED),
        .M_AXI_DP_BRESP(NLW_microblaze_0_M_AXI_DP_BRESP_UNCONNECTED[1:0]),
        .M_AXI_DP_BVALID(microblaze_0_M_AXI_DP_BVALID),
        .M_AXI_DP_RDATA(microblaze_0_M_AXI_DP_RDATA),
        .M_AXI_DP_RREADY(NLW_microblaze_0_M_AXI_DP_RREADY_UNCONNECTED),
        .M_AXI_DP_RRESP(NLW_microblaze_0_M_AXI_DP_RRESP_UNCONNECTED[1:0]),
        .M_AXI_DP_RVALID(microblaze_0_M_AXI_DP_RVALID),
        .M_AXI_DP_WDATA({microblaze_0_M_AXI_DP_WDATA[31:30],NLW_microblaze_0_M_AXI_DP_WDATA_UNCONNECTED[29:11],microblaze_0_M_AXI_DP_WDATA[10:0]}),
        .M_AXI_DP_WREADY(microblaze_0_M_AXI_DP_WREADY),
        .M_AXI_DP_WSTRB(NLW_microblaze_0_M_AXI_DP_WSTRB_UNCONNECTED[3:0]),
        .M_AXI_DP_WVALID(microblaze_0_M_AXI_DP_WVALID),
        .Read_Strobe(NLW_microblaze_0_Read_Strobe_UNCONNECTED),
        .Reset(rst_clk_wiz_0_200M_mb_reset),
        .Write_Strobe(microblaze_0_dlmb_1_WRITESTROBE));
  system_microblaze_0_axi_periph_0 microblaze_0_axi_periph
       (.ACLK(microblaze_0_Clk),
        .ARESETN(rst_clk_wiz_0_200M_interconnect_aresetn),
        .M00_ACLK(NLW_microblaze_0_axi_periph_M00_ACLK_UNCONNECTED),
        .M00_ARESETN(NLW_microblaze_0_axi_periph_M00_ARESETN_UNCONNECTED),
        .M00_AXI_araddr({NLW_microblaze_0_axi_periph_M00_AXI_araddr_UNCONNECTED[31:9],microblaze_0_axi_periph_M00_AXI_ARADDR}),
        .M00_AXI_arready(microblaze_0_axi_periph_M00_AXI_ARREADY),
        .M00_AXI_arvalid(microblaze_0_axi_periph_M00_AXI_ARVALID),
        .M00_AXI_awaddr(NLW_microblaze_0_axi_periph_M00_AXI_awaddr_UNCONNECTED[31:0]),
        .M00_AXI_awready(microblaze_0_axi_periph_M00_AXI_AWREADY),
        .M00_AXI_awvalid(microblaze_0_axi_periph_M00_AXI_AWVALID),
        .M00_AXI_bready(microblaze_0_axi_periph_M00_AXI_BREADY),
        .M00_AXI_bresp(NLW_microblaze_0_axi_periph_M00_AXI_bresp_UNCONNECTED[1:0]),
        .M00_AXI_bvalid(microblaze_0_axi_periph_M00_AXI_BVALID),
        .M00_AXI_rdata({microblaze_0_axi_periph_M00_AXI_RDATA[31],NLW_microblaze_0_axi_periph_M00_AXI_rdata_UNCONNECTED[30:11],microblaze_0_axi_periph_M00_AXI_RDATA[10:0]}),
        .M00_AXI_rready(microblaze_0_axi_periph_M00_AXI_RREADY),
        .M00_AXI_rresp(NLW_microblaze_0_axi_periph_M00_AXI_rresp_UNCONNECTED[1:0]),
        .M00_AXI_rvalid(microblaze_0_axi_periph_M00_AXI_RVALID),
        .M00_AXI_wdata({microblaze_0_axi_periph_M00_AXI_WDATA[31],NLW_microblaze_0_axi_periph_M00_AXI_wdata_UNCONNECTED[30:11],microblaze_0_axi_periph_M00_AXI_WDATA[10:0]}),
        .M00_AXI_wready(microblaze_0_axi_periph_M00_AXI_WREADY),
        .M00_AXI_wstrb(NLW_microblaze_0_axi_periph_M00_AXI_wstrb_UNCONNECTED[3:0]),
        .M00_AXI_wvalid(microblaze_0_axi_periph_M00_AXI_WVALID),
        .M01_ACLK(NLW_microblaze_0_axi_periph_M01_ACLK_UNCONNECTED),
        .M01_ARESETN(NLW_microblaze_0_axi_periph_M01_ARESETN_UNCONNECTED),
        .M01_AXI_araddr(NLW_microblaze_0_axi_periph_M01_AXI_araddr_UNCONNECTED[31:0]),
        .M01_AXI_arready(microblaze_0_axi_periph_M01_AXI_ARREADY),
        .M01_AXI_arvalid(microblaze_0_axi_periph_M01_AXI_ARVALID),
        .M01_AXI_awaddr({NLW_microblaze_0_axi_periph_M01_AXI_awaddr_UNCONNECTED[31:4],microblaze_0_axi_periph_M01_AXI_AWADDR[3:2],NLW_microblaze_0_axi_periph_M01_AXI_awaddr_UNCONNECTED[1:0]}),
        .M01_AXI_awready(microblaze_0_axi_periph_M01_AXI_AWREADY),
        .M01_AXI_awvalid(microblaze_0_axi_periph_M01_AXI_AWVALID),
        .M01_AXI_bready(microblaze_0_axi_periph_M01_AXI_BREADY),
        .M01_AXI_bresp(NLW_microblaze_0_axi_periph_M01_AXI_bresp_UNCONNECTED[1:0]),
        .M01_AXI_bvalid(microblaze_0_axi_periph_M01_AXI_BVALID),
        .M01_AXI_rdata({NLW_microblaze_0_axi_periph_M01_AXI_rdata_UNCONNECTED[31:8],microblaze_0_axi_periph_M01_AXI_RDATA[7:0]}),
        .M01_AXI_rready(microblaze_0_axi_periph_M01_AXI_RREADY),
        .M01_AXI_rresp(NLW_microblaze_0_axi_periph_M01_AXI_rresp_UNCONNECTED[1:0]),
        .M01_AXI_rvalid(microblaze_0_axi_periph_M01_AXI_RVALID),
        .M01_AXI_wdata({NLW_microblaze_0_axi_periph_M01_AXI_wdata_UNCONNECTED[31:8],microblaze_0_axi_periph_M01_AXI_WDATA[7:0]}),
        .M01_AXI_wready(microblaze_0_axi_periph_M01_AXI_WREADY),
        .M01_AXI_wstrb(NLW_microblaze_0_axi_periph_M01_AXI_wstrb_UNCONNECTED[3:0]),
        .M01_AXI_wvalid(microblaze_0_axi_periph_M01_AXI_WVALID),
        .M02_ACLK(NLW_microblaze_0_axi_periph_M02_ACLK_UNCONNECTED),
        .M02_ARESETN(NLW_microblaze_0_axi_periph_M02_ARESETN_UNCONNECTED),
        .M02_AXI_araddr({NLW_microblaze_0_axi_periph_M02_AXI_araddr_UNCONNECTED[31:9],microblaze_0_axi_periph_M02_AXI_ARADDR[8],NLW_microblaze_0_axi_periph_M02_AXI_araddr_UNCONNECTED[7:4],microblaze_0_axi_periph_M02_AXI_ARADDR[3:2],NLW_microblaze_0_axi_periph_M02_AXI_araddr_UNCONNECTED[1:0]}),
        .M02_AXI_arready(microblaze_0_axi_periph_M02_AXI_ARREADY),
        .M02_AXI_arvalid(microblaze_0_axi_periph_M02_AXI_ARVALID),
        .M02_AXI_awaddr(NLW_microblaze_0_axi_periph_M02_AXI_awaddr_UNCONNECTED[31:0]),
        .M02_AXI_awready(microblaze_0_axi_periph_M02_AXI_AWREADY),
        .M02_AXI_awvalid(microblaze_0_axi_periph_M02_AXI_AWVALID),
        .M02_AXI_bready(microblaze_0_axi_periph_M02_AXI_BREADY),
        .M02_AXI_bresp(NLW_microblaze_0_axi_periph_M02_AXI_bresp_UNCONNECTED[1:0]),
        .M02_AXI_bvalid(microblaze_0_axi_periph_M02_AXI_BVALID),
        .M02_AXI_rdata(microblaze_0_axi_periph_M02_AXI_RDATA),
        .M02_AXI_rready(microblaze_0_axi_periph_M02_AXI_RREADY),
        .M02_AXI_rresp(NLW_microblaze_0_axi_periph_M02_AXI_rresp_UNCONNECTED[1:0]),
        .M02_AXI_rvalid(microblaze_0_axi_periph_M02_AXI_RVALID),
        .M02_AXI_wdata({microblaze_0_axi_periph_M02_AXI_WDATA[31:30],NLW_microblaze_0_axi_periph_M02_AXI_wdata_UNCONNECTED[29:2],microblaze_0_axi_periph_M02_AXI_WDATA[1:0]}),
        .M02_AXI_wready(microblaze_0_axi_periph_M02_AXI_WREADY),
        .M02_AXI_wstrb(NLW_microblaze_0_axi_periph_M02_AXI_wstrb_UNCONNECTED[3:0]),
        .M02_AXI_wvalid(microblaze_0_axi_periph_M02_AXI_WVALID),
        .S00_ACLK(NLW_microblaze_0_axi_periph_S00_ACLK_UNCONNECTED),
        .S00_ARESETN(NLW_microblaze_0_axi_periph_S00_ARESETN_UNCONNECTED),
        .S00_AXI_araddr({microblaze_0_M_AXI_DP_ARADDR[31:16],NLW_microblaze_0_axi_periph_S00_AXI_araddr_UNCONNECTED[15:9],microblaze_0_M_AXI_DP_ARADDR[8:0]}),
        .S00_AXI_arprot(NLW_microblaze_0_axi_periph_S00_AXI_arprot_UNCONNECTED[2:0]),
        .S00_AXI_arready(microblaze_0_M_AXI_DP_ARREADY),
        .S00_AXI_arvalid(microblaze_0_M_AXI_DP_ARVALID),
        .S00_AXI_awaddr(NLW_microblaze_0_axi_periph_S00_AXI_awaddr_UNCONNECTED[31:0]),
        .S00_AXI_awprot(NLW_microblaze_0_axi_periph_S00_AXI_awprot_UNCONNECTED[2:0]),
        .S00_AXI_awready(microblaze_0_M_AXI_DP_AWREADY),
        .S00_AXI_awvalid(microblaze_0_M_AXI_DP_AWVALID),
        .S00_AXI_bready(NLW_microblaze_0_axi_periph_S00_AXI_bready_UNCONNECTED),
        .S00_AXI_bresp(NLW_microblaze_0_axi_periph_S00_AXI_bresp_UNCONNECTED[1:0]),
        .S00_AXI_bvalid(microblaze_0_M_AXI_DP_BVALID),
        .S00_AXI_rdata(microblaze_0_M_AXI_DP_RDATA),
        .S00_AXI_rready(NLW_microblaze_0_axi_periph_S00_AXI_rready_UNCONNECTED),
        .S00_AXI_rresp(NLW_microblaze_0_axi_periph_S00_AXI_rresp_UNCONNECTED[1:0]),
        .S00_AXI_rvalid(microblaze_0_M_AXI_DP_RVALID),
        .S00_AXI_wdata({microblaze_0_M_AXI_DP_WDATA[31:30],NLW_microblaze_0_axi_periph_S00_AXI_wdata_UNCONNECTED[29:11],microblaze_0_M_AXI_DP_WDATA[10:0]}),
        .S00_AXI_wready(microblaze_0_M_AXI_DP_WREADY),
        .S00_AXI_wstrb(NLW_microblaze_0_axi_periph_S00_AXI_wstrb_UNCONNECTED[3:0]),
        .S00_AXI_wvalid(microblaze_0_M_AXI_DP_WVALID));
  microblaze_0_local_memory_imp_OGE0N8 microblaze_0_local_memory
       (.DLMB_abus({NLW_microblaze_0_local_memory_DLMB_abus_UNCONNECTED[0],microblaze_0_dlmb_1_ABUS[1],NLW_microblaze_0_local_memory_DLMB_abus_UNCONNECTED[2:18],microblaze_0_dlmb_1_ABUS[19:29],NLW_microblaze_0_local_memory_DLMB_abus_UNCONNECTED[30:31]}),
        .DLMB_addrstrobe(microblaze_0_dlmb_1_ADDRSTROBE),
        .DLMB_be(microblaze_0_dlmb_1_BE),
        .DLMB_ce(NLW_microblaze_0_local_memory_DLMB_ce_UNCONNECTED),
        .DLMB_readdbus(microblaze_0_dlmb_1_READDBUS),
        .DLMB_readstrobe(NLW_microblaze_0_local_memory_DLMB_readstrobe_UNCONNECTED),
        .DLMB_ready(microblaze_0_dlmb_1_READY),
        .DLMB_ue(NLW_microblaze_0_local_memory_DLMB_ue_UNCONNECTED),
        .DLMB_wait(NLW_microblaze_0_local_memory_DLMB_wait_UNCONNECTED),
        .DLMB_writedbus(microblaze_0_dlmb_1_WRITEDBUS),
        .DLMB_writestrobe(microblaze_0_dlmb_1_WRITESTROBE),
        .ILMB_abus({NLW_microblaze_0_local_memory_ILMB_abus_UNCONNECTED[0:18],microblaze_0_ilmb_1_ABUS[19:29],NLW_microblaze_0_local_memory_ILMB_abus_UNCONNECTED[30:31]}),
        .ILMB_addrstrobe(microblaze_0_ilmb_1_ADDRSTROBE),
        .ILMB_ce(NLW_microblaze_0_local_memory_ILMB_ce_UNCONNECTED),
        .ILMB_readdbus(microblaze_0_ilmb_1_READDBUS),
        .ILMB_readstrobe(NLW_microblaze_0_local_memory_ILMB_readstrobe_UNCONNECTED),
        .ILMB_ready(microblaze_0_ilmb_1_READY),
        .ILMB_ue(NLW_microblaze_0_local_memory_ILMB_ue_UNCONNECTED),
        .ILMB_wait(NLW_microblaze_0_local_memory_ILMB_wait_UNCONNECTED),
        .bus_struct_reset(rst_clk_wiz_0_200M_bus_struct_reset),
        .clk_out1(microblaze_0_Clk));
  (* IMPORTED_FROM = "c:/Users/lesag/Documents/University/Personal_Projects/camera-filters/vivado/spartan_cam.srcs/sources_1/bd/system/ip/system_rgb2dvi_0_1/system_rgb2dvi_0_1.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* X_CORE_INFO = "rgb2dvi,Vivado 2020.1" *) 
  system_rgb2dvi_0_1 rgb2dvi_0
       (.PixelClk(clk_wiz_1_clk_out1),
        .SerialClk(clk_wiz_1_clk_out2),
        .TMDS_Clk_n(TMDS_0_clk_n),
        .TMDS_Clk_p(TMDS_0_clk_p),
        .TMDS_Data_n(TMDS_0_data_n),
        .TMDS_Data_p(TMDS_0_data_p),
        .aRst_n(NLW_rgb2dvi_0_aRst_n_UNCONNECTED),
        .vid_pData(gamma_correction_0_rgb_data_out),
        .vid_pHSync(bayer2rgb_0_hsync_out),
        .vid_pVDE(bayer2rgb_0_de_out),
        .vid_pVSync(bayer2rgb_0_vsync_out));
  (* IMPORTED_FROM = "c:/Users/lesag/Documents/University/Personal_Projects/camera-filters/vivado/spartan_cam.srcs/sources_1/bd/system/ip/system_rst_clk_wiz_0_200M_0/system_rst_clk_wiz_0_200M_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* X_CORE_INFO = "proc_sys_reset,Vivado 2020.1" *) 
  system_rst_clk_wiz_0_200M_0 rst_clk_wiz_0_200M
       (.aux_reset_in(NLW_rst_clk_wiz_0_200M_aux_reset_in_UNCONNECTED),
        .bus_struct_reset(rst_clk_wiz_0_200M_bus_struct_reset),
        .dcm_locked(NLW_rst_clk_wiz_0_200M_dcm_locked_UNCONNECTED),
        .ext_reset_in(clk_wiz_0_locked),
        .interconnect_aresetn(rst_clk_wiz_0_200M_interconnect_aresetn),
        .mb_debug_sys_rst(mdm_1_debug_sys_rst),
        .mb_reset(rst_clk_wiz_0_200M_mb_reset),
        .peripheral_aresetn(rst_clk_wiz_0_200M_peripheral_aresetn),
        .peripheral_reset(NLW_rst_clk_wiz_0_200M_peripheral_reset_UNCONNECTED[0]),
        .slowest_sync_clk(microblaze_0_Clk));
  (* CHECK_LICENSE_TYPE = "system_xlconstant_0_0,xlconstant_v1_1_7_xlconstant,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "xlconstant_v1_1_7_xlconstant,Vivado 2020.1" *) 
  system_xlconstant_0_0 xlconstant_0
       (.dout(cam_gpio));
endmodule

(* CHECK_LICENSE_TYPE = "system_axi_gpio_0_0,axi_gpio,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi_gpio,Vivado 2020.1" *) 
module system_axi_gpio_0_0
   (s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready,
    gpio_io_o);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 S_AXI_ACLK CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME S_AXI_ACLK, ASSOCIATED_BUSIF S_AXI, ASSOCIATED_RESET s_axi_aresetn, FREQ_HZ 200000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1, INSERT_VIP 0" *) input s_axi_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 S_AXI_ARESETN RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME S_AXI_ARESETN, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input s_axi_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME S_AXI, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 200000000, ID_WIDTH 0, ADDR_WIDTH 9, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input [8:0]s_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWVALID" *) input s_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWREADY" *) output s_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WDATA" *) input [31:0]s_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WSTRB" *) input [3:0]s_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WVALID" *) input s_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WREADY" *) output s_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BRESP" *) output [1:0]s_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BVALID" *) output s_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BREADY" *) input s_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARADDR" *) input [8:0]s_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARVALID" *) input s_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARREADY" *) output s_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RDATA" *) output [31:0]s_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RRESP" *) output [1:0]s_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RVALID" *) output s_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RREADY" *) input s_axi_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:gpio:1.0 GPIO TRI_O" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME GPIO, BOARD.ASSOCIATED_PARAM GPIO_BOARD_INTERFACE" *) output [1:0]gpio_io_o;

  wire [1:0]gpio_io_o;
  wire s_axi_aclk;
  wire [8:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire NLW_U0_ip2intc_irpt_UNCONNECTED;
  wire [31:0]NLW_U0_gpio2_io_i_UNCONNECTED;
  wire [31:0]NLW_U0_gpio2_io_o_UNCONNECTED;
  wire [31:0]NLW_U0_gpio2_io_t_UNCONNECTED;
  wire [1:0]NLW_U0_gpio_io_i_UNCONNECTED;
  wire [1:0]NLW_U0_gpio_io_t_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [8:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [29:2]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_wstrb_UNCONNECTED;

  (* C_ALL_INPUTS = "0" *) 
  (* C_ALL_INPUTS_2 = "0" *) 
  (* C_ALL_OUTPUTS = "1" *) 
  (* C_ALL_OUTPUTS_2 = "0" *) 
  (* C_DOUT_DEFAULT = "0" *) 
  (* C_DOUT_DEFAULT_2 = "0" *) 
  (* C_FAMILY = "spartan7" *) 
  (* C_GPIO2_WIDTH = "32" *) 
  (* C_GPIO_WIDTH = "2" *) 
  (* C_INTERRUPT_PRESENT = "0" *) 
  (* C_IS_DUAL = "0" *) 
  (* C_S_AXI_ADDR_WIDTH = "9" *) 
  (* C_S_AXI_DATA_WIDTH = "32" *) 
  (* C_TRI_DEFAULT = "-1" *) 
  (* C_TRI_DEFAULT_2 = "-1" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* ip_group = "LOGICORE" *) 
  system_axi_gpio_0_0__axi_gpio U0
       (.gpio2_io_i(NLW_U0_gpio2_io_i_UNCONNECTED[31:0]),
        .gpio2_io_o(NLW_U0_gpio2_io_o_UNCONNECTED[31:0]),
        .gpio2_io_t(NLW_U0_gpio2_io_t_UNCONNECTED[31:0]),
        .gpio_io_i(NLW_U0_gpio_io_i_UNCONNECTED[1:0]),
        .gpio_io_o(gpio_io_o),
        .gpio_io_t(NLW_U0_gpio_io_t_UNCONNECTED[1:0]),
        .ip2intc_irpt(NLW_U0_ip2intc_irpt_UNCONNECTED),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr({s_axi_araddr[8],NLW_U0_s_axi_araddr_UNCONNECTED[7:4],s_axi_araddr[3:2],NLW_U0_s_axi_araddr_UNCONNECTED[1:0]}),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[8:0]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata({s_axi_wdata[31:30],NLW_U0_s_axi_wdata_UNCONNECTED[29:2],s_axi_wdata[1:0]}),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* ORIG_REF_NAME = "GPIO_Core" *) 
module system_axi_gpio_0_0__GPIO_Core
   (ip2bus_wrack_i,
    ip2bus_rdack_i,
    gpio_io_o,
    gpio_io_t,
    D,
    bus2ip_reset,
    s_axi_aclk,
    bus2ip_cs,
    bus2ip_rnw,
    s_axi_wdata,
    Q,
    \Not_Dual.gpio_Data_Out_reg[0]_0 ,
    \Not_Dual.gpio_OE_reg[0]_0 ,
    \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    Bus_RNW_reg,
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg );
  output ip2bus_wrack_i;
  output ip2bus_rdack_i;
  output [1:0]gpio_io_o;
  output [1:0]gpio_io_t;
  output [2:0]D;
  input bus2ip_reset;
  input s_axi_aclk;
  input bus2ip_cs;
  input bus2ip_rnw;
  input [3:0]s_axi_wdata;
  input [0:0]Q;
  input \Not_Dual.gpio_Data_Out_reg[0]_0 ;
  input \Not_Dual.gpio_OE_reg[0]_0 ;
  input \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  input Bus_RNW_reg;
  input \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ;

  wire Bus_RNW_reg;
  wire [2:0]D;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ;
  wire GPIO_xferAck_i;
  wire \Not_Dual.ALLOUT_ND.READ_REG_GEN[0].reg1[30]_i_1_n_0 ;
  wire \Not_Dual.ALLOUT_ND.READ_REG_GEN[1].reg1[31]_i_1_n_0 ;
  wire \Not_Dual.gpio_Data_Out[0]_i_1_n_0 ;
  wire \Not_Dual.gpio_Data_Out[1]_i_1_n_0 ;
  wire \Not_Dual.gpio_Data_Out_reg[0]_0 ;
  wire [0:0]Q;
  wire bus2ip_cs;
  wire bus2ip_reset;
  wire bus2ip_rnw;
  wire [1:0]gpio_io_o;
  wire gpio_xferAck_Reg;
  wire iGPIO_xferAck__0;
  wire ip2bus_rdack_i;
  wire ip2bus_wrack_i;
  wire [30:31]reg1;
  wire s_axi_aclk;
  wire [3:0]s_axi_wdata;

  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'h00200000)) 
    \Not_Dual.ALLOUT_ND.READ_REG_GEN[0].reg1[30]_i_1 
       (.I0(gpio_io_o[1]),
        .I1(gpio_xferAck_Reg),
        .I2(bus2ip_cs),
        .I3(GPIO_xferAck_i),
        .I4(bus2ip_rnw),
        .O(\Not_Dual.ALLOUT_ND.READ_REG_GEN[0].reg1[30]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Not_Dual.ALLOUT_ND.READ_REG_GEN[0].reg1_reg[30] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\Not_Dual.ALLOUT_ND.READ_REG_GEN[0].reg1[30]_i_1_n_0 ),
        .Q(reg1[30]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT5 #(
    .INIT(32'h00200000)) 
    \Not_Dual.ALLOUT_ND.READ_REG_GEN[1].reg1[31]_i_1 
       (.I0(gpio_io_o[0]),
        .I1(gpio_xferAck_Reg),
        .I2(bus2ip_cs),
        .I3(GPIO_xferAck_i),
        .I4(bus2ip_rnw),
        .O(\Not_Dual.ALLOUT_ND.READ_REG_GEN[1].reg1[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Not_Dual.ALLOUT_ND.READ_REG_GEN[1].reg1_reg[31] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\Not_Dual.ALLOUT_ND.READ_REG_GEN[1].reg1[31]_i_1_n_0 ),
        .Q(reg1[31]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \Not_Dual.gpio_Data_Out[0]_i_1 
       (.I0(s_axi_wdata[1]),
        .I1(bus2ip_cs),
        .I2(Q),
        .I3(s_axi_wdata[3]),
        .I4(\Not_Dual.gpio_Data_Out_reg[0]_0 ),
        .I5(gpio_io_o[1]),
        .O(\Not_Dual.gpio_Data_Out[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFB08FFFFFB080000)) 
    \Not_Dual.gpio_Data_Out[1]_i_1 
       (.I0(s_axi_wdata[0]),
        .I1(bus2ip_cs),
        .I2(Q),
        .I3(s_axi_wdata[2]),
        .I4(\Not_Dual.gpio_Data_Out_reg[0]_0 ),
        .I5(gpio_io_o[0]),
        .O(\Not_Dual.gpio_Data_Out[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Not_Dual.gpio_Data_Out_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\Not_Dual.gpio_Data_Out[0]_i_1_n_0 ),
        .Q(gpio_io_o[1]),
        .R(bus2ip_reset));
  FDRE #(
    .INIT(1'b0)) 
    \Not_Dual.gpio_Data_Out_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\Not_Dual.gpio_Data_Out[1]_i_1_n_0 ),
        .Q(gpio_io_o[0]),
        .R(bus2ip_reset));
  FDRE #(
    .INIT(1'b0)) 
    gpio_xferAck_Reg_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(GPIO_xferAck_i),
        .Q(gpio_xferAck_Reg),
        .R(bus2ip_reset));
  LUT3 #(
    .INIT(8'h02)) 
    iGPIO_xferAck
       (.I0(bus2ip_cs),
        .I1(gpio_xferAck_Reg),
        .I2(GPIO_xferAck_i),
        .O(iGPIO_xferAck__0));
  FDRE #(
    .INIT(1'b0)) 
    iGPIO_xferAck_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(iGPIO_xferAck__0),
        .Q(GPIO_xferAck_i),
        .R(bus2ip_reset));
  LUT5 #(
    .INIT(32'h00001400)) 
    \ip2bus_data_i_D1[0]_i_1 
       (.I0(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .I1(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .I2(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .I3(Bus_RNW_reg),
        .I4(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'h0011000011400000)) 
    \ip2bus_data_i_D1[30]_i_1 
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I1(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .I2(reg1[30]),
        .I3(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .I4(Bus_RNW_reg),
        .I5(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h0011000011400000)) 
    \ip2bus_data_i_D1[31]_i_1 
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I1(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .I2(reg1[31]),
        .I3(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .I4(Bus_RNW_reg),
        .I5(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ip2bus_rdack_i_D1_i_1
       (.I0(GPIO_xferAck_i),
        .I1(bus2ip_rnw),
        .O(ip2bus_rdack_i));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h2)) 
    ip2bus_wrack_i_D1_i_1
       (.I0(GPIO_xferAck_i),
        .I1(bus2ip_rnw),
        .O(ip2bus_wrack_i));
endmodule

(* ORIG_REF_NAME = "address_decoder" *) 
module system_axi_gpio_0_0__address_decoder
   (\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    Bus_RNW_reg,
    \MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ,
    rst_reg,
    rst_reg_0,
    ip2bus_rdack_i_D1_reg,
    ip2bus_wrack_i_D1_reg,
    Q,
    s_axi_aclk,
    \Not_Dual.gpio_Data_Out_reg[0] ,
    \Not_Dual.gpio_Data_Out_reg[0]_0 ,
    Bus_RNW_reg_reg_0,
    s_axi_aresetn,
    ip2bus_rdack_i_D1,
    s_axi_arready,
    s_axi_arready_0,
    ip2bus_wrack_i_D1,
    s_axi_wready);
  output \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ;
  output \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ;
  output \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  output \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  output Bus_RNW_reg;
  output \MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ;
  output rst_reg;
  output rst_reg_0;
  output ip2bus_rdack_i_D1_reg;
  output ip2bus_wrack_i_D1_reg;
  input Q;
  input s_axi_aclk;
  input [2:0]\Not_Dual.gpio_Data_Out_reg[0] ;
  input \Not_Dual.gpio_Data_Out_reg[0]_0 ;
  input Bus_RNW_reg_reg_0;
  input s_axi_aresetn;
  input ip2bus_rdack_i_D1;
  input s_axi_arready;
  input [3:0]s_axi_arready_0;
  input ip2bus_wrack_i_D1;
  input s_axi_wready;

  wire Bus_RNW_reg;
  wire Bus_RNW_reg_i_1_n_0;
  wire Bus_RNW_reg_reg_0;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ;
  wire \MEM_DECODE_GEN[0].cs_out_i[0]_i_1_n_0 ;
  wire \MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ;
  wire [2:0]\Not_Dual.gpio_Data_Out_reg[0] ;
  wire \Not_Dual.gpio_Data_Out_reg[0]_0 ;
  wire Q;
  wire ce_expnd_i_0;
  wire ce_expnd_i_1;
  wire ce_expnd_i_2;
  wire ce_expnd_i_3;
  wire cs_ce_clr;
  wire ip2bus_rdack_i_D1;
  wire ip2bus_rdack_i_D1_reg;
  wire ip2bus_wrack_i_D1;
  wire ip2bus_wrack_i_D1_reg;
  wire rst_reg;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire [3:0]s_axi_arready_0;
  wire s_axi_wready;

  LUT3 #(
    .INIT(8'hB8)) 
    Bus_RNW_reg_i_1
       (.I0(Bus_RNW_reg_reg_0),
        .I1(Q),
        .I2(Bus_RNW_reg),
        .O(Bus_RNW_reg_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Bus_RNW_reg_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Bus_RNW_reg_i_1_n_0),
        .Q(Bus_RNW_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_3),
        .Q(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .R(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i[1]_i_1 
       (.I0(\Not_Dual.gpio_Data_Out_reg[0] [0]),
        .I1(\Not_Dual.gpio_Data_Out_reg[0] [1]),
        .O(ce_expnd_i_2));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_2),
        .Q(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .R(cs_ce_clr));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_1),
        .Q(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .R(cs_ce_clr));
  LUT3 #(
    .INIT(8'hEF)) 
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i[3]_i_1 
       (.I0(ip2bus_wrack_i_D1_reg),
        .I1(ip2bus_rdack_i_D1_reg),
        .I2(s_axi_aresetn),
        .O(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i[3]_i_2 
       (.I0(\Not_Dual.gpio_Data_Out_reg[0] [1]),
        .I1(\Not_Dual.gpio_Data_Out_reg[0] [0]),
        .O(ce_expnd_i_0));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_0),
        .Q(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .R(cs_ce_clr));
  system_axi_gpio_0_0__pselect_f \MEM_DECODE_GEN[0].PER_CE_GEN[0].MULTIPLE_CES_THIS_CS_GEN.CE_I 
       (.\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] (\Not_Dual.gpio_Data_Out_reg[0] [1:0]),
        .ce_expnd_i_3(ce_expnd_i_3));
  system_axi_gpio_0_0__pselect_f__parameterized1 \MEM_DECODE_GEN[0].PER_CE_GEN[2].MULTIPLE_CES_THIS_CS_GEN.CE_I 
       (.\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] (\Not_Dual.gpio_Data_Out_reg[0] [1:0]),
        .ce_expnd_i_1(ce_expnd_i_1));
  LUT5 #(
    .INIT(32'h000000E0)) 
    \MEM_DECODE_GEN[0].cs_out_i[0]_i_1 
       (.I0(\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ),
        .I1(Q),
        .I2(s_axi_aresetn),
        .I3(ip2bus_rdack_i_D1_reg),
        .I4(ip2bus_wrack_i_D1_reg),
        .O(\MEM_DECODE_GEN[0].cs_out_i[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DECODE_GEN[0].cs_out_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\MEM_DECODE_GEN[0].cs_out_i[0]_i_1_n_0 ),
        .Q(\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAABA)) 
    \Not_Dual.gpio_Data_Out[0]_i_2 
       (.I0(\Not_Dual.gpio_Data_Out_reg[0]_0 ),
        .I1(\Not_Dual.gpio_Data_Out_reg[0] [2]),
        .I2(\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 ),
        .I3(\Not_Dual.gpio_Data_Out_reg[0] [0]),
        .I4(Bus_RNW_reg_reg_0),
        .I5(\Not_Dual.gpio_Data_Out_reg[0] [1]),
        .O(rst_reg));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAEAAAA)) 
    s_axi_arready_INST_0
       (.I0(ip2bus_rdack_i_D1),
        .I1(s_axi_arready),
        .I2(s_axi_arready_0[2]),
        .I3(s_axi_arready_0[1]),
        .I4(s_axi_arready_0[3]),
        .I5(s_axi_arready_0[0]),
        .O(ip2bus_rdack_i_D1_reg));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAEAAAA)) 
    s_axi_wready_INST_0
       (.I0(ip2bus_wrack_i_D1),
        .I1(s_axi_wready),
        .I2(s_axi_arready_0[2]),
        .I3(s_axi_arready_0[1]),
        .I4(s_axi_arready_0[3]),
        .I5(s_axi_arready_0[0]),
        .O(ip2bus_wrack_i_D1_reg));
endmodule

(* C_ALL_INPUTS = "0" *) (* C_ALL_INPUTS_2 = "0" *) (* C_ALL_OUTPUTS = "1" *) 
(* C_ALL_OUTPUTS_2 = "0" *) (* C_DOUT_DEFAULT = "0" *) (* C_DOUT_DEFAULT_2 = "0" *) 
(* C_FAMILY = "spartan7" *) (* C_GPIO2_WIDTH = "32" *) (* C_GPIO_WIDTH = "2" *) 
(* C_INTERRUPT_PRESENT = "0" *) (* C_IS_DUAL = "0" *) (* C_S_AXI_ADDR_WIDTH = "9" *) 
(* C_S_AXI_DATA_WIDTH = "32" *) (* C_TRI_DEFAULT = "-1" *) (* C_TRI_DEFAULT_2 = "-1" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "axi_gpio" *) (* ip_group = "LOGICORE" *) 
module system_axi_gpio_0_0__axi_gpio
   (s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready,
    ip2intc_irpt,
    gpio_io_i,
    gpio_io_o,
    gpio_io_t,
    gpio2_io_i,
    gpio2_io_o,
    gpio2_io_t);
  (* sigis = "Clk" *) input s_axi_aclk;
  (* sigis = "Rst" *) input s_axi_aresetn;
  input [8:0]s_axi_awaddr;
  input s_axi_awvalid;
  output s_axi_awready;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wvalid;
  output s_axi_wready;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [8:0]s_axi_araddr;
  input s_axi_arvalid;
  output s_axi_arready;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rvalid;
  input s_axi_rready;
  (* sigis = "INTR_LEVEL_HIGH" *) output ip2intc_irpt;
  input [1:0]gpio_io_i;
  output [1:0]gpio_io_o;
  output [1:0]gpio_io_t;
  input [31:0]gpio2_io_i;
  output [31:0]gpio2_io_o;
  output [31:0]gpio2_io_t;

  wire AXI_LITE_IPIF_I_n_11;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/Bus_RNW_reg ;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ;
  wire [5:5]bus2ip_addr;
  wire bus2ip_cs;
  wire bus2ip_reset;
  wire bus2ip_rnw;
  wire [1:0]gpio_io_o;
  wire [0:31]ip2bus_data;
  wire [0:31]ip2bus_data_i_D1;
  wire ip2bus_rdack_i;
  wire ip2bus_rdack_i_D1;
  wire ip2bus_wrack_i;
  wire ip2bus_wrack_i_D1;
  wire s_axi_aclk;
  wire [8:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [30:0]\^s_axi_rdata ;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire NLW_AXI_LITE_IPIF_I_rst_reg_0_UNCONNECTED;
  wire [2:0]NLW_AXI_LITE_IPIF_I_s_axi_awaddr_UNCONNECTED;
  wire \NLW_gpio_core_1_Not_Dual.gpio_OE_reg[0]_0_UNCONNECTED ;
  wire [1:0]NLW_gpio_core_1_gpio_io_t_UNCONNECTED;

  assign s_axi_awready = s_axi_wready;
  assign s_axi_rdata[31] = \^s_axi_rdata [30];
  assign s_axi_rdata[30] = \^s_axi_rdata [30];
  assign s_axi_rdata[29] = \^s_axi_rdata [30];
  assign s_axi_rdata[28] = \^s_axi_rdata [30];
  assign s_axi_rdata[27] = \^s_axi_rdata [30];
  assign s_axi_rdata[26] = \^s_axi_rdata [30];
  assign s_axi_rdata[25] = \^s_axi_rdata [30];
  assign s_axi_rdata[24] = \^s_axi_rdata [30];
  assign s_axi_rdata[23] = \^s_axi_rdata [30];
  assign s_axi_rdata[22] = \^s_axi_rdata [30];
  assign s_axi_rdata[21] = \^s_axi_rdata [30];
  assign s_axi_rdata[20] = \^s_axi_rdata [30];
  assign s_axi_rdata[19] = \^s_axi_rdata [30];
  assign s_axi_rdata[18] = \^s_axi_rdata [30];
  assign s_axi_rdata[17] = \^s_axi_rdata [30];
  assign s_axi_rdata[16] = \^s_axi_rdata [30];
  assign s_axi_rdata[15] = \^s_axi_rdata [30];
  assign s_axi_rdata[14] = \^s_axi_rdata [30];
  assign s_axi_rdata[13] = \^s_axi_rdata [30];
  assign s_axi_rdata[12] = \^s_axi_rdata [30];
  assign s_axi_rdata[11] = \^s_axi_rdata [30];
  assign s_axi_rdata[10] = \^s_axi_rdata [30];
  assign s_axi_rdata[9] = \^s_axi_rdata [30];
  assign s_axi_rdata[8] = \^s_axi_rdata [30];
  assign s_axi_rdata[7] = \^s_axi_rdata [30];
  assign s_axi_rdata[6] = \^s_axi_rdata [30];
  assign s_axi_rdata[5] = \^s_axi_rdata [30];
  assign s_axi_rdata[4] = \^s_axi_rdata [30];
  assign s_axi_rdata[3] = \^s_axi_rdata [30];
  assign s_axi_rdata[2] = \^s_axi_rdata [30];
  assign s_axi_rdata[1:0] = \^s_axi_rdata [1:0];
  system_axi_gpio_0_0__axi_lite_ipif AXI_LITE_IPIF_I
       (.Bus_RNW_reg(\I_SLAVE_ATTACHMENT/I_DECODER/Bus_RNW_reg ),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .Q(bus2ip_addr),
        .bus2ip_cs(bus2ip_cs),
        .bus2ip_reset(bus2ip_reset),
        .bus2ip_rnw(bus2ip_rnw),
        .ip2bus_rdack_i_D1(ip2bus_rdack_i_D1),
        .ip2bus_rdack_i_D1_reg(s_axi_arready),
        .ip2bus_wrack_i_D1(ip2bus_wrack_i_D1),
        .ip2bus_wrack_i_D1_reg(s_axi_wready),
        .rst_reg(AXI_LITE_IPIF_I_n_11),
        .rst_reg_0(NLW_AXI_LITE_IPIF_I_rst_reg_0_UNCONNECTED),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr({s_axi_araddr[8],s_axi_araddr[3:2]}),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(NLW_AXI_LITE_IPIF_I_s_axi_awaddr_UNCONNECTED[2:0]),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid_i_reg(s_axi_bvalid),
        .s_axi_rdata({\^s_axi_rdata [30],\^s_axi_rdata [1:0]}),
        .\s_axi_rdata_i_reg[31] ({ip2bus_data_i_D1[0],ip2bus_data_i_D1[30],ip2bus_data_i_D1[31]}),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid_i_reg(s_axi_rvalid),
        .s_axi_wvalid(s_axi_wvalid));
  system_axi_gpio_0_0__GPIO_Core gpio_core_1
       (.Bus_RNW_reg(\I_SLAVE_ATTACHMENT/I_DECODER/Bus_RNW_reg ),
        .D({ip2bus_data[0],ip2bus_data[30],ip2bus_data[31]}),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .\Not_Dual.gpio_Data_Out_reg[0]_0 (AXI_LITE_IPIF_I_n_11),
        .\Not_Dual.gpio_OE_reg[0]_0 (\NLW_gpio_core_1_Not_Dual.gpio_OE_reg[0]_0_UNCONNECTED ),
        .Q(bus2ip_addr),
        .bus2ip_cs(bus2ip_cs),
        .bus2ip_reset(bus2ip_reset),
        .bus2ip_rnw(bus2ip_rnw),
        .gpio_io_o(gpio_io_o),
        .gpio_io_t(NLW_gpio_core_1_gpio_io_t_UNCONNECTED[1:0]),
        .ip2bus_rdack_i(ip2bus_rdack_i),
        .ip2bus_wrack_i(ip2bus_wrack_i),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_wdata({s_axi_wdata[31:30],s_axi_wdata[1:0]}));
  FDRE #(
    .INIT(1'b0)) 
    \ip2bus_data_i_D1_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ip2bus_data[0]),
        .Q(ip2bus_data_i_D1[0]),
        .R(bus2ip_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ip2bus_data_i_D1_reg[30] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ip2bus_data[30]),
        .Q(ip2bus_data_i_D1[30]),
        .R(bus2ip_reset));
  FDRE #(
    .INIT(1'b0)) 
    \ip2bus_data_i_D1_reg[31] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ip2bus_data[31]),
        .Q(ip2bus_data_i_D1[31]),
        .R(bus2ip_reset));
  FDRE #(
    .INIT(1'b0)) 
    ip2bus_rdack_i_D1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ip2bus_rdack_i),
        .Q(ip2bus_rdack_i_D1),
        .R(bus2ip_reset));
  FDRE #(
    .INIT(1'b0)) 
    ip2bus_wrack_i_D1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ip2bus_wrack_i),
        .Q(ip2bus_wrack_i_D1),
        .R(bus2ip_reset));
endmodule

(* ORIG_REF_NAME = "axi_lite_ipif" *) 
module system_axi_gpio_0_0__axi_lite_ipif
   (bus2ip_reset,
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    Q,
    bus2ip_rnw,
    Bus_RNW_reg,
    s_axi_rvalid_i_reg,
    s_axi_bvalid_i_reg,
    bus2ip_cs,
    rst_reg,
    rst_reg_0,
    ip2bus_rdack_i_D1_reg,
    ip2bus_wrack_i_D1_reg,
    s_axi_rdata,
    s_axi_aclk,
    s_axi_arvalid,
    s_axi_rready,
    s_axi_bready,
    s_axi_aresetn,
    s_axi_awvalid,
    s_axi_wvalid,
    \s_axi_rdata_i_reg[31] ,
    ip2bus_rdack_i_D1,
    ip2bus_wrack_i_D1,
    s_axi_araddr,
    s_axi_awaddr);
  output bus2ip_reset;
  output \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ;
  output \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ;
  output \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  output \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  output [0:0]Q;
  output bus2ip_rnw;
  output Bus_RNW_reg;
  output s_axi_rvalid_i_reg;
  output s_axi_bvalid_i_reg;
  output bus2ip_cs;
  output rst_reg;
  output rst_reg_0;
  output ip2bus_rdack_i_D1_reg;
  output ip2bus_wrack_i_D1_reg;
  output [2:0]s_axi_rdata;
  input s_axi_aclk;
  input s_axi_arvalid;
  input s_axi_rready;
  input s_axi_bready;
  input s_axi_aresetn;
  input s_axi_awvalid;
  input s_axi_wvalid;
  input [2:0]\s_axi_rdata_i_reg[31] ;
  input ip2bus_rdack_i_D1;
  input ip2bus_wrack_i_D1;
  input [2:0]s_axi_araddr;
  input [2:0]s_axi_awaddr;

  wire Bus_RNW_reg;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ;
  wire [0:0]Q;
  wire bus2ip_cs;
  wire bus2ip_reset;
  wire bus2ip_rnw;
  wire ip2bus_rdack_i_D1;
  wire ip2bus_rdack_i_D1_reg;
  wire ip2bus_wrack_i_D1;
  wire ip2bus_wrack_i_D1_reg;
  wire rst_reg;
  wire s_axi_aclk;
  wire [2:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arvalid;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid_i_reg;
  wire [2:0]s_axi_rdata;
  wire [2:0]\s_axi_rdata_i_reg[31] ;
  wire s_axi_rready;
  wire s_axi_rvalid_i_reg;
  wire s_axi_wvalid;
  wire NLW_I_SLAVE_ATTACHMENT_rst_reg_1_UNCONNECTED;
  wire [2:0]NLW_I_SLAVE_ATTACHMENT_s_axi_awaddr_UNCONNECTED;

  system_axi_gpio_0_0__slave_attachment I_SLAVE_ATTACHMENT
       (.Bus_RNW_reg(Bus_RNW_reg),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .\MEM_DECODE_GEN[0].cs_out_i_reg[0] (bus2ip_cs),
        .Q(Q),
        .SR(bus2ip_reset),
        .bus2ip_rnw_i_reg_0(bus2ip_rnw),
        .ip2bus_rdack_i_D1(ip2bus_rdack_i_D1),
        .ip2bus_rdack_i_D1_reg(ip2bus_rdack_i_D1_reg),
        .ip2bus_wrack_i_D1(ip2bus_wrack_i_D1),
        .ip2bus_wrack_i_D1_reg(ip2bus_wrack_i_D1_reg),
        .rst_reg_0(rst_reg),
        .rst_reg_1(NLW_I_SLAVE_ATTACHMENT_rst_reg_1_UNCONNECTED),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(NLW_I_SLAVE_ATTACHMENT_s_axi_awaddr_UNCONNECTED[2:0]),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid_i_reg_0(s_axi_bvalid_i_reg),
        .s_axi_rdata(s_axi_rdata),
        .\s_axi_rdata_i_reg[31]_0 (\s_axi_rdata_i_reg[31] ),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid_i_reg_0(s_axi_rvalid_i_reg),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* ORIG_REF_NAME = "pselect_f" *) 
module system_axi_gpio_0_0__pselect_f
   (ce_expnd_i_3,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] );
  output ce_expnd_i_3;
  input [1:0]\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ;

  wire [1:0]\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ;
  wire ce_expnd_i_3;

  LUT2 #(
    .INIT(4'h1)) 
    CS
       (.I0(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] [0]),
        .I1(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] [1]),
        .O(ce_expnd_i_3));
endmodule

(* ORIG_REF_NAME = "pselect_f" *) 
module system_axi_gpio_0_0__pselect_f__parameterized1
   (ce_expnd_i_1,
    \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] );
  output ce_expnd_i_1;
  input [1:0]\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] ;

  wire [1:0]\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] ;
  wire ce_expnd_i_1;

  LUT2 #(
    .INIT(4'h2)) 
    CS
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] [1]),
        .I1(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] [0]),
        .O(ce_expnd_i_1));
endmodule

(* ORIG_REF_NAME = "slave_attachment" *) 
module system_axi_gpio_0_0__slave_attachment
   (SR,
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    Q,
    bus2ip_rnw_i_reg_0,
    Bus_RNW_reg,
    s_axi_rvalid_i_reg_0,
    s_axi_bvalid_i_reg_0,
    \MEM_DECODE_GEN[0].cs_out_i_reg[0] ,
    rst_reg_0,
    rst_reg_1,
    ip2bus_rdack_i_D1_reg,
    ip2bus_wrack_i_D1_reg,
    s_axi_rdata,
    s_axi_aclk,
    s_axi_arvalid,
    s_axi_rready,
    s_axi_bready,
    s_axi_aresetn,
    s_axi_awvalid,
    s_axi_wvalid,
    \s_axi_rdata_i_reg[31]_0 ,
    ip2bus_rdack_i_D1,
    ip2bus_wrack_i_D1,
    s_axi_araddr,
    s_axi_awaddr);
  output [0:0]SR;
  output \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ;
  output \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ;
  output \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  output \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  output [0:0]Q;
  output bus2ip_rnw_i_reg_0;
  output Bus_RNW_reg;
  output s_axi_rvalid_i_reg_0;
  output s_axi_bvalid_i_reg_0;
  output \MEM_DECODE_GEN[0].cs_out_i_reg[0] ;
  output rst_reg_0;
  output rst_reg_1;
  output ip2bus_rdack_i_D1_reg;
  output ip2bus_wrack_i_D1_reg;
  output [2:0]s_axi_rdata;
  input s_axi_aclk;
  input s_axi_arvalid;
  input s_axi_rready;
  input s_axi_bready;
  input s_axi_aresetn;
  input s_axi_awvalid;
  input s_axi_wvalid;
  input [2:0]\s_axi_rdata_i_reg[31]_0 ;
  input ip2bus_rdack_i_D1;
  input ip2bus_wrack_i_D1;
  input [2:0]s_axi_araddr;
  input [2:0]s_axi_awaddr;

  wire Bus_RNW_reg;
  wire \FSM_onehot_state[0]_i_1_n_0 ;
  wire \FSM_onehot_state[1]_i_1_n_0 ;
  wire \FSM_onehot_state[2]_i_1_n_0 ;
  wire \FSM_onehot_state[3]_i_1_n_0 ;
  wire \FSM_onehot_state_reg_n_0_[0] ;
  wire \FSM_onehot_state_reg_n_0_[3] ;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ;
  wire [3:0]\INCLUDE_DPHASE_TIMER.dpto_cnt_reg ;
  wire \MEM_DECODE_GEN[0].cs_out_i_reg[0] ;
  wire [0:0]Q;
  wire [0:0]SR;
  wire [0:6]bus2ip_addr;
  wire \bus2ip_addr_i[8]_i_1_n_0 ;
  wire bus2ip_rnw_i_reg_0;
  wire clear;
  wire ip2bus_rdack_i_D1;
  wire ip2bus_rdack_i_D1_reg;
  wire ip2bus_wrack_i_D1;
  wire ip2bus_wrack_i_D1_reg;
  wire is_read_i_1_n_0;
  wire is_read_reg_n_0;
  wire is_write_i_1_n_0;
  wire is_write_i_2_n_0;
  wire is_write_reg_n_0;
  wire p_0_in;
  wire [1:0]p_0_out;
  wire p_5_in;
  wire [3:0]plusOp;
  wire rst_reg_0;
  wire s_axi_aclk;
  wire [2:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arvalid;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bresp_i;
  wire s_axi_bvalid_i_i_1_n_0;
  wire s_axi_bvalid_i_reg_0;
  wire [2:0]s_axi_rdata;
  wire \s_axi_rdata_i[0]_i_1_n_0 ;
  wire \s_axi_rdata_i[1]_i_1_n_0 ;
  wire \s_axi_rdata_i[31]_i_1_n_0 ;
  wire [2:0]\s_axi_rdata_i_reg[31]_0 ;
  wire s_axi_rready;
  wire s_axi_rresp_i;
  wire s_axi_rvalid_i_i_1_n_0;
  wire s_axi_rvalid_i_reg_0;
  wire s_axi_wvalid;
  wire start2;
  wire start2_i_1_n_0;
  wire [1:0]state;
  wire state1__2;
  wire NLW_I_DECODER_rst_reg_0_UNCONNECTED;

  LUT6 #(
    .INIT(64'hFFFF150015001500)) 
    \FSM_onehot_state[0]_i_1 
       (.I0(s_axi_arvalid),
        .I1(s_axi_wvalid),
        .I2(s_axi_awvalid),
        .I3(\FSM_onehot_state_reg_n_0_[0] ),
        .I4(state1__2),
        .I5(\FSM_onehot_state_reg_n_0_[3] ),
        .O(\FSM_onehot_state[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \FSM_onehot_state[1]_i_1 
       (.I0(s_axi_arvalid),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(ip2bus_rdack_i_D1_reg),
        .I3(s_axi_rresp_i),
        .O(\FSM_onehot_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0800FFFF08000800)) 
    \FSM_onehot_state[2]_i_1 
       (.I0(s_axi_wvalid),
        .I1(s_axi_awvalid),
        .I2(s_axi_arvalid),
        .I3(\FSM_onehot_state_reg_n_0_[0] ),
        .I4(ip2bus_wrack_i_D1_reg),
        .I5(s_axi_bresp_i),
        .O(\FSM_onehot_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF888F888FFFFF888)) 
    \FSM_onehot_state[3]_i_1 
       (.I0(ip2bus_wrack_i_D1_reg),
        .I1(s_axi_bresp_i),
        .I2(s_axi_rresp_i),
        .I3(ip2bus_rdack_i_D1_reg),
        .I4(\FSM_onehot_state_reg_n_0_[3] ),
        .I5(state1__2),
        .O(\FSM_onehot_state[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_onehot_state[3]_i_2 
       (.I0(s_axi_bready),
        .I1(s_axi_bvalid_i_reg_0),
        .I2(s_axi_rready),
        .I3(s_axi_rvalid_i_reg_0),
        .O(state1__2));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[0] ),
        .S(SR));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[1]_i_1_n_0 ),
        .Q(s_axi_rresp_i),
        .R(SR));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[2]_i_1_n_0 ),
        .Q(s_axi_bresp_i),
        .R(SR));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[3] ),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[0]_i_1 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [0]),
        .O(plusOp[0]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[1]_i_1 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [0]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [1]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[2]_i_1 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [0]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [1]),
        .I2(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [2]),
        .O(plusOp[2]));
  LUT2 #(
    .INIT(4'h9)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[3]_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .O(clear));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[3]_i_2 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [1]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [0]),
        .I2(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [2]),
        .I3(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [3]),
        .O(plusOp[3]));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[0]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [0]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[1]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [1]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[2]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [2]),
        .R(clear));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[3]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [3]),
        .R(clear));
  system_axi_gpio_0_0__address_decoder I_DECODER
       (.Bus_RNW_reg(Bus_RNW_reg),
        .Bus_RNW_reg_reg_0(bus2ip_rnw_i_reg_0),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .\MEM_DECODE_GEN[0].cs_out_i_reg[0]_0 (\MEM_DECODE_GEN[0].cs_out_i_reg[0] ),
        .\Not_Dual.gpio_Data_Out_reg[0] ({bus2ip_addr[0],Q,bus2ip_addr[6]}),
        .\Not_Dual.gpio_Data_Out_reg[0]_0 (SR),
        .Q(start2),
        .ip2bus_rdack_i_D1(ip2bus_rdack_i_D1),
        .ip2bus_rdack_i_D1_reg(ip2bus_rdack_i_D1_reg),
        .ip2bus_wrack_i_D1(ip2bus_wrack_i_D1),
        .ip2bus_wrack_i_D1_reg(ip2bus_wrack_i_D1_reg),
        .rst_reg(rst_reg_0),
        .rst_reg_0(NLW_I_DECODER_rst_reg_0_UNCONNECTED),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(is_read_reg_n_0),
        .s_axi_arready_0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg ),
        .s_axi_wready(is_write_reg_n_0));
  LUT5 #(
    .INIT(32'h000000EA)) 
    \bus2ip_addr_i[8]_i_1 
       (.I0(s_axi_arvalid),
        .I1(s_axi_awvalid),
        .I2(s_axi_wvalid),
        .I3(state[1]),
        .I4(state[0]),
        .O(\bus2ip_addr_i[8]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_araddr[0]),
        .Q(bus2ip_addr[6]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_araddr[1]),
        .Q(Q),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_araddr[2]),
        .Q(bus2ip_addr[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    bus2ip_rnw_i_reg
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_arvalid),
        .Q(bus2ip_rnw_i_reg_0),
        .R(SR));
  LUT5 #(
    .INIT(32'h8BBB8888)) 
    is_read_i_1
       (.I0(s_axi_arvalid),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(state1__2),
        .I3(\FSM_onehot_state_reg_n_0_[3] ),
        .I4(is_read_reg_n_0),
        .O(is_read_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    is_read_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(is_read_i_1_n_0),
        .Q(is_read_reg_n_0),
        .R(SR));
  LUT6 #(
    .INIT(64'h2000FFFF20000000)) 
    is_write_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(s_axi_arvalid),
        .I2(s_axi_awvalid),
        .I3(s_axi_wvalid),
        .I4(is_write_i_2_n_0),
        .I5(is_write_reg_n_0),
        .O(is_write_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFEAEAEAAAAAAAAA)) 
    is_write_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(s_axi_bready),
        .I2(s_axi_bvalid_i_reg_0),
        .I3(s_axi_rready),
        .I4(s_axi_rvalid_i_reg_0),
        .I5(\FSM_onehot_state_reg_n_0_[3] ),
        .O(is_write_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    is_write_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(is_write_i_1_n_0),
        .Q(is_write_reg_n_0),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    rst_i_1
       (.I0(s_axi_aresetn),
        .O(p_0_in));
  FDRE #(
    .INIT(1'b0)) 
    rst_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_0_in),
        .Q(SR),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h08FF0808)) 
    s_axi_bvalid_i_i_1
       (.I0(ip2bus_wrack_i_D1_reg),
        .I1(state[1]),
        .I2(state[0]),
        .I3(s_axi_bready),
        .I4(s_axi_bvalid_i_reg_0),
        .O(s_axi_bvalid_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_bvalid_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_axi_bvalid_i_i_1_n_0),
        .Q(s_axi_bvalid_i_reg_0),
        .R(SR));
  LUT3 #(
    .INIT(8'hB8)) 
    \s_axi_rdata_i[0]_i_1 
       (.I0(\s_axi_rdata_i_reg[31]_0 [0]),
        .I1(s_axi_rresp_i),
        .I2(s_axi_rdata[0]),
        .O(\s_axi_rdata_i[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \s_axi_rdata_i[1]_i_1 
       (.I0(\s_axi_rdata_i_reg[31]_0 [1]),
        .I1(s_axi_rresp_i),
        .I2(s_axi_rdata[1]),
        .O(\s_axi_rdata_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \s_axi_rdata_i[31]_i_1 
       (.I0(\s_axi_rdata_i_reg[31]_0 [2]),
        .I1(s_axi_rresp_i),
        .I2(s_axi_rdata[2]),
        .O(\s_axi_rdata_i[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_axi_rdata_i[0]_i_1_n_0 ),
        .Q(s_axi_rdata[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_axi_rdata_i[1]_i_1_n_0 ),
        .Q(s_axi_rdata[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[31] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_axi_rdata_i[31]_i_1_n_0 ),
        .Q(s_axi_rdata[2]),
        .R(SR));
  LUT5 #(
    .INIT(32'h08FF0808)) 
    s_axi_rvalid_i_i_1
       (.I0(ip2bus_rdack_i_D1_reg),
        .I1(state[0]),
        .I2(state[1]),
        .I3(s_axi_rready),
        .I4(s_axi_rvalid_i_reg_0),
        .O(s_axi_rvalid_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_rvalid_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_axi_rvalid_i_i_1_n_0),
        .Q(s_axi_rvalid_i_reg_0),
        .R(SR));
  LUT5 #(
    .INIT(32'h000000F8)) 
    start2_i_1
       (.I0(s_axi_awvalid),
        .I1(s_axi_wvalid),
        .I2(s_axi_arvalid),
        .I3(state[1]),
        .I4(state[0]),
        .O(start2_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    start2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(start2_i_1_n_0),
        .Q(start2),
        .R(SR));
  LUT5 #(
    .INIT(32'h77FC44FC)) 
    \state[0]_i_1 
       (.I0(state1__2),
        .I1(state[0]),
        .I2(s_axi_arvalid),
        .I3(state[1]),
        .I4(ip2bus_wrack_i_D1_reg),
        .O(p_0_out[0]));
  LUT6 #(
    .INIT(64'h55FFFF0C5500FF0C)) 
    \state[1]_i_1 
       (.I0(state1__2),
        .I1(p_5_in),
        .I2(s_axi_arvalid),
        .I3(state[1]),
        .I4(state[0]),
        .I5(ip2bus_rdack_i_D1_reg),
        .O(p_0_out[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \state[1]_i_2 
       (.I0(s_axi_awvalid),
        .I1(s_axi_wvalid),
        .O(p_5_in));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_0_out[0]),
        .Q(state[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_0_out[1]),
        .Q(state[1]),
        .R(SR));
endmodule

(* CHECK_LICENSE_TYPE = "system_axi_iic_0_0,axi_iic,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi_iic,Vivado 2020.1" *) 
module system_axi_iic_0_0
   (s_axi_aclk,
    s_axi_aresetn,
    iic2intc_irpt,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready,
    sda_i,
    sda_o,
    sda_t,
    scl_i,
    scl_o,
    scl_t,
    gpo);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 S_AXI_ACLK CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME S_AXI_ACLK, ASSOCIATED_BUSIF S_AXI, ASSOCIATED_RESET s_axi_aresetn, FREQ_HZ 200000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1, INSERT_VIP 0" *) input s_axi_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 S_AXI_ARESETN RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME S_AXI_ARESETN, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input s_axi_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:signal:interrupt:1.0 INTERRUPT INTERRUPT" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME INTERRUPT, SENSITIVITY LEVEL_HIGH, PortWidth 1" *) output iic2intc_irpt;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME S_AXI, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 200000000, ID_WIDTH 0, ADDR_WIDTH 9, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input [8:0]s_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWVALID" *) input s_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWREADY" *) output s_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WDATA" *) input [31:0]s_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WSTRB" *) input [3:0]s_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WVALID" *) input s_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WREADY" *) output s_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BRESP" *) output [1:0]s_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BVALID" *) output s_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BREADY" *) input s_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARADDR" *) input [8:0]s_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARVALID" *) input s_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARREADY" *) output s_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RDATA" *) output [31:0]s_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RRESP" *) output [1:0]s_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RVALID" *) output s_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RREADY" *) input s_axi_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:iic:1.0 IIC SDA_I" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME IIC, BOARD.ASSOCIATED_PARAM IIC_BOARD_INTERFACE" *) input sda_i;
  (* X_INTERFACE_INFO = "xilinx.com:interface:iic:1.0 IIC SDA_O" *) output sda_o;
  (* X_INTERFACE_INFO = "xilinx.com:interface:iic:1.0 IIC SDA_T" *) output sda_t;
  (* X_INTERFACE_INFO = "xilinx.com:interface:iic:1.0 IIC SCL_I" *) input scl_i;
  (* X_INTERFACE_INFO = "xilinx.com:interface:iic:1.0 IIC SCL_O" *) output scl_o;
  (* X_INTERFACE_INFO = "xilinx.com:interface:iic:1.0 IIC SCL_T" *) output scl_t;
  output [0:0]gpo;

  wire s_axi_aclk;
  wire [8:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire scl_i;
  wire scl_o;
  wire scl_t;
  wire sda_i;
  wire sda_o;
  wire sda_t;
  wire NLW_U0_iic2intc_irpt_UNCONNECTED;
  wire [0:0]NLW_U0_gpo_UNCONNECTED;
  wire [8:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [30:11]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [30:11]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_wstrb_UNCONNECTED;

  (* C_DEFAULT_VALUE = "8'b00000000" *) 
  (* C_DISABLE_SETUP_VIOLATION_CHECK = "0" *) 
  (* C_FAMILY = "spartan7" *) 
  (* C_GPO_WIDTH = "1" *) 
  (* C_IIC_FREQ = "100000" *) 
  (* C_SCL_INERTIAL_DELAY = "0" *) 
  (* C_SDA_INERTIAL_DELAY = "0" *) 
  (* C_SDA_LEVEL = "1" *) 
  (* C_SMBUS_PMBUS_HOST = "0" *) 
  (* C_STATIC_TIMING_REG_WIDTH = "0" *) 
  (* C_S_AXI_ACLK_FREQ_HZ = "200000000" *) 
  (* C_S_AXI_ADDR_WIDTH = "9" *) 
  (* C_S_AXI_DATA_WIDTH = "32" *) 
  (* C_TEN_BIT_ADR = "0" *) 
  (* C_TIMING_REG_WIDTH = "32" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  system_axi_iic_0_0__axi_iic U0
       (.gpo(NLW_U0_gpo_UNCONNECTED[0]),
        .iic2intc_irpt(NLW_U0_iic2intc_irpt_UNCONNECTED),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[8:0]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata({s_axi_rdata[31],NLW_U0_s_axi_rdata_UNCONNECTED[30:11],s_axi_rdata[10:0]}),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata({s_axi_wdata[31],NLW_U0_s_axi_wdata_UNCONNECTED[30:11],s_axi_wdata[10:0]}),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wvalid(s_axi_wvalid),
        .scl_i(scl_i),
        .scl_o(scl_o),
        .scl_t(scl_t),
        .sda_i(sda_i),
        .sda_o(sda_o),
        .sda_t(sda_t));
endmodule

(* ORIG_REF_NAME = "SRL_FIFO" *) 
module system_axi_iic_0_0__SRL_FIFO
   (Rc_Data_Exists,
    Rc_addr,
    Rc_fifo_data,
    msms_set_i_reg,
    D,
    \Addr_Counters[1].FDRE_I_0 ,
    Bus2IIC_Reset,
    D_0,
    s_axi_aclk,
    \s_axi_rdata_i[7]_i_11 ,
    Q,
    Msms_set,
    \Addr_Counters[0].FDRE_I_0 ,
    \Addr_Counters[0].FDRE_I_1 ,
    Rc_fifo_rd,
    Rc_fifo_rd_d,
    Rc_fifo_wr_d,
    Rc_fifo_wr);
  output Rc_Data_Exists;
  output [0:3]Rc_addr;
  output [0:7]Rc_fifo_data;
  output msms_set_i_reg;
  output [1:0]D;
  output \Addr_Counters[1].FDRE_I_0 ;
  input Bus2IIC_Reset;
  input D_0;
  input s_axi_aclk;
  input [7:0]\s_axi_rdata_i[7]_i_11 ;
  input [3:0]Q;
  input Msms_set;
  input \Addr_Counters[0].FDRE_I_0 ;
  input \Addr_Counters[0].FDRE_I_1 ;
  input Rc_fifo_rd;
  input Rc_fifo_rd_d;
  input Rc_fifo_wr_d;
  input Rc_fifo_wr;

  wire \Addr_Counters[0].FDRE_I_0 ;
  wire \Addr_Counters[0].FDRE_I_1 ;
  wire \Addr_Counters[0].MUXCY_L_I_i_3__1_n_0 ;
  wire \Addr_Counters[1].FDRE_I_0 ;
  wire \Addr_Counters[3].XORCY_I_i_1__1_n_0 ;
  wire Bus2IIC_Reset;
  wire CI;
  wire [1:0]D;
  wire D_0;
  wire Msms_set;
  wire [3:0]Q;
  wire \RD_FIFO_CNTRL.ro_prev_i_i_2_n_0 ;
  wire \RD_FIFO_CNTRL.ro_prev_i_i_3_n_0 ;
  wire Rc_Data_Exists;
  wire [0:3]Rc_addr;
  wire [0:7]Rc_fifo_data;
  wire Rc_fifo_rd;
  wire Rc_fifo_rd_d;
  wire Rc_fifo_wr;
  wire Rc_fifo_wr_d;
  wire S;
  wire S0_out;
  wire S1_out;
  wire msms_set_i_reg;
  wire s_axi_aclk;
  wire [7:0]\s_axi_rdata_i[7]_i_11 ;
  wire sum_A_0;
  wire sum_A_1;
  wire sum_A_2;
  wire sum_A_3;
  wire [3:0]\NLW_Addr_Counters[0].MUXCY_L_I_CARRY4_CO_UNCONNECTED ;
  wire [3:3]\NLW_Addr_Counters[0].MUXCY_L_I_CARRY4_DI_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Addr_Counters[0].FDRE_I 
       (.C(s_axi_aclk),
        .CE(Rc_Data_Exists),
        .D(sum_A_3),
        .Q(Rc_addr[0]),
        .R(Bus2IIC_Reset));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Addr_Counters[0].MUXCY_L_I_CARRY4 
       (.CI(1'b0),
        .CO(\NLW_Addr_Counters[0].MUXCY_L_I_CARRY4_CO_UNCONNECTED [3:0]),
        .CYINIT(CI),
        .DI({\NLW_Addr_Counters[0].MUXCY_L_I_CARRY4_DI_UNCONNECTED [3],Rc_addr[2],Rc_addr[1],Rc_addr[0]}),
        .O({sum_A_0,sum_A_1,sum_A_2,sum_A_3}),
        .S({\Addr_Counters[3].XORCY_I_i_1__1_n_0 ,S0_out,S1_out,S}));
  LUT4 #(
    .INIT(16'hA208)) 
    \Addr_Counters[0].MUXCY_L_I_i_1__1 
       (.I0(\Addr_Counters[0].MUXCY_L_I_i_3__1_n_0 ),
        .I1(Rc_fifo_rd),
        .I2(Rc_fifo_rd_d),
        .I3(Rc_addr[0]),
        .O(S));
  LUT6 #(
    .INIT(64'hFFFF7FFF00000000)) 
    \Addr_Counters[0].MUXCY_L_I_i_2__0 
       (.I0(Rc_addr[1]),
        .I1(Rc_addr[2]),
        .I2(Rc_addr[3]),
        .I3(Rc_addr[0]),
        .I4(\Addr_Counters[0].FDRE_I_0 ),
        .I5(\Addr_Counters[0].FDRE_I_1 ),
        .O(CI));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF4)) 
    \Addr_Counters[0].MUXCY_L_I_i_3__1 
       (.I0(Rc_fifo_wr_d),
        .I1(Rc_fifo_wr),
        .I2(Rc_addr[0]),
        .I3(Rc_addr[3]),
        .I4(Rc_addr[2]),
        .I5(Rc_addr[1]),
        .O(\Addr_Counters[0].MUXCY_L_I_i_3__1_n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Addr_Counters[1].FDRE_I 
       (.C(s_axi_aclk),
        .CE(Rc_Data_Exists),
        .D(sum_A_2),
        .Q(Rc_addr[1]),
        .R(Bus2IIC_Reset));
  LUT4 #(
    .INIT(16'hA208)) 
    \Addr_Counters[1].MUXCY_L_I_i_1__1 
       (.I0(\Addr_Counters[0].MUXCY_L_I_i_3__1_n_0 ),
        .I1(Rc_fifo_rd),
        .I2(Rc_fifo_rd_d),
        .I3(Rc_addr[1]),
        .O(S1_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Addr_Counters[2].FDRE_I 
       (.C(s_axi_aclk),
        .CE(Rc_Data_Exists),
        .D(sum_A_1),
        .Q(Rc_addr[2]),
        .R(Bus2IIC_Reset));
  LUT4 #(
    .INIT(16'hA208)) 
    \Addr_Counters[2].MUXCY_L_I_i_1__1 
       (.I0(\Addr_Counters[0].MUXCY_L_I_i_3__1_n_0 ),
        .I1(Rc_fifo_rd),
        .I2(Rc_fifo_rd_d),
        .I3(Rc_addr[2]),
        .O(S0_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Addr_Counters[3].FDRE_I 
       (.C(s_axi_aclk),
        .CE(Rc_Data_Exists),
        .D(sum_A_0),
        .Q(Rc_addr[3]),
        .R(Bus2IIC_Reset));
  LUT4 #(
    .INIT(16'hA208)) 
    \Addr_Counters[3].XORCY_I_i_1__1 
       (.I0(\Addr_Counters[0].MUXCY_L_I_i_3__1_n_0 ),
        .I1(Rc_fifo_rd),
        .I2(Rc_fifo_rd_d),
        .I3(Rc_addr[3]),
        .O(\Addr_Counters[3].XORCY_I_i_1__1_n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    Data_Exists_DFF
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D_0),
        .Q(Rc_Data_Exists),
        .R(Bus2IIC_Reset));
  LUT4 #(
    .INIT(16'hFFFE)) 
    Data_Exists_DFF_i_2__0
       (.I0(Rc_addr[1]),
        .I1(Rc_addr[2]),
        .I2(Rc_addr[3]),
        .I3(Rc_addr[0]),
        .O(\Addr_Counters[1].FDRE_I_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\X_IIC/READ_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\X_IIC/READ_FIFO_I/FIFO_RAM[0].SRL16E_I " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \FIFO_RAM[0].SRL16E_I 
       (.A0(Rc_addr[0]),
        .A1(Rc_addr[1]),
        .A2(Rc_addr[2]),
        .A3(Rc_addr[3]),
        .CE(CI),
        .CLK(s_axi_aclk),
        .D(\s_axi_rdata_i[7]_i_11 [7]),
        .Q(Rc_fifo_data[0]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\X_IIC/READ_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\X_IIC/READ_FIFO_I/FIFO_RAM[1].SRL16E_I " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \FIFO_RAM[1].SRL16E_I 
       (.A0(Rc_addr[0]),
        .A1(Rc_addr[1]),
        .A2(Rc_addr[2]),
        .A3(Rc_addr[3]),
        .CE(CI),
        .CLK(s_axi_aclk),
        .D(\s_axi_rdata_i[7]_i_11 [6]),
        .Q(Rc_fifo_data[1]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\X_IIC/READ_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\X_IIC/READ_FIFO_I/FIFO_RAM[2].SRL16E_I " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \FIFO_RAM[2].SRL16E_I 
       (.A0(Rc_addr[0]),
        .A1(Rc_addr[1]),
        .A2(Rc_addr[2]),
        .A3(Rc_addr[3]),
        .CE(CI),
        .CLK(s_axi_aclk),
        .D(\s_axi_rdata_i[7]_i_11 [5]),
        .Q(Rc_fifo_data[2]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\X_IIC/READ_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\X_IIC/READ_FIFO_I/FIFO_RAM[3].SRL16E_I " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \FIFO_RAM[3].SRL16E_I 
       (.A0(Rc_addr[0]),
        .A1(Rc_addr[1]),
        .A2(Rc_addr[2]),
        .A3(Rc_addr[3]),
        .CE(CI),
        .CLK(s_axi_aclk),
        .D(\s_axi_rdata_i[7]_i_11 [4]),
        .Q(Rc_fifo_data[3]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\X_IIC/READ_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\X_IIC/READ_FIFO_I/FIFO_RAM[4].SRL16E_I " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \FIFO_RAM[4].SRL16E_I 
       (.A0(Rc_addr[0]),
        .A1(Rc_addr[1]),
        .A2(Rc_addr[2]),
        .A3(Rc_addr[3]),
        .CE(CI),
        .CLK(s_axi_aclk),
        .D(\s_axi_rdata_i[7]_i_11 [3]),
        .Q(Rc_fifo_data[4]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\X_IIC/READ_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\X_IIC/READ_FIFO_I/FIFO_RAM[5].SRL16E_I " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \FIFO_RAM[5].SRL16E_I 
       (.A0(Rc_addr[0]),
        .A1(Rc_addr[1]),
        .A2(Rc_addr[2]),
        .A3(Rc_addr[3]),
        .CE(CI),
        .CLK(s_axi_aclk),
        .D(\s_axi_rdata_i[7]_i_11 [2]),
        .Q(Rc_fifo_data[5]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\X_IIC/READ_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\X_IIC/READ_FIFO_I/FIFO_RAM[6].SRL16E_I " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \FIFO_RAM[6].SRL16E_I 
       (.A0(Rc_addr[0]),
        .A1(Rc_addr[1]),
        .A2(Rc_addr[2]),
        .A3(Rc_addr[3]),
        .CE(CI),
        .CLK(s_axi_aclk),
        .D(\s_axi_rdata_i[7]_i_11 [1]),
        .Q(Rc_fifo_data[6]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\X_IIC/READ_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\X_IIC/READ_FIFO_I/FIFO_RAM[7].SRL16E_I " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \FIFO_RAM[7].SRL16E_I 
       (.A0(Rc_addr[0]),
        .A1(Rc_addr[1]),
        .A2(Rc_addr[2]),
        .A3(Rc_addr[3]),
        .CE(CI),
        .CLK(s_axi_aclk),
        .D(\s_axi_rdata_i[7]_i_11 [0]),
        .Q(Rc_fifo_data[7]));
  LUT6 #(
    .INIT(64'h0001000000000001)) 
    \RD_FIFO_CNTRL.ro_prev_i_i_1 
       (.I0(Bus2IIC_Reset),
        .I1(Msms_set),
        .I2(\RD_FIFO_CNTRL.ro_prev_i_i_2_n_0 ),
        .I3(\RD_FIFO_CNTRL.ro_prev_i_i_3_n_0 ),
        .I4(Q[3]),
        .I5(Rc_addr[3]),
        .O(msms_set_i_reg));
  LUT4 #(
    .INIT(16'h6FF6)) 
    \RD_FIFO_CNTRL.ro_prev_i_i_2 
       (.I0(Rc_addr[1]),
        .I1(Q[1]),
        .I2(Rc_addr[2]),
        .I3(Q[2]),
        .O(\RD_FIFO_CNTRL.ro_prev_i_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h6F)) 
    \RD_FIFO_CNTRL.ro_prev_i_i_3 
       (.I0(Rc_addr[0]),
        .I1(Q[0]),
        .I2(Rc_Data_Exists),
        .O(\RD_FIFO_CNTRL.ro_prev_i_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \sr_i[1]_i_1 
       (.I0(Rc_Data_Exists),
        .O(D[1]));
  LUT4 #(
    .INIT(16'h8000)) 
    \sr_i[2]_i_1 
       (.I0(Rc_addr[1]),
        .I1(Rc_addr[2]),
        .I2(Rc_addr[3]),
        .I3(Rc_addr[0]),
        .O(D[0]));
endmodule

(* ORIG_REF_NAME = "SRL_FIFO" *) 
module system_axi_iic_0_0__SRL_FIFO_0
   (Tx_data_exists,
    Tx_addr,
    Tx_fifo_data,
    \Addr_Counters[0].FDRE_I_0 ,
    Data_Exists_DFF_0,
    p_0_in,
    Data_Exists_DFF_1,
    shift_reg_ld_reg,
    Tx_fifo_rst,
    s_axi_aclk,
    s_axi_wdata,
    Data_Exists_DFF_2,
    \Addr_Counters[0].FDRE_I_1 ,
    dynamic_MSMS,
    Tx_fifo_wr,
    Tx_fifo_wr_d,
    rdCntrFrmTxFifo,
    Tx_fifo_rd_d,
    Tx_fifo_rd,
    shift_reg_ld,
    scndry_out);
  output Tx_data_exists;
  output [0:3]Tx_addr;
  output [0:7]Tx_fifo_data;
  output [0:0]\Addr_Counters[0].FDRE_I_0 ;
  output Data_Exists_DFF_0;
  output p_0_in;
  output Data_Exists_DFF_1;
  output [0:0]shift_reg_ld_reg;
  input Tx_fifo_rst;
  input s_axi_aclk;
  input [7:0]s_axi_wdata;
  input Data_Exists_DFF_2;
  input \Addr_Counters[0].FDRE_I_1 ;
  input [0:0]dynamic_MSMS;
  input Tx_fifo_wr;
  input Tx_fifo_wr_d;
  input rdCntrFrmTxFifo;
  input Tx_fifo_rd_d;
  input Tx_fifo_rd;
  input shift_reg_ld;
  input scndry_out;

  wire [0:0]\Addr_Counters[0].FDRE_I_0 ;
  wire \Addr_Counters[0].FDRE_I_1 ;
  wire \Addr_Counters[0].MUXCY_L_I_i_3__0_n_0 ;
  wire \Addr_Counters[3].XORCY_I_i_1__0_n_0 ;
  wire CI;
  wire D;
  wire Data_Exists_DFF_0;
  wire Data_Exists_DFF_1;
  wire Data_Exists_DFF_2;
  wire Data_Exists_DFF_i_3_n_0;
  wire S;
  wire S0_out;
  wire S1_out;
  wire [0:3]Tx_addr;
  wire Tx_data_exists;
  wire [0:7]Tx_fifo_data;
  wire Tx_fifo_rd;
  wire Tx_fifo_rd_d;
  wire Tx_fifo_rst;
  wire Tx_fifo_wr;
  wire Tx_fifo_wr_d;
  wire [0:0]dynamic_MSMS;
  wire p_0_in;
  wire rdCntrFrmTxFifo;
  wire s_axi_aclk;
  wire [7:0]s_axi_wdata;
  wire scndry_out;
  wire shift_reg_ld;
  wire [0:0]shift_reg_ld_reg;
  wire sum_A_0;
  wire sum_A_1;
  wire sum_A_2;
  wire sum_A_3;
  wire [3:0]\NLW_Addr_Counters[0].MUXCY_L_I_CARRY4_CO_UNCONNECTED ;
  wire [3:3]\NLW_Addr_Counters[0].MUXCY_L_I_CARRY4_DI_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Addr_Counters[0].FDRE_I 
       (.C(s_axi_aclk),
        .CE(Tx_data_exists),
        .D(sum_A_3),
        .Q(Tx_addr[0]),
        .R(Tx_fifo_rst));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Addr_Counters[0].MUXCY_L_I_CARRY4 
       (.CI(1'b0),
        .CO(\NLW_Addr_Counters[0].MUXCY_L_I_CARRY4_CO_UNCONNECTED [3:0]),
        .CYINIT(CI),
        .DI({\NLW_Addr_Counters[0].MUXCY_L_I_CARRY4_DI_UNCONNECTED [3],Tx_addr[2],Tx_addr[1],Tx_addr[0]}),
        .O({sum_A_0,sum_A_1,sum_A_2,sum_A_3}),
        .S({\Addr_Counters[3].XORCY_I_i_1__0_n_0 ,S0_out,S1_out,S}));
  LUT5 #(
    .INIT(32'h20228A88)) 
    \Addr_Counters[0].MUXCY_L_I_i_1__0 
       (.I0(\Addr_Counters[0].MUXCY_L_I_i_3__0_n_0 ),
        .I1(rdCntrFrmTxFifo),
        .I2(Tx_fifo_rd_d),
        .I3(Tx_fifo_rd),
        .I4(Tx_addr[0]),
        .O(S));
  LUT6 #(
    .INIT(64'h7FFFFFFF00000000)) 
    \Addr_Counters[0].MUXCY_L_I_i_2__1 
       (.I0(Data_Exists_DFF_2),
        .I1(Tx_addr[0]),
        .I2(Tx_addr[3]),
        .I3(Tx_addr[2]),
        .I4(Tx_addr[1]),
        .I5(\Addr_Counters[0].FDRE_I_1 ),
        .O(CI));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF4)) 
    \Addr_Counters[0].MUXCY_L_I_i_3__0 
       (.I0(Tx_fifo_wr_d),
        .I1(Tx_fifo_wr),
        .I2(Tx_addr[1]),
        .I3(Tx_addr[2]),
        .I4(Tx_addr[3]),
        .I5(Tx_addr[0]),
        .O(\Addr_Counters[0].MUXCY_L_I_i_3__0_n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Addr_Counters[1].FDRE_I 
       (.C(s_axi_aclk),
        .CE(Tx_data_exists),
        .D(sum_A_2),
        .Q(Tx_addr[1]),
        .R(Tx_fifo_rst));
  LUT5 #(
    .INIT(32'h20228A88)) 
    \Addr_Counters[1].MUXCY_L_I_i_1__0 
       (.I0(\Addr_Counters[0].MUXCY_L_I_i_3__0_n_0 ),
        .I1(rdCntrFrmTxFifo),
        .I2(Tx_fifo_rd_d),
        .I3(Tx_fifo_rd),
        .I4(Tx_addr[1]),
        .O(S1_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Addr_Counters[2].FDRE_I 
       (.C(s_axi_aclk),
        .CE(Tx_data_exists),
        .D(sum_A_1),
        .Q(Tx_addr[2]),
        .R(Tx_fifo_rst));
  LUT5 #(
    .INIT(32'h20228A88)) 
    \Addr_Counters[2].MUXCY_L_I_i_1__0 
       (.I0(\Addr_Counters[0].MUXCY_L_I_i_3__0_n_0 ),
        .I1(rdCntrFrmTxFifo),
        .I2(Tx_fifo_rd_d),
        .I3(Tx_fifo_rd),
        .I4(Tx_addr[2]),
        .O(S0_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Addr_Counters[3].FDRE_I 
       (.C(s_axi_aclk),
        .CE(Tx_data_exists),
        .D(sum_A_0),
        .Q(Tx_addr[3]),
        .R(Tx_fifo_rst));
  LUT5 #(
    .INIT(32'h20228A88)) 
    \Addr_Counters[3].XORCY_I_i_1__0 
       (.I0(\Addr_Counters[0].MUXCY_L_I_i_3__0_n_0 ),
        .I1(rdCntrFrmTxFifo),
        .I2(Tx_fifo_rd_d),
        .I3(Tx_fifo_rd),
        .I4(Tx_addr[3]),
        .O(\Addr_Counters[3].XORCY_I_i_1__0_n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    Data_Exists_DFF
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D),
        .Q(Tx_data_exists),
        .R(Tx_fifo_rst));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT5 #(
    .INIT(32'hFFF20022)) 
    Data_Exists_DFF_i_1__0
       (.I0(Tx_fifo_wr),
        .I1(Tx_fifo_wr_d),
        .I2(Data_Exists_DFF_2),
        .I3(Data_Exists_DFF_i_3_n_0),
        .I4(Tx_data_exists),
        .O(D));
  LUT4 #(
    .INIT(16'hFFFE)) 
    Data_Exists_DFF_i_3
       (.I0(Tx_addr[0]),
        .I1(Tx_addr[3]),
        .I2(Tx_addr[2]),
        .I3(Tx_addr[1]),
        .O(Data_Exists_DFF_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \FIFO_GEN_DTR.IIC2Bus_IntrEvent[7]_i_1 
       (.I0(Tx_addr[3]),
        .O(p_0_in));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\X_IIC/WRITE_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\X_IIC/WRITE_FIFO_I/FIFO_RAM[0].SRL16E_I " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \FIFO_RAM[0].SRL16E_I 
       (.A0(Tx_addr[0]),
        .A1(Tx_addr[1]),
        .A2(Tx_addr[2]),
        .A3(Tx_addr[3]),
        .CE(CI),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[7]),
        .Q(Tx_fifo_data[0]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\X_IIC/WRITE_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\X_IIC/WRITE_FIFO_I/FIFO_RAM[1].SRL16E_I " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \FIFO_RAM[1].SRL16E_I 
       (.A0(Tx_addr[0]),
        .A1(Tx_addr[1]),
        .A2(Tx_addr[2]),
        .A3(Tx_addr[3]),
        .CE(CI),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[6]),
        .Q(Tx_fifo_data[1]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\X_IIC/WRITE_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\X_IIC/WRITE_FIFO_I/FIFO_RAM[2].SRL16E_I " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \FIFO_RAM[2].SRL16E_I 
       (.A0(Tx_addr[0]),
        .A1(Tx_addr[1]),
        .A2(Tx_addr[2]),
        .A3(Tx_addr[3]),
        .CE(CI),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[5]),
        .Q(Tx_fifo_data[2]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\X_IIC/WRITE_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\X_IIC/WRITE_FIFO_I/FIFO_RAM[3].SRL16E_I " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \FIFO_RAM[3].SRL16E_I 
       (.A0(Tx_addr[0]),
        .A1(Tx_addr[1]),
        .A2(Tx_addr[2]),
        .A3(Tx_addr[3]),
        .CE(CI),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[4]),
        .Q(Tx_fifo_data[3]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\X_IIC/WRITE_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\X_IIC/WRITE_FIFO_I/FIFO_RAM[4].SRL16E_I " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \FIFO_RAM[4].SRL16E_I 
       (.A0(Tx_addr[0]),
        .A1(Tx_addr[1]),
        .A2(Tx_addr[2]),
        .A3(Tx_addr[3]),
        .CE(CI),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[3]),
        .Q(Tx_fifo_data[4]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\X_IIC/WRITE_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\X_IIC/WRITE_FIFO_I/FIFO_RAM[5].SRL16E_I " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \FIFO_RAM[5].SRL16E_I 
       (.A0(Tx_addr[0]),
        .A1(Tx_addr[1]),
        .A2(Tx_addr[2]),
        .A3(Tx_addr[3]),
        .CE(CI),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[2]),
        .Q(Tx_fifo_data[5]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\X_IIC/WRITE_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\X_IIC/WRITE_FIFO_I/FIFO_RAM[6].SRL16E_I " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \FIFO_RAM[6].SRL16E_I 
       (.A0(Tx_addr[0]),
        .A1(Tx_addr[1]),
        .A2(Tx_addr[2]),
        .A3(Tx_addr[3]),
        .CE(CI),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[1]),
        .Q(Tx_fifo_data[6]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\X_IIC/WRITE_FIFO_I/FIFO_RAM " *) 
  (* srl_name = "U0/\X_IIC/WRITE_FIFO_I/FIFO_RAM[7].SRL16E_I " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \FIFO_RAM[7].SRL16E_I 
       (.A0(Tx_addr[0]),
        .A1(Tx_addr[1]),
        .A2(Tx_addr[2]),
        .A3(Tx_addr[3]),
        .CE(CI),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[0]),
        .Q(Tx_fifo_data[7]));
  LUT2 #(
    .INIT(4'h7)) 
    \cr_i[5]_i_2 
       (.I0(Tx_data_exists),
        .I1(dynamic_MSMS),
        .O(Data_Exists_DFF_1));
  LUT3 #(
    .INIT(8'hB8)) 
    \data_int[0]_i_1 
       (.I0(Tx_fifo_data[7]),
        .I1(shift_reg_ld),
        .I2(scndry_out),
        .O(shift_reg_ld_reg));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \sr_i[0]_i_1 
       (.I0(Tx_data_exists),
        .O(Data_Exists_DFF_0));
  LUT4 #(
    .INIT(16'h8000)) 
    \sr_i[3]_i_1 
       (.I0(Tx_addr[0]),
        .I1(Tx_addr[3]),
        .I2(Tx_addr[2]),
        .I3(Tx_addr[1]),
        .O(\Addr_Counters[0].FDRE_I_0 ));
endmodule

(* ORIG_REF_NAME = "SRL_FIFO" *) 
module system_axi_iic_0_0__SRL_FIFO__parameterized0
   (Data_Exists_DFF_0,
    dynamic_MSMS,
    \Addr_Counters[1].FDRE_I_0 ,
    Tx_fifo_rst,
    D,
    s_axi_aclk,
    ctrlFifoDin,
    rdCntrFrmTxFifo,
    Tx_fifo_rd_d,
    Tx_fifo_rd,
    \Addr_Counters[0].FDRE_I_0 ,
    \Addr_Counters[0].FDRE_I_1 );
  output Data_Exists_DFF_0;
  output [0:1]dynamic_MSMS;
  output \Addr_Counters[1].FDRE_I_0 ;
  input Tx_fifo_rst;
  input D;
  input s_axi_aclk;
  input [0:1]ctrlFifoDin;
  input rdCntrFrmTxFifo;
  input Tx_fifo_rd_d;
  input Tx_fifo_rd;
  input \Addr_Counters[0].FDRE_I_0 ;
  input \Addr_Counters[0].FDRE_I_1 ;

  wire \Addr_Counters[0].FDRE_I_0 ;
  wire \Addr_Counters[0].FDRE_I_1 ;
  wire \Addr_Counters[0].FDRE_I_n_0 ;
  wire \Addr_Counters[0].MUXCY_L_I_i_3_n_0 ;
  wire \Addr_Counters[1].FDRE_I_0 ;
  wire \Addr_Counters[1].FDRE_I_n_0 ;
  wire \Addr_Counters[2].FDRE_I_n_0 ;
  wire \Addr_Counters[3].FDRE_I_n_0 ;
  wire \Addr_Counters[3].XORCY_I_i_1_n_0 ;
  wire CI;
  wire D;
  wire Data_Exists_DFF_0;
  wire S;
  wire S0_out;
  wire S1_out;
  wire Tx_fifo_rd;
  wire Tx_fifo_rd_d;
  wire Tx_fifo_rst;
  wire [0:1]ctrlFifoDin;
  wire [0:1]dynamic_MSMS;
  wire rdCntrFrmTxFifo;
  wire s_axi_aclk;
  wire sum_A_0;
  wire sum_A_1;
  wire sum_A_2;
  wire sum_A_3;
  wire [3:0]\NLW_Addr_Counters[0].MUXCY_L_I_CARRY4_CO_UNCONNECTED ;
  wire [3:3]\NLW_Addr_Counters[0].MUXCY_L_I_CARRY4_DI_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Addr_Counters[0].FDRE_I 
       (.C(s_axi_aclk),
        .CE(Data_Exists_DFF_0),
        .D(sum_A_3),
        .Q(\Addr_Counters[0].FDRE_I_n_0 ),
        .R(Tx_fifo_rst));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Addr_Counters[0].MUXCY_L_I_CARRY4 
       (.CI(1'b0),
        .CO(\NLW_Addr_Counters[0].MUXCY_L_I_CARRY4_CO_UNCONNECTED [3:0]),
        .CYINIT(CI),
        .DI({\NLW_Addr_Counters[0].MUXCY_L_I_CARRY4_DI_UNCONNECTED [3],\Addr_Counters[2].FDRE_I_n_0 ,\Addr_Counters[1].FDRE_I_n_0 ,\Addr_Counters[0].FDRE_I_n_0 }),
        .O({sum_A_0,sum_A_1,sum_A_2,sum_A_3}),
        .S({\Addr_Counters[3].XORCY_I_i_1_n_0 ,S0_out,S1_out,S}));
  LUT5 #(
    .INIT(32'h20228A88)) 
    \Addr_Counters[0].MUXCY_L_I_i_1 
       (.I0(\Addr_Counters[0].MUXCY_L_I_i_3_n_0 ),
        .I1(rdCntrFrmTxFifo),
        .I2(Tx_fifo_rd_d),
        .I3(Tx_fifo_rd),
        .I4(\Addr_Counters[0].FDRE_I_n_0 ),
        .O(S));
  LUT6 #(
    .INIT(64'h2AAAAAAAAAAAAAAA)) 
    \Addr_Counters[0].MUXCY_L_I_i_2 
       (.I0(\Addr_Counters[0].FDRE_I_0 ),
        .I1(\Addr_Counters[2].FDRE_I_n_0 ),
        .I2(\Addr_Counters[3].FDRE_I_n_0 ),
        .I3(\Addr_Counters[1].FDRE_I_n_0 ),
        .I4(\Addr_Counters[0].FDRE_I_n_0 ),
        .I5(\Addr_Counters[0].FDRE_I_1 ),
        .O(CI));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \Addr_Counters[0].MUXCY_L_I_i_3 
       (.I0(\Addr_Counters[0].FDRE_I_0 ),
        .I1(\Addr_Counters[2].FDRE_I_n_0 ),
        .I2(\Addr_Counters[0].FDRE_I_n_0 ),
        .I3(\Addr_Counters[3].FDRE_I_n_0 ),
        .I4(\Addr_Counters[1].FDRE_I_n_0 ),
        .O(\Addr_Counters[0].MUXCY_L_I_i_3_n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Addr_Counters[1].FDRE_I 
       (.C(s_axi_aclk),
        .CE(Data_Exists_DFF_0),
        .D(sum_A_2),
        .Q(\Addr_Counters[1].FDRE_I_n_0 ),
        .R(Tx_fifo_rst));
  LUT5 #(
    .INIT(32'h20228A88)) 
    \Addr_Counters[1].MUXCY_L_I_i_1 
       (.I0(\Addr_Counters[0].MUXCY_L_I_i_3_n_0 ),
        .I1(rdCntrFrmTxFifo),
        .I2(Tx_fifo_rd_d),
        .I3(Tx_fifo_rd),
        .I4(\Addr_Counters[1].FDRE_I_n_0 ),
        .O(S1_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Addr_Counters[2].FDRE_I 
       (.C(s_axi_aclk),
        .CE(Data_Exists_DFF_0),
        .D(sum_A_1),
        .Q(\Addr_Counters[2].FDRE_I_n_0 ),
        .R(Tx_fifo_rst));
  LUT5 #(
    .INIT(32'h20228A88)) 
    \Addr_Counters[2].MUXCY_L_I_i_1 
       (.I0(\Addr_Counters[0].MUXCY_L_I_i_3_n_0 ),
        .I1(rdCntrFrmTxFifo),
        .I2(Tx_fifo_rd_d),
        .I3(Tx_fifo_rd),
        .I4(\Addr_Counters[2].FDRE_I_n_0 ),
        .O(S0_out));
  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Addr_Counters[3].FDRE_I 
       (.C(s_axi_aclk),
        .CE(Data_Exists_DFF_0),
        .D(sum_A_0),
        .Q(\Addr_Counters[3].FDRE_I_n_0 ),
        .R(Tx_fifo_rst));
  LUT5 #(
    .INIT(32'h20228A88)) 
    \Addr_Counters[3].XORCY_I_i_1 
       (.I0(\Addr_Counters[0].MUXCY_L_I_i_3_n_0 ),
        .I1(rdCntrFrmTxFifo),
        .I2(Tx_fifo_rd_d),
        .I3(Tx_fifo_rd),
        .I4(\Addr_Counters[3].FDRE_I_n_0 ),
        .O(\Addr_Counters[3].XORCY_I_i_1_n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    Data_Exists_DFF
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D),
        .Q(Data_Exists_DFF_0),
        .R(Tx_fifo_rst));
  LUT4 #(
    .INIT(16'hFFFE)) 
    Data_Exists_DFF_i_3__0
       (.I0(\Addr_Counters[1].FDRE_I_n_0 ),
        .I1(\Addr_Counters[3].FDRE_I_n_0 ),
        .I2(\Addr_Counters[0].FDRE_I_n_0 ),
        .I3(\Addr_Counters[2].FDRE_I_n_0 ),
        .O(\Addr_Counters[1].FDRE_I_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\X_IIC/WRITE_FIFO_CTRL_I/FIFO_RAM " *) 
  (* srl_name = "U0/\X_IIC/WRITE_FIFO_CTRL_I/FIFO_RAM[0].SRL16E_I " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \FIFO_RAM[0].SRL16E_I 
       (.A0(\Addr_Counters[0].FDRE_I_n_0 ),
        .A1(\Addr_Counters[1].FDRE_I_n_0 ),
        .A2(\Addr_Counters[2].FDRE_I_n_0 ),
        .A3(\Addr_Counters[3].FDRE_I_n_0 ),
        .CE(CI),
        .CLK(s_axi_aclk),
        .D(ctrlFifoDin[0]),
        .Q(dynamic_MSMS[0]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\X_IIC/WRITE_FIFO_CTRL_I/FIFO_RAM " *) 
  (* srl_name = "U0/\X_IIC/WRITE_FIFO_CTRL_I/FIFO_RAM[1].SRL16E_I " *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \FIFO_RAM[1].SRL16E_I 
       (.A0(\Addr_Counters[0].FDRE_I_n_0 ),
        .A1(\Addr_Counters[1].FDRE_I_n_0 ),
        .A2(\Addr_Counters[2].FDRE_I_n_0 ),
        .A3(\Addr_Counters[3].FDRE_I_n_0 ),
        .CE(CI),
        .CLK(s_axi_aclk),
        .D(ctrlFifoDin[1]),
        .Q(dynamic_MSMS[1]));
endmodule

(* ORIG_REF_NAME = "address_decoder" *) 
module system_axi_iic_0_0__address_decoder
   (\GEN_BKEND_CE_REGISTERS[8].ce_out_i_reg[8]_0 ,
    Bus_RNW_reg_reg_0,
    is_write_reg,
    is_read_reg,
    irpt_wrack,
    E,
    reset_trig0,
    sw_rst_cond,
    AXI_IP2Bus_Error,
    D,
    \bus2ip_addr_i_reg[5] ,
    Bus2IIC_RdCE,
    \s_axi_wdata[3] ,
    Bus2IIC_WrCE,
    \FSM_onehot_state_reg[2] ,
    \s_axi_wdata[31] ,
    s_axi_wdata_0_sp_1,
    AXI_IP2Bus_WrAck20,
    AXI_IP2Bus_RdAck20,
    Q,
    s_axi_aclk,
    \MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 ,
    s_axi_aresetn,
    s_axi_arready,
    AXI_IP2Bus_RdAck1,
    AXI_IP2Bus_RdAck2,
    s_axi_awready,
    AXI_IP2Bus_WrAck1,
    AXI_IP2Bus_WrAck2,
    s_axi_awready_0,
    sw_rst_cond_d1,
    s_axi_wdata,
    \s_axi_rdata_i_reg[3] ,
    \s_axi_rdata_i_reg[3]_0 ,
    \s_axi_rdata_i_reg[3]_1 ,
    \s_axi_rdata_i_reg[2] ,
    \s_axi_rdata_i_reg[2]_0 ,
    \s_axi_rdata_i_reg[1] ,
    \s_axi_rdata_i_reg[1]_0 ,
    \s_axi_rdata_i_reg[0] ,
    \s_axi_rdata_i_reg[0]_0 ,
    \s_axi_rdata_i_reg[4] ,
    \s_axi_rdata_i_reg[7] ,
    p_1_in7_in,
    \s_axi_rdata_i_reg[5] ,
    p_1_in4_in,
    \s_axi_rdata_i_reg[6] ,
    p_1_in1_in,
    \s_axi_rdata_i_reg[7]_0 ,
    p_1_in,
    \s_axi_rdata_i_reg[8] ,
    \cr_i_reg[4] ,
    cr_txModeSelect_set,
    cr_txModeSelect_clr,
    \s_axi_rdata_i_reg[0]_1 ,
    p_1_in16_in,
    p_1_in13_in,
    p_1_in10_in,
    p_0_in,
    \s_axi_bresp_i_reg[1] ,
    s_axi_bresp,
    gpo,
    AXI_IP2Bus_WrAck2_reg);
  output \GEN_BKEND_CE_REGISTERS[8].ce_out_i_reg[8]_0 ;
  output Bus_RNW_reg_reg_0;
  output is_write_reg;
  output is_read_reg;
  output irpt_wrack;
  output [0:0]E;
  output reset_trig0;
  output sw_rst_cond;
  output AXI_IP2Bus_Error;
  output [8:0]D;
  output \bus2ip_addr_i_reg[5] ;
  output [0:0]Bus2IIC_RdCE;
  output [0:0]\s_axi_wdata[3] ;
  output [11:0]Bus2IIC_WrCE;
  output \FSM_onehot_state_reg[2] ;
  output \s_axi_wdata[31] ;
  output s_axi_wdata_0_sp_1;
  output AXI_IP2Bus_WrAck20;
  output AXI_IP2Bus_RdAck20;
  input Q;
  input s_axi_aclk;
  input [8:0]\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 ;
  input s_axi_aresetn;
  input s_axi_arready;
  input AXI_IP2Bus_RdAck1;
  input AXI_IP2Bus_RdAck2;
  input s_axi_awready;
  input AXI_IP2Bus_WrAck1;
  input AXI_IP2Bus_WrAck2;
  input [3:0]s_axi_awready_0;
  input sw_rst_cond_d1;
  input [4:0]s_axi_wdata;
  input \s_axi_rdata_i_reg[3] ;
  input \s_axi_rdata_i_reg[3]_0 ;
  input \s_axi_rdata_i_reg[3]_1 ;
  input \s_axi_rdata_i_reg[2] ;
  input \s_axi_rdata_i_reg[2]_0 ;
  input \s_axi_rdata_i_reg[1] ;
  input \s_axi_rdata_i_reg[1]_0 ;
  input \s_axi_rdata_i_reg[0] ;
  input \s_axi_rdata_i_reg[0]_0 ;
  input \s_axi_rdata_i_reg[4] ;
  input [7:0]\s_axi_rdata_i_reg[7] ;
  input p_1_in7_in;
  input \s_axi_rdata_i_reg[5] ;
  input p_1_in4_in;
  input \s_axi_rdata_i_reg[6] ;
  input p_1_in1_in;
  input \s_axi_rdata_i_reg[7]_0 ;
  input p_1_in;
  input \s_axi_rdata_i_reg[8] ;
  input [0:0]\cr_i_reg[4] ;
  input cr_txModeSelect_set;
  input cr_txModeSelect_clr;
  input \s_axi_rdata_i_reg[0]_1 ;
  input p_1_in16_in;
  input p_1_in13_in;
  input p_1_in10_in;
  input [0:0]p_0_in;
  input [0:0]\s_axi_bresp_i_reg[1] ;
  input [0:0]s_axi_bresp;
  input [0:0]gpo;
  input AXI_IP2Bus_WrAck2_reg;

  wire [2:0]AXI_Bus2IP_CS;
  wire AXI_IP2Bus_RdAck1;
  wire AXI_IP2Bus_RdAck2;
  wire AXI_IP2Bus_RdAck20;
  wire AXI_IP2Bus_WrAck1;
  wire AXI_IP2Bus_WrAck2;
  wire AXI_IP2Bus_WrAck20;
  wire AXI_IP2Bus_WrAck2_reg;
  wire [0:0]Bus2IIC_RdCE;
  wire [11:0]Bus2IIC_WrCE;
  wire Bus_RNW_reg_i_1_n_0;
  wire Bus_RNW_reg_reg_0;
  wire [8:0]D;
  wire [0:0]E;
  wire \GEN_BKEND_CE_REGISTERS[33].ce_out_i[33]_i_2_n_0 ;
  wire \GEN_BKEND_CE_REGISTERS[34].ce_out_i_reg_n_0_[34] ;
  wire \GEN_BKEND_CE_REGISTERS[8].ce_out_i_reg[8]_0 ;
  wire \MEM_DECODE_GEN[1].GEN_FOR_MULTI_CS.MEM_SELECT_I/CS ;
  wire [8:0]\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 ;
  wire Q;
  wire \bus2ip_addr_i_reg[5] ;
  wire ce_expnd_i_0;
  wire ce_expnd_i_1;
  wire ce_expnd_i_10;
  wire ce_expnd_i_11;
  wire ce_expnd_i_12;
  wire ce_expnd_i_13;
  wire ce_expnd_i_14;
  wire ce_expnd_i_15;
  wire ce_expnd_i_16;
  wire ce_expnd_i_17;
  wire ce_expnd_i_2;
  wire ce_expnd_i_24;
  wire ce_expnd_i_26;
  wire ce_expnd_i_27;
  wire ce_expnd_i_3;
  wire ce_expnd_i_4;
  wire ce_expnd_i_5;
  wire ce_expnd_i_6;
  wire ce_expnd_i_7;
  wire ce_expnd_i_8;
  wire ce_expnd_i_9;
  wire [0:0]\cr_i_reg[4] ;
  wire cr_txModeSelect_clr;
  wire cr_txModeSelect_set;
  wire cs_ce_clr;
  wire [0:0]gpo;
  wire irpt_wrack;
  wire is_read_reg;
  wire is_write_reg;
  wire [0:0]p_0_in;
  wire p_10_in;
  wire p_11_in;
  wire p_12_in;
  wire p_13_in;
  wire p_14_in;
  wire p_15_in;
  wire p_16_in;
  wire p_17_in;
  wire p_1_in;
  wire p_1_in10_in;
  wire p_1_in13_in;
  wire p_1_in16_in;
  wire p_1_in1_in;
  wire p_1_in4_in;
  wire p_1_in7_in;
  wire p_1_in_0;
  wire p_24_in;
  wire p_27_in;
  wire p_2_in;
  wire p_3_in;
  wire p_4_in;
  wire p_5_in;
  wire p_6_in;
  wire p_7_in;
  wire p_8_in;
  wire p_9_in;
  wire pselect_hit_i_0;
  wire pselect_hit_i_2;
  wire reset_trig0;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_awready;
  wire [3:0]s_axi_awready_0;
  wire \s_axi_rdata_i[0]_i_4_n_0 ;
  wire \s_axi_rdata_i[10]_i_10_n_0 ;
  wire \s_axi_rdata_i[10]_i_6_n_0 ;
  wire \s_axi_rdata_i[10]_i_7_n_0 ;
  wire \s_axi_rdata_i[10]_i_8_n_0 ;
  wire \s_axi_rdata_i[10]_i_9_n_0 ;
  wire \s_axi_rdata_i[1]_i_4_n_0 ;
  wire \s_axi_rdata_i[2]_i_4_n_0 ;
  wire \s_axi_rdata_i[3]_i_5_n_0 ;
  wire \s_axi_rdata_i[7]_i_3_n_0 ;
  wire \s_axi_rdata_i[7]_i_4_n_0 ;
  wire \s_axi_rdata_i[7]_i_5_n_0 ;
  wire \s_axi_rdata_i_reg[0] ;
  wire \s_axi_rdata_i_reg[0]_0 ;
  wire \s_axi_rdata_i_reg[0]_1 ;
  wire \s_axi_rdata_i_reg[1] ;
  wire \s_axi_rdata_i_reg[1]_0 ;
  wire \s_axi_rdata_i_reg[2] ;
  wire \s_axi_rdata_i_reg[2]_0 ;
  wire \s_axi_rdata_i_reg[3] ;
  wire \s_axi_rdata_i_reg[3]_0 ;
  wire \s_axi_rdata_i_reg[3]_1 ;
  wire \s_axi_rdata_i_reg[4] ;
  wire \s_axi_rdata_i_reg[5] ;
  wire \s_axi_rdata_i_reg[6] ;
  wire [7:0]\s_axi_rdata_i_reg[7] ;
  wire \s_axi_rdata_i_reg[7]_0 ;
  wire \s_axi_rdata_i_reg[8] ;
  wire [4:0]s_axi_wdata;
  wire \s_axi_wdata[31] ;
  wire [0:0]\s_axi_wdata[3] ;
  wire s_axi_wdata_0_sn_1;
  wire s_axi_wready_INST_0_i_1_n_0;
  wire sw_rst_cond;
  wire sw_rst_cond_d1;

  assign s_axi_wdata_0_sp_1 = s_axi_wdata_0_sn_1;
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'hFE00)) 
    AXI_IP2Bus_RdAck2_i_1
       (.I0(AXI_Bus2IP_CS[1]),
        .I1(AXI_Bus2IP_CS[2]),
        .I2(AXI_Bus2IP_CS[0]),
        .I3(AXI_IP2Bus_WrAck2_reg),
        .O(AXI_IP2Bus_RdAck20));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'h00FE)) 
    AXI_IP2Bus_WrAck2_i_1
       (.I0(AXI_Bus2IP_CS[1]),
        .I1(AXI_Bus2IP_CS[2]),
        .I2(AXI_Bus2IP_CS[0]),
        .I3(AXI_IP2Bus_WrAck2_reg),
        .O(AXI_IP2Bus_WrAck20));
  LUT3 #(
    .INIT(8'hB8)) 
    Bus_RNW_reg_i_1
       (.I0(AXI_IP2Bus_WrAck2_reg),
        .I1(Q),
        .I2(Bus_RNW_reg_reg_0),
        .O(Bus_RNW_reg_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Bus_RNW_reg_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Bus_RNW_reg_i_1_n_0),
        .Q(Bus_RNW_reg_reg_0),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \FIFO_GEN_DTR.Tx_fifo_wr_i_1 
       (.I0(p_15_in),
        .I1(Bus_RNW_reg_reg_0),
        .O(Bus2IIC_WrCE[10]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT5 #(
    .INIT(32'h02000000)) 
    \GEN_BKEND_CE_REGISTERS[10].ce_out_i[10]_i_1 
       (.I0(pselect_hit_i_2),
        .I1(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [2]),
        .I2(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [4]),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [5]),
        .I4(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .O(ce_expnd_i_24));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[10].ce_out_i_reg[10] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_24),
        .Q(p_24_in),
        .R(cs_ce_clr));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \GEN_BKEND_CE_REGISTERS[17].ce_out_i[17]_i_1 
       (.I0(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .I1(pselect_hit_i_0),
        .I2(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [5]),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [6]),
        .I4(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [2]),
        .I5(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [4]),
        .O(ce_expnd_i_17));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[17].ce_out_i_reg[17] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_17),
        .Q(p_17_in),
        .R(cs_ce_clr));
  LUT6 #(
    .INIT(64'h0000000000001000)) 
    \GEN_BKEND_CE_REGISTERS[18].ce_out_i[18]_i_1 
       (.I0(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [5]),
        .I1(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [6]),
        .I2(pselect_hit_i_0),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [2]),
        .I4(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .I5(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [4]),
        .O(ce_expnd_i_16));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[18].ce_out_i_reg[18] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_16),
        .Q(p_16_in),
        .R(cs_ce_clr));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \GEN_BKEND_CE_REGISTERS[19].ce_out_i[19]_i_1 
       (.I0(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [5]),
        .I1(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [6]),
        .I2(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [2]),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [4]),
        .I4(pselect_hit_i_0),
        .I5(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .O(ce_expnd_i_15));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[19].ce_out_i_reg[19] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_15),
        .Q(p_15_in),
        .R(cs_ce_clr));
  LUT6 #(
    .INIT(64'h0000000010000000)) 
    \GEN_BKEND_CE_REGISTERS[20].ce_out_i[20]_i_1 
       (.I0(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [6]),
        .I1(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [4]),
        .I2(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [2]),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .I4(pselect_hit_i_0),
        .I5(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [5]),
        .O(ce_expnd_i_14));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[20].ce_out_i_reg[20] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_14),
        .Q(p_14_in),
        .R(cs_ce_clr));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \GEN_BKEND_CE_REGISTERS[21].ce_out_i[21]_i_1 
       (.I0(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [4]),
        .I1(pselect_hit_i_0),
        .I2(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [6]),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [5]),
        .I4(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .I5(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [2]),
        .O(ce_expnd_i_13));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[21].ce_out_i_reg[21] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_13),
        .Q(p_13_in),
        .R(cs_ce_clr));
  LUT6 #(
    .INIT(64'h0010000000000000)) 
    \GEN_BKEND_CE_REGISTERS[22].ce_out_i[22]_i_1 
       (.I0(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [6]),
        .I1(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [5]),
        .I2(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [2]),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .I4(pselect_hit_i_0),
        .I5(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [4]),
        .O(ce_expnd_i_12));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[22].ce_out_i_reg[22] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_12),
        .Q(p_12_in),
        .R(cs_ce_clr));
  LUT6 #(
    .INIT(64'h0000000000080000)) 
    \GEN_BKEND_CE_REGISTERS[23].ce_out_i[23]_i_1 
       (.I0(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [4]),
        .I1(pselect_hit_i_0),
        .I2(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [6]),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [5]),
        .I4(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .I5(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [2]),
        .O(ce_expnd_i_11));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[23].ce_out_i_reg[23] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_11),
        .Q(p_11_in),
        .R(cs_ce_clr));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    \GEN_BKEND_CE_REGISTERS[24].ce_out_i[24]_i_1 
       (.I0(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .I1(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [2]),
        .I2(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [4]),
        .I3(pselect_hit_i_0),
        .I4(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [6]),
        .I5(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [5]),
        .O(ce_expnd_i_10));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[24].ce_out_i_reg[24] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_10),
        .Q(p_10_in),
        .R(cs_ce_clr));
  LUT6 #(
    .INIT(64'h0000000000001000)) 
    \GEN_BKEND_CE_REGISTERS[25].ce_out_i[25]_i_1 
       (.I0(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [6]),
        .I1(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [4]),
        .I2(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [5]),
        .I3(pselect_hit_i_0),
        .I4(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [2]),
        .I5(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .O(ce_expnd_i_9));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[25].ce_out_i_reg[25] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_9),
        .Q(p_9_in),
        .R(cs_ce_clr));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    \GEN_BKEND_CE_REGISTERS[26].ce_out_i[26]_i_1 
       (.I0(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .I1(pselect_hit_i_0),
        .I2(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [5]),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [2]),
        .I4(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [6]),
        .I5(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [4]),
        .O(ce_expnd_i_8));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[26].ce_out_i_reg[26] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_8),
        .Q(p_8_in),
        .R(cs_ce_clr));
  LUT6 #(
    .INIT(64'h0000000000000800)) 
    \GEN_BKEND_CE_REGISTERS[27].ce_out_i[27]_i_1 
       (.I0(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [5]),
        .I1(pselect_hit_i_0),
        .I2(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [2]),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .I4(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [6]),
        .I5(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [4]),
        .O(ce_expnd_i_7));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[27].ce_out_i_reg[27] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_7),
        .Q(p_7_in),
        .R(cs_ce_clr));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    \GEN_BKEND_CE_REGISTERS[28].ce_out_i[28]_i_1 
       (.I0(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [6]),
        .I1(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [4]),
        .I2(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [2]),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .I4(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [5]),
        .I5(pselect_hit_i_0),
        .O(ce_expnd_i_6));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[28].ce_out_i_reg[28] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_6),
        .Q(p_6_in),
        .R(cs_ce_clr));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    \GEN_BKEND_CE_REGISTERS[29].ce_out_i[29]_i_1 
       (.I0(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [6]),
        .I1(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [5]),
        .I2(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [4]),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [8]),
        .I4(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [2]),
        .I5(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .O(ce_expnd_i_5));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[29].ce_out_i_reg[29] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_5),
        .Q(p_5_in),
        .R(cs_ce_clr));
  LUT6 #(
    .INIT(64'h0040000000000000)) 
    \GEN_BKEND_CE_REGISTERS[30].ce_out_i[30]_i_1 
       (.I0(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [6]),
        .I1(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [5]),
        .I2(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [2]),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .I4(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [8]),
        .I5(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [4]),
        .O(ce_expnd_i_4));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[30].ce_out_i_reg[30] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_4),
        .Q(p_4_in),
        .R(cs_ce_clr));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    \GEN_BKEND_CE_REGISTERS[31].ce_out_i[31]_i_1 
       (.I0(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [2]),
        .I1(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [6]),
        .I2(pselect_hit_i_0),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [4]),
        .I4(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [5]),
        .I5(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .O(ce_expnd_i_3));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[31].ce_out_i_reg[31] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_3),
        .Q(p_3_in),
        .R(cs_ce_clr));
  LUT6 #(
    .INIT(64'h4000000000000000)) 
    \GEN_BKEND_CE_REGISTERS[32].ce_out_i[32]_i_1 
       (.I0(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [6]),
        .I1(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [5]),
        .I2(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [2]),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .I4(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [8]),
        .I5(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [4]),
        .O(ce_expnd_i_2));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[32].ce_out_i_reg[32] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_2),
        .Q(p_2_in),
        .R(cs_ce_clr));
  LUT5 #(
    .INIT(32'h00000400)) 
    \GEN_BKEND_CE_REGISTERS[33].ce_out_i[33]_i_1 
       (.I0(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [5]),
        .I1(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [6]),
        .I2(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [4]),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [8]),
        .I4(\GEN_BKEND_CE_REGISTERS[33].ce_out_i[33]_i_2_n_0 ),
        .O(ce_expnd_i_1));
  LUT2 #(
    .INIT(4'hE)) 
    \GEN_BKEND_CE_REGISTERS[33].ce_out_i[33]_i_2 
       (.I0(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [2]),
        .I1(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .O(\GEN_BKEND_CE_REGISTERS[33].ce_out_i[33]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[33].ce_out_i_reg[33] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_1),
        .Q(p_1_in_0),
        .R(cs_ce_clr));
  LUT3 #(
    .INIT(8'hFB)) 
    \GEN_BKEND_CE_REGISTERS[34].ce_out_i[34]_i_1 
       (.I0(is_write_reg),
        .I1(s_axi_aresetn),
        .I2(is_read_reg),
        .O(cs_ce_clr));
  LUT6 #(
    .INIT(64'h0000020000000000)) 
    \GEN_BKEND_CE_REGISTERS[34].ce_out_i[34]_i_2 
       (.I0(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [2]),
        .I1(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .I2(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [4]),
        .I3(pselect_hit_i_0),
        .I4(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [5]),
        .I5(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [6]),
        .O(ce_expnd_i_0));
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_BKEND_CE_REGISTERS[34].ce_out_i[34]_i_3 
       (.I0(Q),
        .I1(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [8]),
        .O(pselect_hit_i_0));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[34].ce_out_i_reg[34] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_0),
        .Q(\GEN_BKEND_CE_REGISTERS[34].ce_out_i_reg_n_0_[34] ),
        .R(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT5 #(
    .INIT(32'h08000000)) 
    \GEN_BKEND_CE_REGISTERS[7].ce_out_i[7]_i_1 
       (.I0(pselect_hit_i_2),
        .I1(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [4]),
        .I2(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [5]),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [2]),
        .I4(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .O(ce_expnd_i_27));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[7].ce_out_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_27),
        .Q(p_27_in),
        .R(cs_ce_clr));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \GEN_BKEND_CE_REGISTERS[8].ce_out_i[8]_i_1 
       (.I0(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [6]),
        .I1(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [5]),
        .I2(\GEN_BKEND_CE_REGISTERS[33].ce_out_i[33]_i_2_n_0 ),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [8]),
        .I4(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [7]),
        .I5(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [4]),
        .O(ce_expnd_i_26));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[8].ce_out_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(ce_expnd_i_26),
        .Q(\GEN_BKEND_CE_REGISTERS[8].ce_out_i_reg[8]_0 ),
        .R(cs_ce_clr));
  LUT4 #(
    .INIT(16'hFB08)) 
    \GPO_GEN.gpo_i[31]_i_2 
       (.I0(s_axi_wdata[0]),
        .I1(p_8_in),
        .I2(Bus_RNW_reg_reg_0),
        .I3(gpo),
        .O(s_axi_wdata_0_sn_1));
  LUT4 #(
    .INIT(16'h0010)) 
    \MEM_DECODE_GEN[0].cs_out_i[0]_i_1 
       (.I0(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [7]),
        .I1(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [8]),
        .I2(Q),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [6]),
        .O(pselect_hit_i_2));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DECODE_GEN[0].cs_out_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(pselect_hit_i_2),
        .Q(AXI_Bus2IP_CS[2]),
        .R(cs_ce_clr));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \MEM_DECODE_GEN[1].cs_out_i[1]_i_1 
       (.I0(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [5]),
        .I1(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [6]),
        .I2(\GEN_BKEND_CE_REGISTERS[33].ce_out_i[33]_i_2_n_0 ),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [8]),
        .I4(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [7]),
        .I5(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [4]),
        .O(\MEM_DECODE_GEN[1].GEN_FOR_MULTI_CS.MEM_SELECT_I/CS ));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DECODE_GEN[1].cs_out_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(\MEM_DECODE_GEN[1].GEN_FOR_MULTI_CS.MEM_SELECT_I/CS ),
        .Q(AXI_Bus2IP_CS[1]),
        .R(cs_ce_clr));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DECODE_GEN[2].cs_out_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(Q),
        .D(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [8]),
        .Q(AXI_Bus2IP_CS[0]),
        .R(cs_ce_clr));
  LUT2 #(
    .INIT(4'h8)) 
    \RD_FIFO_CNTRL.Rc_fifo_rd_i_1 
       (.I0(Bus_RNW_reg_reg_0),
        .I1(p_14_in),
        .O(Bus2IIC_RdCE));
  LUT2 #(
    .INIT(4'h2)) 
    \RD_FIFO_CNTRL.rc_fifo_pirq_i[4]_i_1 
       (.I0(p_9_in),
        .I1(Bus_RNW_reg_reg_0),
        .O(Bus2IIC_WrCE[8]));
  LUT2 #(
    .INIT(4'h2)) 
    \adr_i[0]_i_1 
       (.I0(p_13_in),
        .I1(Bus_RNW_reg_reg_0),
        .O(Bus2IIC_WrCE[9]));
  LUT2 #(
    .INIT(4'h2)) 
    \cr_i[0]_i_1 
       (.I0(p_17_in),
        .I1(Bus_RNW_reg_reg_0),
        .O(Bus2IIC_WrCE[11]));
  LUT6 #(
    .INIT(64'h08080808FBFBFB08)) 
    \cr_i[4]_i_1 
       (.I0(s_axi_wdata[3]),
        .I1(p_17_in),
        .I2(Bus_RNW_reg_reg_0),
        .I3(\cr_i_reg[4] ),
        .I4(cr_txModeSelect_set),
        .I5(cr_txModeSelect_clr),
        .O(\s_axi_wdata[3] ));
  LUT2 #(
    .INIT(4'h2)) 
    \ip_irpt_enable_reg[7]_i_1 
       (.I0(p_24_in),
        .I1(Bus_RNW_reg_reg_0),
        .O(E));
  LUT4 #(
    .INIT(16'hFB08)) 
    ipif_glbl_irpt_enable_reg_i_1
       (.I0(s_axi_wdata[4]),
        .I1(p_27_in),
        .I2(Bus_RNW_reg_reg_0),
        .I3(p_0_in),
        .O(\s_axi_wdata[31] ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'h0F0E)) 
    irpt_wrack_d1_i_1
       (.I0(p_24_in),
        .I1(\GEN_BKEND_CE_REGISTERS[8].ce_out_i_reg[8]_0 ),
        .I2(Bus_RNW_reg_reg_0),
        .I3(p_27_in),
        .O(irpt_wrack));
  LUT2 #(
    .INIT(4'h2)) 
    reset_trig_i_1
       (.I0(sw_rst_cond),
        .I1(sw_rst_cond_d1),
        .O(reset_trig0));
  LUT4 #(
    .INIT(16'h4F44)) 
    s_axi_arready_INST_0
       (.I0(s_axi_wready_INST_0_i_1_n_0),
        .I1(s_axi_arready),
        .I2(AXI_IP2Bus_RdAck1),
        .I3(AXI_IP2Bus_RdAck2),
        .O(is_read_reg));
  LUT5 #(
    .INIT(32'hFFFF1011)) 
    \s_axi_rdata_i[0]_i_1 
       (.I0(\s_axi_rdata_i[7]_i_3_n_0 ),
        .I1(\s_axi_rdata_i_reg[0] ),
        .I2(\s_axi_rdata_i_reg[0]_0 ),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .I4(\s_axi_rdata_i[0]_i_4_n_0 ),
        .O(D[0]));
  LUT5 #(
    .INIT(32'h8C808080)) 
    \s_axi_rdata_i[0]_i_4 
       (.I0(\s_axi_rdata_i_reg[0]_1 ),
        .I1(Bus_RNW_reg_reg_0),
        .I2(\GEN_BKEND_CE_REGISTERS[8].ce_out_i_reg[8]_0 ),
        .I3(\s_axi_rdata_i_reg[7] [0]),
        .I4(p_24_in),
        .O(\s_axi_rdata_i[0]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \s_axi_rdata_i[10]_i_10 
       (.I0(p_14_in),
        .I1(\GEN_BKEND_CE_REGISTERS[34].ce_out_i_reg_n_0_[34] ),
        .I2(p_11_in),
        .I3(p_9_in),
        .O(\s_axi_rdata_i[10]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFDDDBFFFF)) 
    \s_axi_rdata_i[10]_i_4 
       (.I0(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [5]),
        .I1(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [6]),
        .I2(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [4]),
        .I4(\s_axi_rdata_i_reg[8] ),
        .I5(\s_axi_rdata_i[10]_i_6_n_0 ),
        .O(\bus2ip_addr_i_reg[5] ));
  LUT5 #(
    .INIT(32'h5555555D)) 
    \s_axi_rdata_i[10]_i_6 
       (.I0(Bus_RNW_reg_reg_0),
        .I1(\s_axi_rdata_i[10]_i_7_n_0 ),
        .I2(\s_axi_rdata_i[10]_i_8_n_0 ),
        .I3(\s_axi_rdata_i[10]_i_9_n_0 ),
        .I4(\s_axi_rdata_i[10]_i_10_n_0 ),
        .O(\s_axi_rdata_i[10]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \s_axi_rdata_i[10]_i_7 
       (.I0(p_7_in),
        .I1(p_1_in_0),
        .I2(p_5_in),
        .I3(p_17_in),
        .I4(p_3_in),
        .I5(p_16_in),
        .O(\s_axi_rdata_i[10]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \s_axi_rdata_i[10]_i_8 
       (.I0(p_15_in),
        .I1(p_8_in),
        .I2(p_10_in),
        .I3(p_4_in),
        .O(\s_axi_rdata_i[10]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \s_axi_rdata_i[10]_i_9 
       (.I0(p_12_in),
        .I1(p_2_in),
        .I2(p_13_in),
        .I3(p_6_in),
        .O(\s_axi_rdata_i[10]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF1011)) 
    \s_axi_rdata_i[1]_i_1 
       (.I0(\s_axi_rdata_i[7]_i_3_n_0 ),
        .I1(\s_axi_rdata_i_reg[1] ),
        .I2(\s_axi_rdata_i_reg[1]_0 ),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .I4(\s_axi_rdata_i[1]_i_4_n_0 ),
        .O(D[1]));
  LUT5 #(
    .INIT(32'h8C808080)) 
    \s_axi_rdata_i[1]_i_4 
       (.I0(p_1_in16_in),
        .I1(Bus_RNW_reg_reg_0),
        .I2(\GEN_BKEND_CE_REGISTERS[8].ce_out_i_reg[8]_0 ),
        .I3(\s_axi_rdata_i_reg[7] [1]),
        .I4(p_24_in),
        .O(\s_axi_rdata_i[1]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF1011)) 
    \s_axi_rdata_i[2]_i_1 
       (.I0(\s_axi_rdata_i[7]_i_3_n_0 ),
        .I1(\s_axi_rdata_i_reg[2] ),
        .I2(\s_axi_rdata_i_reg[2]_0 ),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .I4(\s_axi_rdata_i[2]_i_4_n_0 ),
        .O(D[2]));
  LUT5 #(
    .INIT(32'h8C808080)) 
    \s_axi_rdata_i[2]_i_4 
       (.I0(p_1_in13_in),
        .I1(Bus_RNW_reg_reg_0),
        .I2(\GEN_BKEND_CE_REGISTERS[8].ce_out_i_reg[8]_0 ),
        .I3(\s_axi_rdata_i_reg[7] [2]),
        .I4(p_24_in),
        .O(\s_axi_rdata_i[2]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT5 #(
    .INIT(32'h00000080)) 
    \s_axi_rdata_i[31]_i_1 
       (.I0(p_27_in),
        .I1(p_0_in),
        .I2(Bus_RNW_reg_reg_0),
        .I3(p_24_in),
        .I4(\GEN_BKEND_CE_REGISTERS[8].ce_out_i_reg[8]_0 ),
        .O(D[8]));
  LUT6 #(
    .INIT(64'hFFFFFFFF01001111)) 
    \s_axi_rdata_i[3]_i_1 
       (.I0(\s_axi_rdata_i[7]_i_3_n_0 ),
        .I1(\s_axi_rdata_i_reg[3] ),
        .I2(\s_axi_rdata_i_reg[3]_0 ),
        .I3(\s_axi_rdata_i_reg[3]_1 ),
        .I4(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [3]),
        .I5(\s_axi_rdata_i[3]_i_5_n_0 ),
        .O(D[3]));
  LUT5 #(
    .INIT(32'h8C808080)) 
    \s_axi_rdata_i[3]_i_5 
       (.I0(p_1_in10_in),
        .I1(Bus_RNW_reg_reg_0),
        .I2(\GEN_BKEND_CE_REGISTERS[8].ce_out_i_reg[8]_0 ),
        .I3(\s_axi_rdata_i_reg[7] [3]),
        .I4(p_24_in),
        .O(\s_axi_rdata_i[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF1111111F111)) 
    \s_axi_rdata_i[4]_i_1 
       (.I0(\s_axi_rdata_i_reg[4] ),
        .I1(\s_axi_rdata_i[7]_i_3_n_0 ),
        .I2(\s_axi_rdata_i[7]_i_4_n_0 ),
        .I3(\s_axi_rdata_i_reg[7] [4]),
        .I4(\s_axi_rdata_i[7]_i_5_n_0 ),
        .I5(p_1_in7_in),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hFFFFF1111111F111)) 
    \s_axi_rdata_i[5]_i_1 
       (.I0(\s_axi_rdata_i_reg[5] ),
        .I1(\s_axi_rdata_i[7]_i_3_n_0 ),
        .I2(\s_axi_rdata_i[7]_i_4_n_0 ),
        .I3(\s_axi_rdata_i_reg[7] [5]),
        .I4(\s_axi_rdata_i[7]_i_5_n_0 ),
        .I5(p_1_in4_in),
        .O(D[5]));
  LUT6 #(
    .INIT(64'hFFFFF1111111F111)) 
    \s_axi_rdata_i[6]_i_1 
       (.I0(\s_axi_rdata_i_reg[6] ),
        .I1(\s_axi_rdata_i[7]_i_3_n_0 ),
        .I2(\s_axi_rdata_i[7]_i_4_n_0 ),
        .I3(\s_axi_rdata_i_reg[7] [6]),
        .I4(\s_axi_rdata_i[7]_i_5_n_0 ),
        .I5(p_1_in1_in),
        .O(D[6]));
  LUT6 #(
    .INIT(64'hFFFFF1111111F111)) 
    \s_axi_rdata_i[7]_i_1 
       (.I0(\s_axi_rdata_i_reg[7]_0 ),
        .I1(\s_axi_rdata_i[7]_i_3_n_0 ),
        .I2(\s_axi_rdata_i[7]_i_4_n_0 ),
        .I3(\s_axi_rdata_i_reg[7] [7]),
        .I4(\s_axi_rdata_i[7]_i_5_n_0 ),
        .I5(p_1_in),
        .O(D[7]));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \s_axi_rdata_i[7]_i_3 
       (.I0(\s_axi_rdata_i[10]_i_6_n_0 ),
        .I1(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [7]),
        .I2(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [1]),
        .I3(\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 [0]),
        .O(\s_axi_rdata_i[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata_i[7]_i_4 
       (.I0(Bus_RNW_reg_reg_0),
        .I1(p_24_in),
        .O(\s_axi_rdata_i[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_rdata_i[7]_i_5 
       (.I0(Bus_RNW_reg_reg_0),
        .I1(\GEN_BKEND_CE_REGISTERS[8].ce_out_i_reg[8]_0 ),
        .O(\s_axi_rdata_i[7]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h4F44)) 
    s_axi_wready_INST_0
       (.I0(s_axi_wready_INST_0_i_1_n_0),
        .I1(s_axi_awready),
        .I2(AXI_IP2Bus_WrAck1),
        .I3(AXI_IP2Bus_WrAck2),
        .O(is_write_reg));
  LUT4 #(
    .INIT(16'hFFEF)) 
    s_axi_wready_INST_0_i_1
       (.I0(s_axi_awready_0[1]),
        .I1(s_axi_awready_0[0]),
        .I2(s_axi_awready_0[3]),
        .I3(s_axi_awready_0[2]),
        .O(s_axi_wready_INST_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000040000000000)) 
    sw_rst_cond_d1_i_1
       (.I0(Bus_RNW_reg_reg_0),
        .I1(AXI_Bus2IP_CS[1]),
        .I2(s_axi_wdata[0]),
        .I3(s_axi_wdata[1]),
        .I4(s_axi_wdata[2]),
        .I5(s_axi_wdata[3]),
        .O(sw_rst_cond));
  LUT2 #(
    .INIT(4'h2)) 
    \timing_param_tbuf_i[10]_i_1 
       (.I0(p_3_in),
        .I1(Bus_RNW_reg_reg_0),
        .O(Bus2IIC_WrCE[3]));
  LUT2 #(
    .INIT(4'h2)) 
    \timing_param_thddat_i[10]_i_1 
       (.I0(\GEN_BKEND_CE_REGISTERS[34].ce_out_i_reg_n_0_[34] ),
        .I1(Bus_RNW_reg_reg_0),
        .O(Bus2IIC_WrCE[0]));
  LUT2 #(
    .INIT(4'h2)) 
    \timing_param_thdsta_i[10]_i_1 
       (.I0(p_5_in),
        .I1(Bus_RNW_reg_reg_0),
        .O(Bus2IIC_WrCE[5]));
  LUT2 #(
    .INIT(4'h2)) 
    \timing_param_thigh_i[10]_i_1 
       (.I0(p_2_in),
        .I1(Bus_RNW_reg_reg_0),
        .O(Bus2IIC_WrCE[2]));
  LUT2 #(
    .INIT(4'h2)) 
    \timing_param_tlow_i[10]_i_1 
       (.I0(p_1_in_0),
        .I1(Bus_RNW_reg_reg_0),
        .O(Bus2IIC_WrCE[1]));
  LUT2 #(
    .INIT(4'h2)) 
    \timing_param_tsudat_i[10]_i_1 
       (.I0(p_4_in),
        .I1(Bus_RNW_reg_reg_0),
        .O(Bus2IIC_WrCE[4]));
  LUT2 #(
    .INIT(4'h2)) 
    \timing_param_tsusta_i[10]_i_1 
       (.I0(p_7_in),
        .I1(Bus_RNW_reg_reg_0),
        .O(Bus2IIC_WrCE[7]));
  LUT2 #(
    .INIT(4'h2)) 
    \timing_param_tsusto_i[10]_i_1 
       (.I0(p_6_in),
        .I1(Bus_RNW_reg_reg_0),
        .O(Bus2IIC_WrCE[6]));
endmodule

(* C_DEFAULT_VALUE = "8'b00000000" *) (* C_DISABLE_SETUP_VIOLATION_CHECK = "0" *) (* C_FAMILY = "spartan7" *) 
(* C_GPO_WIDTH = "1" *) (* C_IIC_FREQ = "100000" *) (* C_SCL_INERTIAL_DELAY = "0" *) 
(* C_SDA_INERTIAL_DELAY = "0" *) (* C_SDA_LEVEL = "1" *) (* C_SMBUS_PMBUS_HOST = "0" *) 
(* C_STATIC_TIMING_REG_WIDTH = "0" *) (* C_S_AXI_ACLK_FREQ_HZ = "200000000" *) (* C_S_AXI_ADDR_WIDTH = "9" *) 
(* C_S_AXI_DATA_WIDTH = "32" *) (* C_TEN_BIT_ADR = "0" *) (* C_TIMING_REG_WIDTH = "32" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "axi_iic" *) 
module system_axi_iic_0_0__axi_iic
   (s_axi_aclk,
    s_axi_aresetn,
    iic2intc_irpt,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready,
    sda_i,
    sda_o,
    sda_t,
    scl_i,
    scl_o,
    scl_t,
    gpo);
  input s_axi_aclk;
  input s_axi_aresetn;
  output iic2intc_irpt;
  input [8:0]s_axi_awaddr;
  input s_axi_awvalid;
  output s_axi_awready;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wvalid;
  output s_axi_wready;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [8:0]s_axi_araddr;
  input s_axi_arvalid;
  output s_axi_arready;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rvalid;
  input s_axi_rready;
  input sda_i;
  output sda_o;
  output sda_t;
  input scl_i;
  output scl_o;
  output scl_t;
  output [0:0]gpo;

  wire \<const0> ;
  wire s_axi_aclk;
  wire [8:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wvalid;
  wire scl_i;
  wire scl_t;
  wire sda_i;
  wire sda_t;
  wire NLW_X_IIC_iic2intc_irpt_UNCONNECTED;
  wire [0:0]NLW_X_IIC_gpo_UNCONNECTED;
  wire [8:0]NLW_X_IIC_s_axi_awaddr_UNCONNECTED;
  wire [0:0]NLW_X_IIC_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_X_IIC_s_axi_rresp_UNCONNECTED;

  assign s_axi_wready = s_axi_awready;
  assign scl_o = \<const0> ;
  assign sda_o = \<const0> ;
  GND GND
       (.G(\<const0> ));
  system_axi_iic_0_0__iic X_IIC
       (.gpo(NLW_X_IIC_gpo_UNCONNECTED[0]),
        .iic2intc_irpt(NLW_X_IIC_iic2intc_irpt_UNCONNECTED),
        .is_read_reg(s_axi_arready),
        .is_write_reg(s_axi_awready),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(NLW_X_IIC_s_axi_awaddr_UNCONNECTED[8:0]),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_X_IIC_s_axi_bresp_UNCONNECTED[0]),
        .s_axi_bvalid_i_reg(s_axi_bvalid),
        .s_axi_rdata({s_axi_rdata[31],s_axi_rdata[10:0]}),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_X_IIC_s_axi_rresp_UNCONNECTED[0]),
        .s_axi_rvalid_i_reg(s_axi_rvalid),
        .s_axi_wdata({s_axi_wdata[31],s_axi_wdata[10:0]}),
        .s_axi_wvalid(s_axi_wvalid),
        .scl_i(scl_i),
        .scl_t(scl_t),
        .sda_i(sda_i),
        .sda_t(sda_t));
endmodule

(* ORIG_REF_NAME = "axi_ipif_ssp1" *) 
module system_axi_iic_0_0__axi_ipif_ssp1
   (s_axi_rresp,
    Bus2IIC_Reset,
    Q,
    s_axi_rvalid_i_reg,
    s_axi_bvalid_i_reg,
    s_axi_bresp,
    is_write_reg,
    is_read_reg,
    ctrlFifoDin,
    \bus2ip_addr_i_reg[5] ,
    Bus2IIC_RdCE,
    \s_axi_wdata[3] ,
    Bus2IIC_WrCE,
    iic2intc_irpt,
    s_axi_wdata_0_sp_1,
    s_axi_rdata,
    s_axi_aclk,
    s_axi_arvalid,
    Rc_fifo_data,
    \s_axi_rdata_i_reg[7]_i_7 ,
    \s_axi_rdata_i_reg[7]_i_7_0 ,
    Tx_fifo_data,
    \s_axi_rdata_i_reg[7]_i_6 ,
    \s_axi_rdata_i_reg[7]_i_6_0 ,
    \s_axi_rdata_i[7]_i_8 ,
    \s_axi_rdata_i[7]_i_8_0 ,
    \s_axi_rdata_i[0]_i_2 ,
    s_axi_aresetn,
    s_axi_wvalid,
    s_axi_awvalid,
    IIC2Bus_IntrEvent,
    s_axi_wdata,
    Tx_fifo_rst,
    \s_axi_rdata_i_reg[7]_i_6_1 ,
    Tx_addr,
    \s_axi_rdata_i[3]_i_2 ,
    \s_axi_rdata_i[0]_i_2_0 ,
    \s_axi_rdata_i_reg[7]_i_6_2 ,
    \s_axi_rdata_i[1]_i_2 ,
    \s_axi_rdata_i[2]_i_2 ,
    \s_axi_rdata_i[3]_i_2_0 ,
    \s_axi_rdata_i_reg[4]_i_2 ,
    \s_axi_rdata_i_reg[5]_i_2 ,
    \s_axi_rdata_i_reg[6]_i_2 ,
    \s_axi_rdata_i_reg[7]_i_2 ,
    Rc_addr,
    cr_txModeSelect_set,
    cr_txModeSelect_clr,
    s_axi_rready,
    s_axi_bready,
    \s_axi_rdata_i[3]_i_2_1 ,
    \s_axi_rdata_i[2]_i_2_0 ,
    \s_axi_rdata_i[1]_i_2_0 ,
    s_axi_araddr,
    s_axi_awaddr,
    gpo,
    D);
  output [0:0]s_axi_rresp;
  output Bus2IIC_Reset;
  output [4:0]Q;
  output s_axi_rvalid_i_reg;
  output s_axi_bvalid_i_reg;
  output [0:0]s_axi_bresp;
  output is_write_reg;
  output is_read_reg;
  output [0:1]ctrlFifoDin;
  output \bus2ip_addr_i_reg[5] ;
  output [0:0]Bus2IIC_RdCE;
  output [0:0]\s_axi_wdata[3] ;
  output [11:0]Bus2IIC_WrCE;
  output iic2intc_irpt;
  output s_axi_wdata_0_sp_1;
  output [11:0]s_axi_rdata;
  input s_axi_aclk;
  input s_axi_arvalid;
  input [0:7]Rc_fifo_data;
  input [7:0]\s_axi_rdata_i_reg[7]_i_7 ;
  input [7:0]\s_axi_rdata_i_reg[7]_i_7_0 ;
  input [0:7]Tx_fifo_data;
  input [7:0]\s_axi_rdata_i_reg[7]_i_6 ;
  input [7:0]\s_axi_rdata_i_reg[7]_i_6_0 ;
  input [5:0]\s_axi_rdata_i[7]_i_8 ;
  input [4:0]\s_axi_rdata_i[7]_i_8_0 ;
  input [0:0]\s_axi_rdata_i[0]_i_2 ;
  input s_axi_aresetn;
  input s_axi_wvalid;
  input s_axi_awvalid;
  input [0:7]IIC2Bus_IntrEvent;
  input [10:0]s_axi_wdata;
  input Tx_fifo_rst;
  input [7:0]\s_axi_rdata_i_reg[7]_i_6_1 ;
  input [0:3]Tx_addr;
  input [3:0]\s_axi_rdata_i[3]_i_2 ;
  input \s_axi_rdata_i[0]_i_2_0 ;
  input [6:0]\s_axi_rdata_i_reg[7]_i_6_2 ;
  input \s_axi_rdata_i[1]_i_2 ;
  input \s_axi_rdata_i[2]_i_2 ;
  input \s_axi_rdata_i[3]_i_2_0 ;
  input \s_axi_rdata_i_reg[4]_i_2 ;
  input \s_axi_rdata_i_reg[5]_i_2 ;
  input \s_axi_rdata_i_reg[6]_i_2 ;
  input \s_axi_rdata_i_reg[7]_i_2 ;
  input [0:3]Rc_addr;
  input cr_txModeSelect_set;
  input cr_txModeSelect_clr;
  input s_axi_rready;
  input s_axi_bready;
  input \s_axi_rdata_i[3]_i_2_1 ;
  input \s_axi_rdata_i[2]_i_2_0 ;
  input \s_axi_rdata_i[1]_i_2_0 ;
  input [8:0]s_axi_araddr;
  input [8:0]s_axi_awaddr;
  input [0:0]gpo;
  input [2:0]D;

  wire AXI_Bus2IP_Reset;
  wire [10:10]AXI_Bus2IP_WrCE;
  wire AXI_IP2Bus_RdAck1;
  wire AXI_IP2Bus_RdAck2;
  wire AXI_IP2Bus_RdAck20;
  wire AXI_IP2Bus_WrAck1;
  wire AXI_IP2Bus_WrAck2;
  wire AXI_IP2Bus_WrAck20;
  wire AXI_LITE_IPIF_I_n_32;
  wire [0:0]Bus2IIC_RdCE;
  wire Bus2IIC_Reset;
  wire [11:0]Bus2IIC_WrCE;
  wire [2:0]D;
  wire [0:7]IIC2Bus_IntrEvent;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/Bus_RNW_reg ;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/p_26_in ;
  wire [4:0]Q;
  wire [0:3]Rc_addr;
  wire [0:7]Rc_fifo_data;
  wire [0:3]Tx_addr;
  wire [0:7]Tx_fifo_data;
  wire Tx_fifo_rst;
  wire X_INTERRUPT_CONTROL_n_0;
  wire X_INTERRUPT_CONTROL_n_17;
  wire \bus2ip_addr_i_reg[5] ;
  wire cr_txModeSelect_clr;
  wire cr_txModeSelect_set;
  wire [0:1]ctrlFifoDin;
  wire [0:0]gpo;
  wire irpt_wrack;
  wire is_read_reg;
  wire is_write_reg;
  wire [31:31]p_0_in;
  wire p_0_in0_in;
  wire p_0_in11_in;
  wire p_0_in14_in;
  wire p_0_in17_in;
  wire p_0_in2_in;
  wire p_0_in5_in;
  wire p_0_in8_in;
  wire p_1_in;
  wire p_1_in10_in;
  wire p_1_in13_in;
  wire p_1_in16_in;
  wire p_1_in1_in;
  wire p_1_in4_in;
  wire p_1_in7_in;
  wire reset_trig0;
  wire s_axi_aclk;
  wire [8:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arvalid;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid_i_reg;
  wire [11:0]s_axi_rdata;
  wire [0:0]\s_axi_rdata_i[0]_i_2 ;
  wire \s_axi_rdata_i[0]_i_2_0 ;
  wire \s_axi_rdata_i[1]_i_2 ;
  wire \s_axi_rdata_i[1]_i_2_0 ;
  wire \s_axi_rdata_i[2]_i_2 ;
  wire \s_axi_rdata_i[2]_i_2_0 ;
  wire [3:0]\s_axi_rdata_i[3]_i_2 ;
  wire \s_axi_rdata_i[3]_i_2_0 ;
  wire \s_axi_rdata_i[3]_i_2_1 ;
  wire [5:0]\s_axi_rdata_i[7]_i_8 ;
  wire [4:0]\s_axi_rdata_i[7]_i_8_0 ;
  wire \s_axi_rdata_i_reg[4]_i_2 ;
  wire \s_axi_rdata_i_reg[5]_i_2 ;
  wire \s_axi_rdata_i_reg[6]_i_2 ;
  wire \s_axi_rdata_i_reg[7]_i_2 ;
  wire [7:0]\s_axi_rdata_i_reg[7]_i_6 ;
  wire [7:0]\s_axi_rdata_i_reg[7]_i_6_0 ;
  wire [7:0]\s_axi_rdata_i_reg[7]_i_6_1 ;
  wire [6:0]\s_axi_rdata_i_reg[7]_i_6_2 ;
  wire [7:0]\s_axi_rdata_i_reg[7]_i_7 ;
  wire [7:0]\s_axi_rdata_i_reg[7]_i_7_0 ;
  wire s_axi_rready;
  wire s_axi_rvalid_i_reg;
  wire [10:0]s_axi_wdata;
  wire [0:0]\s_axi_wdata[3] ;
  wire s_axi_wdata_0_sn_1;
  wire s_axi_wvalid;
  wire sw_rst_cond;
  wire sw_rst_cond_d1;
  wire [8:0]NLW_AXI_LITE_IPIF_I_s_axi_awaddr_UNCONNECTED;
  wire [0:0]NLW_AXI_LITE_IPIF_I_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_AXI_LITE_IPIF_I_s_axi_rresp_UNCONNECTED;
  wire NLW_X_INTERRUPT_CONTROL_iic2intc_irpt_UNCONNECTED;

  assign s_axi_wdata_0_sp_1 = s_axi_wdata_0_sn_1;
  FDRE #(
    .INIT(1'b0)) 
    AXI_IP2Bus_RdAck1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(AXI_IP2Bus_RdAck2),
        .Q(AXI_IP2Bus_RdAck1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    AXI_IP2Bus_RdAck2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(AXI_IP2Bus_RdAck20),
        .Q(AXI_IP2Bus_RdAck2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    AXI_IP2Bus_WrAck1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(AXI_IP2Bus_WrAck2),
        .Q(AXI_IP2Bus_WrAck1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    AXI_IP2Bus_WrAck2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(AXI_IP2Bus_WrAck20),
        .Q(AXI_IP2Bus_WrAck2),
        .R(1'b0));
  system_axi_iic_0_0__axi_lite_ipif AXI_LITE_IPIF_I
       (.AXI_Bus2IP_Reset(AXI_Bus2IP_Reset),
        .AXI_IP2Bus_RdAck1(AXI_IP2Bus_RdAck1),
        .AXI_IP2Bus_RdAck2(AXI_IP2Bus_RdAck2),
        .AXI_IP2Bus_RdAck20(AXI_IP2Bus_RdAck20),
        .AXI_IP2Bus_WrAck1(AXI_IP2Bus_WrAck1),
        .AXI_IP2Bus_WrAck2(AXI_IP2Bus_WrAck2),
        .AXI_IP2Bus_WrAck20(AXI_IP2Bus_WrAck20),
        .Bus2IIC_RdCE(Bus2IIC_RdCE),
        .Bus2IIC_WrCE(Bus2IIC_WrCE),
        .Bus_RNW_reg(\I_SLAVE_ATTACHMENT/I_DECODER/Bus_RNW_reg ),
        .D(D),
        .E(AXI_Bus2IP_WrCE),
        .Q(Q),
        .Rc_addr(Rc_addr),
        .Rc_fifo_data(Rc_fifo_data),
        .Tx_addr(Tx_addr),
        .Tx_fifo_data(Tx_fifo_data),
        .\bus2ip_addr_i_reg[5] (\bus2ip_addr_i_reg[5] ),
        .cr_txModeSelect_clr(cr_txModeSelect_clr),
        .cr_txModeSelect_set(cr_txModeSelect_set),
        .gpo(gpo),
        .irpt_wrack(irpt_wrack),
        .is_read_reg(is_read_reg),
        .is_write_reg(is_write_reg),
        .p_0_in(p_0_in),
        .p_1_in(p_1_in),
        .p_1_in10_in(p_1_in10_in),
        .p_1_in13_in(p_1_in13_in),
        .p_1_in16_in(p_1_in16_in),
        .p_1_in1_in(p_1_in1_in),
        .p_1_in4_in(p_1_in4_in),
        .p_1_in7_in(p_1_in7_in),
        .p_26_in(\I_SLAVE_ATTACHMENT/I_DECODER/p_26_in ),
        .reset_trig0(reset_trig0),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(NLW_AXI_LITE_IPIF_I_s_axi_awaddr_UNCONNECTED[8:0]),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_AXI_LITE_IPIF_I_s_axi_bresp_UNCONNECTED[0]),
        .s_axi_bvalid_i_reg(s_axi_bvalid_i_reg),
        .s_axi_rdata(s_axi_rdata),
        .\s_axi_rdata_i[0]_i_2 (\s_axi_rdata_i[0]_i_2 ),
        .\s_axi_rdata_i[0]_i_2_0 (\s_axi_rdata_i[0]_i_2_0 ),
        .\s_axi_rdata_i[1]_i_2 (\s_axi_rdata_i[1]_i_2 ),
        .\s_axi_rdata_i[1]_i_2_0 (\s_axi_rdata_i[1]_i_2_0 ),
        .\s_axi_rdata_i[2]_i_2 (\s_axi_rdata_i[2]_i_2 ),
        .\s_axi_rdata_i[2]_i_2_0 (\s_axi_rdata_i[2]_i_2_0 ),
        .\s_axi_rdata_i[3]_i_2 (\s_axi_rdata_i[3]_i_2 ),
        .\s_axi_rdata_i[3]_i_2_0 (\s_axi_rdata_i[3]_i_2_0 ),
        .\s_axi_rdata_i[3]_i_2_1 (\s_axi_rdata_i[3]_i_2_1 ),
        .\s_axi_rdata_i[7]_i_8 (\s_axi_rdata_i[7]_i_8 ),
        .\s_axi_rdata_i[7]_i_8_0 (\s_axi_rdata_i[7]_i_8_0 ),
        .\s_axi_rdata_i_reg[0] (X_INTERRUPT_CONTROL_n_0),
        .\s_axi_rdata_i_reg[4]_i_2 (\s_axi_rdata_i_reg[4]_i_2 ),
        .\s_axi_rdata_i_reg[5]_i_2 (\s_axi_rdata_i_reg[5]_i_2 ),
        .\s_axi_rdata_i_reg[6]_i_2 (\s_axi_rdata_i_reg[6]_i_2 ),
        .\s_axi_rdata_i_reg[7] ({p_0_in17_in,p_0_in14_in,p_0_in11_in,p_0_in8_in,p_0_in5_in,p_0_in2_in,p_0_in0_in,X_INTERRUPT_CONTROL_n_17}),
        .\s_axi_rdata_i_reg[7]_i_2 (\s_axi_rdata_i_reg[7]_i_2 ),
        .\s_axi_rdata_i_reg[7]_i_6 (\s_axi_rdata_i_reg[7]_i_6 ),
        .\s_axi_rdata_i_reg[7]_i_6_0 (\s_axi_rdata_i_reg[7]_i_6_0 ),
        .\s_axi_rdata_i_reg[7]_i_6_1 (\s_axi_rdata_i_reg[7]_i_6_1 ),
        .\s_axi_rdata_i_reg[7]_i_6_2 (\s_axi_rdata_i_reg[7]_i_6_2 ),
        .\s_axi_rdata_i_reg[7]_i_7 (\s_axi_rdata_i_reg[7]_i_7 ),
        .\s_axi_rdata_i_reg[7]_i_7_0 (\s_axi_rdata_i_reg[7]_i_7_0 ),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_AXI_LITE_IPIF_I_s_axi_rresp_UNCONNECTED[0]),
        .s_axi_rvalid_i_reg(s_axi_rvalid_i_reg),
        .s_axi_wdata({s_axi_wdata[10],s_axi_wdata[3:0]}),
        .\s_axi_wdata[31] (AXI_LITE_IPIF_I_n_32),
        .\s_axi_wdata[3] (\s_axi_wdata[3] ),
        .s_axi_wdata_0_sp_1(s_axi_wdata_0_sn_1),
        .s_axi_wvalid(s_axi_wvalid),
        .sw_rst_cond(sw_rst_cond),
        .sw_rst_cond_d1(sw_rst_cond_d1));
  system_axi_iic_0_0__interrupt_control X_INTERRUPT_CONTROL
       (.Bus_RNW_reg(\I_SLAVE_ATTACHMENT/I_DECODER/Bus_RNW_reg ),
        .E(AXI_Bus2IP_WrCE),
        .\GEN_IP_IRPT_STATUS_REG[0].GEN_REG_STATUS.ip_irpt_status_reg_reg[0]_0 (X_INTERRUPT_CONTROL_n_0),
        .IIC2Bus_IntrEvent(IIC2Bus_IntrEvent),
        .Q({p_0_in17_in,p_0_in14_in,p_0_in11_in,p_0_in8_in,p_0_in5_in,p_0_in2_in,p_0_in0_in,X_INTERRUPT_CONTROL_n_17}),
        .SR(Bus2IIC_Reset),
        .iic2intc_irpt(NLW_X_INTERRUPT_CONTROL_iic2intc_irpt_UNCONNECTED),
        .ipif_glbl_irpt_enable_reg_reg_0(AXI_LITE_IPIF_I_n_32),
        .irpt_wrack(irpt_wrack),
        .p_0_in(p_0_in),
        .p_1_in(p_1_in),
        .p_1_in10_in(p_1_in10_in),
        .p_1_in13_in(p_1_in13_in),
        .p_1_in16_in(p_1_in16_in),
        .p_1_in1_in(p_1_in1_in),
        .p_1_in4_in(p_1_in4_in),
        .p_1_in7_in(p_1_in7_in),
        .p_26_in(\I_SLAVE_ATTACHMENT/I_DECODER/p_26_in ),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_wdata(s_axi_wdata[7:0]));
  system_axi_iic_0_0__soft_reset X_SOFT_RESET
       (.AXI_Bus2IP_Reset(AXI_Bus2IP_Reset),
        .SR(Bus2IIC_Reset),
        .Tx_fifo_rst(Tx_fifo_rst),
        .ctrlFifoDin(ctrlFifoDin),
        .reset_trig0(reset_trig0),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_wdata(s_axi_wdata[9:8]),
        .sw_rst_cond(sw_rst_cond),
        .sw_rst_cond_d1(sw_rst_cond_d1));
endmodule

(* ORIG_REF_NAME = "axi_lite_ipif" *) 
module system_axi_iic_0_0__axi_lite_ipif
   (p_26_in,
    s_axi_rresp,
    Bus_RNW_reg,
    s_axi_rvalid_i_reg,
    s_axi_bvalid_i_reg,
    s_axi_bresp,
    Q,
    is_write_reg,
    is_read_reg,
    irpt_wrack,
    E,
    reset_trig0,
    sw_rst_cond,
    \bus2ip_addr_i_reg[5] ,
    Bus2IIC_RdCE,
    \s_axi_wdata[3] ,
    Bus2IIC_WrCE,
    \s_axi_wdata[31] ,
    s_axi_wdata_0_sp_1,
    s_axi_rdata,
    AXI_IP2Bus_WrAck20,
    AXI_IP2Bus_RdAck20,
    AXI_Bus2IP_Reset,
    s_axi_aclk,
    s_axi_arvalid,
    Rc_fifo_data,
    \s_axi_rdata_i_reg[7]_i_7 ,
    \s_axi_rdata_i_reg[7]_i_7_0 ,
    Tx_fifo_data,
    \s_axi_rdata_i_reg[7]_i_6 ,
    \s_axi_rdata_i_reg[7]_i_6_0 ,
    \s_axi_rdata_i[7]_i_8 ,
    \s_axi_rdata_i[7]_i_8_0 ,
    \s_axi_rdata_i[0]_i_2 ,
    s_axi_aresetn,
    AXI_IP2Bus_RdAck1,
    AXI_IP2Bus_RdAck2,
    s_axi_wvalid,
    s_axi_awvalid,
    AXI_IP2Bus_WrAck1,
    AXI_IP2Bus_WrAck2,
    sw_rst_cond_d1,
    s_axi_wdata,
    \s_axi_rdata_i_reg[7]_i_6_1 ,
    Tx_addr,
    \s_axi_rdata_i[3]_i_2 ,
    \s_axi_rdata_i[0]_i_2_0 ,
    \s_axi_rdata_i_reg[7]_i_6_2 ,
    \s_axi_rdata_i[1]_i_2 ,
    \s_axi_rdata_i[2]_i_2 ,
    \s_axi_rdata_i[3]_i_2_0 ,
    \s_axi_rdata_i_reg[7] ,
    p_1_in7_in,
    \s_axi_rdata_i_reg[4]_i_2 ,
    p_1_in4_in,
    \s_axi_rdata_i_reg[5]_i_2 ,
    p_1_in1_in,
    \s_axi_rdata_i_reg[6]_i_2 ,
    p_1_in,
    \s_axi_rdata_i_reg[7]_i_2 ,
    Rc_addr,
    cr_txModeSelect_set,
    cr_txModeSelect_clr,
    s_axi_rready,
    s_axi_bready,
    \s_axi_rdata_i_reg[0] ,
    p_1_in16_in,
    p_1_in13_in,
    p_1_in10_in,
    p_0_in,
    \s_axi_rdata_i[3]_i_2_1 ,
    \s_axi_rdata_i[2]_i_2_0 ,
    \s_axi_rdata_i[1]_i_2_0 ,
    s_axi_araddr,
    s_axi_awaddr,
    gpo,
    D);
  output p_26_in;
  output [0:0]s_axi_rresp;
  output Bus_RNW_reg;
  output s_axi_rvalid_i_reg;
  output s_axi_bvalid_i_reg;
  output [0:0]s_axi_bresp;
  output [4:0]Q;
  output is_write_reg;
  output is_read_reg;
  output irpt_wrack;
  output [0:0]E;
  output reset_trig0;
  output sw_rst_cond;
  output \bus2ip_addr_i_reg[5] ;
  output [0:0]Bus2IIC_RdCE;
  output [0:0]\s_axi_wdata[3] ;
  output [11:0]Bus2IIC_WrCE;
  output \s_axi_wdata[31] ;
  output s_axi_wdata_0_sp_1;
  output [11:0]s_axi_rdata;
  output AXI_IP2Bus_WrAck20;
  output AXI_IP2Bus_RdAck20;
  input AXI_Bus2IP_Reset;
  input s_axi_aclk;
  input s_axi_arvalid;
  input [0:7]Rc_fifo_data;
  input [7:0]\s_axi_rdata_i_reg[7]_i_7 ;
  input [7:0]\s_axi_rdata_i_reg[7]_i_7_0 ;
  input [0:7]Tx_fifo_data;
  input [7:0]\s_axi_rdata_i_reg[7]_i_6 ;
  input [7:0]\s_axi_rdata_i_reg[7]_i_6_0 ;
  input [5:0]\s_axi_rdata_i[7]_i_8 ;
  input [4:0]\s_axi_rdata_i[7]_i_8_0 ;
  input [0:0]\s_axi_rdata_i[0]_i_2 ;
  input s_axi_aresetn;
  input AXI_IP2Bus_RdAck1;
  input AXI_IP2Bus_RdAck2;
  input s_axi_wvalid;
  input s_axi_awvalid;
  input AXI_IP2Bus_WrAck1;
  input AXI_IP2Bus_WrAck2;
  input sw_rst_cond_d1;
  input [4:0]s_axi_wdata;
  input [7:0]\s_axi_rdata_i_reg[7]_i_6_1 ;
  input [0:3]Tx_addr;
  input [3:0]\s_axi_rdata_i[3]_i_2 ;
  input \s_axi_rdata_i[0]_i_2_0 ;
  input [6:0]\s_axi_rdata_i_reg[7]_i_6_2 ;
  input \s_axi_rdata_i[1]_i_2 ;
  input \s_axi_rdata_i[2]_i_2 ;
  input \s_axi_rdata_i[3]_i_2_0 ;
  input [7:0]\s_axi_rdata_i_reg[7] ;
  input p_1_in7_in;
  input \s_axi_rdata_i_reg[4]_i_2 ;
  input p_1_in4_in;
  input \s_axi_rdata_i_reg[5]_i_2 ;
  input p_1_in1_in;
  input \s_axi_rdata_i_reg[6]_i_2 ;
  input p_1_in;
  input \s_axi_rdata_i_reg[7]_i_2 ;
  input [0:3]Rc_addr;
  input cr_txModeSelect_set;
  input cr_txModeSelect_clr;
  input s_axi_rready;
  input s_axi_bready;
  input \s_axi_rdata_i_reg[0] ;
  input p_1_in16_in;
  input p_1_in13_in;
  input p_1_in10_in;
  input [0:0]p_0_in;
  input \s_axi_rdata_i[3]_i_2_1 ;
  input \s_axi_rdata_i[2]_i_2_0 ;
  input \s_axi_rdata_i[1]_i_2_0 ;
  input [8:0]s_axi_araddr;
  input [8:0]s_axi_awaddr;
  input [0:0]gpo;
  input [2:0]D;

  wire AXI_Bus2IP_Reset;
  wire AXI_IP2Bus_RdAck1;
  wire AXI_IP2Bus_RdAck2;
  wire AXI_IP2Bus_RdAck20;
  wire AXI_IP2Bus_WrAck1;
  wire AXI_IP2Bus_WrAck2;
  wire AXI_IP2Bus_WrAck20;
  wire [0:0]Bus2IIC_RdCE;
  wire [11:0]Bus2IIC_WrCE;
  wire Bus_RNW_reg;
  wire [2:0]D;
  wire [0:0]E;
  wire [4:0]Q;
  wire [0:3]Rc_addr;
  wire [0:7]Rc_fifo_data;
  wire [0:3]Tx_addr;
  wire [0:7]Tx_fifo_data;
  wire \bus2ip_addr_i_reg[5] ;
  wire cr_txModeSelect_clr;
  wire cr_txModeSelect_set;
  wire [0:0]gpo;
  wire irpt_wrack;
  wire is_read_reg;
  wire is_write_reg;
  wire [0:0]p_0_in;
  wire p_1_in;
  wire p_1_in10_in;
  wire p_1_in13_in;
  wire p_1_in16_in;
  wire p_1_in1_in;
  wire p_1_in4_in;
  wire p_1_in7_in;
  wire p_26_in;
  wire reset_trig0;
  wire s_axi_aclk;
  wire [8:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arvalid;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid_i_reg;
  wire [11:0]s_axi_rdata;
  wire [0:0]\s_axi_rdata_i[0]_i_2 ;
  wire \s_axi_rdata_i[0]_i_2_0 ;
  wire \s_axi_rdata_i[1]_i_2 ;
  wire \s_axi_rdata_i[1]_i_2_0 ;
  wire \s_axi_rdata_i[2]_i_2 ;
  wire \s_axi_rdata_i[2]_i_2_0 ;
  wire [3:0]\s_axi_rdata_i[3]_i_2 ;
  wire \s_axi_rdata_i[3]_i_2_0 ;
  wire \s_axi_rdata_i[3]_i_2_1 ;
  wire [5:0]\s_axi_rdata_i[7]_i_8 ;
  wire [4:0]\s_axi_rdata_i[7]_i_8_0 ;
  wire \s_axi_rdata_i_reg[0] ;
  wire \s_axi_rdata_i_reg[4]_i_2 ;
  wire \s_axi_rdata_i_reg[5]_i_2 ;
  wire \s_axi_rdata_i_reg[6]_i_2 ;
  wire [7:0]\s_axi_rdata_i_reg[7] ;
  wire \s_axi_rdata_i_reg[7]_i_2 ;
  wire [7:0]\s_axi_rdata_i_reg[7]_i_6 ;
  wire [7:0]\s_axi_rdata_i_reg[7]_i_6_0 ;
  wire [7:0]\s_axi_rdata_i_reg[7]_i_6_1 ;
  wire [6:0]\s_axi_rdata_i_reg[7]_i_6_2 ;
  wire [7:0]\s_axi_rdata_i_reg[7]_i_7 ;
  wire [7:0]\s_axi_rdata_i_reg[7]_i_7_0 ;
  wire s_axi_rready;
  wire s_axi_rvalid_i_reg;
  wire [4:0]s_axi_wdata;
  wire \s_axi_wdata[31] ;
  wire [0:0]\s_axi_wdata[3] ;
  wire s_axi_wdata_0_sn_1;
  wire s_axi_wvalid;
  wire sw_rst_cond;
  wire sw_rst_cond_d1;
  wire [8:0]NLW_I_SLAVE_ATTACHMENT_s_axi_awaddr_UNCONNECTED;
  wire [0:0]NLW_I_SLAVE_ATTACHMENT_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_I_SLAVE_ATTACHMENT_s_axi_rresp_UNCONNECTED;

  assign s_axi_wdata_0_sp_1 = s_axi_wdata_0_sn_1;
  system_axi_iic_0_0__slave_attachment I_SLAVE_ATTACHMENT
       (.AXI_Bus2IP_Reset(AXI_Bus2IP_Reset),
        .AXI_IP2Bus_RdAck1(AXI_IP2Bus_RdAck1),
        .AXI_IP2Bus_RdAck2(AXI_IP2Bus_RdAck2),
        .AXI_IP2Bus_RdAck20(AXI_IP2Bus_RdAck20),
        .AXI_IP2Bus_WrAck1(AXI_IP2Bus_WrAck1),
        .AXI_IP2Bus_WrAck2(AXI_IP2Bus_WrAck2),
        .AXI_IP2Bus_WrAck20(AXI_IP2Bus_WrAck20),
        .Bus2IIC_RdCE(Bus2IIC_RdCE),
        .Bus2IIC_WrCE(Bus2IIC_WrCE),
        .Bus_RNW_reg_reg(Bus_RNW_reg),
        .D(D),
        .E(E),
        .\GEN_BKEND_CE_REGISTERS[8].ce_out_i_reg[8] (p_26_in),
        .Q(Q),
        .Rc_addr(Rc_addr),
        .Rc_fifo_data(Rc_fifo_data),
        .Tx_addr(Tx_addr),
        .Tx_fifo_data(Tx_fifo_data),
        .\bus2ip_addr_i_reg[5]_0 (\bus2ip_addr_i_reg[5] ),
        .cr_txModeSelect_clr(cr_txModeSelect_clr),
        .cr_txModeSelect_set(cr_txModeSelect_set),
        .gpo(gpo),
        .irpt_wrack(irpt_wrack),
        .is_read_reg_0(is_read_reg),
        .is_write_reg_0(is_write_reg),
        .p_0_in(p_0_in),
        .p_1_in(p_1_in),
        .p_1_in10_in(p_1_in10_in),
        .p_1_in13_in(p_1_in13_in),
        .p_1_in16_in(p_1_in16_in),
        .p_1_in1_in(p_1_in1_in),
        .p_1_in4_in(p_1_in4_in),
        .p_1_in7_in(p_1_in7_in),
        .reset_trig0(reset_trig0),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(NLW_I_SLAVE_ATTACHMENT_s_axi_awaddr_UNCONNECTED[8:0]),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_I_SLAVE_ATTACHMENT_s_axi_bresp_UNCONNECTED[0]),
        .s_axi_bvalid_i_reg_0(s_axi_bvalid_i_reg),
        .s_axi_rdata(s_axi_rdata),
        .\s_axi_rdata_i[0]_i_2_0 (\s_axi_rdata_i[0]_i_2 ),
        .\s_axi_rdata_i[0]_i_2_1 (\s_axi_rdata_i[0]_i_2_0 ),
        .\s_axi_rdata_i[1]_i_2_0 (\s_axi_rdata_i[1]_i_2 ),
        .\s_axi_rdata_i[1]_i_2_1 (\s_axi_rdata_i[1]_i_2_0 ),
        .\s_axi_rdata_i[2]_i_2_0 (\s_axi_rdata_i[2]_i_2 ),
        .\s_axi_rdata_i[2]_i_2_1 (\s_axi_rdata_i[2]_i_2_0 ),
        .\s_axi_rdata_i[3]_i_2_0 (\s_axi_rdata_i[3]_i_2 ),
        .\s_axi_rdata_i[3]_i_2_1 (\s_axi_rdata_i[3]_i_2_0 ),
        .\s_axi_rdata_i[3]_i_2_2 (\s_axi_rdata_i[3]_i_2_1 ),
        .\s_axi_rdata_i[7]_i_8_0 (\s_axi_rdata_i[7]_i_8 ),
        .\s_axi_rdata_i[7]_i_8_1 (\s_axi_rdata_i[7]_i_8_0 ),
        .\s_axi_rdata_i_reg[0]_0 (\s_axi_rdata_i_reg[0] ),
        .\s_axi_rdata_i_reg[4]_i_2_0 (\s_axi_rdata_i_reg[4]_i_2 ),
        .\s_axi_rdata_i_reg[5]_i_2_0 (\s_axi_rdata_i_reg[5]_i_2 ),
        .\s_axi_rdata_i_reg[6]_i_2_0 (\s_axi_rdata_i_reg[6]_i_2 ),
        .\s_axi_rdata_i_reg[7]_0 (\s_axi_rdata_i_reg[7] ),
        .\s_axi_rdata_i_reg[7]_i_2_0 (\s_axi_rdata_i_reg[7]_i_2 ),
        .\s_axi_rdata_i_reg[7]_i_6_0 (\s_axi_rdata_i_reg[7]_i_6 ),
        .\s_axi_rdata_i_reg[7]_i_6_1 (\s_axi_rdata_i_reg[7]_i_6_0 ),
        .\s_axi_rdata_i_reg[7]_i_6_2 (\s_axi_rdata_i_reg[7]_i_6_1 ),
        .\s_axi_rdata_i_reg[7]_i_6_3 (\s_axi_rdata_i_reg[7]_i_6_2 ),
        .\s_axi_rdata_i_reg[7]_i_7_0 (\s_axi_rdata_i_reg[7]_i_7 ),
        .\s_axi_rdata_i_reg[7]_i_7_1 (\s_axi_rdata_i_reg[7]_i_7_0 ),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_I_SLAVE_ATTACHMENT_s_axi_rresp_UNCONNECTED[0]),
        .s_axi_rvalid_i_reg_0(s_axi_rvalid_i_reg),
        .s_axi_wdata(s_axi_wdata),
        .\s_axi_wdata[31] (\s_axi_wdata[31] ),
        .\s_axi_wdata[3] (\s_axi_wdata[3] ),
        .s_axi_wdata_0_sp_1(s_axi_wdata_0_sn_1),
        .s_axi_wvalid(s_axi_wvalid),
        .sw_rst_cond(sw_rst_cond),
        .sw_rst_cond_d1(sw_rst_cond_d1));
endmodule

(* ORIG_REF_NAME = "cdc_sync" *) 
module system_axi_iic_0_0__cdc_sync
   (\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0 ,
    scndry_out,
    sda_rin_d1,
    sda_i,
    s_axi_aclk);
  output \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0 ;
  output scndry_out;
  input sda_rin_d1;
  input sda_i;
  input s_axi_aclk;

  wire \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0 ;
  wire s_axi_aclk;
  wire s_level_out_d1_cdc_to;
  wire s_level_out_d2;
  wire s_level_out_d3;
  wire scndry_out;
  wire sda_i;
  wire sda_rin_d1;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(sda_i),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(scndry_out),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    detect_stop_i_3
       (.I0(scndry_out),
        .I1(sda_rin_d1),
        .O(\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0 ));
endmodule

(* ORIG_REF_NAME = "cdc_sync" *) 
module system_axi_iic_0_0__cdc_sync_4
   (scl_rising_edge0,
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0 ,
    D,
    scl_rin_d1,
    Q,
    scl_i,
    s_axi_aclk);
  output scl_rising_edge0;
  output \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0 ;
  output [0:0]D;
  input scl_rin_d1;
  input [0:0]Q;
  input scl_i;
  input s_axi_aclk;

  wire [0:0]D;
  wire \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0 ;
  wire [0:0]Q;
  wire s_axi_aclk;
  wire s_level_out_d1_cdc_to;
  wire s_level_out_d2;
  wire s_level_out_d3;
  wire scl_i;
  wire scl_rin_d1;
  wire scl_rising_edge0;

  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_scl_state[7]_i_1 
       (.I0(\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0 ),
        .I1(Q),
        .O(D));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(scl_i),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0 ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h2)) 
    scl_rising_edge_i_1
       (.I0(\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0 ),
        .I1(scl_rin_d1),
        .O(scl_rising_edge0));
endmodule

(* ORIG_REF_NAME = "debounce" *) 
module system_axi_iic_0_0__debounce
   (scl_rising_edge0,
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ,
    D,
    scl_rin_d1,
    Q,
    scl_i,
    s_axi_aclk);
  output scl_rising_edge0;
  output \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ;
  output [0:0]D;
  input scl_rin_d1;
  input [0:0]Q;
  input scl_i;
  input s_axi_aclk;

  wire [0:0]D;
  wire \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ;
  wire [0:0]Q;
  wire s_axi_aclk;
  wire scl_i;
  wire scl_rin_d1;
  wire scl_rising_edge0;

  system_axi_iic_0_0__cdc_sync_4 INPUT_DOUBLE_REGS
       (.D(D),
        .\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0 (\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ),
        .Q(Q),
        .s_axi_aclk(s_axi_aclk),
        .scl_i(scl_i),
        .scl_rin_d1(scl_rin_d1),
        .scl_rising_edge0(scl_rising_edge0));
endmodule

(* ORIG_REF_NAME = "debounce" *) 
module system_axi_iic_0_0__debounce_3
   (\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ,
    scndry_out,
    sda_rin_d1,
    sda_i,
    s_axi_aclk);
  output \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ;
  output scndry_out;
  input sda_rin_d1;
  input sda_i;
  input s_axi_aclk;

  wire \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ;
  wire s_axi_aclk;
  wire scndry_out;
  wire sda_i;
  wire sda_rin_d1;

  system_axi_iic_0_0__cdc_sync INPUT_DOUBLE_REGS
       (.\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0 (\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ),
        .s_axi_aclk(s_axi_aclk),
        .scndry_out(scndry_out),
        .sda_i(sda_i),
        .sda_rin_d1(sda_rin_d1));
endmodule

(* ORIG_REF_NAME = "dynamic_master" *) 
module system_axi_iic_0_0__dynamic_master
   (rdCntrFrmTxFifo,
    rxCntDone,
    firstDynStartSeen,
    cr_txModeSelect_set,
    cr_txModeSelect_clr,
    \rdByteCntr_reg[0]_0 ,
    rdCntrFrmTxFifo_reg_0,
    Tx_fifo_rst,
    ackDataState,
    s_axi_aclk,
    p_3_in,
    Tx_fifo_data,
    earlyAckDataState,
    firstDynStartSeen_reg_0,
    Tx_fifo_rd_d,
    Tx_fifo_rd,
    earlyAckHdr,
    Tx_data_exists);
  output rdCntrFrmTxFifo;
  output rxCntDone;
  output firstDynStartSeen;
  output cr_txModeSelect_set;
  output cr_txModeSelect_clr;
  output \rdByteCntr_reg[0]_0 ;
  output rdCntrFrmTxFifo_reg_0;
  input Tx_fifo_rst;
  input ackDataState;
  input s_axi_aclk;
  input p_3_in;
  input [0:7]Tx_fifo_data;
  input earlyAckDataState;
  input firstDynStartSeen_reg_0;
  input Tx_fifo_rd_d;
  input Tx_fifo_rd;
  input earlyAckHdr;
  input Tx_data_exists;

  wire Cr_txModeSelect_clr_i_1_n_0;
  wire Cr_txModeSelect_set_i_1_n_0;
  wire Tx_data_exists;
  wire [0:7]Tx_fifo_data;
  wire Tx_fifo_rd;
  wire Tx_fifo_rd_d;
  wire Tx_fifo_rst;
  wire ackDataState;
  wire ackDataState_d1;
  wire callingReadAccess;
  wire cr_txModeSelect_clr;
  wire cr_txModeSelect_set;
  wire earlyAckDataState;
  wire earlyAckDataState_d1;
  wire earlyAckHdr;
  wire firstDynStartSeen;
  wire firstDynStartSeen_reg_0;
  wire [7:0]p_0_in__1;
  wire p_3_in;
  wire \rdByteCntr[0]_i_1_n_0 ;
  wire \rdByteCntr[0]_i_3_n_0 ;
  wire \rdByteCntr[0]_i_4_n_0 ;
  wire \rdByteCntr[1]_i_2_n_0 ;
  wire [0:7]rdByteCntr_reg;
  wire \rdByteCntr_reg[0]_0 ;
  wire rdCntrFrmTxFifo;
  wire rdCntrFrmTxFifo0;
  wire rdCntrFrmTxFifo_reg_0;
  wire rxCntDone;
  wire rxCntDone0;
  wire s_axi_aclk;

  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    Cr_txModeSelect_clr_i_1
       (.I0(callingReadAccess),
        .I1(firstDynStartSeen),
        .I2(earlyAckHdr),
        .I3(Tx_fifo_rst),
        .O(Cr_txModeSelect_clr_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Cr_txModeSelect_clr_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Cr_txModeSelect_clr_i_1_n_0),
        .Q(cr_txModeSelect_clr),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    Cr_txModeSelect_set_i_1
       (.I0(callingReadAccess),
        .I1(firstDynStartSeen),
        .I2(earlyAckHdr),
        .I3(Tx_fifo_rst),
        .O(Cr_txModeSelect_set_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Cr_txModeSelect_set_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Cr_txModeSelect_set_i_1_n_0),
        .Q(cr_txModeSelect_set),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h45)) 
    Data_Exists_DFF_i_2__1
       (.I0(rdCntrFrmTxFifo),
        .I1(Tx_fifo_rd_d),
        .I2(Tx_fifo_rd),
        .O(rdCntrFrmTxFifo_reg_0));
  FDRE #(
    .INIT(1'b0)) 
    ackDataState_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ackDataState),
        .Q(ackDataState_d1),
        .R(Tx_fifo_rst));
  FDRE #(
    .INIT(1'b0)) 
    callingReadAccess_reg
       (.C(s_axi_aclk),
        .CE(p_3_in),
        .D(Tx_fifo_data[7]),
        .Q(callingReadAccess),
        .R(Tx_fifo_rst));
  FDRE #(
    .INIT(1'b0)) 
    earlyAckDataState_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(earlyAckDataState),
        .Q(earlyAckDataState_d1),
        .R(Tx_fifo_rst));
  FDRE #(
    .INIT(1'b0)) 
    firstDynStartSeen_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(firstDynStartSeen_reg_0),
        .Q(firstDynStartSeen),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hBAAA)) 
    \rdByteCntr[0]_i_1 
       (.I0(rdCntrFrmTxFifo),
        .I1(earlyAckDataState_d1),
        .I2(earlyAckDataState),
        .I3(\rdByteCntr[0]_i_3_n_0 ),
        .O(\rdByteCntr[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB88BB8B8)) 
    \rdByteCntr[0]_i_2 
       (.I0(Tx_fifo_data[0]),
        .I1(rdCntrFrmTxFifo),
        .I2(rdByteCntr_reg[0]),
        .I3(rdByteCntr_reg[1]),
        .I4(\rdByteCntr[0]_i_4_n_0 ),
        .O(p_0_in__1[7]));
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    \rdByteCntr[0]_i_3 
       (.I0(\rdByteCntr[1]_i_2_n_0 ),
        .I1(rdByteCntr_reg[3]),
        .I2(rdByteCntr_reg[2]),
        .I3(rdByteCntr_reg[1]),
        .I4(rdByteCntr_reg[0]),
        .O(\rdByteCntr[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \rdByteCntr[0]_i_4 
       (.I0(rdByteCntr_reg[2]),
        .I1(rdByteCntr_reg[4]),
        .I2(rdByteCntr_reg[7]),
        .I3(rdByteCntr_reg[6]),
        .I4(rdByteCntr_reg[5]),
        .I5(rdByteCntr_reg[3]),
        .O(\rdByteCntr[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8B88BB8B8)) 
    \rdByteCntr[1]_i_1 
       (.I0(Tx_fifo_data[1]),
        .I1(rdCntrFrmTxFifo),
        .I2(rdByteCntr_reg[1]),
        .I3(rdByteCntr_reg[3]),
        .I4(\rdByteCntr[1]_i_2_n_0 ),
        .I5(rdByteCntr_reg[2]),
        .O(p_0_in__1[6]));
  LUT4 #(
    .INIT(16'h0001)) 
    \rdByteCntr[1]_i_2 
       (.I0(rdByteCntr_reg[4]),
        .I1(rdByteCntr_reg[7]),
        .I2(rdByteCntr_reg[6]),
        .I3(rdByteCntr_reg[5]),
        .O(\rdByteCntr[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BB8B88)) 
    \rdByteCntr[2]_i_1 
       (.I0(Tx_fifo_data[2]),
        .I1(rdCntrFrmTxFifo),
        .I2(rdByteCntr_reg[3]),
        .I3(\rdByteCntr[1]_i_2_n_0 ),
        .I4(rdByteCntr_reg[2]),
        .O(p_0_in__1[5]));
  LUT4 #(
    .INIT(16'h8BB8)) 
    \rdByteCntr[3]_i_1 
       (.I0(Tx_fifo_data[3]),
        .I1(rdCntrFrmTxFifo),
        .I2(rdByteCntr_reg[3]),
        .I3(\rdByteCntr[1]_i_2_n_0 ),
        .O(p_0_in__1[4]));
  LUT6 #(
    .INIT(64'hBBBBBBB88888888B)) 
    \rdByteCntr[4]_i_1 
       (.I0(Tx_fifo_data[4]),
        .I1(rdCntrFrmTxFifo),
        .I2(rdByteCntr_reg[5]),
        .I3(rdByteCntr_reg[6]),
        .I4(rdByteCntr_reg[7]),
        .I5(rdByteCntr_reg[4]),
        .O(p_0_in__1[3]));
  LUT5 #(
    .INIT(32'hBBB8888B)) 
    \rdByteCntr[5]_i_1 
       (.I0(Tx_fifo_data[5]),
        .I1(rdCntrFrmTxFifo),
        .I2(rdByteCntr_reg[7]),
        .I3(rdByteCntr_reg[6]),
        .I4(rdByteCntr_reg[5]),
        .O(p_0_in__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'hB88B)) 
    \rdByteCntr[6]_i_1 
       (.I0(Tx_fifo_data[6]),
        .I1(rdCntrFrmTxFifo),
        .I2(rdByteCntr_reg[7]),
        .I3(rdByteCntr_reg[6]),
        .O(p_0_in__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \rdByteCntr[7]_i_1 
       (.I0(Tx_fifo_data[7]),
        .I1(rdCntrFrmTxFifo),
        .I2(rdByteCntr_reg[7]),
        .O(p_0_in__1[0]));
  FDRE #(
    .INIT(1'b0)) 
    \rdByteCntr_reg[0] 
       (.C(s_axi_aclk),
        .CE(\rdByteCntr[0]_i_1_n_0 ),
        .D(p_0_in__1[7]),
        .Q(rdByteCntr_reg[0]),
        .R(Tx_fifo_rst));
  FDRE #(
    .INIT(1'b0)) 
    \rdByteCntr_reg[1] 
       (.C(s_axi_aclk),
        .CE(\rdByteCntr[0]_i_1_n_0 ),
        .D(p_0_in__1[6]),
        .Q(rdByteCntr_reg[1]),
        .R(Tx_fifo_rst));
  FDRE #(
    .INIT(1'b0)) 
    \rdByteCntr_reg[2] 
       (.C(s_axi_aclk),
        .CE(\rdByteCntr[0]_i_1_n_0 ),
        .D(p_0_in__1[5]),
        .Q(rdByteCntr_reg[2]),
        .R(Tx_fifo_rst));
  FDRE #(
    .INIT(1'b0)) 
    \rdByteCntr_reg[3] 
       (.C(s_axi_aclk),
        .CE(\rdByteCntr[0]_i_1_n_0 ),
        .D(p_0_in__1[4]),
        .Q(rdByteCntr_reg[3]),
        .R(Tx_fifo_rst));
  FDRE #(
    .INIT(1'b0)) 
    \rdByteCntr_reg[4] 
       (.C(s_axi_aclk),
        .CE(\rdByteCntr[0]_i_1_n_0 ),
        .D(p_0_in__1[3]),
        .Q(rdByteCntr_reg[4]),
        .R(Tx_fifo_rst));
  FDRE #(
    .INIT(1'b0)) 
    \rdByteCntr_reg[5] 
       (.C(s_axi_aclk),
        .CE(\rdByteCntr[0]_i_1_n_0 ),
        .D(p_0_in__1[2]),
        .Q(rdByteCntr_reg[5]),
        .R(Tx_fifo_rst));
  FDRE #(
    .INIT(1'b0)) 
    \rdByteCntr_reg[6] 
       (.C(s_axi_aclk),
        .CE(\rdByteCntr[0]_i_1_n_0 ),
        .D(p_0_in__1[1]),
        .Q(rdByteCntr_reg[6]),
        .R(Tx_fifo_rst));
  FDRE #(
    .INIT(1'b0)) 
    \rdByteCntr_reg[7] 
       (.C(s_axi_aclk),
        .CE(\rdByteCntr[0]_i_1_n_0 ),
        .D(p_0_in__1[0]),
        .Q(rdByteCntr_reg[7]),
        .R(Tx_fifo_rst));
  LUT3 #(
    .INIT(8'h80)) 
    rdCntrFrmTxFifo_i_1
       (.I0(callingReadAccess),
        .I1(earlyAckHdr),
        .I2(Tx_data_exists),
        .O(rdCntrFrmTxFifo0));
  FDRE #(
    .INIT(1'b0)) 
    rdCntrFrmTxFifo_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rdCntrFrmTxFifo0),
        .Q(rdCntrFrmTxFifo),
        .R(Tx_fifo_rst));
  LUT3 #(
    .INIT(8'h04)) 
    rxCntDone_i_1
       (.I0(ackDataState_d1),
        .I1(ackDataState),
        .I2(\rdByteCntr_reg[0]_0 ),
        .O(rxCntDone0));
  LUT6 #(
    .INIT(64'hFFFEFFFFFFFFFFFF)) 
    rxCntDone_i_2
       (.I0(rdByteCntr_reg[0]),
        .I1(rdByteCntr_reg[1]),
        .I2(rdByteCntr_reg[2]),
        .I3(rdByteCntr_reg[3]),
        .I4(\rdByteCntr[1]_i_2_n_0 ),
        .I5(callingReadAccess),
        .O(\rdByteCntr_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    rxCntDone_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rxCntDone0),
        .Q(rxCntDone),
        .R(Tx_fifo_rst));
endmodule

(* ORIG_REF_NAME = "filter" *) 
module system_axi_iic_0_0__filter
   (\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ,
    scndry_out,
    scl_rising_edge0,
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0 ,
    D,
    sda_rin_d1,
    scl_rin_d1,
    Q,
    scl_i,
    s_axi_aclk,
    sda_i);
  output \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ;
  output scndry_out;
  output scl_rising_edge0;
  output \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0 ;
  output [0:0]D;
  input sda_rin_d1;
  input scl_rin_d1;
  input [0:0]Q;
  input scl_i;
  input s_axi_aclk;
  input sda_i;

  wire [0:0]D;
  wire \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ;
  wire \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0 ;
  wire [0:0]Q;
  wire s_axi_aclk;
  wire scl_i;
  wire scl_rin_d1;
  wire scl_rising_edge0;
  wire scndry_out;
  wire sda_i;
  wire sda_rin_d1;

  system_axi_iic_0_0__debounce SCL_DEBOUNCE
       (.D(D),
        .\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 (\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0 ),
        .Q(Q),
        .s_axi_aclk(s_axi_aclk),
        .scl_i(scl_i),
        .scl_rin_d1(scl_rin_d1),
        .scl_rising_edge0(scl_rising_edge0));
  system_axi_iic_0_0__debounce_3 SDA_DEBOUNCE
       (.\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 (\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ),
        .s_axi_aclk(s_axi_aclk),
        .scndry_out(scndry_out),
        .sda_i(sda_i),
        .sda_rin_d1(sda_rin_d1));
endmodule

(* ORIG_REF_NAME = "iic" *) 
module system_axi_iic_0_0__iic
   (s_axi_rdata,
    s_axi_rresp,
    is_write_reg,
    is_read_reg,
    sda_t,
    gpo,
    s_axi_rvalid_i_reg,
    s_axi_bvalid_i_reg,
    iic2intc_irpt,
    scl_t,
    s_axi_bresp,
    s_axi_aclk,
    s_axi_wvalid,
    s_axi_awvalid,
    s_axi_arvalid,
    s_axi_wdata,
    scl_i,
    sda_i,
    s_axi_aresetn,
    s_axi_rready,
    s_axi_bready,
    s_axi_araddr,
    s_axi_awaddr);
  output [11:0]s_axi_rdata;
  output [0:0]s_axi_rresp;
  output is_write_reg;
  output is_read_reg;
  output sda_t;
  output [0:0]gpo;
  output s_axi_rvalid_i_reg;
  output s_axi_bvalid_i_reg;
  output iic2intc_irpt;
  output scl_t;
  output [0:0]s_axi_bresp;
  input s_axi_aclk;
  input s_axi_wvalid;
  input s_axi_awvalid;
  input s_axi_arvalid;
  input [11:0]s_axi_wdata;
  input scl_i;
  input sda_i;
  input s_axi_aresetn;
  input s_axi_rready;
  input s_axi_bready;
  input [8:0]s_axi_araddr;
  input [8:0]s_axi_awaddr;

  wire Aas;
  wire Abgc;
  wire [0:6]Adr;
  wire Al;
  wire Bb;
  wire [2:6]Bus2IIC_Addr;
  wire [3:3]Bus2IIC_RdCE;
  wire Bus2IIC_Reset;
  wire [0:17]Bus2IIC_WrCE;
  wire [0:10]\CLKCNT/q_int_reg ;
  wire [0:7]Cr;
  wire D;
  wire DYN_MASTER_I_n_5;
  wire DYN_MASTER_I_n_6;
  wire D_1;
  wire [0:7]Data_i2c;
  wire FILTER_I_n_0;
  wire FILTER_I_n_4;
  wire [21:23]IIC2Bus_Data;
  wire [0:7]IIC2Bus_IntrEvent;
  wire IIC_CONTROL_I_n_17;
  wire IIC_CONTROL_I_n_45;
  wire IIC_CONTROL_I_n_46;
  wire IIC_CONTROL_I_n_47;
  wire IIC_CONTROL_I_n_48;
  wire IIC_CONTROL_I_n_49;
  wire IIC_CONTROL_I_n_54;
  wire IIC_CONTROL_I_n_8;
  wire Msms_set;
  wire New_rcv_dta;
  wire READ_FIFO_I_n_13;
  wire READ_FIFO_I_n_16;
  wire REG_INTERFACE_I_n_100;
  wire REG_INTERFACE_I_n_109;
  wire REG_INTERFACE_I_n_110;
  wire REG_INTERFACE_I_n_111;
  wire REG_INTERFACE_I_n_112;
  wire REG_INTERFACE_I_n_118;
  wire REG_INTERFACE_I_n_119;
  wire REG_INTERFACE_I_n_120;
  wire REG_INTERFACE_I_n_121;
  wire REG_INTERFACE_I_n_127;
  wire REG_INTERFACE_I_n_128;
  wire REG_INTERFACE_I_n_129;
  wire REG_INTERFACE_I_n_130;
  wire REG_INTERFACE_I_n_134;
  wire REG_INTERFACE_I_n_135;
  wire REG_INTERFACE_I_n_136;
  wire REG_INTERFACE_I_n_137;
  wire REG_INTERFACE_I_n_138;
  wire REG_INTERFACE_I_n_139;
  wire REG_INTERFACE_I_n_140;
  wire REG_INTERFACE_I_n_144;
  wire REG_INTERFACE_I_n_145;
  wire REG_INTERFACE_I_n_146;
  wire REG_INTERFACE_I_n_147;
  wire REG_INTERFACE_I_n_148;
  wire REG_INTERFACE_I_n_150;
  wire REG_INTERFACE_I_n_151;
  wire REG_INTERFACE_I_n_25;
  wire REG_INTERFACE_I_n_26;
  wire REG_INTERFACE_I_n_39;
  wire REG_INTERFACE_I_n_40;
  wire REG_INTERFACE_I_n_41;
  wire REG_INTERFACE_I_n_42;
  wire REG_INTERFACE_I_n_50;
  wire REG_INTERFACE_I_n_51;
  wire REG_INTERFACE_I_n_52;
  wire REG_INTERFACE_I_n_53;
  wire REG_INTERFACE_I_n_54;
  wire REG_INTERFACE_I_n_55;
  wire REG_INTERFACE_I_n_64;
  wire REG_INTERFACE_I_n_65;
  wire REG_INTERFACE_I_n_66;
  wire REG_INTERFACE_I_n_67;
  wire REG_INTERFACE_I_n_76;
  wire REG_INTERFACE_I_n_77;
  wire REG_INTERFACE_I_n_78;
  wire REG_INTERFACE_I_n_79;
  wire REG_INTERFACE_I_n_88;
  wire REG_INTERFACE_I_n_89;
  wire REG_INTERFACE_I_n_90;
  wire REG_INTERFACE_I_n_91;
  wire REG_INTERFACE_I_n_92;
  wire REG_INTERFACE_I_n_93;
  wire REG_INTERFACE_I_n_94;
  wire REG_INTERFACE_I_n_95;
  wire REG_INTERFACE_I_n_96;
  wire REG_INTERFACE_I_n_97;
  wire REG_INTERFACE_I_n_98;
  wire REG_INTERFACE_I_n_99;
  wire Rc_Data_Exists;
  wire [0:3]Rc_addr;
  wire [0:7]Rc_fifo_data;
  wire Rc_fifo_full;
  wire Rc_fifo_rd;
  wire Rc_fifo_rd_d;
  wire Rc_fifo_wr;
  wire Rc_fifo_wr0;
  wire Rc_fifo_wr_d;
  wire Rdy_new_xmt;
  wire Ro_prev;
  wire [0:10]\SETUP_CNT/q_int_reg ;
  wire Srw;
  wire [10:0]Timing_param_tbuf;
  wire [7:0]Timing_param_thdsta;
  wire [7:0]Timing_param_thigh;
  wire [7:0]Timing_param_tlow;
  wire [3:0]Timing_param_tsudat;
  wire [7:0]Timing_param_tsusta;
  wire [7:0]Timing_param_tsusto;
  wire [0:3]Tx_addr;
  wire Tx_data_exists;
  wire [0:7]Tx_fifo_data;
  wire Tx_fifo_full;
  wire Tx_fifo_rd;
  wire Tx_fifo_rd_d;
  wire Tx_fifo_rst;
  wire Tx_fifo_wr;
  wire Tx_fifo_wr_d;
  wire Tx_under_prev;
  wire Txer;
  wire WRITE_FIFO_CTRL_I_n_0;
  wire WRITE_FIFO_CTRL_I_n_3;
  wire WRITE_FIFO_I_n_14;
  wire WRITE_FIFO_I_n_16;
  wire X_AXI_IPIF_SSP1_n_14;
  wire X_AXI_IPIF_SSP1_n_16;
  wire X_AXI_IPIF_SSP1_n_30;
  wire ackDataState;
  wire clk_cnt_en1;
  wire clk_cnt_en11_out;
  wire clk_cnt_en12_out;
  wire clk_cnt_en2;
  wire cr_txModeSelect_clr;
  wire cr_txModeSelect_set;
  wire [0:1]ctrlFifoDin;
  wire [0:1]dynamic_MSMS;
  wire earlyAckDataState;
  wire earlyAckHdr;
  wire firstDynStartSeen;
  wire [0:0]\^gpo ;
  wire [3:1]i2c_header;
  wire is_read_reg;
  wire is_write_reg;
  wire new_rcv_dta_d1;
  wire p_0_in;
  wire [6:6]p_0_out;
  wire p_1_in;
  wire p_1_in2_in;
  wire p_1_in3_in;
  wire p_1_in_0;
  wire [0:0]p_2_in__0;
  wire p_3_in;
  wire rdCntrFrmTxFifo;
  wire rxCntDone;
  wire s_axi_aclk;
  wire [8:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arvalid;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid_i_reg;
  wire [11:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid_i_reg;
  wire [11:0]s_axi_wdata;
  wire s_axi_wvalid;
  wire scl_clean;
  wire scl_i;
  wire scl_rin_d1;
  wire scl_rising_edge0;
  wire scl_t;
  wire sda_clean;
  wire sda_i;
  wire sda_rin_d1;
  wire sda_t;
  wire shift_reg_ld;
  wire [0:0]sr_i;
  wire stop_scl_reg;
  wire NLW_X_AXI_IPIF_SSP1_iic2intc_irpt_UNCONNECTED;
  wire [8:0]NLW_X_AXI_IPIF_SSP1_s_axi_awaddr_UNCONNECTED;
  wire [0:0]NLW_X_AXI_IPIF_SSP1_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_X_AXI_IPIF_SSP1_s_axi_rresp_UNCONNECTED;

  system_axi_iic_0_0__dynamic_master DYN_MASTER_I
       (.Tx_data_exists(Tx_data_exists),
        .Tx_fifo_data(Tx_fifo_data),
        .Tx_fifo_rd(Tx_fifo_rd),
        .Tx_fifo_rd_d(Tx_fifo_rd_d),
        .Tx_fifo_rst(Tx_fifo_rst),
        .ackDataState(ackDataState),
        .cr_txModeSelect_clr(cr_txModeSelect_clr),
        .cr_txModeSelect_set(cr_txModeSelect_set),
        .earlyAckDataState(earlyAckDataState),
        .earlyAckHdr(earlyAckHdr),
        .firstDynStartSeen(firstDynStartSeen),
        .firstDynStartSeen_reg_0(REG_INTERFACE_I_n_127),
        .p_3_in(p_3_in),
        .\rdByteCntr_reg[0]_0 (DYN_MASTER_I_n_5),
        .rdCntrFrmTxFifo(rdCntrFrmTxFifo),
        .rdCntrFrmTxFifo_reg_0(DYN_MASTER_I_n_6),
        .rxCntDone(rxCntDone),
        .s_axi_aclk(s_axi_aclk));
  system_axi_iic_0_0__filter FILTER_I
       (.D(FILTER_I_n_4),
        .\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 (FILTER_I_n_0),
        .\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4_0 (scl_clean),
        .Q(IIC_CONTROL_I_n_45),
        .s_axi_aclk(s_axi_aclk),
        .scl_i(scl_i),
        .scl_rin_d1(scl_rin_d1),
        .scl_rising_edge0(scl_rising_edge0),
        .scndry_out(sda_clean),
        .sda_i(sda_i),
        .sda_rin_d1(sda_rin_d1));
  system_axi_iic_0_0__iic_control IIC_CONTROL_I
       (.Aas(Aas),
        .Abgc(Abgc),
        .Bb(Bb),
        .CO(clk_cnt_en1),
        .D({Al,Txer,p_1_in,IIC_CONTROL_I_n_8}),
        .E(Bus2IIC_WrCE[0]),
        .\FSM_onehot_scl_state[2]_i_4_0 ({REG_INTERFACE_I_n_25,REG_INTERFACE_I_n_26}),
        .\FSM_onehot_scl_state[9]_i_4 ({REG_INTERFACE_I_n_76,REG_INTERFACE_I_n_77,REG_INTERFACE_I_n_78,REG_INTERFACE_I_n_79}),
        .\FSM_onehot_scl_state_reg[1]_0 (REG_INTERFACE_I_n_92),
        .\FSM_onehot_scl_state_reg[3]_0 ({REG_INTERFACE_I_n_97,REG_INTERFACE_I_n_98,REG_INTERFACE_I_n_99,REG_INTERFACE_I_n_100}),
        .\FSM_onehot_scl_state_reg[6]_0 ({IIC_CONTROL_I_n_45,IIC_CONTROL_I_n_46,IIC_CONTROL_I_n_47,IIC_CONTROL_I_n_48}),
        .\FSM_onehot_scl_state_reg[6]_1 ({REG_INTERFACE_I_n_109,REG_INTERFACE_I_n_110,REG_INTERFACE_I_n_111,REG_INTERFACE_I_n_112}),
        .\FSM_onehot_scl_state_reg[7]_0 (IIC_CONTROL_I_n_49),
        .\FSM_onehot_scl_state_reg[7]_1 ({FILTER_I_n_4,REG_INTERFACE_I_n_147}),
        .\LEVEL_1_GEN.master_sda_reg_0 (REG_INTERFACE_I_n_41),
        .Msms_set(Msms_set),
        .New_rcv_dta(New_rcv_dta),
        .Q({Cr[1],Cr[2],Cr[4],Cr[5],Cr[7]}),
        .Rc_fifo_wr0(Rc_fifo_wr0),
        .Rdy_new_xmt(Rdy_new_xmt),
        .Ro_prev(Ro_prev),
        .S({REG_INTERFACE_I_n_52,REG_INTERFACE_I_n_53,REG_INTERFACE_I_n_54,REG_INTERFACE_I_n_55}),
        .Tx_data_exists(Tx_data_exists),
        .Tx_fifo_data({Tx_fifo_data[0],Tx_fifo_data[1],Tx_fifo_data[2],Tx_fifo_data[3],Tx_fifo_data[4],Tx_fifo_data[5],Tx_fifo_data[6]}),
        .Tx_under_prev(Tx_under_prev),
        .aas_i_reg_0(REG_INTERFACE_I_n_42),
        .aas_i_reg_1({Adr[0],Adr[1],Adr[2],Adr[3]}),
        .ackDataState(ackDataState),
        .\clk_cnt_en1_inferred__2/i__carry__0_0 ({REG_INTERFACE_I_n_88,REG_INTERFACE_I_n_89,REG_INTERFACE_I_n_90,REG_INTERFACE_I_n_91}),
        .\clk_cnt_en1_inferred__2/i__carry__0_1 (Timing_param_tbuf),
        .\cr_i_reg[5] (WRITE_FIFO_I_n_16),
        .\cr_i_reg[5]_0 (REG_INTERFACE_I_n_128),
        .\data_i2c_i_reg[7]_0 ({Data_i2c[0],Data_i2c[1],Data_i2c[2],Data_i2c[3],Data_i2c[4],Data_i2c[5],Data_i2c[6],Data_i2c[7]}),
        .\data_int_reg[0] (p_2_in__0),
        .\data_int_reg[3] (i2c_header),
        .detect_stop_reg_0(FILTER_I_n_0),
        .dynamic_MSMS(dynamic_MSMS[0]),
        .earlyAckDataState(earlyAckDataState),
        .earlyAckHdr(earlyAckHdr),
        .new_rcv_dta_d1(new_rcv_dta_d1),
        .\q_int_reg[0] ({\SETUP_CNT/q_int_reg [0],\SETUP_CNT/q_int_reg [1],\SETUP_CNT/q_int_reg [2],\SETUP_CNT/q_int_reg [3],\SETUP_CNT/q_int_reg [4],\SETUP_CNT/q_int_reg [5],\SETUP_CNT/q_int_reg [6],\SETUP_CNT/q_int_reg [7],\SETUP_CNT/q_int_reg [8],\SETUP_CNT/q_int_reg [9],\SETUP_CNT/q_int_reg [10]}),
        .\q_int_reg[0]_0 ({\CLKCNT/q_int_reg [0],\CLKCNT/q_int_reg [1],\CLKCNT/q_int_reg [2],\CLKCNT/q_int_reg [3],\CLKCNT/q_int_reg [4],\CLKCNT/q_int_reg [5],\CLKCNT/q_int_reg [6],\CLKCNT/q_int_reg [7],\CLKCNT/q_int_reg [8],\CLKCNT/q_int_reg [9],\CLKCNT/q_int_reg [10]}),
        .\q_int_reg[0]_1 (REG_INTERFACE_I_n_40),
        .\q_int_reg[0]_2 ({REG_INTERFACE_I_n_93,REG_INTERFACE_I_n_94,REG_INTERFACE_I_n_95,REG_INTERFACE_I_n_96}),
        .\q_int_reg[0]_3 (REG_INTERFACE_I_n_50),
        .\q_int_reg[1] (REG_INTERFACE_I_n_51),
        .rxCntDone(rxCntDone),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_wdata(s_axi_wdata[2]),
        .\s_axi_wdata[2] (IIC_CONTROL_I_n_54),
        .scl_rin_d1(scl_rin_d1),
        .scl_rin_d1_reg_0(scl_clean),
        .scl_rising_edge0(scl_rising_edge0),
        .scl_t(scl_t),
        .scndry_out(sda_clean),
        .sda_cout_reg_reg_0({REG_INTERFACE_I_n_64,REG_INTERFACE_I_n_65,REG_INTERFACE_I_n_66,REG_INTERFACE_I_n_67}),
        .sda_rin_d1(sda_rin_d1),
        .sda_setup_reg_0({REG_INTERFACE_I_n_118,REG_INTERFACE_I_n_119,REG_INTERFACE_I_n_120,REG_INTERFACE_I_n_121}),
        .sda_t(sda_t),
        .shift_reg_ld(shift_reg_ld),
        .sr_i(sr_i),
        .srw_i_reg_0(Srw),
        .stop_scl_reg(stop_scl_reg),
        .\timing_param_thddat_i_reg[10] (clk_cnt_en2),
        .\timing_param_tlow_i_reg[10] (IIC_CONTROL_I_n_17),
        .\timing_param_tsusta_i_reg[10] (clk_cnt_en12_out),
        .\timing_param_tsusto_i_reg[10] (clk_cnt_en11_out));
  system_axi_iic_0_0__SRL_FIFO READ_FIFO_I
       (.\Addr_Counters[0].FDRE_I_0 (REG_INTERFACE_I_n_151),
        .\Addr_Counters[0].FDRE_I_1 (REG_INTERFACE_I_n_150),
        .\Addr_Counters[1].FDRE_I_0 (READ_FIFO_I_n_16),
        .Bus2IIC_Reset(Bus2IIC_Reset),
        .D({p_0_out,Rc_fifo_full}),
        .D_0(D),
        .Msms_set(Msms_set),
        .Q({p_1_in3_in,p_1_in2_in,p_1_in_0,REG_INTERFACE_I_n_134}),
        .Rc_Data_Exists(Rc_Data_Exists),
        .Rc_addr(Rc_addr),
        .Rc_fifo_data(Rc_fifo_data),
        .Rc_fifo_rd(Rc_fifo_rd),
        .Rc_fifo_rd_d(Rc_fifo_rd_d),
        .Rc_fifo_wr(Rc_fifo_wr),
        .Rc_fifo_wr_d(Rc_fifo_wr_d),
        .msms_set_i_reg(READ_FIFO_I_n_13),
        .s_axi_aclk(s_axi_aclk),
        .\s_axi_rdata_i[7]_i_11 ({Data_i2c[0],Data_i2c[1],Data_i2c[2],Data_i2c[3],Data_i2c[4],Data_i2c[5],Data_i2c[6],Data_i2c[7]}));
  system_axi_iic_0_0__reg_interface REG_INTERFACE_I
       (.Aas(Aas),
        .Bus2IIC_RdCE(Bus2IIC_RdCE),
        .Bus2IIC_Reset(Bus2IIC_Reset),
        .Bus2IIC_WrCE({Bus2IIC_WrCE[0],Bus2IIC_WrCE[2],Bus2IIC_WrCE[4],Bus2IIC_WrCE[8],Bus2IIC_WrCE[10],Bus2IIC_WrCE[11],Bus2IIC_WrCE[12],Bus2IIC_WrCE[13],Bus2IIC_WrCE[14],Bus2IIC_WrCE[15],Bus2IIC_WrCE[16],Bus2IIC_WrCE[17]}),
        .CO(clk_cnt_en1),
        .D(Ro_prev),
        .D_0(D_1),
        .D_1(D),
        .Data_Exists_DFF(WRITE_FIFO_CTRL_I_n_3),
        .Data_Exists_DFF_0(WRITE_FIFO_CTRL_I_n_0),
        .Data_Exists_DFF_1(READ_FIFO_I_n_16),
        .\FIFO_GEN_DTR.Tx_fifo_rd_reg_0 (REG_INTERFACE_I_n_128),
        .\FIFO_GEN_DTR.Tx_fifo_wr_reg_0 (REG_INTERFACE_I_n_148),
        .\FSM_onehot_scl_state_reg[5] (REG_INTERFACE_I_n_147),
        .\FSM_onehot_scl_state_reg[5]_0 ({IIC_CONTROL_I_n_46,IIC_CONTROL_I_n_47,IIC_CONTROL_I_n_48}),
        .\FSM_onehot_scl_state_reg[5]_1 (IIC_CONTROL_I_n_17),
        .\FSM_onehot_scl_state_reg[5]_2 (clk_cnt_en2),
        .\FSM_onehot_scl_state_reg[5]_3 (scl_clean),
        .\FSM_sequential_state[2]_i_8 (i2c_header),
        .\GPO_GEN.gpo_i_reg[31]_0 (REG_INTERFACE_I_n_129),
        .\GPO_GEN.gpo_i_reg[31]_1 (X_AXI_IPIF_SSP1_n_30),
        .IIC2Bus_IntrEvent(IIC2Bus_IntrEvent),
        .\IIC2Bus_IntrEvent_reg[0]_0 ({Al,Txer,Tx_under_prev,p_1_in,IIC_CONTROL_I_n_8}),
        .\IIC2Bus_IntrEvent_reg[5]_0 (REG_INTERFACE_I_n_146),
        .\LEVEL_1_GEN.master_sda_reg (DYN_MASTER_I_n_5),
        .Msms_set(Msms_set),
        .New_rcv_dta(New_rcv_dta),
        .Q({Cr[0],Cr[1],Cr[2],Cr[3],Cr[4],Cr[5],Cr[7]}),
        .\RD_FIFO_CNTRL.Rc_fifo_rd_reg_0 (REG_INTERFACE_I_n_151),
        .\RD_FIFO_CNTRL.Rc_fifo_wr_reg_0 (REG_INTERFACE_I_n_150),
        .\RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[4]_0 ({p_1_in3_in,p_1_in2_in,p_1_in_0,REG_INTERFACE_I_n_134}),
        .\RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[4]_1 (REG_INTERFACE_I_n_136),
        .\RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[5]_0 (REG_INTERFACE_I_n_135),
        .\RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[6]_0 (REG_INTERFACE_I_n_130),
        .\RD_FIFO_CNTRL.ro_prev_i_reg_0 (READ_FIFO_I_n_13),
        .Rc_Data_Exists(Rc_Data_Exists),
        .Rc_fifo_rd(Rc_fifo_rd),
        .Rc_fifo_rd_d(Rc_fifo_rd_d),
        .Rc_fifo_wr(Rc_fifo_wr),
        .Rc_fifo_wr0(Rc_fifo_wr0),
        .Rc_fifo_wr_d(Rc_fifo_wr_d),
        .Rdy_new_xmt(Rdy_new_xmt),
        .S({REG_INTERFACE_I_n_52,REG_INTERFACE_I_n_53,REG_INTERFACE_I_n_54,REG_INTERFACE_I_n_55}),
        .Tx_data_exists(Tx_data_exists),
        .Tx_fifo_rd(Tx_fifo_rd),
        .Tx_fifo_rd_d(Tx_fifo_rd_d),
        .Tx_fifo_rst(Tx_fifo_rst),
        .Tx_fifo_wr(Tx_fifo_wr),
        .Tx_fifo_wr_d(Tx_fifo_wr_d),
        .Tx_fifo_wr_d_reg(REG_INTERFACE_I_n_39),
        .\adr_i_reg[0]_0 ({Adr[0],Adr[1],Adr[2],Adr[3],Adr[4],Adr[5],Adr[6]}),
        .\adr_i_reg[5]_0 (REG_INTERFACE_I_n_42),
        .\bus2ip_addr_i_reg[2] ({IIC2Bus_Data[21],IIC2Bus_Data[22],IIC2Bus_Data[23]}),
        .\cr_i_reg[2]_0 (REG_INTERFACE_I_n_51),
        .\cr_i_reg[3]_0 (REG_INTERFACE_I_n_41),
        .\cr_i_reg[4]_0 ({X_AXI_IPIF_SSP1_n_16,IIC_CONTROL_I_n_54}),
        .\cr_i_reg[7]_0 (REG_INTERFACE_I_n_40),
        .dynamic_MSMS(dynamic_MSMS[1]),
        .earlyAckDataState(earlyAckDataState),
        .firstDynStartSeen(firstDynStartSeen),
        .firstDynStartSeen_reg(REG_INTERFACE_I_n_127),
        .gpo(\^gpo ),
        .new_rcv_dta_d1(new_rcv_dta_d1),
        .\next_scl_state1_inferred__1/i__carry ({\CLKCNT/q_int_reg [0],\CLKCNT/q_int_reg [1],\CLKCNT/q_int_reg [2],\CLKCNT/q_int_reg [3],\CLKCNT/q_int_reg [4],\CLKCNT/q_int_reg [5],\CLKCNT/q_int_reg [6],\CLKCNT/q_int_reg [7],\CLKCNT/q_int_reg [8],\CLKCNT/q_int_reg [9],\CLKCNT/q_int_reg [10]}),
        .p_0_in(p_0_in),
        .p_3_in(p_3_in),
        .\q_int_reg[0] (clk_cnt_en11_out),
        .\q_int_reg[0]_0 (clk_cnt_en12_out),
        .\q_int_reg[0]_1 (IIC_CONTROL_I_n_49),
        .rdCntrFrmTxFifo(rdCntrFrmTxFifo),
        .s_axi_aclk(s_axi_aclk),
        .\s_axi_rdata_i[1]_i_6 ({Bus2IIC_Addr[2],Bus2IIC_Addr[3],Bus2IIC_Addr[4],Bus2IIC_Addr[5],Bus2IIC_Addr[6]}),
        .\s_axi_rdata_i_reg[8] (X_AXI_IPIF_SSP1_n_14),
        .s_axi_wdata(s_axi_wdata[10:0]),
        .\sda_setup0_inferred__0/i__carry ({\SETUP_CNT/q_int_reg [0],\SETUP_CNT/q_int_reg [1],\SETUP_CNT/q_int_reg [2],\SETUP_CNT/q_int_reg [3],\SETUP_CNT/q_int_reg [4],\SETUP_CNT/q_int_reg [5],\SETUP_CNT/q_int_reg [6],\SETUP_CNT/q_int_reg [7],\SETUP_CNT/q_int_reg [8],\SETUP_CNT/q_int_reg [9],\SETUP_CNT/q_int_reg [10]}),
        .\sr_i_reg[0]_0 (sr_i),
        .\sr_i_reg[0]_1 (WRITE_FIFO_I_n_14),
        .\sr_i_reg[1]_0 ({p_0_out,Rc_fifo_full,Tx_fifo_full,Srw,Bb,Abgc}),
        .\sr_i_reg[4]_0 (REG_INTERFACE_I_n_144),
        .\sr_i_reg[5]_0 (REG_INTERFACE_I_n_145),
        .stop_scl_reg(stop_scl_reg),
        .stop_scl_reg_reg(REG_INTERFACE_I_n_50),
        .\timing_param_tbuf_i_reg[10]_0 ({REG_INTERFACE_I_n_25,REG_INTERFACE_I_n_26}),
        .\timing_param_tbuf_i_reg[10]_1 (Timing_param_tbuf),
        .\timing_param_tbuf_i_reg[7]_0 ({REG_INTERFACE_I_n_88,REG_INTERFACE_I_n_89,REG_INTERFACE_I_n_90,REG_INTERFACE_I_n_91}),
        .\timing_param_tbuf_i_reg[9]_0 (REG_INTERFACE_I_n_92),
        .\timing_param_thddat_i_reg[10]_0 ({REG_INTERFACE_I_n_93,REG_INTERFACE_I_n_94,REG_INTERFACE_I_n_95,REG_INTERFACE_I_n_96}),
        .\timing_param_thdsta_i_reg[10]_0 ({REG_INTERFACE_I_n_97,REG_INTERFACE_I_n_98,REG_INTERFACE_I_n_99,REG_INTERFACE_I_n_100}),
        .\timing_param_thdsta_i_reg[7]_0 (Timing_param_thdsta),
        .\timing_param_thigh_i_reg[7]_0 (Timing_param_thigh),
        .\timing_param_tlow_i_reg[10]_0 ({REG_INTERFACE_I_n_109,REG_INTERFACE_I_n_110,REG_INTERFACE_I_n_111,REG_INTERFACE_I_n_112}),
        .\timing_param_tlow_i_reg[7]_0 ({Timing_param_tlow[7:4],Timing_param_tlow[0]}),
        .\timing_param_tsudat_i_reg[10]_0 ({REG_INTERFACE_I_n_118,REG_INTERFACE_I_n_119,REG_INTERFACE_I_n_120,REG_INTERFACE_I_n_121}),
        .\timing_param_tsudat_i_reg[3]_0 (Timing_param_tsudat),
        .\timing_param_tsudat_i_reg[4]_0 (REG_INTERFACE_I_n_137),
        .\timing_param_tsudat_i_reg[5]_0 (REG_INTERFACE_I_n_138),
        .\timing_param_tsudat_i_reg[6]_0 (REG_INTERFACE_I_n_139),
        .\timing_param_tsudat_i_reg[7]_0 (REG_INTERFACE_I_n_140),
        .\timing_param_tsusta_i_reg[10]_0 ({REG_INTERFACE_I_n_76,REG_INTERFACE_I_n_77,REG_INTERFACE_I_n_78,REG_INTERFACE_I_n_79}),
        .\timing_param_tsusta_i_reg[7]_0 (Timing_param_tsusta),
        .\timing_param_tsusto_i_reg[10]_0 ({REG_INTERFACE_I_n_64,REG_INTERFACE_I_n_65,REG_INTERFACE_I_n_66,REG_INTERFACE_I_n_67}),
        .\timing_param_tsusto_i_reg[7]_0 (Timing_param_tsusto));
  FDRE #(
    .INIT(1'b0)) 
    Rc_fifo_rd_d_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Rc_fifo_rd),
        .Q(Rc_fifo_rd_d),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    Rc_fifo_wr_d_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Rc_fifo_wr),
        .Q(Rc_fifo_wr_d),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    Tx_fifo_rd_d_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Tx_fifo_rd),
        .Q(Tx_fifo_rd_d),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    Tx_fifo_wr_d_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Tx_fifo_wr),
        .Q(Tx_fifo_wr_d),
        .R(Bus2IIC_Reset));
  system_axi_iic_0_0__SRL_FIFO__parameterized0 WRITE_FIFO_CTRL_I
       (.\Addr_Counters[0].FDRE_I_0 (REG_INTERFACE_I_n_39),
        .\Addr_Counters[0].FDRE_I_1 (DYN_MASTER_I_n_6),
        .\Addr_Counters[1].FDRE_I_0 (WRITE_FIFO_CTRL_I_n_3),
        .D(D_1),
        .Data_Exists_DFF_0(WRITE_FIFO_CTRL_I_n_0),
        .Tx_fifo_rd(Tx_fifo_rd),
        .Tx_fifo_rd_d(Tx_fifo_rd_d),
        .Tx_fifo_rst(Tx_fifo_rst),
        .ctrlFifoDin(ctrlFifoDin),
        .dynamic_MSMS(dynamic_MSMS),
        .rdCntrFrmTxFifo(rdCntrFrmTxFifo),
        .s_axi_aclk(s_axi_aclk));
  system_axi_iic_0_0__SRL_FIFO_0 WRITE_FIFO_I
       (.\Addr_Counters[0].FDRE_I_0 (Tx_fifo_full),
        .\Addr_Counters[0].FDRE_I_1 (REG_INTERFACE_I_n_148),
        .Data_Exists_DFF_0(WRITE_FIFO_I_n_14),
        .Data_Exists_DFF_1(WRITE_FIFO_I_n_16),
        .Data_Exists_DFF_2(DYN_MASTER_I_n_6),
        .Tx_addr(Tx_addr),
        .Tx_data_exists(Tx_data_exists),
        .Tx_fifo_data(Tx_fifo_data),
        .Tx_fifo_rd(Tx_fifo_rd),
        .Tx_fifo_rd_d(Tx_fifo_rd_d),
        .Tx_fifo_rst(Tx_fifo_rst),
        .Tx_fifo_wr(Tx_fifo_wr),
        .Tx_fifo_wr_d(Tx_fifo_wr_d),
        .dynamic_MSMS(dynamic_MSMS[1]),
        .p_0_in(p_0_in),
        .rdCntrFrmTxFifo(rdCntrFrmTxFifo),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_wdata(s_axi_wdata[7:0]),
        .scndry_out(sda_clean),
        .shift_reg_ld(shift_reg_ld),
        .shift_reg_ld_reg(p_2_in__0));
  system_axi_iic_0_0__axi_ipif_ssp1 X_AXI_IPIF_SSP1
       (.Bus2IIC_RdCE(Bus2IIC_RdCE),
        .Bus2IIC_Reset(Bus2IIC_Reset),
        .Bus2IIC_WrCE({Bus2IIC_WrCE[0],Bus2IIC_WrCE[2],Bus2IIC_WrCE[4],Bus2IIC_WrCE[8],Bus2IIC_WrCE[10],Bus2IIC_WrCE[11],Bus2IIC_WrCE[12],Bus2IIC_WrCE[13],Bus2IIC_WrCE[14],Bus2IIC_WrCE[15],Bus2IIC_WrCE[16],Bus2IIC_WrCE[17]}),
        .D({IIC2Bus_Data[21],IIC2Bus_Data[22],IIC2Bus_Data[23]}),
        .IIC2Bus_IntrEvent(IIC2Bus_IntrEvent),
        .Q({Bus2IIC_Addr[2],Bus2IIC_Addr[3],Bus2IIC_Addr[4],Bus2IIC_Addr[5],Bus2IIC_Addr[6]}),
        .Rc_addr(Rc_addr),
        .Rc_fifo_data(Rc_fifo_data),
        .Tx_addr(Tx_addr),
        .Tx_fifo_data(Tx_fifo_data),
        .Tx_fifo_rst(Tx_fifo_rst),
        .\bus2ip_addr_i_reg[5] (X_AXI_IPIF_SSP1_n_14),
        .cr_txModeSelect_clr(cr_txModeSelect_clr),
        .cr_txModeSelect_set(cr_txModeSelect_set),
        .ctrlFifoDin(ctrlFifoDin),
        .gpo(\^gpo ),
        .iic2intc_irpt(NLW_X_AXI_IPIF_SSP1_iic2intc_irpt_UNCONNECTED),
        .is_read_reg(is_read_reg),
        .is_write_reg(is_write_reg),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(NLW_X_AXI_IPIF_SSP1_s_axi_awaddr_UNCONNECTED[8:0]),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_X_AXI_IPIF_SSP1_s_axi_bresp_UNCONNECTED[0]),
        .s_axi_bvalid_i_reg(s_axi_bvalid_i_reg),
        .s_axi_rdata(s_axi_rdata),
        .\s_axi_rdata_i[0]_i_2 (REG_INTERFACE_I_n_134),
        .\s_axi_rdata_i[0]_i_2_0 (REG_INTERFACE_I_n_129),
        .\s_axi_rdata_i[1]_i_2 (REG_INTERFACE_I_n_130),
        .\s_axi_rdata_i[1]_i_2_0 (REG_INTERFACE_I_n_146),
        .\s_axi_rdata_i[2]_i_2 (REG_INTERFACE_I_n_135),
        .\s_axi_rdata_i[2]_i_2_0 (REG_INTERFACE_I_n_145),
        .\s_axi_rdata_i[3]_i_2 (Timing_param_tsudat),
        .\s_axi_rdata_i[3]_i_2_0 (REG_INTERFACE_I_n_136),
        .\s_axi_rdata_i[3]_i_2_1 (REG_INTERFACE_I_n_144),
        .\s_axi_rdata_i[7]_i_8 ({Cr[0],Cr[1],Cr[2],Cr[3],Cr[4],Cr[7]}),
        .\s_axi_rdata_i[7]_i_8_0 ({Timing_param_tlow[7:4],Timing_param_tlow[0]}),
        .\s_axi_rdata_i_reg[4]_i_2 (REG_INTERFACE_I_n_137),
        .\s_axi_rdata_i_reg[5]_i_2 (REG_INTERFACE_I_n_138),
        .\s_axi_rdata_i_reg[6]_i_2 (REG_INTERFACE_I_n_139),
        .\s_axi_rdata_i_reg[7]_i_2 (REG_INTERFACE_I_n_140),
        .\s_axi_rdata_i_reg[7]_i_6 (Timing_param_tsusta),
        .\s_axi_rdata_i_reg[7]_i_6_0 (Timing_param_tbuf[7:0]),
        .\s_axi_rdata_i_reg[7]_i_6_1 (Timing_param_thdsta),
        .\s_axi_rdata_i_reg[7]_i_6_2 ({Adr[0],Adr[1],Adr[2],Adr[3],Adr[4],Adr[5],Adr[6]}),
        .\s_axi_rdata_i_reg[7]_i_7 (Timing_param_tsusto),
        .\s_axi_rdata_i_reg[7]_i_7_0 (Timing_param_thigh),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_X_AXI_IPIF_SSP1_s_axi_rresp_UNCONNECTED[0]),
        .s_axi_rvalid_i_reg(s_axi_rvalid_i_reg),
        .s_axi_wdata({s_axi_wdata[11],s_axi_wdata[9:0]}),
        .\s_axi_wdata[3] (X_AXI_IPIF_SSP1_n_16),
        .s_axi_wdata_0_sp_1(X_AXI_IPIF_SSP1_n_30),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* ORIG_REF_NAME = "iic_control" *) 
module system_axi_iic_0_0__iic_control
   (shift_reg_ld,
    sda_rin_d1,
    scl_rin_d1,
    Tx_under_prev,
    Bb,
    D,
    New_rcv_dta,
    earlyAckHdr,
    earlyAckDataState,
    ackDataState,
    CO,
    \timing_param_tsusto_i_reg[10] ,
    \timing_param_tsusta_i_reg[10] ,
    \timing_param_thddat_i_reg[10] ,
    \timing_param_tlow_i_reg[10] ,
    Abgc,
    stop_scl_reg,
    Aas,
    srw_i_reg_0,
    Rdy_new_xmt,
    \q_int_reg[0] ,
    \q_int_reg[0]_0 ,
    \FSM_onehot_scl_state_reg[6]_0 ,
    \FSM_onehot_scl_state_reg[7]_0 ,
    \data_int_reg[3] ,
    sda_t,
    \s_axi_wdata[2] ,
    scl_t,
    Rc_fifo_wr0,
    \data_i2c_i_reg[7]_0 ,
    \q_int_reg[0]_1 ,
    s_axi_aclk,
    scndry_out,
    scl_rin_d1_reg_0,
    scl_rising_edge0,
    Ro_prev,
    Q,
    sr_i,
    S,
    sda_cout_reg_reg_0,
    \FSM_onehot_scl_state[9]_i_4 ,
    \clk_cnt_en1_inferred__2/i__carry__0_0 ,
    \FSM_onehot_scl_state[2]_i_4_0 ,
    \q_int_reg[0]_2 ,
    \FSM_onehot_scl_state_reg[1]_0 ,
    \FSM_onehot_scl_state_reg[3]_0 ,
    \FSM_onehot_scl_state_reg[6]_1 ,
    sda_setup_reg_0,
    \q_int_reg[1] ,
    \q_int_reg[0]_3 ,
    \LEVEL_1_GEN.master_sda_reg_0 ,
    aas_i_reg_0,
    aas_i_reg_1,
    \clk_cnt_en1_inferred__2/i__carry__0_1 ,
    s_axi_wdata,
    E,
    \cr_i_reg[5] ,
    Tx_data_exists,
    dynamic_MSMS,
    \cr_i_reg[5]_0 ,
    rxCntDone,
    Msms_set,
    \data_int_reg[0] ,
    Tx_fifo_data,
    new_rcv_dta_d1,
    detect_stop_reg_0,
    \FSM_onehot_scl_state_reg[7]_1 );
  output shift_reg_ld;
  output sda_rin_d1;
  output scl_rin_d1;
  output Tx_under_prev;
  output Bb;
  output [3:0]D;
  output New_rcv_dta;
  output earlyAckHdr;
  output earlyAckDataState;
  output ackDataState;
  output [0:0]CO;
  output [0:0]\timing_param_tsusto_i_reg[10] ;
  output [0:0]\timing_param_tsusta_i_reg[10] ;
  output [0:0]\timing_param_thddat_i_reg[10] ;
  output [0:0]\timing_param_tlow_i_reg[10] ;
  output Abgc;
  output stop_scl_reg;
  output Aas;
  output [0:0]srw_i_reg_0;
  output Rdy_new_xmt;
  output [10:0]\q_int_reg[0] ;
  output [10:0]\q_int_reg[0]_0 ;
  output [3:0]\FSM_onehot_scl_state_reg[6]_0 ;
  output \FSM_onehot_scl_state_reg[7]_0 ;
  output [2:0]\data_int_reg[3] ;
  output sda_t;
  output [0:0]\s_axi_wdata[2] ;
  output scl_t;
  output Rc_fifo_wr0;
  output [7:0]\data_i2c_i_reg[7]_0 ;
  input \q_int_reg[0]_1 ;
  input s_axi_aclk;
  input scndry_out;
  input scl_rin_d1_reg_0;
  input scl_rising_edge0;
  input Ro_prev;
  input [4:0]Q;
  input [0:0]sr_i;
  input [3:0]S;
  input [3:0]sda_cout_reg_reg_0;
  input [3:0]\FSM_onehot_scl_state[9]_i_4 ;
  input [3:0]\clk_cnt_en1_inferred__2/i__carry__0_0 ;
  input [1:0]\FSM_onehot_scl_state[2]_i_4_0 ;
  input [3:0]\q_int_reg[0]_2 ;
  input [0:0]\FSM_onehot_scl_state_reg[1]_0 ;
  input [3:0]\FSM_onehot_scl_state_reg[3]_0 ;
  input [3:0]\FSM_onehot_scl_state_reg[6]_1 ;
  input [3:0]sda_setup_reg_0;
  input \q_int_reg[1] ;
  input \q_int_reg[0]_3 ;
  input \LEVEL_1_GEN.master_sda_reg_0 ;
  input aas_i_reg_0;
  input [3:0]aas_i_reg_1;
  input [10:0]\clk_cnt_en1_inferred__2/i__carry__0_1 ;
  input [0:0]s_axi_wdata;
  input [0:0]E;
  input \cr_i_reg[5] ;
  input Tx_data_exists;
  input [0:0]dynamic_MSMS;
  input \cr_i_reg[5]_0 ;
  input rxCntDone;
  input Msms_set;
  input [0:0]\data_int_reg[0] ;
  input [6:0]Tx_fifo_data;
  input new_rcv_dta_d1;
  input detect_stop_reg_0;
  input [1:0]\FSM_onehot_scl_state_reg[7]_1 ;

  wire Aas;
  wire Abgc;
  wire AckDataState_i_1_n_0;
  wire BITCNT_n_1;
  wire BITCNT_n_2;
  wire BITCNT_n_3;
  wire BITCNT_n_4;
  wire Bb;
  wire CLKCNT_n_11;
  wire CLKCNT_n_12;
  wire CLKCNT_n_13;
  wire CLKCNT_n_15;
  wire CLKCNT_n_16;
  wire CLKCNT_n_17;
  wire CLKCNT_n_18;
  wire CLKCNT_n_19;
  wire CLKCNT_n_20;
  wire CLKCNT_n_21;
  wire CLKCNT_n_22;
  wire CLKCNT_n_23;
  wire CLKCNT_n_24;
  wire [0:0]CO;
  wire [3:0]D;
  wire [0:0]E;
  wire EarlyAckDataState0;
  wire EarlyAckDataState_i_2_n_0;
  wire EarlyAckHdr0;
  wire \FSM_onehot_scl_state[0]_i_2_n_0 ;
  wire \FSM_onehot_scl_state[2]_i_1_n_0 ;
  wire \FSM_onehot_scl_state[2]_i_2_n_0 ;
  wire \FSM_onehot_scl_state[2]_i_3_n_0 ;
  wire [1:0]\FSM_onehot_scl_state[2]_i_4_0 ;
  wire \FSM_onehot_scl_state[2]_i_4_n_0 ;
  wire \FSM_onehot_scl_state[3]_i_1_n_0 ;
  wire \FSM_onehot_scl_state[4]_i_1_n_0 ;
  wire \FSM_onehot_scl_state[4]_i_2_n_0 ;
  wire \FSM_onehot_scl_state[6]_i_1_n_0 ;
  wire \FSM_onehot_scl_state[8]_i_1_n_0 ;
  wire \FSM_onehot_scl_state[9]_i_2_n_0 ;
  wire [3:0]\FSM_onehot_scl_state[9]_i_4 ;
  wire \FSM_onehot_scl_state[9]_i_5_n_0 ;
  wire \FSM_onehot_scl_state[9]_i_6_n_0 ;
  wire [0:0]\FSM_onehot_scl_state_reg[1]_0 ;
  wire [3:0]\FSM_onehot_scl_state_reg[3]_0 ;
  wire [3:0]\FSM_onehot_scl_state_reg[6]_0 ;
  wire [3:0]\FSM_onehot_scl_state_reg[6]_1 ;
  wire \FSM_onehot_scl_state_reg[7]_0 ;
  wire [1:0]\FSM_onehot_scl_state_reg[7]_1 ;
  wire \FSM_onehot_scl_state_reg_n_0_[0] ;
  wire \FSM_onehot_scl_state_reg_n_0_[1] ;
  wire \FSM_onehot_scl_state_reg_n_0_[7] ;
  wire \FSM_onehot_scl_state_reg_n_0_[8] ;
  wire \FSM_onehot_scl_state_reg_n_0_[9] ;
  wire \FSM_sequential_state[1]_i_3_n_0 ;
  wire \FSM_sequential_state[1]_i_4_n_0 ;
  wire \FSM_sequential_state[2]_i_10_n_0 ;
  wire \FSM_sequential_state[2]_i_3_n_0 ;
  wire \FSM_sequential_state[2]_i_7_n_0 ;
  wire I2CDATA_REG_n_0;
  wire I2CDATA_REG_n_2;
  wire I2CDATA_REG_n_3;
  wire I2CDATA_REG_n_4;
  wire I2CDATA_REG_n_5;
  wire I2CDATA_REG_n_6;
  wire I2CDATA_REG_n_7;
  wire I2CDATA_REG_n_8;
  wire I2CDATA_REG_n_9;
  wire I2CHEADER_REG_n_1;
  wire I2CHEADER_REG_n_10;
  wire I2CHEADER_REG_n_2;
  wire I2CHEADER_REG_n_3;
  wire I2CHEADER_REG_n_4;
  wire I2CHEADER_REG_n_5;
  wire I2CHEADER_REG_n_6;
  wire \LEVEL_1_GEN.master_sda_reg_0 ;
  wire \LEVEL_1_GEN.master_sda_reg_n_0 ;
  wire Msms_set;
  wire New_rcv_dta;
  wire [4:0]Q;
  wire Rc_fifo_wr0;
  wire Rdy_new_xmt;
  wire Ro_prev;
  wire [3:0]S;
  wire SETUP_CNT_n_0;
  wire Tx_data_exists;
  wire [6:0]Tx_fifo_data;
  wire Tx_under_prev;
  wire aas_i_i_2_n_0;
  wire aas_i_reg_0;
  wire [3:0]aas_i_reg_1;
  wire ackDataState;
  wire al_i_i_1_n_0;
  wire al_i_i_2_n_0;
  wire al_prevent;
  wire al_prevent_i_1_n_0;
  wire arb_lost;
  wire arb_lost_i_1_n_0;
  wire bit_cnt_en;
  wire bit_cnt_en0;
  wire bus_busy_d1;
  wire bus_busy_i_1_n_0;
  wire [3:0]\clk_cnt_en1_inferred__2/i__carry__0_0 ;
  wire [10:0]\clk_cnt_en1_inferred__2/i__carry__0_1 ;
  wire \clk_cnt_en1_inferred__2/i__carry__0_n_2 ;
  wire \clk_cnt_en1_inferred__2/i__carry_n_0 ;
  wire \cr_i[5]_i_3_n_0 ;
  wire \cr_i_reg[5] ;
  wire \cr_i_reg[5]_0 ;
  wire data_i2c_i0;
  wire [7:0]\data_i2c_i_reg[7]_0 ;
  wire [0:0]\data_int_reg[0] ;
  wire [2:0]\data_int_reg[3] ;
  wire detect_start;
  wire detect_start_i_1_n_0;
  wire detect_start_i_2_n_0;
  wire detect_stop0;
  wire detect_stop_b;
  wire detect_stop_b_i_1_n_0;
  wire detect_stop_b_reg_n_0;
  wire detect_stop_i_1_n_0;
  wire detect_stop_reg_0;
  wire detect_stop_reg_n_0;
  wire dtc_i_d1;
  wire dtc_i_d2;
  wire dtc_i_reg_n_0;
  wire dtre_d1;
  wire [0:0]dynamic_MSMS;
  wire earlyAckDataState;
  wire earlyAckHdr;
  wire gen_start;
  wire gen_start_i_1_n_0;
  wire gen_stop;
  wire gen_stop_d1;
  wire gen_stop_i_1_n_0;
  wire i2c_header_en;
  wire i2c_header_en0;
  wire master_slave;
  wire master_slave_i_1_n_0;
  wire msms_d1;
  wire msms_d10;
  wire msms_d1_i_2_n_0;
  wire msms_d2;
  wire msms_rst_i;
  wire msms_rst_i_i_1_n_0;
  wire msms_rst_i_i_2_n_0;
  wire msms_rst_i_i_3_n_0;
  wire new_rcv_dta_d1;
  wire \next_scl_state1_inferred__0/i__carry_n_0 ;
  wire [10:0]\q_int_reg[0] ;
  wire [10:0]\q_int_reg[0]_0 ;
  wire \q_int_reg[0]_1 ;
  wire [3:0]\q_int_reg[0]_2 ;
  wire \q_int_reg[0]_3 ;
  wire \q_int_reg[1] ;
  wire rdy_new_xmt_i_i_1_n_0;
  wire rdy_new_xmt_i_i_2_n_0;
  wire ro_prev_d1;
  wire rsta_d1;
  wire rsta_tx_under_prev;
  wire rsta_tx_under_prev_i_1_n_0;
  wire rxCntDone;
  wire s_axi_aclk;
  wire [0:0]s_axi_wdata;
  wire [0:0]\s_axi_wdata[2] ;
  wire scl_cout_reg;
  wire scl_cout_reg0;
  wire scl_cout_reg_i_2_n_0;
  wire scl_f_edg_d1;
  wire scl_f_edg_d2;
  wire scl_f_edg_d3;
  wire scl_falling_edge;
  wire scl_falling_edge0;
  wire scl_rin_d1;
  wire scl_rin_d1_reg_0;
  wire scl_rising_edge;
  wire scl_rising_edge0;
  wire scl_t;
  wire scndry_out;
  wire sda_cout;
  wire sda_cout_reg;
  wire sda_cout_reg_i_1_n_0;
  wire sda_cout_reg_i_2_n_0;
  wire [3:0]sda_cout_reg_reg_0;
  wire sda_rin_d1;
  wire sda_sample;
  wire sda_sample_i_1_n_0;
  wire sda_setup;
  wire \sda_setup0_inferred__0/i__carry_n_0 ;
  wire sda_setup_i_1_n_0;
  wire [3:0]sda_setup_reg_0;
  wire sda_t;
  wire [7:7]shift_reg;
  wire shift_reg_en;
  wire shift_reg_en0;
  wire shift_reg_en_i_2_n_0;
  wire shift_reg_ld;
  wire shift_reg_ld0;
  wire shift_reg_ld_d1;
  wire slave_sda_reg_n_0;
  wire sm_stop_i_1_n_0;
  wire sm_stop_i_2_n_0;
  wire sm_stop_i_3_n_0;
  wire sm_stop_reg_n_0;
  wire [0:0]sr_i;
  wire [0:0]srw_i_reg_0;
  wire state0;
  wire [2:0]state__0;
  wire stop_scl_reg;
  wire stop_scl_reg_i_1_n_0;
  wire stop_scl_reg_i_2_n_0;
  wire stop_scl_reg_i_4_n_0;
  wire stop_scl_reg_i_5_n_0;
  wire stop_start_wait1;
  wire [0:0]\timing_param_thddat_i_reg[10] ;
  wire [0:0]\timing_param_tlow_i_reg[10] ;
  wire [0:0]\timing_param_tsusta_i_reg[10] ;
  wire [0:0]\timing_param_tsusto_i_reg[10] ;
  wire tx_under_prev_d1;
  wire tx_under_prev_i0;
  wire tx_under_prev_i_i_1_n_0;
  wire txer_edge_i_1_n_0;
  wire txer_edge_i_2_n_0;
  wire txer_i_i_1_n_0;
  wire txer_i_reg_n_0;
  wire [2:0]NLW_clk_cnt_en1_carry_CO_UNCONNECTED;
  wire [3:0]NLW_clk_cnt_en1_carry_O_UNCONNECTED;
  wire [2:0]\NLW_clk_cnt_en1_inferred__0/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_clk_cnt_en1_inferred__0/i__carry_O_UNCONNECTED ;
  wire [2:0]\NLW_clk_cnt_en1_inferred__1/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_clk_cnt_en1_inferred__1/i__carry_O_UNCONNECTED ;
  wire [2:0]\NLW_clk_cnt_en1_inferred__2/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_clk_cnt_en1_inferred__2/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_clk_cnt_en1_inferred__2/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_clk_cnt_en1_inferred__2/i__carry__0_O_UNCONNECTED ;
  wire [2:0]NLW_clk_cnt_en2_carry_CO_UNCONNECTED;
  wire [3:0]NLW_clk_cnt_en2_carry_O_UNCONNECTED;
  wire [2:0]\NLW_next_scl_state1_inferred__0/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_next_scl_state1_inferred__0/i__carry_O_UNCONNECTED ;
  wire [2:0]\NLW_next_scl_state1_inferred__1/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_next_scl_state1_inferred__1/i__carry_O_UNCONNECTED ;
  wire [2:0]\NLW_sda_setup0_inferred__0/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_sda_setup0_inferred__0/i__carry_O_UNCONNECTED ;
  wire [2:0]NLW_stop_start_wait1_carry_CO_UNCONNECTED;
  wire [3:0]NLW_stop_start_wait1_carry_O_UNCONNECTED;

  LUT3 #(
    .INIT(8'h08)) 
    AckDataState_i_1
       (.I0(state__0[0]),
        .I1(state__0[1]),
        .I2(state__0[2]),
        .O(AckDataState_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    AckDataState_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(AckDataState_i_1_n_0),
        .Q(ackDataState),
        .R(\q_int_reg[0]_1 ));
  system_axi_iic_0_0__upcnt_n__parameterized0 BITCNT
       (.EarlyAckDataState0(EarlyAckDataState0),
        .EarlyAckDataState_reg(AckDataState_i_1_n_0),
        .EarlyAckDataState_reg_0(EarlyAckDataState_i_2_n_0),
        .\FSM_sequential_state_reg[0] (BITCNT_n_4),
        .\FSM_sequential_state_reg[0]_0 (\FSM_sequential_state[2]_i_7_n_0 ),
        .\FSM_sequential_state_reg[0]_1 (I2CHEADER_REG_n_4),
        .\FSM_sequential_state_reg[1] (BITCNT_n_3),
        .\FSM_sequential_state_reg[1]_0 (I2CHEADER_REG_n_1),
        .\FSM_sequential_state_reg[1]_1 (detect_stop_reg_n_0),
        .\FSM_sequential_state_reg[2] (BITCNT_n_2),
        .\FSM_sequential_state_reg[2]_0 (\FSM_sequential_state[2]_i_3_n_0 ),
        .\FSM_sequential_state_reg[2]_1 (I2CHEADER_REG_n_3),
        .Q(Q[0]),
        .bit_cnt_en(bit_cnt_en),
        .detect_start(detect_start),
        .dtc_i_reg(dtc_i_reg_n_0),
        .\q_int_reg[0]_0 (\q_int_reg[0]_1 ),
        .\q_int_reg[1]_0 (BITCNT_n_1),
        .s_axi_aclk(s_axi_aclk),
        .scl_falling_edge(scl_falling_edge),
        .state0(state0),
        .state__0(state__0));
  system_axi_iic_0_0__upcnt_n CLKCNT
       (.CO(stop_start_wait1),
        .D({CLKCNT_n_11,CLKCNT_n_12,CLKCNT_n_13}),
        .DI({CLKCNT_n_19,CLKCNT_n_20,CLKCNT_n_21,CLKCNT_n_22}),
        .\FSM_onehot_scl_state_reg[0] (\FSM_onehot_scl_state[0]_i_2_n_0 ),
        .\FSM_onehot_scl_state_reg[1] (\FSM_onehot_scl_state[2]_i_2_n_0 ),
        .\FSM_onehot_scl_state_reg[1]_0 (detect_stop_b_reg_n_0),
        .\FSM_onehot_scl_state_reg[1]_1 (\FSM_onehot_scl_state[2]_i_3_n_0 ),
        .\FSM_onehot_scl_state_reg[1]_2 (\FSM_onehot_scl_state[2]_i_4_n_0 ),
        .\FSM_onehot_scl_state_reg[2] (Q[3]),
        .\FSM_onehot_scl_state_reg[7] (\FSM_onehot_scl_state_reg[7]_0 ),
        .Q(\q_int_reg[0]_0 ),
        .S({CLKCNT_n_16,CLKCNT_n_17,CLKCNT_n_18}),
        .arb_lost(arb_lost),
        .\clk_cnt_en1_inferred__2/i__carry__0 (\clk_cnt_en1_inferred__2/i__carry__0_1 ),
        .\cr_i_reg[2] (CLKCNT_n_15),
        .\q_int_reg[0]_0 ({CLKCNT_n_23,CLKCNT_n_24}),
        .\q_int_reg[0]_1 ({\FSM_onehot_scl_state_reg_n_0_[9] ,\FSM_onehot_scl_state_reg_n_0_[8] ,\FSM_onehot_scl_state_reg_n_0_[7] ,\FSM_onehot_scl_state_reg[6]_0 ,detect_stop_b,\FSM_onehot_scl_state_reg_n_0_[1] ,\FSM_onehot_scl_state_reg_n_0_[0] }),
        .\q_int_reg[0]_2 (scl_rin_d1_reg_0),
        .\q_int_reg[0]_3 (\timing_param_thddat_i_reg[10] ),
        .\q_int_reg[0]_4 (\q_int_reg[0]_3 ),
        .\q_int_reg[0]_5 (\clk_cnt_en1_inferred__2/i__carry__0_n_2 ),
        .\q_int_reg[10]_0 (\q_int_reg[0]_1 ),
        .\q_int_reg[1]_0 (\q_int_reg[1] ),
        .s_axi_aclk(s_axi_aclk),
        .scndry_out(scndry_out));
  LUT3 #(
    .INIT(8'hFB)) 
    EarlyAckDataState_i_2
       (.I0(state__0[0]),
        .I1(state__0[2]),
        .I2(state__0[1]),
        .O(EarlyAckDataState_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    EarlyAckDataState_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(EarlyAckDataState0),
        .Q(earlyAckDataState),
        .R(\q_int_reg[0]_1 ));
  LUT4 #(
    .INIT(16'h0080)) 
    EarlyAckHdr_i_1
       (.I0(scl_f_edg_d3),
        .I1(state__0[1]),
        .I2(state__0[2]),
        .I3(state__0[0]),
        .O(EarlyAckHdr0));
  FDRE #(
    .INIT(1'b0)) 
    EarlyAckHdr_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(EarlyAckHdr0),
        .Q(earlyAckHdr),
        .R(\q_int_reg[0]_1 ));
  LUT3 #(
    .INIT(8'h40)) 
    \FSM_onehot_scl_state[0]_i_2 
       (.I0(Bb),
        .I1(gen_start),
        .I2(master_slave),
        .O(\FSM_onehot_scl_state[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF1511)) 
    \FSM_onehot_scl_state[2]_i_1 
       (.I0(\FSM_onehot_scl_state[2]_i_2_n_0 ),
        .I1(detect_stop_b_reg_n_0),
        .I2(\FSM_onehot_scl_state[2]_i_3_n_0 ),
        .I3(\FSM_onehot_scl_state[2]_i_4_n_0 ),
        .I4(CLKCNT_n_15),
        .O(\FSM_onehot_scl_state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \FSM_onehot_scl_state[2]_i_2 
       (.I0(\FSM_onehot_scl_state_reg_n_0_[0] ),
        .I1(master_slave),
        .I2(gen_start),
        .I3(Bb),
        .O(\FSM_onehot_scl_state[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \FSM_onehot_scl_state[2]_i_3 
       (.I0(\FSM_onehot_scl_state_reg[6]_0 [3]),
        .I1(\FSM_onehot_scl_state_reg_n_0_[8] ),
        .I2(\FSM_onehot_scl_state_reg_n_0_[7] ),
        .I3(detect_stop_b),
        .I4(\FSM_onehot_scl_state_reg[6]_0 [2]),
        .I5(\FSM_onehot_scl_state_reg[6]_0 [0]),
        .O(\FSM_onehot_scl_state[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000DD0D)) 
    \FSM_onehot_scl_state[2]_i_4 
       (.I0(\FSM_onehot_scl_state_reg_n_0_[0] ),
        .I1(\clk_cnt_en1_inferred__2/i__carry__0_n_2 ),
        .I2(\FSM_onehot_scl_state_reg_n_0_[1] ),
        .I3(stop_start_wait1),
        .I4(\FSM_onehot_scl_state_reg_n_0_[9] ),
        .I5(\FSM_onehot_scl_state_reg[6]_0 [1]),
        .O(\FSM_onehot_scl_state[2]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h4F44)) 
    \FSM_onehot_scl_state[3]_i_1 
       (.I0(\next_scl_state1_inferred__0/i__carry_n_0 ),
        .I1(\FSM_onehot_scl_state_reg[6]_0 [0]),
        .I2(scndry_out),
        .I3(detect_stop_b),
        .O(\FSM_onehot_scl_state[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFD0D0D0)) 
    \FSM_onehot_scl_state[4]_i_1 
       (.I0(\timing_param_thddat_i_reg[10] ),
        .I1(scl_rin_d1_reg_0),
        .I2(\FSM_onehot_scl_state_reg[6]_0 [1]),
        .I3(\FSM_onehot_scl_state_reg[6]_0 [0]),
        .I4(\next_scl_state1_inferred__0/i__carry_n_0 ),
        .I5(\FSM_onehot_scl_state[4]_i_2_n_0 ),
        .O(\FSM_onehot_scl_state[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \FSM_onehot_scl_state[4]_i_2 
       (.I0(arb_lost),
        .I1(\FSM_onehot_scl_state_reg_n_0_[7] ),
        .I2(stop_scl_reg),
        .I3(Q[3]),
        .O(\FSM_onehot_scl_state[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_scl_state[6]_i_1 
       (.I0(scl_rin_d1_reg_0),
        .I1(\FSM_onehot_scl_state_reg[6]_0 [3]),
        .I2(\FSM_onehot_scl_state_reg[6]_0 [2]),
        .I3(\timing_param_tlow_i_reg[10] ),
        .O(\FSM_onehot_scl_state[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h44444F4444444444)) 
    \FSM_onehot_scl_state[8]_i_1 
       (.I0(scndry_out),
        .I1(\FSM_onehot_scl_state_reg_n_0_[8] ),
        .I2(arb_lost),
        .I3(stop_scl_reg),
        .I4(Q[3]),
        .I5(\FSM_onehot_scl_state_reg_n_0_[7] ),
        .O(\FSM_onehot_scl_state[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFCFC)) 
    \FSM_onehot_scl_state[9]_i_2 
       (.I0(\q_int_reg[1] ),
        .I1(\FSM_onehot_scl_state[9]_i_5_n_0 ),
        .I2(\FSM_onehot_scl_state[9]_i_6_n_0 ),
        .I3(arb_lost),
        .I4(\FSM_onehot_scl_state_reg_n_0_[7] ),
        .I5(\FSM_onehot_scl_state_reg[6]_0 [0]),
        .O(\FSM_onehot_scl_state[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \FSM_onehot_scl_state[9]_i_5 
       (.I0(\FSM_onehot_scl_state_reg[6]_0 [3]),
        .I1(\FSM_onehot_scl_state_reg_n_0_[8] ),
        .I2(detect_stop_b),
        .I3(\FSM_onehot_scl_state_reg_n_0_[9] ),
        .I4(\FSM_onehot_scl_state_reg[6]_0 [1]),
        .I5(\FSM_onehot_scl_state_reg_n_0_[1] ),
        .O(\FSM_onehot_scl_state[9]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_onehot_scl_state[9]_i_6 
       (.I0(\FSM_onehot_scl_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_scl_state_reg[6]_0 [2]),
        .O(\FSM_onehot_scl_state[9]_i_6_n_0 ));
  (* FSM_ENCODED_STATES = "start_edge:0000001000,scl_low_edge:0000010000,start:0000000100,start_wait:0000000010,scl_idle:0000000001,scl_high:0010000000,stop_wait:1000000000,scl_high_edge:0001000000,stop_edge:0100000000,scl_low:0000100000" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_scl_state_reg[0] 
       (.C(s_axi_aclk),
        .CE(\FSM_onehot_scl_state[9]_i_2_n_0 ),
        .D(CLKCNT_n_13),
        .Q(\FSM_onehot_scl_state_reg_n_0_[0] ),
        .S(\q_int_reg[0]_1 ));
  (* FSM_ENCODED_STATES = "start_edge:0000001000,scl_low_edge:0000010000,start:0000000100,start_wait:0000000010,scl_idle:0000000001,scl_high:0010000000,stop_wait:1000000000,scl_high_edge:0001000000,stop_edge:0100000000,scl_low:0000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_scl_state_reg[1] 
       (.C(s_axi_aclk),
        .CE(\FSM_onehot_scl_state[9]_i_2_n_0 ),
        .D(CLKCNT_n_12),
        .Q(\FSM_onehot_scl_state_reg_n_0_[1] ),
        .R(\q_int_reg[0]_1 ));
  (* FSM_ENCODED_STATES = "start_edge:0000001000,scl_low_edge:0000010000,start:0000000100,start_wait:0000000010,scl_idle:0000000001,scl_high:0010000000,stop_wait:1000000000,scl_high_edge:0001000000,stop_edge:0100000000,scl_low:0000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_scl_state_reg[2] 
       (.C(s_axi_aclk),
        .CE(\FSM_onehot_scl_state[9]_i_2_n_0 ),
        .D(\FSM_onehot_scl_state[2]_i_1_n_0 ),
        .Q(detect_stop_b),
        .R(\q_int_reg[0]_1 ));
  (* FSM_ENCODED_STATES = "start_edge:0000001000,scl_low_edge:0000010000,start:0000000100,start_wait:0000000010,scl_idle:0000000001,scl_high:0010000000,stop_wait:1000000000,scl_high_edge:0001000000,stop_edge:0100000000,scl_low:0000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_scl_state_reg[3] 
       (.C(s_axi_aclk),
        .CE(\FSM_onehot_scl_state[9]_i_2_n_0 ),
        .D(\FSM_onehot_scl_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_scl_state_reg[6]_0 [0]),
        .R(\q_int_reg[0]_1 ));
  (* FSM_ENCODED_STATES = "start_edge:0000001000,scl_low_edge:0000010000,start:0000000100,start_wait:0000000010,scl_idle:0000000001,scl_high:0010000000,stop_wait:1000000000,scl_high_edge:0001000000,stop_edge:0100000000,scl_low:0000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_scl_state_reg[4] 
       (.C(s_axi_aclk),
        .CE(\FSM_onehot_scl_state[9]_i_2_n_0 ),
        .D(\FSM_onehot_scl_state[4]_i_1_n_0 ),
        .Q(\FSM_onehot_scl_state_reg[6]_0 [1]),
        .R(\q_int_reg[0]_1 ));
  (* FSM_ENCODED_STATES = "start_edge:0000001000,scl_low_edge:0000010000,start:0000000100,start_wait:0000000010,scl_idle:0000000001,scl_high:0010000000,stop_wait:1000000000,scl_high_edge:0001000000,stop_edge:0100000000,scl_low:0000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_scl_state_reg[5] 
       (.C(s_axi_aclk),
        .CE(\FSM_onehot_scl_state[9]_i_2_n_0 ),
        .D(\FSM_onehot_scl_state_reg[7]_1 [0]),
        .Q(\FSM_onehot_scl_state_reg[6]_0 [2]),
        .R(\q_int_reg[0]_1 ));
  (* FSM_ENCODED_STATES = "start_edge:0000001000,scl_low_edge:0000010000,start:0000000100,start_wait:0000000010,scl_idle:0000000001,scl_high:0010000000,stop_wait:1000000000,scl_high_edge:0001000000,stop_edge:0100000000,scl_low:0000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_scl_state_reg[6] 
       (.C(s_axi_aclk),
        .CE(\FSM_onehot_scl_state[9]_i_2_n_0 ),
        .D(\FSM_onehot_scl_state[6]_i_1_n_0 ),
        .Q(\FSM_onehot_scl_state_reg[6]_0 [3]),
        .R(\q_int_reg[0]_1 ));
  (* FSM_ENCODED_STATES = "start_edge:0000001000,scl_low_edge:0000010000,start:0000000100,start_wait:0000000010,scl_idle:0000000001,scl_high:0010000000,stop_wait:1000000000,scl_high_edge:0001000000,stop_edge:0100000000,scl_low:0000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_scl_state_reg[7] 
       (.C(s_axi_aclk),
        .CE(\FSM_onehot_scl_state[9]_i_2_n_0 ),
        .D(\FSM_onehot_scl_state_reg[7]_1 [1]),
        .Q(\FSM_onehot_scl_state_reg_n_0_[7] ),
        .R(\q_int_reg[0]_1 ));
  (* FSM_ENCODED_STATES = "start_edge:0000001000,scl_low_edge:0000010000,start:0000000100,start_wait:0000000010,scl_idle:0000000001,scl_high:0010000000,stop_wait:1000000000,scl_high_edge:0001000000,stop_edge:0100000000,scl_low:0000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_scl_state_reg[8] 
       (.C(s_axi_aclk),
        .CE(\FSM_onehot_scl_state[9]_i_2_n_0 ),
        .D(\FSM_onehot_scl_state[8]_i_1_n_0 ),
        .Q(\FSM_onehot_scl_state_reg_n_0_[8] ),
        .R(\q_int_reg[0]_1 ));
  (* FSM_ENCODED_STATES = "start_edge:0000001000,scl_low_edge:0000010000,start:0000000100,start_wait:0000000010,scl_idle:0000000001,scl_high:0010000000,stop_wait:1000000000,scl_high_edge:0001000000,stop_edge:0100000000,scl_low:0000100000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_scl_state_reg[9] 
       (.C(s_axi_aclk),
        .CE(\FSM_onehot_scl_state[9]_i_2_n_0 ),
        .D(CLKCNT_n_11),
        .Q(\FSM_onehot_scl_state_reg_n_0_[9] ),
        .R(\q_int_reg[0]_1 ));
  LUT6 #(
    .INIT(64'hFFFBAAAAFFFBFFFB)) 
    \FSM_sequential_state[1]_i_3 
       (.I0(state__0[1]),
        .I1(state__0[0]),
        .I2(sda_sample),
        .I3(arb_lost),
        .I4(detect_start),
        .I5(state__0[2]),
        .O(\FSM_sequential_state[1]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0C80)) 
    \FSM_sequential_state[1]_i_4 
       (.I0(Ro_prev),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(state__0[2]),
        .O(\FSM_sequential_state[1]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_sequential_state[2]_i_10 
       (.I0(state__0[1]),
        .I1(state__0[2]),
        .O(\FSM_sequential_state[2]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'h2A)) 
    \FSM_sequential_state[2]_i_3 
       (.I0(state__0[0]),
        .I1(state__0[1]),
        .I2(Ro_prev),
        .O(\FSM_sequential_state[2]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_state[2]_i_5 
       (.I0(detect_stop_reg_n_0),
        .I1(Q[0]),
        .O(state0));
  LUT3 #(
    .INIT(8'h0D)) 
    \FSM_sequential_state[2]_i_7 
       (.I0(ro_prev_d1),
        .I1(Ro_prev),
        .I2(scl_f_edg_d2),
        .O(\FSM_sequential_state[2]_i_7_n_0 ));
  (* FSM_ENCODED_STATES = "ack_header:110,wait_ack:001,header:101,ack_data:011,rcv_data:100,xmit_data:010,idle:000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_state_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(BITCNT_n_4),
        .Q(state__0[0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "ack_header:110,wait_ack:001,header:101,ack_data:011,rcv_data:100,xmit_data:010,idle:000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_state_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(BITCNT_n_3),
        .Q(state__0[1]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "ack_header:110,wait_ack:001,header:101,ack_data:011,rcv_data:100,xmit_data:010,idle:000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_state_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(BITCNT_n_2),
        .Q(state__0[2]),
        .R(1'b0));
  system_axi_iic_0_0__shift8 I2CDATA_REG
       (.\LEVEL_1_GEN.master_sda_reg (\LEVEL_1_GEN.master_sda_reg_0 ),
        .\LEVEL_1_GEN.master_sda_reg_0 (Tx_under_prev),
        .Q({shift_reg,I2CDATA_REG_n_2,I2CDATA_REG_n_3,I2CDATA_REG_n_4,I2CDATA_REG_n_5,I2CDATA_REG_n_6,I2CDATA_REG_n_7,I2CDATA_REG_n_8}),
        .Tx_fifo_data(Tx_fifo_data),
        .\data_int_reg[0]_0 (\data_int_reg[0] ),
        .\data_int_reg[1]_0 (shift_reg_ld),
        .\data_int_reg[7]_0 (I2CDATA_REG_n_0),
        .\data_int_reg[7]_1 (\q_int_reg[0]_1 ),
        .s_axi_aclk(s_axi_aclk),
        .shift_reg_en(shift_reg_en),
        .slave_sda_reg(I2CHEADER_REG_n_2),
        .state__0(state__0),
        .tx_under_prev_i_reg(I2CDATA_REG_n_9));
  system_axi_iic_0_0__shift8_1 I2CHEADER_REG
       (.E(i2c_header_en),
        .\FSM_sequential_state[2]_i_4_0 (\FSM_sequential_state[2]_i_10_n_0 ),
        .\FSM_sequential_state_reg[1] (\FSM_sequential_state[1]_i_3_n_0 ),
        .\FSM_sequential_state_reg[1]_0 (\FSM_sequential_state[1]_i_4_n_0 ),
        .Q({Q[4],Q[2],Q[0]}),
        .Ro_prev(Ro_prev),
        .aas_i_reg(I2CHEADER_REG_n_5),
        .aas_i_reg_0(Aas),
        .aas_i_reg_1(aas_i_i_2_n_0),
        .aas_i_reg_2(detect_stop_reg_n_0),
        .aas_i_reg_3(aas_i_reg_0),
        .aas_i_reg_4(aas_i_reg_1),
        .abgc_i_reg(I2CHEADER_REG_n_2),
        .abgc_i_reg_0(Abgc),
        .arb_lost(arb_lost),
        .\data_int_reg[0]_0 (I2CHEADER_REG_n_10),
        .\data_int_reg[0]_1 (\q_int_reg[0]_1 ),
        .\data_int_reg[3]_0 (\data_int_reg[3] ),
        .detect_start(detect_start),
        .detect_start_reg(I2CHEADER_REG_n_3),
        .detect_start_reg_0(I2CHEADER_REG_n_4),
        .detect_start_reg_1(I2CHEADER_REG_n_6),
        .master_slave(master_slave),
        .master_slave_reg(I2CHEADER_REG_n_1),
        .s_axi_aclk(s_axi_aclk),
        .scndry_out(scndry_out),
        .sda_sample(sda_sample),
        .shift_reg_ld0(shift_reg_ld0),
        .shift_reg_ld_reg(Tx_under_prev),
        .srw_i_reg(srw_i_reg_0),
        .state__0(state__0));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \IIC2Bus_IntrEvent[4]_i_1 
       (.I0(Bb),
        .O(D[1]));
  LUT1 #(
    .INIT(2'h1)) 
    \IIC2Bus_IntrEvent[6]_i_1 
       (.I0(Aas),
        .O(D[0]));
  FDSE #(
    .INIT(1'b1)) 
    \LEVEL_1_GEN.master_sda_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(I2CDATA_REG_n_9),
        .Q(\LEVEL_1_GEN.master_sda_reg_n_0 ),
        .S(\q_int_reg[0]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \RD_FIFO_CNTRL.Rc_fifo_wr_i_1 
       (.I0(New_rcv_dta),
        .I1(new_rcv_dta_d1),
        .O(Rc_fifo_wr0));
  system_axi_iic_0_0__upcnt_n_2 SETUP_CNT
       (.\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 (SETUP_CNT_n_0),
        .Q(\q_int_reg[0] ),
        .gen_stop(gen_stop),
        .gen_stop_d1(gen_stop_d1),
        .\q_int[0]_i_3_0 (Q[3]),
        .\q_int_reg[0]_0 (\q_int_reg[0]_1 ),
        .\q_int_reg[1]_0 (sda_rin_d1),
        .\q_int_reg[1]_1 (Tx_under_prev),
        .rsta_d1(rsta_d1),
        .s_axi_aclk(s_axi_aclk),
        .scndry_out(scndry_out),
        .sda_setup(sda_setup),
        .tx_under_prev_d1(tx_under_prev_d1));
  LUT3 #(
    .INIT(8'hBF)) 
    aas_i_i_2
       (.I0(state__0[0]),
        .I1(state__0[2]),
        .I2(state__0[1]),
        .O(aas_i_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    aas_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(I2CHEADER_REG_n_5),
        .Q(Aas),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    abgc_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(I2CHEADER_REG_n_6),
        .Q(Abgc),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hE0E0E0E0E0EEE0E0)) 
    al_i_i_1
       (.I0(Q[3]),
        .I1(master_slave),
        .I2(al_i_i_2_n_0),
        .I3(al_prevent),
        .I4(detect_stop_reg_n_0),
        .I5(sm_stop_reg_n_0),
        .O(al_i_i_1_n_0));
  LUT4 #(
    .INIT(16'hFDDD)) 
    al_i_i_2
       (.I0(master_slave),
        .I1(arb_lost),
        .I2(bus_busy_d1),
        .I3(gen_start),
        .O(al_i_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    al_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(al_i_i_1_n_0),
        .Q(D[3]),
        .R(\q_int_reg[0]_1 ));
  LUT4 #(
    .INIT(16'h5554)) 
    al_prevent_i_1
       (.I0(detect_start),
        .I1(gen_stop),
        .I2(sm_stop_reg_n_0),
        .I3(al_prevent),
        .O(al_prevent_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    al_prevent_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(al_prevent_i_1_n_0),
        .Q(al_prevent),
        .R(\q_int_reg[0]_1 ));
  LUT6 #(
    .INIT(64'h000000002AEA2A2A)) 
    arb_lost_i_1
       (.I0(arb_lost),
        .I1(master_slave),
        .I2(msms_rst_i_i_2_n_0),
        .I3(scndry_out),
        .I4(sda_cout_reg),
        .I5(msms_rst_i_i_3_n_0),
        .O(arb_lost_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    arb_lost_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(arb_lost_i_1_n_0),
        .Q(arb_lost),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0488)) 
    bit_cnt_en_i_1
       (.I0(state__0[2]),
        .I1(scl_falling_edge),
        .I2(state__0[0]),
        .I3(state__0[1]),
        .O(bit_cnt_en0));
  FDRE #(
    .INIT(1'b0)) 
    bit_cnt_en_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(bit_cnt_en0),
        .Q(bit_cnt_en),
        .R(\q_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    bus_busy_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Bb),
        .Q(bus_busy_d1),
        .R(\q_int_reg[0]_1 ));
  LUT4 #(
    .INIT(16'h00E0)) 
    bus_busy_i_1
       (.I0(Bb),
        .I1(detect_start),
        .I2(Q[0]),
        .I3(detect_stop_reg_n_0),
        .O(bus_busy_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    bus_busy_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(bus_busy_i_1_n_0),
        .Q(Bb),
        .R(1'b0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 clk_cnt_en1_carry
       (.CI(1'b0),
        .CO({CO,NLW_clk_cnt_en1_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_clk_cnt_en1_carry_O_UNCONNECTED[3:0]),
        .S(S));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \clk_cnt_en1_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\timing_param_tsusto_i_reg[10] ,\NLW_clk_cnt_en1_inferred__0/i__carry_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_clk_cnt_en1_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S(sda_cout_reg_reg_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \clk_cnt_en1_inferred__1/i__carry 
       (.CI(1'b0),
        .CO({\timing_param_tsusta_i_reg[10] ,\NLW_clk_cnt_en1_inferred__1/i__carry_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_clk_cnt_en1_inferred__1/i__carry_O_UNCONNECTED [3:0]),
        .S(\FSM_onehot_scl_state[9]_i_4 ));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \clk_cnt_en1_inferred__2/i__carry 
       (.CI(1'b0),
        .CO({\clk_cnt_en1_inferred__2/i__carry_n_0 ,\NLW_clk_cnt_en1_inferred__2/i__carry_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({CLKCNT_n_19,CLKCNT_n_20,CLKCNT_n_21,CLKCNT_n_22}),
        .O(\NLW_clk_cnt_en1_inferred__2/i__carry_O_UNCONNECTED [3:0]),
        .S(\clk_cnt_en1_inferred__2/i__carry__0_0 ));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \clk_cnt_en1_inferred__2/i__carry__0 
       (.CI(\clk_cnt_en1_inferred__2/i__carry_n_0 ),
        .CO({\NLW_clk_cnt_en1_inferred__2/i__carry__0_CO_UNCONNECTED [3:2],\clk_cnt_en1_inferred__2/i__carry__0_n_2 ,\NLW_clk_cnt_en1_inferred__2/i__carry__0_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,CLKCNT_n_23,CLKCNT_n_24}),
        .O(\NLW_clk_cnt_en1_inferred__2/i__carry__0_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,\FSM_onehot_scl_state[2]_i_4_0 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 clk_cnt_en2_carry
       (.CI(1'b0),
        .CO({\timing_param_thddat_i_reg[10] ,NLW_clk_cnt_en2_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_clk_cnt_en2_carry_O_UNCONNECTED[3:0]),
        .S(\q_int_reg[0]_2 ));
  LUT6 #(
    .INIT(64'h88888888BBBB888B)) 
    \cr_i[5]_i_1 
       (.I0(s_axi_wdata),
        .I1(E),
        .I2(Bb),
        .I3(\cr_i_reg[5] ),
        .I4(Q[1]),
        .I5(\cr_i[5]_i_3_n_0 ),
        .O(\s_axi_wdata[2] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFF80)) 
    \cr_i[5]_i_3 
       (.I0(Tx_data_exists),
        .I1(dynamic_MSMS),
        .I2(\cr_i_reg[5]_0 ),
        .I3(msms_rst_i),
        .I4(sm_stop_reg_n_0),
        .I5(rxCntDone),
        .O(\cr_i[5]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00004000)) 
    \data_i2c_i[7]_i_1 
       (.I0(state__0[2]),
        .I1(state__0[1]),
        .I2(state__0[0]),
        .I3(scl_falling_edge),
        .I4(Ro_prev),
        .O(data_i2c_i0));
  FDRE #(
    .INIT(1'b0)) 
    \data_i2c_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(data_i2c_i0),
        .D(I2CDATA_REG_n_8),
        .Q(\data_i2c_i_reg[7]_0 [0]),
        .R(\q_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_i2c_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(data_i2c_i0),
        .D(I2CDATA_REG_n_7),
        .Q(\data_i2c_i_reg[7]_0 [1]),
        .R(\q_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_i2c_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(data_i2c_i0),
        .D(I2CDATA_REG_n_6),
        .Q(\data_i2c_i_reg[7]_0 [2]),
        .R(\q_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_i2c_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(data_i2c_i0),
        .D(I2CDATA_REG_n_5),
        .Q(\data_i2c_i_reg[7]_0 [3]),
        .R(\q_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_i2c_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(data_i2c_i0),
        .D(I2CDATA_REG_n_4),
        .Q(\data_i2c_i_reg[7]_0 [4]),
        .R(\q_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_i2c_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(data_i2c_i0),
        .D(I2CDATA_REG_n_3),
        .Q(\data_i2c_i_reg[7]_0 [5]),
        .R(\q_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_i2c_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(data_i2c_i0),
        .D(I2CDATA_REG_n_2),
        .Q(\data_i2c_i_reg[7]_0 [6]),
        .R(\q_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_i2c_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(data_i2c_i0),
        .D(shift_reg),
        .Q(\data_i2c_i_reg[7]_0 [7]),
        .R(\q_int_reg[0]_1 ));
  LUT6 #(
    .INIT(64'hAA8A008000000000)) 
    detect_start_i_1
       (.I0(detect_start_i_2_n_0),
        .I1(scl_rin_d1_reg_0),
        .I2(sda_rin_d1),
        .I3(scndry_out),
        .I4(detect_start),
        .I5(Q[0]),
        .O(detect_start_i_1_n_0));
  LUT3 #(
    .INIT(8'hDF)) 
    detect_start_i_2
       (.I0(state__0[2]),
        .I1(state__0[1]),
        .I2(state__0[0]),
        .O(detect_start_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    detect_start_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(detect_start_i_1_n_0),
        .Q(detect_start),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000CE020000)) 
    detect_stop_b_i_1
       (.I0(detect_stop_b_reg_n_0),
        .I1(detect_stop_reg_0),
        .I2(detect_stop_b),
        .I3(scl_rin_d1_reg_0),
        .I4(Q[0]),
        .I5(detect_start),
        .O(detect_stop_b_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    detect_stop_b_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(detect_stop_b_i_1_n_0),
        .Q(detect_stop_b_reg_n_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000F2020000)) 
    detect_stop_i_1
       (.I0(detect_stop_reg_n_0),
        .I1(detect_stop0),
        .I2(detect_stop_reg_0),
        .I3(scl_rin_d1_reg_0),
        .I4(Q[0]),
        .I5(detect_start),
        .O(detect_stop_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    detect_stop_i_2
       (.I0(msms_d1),
        .I1(msms_d2),
        .O(detect_stop0));
  FDRE #(
    .INIT(1'b0)) 
    detect_stop_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(detect_stop_i_1_n_0),
        .Q(detect_stop_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    dtc_i_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dtc_i_reg_n_0),
        .Q(dtc_i_d1),
        .R(\q_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    dtc_i_d2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dtc_i_d1),
        .Q(dtc_i_d2),
        .R(\q_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    dtc_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(BITCNT_n_1),
        .Q(dtc_i_reg_n_0),
        .R(\q_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    dtre_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(sr_i),
        .Q(dtre_d1),
        .R(\q_int_reg[0]_1 ));
  LUT4 #(
    .INIT(16'h7530)) 
    gen_start_i_1
       (.I0(detect_start),
        .I1(msms_d2),
        .I2(msms_d1),
        .I3(gen_start),
        .O(gen_start_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gen_start_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(gen_start_i_1_n_0),
        .Q(gen_start),
        .R(\q_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    gen_stop_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(gen_stop),
        .Q(gen_stop_d1),
        .R(\q_int_reg[0]_1 ));
  LUT5 #(
    .INIT(32'h55750030)) 
    gen_stop_i_1
       (.I0(detect_stop_reg_n_0),
        .I1(msms_d1),
        .I2(msms_d2),
        .I3(arb_lost),
        .I4(gen_stop),
        .O(gen_stop_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gen_stop_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(gen_stop_i_1_n_0),
        .Q(gen_stop),
        .R(\q_int_reg[0]_1 ));
  LUT4 #(
    .INIT(16'h0800)) 
    i2c_header_en_i_1
       (.I0(scl_rising_edge),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(state__0[2]),
        .O(i2c_header_en0));
  FDRE #(
    .INIT(1'b0)) 
    i2c_header_en_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(i2c_header_en0),
        .Q(i2c_header_en),
        .R(\q_int_reg[0]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT5 #(
    .INIT(32'h4F400000)) 
    master_slave_i_1
       (.I0(arb_lost),
        .I1(master_slave),
        .I2(Bb),
        .I3(msms_d1),
        .I4(Q[0]),
        .O(master_slave_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    master_slave_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(master_slave_i_1_n_0),
        .Q(master_slave),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    msms_d1_i_1
       (.I0(msms_d1_i_2_n_0),
        .I1(msms_rst_i),
        .O(msms_d10));
  LUT6 #(
    .INIT(64'hAABAAAAAAABAAABA)) 
    msms_d1_i_2
       (.I0(Q[1]),
        .I1(txer_i_reg_n_0),
        .I2(msms_d1),
        .I3(Msms_set),
        .I4(dtc_i_d2),
        .I5(dtc_i_d1),
        .O(msms_d1_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    msms_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(msms_d10),
        .Q(msms_d1),
        .R(\q_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    msms_d2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(msms_d1),
        .Q(msms_d2),
        .R(\q_int_reg[0]_1 ));
  LUT6 #(
    .INIT(64'h0000000008FF0800)) 
    msms_rst_i_i_1
       (.I0(msms_rst_i_i_2_n_0),
        .I1(sda_cout_reg),
        .I2(scndry_out),
        .I3(master_slave),
        .I4(msms_rst_i),
        .I5(msms_rst_i_i_3_n_0),
        .O(msms_rst_i_i_1_n_0));
  LUT4 #(
    .INIT(16'h0820)) 
    msms_rst_i_i_2
       (.I0(scl_rising_edge),
        .I1(state__0[0]),
        .I2(state__0[1]),
        .I3(state__0[2]),
        .O(msms_rst_i_i_2_n_0));
  LUT3 #(
    .INIT(8'hEF)) 
    msms_rst_i_i_3
       (.I0(\FSM_onehot_scl_state_reg_n_0_[9] ),
        .I1(\FSM_onehot_scl_state_reg_n_0_[0] ),
        .I2(Q[0]),
        .O(msms_rst_i_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    msms_rst_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(msms_rst_i_i_1_n_0),
        .Q(msms_rst_i),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    new_rcv_dta_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(data_i2c_i0),
        .Q(New_rcv_dta),
        .R(\q_int_reg[0]_1 ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \next_scl_state1_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\next_scl_state1_inferred__0/i__carry_n_0 ,\NLW_next_scl_state1_inferred__0/i__carry_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_next_scl_state1_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S(\FSM_onehot_scl_state_reg[3]_0 ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \next_scl_state1_inferred__1/i__carry 
       (.CI(1'b0),
        .CO({\timing_param_tlow_i_reg[10] ,\NLW_next_scl_state1_inferred__1/i__carry_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_next_scl_state1_inferred__1/i__carry_O_UNCONNECTED [3:0]),
        .S(\FSM_onehot_scl_state_reg[6]_1 ));
  LUT6 #(
    .INIT(64'h2F222F2F20222020)) 
    rdy_new_xmt_i_i_1
       (.I0(shift_reg_ld_d1),
        .I1(shift_reg_ld),
        .I2(rdy_new_xmt_i_i_2_n_0),
        .I3(detect_start_i_2_n_0),
        .I4(Q[1]),
        .I5(Rdy_new_xmt),
        .O(rdy_new_xmt_i_i_1_n_0));
  LUT3 #(
    .INIT(8'h04)) 
    rdy_new_xmt_i_i_2
       (.I0(state__0[0]),
        .I1(state__0[1]),
        .I2(state__0[2]),
        .O(rdy_new_xmt_i_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rdy_new_xmt_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rdy_new_xmt_i_i_1_n_0),
        .Q(Rdy_new_xmt),
        .R(\q_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    ro_prev_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Ro_prev),
        .Q(ro_prev_d1),
        .R(\q_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    rsta_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(rsta_d1),
        .R(\q_int_reg[0]_1 ));
  LUT5 #(
    .INIT(32'hF0FF2020)) 
    rsta_tx_under_prev_i_1
       (.I0(Q[3]),
        .I1(rsta_d1),
        .I2(sr_i),
        .I3(dtre_d1),
        .I4(rsta_tx_under_prev),
        .O(rsta_tx_under_prev_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    rsta_tx_under_prev_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rsta_tx_under_prev_i_1_n_0),
        .Q(rsta_tx_under_prev),
        .R(\q_int_reg[0]_1 ));
  LUT5 #(
    .INIT(32'h0000FFFE)) 
    scl_cout_reg_i_1
       (.I0(scl_cout_reg_i_2_n_0),
        .I1(\FSM_onehot_scl_state_reg_n_0_[7] ),
        .I2(\FSM_onehot_scl_state_reg_n_0_[8] ),
        .I3(\FSM_onehot_scl_state_reg[6]_0 [3]),
        .I4(Ro_prev),
        .O(scl_cout_reg0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    scl_cout_reg_i_2
       (.I0(\FSM_onehot_scl_state_reg_n_0_[1] ),
        .I1(\FSM_onehot_scl_state_reg[6]_0 [0]),
        .I2(\FSM_onehot_scl_state_reg_n_0_[0] ),
        .I3(\FSM_onehot_scl_state_reg_n_0_[9] ),
        .I4(detect_stop_b),
        .O(scl_cout_reg_i_2_n_0));
  FDSE #(
    .INIT(1'b1)) 
    scl_cout_reg_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(scl_cout_reg0),
        .Q(scl_cout_reg),
        .S(\q_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    scl_f_edg_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(scl_falling_edge),
        .Q(scl_f_edg_d1),
        .R(\q_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    scl_f_edg_d2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(scl_f_edg_d1),
        .Q(scl_f_edg_d2),
        .R(\q_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    scl_f_edg_d3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(scl_f_edg_d2),
        .Q(scl_f_edg_d3),
        .R(\q_int_reg[0]_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    scl_falling_edge_i_1
       (.I0(scl_rin_d1),
        .I1(scl_rin_d1_reg_0),
        .O(scl_falling_edge0));
  FDRE #(
    .INIT(1'b0)) 
    scl_falling_edge_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(scl_falling_edge0),
        .Q(scl_falling_edge),
        .R(\q_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    scl_rin_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(scl_rin_d1_reg_0),
        .Q(scl_rin_d1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    scl_rising_edge_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(scl_rising_edge0),
        .Q(scl_rising_edge),
        .R(\q_int_reg[0]_1 ));
  LUT4 #(
    .INIT(16'h0004)) 
    scl_t_INST_0
       (.I0(rsta_tx_under_prev),
        .I1(scl_cout_reg),
        .I2(Ro_prev),
        .I3(sda_setup),
        .O(scl_t));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    sda_cout_reg_i_1
       (.I0(sda_cout_reg_i_2_n_0),
        .I1(\FSM_onehot_scl_state_reg_n_0_[7] ),
        .I2(\timing_param_tsusto_i_reg[10] ),
        .I3(\FSM_onehot_scl_state_reg_n_0_[0] ),
        .I4(sda_cout),
        .I5(sda_cout_reg),
        .O(sda_cout_reg_i_1_n_0));
  LUT5 #(
    .INIT(32'hA8A8A800)) 
    sda_cout_reg_i_2
       (.I0(stop_scl_reg_i_2_n_0),
        .I1(\LEVEL_1_GEN.master_sda_reg_n_0 ),
        .I2(Q[3]),
        .I3(\FSM_onehot_scl_state_reg[6]_0 [2]),
        .I4(\FSM_onehot_scl_state_reg[6]_0 [3]),
        .O(sda_cout_reg_i_2_n_0));
  FDSE #(
    .INIT(1'b1)) 
    sda_cout_reg_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(sda_cout_reg_i_1_n_0),
        .Q(sda_cout_reg),
        .S(\q_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    sda_rin_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(scndry_out),
        .Q(sda_rin_d1),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    sda_sample_i_1
       (.I0(scndry_out),
        .I1(scl_rising_edge),
        .I2(sda_sample),
        .O(sda_sample_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sda_sample_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(sda_sample_i_1_n_0),
        .Q(sda_sample),
        .R(\q_int_reg[0]_1 ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \sda_setup0_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\sda_setup0_inferred__0/i__carry_n_0 ,\NLW_sda_setup0_inferred__0/i__carry_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_sda_setup0_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S(sda_setup_reg_0));
  LUT5 #(
    .INIT(32'h55FD00FC)) 
    sda_setup_i_1
       (.I0(\sda_setup0_inferred__0/i__carry_n_0 ),
        .I1(Tx_under_prev),
        .I2(SETUP_CNT_n_0),
        .I3(scl_rin_d1_reg_0),
        .I4(sda_setup),
        .O(sda_setup_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sda_setup_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(sda_setup_i_1_n_0),
        .Q(sda_setup),
        .R(\q_int_reg[0]_1 ));
  LUT5 #(
    .INIT(32'h0000EFE0)) 
    sda_t_INST_0
       (.I0(arb_lost),
        .I1(sda_cout_reg),
        .I2(master_slave),
        .I3(slave_sda_reg_n_0),
        .I4(stop_scl_reg),
        .O(sda_t));
  LUT6 #(
    .INIT(64'hFFFFFFFF00800000)) 
    shift_reg_en_i_1
       (.I0(master_slave),
        .I1(scl_rising_edge),
        .I2(state__0[0]),
        .I3(state__0[1]),
        .I4(state__0[2]),
        .I5(shift_reg_en_i_2_n_0),
        .O(shift_reg_en0));
  LUT6 #(
    .INIT(64'h0000045000000400)) 
    shift_reg_en_i_2
       (.I0(detect_start),
        .I1(scl_rising_edge),
        .I2(state__0[1]),
        .I3(state__0[2]),
        .I4(state__0[0]),
        .I5(scl_f_edg_d2),
        .O(shift_reg_en_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    shift_reg_en_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(shift_reg_en0),
        .Q(shift_reg_en),
        .R(\q_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    shift_reg_ld_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(shift_reg_ld),
        .Q(shift_reg_ld_d1),
        .R(\q_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    shift_reg_ld_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(shift_reg_ld0),
        .Q(shift_reg_ld),
        .R(\q_int_reg[0]_1 ));
  FDSE #(
    .INIT(1'b1)) 
    slave_sda_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(I2CDATA_REG_n_0),
        .Q(slave_sda_reg_n_0),
        .S(\q_int_reg[0]_1 ));
  LUT6 #(
    .INIT(64'h00000000BA8A0000)) 
    sm_stop_i_1
       (.I0(sm_stop_reg_n_0),
        .I1(sm_stop_i_2_n_0),
        .I2(sm_stop_i_3_n_0),
        .I3(master_slave),
        .I4(Q[0]),
        .I5(detect_stop_reg_n_0),
        .O(sm_stop_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFF45FFFFFFFFFF)) 
    sm_stop_i_2
       (.I0(scl_f_edg_d2),
        .I1(Ro_prev),
        .I2(ro_prev_d1),
        .I3(sda_sample),
        .I4(arb_lost),
        .I5(master_slave),
        .O(sm_stop_i_2_n_0));
  LUT3 #(
    .INIT(8'h18)) 
    sm_stop_i_3
       (.I0(state__0[1]),
        .I1(state__0[2]),
        .I2(state__0[0]),
        .O(sm_stop_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_stop_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(sm_stop_i_1_n_0),
        .Q(sm_stop_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    srw_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(I2CHEADER_REG_n_10),
        .Q(srw_i_reg_0),
        .R(\q_int_reg[0]_1 ));
  LUT6 #(
    .INIT(64'h0E0E0EFF0E0E0E00)) 
    stop_scl_reg_i_1
       (.I0(\FSM_onehot_scl_state_reg[6]_0 [3]),
        .I1(\FSM_onehot_scl_state_reg[6]_0 [2]),
        .I2(stop_scl_reg_i_2_n_0),
        .I3(sda_cout),
        .I4(stop_scl_reg_i_4_n_0),
        .I5(stop_scl_reg),
        .O(stop_scl_reg_i_1_n_0));
  LUT5 #(
    .INIT(32'h1FF111F1)) 
    stop_scl_reg_i_2
       (.I0(gen_stop),
        .I1(sm_stop_reg_n_0),
        .I2(state__0[0]),
        .I3(state__0[2]),
        .I4(state__0[1]),
        .O(stop_scl_reg_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF04000000)) 
    stop_scl_reg_i_3
       (.I0(arb_lost),
        .I1(stop_scl_reg),
        .I2(Q[3]),
        .I3(\FSM_onehot_scl_state_reg_n_0_[7] ),
        .I4(\timing_param_tsusto_i_reg[10] ),
        .I5(stop_scl_reg_i_5_n_0),
        .O(sda_cout));
  LUT3 #(
    .INIT(8'hFE)) 
    stop_scl_reg_i_4
       (.I0(\FSM_onehot_scl_state_reg_n_0_[1] ),
        .I1(\FSM_onehot_scl_state_reg[6]_0 [1]),
        .I2(\FSM_onehot_scl_state_reg_n_0_[9] ),
        .O(stop_scl_reg_i_4_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    stop_scl_reg_i_5
       (.I0(\FSM_onehot_scl_state_reg[6]_0 [2]),
        .I1(\FSM_onehot_scl_state_reg_n_0_[0] ),
        .I2(\FSM_onehot_scl_state_reg[6]_0 [3]),
        .I3(detect_stop_b),
        .O(stop_scl_reg_i_5_n_0));
  FDRE #(
    .INIT(1'b0)) 
    stop_scl_reg_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(stop_scl_reg_i_1_n_0),
        .Q(stop_scl_reg),
        .R(\q_int_reg[0]_1 ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 stop_start_wait1_carry
       (.CI(1'b0),
        .CO({stop_start_wait1,NLW_stop_start_wait1_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_stop_start_wait1_carry_O_UNCONNECTED[3:0]),
        .S({\FSM_onehot_scl_state_reg[1]_0 ,CLKCNT_n_16,CLKCNT_n_17,CLKCNT_n_18}));
  FDRE #(
    .INIT(1'b0)) 
    tx_under_prev_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Tx_under_prev),
        .Q(tx_under_prev_d1),
        .R(\q_int_reg[0]_1 ));
  LUT5 #(
    .INIT(32'hEEEAAAAA)) 
    tx_under_prev_i_i_1
       (.I0(tx_under_prev_i0),
        .I1(sr_i),
        .I2(state__0[0]),
        .I3(state__0[1]),
        .I4(Tx_under_prev),
        .O(tx_under_prev_i_i_1_n_0));
  LUT6 #(
    .INIT(64'h0800000000000800)) 
    tx_under_prev_i_i_2
       (.I0(sm_stop_i_3_n_0),
        .I1(scl_falling_edge),
        .I2(gen_stop),
        .I3(sr_i),
        .I4(Aas),
        .I5(srw_i_reg_0),
        .O(tx_under_prev_i0));
  FDRE #(
    .INIT(1'b0)) 
    tx_under_prev_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(tx_under_prev_i_i_1_n_0),
        .Q(Tx_under_prev),
        .R(\q_int_reg[0]_1 ));
  LUT6 #(
    .INIT(64'hF5C500C000000000)) 
    txer_edge_i_1
       (.I0(scl_f_edg_d2),
        .I1(sda_sample),
        .I2(scl_falling_edge),
        .I3(txer_edge_i_2_n_0),
        .I4(D[2]),
        .I5(Q[0]),
        .O(txer_edge_i_1_n_0));
  LUT3 #(
    .INIT(8'hC7)) 
    txer_edge_i_2
       (.I0(state__0[1]),
        .I1(state__0[2]),
        .I2(state__0[0]),
        .O(txer_edge_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txer_edge_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(txer_edge_i_1_n_0),
        .Q(D[2]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFBBFFFBF08800080)) 
    txer_i_i_1
       (.I0(sda_sample),
        .I1(scl_falling_edge),
        .I2(state__0[0]),
        .I3(state__0[2]),
        .I4(state__0[1]),
        .I5(txer_i_reg_n_0),
        .O(txer_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txer_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(txer_i_i_1_n_0),
        .Q(txer_i_reg_n_0),
        .R(\q_int_reg[0]_1 ));
endmodule

(* ORIG_REF_NAME = "interrupt_control" *) 
module system_axi_iic_0_0__interrupt_control
   (\GEN_IP_IRPT_STATUS_REG[0].GEN_REG_STATUS.ip_irpt_status_reg_reg[0]_0 ,
    p_1_in16_in,
    p_1_in13_in,
    p_1_in10_in,
    p_1_in7_in,
    p_1_in4_in,
    p_1_in1_in,
    p_1_in,
    p_0_in,
    iic2intc_irpt,
    Q,
    SR,
    irpt_wrack,
    s_axi_aclk,
    ipif_glbl_irpt_enable_reg_reg_0,
    Bus_RNW_reg,
    p_26_in,
    IIC2Bus_IntrEvent,
    s_axi_wdata,
    E);
  output \GEN_IP_IRPT_STATUS_REG[0].GEN_REG_STATUS.ip_irpt_status_reg_reg[0]_0 ;
  output p_1_in16_in;
  output p_1_in13_in;
  output p_1_in10_in;
  output p_1_in7_in;
  output p_1_in4_in;
  output p_1_in1_in;
  output p_1_in;
  output [0:0]p_0_in;
  output iic2intc_irpt;
  output [7:0]Q;
  input [0:0]SR;
  input irpt_wrack;
  input s_axi_aclk;
  input ipif_glbl_irpt_enable_reg_reg_0;
  input Bus_RNW_reg;
  input p_26_in;
  input [0:7]IIC2Bus_IntrEvent;
  input [7:0]s_axi_wdata;
  input [0:0]E;

  wire Bus_RNW_reg;
  wire [0:0]E;
  wire \GEN_IP_IRPT_STATUS_REG[0].GEN_REG_STATUS.ip_irpt_status_reg[0]_i_1_n_0 ;
  wire \GEN_IP_IRPT_STATUS_REG[0].GEN_REG_STATUS.ip_irpt_status_reg_reg[0]_0 ;
  wire \GEN_IP_IRPT_STATUS_REG[1].GEN_REG_STATUS.ip_irpt_status_reg[1]_i_1_n_0 ;
  wire \GEN_IP_IRPT_STATUS_REG[2].GEN_REG_STATUS.ip_irpt_status_reg[2]_i_1_n_0 ;
  wire \GEN_IP_IRPT_STATUS_REG[3].GEN_REG_STATUS.ip_irpt_status_reg[3]_i_1_n_0 ;
  wire \GEN_IP_IRPT_STATUS_REG[4].GEN_REG_STATUS.ip_irpt_status_reg[4]_i_1_n_0 ;
  wire \GEN_IP_IRPT_STATUS_REG[5].GEN_REG_STATUS.ip_irpt_status_reg[5]_i_1_n_0 ;
  wire \GEN_IP_IRPT_STATUS_REG[6].GEN_REG_STATUS.ip_irpt_status_reg[6]_i_1_n_0 ;
  wire \GEN_IP_IRPT_STATUS_REG[7].GEN_REG_STATUS.ip_irpt_status_reg[7]_i_1_n_0 ;
  wire [0:7]IIC2Bus_IntrEvent;
  wire [7:0]Q;
  wire [0:0]SR;
  wire ipif_glbl_irpt_enable_reg_reg_0;
  wire irpt_wrack;
  wire irpt_wrack_d1;
  wire [0:0]p_0_in;
  wire p_1_in;
  wire p_1_in10_in;
  wire p_1_in13_in;
  wire p_1_in16_in;
  wire p_1_in1_in;
  wire p_1_in4_in;
  wire p_1_in7_in;
  wire p_26_in;
  wire s_axi_aclk;
  wire [7:0]s_axi_wdata;

  LUT6 #(
    .INIT(64'hFFEFFFFFFF10FF00)) 
    \GEN_IP_IRPT_STATUS_REG[0].GEN_REG_STATUS.ip_irpt_status_reg[0]_i_1 
       (.I0(irpt_wrack_d1),
        .I1(Bus_RNW_reg),
        .I2(p_26_in),
        .I3(IIC2Bus_IntrEvent[0]),
        .I4(s_axi_wdata[0]),
        .I5(\GEN_IP_IRPT_STATUS_REG[0].GEN_REG_STATUS.ip_irpt_status_reg_reg[0]_0 ),
        .O(\GEN_IP_IRPT_STATUS_REG[0].GEN_REG_STATUS.ip_irpt_status_reg[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_IP_IRPT_STATUS_REG[0].GEN_REG_STATUS.ip_irpt_status_reg_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\GEN_IP_IRPT_STATUS_REG[0].GEN_REG_STATUS.ip_irpt_status_reg[0]_i_1_n_0 ),
        .Q(\GEN_IP_IRPT_STATUS_REG[0].GEN_REG_STATUS.ip_irpt_status_reg_reg[0]_0 ),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFEFFFFFFF10FF00)) 
    \GEN_IP_IRPT_STATUS_REG[1].GEN_REG_STATUS.ip_irpt_status_reg[1]_i_1 
       (.I0(irpt_wrack_d1),
        .I1(Bus_RNW_reg),
        .I2(p_26_in),
        .I3(IIC2Bus_IntrEvent[1]),
        .I4(s_axi_wdata[1]),
        .I5(p_1_in16_in),
        .O(\GEN_IP_IRPT_STATUS_REG[1].GEN_REG_STATUS.ip_irpt_status_reg[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_IP_IRPT_STATUS_REG[1].GEN_REG_STATUS.ip_irpt_status_reg_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\GEN_IP_IRPT_STATUS_REG[1].GEN_REG_STATUS.ip_irpt_status_reg[1]_i_1_n_0 ),
        .Q(p_1_in16_in),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFEFFFFFFF10FF00)) 
    \GEN_IP_IRPT_STATUS_REG[2].GEN_REG_STATUS.ip_irpt_status_reg[2]_i_1 
       (.I0(irpt_wrack_d1),
        .I1(Bus_RNW_reg),
        .I2(p_26_in),
        .I3(IIC2Bus_IntrEvent[2]),
        .I4(s_axi_wdata[2]),
        .I5(p_1_in13_in),
        .O(\GEN_IP_IRPT_STATUS_REG[2].GEN_REG_STATUS.ip_irpt_status_reg[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_IP_IRPT_STATUS_REG[2].GEN_REG_STATUS.ip_irpt_status_reg_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\GEN_IP_IRPT_STATUS_REG[2].GEN_REG_STATUS.ip_irpt_status_reg[2]_i_1_n_0 ),
        .Q(p_1_in13_in),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFEFFFFFFF10FF00)) 
    \GEN_IP_IRPT_STATUS_REG[3].GEN_REG_STATUS.ip_irpt_status_reg[3]_i_1 
       (.I0(irpt_wrack_d1),
        .I1(Bus_RNW_reg),
        .I2(p_26_in),
        .I3(IIC2Bus_IntrEvent[3]),
        .I4(s_axi_wdata[3]),
        .I5(p_1_in10_in),
        .O(\GEN_IP_IRPT_STATUS_REG[3].GEN_REG_STATUS.ip_irpt_status_reg[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_IP_IRPT_STATUS_REG[3].GEN_REG_STATUS.ip_irpt_status_reg_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\GEN_IP_IRPT_STATUS_REG[3].GEN_REG_STATUS.ip_irpt_status_reg[3]_i_1_n_0 ),
        .Q(p_1_in10_in),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFEFFFFFFF10FF00)) 
    \GEN_IP_IRPT_STATUS_REG[4].GEN_REG_STATUS.ip_irpt_status_reg[4]_i_1 
       (.I0(irpt_wrack_d1),
        .I1(Bus_RNW_reg),
        .I2(p_26_in),
        .I3(IIC2Bus_IntrEvent[4]),
        .I4(s_axi_wdata[4]),
        .I5(p_1_in7_in),
        .O(\GEN_IP_IRPT_STATUS_REG[4].GEN_REG_STATUS.ip_irpt_status_reg[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_IP_IRPT_STATUS_REG[4].GEN_REG_STATUS.ip_irpt_status_reg_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\GEN_IP_IRPT_STATUS_REG[4].GEN_REG_STATUS.ip_irpt_status_reg[4]_i_1_n_0 ),
        .Q(p_1_in7_in),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFEFFFFFFF10FF00)) 
    \GEN_IP_IRPT_STATUS_REG[5].GEN_REG_STATUS.ip_irpt_status_reg[5]_i_1 
       (.I0(irpt_wrack_d1),
        .I1(Bus_RNW_reg),
        .I2(p_26_in),
        .I3(IIC2Bus_IntrEvent[5]),
        .I4(s_axi_wdata[5]),
        .I5(p_1_in4_in),
        .O(\GEN_IP_IRPT_STATUS_REG[5].GEN_REG_STATUS.ip_irpt_status_reg[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_IP_IRPT_STATUS_REG[5].GEN_REG_STATUS.ip_irpt_status_reg_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\GEN_IP_IRPT_STATUS_REG[5].GEN_REG_STATUS.ip_irpt_status_reg[5]_i_1_n_0 ),
        .Q(p_1_in4_in),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFEFFFFFFF10FF00)) 
    \GEN_IP_IRPT_STATUS_REG[6].GEN_REG_STATUS.ip_irpt_status_reg[6]_i_1 
       (.I0(irpt_wrack_d1),
        .I1(Bus_RNW_reg),
        .I2(p_26_in),
        .I3(IIC2Bus_IntrEvent[6]),
        .I4(s_axi_wdata[6]),
        .I5(p_1_in1_in),
        .O(\GEN_IP_IRPT_STATUS_REG[6].GEN_REG_STATUS.ip_irpt_status_reg[6]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_IP_IRPT_STATUS_REG[6].GEN_REG_STATUS.ip_irpt_status_reg_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\GEN_IP_IRPT_STATUS_REG[6].GEN_REG_STATUS.ip_irpt_status_reg[6]_i_1_n_0 ),
        .Q(p_1_in1_in),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFEFFFFFFF10FF00)) 
    \GEN_IP_IRPT_STATUS_REG[7].GEN_REG_STATUS.ip_irpt_status_reg[7]_i_1 
       (.I0(irpt_wrack_d1),
        .I1(Bus_RNW_reg),
        .I2(p_26_in),
        .I3(IIC2Bus_IntrEvent[7]),
        .I4(s_axi_wdata[7]),
        .I5(p_1_in),
        .O(\GEN_IP_IRPT_STATUS_REG[7].GEN_REG_STATUS.ip_irpt_status_reg[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_IP_IRPT_STATUS_REG[7].GEN_REG_STATUS.ip_irpt_status_reg_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\GEN_IP_IRPT_STATUS_REG[7].GEN_REG_STATUS.ip_irpt_status_reg[7]_i_1_n_0 ),
        .Q(p_1_in),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \ip_irpt_enable_reg_reg[0] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \ip_irpt_enable_reg_reg[1] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \ip_irpt_enable_reg_reg[2] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[2]),
        .Q(Q[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \ip_irpt_enable_reg_reg[3] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[3]),
        .Q(Q[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \ip_irpt_enable_reg_reg[4] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[4]),
        .Q(Q[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \ip_irpt_enable_reg_reg[5] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[5]),
        .Q(Q[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \ip_irpt_enable_reg_reg[6] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[6]),
        .Q(Q[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \ip_irpt_enable_reg_reg[7] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[7]),
        .Q(Q[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    ipif_glbl_irpt_enable_reg_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(ipif_glbl_irpt_enable_reg_reg_0),
        .Q(p_0_in),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    irpt_wrack_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(irpt_wrack),
        .Q(irpt_wrack_d1),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "reg_interface" *) 
module system_axi_iic_0_0__reg_interface
   (IIC2Bus_IntrEvent,
    Q,
    Tx_fifo_wr,
    Tx_fifo_rd,
    Tx_fifo_rst,
    new_rcv_dta_d1,
    Rc_fifo_wr,
    Rc_fifo_rd,
    \sr_i_reg[0]_0 ,
    gpo,
    Msms_set,
    D,
    \timing_param_tbuf_i_reg[10]_0 ,
    \timing_param_tbuf_i_reg[10]_1 ,
    D_0,
    Tx_fifo_wr_d_reg,
    \cr_i_reg[7]_0 ,
    \cr_i_reg[3]_0 ,
    \adr_i_reg[5]_0 ,
    \adr_i_reg[0]_0 ,
    stop_scl_reg_reg,
    \cr_i_reg[2]_0 ,
    S,
    \timing_param_thigh_i_reg[7]_0 ,
    \timing_param_tsusto_i_reg[10]_0 ,
    \timing_param_tsusto_i_reg[7]_0 ,
    \timing_param_tsusta_i_reg[10]_0 ,
    \timing_param_tsusta_i_reg[7]_0 ,
    \timing_param_tbuf_i_reg[7]_0 ,
    \timing_param_tbuf_i_reg[9]_0 ,
    \timing_param_thddat_i_reg[10]_0 ,
    \timing_param_thdsta_i_reg[10]_0 ,
    \timing_param_thdsta_i_reg[7]_0 ,
    \timing_param_tlow_i_reg[10]_0 ,
    \timing_param_tlow_i_reg[7]_0 ,
    \timing_param_tsudat_i_reg[10]_0 ,
    \timing_param_tsudat_i_reg[3]_0 ,
    p_3_in,
    firstDynStartSeen_reg,
    \FIFO_GEN_DTR.Tx_fifo_rd_reg_0 ,
    \GPO_GEN.gpo_i_reg[31]_0 ,
    \RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[6]_0 ,
    \RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[4]_0 ,
    \RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[5]_0 ,
    \RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[4]_1 ,
    \timing_param_tsudat_i_reg[4]_0 ,
    \timing_param_tsudat_i_reg[5]_0 ,
    \timing_param_tsudat_i_reg[6]_0 ,
    \timing_param_tsudat_i_reg[7]_0 ,
    \bus2ip_addr_i_reg[2] ,
    \sr_i_reg[4]_0 ,
    \sr_i_reg[5]_0 ,
    \IIC2Bus_IntrEvent_reg[5]_0 ,
    \FSM_onehot_scl_state_reg[5] ,
    \FIFO_GEN_DTR.Tx_fifo_wr_reg_0 ,
    D_1,
    \RD_FIFO_CNTRL.Rc_fifo_wr_reg_0 ,
    \RD_FIFO_CNTRL.Rc_fifo_rd_reg_0 ,
    Bus2IIC_Reset,
    p_0_in,
    s_axi_aclk,
    Bus2IIC_WrCE,
    Rdy_new_xmt,
    New_rcv_dta,
    Rc_fifo_wr0,
    Bus2IIC_RdCE,
    \sr_i_reg[0]_1 ,
    Aas,
    \GPO_GEN.gpo_i_reg[31]_1 ,
    \RD_FIFO_CNTRL.ro_prev_i_reg_0 ,
    \next_scl_state1_inferred__1/i__carry ,
    Tx_fifo_rd_d,
    rdCntrFrmTxFifo,
    Data_Exists_DFF,
    Data_Exists_DFF_0,
    Tx_fifo_wr_d,
    \LEVEL_1_GEN.master_sda_reg ,
    earlyAckDataState,
    \FSM_sequential_state[2]_i_8 ,
    CO,
    stop_scl_reg,
    \q_int_reg[0] ,
    \q_int_reg[0]_0 ,
    \q_int_reg[0]_1 ,
    \sda_setup0_inferred__0/i__carry ,
    s_axi_wdata,
    firstDynStartSeen,
    \FSM_onehot_scl_state_reg[5]_0 ,
    dynamic_MSMS,
    Tx_data_exists,
    \s_axi_rdata_i[1]_i_6 ,
    \s_axi_rdata_i_reg[8] ,
    \FSM_onehot_scl_state_reg[5]_1 ,
    \FSM_onehot_scl_state_reg[5]_2 ,
    \FSM_onehot_scl_state_reg[5]_3 ,
    Rc_fifo_wr_d,
    Rc_fifo_rd_d,
    Data_Exists_DFF_1,
    Rc_Data_Exists,
    \sr_i_reg[1]_0 ,
    \cr_i_reg[4]_0 ,
    \IIC2Bus_IntrEvent_reg[0]_0 );
  output [0:7]IIC2Bus_IntrEvent;
  output [6:0]Q;
  output Tx_fifo_wr;
  output Tx_fifo_rd;
  output Tx_fifo_rst;
  output new_rcv_dta_d1;
  output Rc_fifo_wr;
  output Rc_fifo_rd;
  output [0:0]\sr_i_reg[0]_0 ;
  output [0:0]gpo;
  output Msms_set;
  output [0:0]D;
  output [1:0]\timing_param_tbuf_i_reg[10]_0 ;
  output [10:0]\timing_param_tbuf_i_reg[10]_1 ;
  output D_0;
  output Tx_fifo_wr_d_reg;
  output \cr_i_reg[7]_0 ;
  output \cr_i_reg[3]_0 ;
  output \adr_i_reg[5]_0 ;
  output [6:0]\adr_i_reg[0]_0 ;
  output stop_scl_reg_reg;
  output \cr_i_reg[2]_0 ;
  output [3:0]S;
  output [7:0]\timing_param_thigh_i_reg[7]_0 ;
  output [3:0]\timing_param_tsusto_i_reg[10]_0 ;
  output [7:0]\timing_param_tsusto_i_reg[7]_0 ;
  output [3:0]\timing_param_tsusta_i_reg[10]_0 ;
  output [7:0]\timing_param_tsusta_i_reg[7]_0 ;
  output [3:0]\timing_param_tbuf_i_reg[7]_0 ;
  output [0:0]\timing_param_tbuf_i_reg[9]_0 ;
  output [3:0]\timing_param_thddat_i_reg[10]_0 ;
  output [3:0]\timing_param_thdsta_i_reg[10]_0 ;
  output [7:0]\timing_param_thdsta_i_reg[7]_0 ;
  output [3:0]\timing_param_tlow_i_reg[10]_0 ;
  output [4:0]\timing_param_tlow_i_reg[7]_0 ;
  output [3:0]\timing_param_tsudat_i_reg[10]_0 ;
  output [3:0]\timing_param_tsudat_i_reg[3]_0 ;
  output p_3_in;
  output firstDynStartSeen_reg;
  output \FIFO_GEN_DTR.Tx_fifo_rd_reg_0 ;
  output \GPO_GEN.gpo_i_reg[31]_0 ;
  output \RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[6]_0 ;
  output [3:0]\RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[4]_0 ;
  output \RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[5]_0 ;
  output \RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[4]_1 ;
  output \timing_param_tsudat_i_reg[4]_0 ;
  output \timing_param_tsudat_i_reg[5]_0 ;
  output \timing_param_tsudat_i_reg[6]_0 ;
  output \timing_param_tsudat_i_reg[7]_0 ;
  output [2:0]\bus2ip_addr_i_reg[2] ;
  output \sr_i_reg[4]_0 ;
  output \sr_i_reg[5]_0 ;
  output \IIC2Bus_IntrEvent_reg[5]_0 ;
  output [0:0]\FSM_onehot_scl_state_reg[5] ;
  output \FIFO_GEN_DTR.Tx_fifo_wr_reg_0 ;
  output D_1;
  output \RD_FIFO_CNTRL.Rc_fifo_wr_reg_0 ;
  output \RD_FIFO_CNTRL.Rc_fifo_rd_reg_0 ;
  input Bus2IIC_Reset;
  input p_0_in;
  input s_axi_aclk;
  input [11:0]Bus2IIC_WrCE;
  input Rdy_new_xmt;
  input New_rcv_dta;
  input Rc_fifo_wr0;
  input [0:0]Bus2IIC_RdCE;
  input \sr_i_reg[0]_1 ;
  input Aas;
  input \GPO_GEN.gpo_i_reg[31]_1 ;
  input \RD_FIFO_CNTRL.ro_prev_i_reg_0 ;
  input [10:0]\next_scl_state1_inferred__1/i__carry ;
  input Tx_fifo_rd_d;
  input rdCntrFrmTxFifo;
  input Data_Exists_DFF;
  input Data_Exists_DFF_0;
  input Tx_fifo_wr_d;
  input \LEVEL_1_GEN.master_sda_reg ;
  input earlyAckDataState;
  input [2:0]\FSM_sequential_state[2]_i_8 ;
  input [0:0]CO;
  input stop_scl_reg;
  input [0:0]\q_int_reg[0] ;
  input [0:0]\q_int_reg[0]_0 ;
  input \q_int_reg[0]_1 ;
  input [10:0]\sda_setup0_inferred__0/i__carry ;
  input [10:0]s_axi_wdata;
  input firstDynStartSeen;
  input [2:0]\FSM_onehot_scl_state_reg[5]_0 ;
  input [0:0]dynamic_MSMS;
  input Tx_data_exists;
  input [4:0]\s_axi_rdata_i[1]_i_6 ;
  input \s_axi_rdata_i_reg[8] ;
  input [0:0]\FSM_onehot_scl_state_reg[5]_1 ;
  input [0:0]\FSM_onehot_scl_state_reg[5]_2 ;
  input \FSM_onehot_scl_state_reg[5]_3 ;
  input Rc_fifo_wr_d;
  input Rc_fifo_rd_d;
  input Data_Exists_DFF_1;
  input Rc_Data_Exists;
  input [5:0]\sr_i_reg[1]_0 ;
  input [1:0]\cr_i_reg[4]_0 ;
  input [4:0]\IIC2Bus_IntrEvent_reg[0]_0 ;

  wire Aas;
  wire [0:0]Bus2IIC_RdCE;
  wire Bus2IIC_Reset;
  wire [11:0]Bus2IIC_WrCE;
  wire [0:0]CO;
  wire [6:6]Cr;
  wire [0:0]D;
  wire D_0;
  wire D_1;
  wire Data_Exists_DFF;
  wire Data_Exists_DFF_0;
  wire Data_Exists_DFF_1;
  wire \FIFO_GEN_DTR.Tx_fifo_rd_reg_0 ;
  wire \FIFO_GEN_DTR.Tx_fifo_wr_reg_0 ;
  wire [0:0]\FSM_onehot_scl_state_reg[5] ;
  wire [2:0]\FSM_onehot_scl_state_reg[5]_0 ;
  wire [0:0]\FSM_onehot_scl_state_reg[5]_1 ;
  wire [0:0]\FSM_onehot_scl_state_reg[5]_2 ;
  wire \FSM_onehot_scl_state_reg[5]_3 ;
  wire [2:0]\FSM_sequential_state[2]_i_8 ;
  wire \GPO_GEN.gpo_i_reg[31]_0 ;
  wire \GPO_GEN.gpo_i_reg[31]_1 ;
  wire [0:7]IIC2Bus_IntrEvent;
  wire [4:0]\IIC2Bus_IntrEvent_reg[0]_0 ;
  wire \IIC2Bus_IntrEvent_reg[5]_0 ;
  wire \LEVEL_1_GEN.master_sda_reg ;
  wire Msms_set;
  wire New_rcv_dta;
  wire [6:0]Q;
  wire \RD_FIFO_CNTRL.Rc_fifo_rd_reg_0 ;
  wire \RD_FIFO_CNTRL.Rc_fifo_wr_reg_0 ;
  wire [3:0]\RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[4]_0 ;
  wire \RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[4]_1 ;
  wire \RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[5]_0 ;
  wire \RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[6]_0 ;
  wire \RD_FIFO_CNTRL.ro_prev_i_reg_0 ;
  wire Rc_Data_Exists;
  wire Rc_fifo_rd;
  wire Rc_fifo_rd_d;
  wire Rc_fifo_wr;
  wire Rc_fifo_wr0;
  wire Rc_fifo_wr_d;
  wire Rdy_new_xmt;
  wire [3:0]S;
  wire [10:0]Timing_param_thddat;
  wire [10:8]Timing_param_thdsta;
  wire [10:8]Timing_param_thigh;
  wire [10:1]Timing_param_tlow;
  wire [10:4]Timing_param_tsudat;
  wire [10:8]Timing_param_tsusta;
  wire [10:8]Timing_param_tsusto;
  wire Tx_data_exists;
  wire Tx_fifo_rd;
  wire Tx_fifo_rd_d;
  wire Tx_fifo_rst;
  wire Tx_fifo_wr;
  wire Tx_fifo_wr_d;
  wire Tx_fifo_wr_d_reg;
  wire [6:0]\adr_i_reg[0]_0 ;
  wire \adr_i_reg[5]_0 ;
  wire [2:0]\bus2ip_addr_i_reg[2] ;
  wire \cr_i[2]_i_1_n_0 ;
  wire \cr_i_reg[2]_0 ;
  wire \cr_i_reg[3]_0 ;
  wire [1:0]\cr_i_reg[4]_0 ;
  wire \cr_i_reg[7]_0 ;
  wire [0:0]dynamic_MSMS;
  wire earlyAckDataState;
  wire firstDynStartSeen;
  wire firstDynStartSeen_reg;
  wire [0:0]gpo;
  wire msms_d1;
  wire msms_set_i_i_1_n_0;
  wire new_rcv_dta_d1;
  wire [10:0]\next_scl_state1_inferred__1/i__carry ;
  wire p_0_in;
  wire p_3_in;
  wire [0:0]\q_int_reg[0] ;
  wire [0:0]\q_int_reg[0]_0 ;
  wire \q_int_reg[0]_1 ;
  wire rdCntrFrmTxFifo;
  wire s_axi_aclk;
  wire \s_axi_rdata_i[10]_i_2_n_0 ;
  wire \s_axi_rdata_i[10]_i_3_n_0 ;
  wire [4:0]\s_axi_rdata_i[1]_i_6 ;
  wire \s_axi_rdata_i[8]_i_2_n_0 ;
  wire \s_axi_rdata_i[8]_i_3_n_0 ;
  wire \s_axi_rdata_i[9]_i_2_n_0 ;
  wire \s_axi_rdata_i[9]_i_3_n_0 ;
  wire \s_axi_rdata_i_reg[8] ;
  wire [10:0]s_axi_wdata;
  wire [10:0]\sda_setup0_inferred__0/i__carry ;
  wire [1:7]sr_i;
  wire [0:0]\sr_i_reg[0]_0 ;
  wire \sr_i_reg[0]_1 ;
  wire [5:0]\sr_i_reg[1]_0 ;
  wire \sr_i_reg[4]_0 ;
  wire \sr_i_reg[5]_0 ;
  wire stop_scl_reg;
  wire stop_scl_reg_reg;
  wire [1:0]\timing_param_tbuf_i_reg[10]_0 ;
  wire [10:0]\timing_param_tbuf_i_reg[10]_1 ;
  wire [3:0]\timing_param_tbuf_i_reg[7]_0 ;
  wire [0:0]\timing_param_tbuf_i_reg[9]_0 ;
  wire [3:0]\timing_param_thddat_i_reg[10]_0 ;
  wire [3:0]\timing_param_thdsta_i_reg[10]_0 ;
  wire [7:0]\timing_param_thdsta_i_reg[7]_0 ;
  wire [7:0]\timing_param_thigh_i_reg[7]_0 ;
  wire [3:0]\timing_param_tlow_i_reg[10]_0 ;
  wire [4:0]\timing_param_tlow_i_reg[7]_0 ;
  wire [3:0]\timing_param_tsudat_i_reg[10]_0 ;
  wire [3:0]\timing_param_tsudat_i_reg[3]_0 ;
  wire \timing_param_tsudat_i_reg[4]_0 ;
  wire \timing_param_tsudat_i_reg[5]_0 ;
  wire \timing_param_tsudat_i_reg[6]_0 ;
  wire \timing_param_tsudat_i_reg[7]_0 ;
  wire [3:0]\timing_param_tsusta_i_reg[10]_0 ;
  wire [7:0]\timing_param_tsusta_i_reg[7]_0 ;
  wire [3:0]\timing_param_tsusto_i_reg[10]_0 ;
  wire [7:0]\timing_param_tsusto_i_reg[7]_0 ;

  LUT2 #(
    .INIT(4'h2)) 
    \Addr_Counters[0].MUXCY_L_I_i_4 
       (.I0(Tx_fifo_wr),
        .I1(Tx_fifo_wr_d),
        .O(\FIFO_GEN_DTR.Tx_fifo_wr_reg_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Addr_Counters[0].MUXCY_L_I_i_4__0 
       (.I0(Rc_fifo_rd),
        .I1(Rc_fifo_rd_d),
        .O(\RD_FIFO_CNTRL.Rc_fifo_rd_reg_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Addr_Counters[0].MUXCY_L_I_i_5 
       (.I0(Rc_fifo_wr),
        .I1(Rc_fifo_wr_d),
        .O(\RD_FIFO_CNTRL.Rc_fifo_wr_reg_0 ));
  LUT6 #(
    .INIT(64'hFFFFAAFB0000AAAA)) 
    Data_Exists_DFF_i_1
       (.I0(Tx_fifo_wr_d_reg),
        .I1(Tx_fifo_rd),
        .I2(Tx_fifo_rd_d),
        .I3(rdCntrFrmTxFifo),
        .I4(Data_Exists_DFF),
        .I5(Data_Exists_DFF_0),
        .O(D_0));
  (* \PinAttr:I0:HOLD_DETOUR  = "285" *) 
  LUT6 #(
    .INIT(64'hFFFFF2FF00002222)) 
    Data_Exists_DFF_i_1__1
       (.I0(Rc_fifo_wr),
        .I1(Rc_fifo_wr_d),
        .I2(Rc_fifo_rd_d),
        .I3(Rc_fifo_rd),
        .I4(Data_Exists_DFF_1),
        .I5(Rc_Data_Exists),
        .O(D_1));
  LUT4 #(
    .INIT(16'hFFF4)) 
    Data_Exists_DFF_i_2
       (.I0(Tx_fifo_wr_d),
        .I1(Tx_fifo_wr),
        .I2(Bus2IIC_Reset),
        .I3(Tx_fifo_rst),
        .O(Tx_fifo_wr_d_reg));
  FDRE #(
    .INIT(1'b0)) 
    \FIFO_GEN_DTR.IIC2Bus_IntrEvent_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_0_in),
        .Q(IIC2Bus_IntrEvent[7]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \FIFO_GEN_DTR.Tx_fifo_rd_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Rdy_new_xmt),
        .Q(Tx_fifo_rd),
        .R(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \FIFO_GEN_DTR.Tx_fifo_rst_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Cr),
        .Q(Tx_fifo_rst),
        .S(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \FIFO_GEN_DTR.Tx_fifo_wr_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Bus2IIC_WrCE[10]),
        .Q(Tx_fifo_wr),
        .R(Bus2IIC_Reset));
  LUT5 #(
    .INIT(32'h44F44444)) 
    \FSM_onehot_scl_state[5]_i_1 
       (.I0(\FSM_onehot_scl_state_reg[5]_1 ),
        .I1(\FSM_onehot_scl_state_reg[5]_0 [2]),
        .I2(\FSM_onehot_scl_state_reg[5]_2 ),
        .I3(\FSM_onehot_scl_state_reg[5]_3 ),
        .I4(\FSM_onehot_scl_state_reg[5]_0 [1]),
        .O(\FSM_onehot_scl_state_reg[5] ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_scl_state[9]_i_1 
       (.I0(Q[0]),
        .O(\cr_i_reg[7]_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \FSM_onehot_scl_state[9]_i_4 
       (.I0(\q_int_reg[0]_0 ),
        .I1(Q[4]),
        .I2(\q_int_reg[0] ),
        .I3(stop_scl_reg),
        .I4(CO),
        .O(\cr_i_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \GPO_GEN.gpo_i_reg[31] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\GPO_GEN.gpo_i_reg[31]_1 ),
        .Q(gpo),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \IIC2Bus_IntrEvent_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IIC2Bus_IntrEvent_reg[0]_0 [4]),
        .Q(IIC2Bus_IntrEvent[0]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \IIC2Bus_IntrEvent_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IIC2Bus_IntrEvent_reg[0]_0 [3]),
        .Q(IIC2Bus_IntrEvent[1]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \IIC2Bus_IntrEvent_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IIC2Bus_IntrEvent_reg[0]_0 [2]),
        .Q(IIC2Bus_IntrEvent[2]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \IIC2Bus_IntrEvent_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(D),
        .Q(IIC2Bus_IntrEvent[3]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \IIC2Bus_IntrEvent_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IIC2Bus_IntrEvent_reg[0]_0 [1]),
        .Q(IIC2Bus_IntrEvent[4]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \IIC2Bus_IntrEvent_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Aas),
        .Q(IIC2Bus_IntrEvent[5]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \IIC2Bus_IntrEvent_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\IIC2Bus_IntrEvent_reg[0]_0 [0]),
        .Q(IIC2Bus_IntrEvent[6]),
        .R(Bus2IIC_Reset));
  LUT3 #(
    .INIT(8'hBA)) 
    \LEVEL_1_GEN.master_sda_i_2 
       (.I0(Q[3]),
        .I1(\LEVEL_1_GEN.master_sda_reg ),
        .I2(earlyAckDataState),
        .O(\cr_i_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \RD_FIFO_CNTRL.Rc_fifo_rd_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Bus2IIC_RdCE),
        .Q(Rc_fifo_rd),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \RD_FIFO_CNTRL.Rc_fifo_wr_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Rc_fifo_wr0),
        .Q(Rc_fifo_wr),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[8]),
        .D(s_axi_wdata[3]),
        .Q(\RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[4]_0 [3]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[8]),
        .D(s_axi_wdata[2]),
        .Q(\RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[4]_0 [2]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[8]),
        .D(s_axi_wdata[1]),
        .Q(\RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[4]_0 [1]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[8]),
        .D(s_axi_wdata[0]),
        .Q(\RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[4]_0 [0]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \RD_FIFO_CNTRL.ro_prev_i_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RD_FIFO_CNTRL.ro_prev_i_reg_0 ),
        .Q(D),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \adr_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[9]),
        .D(s_axi_wdata[7]),
        .Q(\adr_i_reg[0]_0 [6]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \adr_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[9]),
        .D(s_axi_wdata[6]),
        .Q(\adr_i_reg[0]_0 [5]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \adr_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[9]),
        .D(s_axi_wdata[5]),
        .Q(\adr_i_reg[0]_0 [4]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \adr_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[9]),
        .D(s_axi_wdata[4]),
        .Q(\adr_i_reg[0]_0 [3]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \adr_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[9]),
        .D(s_axi_wdata[3]),
        .Q(\adr_i_reg[0]_0 [2]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \adr_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[9]),
        .D(s_axi_wdata[2]),
        .Q(\adr_i_reg[0]_0 [1]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \adr_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[9]),
        .D(s_axi_wdata[1]),
        .Q(\adr_i_reg[0]_0 [0]),
        .R(Bus2IIC_Reset));
  LUT4 #(
    .INIT(16'h4000)) 
    callingReadAccess_i_1
       (.I0(Tx_fifo_rd_d),
        .I1(Tx_fifo_rd),
        .I2(dynamic_MSMS),
        .I3(Tx_data_exists),
        .O(p_3_in));
  LUT4 #(
    .INIT(16'h9009)) 
    clk_cnt_en1_carry_i_1
       (.I0(Timing_param_thigh[10]),
        .I1(\next_scl_state1_inferred__1/i__carry [10]),
        .I2(Timing_param_thigh[9]),
        .I3(\next_scl_state1_inferred__1/i__carry [9]),
        .O(S[3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    clk_cnt_en1_carry_i_2
       (.I0(Timing_param_thigh[8]),
        .I1(\next_scl_state1_inferred__1/i__carry [8]),
        .I2(\next_scl_state1_inferred__1/i__carry [7]),
        .I3(\timing_param_thigh_i_reg[7]_0 [7]),
        .I4(\next_scl_state1_inferred__1/i__carry [6]),
        .I5(\timing_param_thigh_i_reg[7]_0 [6]),
        .O(S[2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    clk_cnt_en1_carry_i_3
       (.I0(\timing_param_thigh_i_reg[7]_0 [5]),
        .I1(\next_scl_state1_inferred__1/i__carry [5]),
        .I2(\next_scl_state1_inferred__1/i__carry [3]),
        .I3(\timing_param_thigh_i_reg[7]_0 [3]),
        .I4(\next_scl_state1_inferred__1/i__carry [4]),
        .I5(\timing_param_thigh_i_reg[7]_0 [4]),
        .O(S[1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    clk_cnt_en1_carry_i_4
       (.I0(\timing_param_thigh_i_reg[7]_0 [2]),
        .I1(\next_scl_state1_inferred__1/i__carry [2]),
        .I2(\next_scl_state1_inferred__1/i__carry [0]),
        .I3(\timing_param_thigh_i_reg[7]_0 [0]),
        .I4(\next_scl_state1_inferred__1/i__carry [1]),
        .I5(\timing_param_thigh_i_reg[7]_0 [1]),
        .O(S[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    clk_cnt_en2_carry_i_1
       (.I0(Timing_param_thddat[10]),
        .I1(\next_scl_state1_inferred__1/i__carry [10]),
        .I2(Timing_param_thddat[9]),
        .I3(\next_scl_state1_inferred__1/i__carry [9]),
        .O(\timing_param_thddat_i_reg[10]_0 [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    clk_cnt_en2_carry_i_2
       (.I0(Timing_param_thddat[8]),
        .I1(\next_scl_state1_inferred__1/i__carry [8]),
        .I2(\next_scl_state1_inferred__1/i__carry [7]),
        .I3(Timing_param_thddat[7]),
        .I4(\next_scl_state1_inferred__1/i__carry [6]),
        .I5(Timing_param_thddat[6]),
        .O(\timing_param_thddat_i_reg[10]_0 [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    clk_cnt_en2_carry_i_3
       (.I0(Timing_param_thddat[5]),
        .I1(\next_scl_state1_inferred__1/i__carry [5]),
        .I2(\next_scl_state1_inferred__1/i__carry [3]),
        .I3(Timing_param_thddat[3]),
        .I4(\next_scl_state1_inferred__1/i__carry [4]),
        .I5(Timing_param_thddat[4]),
        .O(\timing_param_thddat_i_reg[10]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    clk_cnt_en2_carry_i_4
       (.I0(Timing_param_thddat[2]),
        .I1(\next_scl_state1_inferred__1/i__carry [2]),
        .I2(\next_scl_state1_inferred__1/i__carry [0]),
        .I3(Timing_param_thddat[0]),
        .I4(\next_scl_state1_inferred__1/i__carry [1]),
        .I5(Timing_param_thddat[1]),
        .O(\timing_param_thddat_i_reg[10]_0 [0]));
  LUT6 #(
    .INIT(64'h8888BBBBB888B888)) 
    \cr_i[2]_i_1 
       (.I0(s_axi_wdata[5]),
        .I1(Bus2IIC_WrCE[11]),
        .I2(firstDynStartSeen),
        .I3(p_3_in),
        .I4(\FSM_onehot_scl_state_reg[5]_0 [0]),
        .I5(Q[4]),
        .O(\cr_i[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \cr_i[5]_i_4 
       (.I0(Tx_fifo_rd),
        .I1(Tx_fifo_rd_d),
        .O(\FIFO_GEN_DTR.Tx_fifo_rd_reg_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cr_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[11]),
        .D(s_axi_wdata[7]),
        .Q(Q[6]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \cr_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[11]),
        .D(s_axi_wdata[6]),
        .Q(Q[5]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \cr_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\cr_i[2]_i_1_n_0 ),
        .Q(Q[4]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \cr_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[11]),
        .D(s_axi_wdata[4]),
        .Q(Q[3]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \cr_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\cr_i_reg[4]_0 [1]),
        .Q(Q[2]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \cr_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\cr_i_reg[4]_0 [0]),
        .Q(Q[1]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \cr_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[11]),
        .D(s_axi_wdata[1]),
        .Q(Cr),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \cr_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[11]),
        .D(s_axi_wdata[0]),
        .Q(Q[0]),
        .R(Bus2IIC_Reset));
  LUT4 #(
    .INIT(16'h00E0)) 
    firstDynStartSeen_i_1
       (.I0(firstDynStartSeen),
        .I1(p_3_in),
        .I2(Q[1]),
        .I3(Tx_fifo_rst),
        .O(firstDynStartSeen_reg));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__0_i_3
       (.I0(\timing_param_tbuf_i_reg[10]_1 [10]),
        .I1(\next_scl_state1_inferred__1/i__carry [10]),
        .O(\timing_param_tbuf_i_reg[10]_0 [1]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_4
       (.I0(\timing_param_tbuf_i_reg[10]_1 [9]),
        .I1(\next_scl_state1_inferred__1/i__carry [9]),
        .I2(\timing_param_tbuf_i_reg[10]_1 [8]),
        .I3(\next_scl_state1_inferred__1/i__carry [8]),
        .O(\timing_param_tbuf_i_reg[10]_0 [0]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_1
       (.I0(Timing_param_tsusto[10]),
        .I1(\next_scl_state1_inferred__1/i__carry [10]),
        .I2(Timing_param_tsusto[9]),
        .I3(\next_scl_state1_inferred__1/i__carry [9]),
        .O(\timing_param_tsusto_i_reg[10]_0 [3]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_1__0
       (.I0(Timing_param_tsusta[10]),
        .I1(\next_scl_state1_inferred__1/i__carry [10]),
        .I2(Timing_param_tsusta[9]),
        .I3(\next_scl_state1_inferred__1/i__carry [9]),
        .O(\timing_param_tsusta_i_reg[10]_0 [3]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_1__2
       (.I0(Timing_param_thdsta[10]),
        .I1(\next_scl_state1_inferred__1/i__carry [10]),
        .I2(Timing_param_thdsta[9]),
        .I3(\next_scl_state1_inferred__1/i__carry [9]),
        .O(\timing_param_thdsta_i_reg[10]_0 [3]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_1__3
       (.I0(Timing_param_tlow[10]),
        .I1(\next_scl_state1_inferred__1/i__carry [10]),
        .I2(Timing_param_tlow[9]),
        .I3(\next_scl_state1_inferred__1/i__carry [9]),
        .O(\timing_param_tlow_i_reg[10]_0 [3]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_1__4
       (.I0(Timing_param_tsudat[10]),
        .I1(\sda_setup0_inferred__0/i__carry [10]),
        .I2(Timing_param_tsudat[9]),
        .I3(\sda_setup0_inferred__0/i__carry [9]),
        .O(\timing_param_tsudat_i_reg[10]_0 [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2
       (.I0(Timing_param_tsusto[8]),
        .I1(\next_scl_state1_inferred__1/i__carry [8]),
        .I2(\next_scl_state1_inferred__1/i__carry [6]),
        .I3(\timing_param_tsusto_i_reg[7]_0 [6]),
        .I4(\next_scl_state1_inferred__1/i__carry [7]),
        .I5(\timing_param_tsusto_i_reg[7]_0 [7]),
        .O(\timing_param_tsusto_i_reg[10]_0 [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2__0
       (.I0(\timing_param_tsusta_i_reg[7]_0 [7]),
        .I1(\next_scl_state1_inferred__1/i__carry [7]),
        .I2(\next_scl_state1_inferred__1/i__carry [8]),
        .I3(Timing_param_tsusta[8]),
        .I4(\next_scl_state1_inferred__1/i__carry [6]),
        .I5(\timing_param_tsusta_i_reg[7]_0 [6]),
        .O(\timing_param_tsusta_i_reg[10]_0 [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2__2
       (.I0(\timing_param_thdsta_i_reg[7]_0 [7]),
        .I1(\next_scl_state1_inferred__1/i__carry [7]),
        .I2(\next_scl_state1_inferred__1/i__carry [8]),
        .I3(Timing_param_thdsta[8]),
        .I4(\next_scl_state1_inferred__1/i__carry [6]),
        .I5(\timing_param_thdsta_i_reg[7]_0 [6]),
        .O(\timing_param_thdsta_i_reg[10]_0 [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2__3
       (.I0(Timing_param_tlow[8]),
        .I1(\next_scl_state1_inferred__1/i__carry [8]),
        .I2(\next_scl_state1_inferred__1/i__carry [6]),
        .I3(\timing_param_tlow_i_reg[7]_0 [3]),
        .I4(\next_scl_state1_inferred__1/i__carry [7]),
        .I5(\timing_param_tlow_i_reg[7]_0 [4]),
        .O(\timing_param_tlow_i_reg[10]_0 [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2__4
       (.I0(Timing_param_tsudat[7]),
        .I1(\sda_setup0_inferred__0/i__carry [7]),
        .I2(\sda_setup0_inferred__0/i__carry [8]),
        .I3(Timing_param_tsudat[8]),
        .I4(\sda_setup0_inferred__0/i__carry [6]),
        .I5(Timing_param_tsudat[6]),
        .O(\timing_param_tsudat_i_reg[10]_0 [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3
       (.I0(\timing_param_tsusto_i_reg[7]_0 [5]),
        .I1(\next_scl_state1_inferred__1/i__carry [5]),
        .I2(\next_scl_state1_inferred__1/i__carry [3]),
        .I3(\timing_param_tsusto_i_reg[7]_0 [3]),
        .I4(\next_scl_state1_inferred__1/i__carry [4]),
        .I5(\timing_param_tsusto_i_reg[7]_0 [4]),
        .O(\timing_param_tsusto_i_reg[10]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3__0
       (.I0(\timing_param_tsusta_i_reg[7]_0 [4]),
        .I1(\next_scl_state1_inferred__1/i__carry [4]),
        .I2(\next_scl_state1_inferred__1/i__carry [5]),
        .I3(\timing_param_tsusta_i_reg[7]_0 [5]),
        .I4(\next_scl_state1_inferred__1/i__carry [3]),
        .I5(\timing_param_tsusta_i_reg[7]_0 [3]),
        .O(\timing_param_tsusta_i_reg[10]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3__2
       (.I0(\timing_param_thdsta_i_reg[7]_0 [4]),
        .I1(\next_scl_state1_inferred__1/i__carry [4]),
        .I2(\next_scl_state1_inferred__1/i__carry [5]),
        .I3(\timing_param_thdsta_i_reg[7]_0 [5]),
        .I4(\next_scl_state1_inferred__1/i__carry [3]),
        .I5(\timing_param_thdsta_i_reg[7]_0 [3]),
        .O(\timing_param_thdsta_i_reg[10]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3__3
       (.I0(\timing_param_tlow_i_reg[7]_0 [1]),
        .I1(\next_scl_state1_inferred__1/i__carry [4]),
        .I2(\next_scl_state1_inferred__1/i__carry [5]),
        .I3(\timing_param_tlow_i_reg[7]_0 [2]),
        .I4(\next_scl_state1_inferred__1/i__carry [3]),
        .I5(Timing_param_tlow[3]),
        .O(\timing_param_tlow_i_reg[10]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3__4
       (.I0(Timing_param_tsudat[5]),
        .I1(\sda_setup0_inferred__0/i__carry [5]),
        .I2(\sda_setup0_inferred__0/i__carry [3]),
        .I3(\timing_param_tsudat_i_reg[3]_0 [3]),
        .I4(\sda_setup0_inferred__0/i__carry [4]),
        .I5(Timing_param_tsudat[4]),
        .O(\timing_param_tsudat_i_reg[10]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_4
       (.I0(\timing_param_tsusto_i_reg[7]_0 [2]),
        .I1(\next_scl_state1_inferred__1/i__carry [2]),
        .I2(\next_scl_state1_inferred__1/i__carry [1]),
        .I3(\timing_param_tsusto_i_reg[7]_0 [1]),
        .I4(\next_scl_state1_inferred__1/i__carry [0]),
        .I5(\timing_param_tsusto_i_reg[7]_0 [0]),
        .O(\timing_param_tsusto_i_reg[10]_0 [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_4__0
       (.I0(\timing_param_tsusta_i_reg[7]_0 [1]),
        .I1(\next_scl_state1_inferred__1/i__carry [1]),
        .I2(\next_scl_state1_inferred__1/i__carry [2]),
        .I3(\timing_param_tsusta_i_reg[7]_0 [2]),
        .I4(\next_scl_state1_inferred__1/i__carry [0]),
        .I5(\timing_param_tsusta_i_reg[7]_0 [0]),
        .O(\timing_param_tsusta_i_reg[10]_0 [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_4__2
       (.I0(\timing_param_thdsta_i_reg[7]_0 [1]),
        .I1(\next_scl_state1_inferred__1/i__carry [1]),
        .I2(\next_scl_state1_inferred__1/i__carry [2]),
        .I3(\timing_param_thdsta_i_reg[7]_0 [2]),
        .I4(\next_scl_state1_inferred__1/i__carry [0]),
        .I5(\timing_param_thdsta_i_reg[7]_0 [0]),
        .O(\timing_param_thdsta_i_reg[10]_0 [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_4__3
       (.I0(Timing_param_tlow[2]),
        .I1(\next_scl_state1_inferred__1/i__carry [2]),
        .I2(\next_scl_state1_inferred__1/i__carry [1]),
        .I3(Timing_param_tlow[1]),
        .I4(\next_scl_state1_inferred__1/i__carry [0]),
        .I5(\timing_param_tlow_i_reg[7]_0 [0]),
        .O(\timing_param_tlow_i_reg[10]_0 [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_4__4
       (.I0(\timing_param_tsudat_i_reg[3]_0 [2]),
        .I1(\sda_setup0_inferred__0/i__carry [2]),
        .I2(\sda_setup0_inferred__0/i__carry [1]),
        .I3(\timing_param_tsudat_i_reg[3]_0 [1]),
        .I4(\sda_setup0_inferred__0/i__carry [0]),
        .I5(\timing_param_tsudat_i_reg[3]_0 [0]),
        .O(\timing_param_tsudat_i_reg[10]_0 [0]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_5
       (.I0(\timing_param_tbuf_i_reg[10]_1 [7]),
        .I1(\next_scl_state1_inferred__1/i__carry [7]),
        .I2(\timing_param_tbuf_i_reg[10]_1 [6]),
        .I3(\next_scl_state1_inferred__1/i__carry [6]),
        .O(\timing_param_tbuf_i_reg[7]_0 [3]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_6
       (.I0(\timing_param_tbuf_i_reg[10]_1 [5]),
        .I1(\next_scl_state1_inferred__1/i__carry [5]),
        .I2(\timing_param_tbuf_i_reg[10]_1 [4]),
        .I3(\next_scl_state1_inferred__1/i__carry [4]),
        .O(\timing_param_tbuf_i_reg[7]_0 [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_7
       (.I0(\timing_param_tbuf_i_reg[10]_1 [3]),
        .I1(\next_scl_state1_inferred__1/i__carry [3]),
        .I2(\timing_param_tbuf_i_reg[10]_1 [2]),
        .I3(\next_scl_state1_inferred__1/i__carry [2]),
        .O(\timing_param_tbuf_i_reg[7]_0 [1]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_8
       (.I0(\timing_param_tbuf_i_reg[10]_1 [1]),
        .I1(\next_scl_state1_inferred__1/i__carry [1]),
        .I2(\timing_param_tbuf_i_reg[10]_1 [0]),
        .I3(\next_scl_state1_inferred__1/i__carry [0]),
        .O(\timing_param_tbuf_i_reg[7]_0 [0]));
  FDRE #(
    .INIT(1'b0)) 
    msms_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(msms_d1),
        .R(Bus2IIC_Reset));
  LUT5 #(
    .INIT(32'hCE0C0A00)) 
    msms_set_i_i_1
       (.I0(D),
        .I1(\sr_i_reg[1]_0 [1]),
        .I2(Q[1]),
        .I3(msms_d1),
        .I4(Msms_set),
        .O(msms_set_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    msms_set_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(msms_set_i_i_1_n_0),
        .Q(Msms_set),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    new_rcv_dta_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(New_rcv_dta),
        .Q(new_rcv_dta_d1),
        .R(Bus2IIC_Reset));
  LUT6 #(
    .INIT(64'hFFE200E200000000)) 
    \q_int[0]_i_6 
       (.I0(CO),
        .I1(stop_scl_reg),
        .I2(\q_int_reg[0] ),
        .I3(Q[4]),
        .I4(\q_int_reg[0]_0 ),
        .I5(\q_int_reg[0]_1 ),
        .O(stop_scl_reg_reg));
  LUT5 #(
    .INIT(32'hCF44CF77)) 
    \s_axi_rdata_i[0]_i_10 
       (.I0(gpo),
        .I1(\s_axi_rdata_i[1]_i_6 [3]),
        .I2(Timing_param_thddat[0]),
        .I3(\s_axi_rdata_i[1]_i_6 [4]),
        .I4(sr_i[7]),
        .O(\GPO_GEN.gpo_i_reg[31]_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \s_axi_rdata_i[10]_i_1 
       (.I0(\s_axi_rdata_i[10]_i_2_n_0 ),
        .I1(\s_axi_rdata_i[1]_i_6 [0]),
        .I2(\s_axi_rdata_i[10]_i_3_n_0 ),
        .I3(\s_axi_rdata_i_reg[8] ),
        .O(\bus2ip_addr_i_reg[2] [2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \s_axi_rdata_i[10]_i_2 
       (.I0(\timing_param_tbuf_i_reg[10]_1 [10]),
        .I1(Timing_param_tsusta[10]),
        .I2(\s_axi_rdata_i[1]_i_6 [1]),
        .I3(Timing_param_thdsta[10]),
        .I4(\s_axi_rdata_i[1]_i_6 [2]),
        .I5(Timing_param_tlow[10]),
        .O(\s_axi_rdata_i[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \s_axi_rdata_i[10]_i_3 
       (.I0(Timing_param_thigh[10]),
        .I1(Timing_param_tsusto[10]),
        .I2(\s_axi_rdata_i[1]_i_6 [1]),
        .I3(Timing_param_tsudat[10]),
        .I4(\s_axi_rdata_i[1]_i_6 [2]),
        .I5(Timing_param_thddat[10]),
        .O(\s_axi_rdata_i[10]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \s_axi_rdata_i[1]_i_10 
       (.I0(IIC2Bus_IntrEvent[5]),
        .I1(\s_axi_rdata_i[1]_i_6 [4]),
        .I2(Timing_param_thddat[1]),
        .I3(\s_axi_rdata_i[1]_i_6 [3]),
        .O(\IIC2Bus_IntrEvent_reg[5]_0 ));
  LUT5 #(
    .INIT(32'hCF44CF77)) 
    \s_axi_rdata_i[1]_i_9 
       (.I0(\RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[4]_0 [1]),
        .I1(\s_axi_rdata_i[1]_i_6 [3]),
        .I2(Timing_param_tlow[1]),
        .I3(\s_axi_rdata_i[1]_i_6 [4]),
        .I4(Cr),
        .O(\RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[6]_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \s_axi_rdata_i[2]_i_10 
       (.I0(sr_i[5]),
        .I1(\s_axi_rdata_i[1]_i_6 [4]),
        .I2(Timing_param_thddat[2]),
        .I3(\s_axi_rdata_i[1]_i_6 [3]),
        .O(\sr_i_reg[5]_0 ));
  LUT5 #(
    .INIT(32'hCF44CF77)) 
    \s_axi_rdata_i[2]_i_9 
       (.I0(\RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[4]_0 [2]),
        .I1(\s_axi_rdata_i[1]_i_6 [3]),
        .I2(Timing_param_tlow[2]),
        .I3(\s_axi_rdata_i[1]_i_6 [4]),
        .I4(Q[1]),
        .O(\RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[5]_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \s_axi_rdata_i[3]_i_10 
       (.I0(sr_i[4]),
        .I1(\s_axi_rdata_i[1]_i_6 [4]),
        .I2(Timing_param_thddat[3]),
        .I3(\s_axi_rdata_i[1]_i_6 [3]),
        .O(\sr_i_reg[4]_0 ));
  LUT5 #(
    .INIT(32'hCF44CF77)) 
    \s_axi_rdata_i[3]_i_11 
       (.I0(\RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[4]_0 [3]),
        .I1(\s_axi_rdata_i[1]_i_6 [3]),
        .I2(Timing_param_tlow[3]),
        .I3(\s_axi_rdata_i[1]_i_6 [4]),
        .I4(Q[2]),
        .O(\RD_FIFO_CNTRL.rc_fifo_pirq_i_reg[4]_1 ));
  LUT6 #(
    .INIT(64'hFCFC7C7FFFFF7C7F)) 
    \s_axi_rdata_i[4]_i_7 
       (.I0(Timing_param_tsudat[4]),
        .I1(\s_axi_rdata_i[1]_i_6 [2]),
        .I2(\s_axi_rdata_i[1]_i_6 [3]),
        .I3(sr_i[3]),
        .I4(\s_axi_rdata_i[1]_i_6 [4]),
        .I5(Timing_param_thddat[4]),
        .O(\timing_param_tsudat_i_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hFCFC7C7FFFFF7C7F)) 
    \s_axi_rdata_i[5]_i_7 
       (.I0(Timing_param_tsudat[5]),
        .I1(\s_axi_rdata_i[1]_i_6 [2]),
        .I2(\s_axi_rdata_i[1]_i_6 [3]),
        .I3(sr_i[2]),
        .I4(\s_axi_rdata_i[1]_i_6 [4]),
        .I5(Timing_param_thddat[5]),
        .O(\timing_param_tsudat_i_reg[5]_0 ));
  LUT6 #(
    .INIT(64'hFCFC7C7FFFFF7C7F)) 
    \s_axi_rdata_i[6]_i_7 
       (.I0(Timing_param_tsudat[6]),
        .I1(\s_axi_rdata_i[1]_i_6 [2]),
        .I2(\s_axi_rdata_i[1]_i_6 [3]),
        .I3(sr_i[1]),
        .I4(\s_axi_rdata_i[1]_i_6 [4]),
        .I5(Timing_param_thddat[6]),
        .O(\timing_param_tsudat_i_reg[6]_0 ));
  LUT6 #(
    .INIT(64'hFCFC7C7FFFFF7C7F)) 
    \s_axi_rdata_i[7]_i_10 
       (.I0(Timing_param_tsudat[7]),
        .I1(\s_axi_rdata_i[1]_i_6 [2]),
        .I2(\s_axi_rdata_i[1]_i_6 [3]),
        .I3(\sr_i_reg[0]_0 ),
        .I4(\s_axi_rdata_i[1]_i_6 [4]),
        .I5(Timing_param_thddat[7]),
        .O(\timing_param_tsudat_i_reg[7]_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \s_axi_rdata_i[8]_i_1 
       (.I0(\s_axi_rdata_i[8]_i_2_n_0 ),
        .I1(\s_axi_rdata_i[1]_i_6 [0]),
        .I2(\s_axi_rdata_i[8]_i_3_n_0 ),
        .I3(\s_axi_rdata_i_reg[8] ),
        .O(\bus2ip_addr_i_reg[2] [0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \s_axi_rdata_i[8]_i_2 
       (.I0(\timing_param_tbuf_i_reg[10]_1 [8]),
        .I1(Timing_param_tsusta[8]),
        .I2(\s_axi_rdata_i[1]_i_6 [1]),
        .I3(Timing_param_thdsta[8]),
        .I4(\s_axi_rdata_i[1]_i_6 [2]),
        .I5(Timing_param_tlow[8]),
        .O(\s_axi_rdata_i[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \s_axi_rdata_i[8]_i_3 
       (.I0(Timing_param_thigh[8]),
        .I1(Timing_param_tsusto[8]),
        .I2(\s_axi_rdata_i[1]_i_6 [1]),
        .I3(Timing_param_tsudat[8]),
        .I4(\s_axi_rdata_i[1]_i_6 [2]),
        .I5(Timing_param_thddat[8]),
        .O(\s_axi_rdata_i[8]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \s_axi_rdata_i[9]_i_1 
       (.I0(\s_axi_rdata_i[9]_i_2_n_0 ),
        .I1(\s_axi_rdata_i[1]_i_6 [0]),
        .I2(\s_axi_rdata_i[9]_i_3_n_0 ),
        .I3(\s_axi_rdata_i_reg[8] ),
        .O(\bus2ip_addr_i_reg[2] [1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \s_axi_rdata_i[9]_i_2 
       (.I0(\timing_param_tbuf_i_reg[10]_1 [9]),
        .I1(Timing_param_tsusta[9]),
        .I2(\s_axi_rdata_i[1]_i_6 [1]),
        .I3(Timing_param_thdsta[9]),
        .I4(\s_axi_rdata_i[1]_i_6 [2]),
        .I5(Timing_param_tlow[9]),
        .O(\s_axi_rdata_i[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \s_axi_rdata_i[9]_i_3 
       (.I0(Timing_param_thigh[9]),
        .I1(Timing_param_tsusto[9]),
        .I2(\s_axi_rdata_i[1]_i_6 [1]),
        .I3(Timing_param_tsudat[9]),
        .I4(\s_axi_rdata_i[1]_i_6 [2]),
        .I5(Timing_param_thddat[9]),
        .O(\s_axi_rdata_i[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    slave_sda_i_4
       (.I0(\adr_i_reg[0]_0 [1]),
        .I1(\FSM_sequential_state[2]_i_8 [1]),
        .I2(\adr_i_reg[0]_0 [2]),
        .I3(\FSM_sequential_state[2]_i_8 [2]),
        .I4(\FSM_sequential_state[2]_i_8 [0]),
        .I5(\adr_i_reg[0]_0 [0]),
        .O(\adr_i_reg[5]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sr_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\sr_i_reg[0]_1 ),
        .Q(\sr_i_reg[0]_0 ),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \sr_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\sr_i_reg[1]_0 [5]),
        .Q(sr_i[1]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \sr_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\sr_i_reg[1]_0 [4]),
        .Q(sr_i[2]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \sr_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\sr_i_reg[1]_0 [3]),
        .Q(sr_i[3]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \sr_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\sr_i_reg[1]_0 [2]),
        .Q(sr_i[4]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \sr_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\sr_i_reg[1]_0 [1]),
        .Q(sr_i[5]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \sr_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\sr_i_reg[1]_0 [0]),
        .Q(sr_i[7]),
        .R(Bus2IIC_Reset));
  LUT4 #(
    .INIT(16'h9009)) 
    stop_start_wait1_carry_i_1
       (.I0(\timing_param_tbuf_i_reg[10]_1 [9]),
        .I1(\next_scl_state1_inferred__1/i__carry [9]),
        .I2(\timing_param_tbuf_i_reg[10]_1 [10]),
        .I3(\next_scl_state1_inferred__1/i__carry [10]),
        .O(\timing_param_tbuf_i_reg[9]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tbuf_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[3]),
        .D(s_axi_wdata[0]),
        .Q(\timing_param_tbuf_i_reg[10]_1 [0]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tbuf_i_reg[10] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[3]),
        .D(s_axi_wdata[10]),
        .Q(\timing_param_tbuf_i_reg[10]_1 [10]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tbuf_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[3]),
        .D(s_axi_wdata[1]),
        .Q(\timing_param_tbuf_i_reg[10]_1 [1]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tbuf_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[3]),
        .D(s_axi_wdata[2]),
        .Q(\timing_param_tbuf_i_reg[10]_1 [2]),
        .R(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tbuf_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[3]),
        .D(s_axi_wdata[3]),
        .Q(\timing_param_tbuf_i_reg[10]_1 [3]),
        .S(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tbuf_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[3]),
        .D(s_axi_wdata[4]),
        .Q(\timing_param_tbuf_i_reg[10]_1 [4]),
        .R(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tbuf_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[3]),
        .D(s_axi_wdata[5]),
        .Q(\timing_param_tbuf_i_reg[10]_1 [5]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tbuf_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[3]),
        .D(s_axi_wdata[6]),
        .Q(\timing_param_tbuf_i_reg[10]_1 [6]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tbuf_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[3]),
        .D(s_axi_wdata[7]),
        .Q(\timing_param_tbuf_i_reg[10]_1 [7]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tbuf_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[3]),
        .D(s_axi_wdata[8]),
        .Q(\timing_param_tbuf_i_reg[10]_1 [8]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tbuf_i_reg[9] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[3]),
        .D(s_axi_wdata[9]),
        .Q(\timing_param_tbuf_i_reg[10]_1 [9]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_thddat_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[0]),
        .D(s_axi_wdata[0]),
        .Q(Timing_param_thddat[0]),
        .S(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_thddat_i_reg[10] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[0]),
        .D(s_axi_wdata[10]),
        .Q(Timing_param_thddat[10]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_thddat_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[0]),
        .D(s_axi_wdata[1]),
        .Q(Timing_param_thddat[1]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_thddat_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[0]),
        .D(s_axi_wdata[2]),
        .Q(Timing_param_thddat[2]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_thddat_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[0]),
        .D(s_axi_wdata[3]),
        .Q(Timing_param_thddat[3]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_thddat_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[0]),
        .D(s_axi_wdata[4]),
        .Q(Timing_param_thddat[4]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_thddat_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[0]),
        .D(s_axi_wdata[5]),
        .Q(Timing_param_thddat[5]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_thddat_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[0]),
        .D(s_axi_wdata[6]),
        .Q(Timing_param_thddat[6]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_thddat_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[0]),
        .D(s_axi_wdata[7]),
        .Q(Timing_param_thddat[7]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_thddat_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[0]),
        .D(s_axi_wdata[8]),
        .Q(Timing_param_thddat[8]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_thddat_i_reg[9] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[0]),
        .D(s_axi_wdata[9]),
        .Q(Timing_param_thddat[9]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_thdsta_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[5]),
        .D(s_axi_wdata[0]),
        .Q(\timing_param_thdsta_i_reg[7]_0 [0]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_thdsta_i_reg[10] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[5]),
        .D(s_axi_wdata[10]),
        .Q(Timing_param_thdsta[10]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_thdsta_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[5]),
        .D(s_axi_wdata[1]),
        .Q(\timing_param_thdsta_i_reg[7]_0 [1]),
        .R(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_thdsta_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[5]),
        .D(s_axi_wdata[2]),
        .Q(\timing_param_thdsta_i_reg[7]_0 [2]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_thdsta_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[5]),
        .D(s_axi_wdata[3]),
        .Q(\timing_param_thdsta_i_reg[7]_0 [3]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_thdsta_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[5]),
        .D(s_axi_wdata[4]),
        .Q(\timing_param_thdsta_i_reg[7]_0 [4]),
        .S(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_thdsta_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[5]),
        .D(s_axi_wdata[5]),
        .Q(\timing_param_thdsta_i_reg[7]_0 [5]),
        .R(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_thdsta_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[5]),
        .D(s_axi_wdata[6]),
        .Q(\timing_param_thdsta_i_reg[7]_0 [6]),
        .S(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_thdsta_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[5]),
        .D(s_axi_wdata[7]),
        .Q(\timing_param_thdsta_i_reg[7]_0 [7]),
        .R(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_thdsta_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[5]),
        .D(s_axi_wdata[8]),
        .Q(Timing_param_thdsta[8]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_thdsta_i_reg[9] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[5]),
        .D(s_axi_wdata[9]),
        .Q(Timing_param_thdsta[9]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_thigh_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[2]),
        .D(s_axi_wdata[0]),
        .Q(\timing_param_thigh_i_reg[7]_0 [0]),
        .S(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_thigh_i_reg[10] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[2]),
        .D(s_axi_wdata[10]),
        .Q(Timing_param_thigh[10]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_thigh_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[2]),
        .D(s_axi_wdata[1]),
        .Q(\timing_param_thigh_i_reg[7]_0 [1]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_thigh_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[2]),
        .D(s_axi_wdata[2]),
        .Q(\timing_param_thigh_i_reg[7]_0 [2]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_thigh_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[2]),
        .D(s_axi_wdata[3]),
        .Q(\timing_param_thigh_i_reg[7]_0 [3]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_thigh_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[2]),
        .D(s_axi_wdata[4]),
        .Q(\timing_param_thigh_i_reg[7]_0 [4]),
        .R(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_thigh_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[2]),
        .D(s_axi_wdata[5]),
        .Q(\timing_param_thigh_i_reg[7]_0 [5]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_thigh_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[2]),
        .D(s_axi_wdata[6]),
        .Q(\timing_param_thigh_i_reg[7]_0 [6]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_thigh_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[2]),
        .D(s_axi_wdata[7]),
        .Q(\timing_param_thigh_i_reg[7]_0 [7]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_thigh_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[2]),
        .D(s_axi_wdata[8]),
        .Q(Timing_param_thigh[8]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_thigh_i_reg[9] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[2]),
        .D(s_axi_wdata[9]),
        .Q(Timing_param_thigh[9]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tlow_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[1]),
        .D(s_axi_wdata[0]),
        .Q(\timing_param_tlow_i_reg[7]_0 [0]),
        .S(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tlow_i_reg[10] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[1]),
        .D(s_axi_wdata[10]),
        .Q(Timing_param_tlow[10]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tlow_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[1]),
        .D(s_axi_wdata[1]),
        .Q(Timing_param_tlow[1]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tlow_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[1]),
        .D(s_axi_wdata[2]),
        .Q(Timing_param_tlow[2]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tlow_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[1]),
        .D(s_axi_wdata[3]),
        .Q(Timing_param_tlow[3]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tlow_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[1]),
        .D(s_axi_wdata[4]),
        .Q(\timing_param_tlow_i_reg[7]_0 [1]),
        .R(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tlow_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[1]),
        .D(s_axi_wdata[5]),
        .Q(\timing_param_tlow_i_reg[7]_0 [2]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tlow_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[1]),
        .D(s_axi_wdata[6]),
        .Q(\timing_param_tlow_i_reg[7]_0 [3]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tlow_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[1]),
        .D(s_axi_wdata[7]),
        .Q(\timing_param_tlow_i_reg[7]_0 [4]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tlow_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[1]),
        .D(s_axi_wdata[8]),
        .Q(Timing_param_tlow[8]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tlow_i_reg[9] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[1]),
        .D(s_axi_wdata[9]),
        .Q(Timing_param_tlow[9]),
        .S(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tsudat_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[4]),
        .D(s_axi_wdata[0]),
        .Q(\timing_param_tsudat_i_reg[3]_0 [0]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tsudat_i_reg[10] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[4]),
        .D(s_axi_wdata[10]),
        .Q(Timing_param_tsudat[10]),
        .R(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tsudat_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[4]),
        .D(s_axi_wdata[1]),
        .Q(\timing_param_tsudat_i_reg[3]_0 [1]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tsudat_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[4]),
        .D(s_axi_wdata[2]),
        .Q(\timing_param_tsudat_i_reg[3]_0 [2]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tsudat_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[4]),
        .D(s_axi_wdata[3]),
        .Q(\timing_param_tsudat_i_reg[3]_0 [3]),
        .S(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tsudat_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[4]),
        .D(s_axi_wdata[4]),
        .Q(Timing_param_tsudat[4]),
        .R(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tsudat_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[4]),
        .D(s_axi_wdata[5]),
        .Q(Timing_param_tsudat[5]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tsudat_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[4]),
        .D(s_axi_wdata[6]),
        .Q(Timing_param_tsudat[6]),
        .S(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tsudat_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[4]),
        .D(s_axi_wdata[7]),
        .Q(Timing_param_tsudat[7]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tsudat_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[4]),
        .D(s_axi_wdata[8]),
        .Q(Timing_param_tsudat[8]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tsudat_i_reg[9] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[4]),
        .D(s_axi_wdata[9]),
        .Q(Timing_param_tsudat[9]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tsusta_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[7]),
        .D(s_axi_wdata[0]),
        .Q(\timing_param_tsusta_i_reg[7]_0 [0]),
        .R(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tsusta_i_reg[10] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[7]),
        .D(s_axi_wdata[10]),
        .Q(Timing_param_tsusta[10]),
        .S(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tsusta_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[7]),
        .D(s_axi_wdata[1]),
        .Q(\timing_param_tsusta_i_reg[7]_0 [1]),
        .R(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tsusta_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[7]),
        .D(s_axi_wdata[2]),
        .Q(\timing_param_tsusta_i_reg[7]_0 [2]),
        .S(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tsusta_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[7]),
        .D(s_axi_wdata[3]),
        .Q(\timing_param_tsusta_i_reg[7]_0 [3]),
        .R(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tsusta_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[7]),
        .D(s_axi_wdata[4]),
        .Q(\timing_param_tsusta_i_reg[7]_0 [4]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tsusta_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[7]),
        .D(s_axi_wdata[5]),
        .Q(\timing_param_tsusta_i_reg[7]_0 [5]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tsusta_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[7]),
        .D(s_axi_wdata[6]),
        .Q(\timing_param_tsusta_i_reg[7]_0 [6]),
        .S(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tsusta_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[7]),
        .D(s_axi_wdata[7]),
        .Q(\timing_param_tsusta_i_reg[7]_0 [7]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tsusta_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[7]),
        .D(s_axi_wdata[8]),
        .Q(Timing_param_tsusta[8]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tsusta_i_reg[9] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[7]),
        .D(s_axi_wdata[9]),
        .Q(Timing_param_tsusta[9]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tsusto_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[6]),
        .D(s_axi_wdata[0]),
        .Q(\timing_param_tsusto_i_reg[7]_0 [0]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tsusto_i_reg[10] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[6]),
        .D(s_axi_wdata[10]),
        .Q(Timing_param_tsusto[10]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tsusto_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[6]),
        .D(s_axi_wdata[1]),
        .Q(\timing_param_tsusto_i_reg[7]_0 [1]),
        .R(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tsusto_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[6]),
        .D(s_axi_wdata[2]),
        .Q(\timing_param_tsusto_i_reg[7]_0 [2]),
        .R(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tsusto_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[6]),
        .D(s_axi_wdata[3]),
        .Q(\timing_param_tsusto_i_reg[7]_0 [3]),
        .S(Bus2IIC_Reset));
  FDRE #(
    .INIT(1'b0)) 
    \timing_param_tsusto_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[6]),
        .D(s_axi_wdata[4]),
        .Q(\timing_param_tsusto_i_reg[7]_0 [4]),
        .R(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tsusto_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[6]),
        .D(s_axi_wdata[5]),
        .Q(\timing_param_tsusto_i_reg[7]_0 [5]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tsusto_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[6]),
        .D(s_axi_wdata[6]),
        .Q(\timing_param_tsusto_i_reg[7]_0 [6]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tsusto_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[6]),
        .D(s_axi_wdata[7]),
        .Q(\timing_param_tsusto_i_reg[7]_0 [7]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tsusto_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[6]),
        .D(s_axi_wdata[8]),
        .Q(Timing_param_tsusto[8]),
        .S(Bus2IIC_Reset));
  FDSE #(
    .INIT(1'b1)) 
    \timing_param_tsusto_i_reg[9] 
       (.C(s_axi_aclk),
        .CE(Bus2IIC_WrCE[6]),
        .D(s_axi_wdata[9]),
        .Q(Timing_param_tsusto[9]),
        .S(Bus2IIC_Reset));
endmodule

(* ORIG_REF_NAME = "shift8" *) 
module system_axi_iic_0_0__shift8
   (\data_int_reg[7]_0 ,
    Q,
    tx_under_prev_i_reg,
    shift_reg_en,
    \data_int_reg[1]_0 ,
    \LEVEL_1_GEN.master_sda_reg ,
    state__0,
    slave_sda_reg,
    \LEVEL_1_GEN.master_sda_reg_0 ,
    Tx_fifo_data,
    \data_int_reg[7]_1 ,
    s_axi_aclk,
    \data_int_reg[0]_0 );
  output \data_int_reg[7]_0 ;
  output [7:0]Q;
  output tx_under_prev_i_reg;
  input shift_reg_en;
  input \data_int_reg[1]_0 ;
  input \LEVEL_1_GEN.master_sda_reg ;
  input [2:0]state__0;
  input slave_sda_reg;
  input \LEVEL_1_GEN.master_sda_reg_0 ;
  input [6:0]Tx_fifo_data;
  input \data_int_reg[7]_1 ;
  input s_axi_aclk;
  input [0:0]\data_int_reg[0]_0 ;

  wire \LEVEL_1_GEN.master_sda_reg ;
  wire \LEVEL_1_GEN.master_sda_reg_0 ;
  wire [7:0]Q;
  wire [6:0]Tx_fifo_data;
  wire \data_int[7]_i_1_n_0 ;
  wire [0:0]\data_int_reg[0]_0 ;
  wire \data_int_reg[1]_0 ;
  wire \data_int_reg[7]_0 ;
  wire \data_int_reg[7]_1 ;
  wire [7:1]p_2_in__0;
  wire s_axi_aclk;
  wire shift_reg_en;
  wire slave_sda_reg;
  wire [2:0]state__0;
  wire tx_under_prev_i_reg;

  LUT6 #(
    .INIT(64'hFFFFAFFFFF0FACFF)) 
    \LEVEL_1_GEN.master_sda_i_1 
       (.I0(\LEVEL_1_GEN.master_sda_reg ),
        .I1(\LEVEL_1_GEN.master_sda_reg_0 ),
        .I2(state__0[0]),
        .I3(state__0[1]),
        .I4(state__0[2]),
        .I5(Q[7]),
        .O(tx_under_prev_i_reg));
  LUT3 #(
    .INIT(8'hB8)) 
    \data_int[1]_i_1 
       (.I0(Tx_fifo_data[0]),
        .I1(\data_int_reg[1]_0 ),
        .I2(Q[0]),
        .O(p_2_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_int[2]_i_1 
       (.I0(Tx_fifo_data[1]),
        .I1(\data_int_reg[1]_0 ),
        .I2(Q[1]),
        .O(p_2_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_int[3]_i_1 
       (.I0(Tx_fifo_data[2]),
        .I1(\data_int_reg[1]_0 ),
        .I2(Q[2]),
        .O(p_2_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_int[4]_i_1 
       (.I0(Tx_fifo_data[3]),
        .I1(\data_int_reg[1]_0 ),
        .I2(Q[3]),
        .O(p_2_in__0[4]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_int[5]_i_1 
       (.I0(Tx_fifo_data[4]),
        .I1(\data_int_reg[1]_0 ),
        .I2(Q[4]),
        .O(p_2_in__0[5]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_int[6]_i_1 
       (.I0(Tx_fifo_data[5]),
        .I1(\data_int_reg[1]_0 ),
        .I2(Q[5]),
        .O(p_2_in__0[6]));
  LUT2 #(
    .INIT(4'hE)) 
    \data_int[7]_i_1 
       (.I0(shift_reg_en),
        .I1(\data_int_reg[1]_0 ),
        .O(\data_int[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_int[7]_i_2 
       (.I0(Tx_fifo_data[6]),
        .I1(\data_int_reg[1]_0 ),
        .I2(Q[6]),
        .O(p_2_in__0[7]));
  FDRE #(
    .INIT(1'b0)) 
    \data_int_reg[0] 
       (.C(s_axi_aclk),
        .CE(\data_int[7]_i_1_n_0 ),
        .D(\data_int_reg[0]_0 ),
        .Q(Q[0]),
        .R(\data_int_reg[7]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_int_reg[1] 
       (.C(s_axi_aclk),
        .CE(\data_int[7]_i_1_n_0 ),
        .D(p_2_in__0[1]),
        .Q(Q[1]),
        .R(\data_int_reg[7]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_int_reg[2] 
       (.C(s_axi_aclk),
        .CE(\data_int[7]_i_1_n_0 ),
        .D(p_2_in__0[2]),
        .Q(Q[2]),
        .R(\data_int_reg[7]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_int_reg[3] 
       (.C(s_axi_aclk),
        .CE(\data_int[7]_i_1_n_0 ),
        .D(p_2_in__0[3]),
        .Q(Q[3]),
        .R(\data_int_reg[7]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_int_reg[4] 
       (.C(s_axi_aclk),
        .CE(\data_int[7]_i_1_n_0 ),
        .D(p_2_in__0[4]),
        .Q(Q[4]),
        .R(\data_int_reg[7]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_int_reg[5] 
       (.C(s_axi_aclk),
        .CE(\data_int[7]_i_1_n_0 ),
        .D(p_2_in__0[5]),
        .Q(Q[5]),
        .R(\data_int_reg[7]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_int_reg[6] 
       (.C(s_axi_aclk),
        .CE(\data_int[7]_i_1_n_0 ),
        .D(p_2_in__0[6]),
        .Q(Q[6]),
        .R(\data_int_reg[7]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_int_reg[7] 
       (.C(s_axi_aclk),
        .CE(\data_int[7]_i_1_n_0 ),
        .D(p_2_in__0[7]),
        .Q(Q[7]),
        .R(\data_int_reg[7]_1 ));
  LUT6 #(
    .INIT(64'hFCCAFFFFFFCAFFFF)) 
    slave_sda_i_1
       (.I0(Q[7]),
        .I1(\LEVEL_1_GEN.master_sda_reg ),
        .I2(state__0[0]),
        .I3(state__0[2]),
        .I4(state__0[1]),
        .I5(slave_sda_reg),
        .O(\data_int_reg[7]_0 ));
endmodule

(* ORIG_REF_NAME = "shift8" *) 
module system_axi_iic_0_0__shift8_1
   (shift_reg_ld0,
    master_slave_reg,
    abgc_i_reg,
    detect_start_reg,
    detect_start_reg_0,
    aas_i_reg,
    detect_start_reg_1,
    \data_int_reg[3]_0 ,
    \data_int_reg[0]_0 ,
    detect_start,
    state__0,
    shift_reg_ld_reg,
    Q,
    master_slave,
    \FSM_sequential_state_reg[1] ,
    \FSM_sequential_state_reg[1]_0 ,
    Ro_prev,
    arb_lost,
    sda_sample,
    \FSM_sequential_state[2]_i_4_0 ,
    aas_i_reg_0,
    aas_i_reg_1,
    aas_i_reg_2,
    abgc_i_reg_0,
    aas_i_reg_3,
    aas_i_reg_4,
    srw_i_reg,
    \data_int_reg[0]_1 ,
    E,
    s_axi_aclk,
    scndry_out);
  output shift_reg_ld0;
  output master_slave_reg;
  output abgc_i_reg;
  output detect_start_reg;
  output detect_start_reg_0;
  output aas_i_reg;
  output detect_start_reg_1;
  output [2:0]\data_int_reg[3]_0 ;
  output \data_int_reg[0]_0 ;
  input detect_start;
  input [2:0]state__0;
  input shift_reg_ld_reg;
  input [2:0]Q;
  input master_slave;
  input \FSM_sequential_state_reg[1] ;
  input \FSM_sequential_state_reg[1]_0 ;
  input Ro_prev;
  input arb_lost;
  input sda_sample;
  input \FSM_sequential_state[2]_i_4_0 ;
  input aas_i_reg_0;
  input aas_i_reg_1;
  input aas_i_reg_2;
  input abgc_i_reg_0;
  input aas_i_reg_3;
  input [3:0]aas_i_reg_4;
  input [0:0]srw_i_reg;
  input \data_int_reg[0]_1 ;
  input [0:0]E;
  input s_axi_aclk;
  input scndry_out;

  wire [0:0]E;
  wire \FSM_sequential_state[1]_i_5_n_0 ;
  wire \FSM_sequential_state[2]_i_4_0 ;
  wire \FSM_sequential_state[2]_i_8_n_0 ;
  wire \FSM_sequential_state[2]_i_9_n_0 ;
  wire \FSM_sequential_state_reg[1] ;
  wire \FSM_sequential_state_reg[1]_0 ;
  wire [2:0]Q;
  wire Ro_prev;
  wire aas_i_reg;
  wire aas_i_reg_0;
  wire aas_i_reg_1;
  wire aas_i_reg_2;
  wire aas_i_reg_3;
  wire [3:0]aas_i_reg_4;
  wire abgc_i_i_2_n_0;
  wire abgc_i_i_3_n_0;
  wire abgc_i_reg;
  wire abgc_i_reg_0;
  wire arb_lost;
  wire \data_int_reg[0]_0 ;
  wire \data_int_reg[0]_1 ;
  wire [2:0]\data_int_reg[3]_0 ;
  wire detect_start;
  wire detect_start_reg;
  wire detect_start_reg_0;
  wire detect_start_reg_1;
  wire [7:0]i2c_header;
  wire master_slave;
  wire master_slave_reg;
  wire s_axi_aclk;
  wire scndry_out;
  wire sda_sample;
  wire shift_reg_ld0;
  wire shift_reg_ld_i_2_n_0;
  wire shift_reg_ld_reg;
  wire slave_sda_i_3_n_0;
  wire [0:0]srw_i_reg;
  wire [2:0]state__0;

  LUT6 #(
    .INIT(64'h00F00EFF00000EFF)) 
    \FSM_sequential_state[0]_i_2 
       (.I0(detect_start),
        .I1(\FSM_sequential_state[2]_i_8_n_0 ),
        .I2(state__0[1]),
        .I3(state__0[2]),
        .I4(state__0[0]),
        .I5(Ro_prev),
        .O(detect_start_reg_0));
  LUT6 #(
    .INIT(64'hDDDDDCDCFFFFFCDC)) 
    \FSM_sequential_state[1]_i_2 
       (.I0(\FSM_sequential_state_reg[1] ),
        .I1(\FSM_sequential_state_reg[1]_0 ),
        .I2(master_slave),
        .I3(Q[1]),
        .I4(abgc_i_reg),
        .I5(\FSM_sequential_state[1]_i_5_n_0 ),
        .O(master_slave_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFFEEFFEFEF)) 
    \FSM_sequential_state[1]_i_5 
       (.I0(sda_sample),
        .I1(arb_lost),
        .I2(i2c_header[0]),
        .I3(Q[1]),
        .I4(master_slave),
        .I5(aas_i_reg_1),
        .O(\FSM_sequential_state[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h000000002B2BFF2B)) 
    \FSM_sequential_state[2]_i_4 
       (.I0(detect_start),
        .I1(state__0[1]),
        .I2(state__0[2]),
        .I3(\FSM_sequential_state[2]_i_8_n_0 ),
        .I4(\FSM_sequential_state[2]_i_9_n_0 ),
        .I5(state__0[0]),
        .O(detect_start_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFFABAAAAAB)) 
    \FSM_sequential_state[2]_i_8 
       (.I0(master_slave),
        .I1(aas_i_reg_3),
        .I2(slave_sda_i_3_n_0),
        .I3(i2c_header[7]),
        .I4(aas_i_reg_4[3]),
        .I5(abgc_i_reg_0),
        .O(\FSM_sequential_state[2]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFD8)) 
    \FSM_sequential_state[2]_i_9 
       (.I0(master_slave),
        .I1(Q[1]),
        .I2(i2c_header[0]),
        .I3(arb_lost),
        .I4(sda_sample),
        .I5(\FSM_sequential_state[2]_i_4_0 ),
        .O(\FSM_sequential_state[2]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h008A0000)) 
    aas_i_i_1
       (.I0(abgc_i_reg),
        .I1(aas_i_reg_0),
        .I2(aas_i_reg_1),
        .I3(aas_i_reg_2),
        .I4(Q[0]),
        .O(aas_i_reg));
  LUT6 #(
    .INIT(64'h0000000044440400)) 
    abgc_i_i_1
       (.I0(detect_start),
        .I1(Q[0]),
        .I2(abgc_i_i_2_n_0),
        .I3(abgc_i_i_3_n_0),
        .I4(abgc_i_reg_0),
        .I5(aas_i_reg_2),
        .O(detect_start_reg_1));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF7)) 
    abgc_i_i_2
       (.I0(state__0[1]),
        .I1(state__0[2]),
        .I2(state__0[0]),
        .I3(\data_int_reg[3]_0 [1]),
        .I4(\data_int_reg[3]_0 [2]),
        .I5(i2c_header[4]),
        .O(abgc_i_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000000000000100)) 
    abgc_i_i_3
       (.I0(i2c_header[6]),
        .I1(i2c_header[0]),
        .I2(\data_int_reg[3]_0 [0]),
        .I3(Q[2]),
        .I4(i2c_header[5]),
        .I5(i2c_header[7]),
        .O(abgc_i_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \data_int_reg[0] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(scndry_out),
        .Q(i2c_header[0]),
        .R(\data_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_int_reg[1] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(i2c_header[0]),
        .Q(\data_int_reg[3]_0 [0]),
        .R(\data_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_int_reg[2] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\data_int_reg[3]_0 [0]),
        .Q(\data_int_reg[3]_0 [1]),
        .R(\data_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_int_reg[3] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\data_int_reg[3]_0 [1]),
        .Q(\data_int_reg[3]_0 [2]),
        .R(\data_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_int_reg[4] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\data_int_reg[3]_0 [2]),
        .Q(i2c_header[4]),
        .R(\data_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_int_reg[5] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(i2c_header[4]),
        .Q(i2c_header[5]),
        .R(\data_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_int_reg[6] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(i2c_header[5]),
        .Q(i2c_header[6]),
        .R(\data_int_reg[0]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_int_reg[7] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(i2c_header[6]),
        .Q(i2c_header[7]),
        .R(\data_int_reg[0]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0320)) 
    shift_reg_ld_i_1
       (.I0(detect_start),
        .I1(state__0[1]),
        .I2(state__0[2]),
        .I3(state__0[0]),
        .I4(shift_reg_ld_reg),
        .I5(shift_reg_ld_i_2_n_0),
        .O(shift_reg_ld0));
  LUT6 #(
    .INIT(64'h00C0000F00A00000)) 
    shift_reg_ld_i_2
       (.I0(i2c_header[0]),
        .I1(Q[1]),
        .I2(state__0[1]),
        .I3(state__0[0]),
        .I4(state__0[2]),
        .I5(master_slave),
        .O(shift_reg_ld_i_2_n_0));
  LUT5 #(
    .INIT(32'hAAAAAAEB)) 
    slave_sda_i_2
       (.I0(abgc_i_reg_0),
        .I1(aas_i_reg_4[3]),
        .I2(i2c_header[7]),
        .I3(slave_sda_i_3_n_0),
        .I4(aas_i_reg_3),
        .O(abgc_i_reg));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    slave_sda_i_3
       (.I0(i2c_header[6]),
        .I1(aas_i_reg_4[2]),
        .I2(aas_i_reg_4[1]),
        .I3(i2c_header[5]),
        .I4(aas_i_reg_4[0]),
        .I5(i2c_header[4]),
        .O(slave_sda_i_3_n_0));
  LUT5 #(
    .INIT(32'hFFBF0080)) 
    srw_i_i_1
       (.I0(i2c_header[0]),
        .I1(state__0[1]),
        .I2(state__0[2]),
        .I3(state__0[0]),
        .I4(srw_i_reg),
        .O(\data_int_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "slave_attachment" *) 
module system_axi_iic_0_0__slave_attachment
   (\GEN_BKEND_CE_REGISTERS[8].ce_out_i_reg[8] ,
    s_axi_rresp,
    Bus_RNW_reg_reg,
    s_axi_rvalid_i_reg_0,
    s_axi_bvalid_i_reg_0,
    s_axi_bresp,
    Q,
    is_write_reg_0,
    is_read_reg_0,
    irpt_wrack,
    E,
    reset_trig0,
    sw_rst_cond,
    \bus2ip_addr_i_reg[5]_0 ,
    Bus2IIC_RdCE,
    \s_axi_wdata[3] ,
    Bus2IIC_WrCE,
    \s_axi_wdata[31] ,
    s_axi_wdata_0_sp_1,
    s_axi_rdata,
    AXI_IP2Bus_WrAck20,
    AXI_IP2Bus_RdAck20,
    AXI_Bus2IP_Reset,
    s_axi_aclk,
    s_axi_arvalid,
    Rc_fifo_data,
    \s_axi_rdata_i_reg[7]_i_7_0 ,
    \s_axi_rdata_i_reg[7]_i_7_1 ,
    Tx_fifo_data,
    \s_axi_rdata_i_reg[7]_i_6_0 ,
    \s_axi_rdata_i_reg[7]_i_6_1 ,
    \s_axi_rdata_i[7]_i_8_0 ,
    \s_axi_rdata_i[7]_i_8_1 ,
    \s_axi_rdata_i[0]_i_2_0 ,
    s_axi_aresetn,
    AXI_IP2Bus_RdAck1,
    AXI_IP2Bus_RdAck2,
    s_axi_wvalid,
    s_axi_awvalid,
    AXI_IP2Bus_WrAck1,
    AXI_IP2Bus_WrAck2,
    sw_rst_cond_d1,
    s_axi_wdata,
    \s_axi_rdata_i_reg[7]_i_6_2 ,
    Tx_addr,
    \s_axi_rdata_i[3]_i_2_0 ,
    \s_axi_rdata_i[0]_i_2_1 ,
    \s_axi_rdata_i_reg[7]_i_6_3 ,
    \s_axi_rdata_i[1]_i_2_0 ,
    \s_axi_rdata_i[2]_i_2_0 ,
    \s_axi_rdata_i[3]_i_2_1 ,
    \s_axi_rdata_i_reg[7]_0 ,
    p_1_in7_in,
    \s_axi_rdata_i_reg[4]_i_2_0 ,
    p_1_in4_in,
    \s_axi_rdata_i_reg[5]_i_2_0 ,
    p_1_in1_in,
    \s_axi_rdata_i_reg[6]_i_2_0 ,
    p_1_in,
    \s_axi_rdata_i_reg[7]_i_2_0 ,
    Rc_addr,
    cr_txModeSelect_set,
    cr_txModeSelect_clr,
    s_axi_rready,
    s_axi_bready,
    \s_axi_rdata_i_reg[0]_0 ,
    p_1_in16_in,
    p_1_in13_in,
    p_1_in10_in,
    p_0_in,
    \s_axi_rdata_i[3]_i_2_2 ,
    \s_axi_rdata_i[2]_i_2_1 ,
    \s_axi_rdata_i[1]_i_2_1 ,
    s_axi_araddr,
    s_axi_awaddr,
    gpo,
    D);
  output \GEN_BKEND_CE_REGISTERS[8].ce_out_i_reg[8] ;
  output [0:0]s_axi_rresp;
  output Bus_RNW_reg_reg;
  output s_axi_rvalid_i_reg_0;
  output s_axi_bvalid_i_reg_0;
  output [0:0]s_axi_bresp;
  output [4:0]Q;
  output is_write_reg_0;
  output is_read_reg_0;
  output irpt_wrack;
  output [0:0]E;
  output reset_trig0;
  output sw_rst_cond;
  output \bus2ip_addr_i_reg[5]_0 ;
  output [0:0]Bus2IIC_RdCE;
  output [0:0]\s_axi_wdata[3] ;
  output [11:0]Bus2IIC_WrCE;
  output \s_axi_wdata[31] ;
  output s_axi_wdata_0_sp_1;
  output [11:0]s_axi_rdata;
  output AXI_IP2Bus_WrAck20;
  output AXI_IP2Bus_RdAck20;
  input AXI_Bus2IP_Reset;
  input s_axi_aclk;
  input s_axi_arvalid;
  input [0:7]Rc_fifo_data;
  input [7:0]\s_axi_rdata_i_reg[7]_i_7_0 ;
  input [7:0]\s_axi_rdata_i_reg[7]_i_7_1 ;
  input [0:7]Tx_fifo_data;
  input [7:0]\s_axi_rdata_i_reg[7]_i_6_0 ;
  input [7:0]\s_axi_rdata_i_reg[7]_i_6_1 ;
  input [5:0]\s_axi_rdata_i[7]_i_8_0 ;
  input [4:0]\s_axi_rdata_i[7]_i_8_1 ;
  input [0:0]\s_axi_rdata_i[0]_i_2_0 ;
  input s_axi_aresetn;
  input AXI_IP2Bus_RdAck1;
  input AXI_IP2Bus_RdAck2;
  input s_axi_wvalid;
  input s_axi_awvalid;
  input AXI_IP2Bus_WrAck1;
  input AXI_IP2Bus_WrAck2;
  input sw_rst_cond_d1;
  input [4:0]s_axi_wdata;
  input [7:0]\s_axi_rdata_i_reg[7]_i_6_2 ;
  input [0:3]Tx_addr;
  input [3:0]\s_axi_rdata_i[3]_i_2_0 ;
  input \s_axi_rdata_i[0]_i_2_1 ;
  input [6:0]\s_axi_rdata_i_reg[7]_i_6_3 ;
  input \s_axi_rdata_i[1]_i_2_0 ;
  input \s_axi_rdata_i[2]_i_2_0 ;
  input \s_axi_rdata_i[3]_i_2_1 ;
  input [7:0]\s_axi_rdata_i_reg[7]_0 ;
  input p_1_in7_in;
  input \s_axi_rdata_i_reg[4]_i_2_0 ;
  input p_1_in4_in;
  input \s_axi_rdata_i_reg[5]_i_2_0 ;
  input p_1_in1_in;
  input \s_axi_rdata_i_reg[6]_i_2_0 ;
  input p_1_in;
  input \s_axi_rdata_i_reg[7]_i_2_0 ;
  input [0:3]Rc_addr;
  input cr_txModeSelect_set;
  input cr_txModeSelect_clr;
  input s_axi_rready;
  input s_axi_bready;
  input \s_axi_rdata_i_reg[0]_0 ;
  input p_1_in16_in;
  input p_1_in13_in;
  input p_1_in10_in;
  input [0:0]p_0_in;
  input \s_axi_rdata_i[3]_i_2_2 ;
  input \s_axi_rdata_i[2]_i_2_1 ;
  input \s_axi_rdata_i[1]_i_2_1 ;
  input [8:0]s_axi_araddr;
  input [8:0]s_axi_awaddr;
  input [0:0]gpo;
  input [2:0]D;

  wire AXI_Bus2IP_Reset;
  wire [24:31]AXI_IP2Bus_Data;
  wire AXI_IP2Bus_RdAck1;
  wire AXI_IP2Bus_RdAck2;
  wire AXI_IP2Bus_RdAck20;
  wire AXI_IP2Bus_WrAck1;
  wire AXI_IP2Bus_WrAck2;
  wire AXI_IP2Bus_WrAck20;
  wire [0:8]Bus2IIC_Addr;
  wire [0:0]Bus2IIC_RdCE;
  wire [11:0]Bus2IIC_WrCE;
  wire Bus_RNW_reg_reg;
  wire [2:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state[0]_i_1_n_0 ;
  wire \FSM_onehot_state[1]_i_1_n_0 ;
  wire \FSM_onehot_state[2]_i_1_n_0 ;
  wire \FSM_onehot_state[3]_i_1_n_0 ;
  wire \FSM_onehot_state[3]_i_2_n_0 ;
  wire \FSM_onehot_state_reg_n_0_[0] ;
  wire \FSM_onehot_state_reg_n_0_[3] ;
  wire \GEN_BKEND_CE_REGISTERS[8].ce_out_i_reg[8] ;
  wire \INCLUDE_DPHASE_TIMER.dpto_cnt[3]_i_1_n_0 ;
  wire [3:0]\INCLUDE_DPHASE_TIMER.dpto_cnt_reg ;
  wire [0:0]Intr2Bus_DBus;
  wire [4:0]Q;
  wire [0:3]Rc_addr;
  wire [0:7]Rc_fifo_data;
  wire [0:3]Tx_addr;
  wire [0:7]Tx_fifo_data;
  wire \bus2ip_addr_i[8]_i_1_n_0 ;
  wire \bus2ip_addr_i_reg[5]_0 ;
  wire bus2ip_rnw_i_reg_n_0;
  wire cr_txModeSelect_clr;
  wire cr_txModeSelect_set;
  wire [0:0]gpo;
  wire irpt_wrack;
  wire is_read_i_1_n_0;
  wire is_read_reg_0;
  wire is_read_reg_n_0;
  wire is_write_i_1_n_0;
  wire is_write_i_2_n_0;
  wire is_write_reg_0;
  wire is_write_reg_n_0;
  wire [0:0]p_0_in;
  wire [1:0]p_0_out;
  wire p_1_in;
  wire p_1_in10_in;
  wire p_1_in13_in;
  wire p_1_in16_in;
  wire p_1_in1_in;
  wire p_1_in4_in;
  wire p_1_in7_in;
  wire [3:0]plusOp;
  wire reset_trig0;
  wire rst;
  wire s_axi_aclk;
  wire [8:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arvalid;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bresp_i;
  wire s_axi_bvalid_i_i_1_n_0;
  wire s_axi_bvalid_i_reg_0;
  wire [11:0]s_axi_rdata;
  wire \s_axi_rdata_i[0]_i_11_n_0 ;
  wire [0:0]\s_axi_rdata_i[0]_i_2_0 ;
  wire \s_axi_rdata_i[0]_i_2_1 ;
  wire \s_axi_rdata_i[0]_i_2_n_0 ;
  wire \s_axi_rdata_i[0]_i_3_n_0 ;
  wire \s_axi_rdata_i[0]_i_5_n_0 ;
  wire \s_axi_rdata_i[0]_i_6_n_0 ;
  wire \s_axi_rdata_i[0]_i_7_n_0 ;
  wire \s_axi_rdata_i[0]_i_8_n_0 ;
  wire \s_axi_rdata_i[0]_i_9_n_0 ;
  wire \s_axi_rdata_i[10]_i_5_n_0 ;
  wire \s_axi_rdata_i[1]_i_11_n_0 ;
  wire \s_axi_rdata_i[1]_i_2_0 ;
  wire \s_axi_rdata_i[1]_i_2_1 ;
  wire \s_axi_rdata_i[1]_i_2_n_0 ;
  wire \s_axi_rdata_i[1]_i_3_n_0 ;
  wire \s_axi_rdata_i[1]_i_5_n_0 ;
  wire \s_axi_rdata_i[1]_i_6_n_0 ;
  wire \s_axi_rdata_i[1]_i_7_n_0 ;
  wire \s_axi_rdata_i[1]_i_8_n_0 ;
  wire \s_axi_rdata_i[2]_i_11_n_0 ;
  wire \s_axi_rdata_i[2]_i_2_0 ;
  wire \s_axi_rdata_i[2]_i_2_1 ;
  wire \s_axi_rdata_i[2]_i_2_n_0 ;
  wire \s_axi_rdata_i[2]_i_3_n_0 ;
  wire \s_axi_rdata_i[2]_i_5_n_0 ;
  wire \s_axi_rdata_i[2]_i_6_n_0 ;
  wire \s_axi_rdata_i[2]_i_7_n_0 ;
  wire \s_axi_rdata_i[2]_i_8_n_0 ;
  wire [3:0]\s_axi_rdata_i[3]_i_2_0 ;
  wire \s_axi_rdata_i[3]_i_2_1 ;
  wire \s_axi_rdata_i[3]_i_2_2 ;
  wire \s_axi_rdata_i[3]_i_2_n_0 ;
  wire \s_axi_rdata_i[3]_i_3_n_0 ;
  wire \s_axi_rdata_i[3]_i_4_n_0 ;
  wire \s_axi_rdata_i[3]_i_6_n_0 ;
  wire \s_axi_rdata_i[3]_i_7_n_0 ;
  wire \s_axi_rdata_i[3]_i_8_n_0 ;
  wire \s_axi_rdata_i[3]_i_9_n_0 ;
  wire \s_axi_rdata_i[4]_i_5_n_0 ;
  wire \s_axi_rdata_i[4]_i_6_n_0 ;
  wire \s_axi_rdata_i[4]_i_8_n_0 ;
  wire \s_axi_rdata_i[4]_i_9_n_0 ;
  wire \s_axi_rdata_i[5]_i_5_n_0 ;
  wire \s_axi_rdata_i[5]_i_6_n_0 ;
  wire \s_axi_rdata_i[5]_i_8_n_0 ;
  wire \s_axi_rdata_i[5]_i_9_n_0 ;
  wire \s_axi_rdata_i[6]_i_5_n_0 ;
  wire \s_axi_rdata_i[6]_i_6_n_0 ;
  wire \s_axi_rdata_i[6]_i_8_n_0 ;
  wire \s_axi_rdata_i[6]_i_9_n_0 ;
  wire \s_axi_rdata_i[7]_i_11_n_0 ;
  wire \s_axi_rdata_i[7]_i_12_n_0 ;
  wire [5:0]\s_axi_rdata_i[7]_i_8_0 ;
  wire [4:0]\s_axi_rdata_i[7]_i_8_1 ;
  wire \s_axi_rdata_i[7]_i_8_n_0 ;
  wire \s_axi_rdata_i[7]_i_9_n_0 ;
  wire \s_axi_rdata_i_reg[0]_0 ;
  wire \s_axi_rdata_i_reg[4]_i_2_0 ;
  wire \s_axi_rdata_i_reg[4]_i_2_n_0 ;
  wire \s_axi_rdata_i_reg[4]_i_3_n_0 ;
  wire \s_axi_rdata_i_reg[4]_i_4_n_0 ;
  wire \s_axi_rdata_i_reg[5]_i_2_0 ;
  wire \s_axi_rdata_i_reg[5]_i_2_n_0 ;
  wire \s_axi_rdata_i_reg[5]_i_3_n_0 ;
  wire \s_axi_rdata_i_reg[5]_i_4_n_0 ;
  wire \s_axi_rdata_i_reg[6]_i_2_0 ;
  wire \s_axi_rdata_i_reg[6]_i_2_n_0 ;
  wire \s_axi_rdata_i_reg[6]_i_3_n_0 ;
  wire \s_axi_rdata_i_reg[6]_i_4_n_0 ;
  wire [7:0]\s_axi_rdata_i_reg[7]_0 ;
  wire \s_axi_rdata_i_reg[7]_i_2_0 ;
  wire \s_axi_rdata_i_reg[7]_i_2_n_0 ;
  wire [7:0]\s_axi_rdata_i_reg[7]_i_6_0 ;
  wire [7:0]\s_axi_rdata_i_reg[7]_i_6_1 ;
  wire [7:0]\s_axi_rdata_i_reg[7]_i_6_2 ;
  wire [6:0]\s_axi_rdata_i_reg[7]_i_6_3 ;
  wire \s_axi_rdata_i_reg[7]_i_6_n_0 ;
  wire [7:0]\s_axi_rdata_i_reg[7]_i_7_0 ;
  wire [7:0]\s_axi_rdata_i_reg[7]_i_7_1 ;
  wire \s_axi_rdata_i_reg[7]_i_7_n_0 ;
  wire s_axi_rready;
  wire s_axi_rresp_i;
  wire s_axi_rvalid_i_i_1_n_0;
  wire s_axi_rvalid_i_reg_0;
  wire [4:0]s_axi_wdata;
  wire \s_axi_wdata[31] ;
  wire [0:0]\s_axi_wdata[3] ;
  wire s_axi_wdata_0_sn_1;
  wire s_axi_wvalid;
  wire start2;
  wire start2_i_1_n_0;
  wire [1:0]state;
  wire \state[1]_i_2_n_0 ;
  wire sw_rst_cond;
  wire sw_rst_cond_d1;
  wire NLW_I_DECODER_AXI_IP2Bus_Error_UNCONNECTED;
  wire \NLW_I_DECODER_FSM_onehot_state_reg[2]_UNCONNECTED ;
  wire [0:0]NLW_I_DECODER_s_axi_bresp_UNCONNECTED;
  wire [0:0]\NLW_I_DECODER_s_axi_bresp_i_reg[1]_UNCONNECTED ;

  assign s_axi_wdata_0_sp_1 = s_axi_wdata_0_sn_1;
  LUT6 #(
    .INIT(64'h44444F444F444F44)) 
    \FSM_onehot_state[0]_i_1 
       (.I0(\FSM_onehot_state[3]_i_2_n_0 ),
        .I1(\FSM_onehot_state_reg_n_0_[3] ),
        .I2(s_axi_arvalid),
        .I3(\FSM_onehot_state_reg_n_0_[0] ),
        .I4(s_axi_wvalid),
        .I5(s_axi_awvalid),
        .O(\FSM_onehot_state[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8F88)) 
    \FSM_onehot_state[1]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(s_axi_arvalid),
        .I2(is_read_reg_0),
        .I3(s_axi_rresp_i),
        .O(\FSM_onehot_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h4000FFFF40004000)) 
    \FSM_onehot_state[2]_i_1 
       (.I0(s_axi_arvalid),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(s_axi_wvalid),
        .I3(s_axi_awvalid),
        .I4(is_write_reg_0),
        .I5(s_axi_bresp_i),
        .O(\FSM_onehot_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \FSM_onehot_state[3]_i_1 
       (.I0(is_read_reg_0),
        .I1(s_axi_rresp_i),
        .I2(s_axi_bresp_i),
        .I3(is_write_reg_0),
        .I4(\FSM_onehot_state_reg_n_0_[3] ),
        .I5(\FSM_onehot_state[3]_i_2_n_0 ),
        .O(\FSM_onehot_state[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0777)) 
    \FSM_onehot_state[3]_i_2 
       (.I0(s_axi_rvalid_i_reg_0),
        .I1(s_axi_rready),
        .I2(s_axi_bvalid_i_reg_0),
        .I3(s_axi_bready),
        .O(\FSM_onehot_state[3]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[0] ),
        .S(rst));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[1]_i_1_n_0 ),
        .Q(s_axi_rresp_i),
        .R(rst));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[2]_i_1_n_0 ),
        .Q(s_axi_bresp_i),
        .R(rst));
  (* FSM_ENCODED_STATES = "iSTATE:0010,iSTATE0:0100,iSTATE1:1000,iSTATE2:0001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[3] ),
        .R(rst));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[0]_i_1 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [0]),
        .O(plusOp[0]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[1]_i_1 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [0]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [1]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[2]_i_1 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [2]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [1]),
        .I2(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [0]),
        .O(plusOp[2]));
  LUT2 #(
    .INIT(4'h9)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[3]_i_1 
       (.I0(state[0]),
        .I1(state[1]),
        .O(\INCLUDE_DPHASE_TIMER.dpto_cnt[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt[3]_i_2 
       (.I0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [3]),
        .I1(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [0]),
        .I2(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [1]),
        .I3(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [2]),
        .O(plusOp[3]));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[0]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [0]),
        .R(\INCLUDE_DPHASE_TIMER.dpto_cnt[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[1]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [1]),
        .R(\INCLUDE_DPHASE_TIMER.dpto_cnt[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[2]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [2]),
        .R(\INCLUDE_DPHASE_TIMER.dpto_cnt[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \INCLUDE_DPHASE_TIMER.dpto_cnt_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(plusOp[3]),
        .Q(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg [3]),
        .R(\INCLUDE_DPHASE_TIMER.dpto_cnt[3]_i_1_n_0 ));
  system_axi_iic_0_0__address_decoder I_DECODER
       (.AXI_IP2Bus_Error(NLW_I_DECODER_AXI_IP2Bus_Error_UNCONNECTED),
        .AXI_IP2Bus_RdAck1(AXI_IP2Bus_RdAck1),
        .AXI_IP2Bus_RdAck2(AXI_IP2Bus_RdAck2),
        .AXI_IP2Bus_RdAck20(AXI_IP2Bus_RdAck20),
        .AXI_IP2Bus_WrAck1(AXI_IP2Bus_WrAck1),
        .AXI_IP2Bus_WrAck2(AXI_IP2Bus_WrAck2),
        .AXI_IP2Bus_WrAck20(AXI_IP2Bus_WrAck20),
        .AXI_IP2Bus_WrAck2_reg(bus2ip_rnw_i_reg_n_0),
        .Bus2IIC_RdCE(Bus2IIC_RdCE),
        .Bus2IIC_WrCE(Bus2IIC_WrCE),
        .Bus_RNW_reg_reg_0(Bus_RNW_reg_reg),
        .D({Intr2Bus_DBus,AXI_IP2Bus_Data[24],AXI_IP2Bus_Data[25],AXI_IP2Bus_Data[26],AXI_IP2Bus_Data[27],AXI_IP2Bus_Data[28],AXI_IP2Bus_Data[29],AXI_IP2Bus_Data[30],AXI_IP2Bus_Data[31]}),
        .E(E),
        .\FSM_onehot_state_reg[2] (\NLW_I_DECODER_FSM_onehot_state_reg[2]_UNCONNECTED ),
        .\GEN_BKEND_CE_REGISTERS[8].ce_out_i_reg[8]_0 (\GEN_BKEND_CE_REGISTERS[8].ce_out_i_reg[8] ),
        .\MEM_DECODE_GEN[2].cs_out_i_reg[2]_0 ({Bus2IIC_Addr[0],Bus2IIC_Addr[1],Q,Bus2IIC_Addr[7],Bus2IIC_Addr[8]}),
        .Q(start2),
        .\bus2ip_addr_i_reg[5] (\bus2ip_addr_i_reg[5]_0 ),
        .\cr_i_reg[4] (\s_axi_rdata_i[7]_i_8_0 [1]),
        .cr_txModeSelect_clr(cr_txModeSelect_clr),
        .cr_txModeSelect_set(cr_txModeSelect_set),
        .gpo(gpo),
        .irpt_wrack(irpt_wrack),
        .is_read_reg(is_read_reg_0),
        .is_write_reg(is_write_reg_0),
        .p_0_in(p_0_in),
        .p_1_in(p_1_in),
        .p_1_in10_in(p_1_in10_in),
        .p_1_in13_in(p_1_in13_in),
        .p_1_in16_in(p_1_in16_in),
        .p_1_in1_in(p_1_in1_in),
        .p_1_in4_in(p_1_in4_in),
        .p_1_in7_in(p_1_in7_in),
        .reset_trig0(reset_trig0),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(is_read_reg_n_0),
        .s_axi_awready(is_write_reg_n_0),
        .s_axi_awready_0(\INCLUDE_DPHASE_TIMER.dpto_cnt_reg ),
        .s_axi_bresp(NLW_I_DECODER_s_axi_bresp_UNCONNECTED[0]),
        .\s_axi_bresp_i_reg[1] (\NLW_I_DECODER_s_axi_bresp_i_reg[1]_UNCONNECTED [0]),
        .\s_axi_rdata_i_reg[0] (\s_axi_rdata_i[0]_i_2_n_0 ),
        .\s_axi_rdata_i_reg[0]_0 (\s_axi_rdata_i[0]_i_3_n_0 ),
        .\s_axi_rdata_i_reg[0]_1 (\s_axi_rdata_i_reg[0]_0 ),
        .\s_axi_rdata_i_reg[1] (\s_axi_rdata_i[1]_i_2_n_0 ),
        .\s_axi_rdata_i_reg[1]_0 (\s_axi_rdata_i[1]_i_3_n_0 ),
        .\s_axi_rdata_i_reg[2] (\s_axi_rdata_i[2]_i_2_n_0 ),
        .\s_axi_rdata_i_reg[2]_0 (\s_axi_rdata_i[2]_i_3_n_0 ),
        .\s_axi_rdata_i_reg[3] (\s_axi_rdata_i[3]_i_2_n_0 ),
        .\s_axi_rdata_i_reg[3]_0 (\s_axi_rdata_i[3]_i_3_n_0 ),
        .\s_axi_rdata_i_reg[3]_1 (\s_axi_rdata_i[3]_i_4_n_0 ),
        .\s_axi_rdata_i_reg[4] (\s_axi_rdata_i_reg[4]_i_2_n_0 ),
        .\s_axi_rdata_i_reg[5] (\s_axi_rdata_i_reg[5]_i_2_n_0 ),
        .\s_axi_rdata_i_reg[6] (\s_axi_rdata_i_reg[6]_i_2_n_0 ),
        .\s_axi_rdata_i_reg[7] (\s_axi_rdata_i_reg[7]_0 ),
        .\s_axi_rdata_i_reg[7]_0 (\s_axi_rdata_i_reg[7]_i_2_n_0 ),
        .\s_axi_rdata_i_reg[8] (\s_axi_rdata_i[10]_i_5_n_0 ),
        .s_axi_wdata(s_axi_wdata),
        .\s_axi_wdata[31] (\s_axi_wdata[31] ),
        .\s_axi_wdata[3] (\s_axi_wdata[3] ),
        .s_axi_wdata_0_sp_1(s_axi_wdata_0_sn_1),
        .sw_rst_cond(sw_rst_cond),
        .sw_rst_cond_d1(sw_rst_cond_d1));
  LUT5 #(
    .INIT(32'h03020202)) 
    \bus2ip_addr_i[8]_i_1 
       (.I0(s_axi_arvalid),
        .I1(state[0]),
        .I2(state[1]),
        .I3(s_axi_wvalid),
        .I4(s_axi_awvalid),
        .O(\bus2ip_addr_i[8]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_araddr[0]),
        .Q(Bus2IIC_Addr[8]),
        .R(rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_araddr[1]),
        .Q(Bus2IIC_Addr[7]),
        .R(rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_araddr[2]),
        .Q(Q[0]),
        .R(rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_araddr[3]),
        .Q(Q[1]),
        .R(rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_araddr[4]),
        .Q(Q[2]),
        .R(rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_araddr[5]),
        .Q(Q[3]),
        .R(rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_araddr[6]),
        .Q(Q[4]),
        .R(rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_araddr[7]),
        .Q(Bus2IIC_Addr[1]),
        .R(rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_araddr[8]),
        .Q(Bus2IIC_Addr[0]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    bus2ip_rnw_i_reg
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[8]_i_1_n_0 ),
        .D(s_axi_arvalid),
        .Q(bus2ip_rnw_i_reg_n_0),
        .R(rst));
  LUT5 #(
    .INIT(32'hB8BB8888)) 
    is_read_i_1
       (.I0(s_axi_arvalid),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(\FSM_onehot_state[3]_i_2_n_0 ),
        .I3(\FSM_onehot_state_reg_n_0_[3] ),
        .I4(is_read_reg_n_0),
        .O(is_read_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    is_read_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(is_read_i_1_n_0),
        .Q(is_read_reg_n_0),
        .R(rst));
  LUT6 #(
    .INIT(64'h0080FFFF00800000)) 
    is_write_i_1
       (.I0(s_axi_awvalid),
        .I1(s_axi_wvalid),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .I3(s_axi_arvalid),
        .I4(is_write_i_2_n_0),
        .I5(is_write_reg_n_0),
        .O(is_write_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFEAEAEAAAAAAAAA)) 
    is_write_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(s_axi_rvalid_i_reg_0),
        .I2(s_axi_rready),
        .I3(s_axi_bvalid_i_reg_0),
        .I4(s_axi_bready),
        .I5(\FSM_onehot_state_reg_n_0_[3] ),
        .O(is_write_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    is_write_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(is_write_i_1_n_0),
        .Q(is_write_reg_n_0),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    rst_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(AXI_Bus2IP_Reset),
        .Q(rst),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h75553000)) 
    s_axi_bvalid_i_i_1
       (.I0(s_axi_bready),
        .I1(state[0]),
        .I2(state[1]),
        .I3(is_write_reg_0),
        .I4(s_axi_bvalid_i_reg_0),
        .O(s_axi_bvalid_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_bvalid_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_axi_bvalid_i_i_1_n_0),
        .Q(s_axi_bvalid_i_reg_0),
        .R(rst));
  LUT5 #(
    .INIT(32'h00011101)) 
    \s_axi_rdata_i[0]_i_11 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Tx_fifo_data[7]),
        .I3(Q[3]),
        .I4(\s_axi_rdata_i_reg[7]_i_6_0 [0]),
        .O(\s_axi_rdata_i[0]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FF00B0B0)) 
    \s_axi_rdata_i[0]_i_2 
       (.I0(\s_axi_rdata_i[0]_i_5_n_0 ),
        .I1(\s_axi_rdata_i_reg[7]_i_6_2 [0]),
        .I2(\s_axi_rdata_i[0]_i_6_n_0 ),
        .I3(\s_axi_rdata_i[0]_i_7_n_0 ),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\s_axi_rdata_i[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000AAEAAAAA)) 
    \s_axi_rdata_i[0]_i_3 
       (.I0(\s_axi_rdata_i[0]_i_8_n_0 ),
        .I1(\s_axi_rdata_i_reg[7]_i_7_1 [0]),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[3]),
        .I5(\s_axi_rdata_i[0]_i_9_n_0 ),
        .O(\s_axi_rdata_i[0]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hDF)) 
    \s_axi_rdata_i[0]_i_5 
       (.I0(Q[3]),
        .I1(Q[4]),
        .I2(Q[2]),
        .O(\s_axi_rdata_i[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFAFAABFBFFFFABFB)) 
    \s_axi_rdata_i[0]_i_6 
       (.I0(Q[2]),
        .I1(\s_axi_rdata_i[7]_i_8_0 [0]),
        .I2(Q[4]),
        .I3(\s_axi_rdata_i[7]_i_8_1 [0]),
        .I4(Q[3]),
        .I5(\s_axi_rdata_i[0]_i_2_0 ),
        .O(\s_axi_rdata_i[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hABFBFFFFABFB0000)) 
    \s_axi_rdata_i[0]_i_7 
       (.I0(Q[4]),
        .I1(Tx_addr[0]),
        .I2(Q[3]),
        .I3(\s_axi_rdata_i[3]_i_2_0 [0]),
        .I4(Q[2]),
        .I5(\s_axi_rdata_i[0]_i_2_1 ),
        .O(\s_axi_rdata_i[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h1311131313111111)) 
    \s_axi_rdata_i[0]_i_8 
       (.I0(Q[0]),
        .I1(Q[4]),
        .I2(Q[2]),
        .I3(\s_axi_rdata_i_reg[7]_i_7_0 [0]),
        .I4(Q[3]),
        .I5(Rc_fifo_data[7]),
        .O(\s_axi_rdata_i[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00022022)) 
    \s_axi_rdata_i[0]_i_9 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[3]),
        .I3(Rc_addr[0]),
        .I4(\s_axi_rdata_i_reg[7]_i_6_1 [0]),
        .I5(\s_axi_rdata_i[0]_i_11_n_0 ),
        .O(\s_axi_rdata_i[0]_i_9_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \s_axi_rdata_i[10]_i_5 
       (.I0(Bus2IIC_Addr[8]),
        .I1(Bus2IIC_Addr[7]),
        .I2(Bus2IIC_Addr[1]),
        .O(\s_axi_rdata_i[10]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h00011101)) 
    \s_axi_rdata_i[1]_i_11 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Tx_fifo_data[6]),
        .I3(Q[3]),
        .I4(\s_axi_rdata_i_reg[7]_i_6_0 [1]),
        .O(\s_axi_rdata_i[1]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h003A)) 
    \s_axi_rdata_i[1]_i_2 
       (.I0(\s_axi_rdata_i[1]_i_5_n_0 ),
        .I1(\s_axi_rdata_i[1]_i_6_n_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(\s_axi_rdata_i[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000AAEAAAAA)) 
    \s_axi_rdata_i[1]_i_3 
       (.I0(\s_axi_rdata_i[1]_i_7_n_0 ),
        .I1(\s_axi_rdata_i_reg[7]_i_7_1 [1]),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[3]),
        .I5(\s_axi_rdata_i[1]_i_8_n_0 ),
        .O(\s_axi_rdata_i[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hABFBFFFFABFB0000)) 
    \s_axi_rdata_i[1]_i_5 
       (.I0(Q[4]),
        .I1(\s_axi_rdata_i_reg[7]_i_6_3 [0]),
        .I2(Q[3]),
        .I3(\s_axi_rdata_i_reg[7]_i_6_2 [1]),
        .I4(Q[2]),
        .I5(\s_axi_rdata_i[1]_i_2_0 ),
        .O(\s_axi_rdata_i[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00E2FFFF00E20000)) 
    \s_axi_rdata_i[1]_i_6 
       (.I0(Tx_addr[1]),
        .I1(Q[3]),
        .I2(\s_axi_rdata_i[3]_i_2_0 [1]),
        .I3(Q[4]),
        .I4(Q[2]),
        .I5(\s_axi_rdata_i[1]_i_2_1 ),
        .O(\s_axi_rdata_i[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h1311131313111111)) 
    \s_axi_rdata_i[1]_i_7 
       (.I0(Q[0]),
        .I1(Q[4]),
        .I2(Q[2]),
        .I3(\s_axi_rdata_i_reg[7]_i_7_0 [1]),
        .I4(Q[3]),
        .I5(Rc_fifo_data[6]),
        .O(\s_axi_rdata_i[1]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00022022)) 
    \s_axi_rdata_i[1]_i_8 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[3]),
        .I3(Rc_addr[1]),
        .I4(\s_axi_rdata_i_reg[7]_i_6_1 [1]),
        .I5(\s_axi_rdata_i[1]_i_11_n_0 ),
        .O(\s_axi_rdata_i[1]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h0503)) 
    \s_axi_rdata_i[2]_i_11 
       (.I0(Rc_addr[2]),
        .I1(Tx_fifo_data[5]),
        .I2(Q[0]),
        .I3(Q[2]),
        .O(\s_axi_rdata_i[2]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h003A)) 
    \s_axi_rdata_i[2]_i_2 
       (.I0(\s_axi_rdata_i[2]_i_5_n_0 ),
        .I1(\s_axi_rdata_i[2]_i_6_n_0 ),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(\s_axi_rdata_i[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000AAEAAAAA)) 
    \s_axi_rdata_i[2]_i_3 
       (.I0(\s_axi_rdata_i[2]_i_7_n_0 ),
        .I1(\s_axi_rdata_i_reg[7]_i_7_1 [2]),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[3]),
        .I5(\s_axi_rdata_i[2]_i_8_n_0 ),
        .O(\s_axi_rdata_i[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hABFBFFFFABFB0000)) 
    \s_axi_rdata_i[2]_i_5 
       (.I0(Q[4]),
        .I1(\s_axi_rdata_i_reg[7]_i_6_3 [1]),
        .I2(Q[3]),
        .I3(\s_axi_rdata_i_reg[7]_i_6_2 [2]),
        .I4(Q[2]),
        .I5(\s_axi_rdata_i[2]_i_2_0 ),
        .O(\s_axi_rdata_i[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00E2FFFF00E20000)) 
    \s_axi_rdata_i[2]_i_6 
       (.I0(Tx_addr[2]),
        .I1(Q[3]),
        .I2(\s_axi_rdata_i[3]_i_2_0 [2]),
        .I3(Q[4]),
        .I4(Q[2]),
        .I5(\s_axi_rdata_i[2]_i_2_1 ),
        .O(\s_axi_rdata_i[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h1311131313111111)) 
    \s_axi_rdata_i[2]_i_7 
       (.I0(Q[0]),
        .I1(Q[4]),
        .I2(Q[2]),
        .I3(\s_axi_rdata_i_reg[7]_i_7_0 [2]),
        .I4(Q[3]),
        .I5(Rc_fifo_data[5]),
        .O(\s_axi_rdata_i[2]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0503FFFF05030000)) 
    \s_axi_rdata_i[2]_i_8 
       (.I0(\s_axi_rdata_i_reg[7]_i_6_1 [2]),
        .I1(\s_axi_rdata_i_reg[7]_i_6_0 [2]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(\s_axi_rdata_i[2]_i_11_n_0 ),
        .O(\s_axi_rdata_i[2]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h0704)) 
    \s_axi_rdata_i[3]_i_2 
       (.I0(\s_axi_rdata_i[3]_i_6_n_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\s_axi_rdata_i[3]_i_7_n_0 ),
        .O(\s_axi_rdata_i[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000047)) 
    \s_axi_rdata_i[3]_i_3 
       (.I0(\s_axi_rdata_i_reg[7]_i_6_0 [3]),
        .I1(Q[3]),
        .I2(Tx_fifo_data[4]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(\s_axi_rdata_i[3]_i_8_n_0 ),
        .O(\s_axi_rdata_i[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF10111000)) 
    \s_axi_rdata_i[3]_i_4 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(\s_axi_rdata_i_reg[7]_i_7_0 [3]),
        .I3(Q[3]),
        .I4(Rc_fifo_data[4]),
        .I5(\s_axi_rdata_i[3]_i_9_n_0 ),
        .O(\s_axi_rdata_i[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00E2FFFF00E20000)) 
    \s_axi_rdata_i[3]_i_6 
       (.I0(Tx_addr[3]),
        .I1(Q[3]),
        .I2(\s_axi_rdata_i[3]_i_2_0 [3]),
        .I3(Q[4]),
        .I4(Q[2]),
        .I5(\s_axi_rdata_i[3]_i_2_2 ),
        .O(\s_axi_rdata_i[3]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hABFBFFFFABFB0000)) 
    \s_axi_rdata_i[3]_i_7 
       (.I0(Q[4]),
        .I1(\s_axi_rdata_i_reg[7]_i_6_3 [2]),
        .I2(Q[3]),
        .I3(\s_axi_rdata_i_reg[7]_i_6_2 [3]),
        .I4(Q[2]),
        .I5(\s_axi_rdata_i[3]_i_2_1 ),
        .O(\s_axi_rdata_i[3]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h00530000)) 
    \s_axi_rdata_i[3]_i_8 
       (.I0(\s_axi_rdata_i_reg[7]_i_6_1 [3]),
        .I1(Rc_addr[3]),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\s_axi_rdata_i[3]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h0D050505)) 
    \s_axi_rdata_i[3]_i_9 
       (.I0(Q[0]),
        .I1(Q[3]),
        .I2(Q[4]),
        .I3(Q[2]),
        .I4(\s_axi_rdata_i_reg[7]_i_7_1 [3]),
        .O(\s_axi_rdata_i[3]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hABFBFFFFABFB0000)) 
    \s_axi_rdata_i[4]_i_5 
       (.I0(Q[4]),
        .I1(\s_axi_rdata_i_reg[7]_i_6_3 [3]),
        .I2(Q[3]),
        .I3(\s_axi_rdata_i_reg[7]_i_6_2 [4]),
        .I4(Q[2]),
        .I5(\s_axi_rdata_i[4]_i_9_n_0 ),
        .O(\s_axi_rdata_i[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFAFABFBFFFFABFB)) 
    \s_axi_rdata_i[4]_i_6 
       (.I0(Q[4]),
        .I1(Tx_fifo_data[3]),
        .I2(Q[3]),
        .I3(\s_axi_rdata_i_reg[7]_i_6_0 [4]),
        .I4(Q[2]),
        .I5(\s_axi_rdata_i_reg[7]_i_6_1 [4]),
        .O(\s_axi_rdata_i[4]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFAFABFBFFFFABFB)) 
    \s_axi_rdata_i[4]_i_8 
       (.I0(Q[4]),
        .I1(Rc_fifo_data[3]),
        .I2(Q[3]),
        .I3(\s_axi_rdata_i_reg[7]_i_7_0 [4]),
        .I4(Q[2]),
        .I5(\s_axi_rdata_i_reg[7]_i_7_1 [4]),
        .O(\s_axi_rdata_i[4]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \s_axi_rdata_i[4]_i_9 
       (.I0(Q[3]),
        .I1(\s_axi_rdata_i[7]_i_8_0 [2]),
        .I2(Q[4]),
        .I3(\s_axi_rdata_i[7]_i_8_1 [1]),
        .O(\s_axi_rdata_i[4]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hABFBFFFFABFB0000)) 
    \s_axi_rdata_i[5]_i_5 
       (.I0(Q[4]),
        .I1(\s_axi_rdata_i_reg[7]_i_6_3 [4]),
        .I2(Q[3]),
        .I3(\s_axi_rdata_i_reg[7]_i_6_2 [5]),
        .I4(Q[2]),
        .I5(\s_axi_rdata_i[5]_i_9_n_0 ),
        .O(\s_axi_rdata_i[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFAFABFBFFFFABFB)) 
    \s_axi_rdata_i[5]_i_6 
       (.I0(Q[4]),
        .I1(Tx_fifo_data[2]),
        .I2(Q[3]),
        .I3(\s_axi_rdata_i_reg[7]_i_6_0 [5]),
        .I4(Q[2]),
        .I5(\s_axi_rdata_i_reg[7]_i_6_1 [5]),
        .O(\s_axi_rdata_i[5]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFAFABFBFFFFABFB)) 
    \s_axi_rdata_i[5]_i_8 
       (.I0(Q[4]),
        .I1(Rc_fifo_data[2]),
        .I2(Q[3]),
        .I3(\s_axi_rdata_i_reg[7]_i_7_0 [5]),
        .I4(Q[2]),
        .I5(\s_axi_rdata_i_reg[7]_i_7_1 [5]),
        .O(\s_axi_rdata_i[5]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \s_axi_rdata_i[5]_i_9 
       (.I0(Q[3]),
        .I1(\s_axi_rdata_i[7]_i_8_0 [3]),
        .I2(Q[4]),
        .I3(\s_axi_rdata_i[7]_i_8_1 [2]),
        .O(\s_axi_rdata_i[5]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hABFBFFFFABFB0000)) 
    \s_axi_rdata_i[6]_i_5 
       (.I0(Q[4]),
        .I1(\s_axi_rdata_i_reg[7]_i_6_3 [5]),
        .I2(Q[3]),
        .I3(\s_axi_rdata_i_reg[7]_i_6_2 [6]),
        .I4(Q[2]),
        .I5(\s_axi_rdata_i[6]_i_9_n_0 ),
        .O(\s_axi_rdata_i[6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFAFABFBFFFFABFB)) 
    \s_axi_rdata_i[6]_i_6 
       (.I0(Q[4]),
        .I1(Tx_fifo_data[1]),
        .I2(Q[3]),
        .I3(\s_axi_rdata_i_reg[7]_i_6_0 [6]),
        .I4(Q[2]),
        .I5(\s_axi_rdata_i_reg[7]_i_6_1 [6]),
        .O(\s_axi_rdata_i[6]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFAFABFBFFFFABFB)) 
    \s_axi_rdata_i[6]_i_8 
       (.I0(Q[4]),
        .I1(Rc_fifo_data[1]),
        .I2(Q[3]),
        .I3(\s_axi_rdata_i_reg[7]_i_7_0 [6]),
        .I4(Q[2]),
        .I5(\s_axi_rdata_i_reg[7]_i_7_1 [6]),
        .O(\s_axi_rdata_i[6]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \s_axi_rdata_i[6]_i_9 
       (.I0(Q[3]),
        .I1(\s_axi_rdata_i[7]_i_8_0 [4]),
        .I2(Q[4]),
        .I3(\s_axi_rdata_i[7]_i_8_1 [3]),
        .O(\s_axi_rdata_i[6]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFAFABFBFFFFABFB)) 
    \s_axi_rdata_i[7]_i_11 
       (.I0(Q[4]),
        .I1(Rc_fifo_data[0]),
        .I2(Q[3]),
        .I3(\s_axi_rdata_i_reg[7]_i_7_0 [7]),
        .I4(Q[2]),
        .I5(\s_axi_rdata_i_reg[7]_i_7_1 [7]),
        .O(\s_axi_rdata_i[7]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hABFB)) 
    \s_axi_rdata_i[7]_i_12 
       (.I0(Q[3]),
        .I1(\s_axi_rdata_i[7]_i_8_0 [5]),
        .I2(Q[4]),
        .I3(\s_axi_rdata_i[7]_i_8_1 [4]),
        .O(\s_axi_rdata_i[7]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hABFBFFFFABFB0000)) 
    \s_axi_rdata_i[7]_i_8 
       (.I0(Q[4]),
        .I1(\s_axi_rdata_i_reg[7]_i_6_3 [6]),
        .I2(Q[3]),
        .I3(\s_axi_rdata_i_reg[7]_i_6_2 [7]),
        .I4(Q[2]),
        .I5(\s_axi_rdata_i[7]_i_12_n_0 ),
        .O(\s_axi_rdata_i[7]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFAFABFBFFFFABFB)) 
    \s_axi_rdata_i[7]_i_9 
       (.I0(Q[4]),
        .I1(Tx_fifo_data[0]),
        .I2(Q[3]),
        .I3(\s_axi_rdata_i_reg[7]_i_6_0 [7]),
        .I4(Q[2]),
        .I5(\s_axi_rdata_i_reg[7]_i_6_1 [7]),
        .O(\s_axi_rdata_i[7]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(AXI_IP2Bus_Data[31]),
        .Q(s_axi_rdata[0]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[10] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[2]),
        .Q(s_axi_rdata[10]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(AXI_IP2Bus_Data[30]),
        .Q(s_axi_rdata[1]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(AXI_IP2Bus_Data[29]),
        .Q(s_axi_rdata[2]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[31] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(Intr2Bus_DBus),
        .Q(s_axi_rdata[11]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(AXI_IP2Bus_Data[28]),
        .Q(s_axi_rdata[3]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(AXI_IP2Bus_Data[27]),
        .Q(s_axi_rdata[4]),
        .R(rst));
  MUXF8 \s_axi_rdata_i_reg[4]_i_2 
       (.I0(\s_axi_rdata_i_reg[4]_i_3_n_0 ),
        .I1(\s_axi_rdata_i_reg[4]_i_4_n_0 ),
        .O(\s_axi_rdata_i_reg[4]_i_2_n_0 ),
        .S(Q[0]));
  MUXF7 \s_axi_rdata_i_reg[4]_i_3 
       (.I0(\s_axi_rdata_i[4]_i_5_n_0 ),
        .I1(\s_axi_rdata_i[4]_i_6_n_0 ),
        .O(\s_axi_rdata_i_reg[4]_i_3_n_0 ),
        .S(Q[1]));
  MUXF7 \s_axi_rdata_i_reg[4]_i_4 
       (.I0(\s_axi_rdata_i_reg[4]_i_2_0 ),
        .I1(\s_axi_rdata_i[4]_i_8_n_0 ),
        .O(\s_axi_rdata_i_reg[4]_i_4_n_0 ),
        .S(Q[1]));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(AXI_IP2Bus_Data[26]),
        .Q(s_axi_rdata[5]),
        .R(rst));
  MUXF8 \s_axi_rdata_i_reg[5]_i_2 
       (.I0(\s_axi_rdata_i_reg[5]_i_3_n_0 ),
        .I1(\s_axi_rdata_i_reg[5]_i_4_n_0 ),
        .O(\s_axi_rdata_i_reg[5]_i_2_n_0 ),
        .S(Q[0]));
  MUXF7 \s_axi_rdata_i_reg[5]_i_3 
       (.I0(\s_axi_rdata_i[5]_i_5_n_0 ),
        .I1(\s_axi_rdata_i[5]_i_6_n_0 ),
        .O(\s_axi_rdata_i_reg[5]_i_3_n_0 ),
        .S(Q[1]));
  MUXF7 \s_axi_rdata_i_reg[5]_i_4 
       (.I0(\s_axi_rdata_i_reg[5]_i_2_0 ),
        .I1(\s_axi_rdata_i[5]_i_8_n_0 ),
        .O(\s_axi_rdata_i_reg[5]_i_4_n_0 ),
        .S(Q[1]));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(AXI_IP2Bus_Data[25]),
        .Q(s_axi_rdata[6]),
        .R(rst));
  MUXF8 \s_axi_rdata_i_reg[6]_i_2 
       (.I0(\s_axi_rdata_i_reg[6]_i_3_n_0 ),
        .I1(\s_axi_rdata_i_reg[6]_i_4_n_0 ),
        .O(\s_axi_rdata_i_reg[6]_i_2_n_0 ),
        .S(Q[0]));
  MUXF7 \s_axi_rdata_i_reg[6]_i_3 
       (.I0(\s_axi_rdata_i[6]_i_5_n_0 ),
        .I1(\s_axi_rdata_i[6]_i_6_n_0 ),
        .O(\s_axi_rdata_i_reg[6]_i_3_n_0 ),
        .S(Q[1]));
  MUXF7 \s_axi_rdata_i_reg[6]_i_4 
       (.I0(\s_axi_rdata_i_reg[6]_i_2_0 ),
        .I1(\s_axi_rdata_i[6]_i_8_n_0 ),
        .O(\s_axi_rdata_i_reg[6]_i_4_n_0 ),
        .S(Q[1]));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(AXI_IP2Bus_Data[24]),
        .Q(s_axi_rdata[7]),
        .R(rst));
  MUXF8 \s_axi_rdata_i_reg[7]_i_2 
       (.I0(\s_axi_rdata_i_reg[7]_i_6_n_0 ),
        .I1(\s_axi_rdata_i_reg[7]_i_7_n_0 ),
        .O(\s_axi_rdata_i_reg[7]_i_2_n_0 ),
        .S(Q[0]));
  MUXF7 \s_axi_rdata_i_reg[7]_i_6 
       (.I0(\s_axi_rdata_i[7]_i_8_n_0 ),
        .I1(\s_axi_rdata_i[7]_i_9_n_0 ),
        .O(\s_axi_rdata_i_reg[7]_i_6_n_0 ),
        .S(Q[1]));
  MUXF7 \s_axi_rdata_i_reg[7]_i_7 
       (.I0(\s_axi_rdata_i_reg[7]_i_2_0 ),
        .I1(\s_axi_rdata_i[7]_i_11_n_0 ),
        .O(\s_axi_rdata_i_reg[7]_i_7_n_0 ),
        .S(Q[1]));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[0]),
        .Q(s_axi_rdata[8]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[9] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(D[1]),
        .Q(s_axi_rdata[9]),
        .R(rst));
  LUT5 #(
    .INIT(32'h75553000)) 
    s_axi_rvalid_i_i_1
       (.I0(s_axi_rready),
        .I1(state[1]),
        .I2(state[0]),
        .I3(is_read_reg_0),
        .I4(s_axi_rvalid_i_reg_0),
        .O(s_axi_rvalid_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_rvalid_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_axi_rvalid_i_i_1_n_0),
        .Q(s_axi_rvalid_i_reg_0),
        .R(rst));
  LUT5 #(
    .INIT(32'h000F0008)) 
    start2_i_1
       (.I0(s_axi_wvalid),
        .I1(s_axi_awvalid),
        .I2(state[0]),
        .I3(state[1]),
        .I4(s_axi_arvalid),
        .O(start2_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    start2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(start2_i_1_n_0),
        .Q(start2),
        .R(rst));
  LUT5 #(
    .INIT(32'hFBF83B38)) 
    \state[0]_i_1 
       (.I0(is_write_reg_0),
        .I1(state[1]),
        .I2(state[0]),
        .I3(s_axi_arvalid),
        .I4(\FSM_onehot_state[3]_i_2_n_0 ),
        .O(p_0_out[0]));
  LUT6 #(
    .INIT(64'hEECFEECC22CF22CC)) 
    \state[1]_i_1 
       (.I0(is_read_reg_0),
        .I1(state[1]),
        .I2(s_axi_arvalid),
        .I3(state[0]),
        .I4(\state[1]_i_2_n_0 ),
        .I5(\FSM_onehot_state[3]_i_2_n_0 ),
        .O(p_0_out[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \state[1]_i_2 
       (.I0(s_axi_wvalid),
        .I1(s_axi_awvalid),
        .O(\state[1]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_0_out[0]),
        .Q(state[0]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_0_out[1]),
        .Q(state[1]),
        .R(rst));
endmodule

(* ORIG_REF_NAME = "soft_reset" *) 
module system_axi_iic_0_0__soft_reset
   (sw_rst_cond_d1,
    AXI_Bus2IP_Reset,
    ctrlFifoDin,
    SR,
    sw_rst_cond,
    s_axi_aclk,
    reset_trig0,
    s_axi_aresetn,
    s_axi_wdata,
    Tx_fifo_rst);
  output sw_rst_cond_d1;
  output AXI_Bus2IP_Reset;
  output [0:1]ctrlFifoDin;
  output [0:0]SR;
  input sw_rst_cond;
  input s_axi_aclk;
  input reset_trig0;
  input s_axi_aresetn;
  input [1:0]s_axi_wdata;
  input Tx_fifo_rst;

  wire AXI_Bus2IP_Reset;
  wire \RESET_FLOPS[1].RST_FLOPS_i_1_n_0 ;
  wire \RESET_FLOPS[2].RST_FLOPS_i_1_n_0 ;
  wire \RESET_FLOPS[3].RST_FLOPS_i_1_n_0 ;
  wire \RESET_FLOPS[3].RST_FLOPS_n_0 ;
  wire S;
  wire [0:0]SR;
  wire Tx_fifo_rst;
  wire [0:1]ctrlFifoDin;
  wire [1:3]flop_q_chain;
  wire reset_trig0;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire [1:0]s_axi_wdata;
  wire sw_rst_cond;
  wire sw_rst_cond_d1;

  LUT3 #(
    .INIT(8'h02)) 
    \FIFO_RAM[0].SRL16E_I_i_1 
       (.I0(s_axi_wdata[1]),
        .I1(SR),
        .I2(Tx_fifo_rst),
        .O(ctrlFifoDin[0]));
  LUT3 #(
    .INIT(8'h02)) 
    \FIFO_RAM[1].SRL16E_I_i_1 
       (.I0(s_axi_wdata[0]),
        .I1(SR),
        .I2(Tx_fifo_rst),
        .O(ctrlFifoDin[1]));
  LUT2 #(
    .INIT(4'hB)) 
    \GPO_GEN.gpo_i[31]_i_1 
       (.I0(\RESET_FLOPS[3].RST_FLOPS_n_0 ),
        .I1(s_axi_aresetn),
        .O(SR));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \RESET_FLOPS[0].RST_FLOPS 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(S),
        .Q(flop_q_chain[1]),
        .R(AXI_Bus2IP_Reset));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \RESET_FLOPS[1].RST_FLOPS 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RESET_FLOPS[1].RST_FLOPS_i_1_n_0 ),
        .Q(flop_q_chain[2]),
        .R(AXI_Bus2IP_Reset));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \RESET_FLOPS[1].RST_FLOPS_i_1 
       (.I0(S),
        .I1(flop_q_chain[1]),
        .O(\RESET_FLOPS[1].RST_FLOPS_i_1_n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \RESET_FLOPS[2].RST_FLOPS 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RESET_FLOPS[2].RST_FLOPS_i_1_n_0 ),
        .Q(flop_q_chain[3]),
        .R(AXI_Bus2IP_Reset));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \RESET_FLOPS[2].RST_FLOPS_i_1 
       (.I0(S),
        .I1(flop_q_chain[2]),
        .O(\RESET_FLOPS[2].RST_FLOPS_i_1_n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IS_CE_INVERTED = "1'b0" *) 
  (* IS_S_INVERTED = "1'b0" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \RESET_FLOPS[3].RST_FLOPS 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\RESET_FLOPS[3].RST_FLOPS_i_1_n_0 ),
        .Q(\RESET_FLOPS[3].RST_FLOPS_n_0 ),
        .R(AXI_Bus2IP_Reset));
  LUT2 #(
    .INIT(4'hE)) 
    \RESET_FLOPS[3].RST_FLOPS_i_1 
       (.I0(S),
        .I1(flop_q_chain[3]),
        .O(\RESET_FLOPS[3].RST_FLOPS_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    reset_trig_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(reset_trig0),
        .Q(S),
        .R(AXI_Bus2IP_Reset));
  LUT1 #(
    .INIT(2'h1)) 
    rst_i_1
       (.I0(s_axi_aresetn),
        .O(AXI_Bus2IP_Reset));
  FDRE #(
    .INIT(1'b0)) 
    sw_rst_cond_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(sw_rst_cond),
        .Q(sw_rst_cond_d1),
        .R(AXI_Bus2IP_Reset));
endmodule

(* ORIG_REF_NAME = "upcnt_n" *) 
module system_axi_iic_0_0__upcnt_n
   (Q,
    D,
    \FSM_onehot_scl_state_reg[7] ,
    \cr_i_reg[2] ,
    S,
    DI,
    \q_int_reg[0]_0 ,
    \q_int_reg[0]_1 ,
    CO,
    \FSM_onehot_scl_state_reg[1] ,
    \FSM_onehot_scl_state_reg[1]_0 ,
    \FSM_onehot_scl_state_reg[1]_1 ,
    \FSM_onehot_scl_state_reg[1]_2 ,
    \q_int_reg[0]_2 ,
    \q_int_reg[0]_3 ,
    \q_int_reg[0]_4 ,
    \q_int_reg[1]_0 ,
    \q_int_reg[0]_5 ,
    \FSM_onehot_scl_state_reg[2] ,
    scndry_out,
    arb_lost,
    \clk_cnt_en1_inferred__2/i__carry__0 ,
    \FSM_onehot_scl_state_reg[0] ,
    \q_int_reg[10]_0 ,
    s_axi_aclk);
  output [10:0]Q;
  output [2:0]D;
  output \FSM_onehot_scl_state_reg[7] ;
  output \cr_i_reg[2] ;
  output [2:0]S;
  output [3:0]DI;
  output [1:0]\q_int_reg[0]_0 ;
  input [9:0]\q_int_reg[0]_1 ;
  input [0:0]CO;
  input \FSM_onehot_scl_state_reg[1] ;
  input \FSM_onehot_scl_state_reg[1]_0 ;
  input \FSM_onehot_scl_state_reg[1]_1 ;
  input \FSM_onehot_scl_state_reg[1]_2 ;
  input \q_int_reg[0]_2 ;
  input [0:0]\q_int_reg[0]_3 ;
  input \q_int_reg[0]_4 ;
  input \q_int_reg[1]_0 ;
  input [0:0]\q_int_reg[0]_5 ;
  input [0:0]\FSM_onehot_scl_state_reg[2] ;
  input scndry_out;
  input arb_lost;
  input [10:0]\clk_cnt_en1_inferred__2/i__carry__0 ;
  input \FSM_onehot_scl_state_reg[0] ;
  input \q_int_reg[10]_0 ;
  input s_axi_aclk;

  wire [0:0]CO;
  wire [2:0]D;
  wire [3:0]DI;
  wire \FSM_onehot_scl_state_reg[0] ;
  wire \FSM_onehot_scl_state_reg[1] ;
  wire \FSM_onehot_scl_state_reg[1]_0 ;
  wire \FSM_onehot_scl_state_reg[1]_1 ;
  wire \FSM_onehot_scl_state_reg[1]_2 ;
  wire [0:0]\FSM_onehot_scl_state_reg[2] ;
  wire \FSM_onehot_scl_state_reg[7] ;
  wire [10:0]Q;
  wire [2:0]S;
  wire arb_lost;
  wire [10:0]\clk_cnt_en1_inferred__2/i__carry__0 ;
  wire \cr_i_reg[2] ;
  wire [10:0]p_0_in;
  wire \q_int[0]_i_1__0_n_0 ;
  wire \q_int[0]_i_3__0_n_0 ;
  wire \q_int[0]_i_4_n_0 ;
  wire \q_int[0]_i_5__0_n_0 ;
  wire \q_int[0]_i_7_n_0 ;
  wire \q_int[1]_i_2_n_0 ;
  wire \q_int[1]_i_4_n_0 ;
  wire \q_int[2]_i_2_n_0 ;
  wire \q_int[3]_i_2_n_0 ;
  wire \q_int[4]_i_2_n_0 ;
  wire \q_int[5]_i_2_n_0 ;
  wire \q_int[6]_i_2_n_0 ;
  wire \q_int[7]_i_2_n_0 ;
  wire \q_int[8]_i_2_n_0 ;
  wire [1:0]\q_int_reg[0]_0 ;
  wire [9:0]\q_int_reg[0]_1 ;
  wire \q_int_reg[0]_2 ;
  wire [0:0]\q_int_reg[0]_3 ;
  wire \q_int_reg[0]_4 ;
  wire [0:0]\q_int_reg[0]_5 ;
  wire \q_int_reg[10]_0 ;
  wire \q_int_reg[1]_0 ;
  wire s_axi_aclk;
  wire scndry_out;

  LUT6 #(
    .INIT(64'hFFFFF444F444F444)) 
    \FSM_onehot_scl_state[0]_i_1 
       (.I0(\FSM_onehot_scl_state_reg[0] ),
        .I1(\q_int_reg[0]_1 [0]),
        .I2(\q_int_reg[0]_1 [9]),
        .I3(CO),
        .I4(arb_lost),
        .I5(\q_int_reg[0]_1 [7]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h4F4444444F444F44)) 
    \FSM_onehot_scl_state[1]_i_1 
       (.I0(CO),
        .I1(\q_int_reg[0]_1 [1]),
        .I2(\FSM_onehot_scl_state_reg[1] ),
        .I3(\FSM_onehot_scl_state_reg[1]_0 ),
        .I4(\FSM_onehot_scl_state_reg[1]_1 ),
        .I5(\FSM_onehot_scl_state_reg[1]_2 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \FSM_onehot_scl_state[2]_i_5 
       (.I0(\FSM_onehot_scl_state_reg[7] ),
        .I1(\FSM_onehot_scl_state_reg[2] ),
        .I2(CO),
        .I3(\q_int_reg[0]_1 [1]),
        .I4(scndry_out),
        .I5(\q_int_reg[0]_1 [2]),
        .O(\cr_i_reg[2] ));
  LUT4 #(
    .INIT(16'hF444)) 
    \FSM_onehot_scl_state[9]_i_3 
       (.I0(CO),
        .I1(\q_int_reg[0]_1 [9]),
        .I2(\q_int_reg[0]_1 [8]),
        .I3(scndry_out),
        .O(D[2]));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry__0_i_1
       (.I0(Q[10]),
        .I1(\clk_cnt_en1_inferred__2/i__carry__0 [10]),
        .O(\q_int_reg[0]_0 [1]));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry__0_i_2
       (.I0(Q[9]),
        .I1(\clk_cnt_en1_inferred__2/i__carry__0 [9]),
        .I2(Q[8]),
        .I3(\clk_cnt_en1_inferred__2/i__carry__0 [8]),
        .O(\q_int_reg[0]_0 [0]));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry_i_1__1
       (.I0(Q[7]),
        .I1(\clk_cnt_en1_inferred__2/i__carry__0 [7]),
        .I2(Q[6]),
        .I3(\clk_cnt_en1_inferred__2/i__carry__0 [6]),
        .O(DI[3]));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry_i_2__1
       (.I0(Q[5]),
        .I1(\clk_cnt_en1_inferred__2/i__carry__0 [5]),
        .I2(Q[4]),
        .I3(\clk_cnt_en1_inferred__2/i__carry__0 [4]),
        .O(DI[2]));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry_i_3__1
       (.I0(Q[3]),
        .I1(\clk_cnt_en1_inferred__2/i__carry__0 [3]),
        .I2(Q[2]),
        .I3(\clk_cnt_en1_inferred__2/i__carry__0 [2]),
        .O(DI[1]));
  LUT4 #(
    .INIT(16'h22B2)) 
    i__carry_i_4__1
       (.I0(Q[1]),
        .I1(\clk_cnt_en1_inferred__2/i__carry__0 [1]),
        .I2(Q[0]),
        .I3(\clk_cnt_en1_inferred__2/i__carry__0 [0]),
        .O(DI[0]));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \q_int[0]_i_1__0 
       (.I0(\q_int[0]_i_3__0_n_0 ),
        .I1(\q_int[0]_i_4_n_0 ),
        .I2(\q_int_reg[0]_1 [5]),
        .I3(\q_int_reg[0]_1 [7]),
        .I4(\q_int_reg[0]_1 [9]),
        .O(\q_int[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000001F)) 
    \q_int[0]_i_2__0 
       (.I0(\q_int_reg[0]_2 ),
        .I1(\q_int_reg[0]_3 ),
        .I2(\q_int_reg[0]_1 [4]),
        .I3(\q_int[0]_i_5__0_n_0 ),
        .I4(\q_int_reg[0]_4 ),
        .I5(\q_int[0]_i_7_n_0 ),
        .O(p_0_in[10]));
  LUT3 #(
    .INIT(8'hFE)) 
    \q_int[0]_i_3__0 
       (.I0(\q_int_reg[0]_1 [2]),
        .I1(\q_int_reg[0]_1 [8]),
        .I2(\q_int_reg[0]_1 [6]),
        .O(\q_int[0]_i_3__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \q_int[0]_i_4 
       (.I0(\q_int_reg[0]_1 [1]),
        .I1(\q_int_reg[0]_1 [3]),
        .I2(\q_int_reg[0]_1 [4]),
        .I3(\q_int_reg[0]_1 [0]),
        .O(\q_int[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEFFFEFEFEFE)) 
    \q_int[0]_i_5__0 
       (.I0(\q_int_reg[0]_1 [6]),
        .I1(\q_int_reg[0]_1 [8]),
        .I2(\q_int_reg[0]_1 [2]),
        .I3(\FSM_onehot_scl_state_reg[1]_0 ),
        .I4(\q_int_reg[0]_5 ),
        .I5(\q_int_reg[0]_1 [0]),
        .O(\q_int[0]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'h5595555555555555)) 
    \q_int[0]_i_7 
       (.I0(Q[10]),
        .I1(Q[8]),
        .I2(Q[7]),
        .I3(\q_int[4]_i_2_n_0 ),
        .I4(Q[6]),
        .I5(Q[9]),
        .O(\q_int[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000001F)) 
    \q_int[10]_i_1__0 
       (.I0(\q_int_reg[0]_2 ),
        .I1(\q_int_reg[0]_3 ),
        .I2(\q_int_reg[0]_1 [4]),
        .I3(\q_int[0]_i_5__0_n_0 ),
        .I4(\q_int_reg[0]_4 ),
        .I5(Q[0]),
        .O(p_0_in[0]));
  LUT6 #(
    .INIT(64'h0000011101110000)) 
    \q_int[1]_i_1 
       (.I0(\q_int[1]_i_2_n_0 ),
        .I1(\q_int[0]_i_5__0_n_0 ),
        .I2(\q_int_reg[1]_0 ),
        .I3(\FSM_onehot_scl_state_reg[7] ),
        .I4(\q_int[1]_i_4_n_0 ),
        .I5(Q[9]),
        .O(p_0_in[9]));
  LUT3 #(
    .INIT(8'hA8)) 
    \q_int[1]_i_2 
       (.I0(\q_int_reg[0]_1 [4]),
        .I1(\q_int_reg[0]_3 ),
        .I2(\q_int_reg[0]_2 ),
        .O(\q_int[1]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \q_int[1]_i_3 
       (.I0(\q_int_reg[0]_1 [7]),
        .I1(arb_lost),
        .O(\FSM_onehot_scl_state_reg[7] ));
  LUT4 #(
    .INIT(16'h0800)) 
    \q_int[1]_i_4 
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(\q_int[4]_i_2_n_0 ),
        .I3(Q[6]),
        .O(\q_int[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0111000000000111)) 
    \q_int[2]_i_1 
       (.I0(\q_int[1]_i_2_n_0 ),
        .I1(\q_int[0]_i_5__0_n_0 ),
        .I2(\q_int_reg[1]_0 ),
        .I3(\FSM_onehot_scl_state_reg[7] ),
        .I4(\q_int[2]_i_2_n_0 ),
        .I5(Q[8]),
        .O(p_0_in[8]));
  LUT3 #(
    .INIT(8'hDF)) 
    \q_int[2]_i_2 
       (.I0(Q[6]),
        .I1(\q_int[4]_i_2_n_0 ),
        .I2(Q[7]),
        .O(\q_int[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0111000000000111)) 
    \q_int[3]_i_1 
       (.I0(\q_int[1]_i_2_n_0 ),
        .I1(\q_int[0]_i_5__0_n_0 ),
        .I2(\q_int_reg[1]_0 ),
        .I3(\FSM_onehot_scl_state_reg[7] ),
        .I4(\q_int[3]_i_2_n_0 ),
        .I5(Q[7]),
        .O(p_0_in[7]));
  LUT2 #(
    .INIT(4'hB)) 
    \q_int[3]_i_2 
       (.I0(\q_int[4]_i_2_n_0 ),
        .I1(Q[6]),
        .O(\q_int[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0111000000000111)) 
    \q_int[4]_i_1 
       (.I0(\q_int[1]_i_2_n_0 ),
        .I1(\q_int[0]_i_5__0_n_0 ),
        .I2(\q_int_reg[1]_0 ),
        .I3(\FSM_onehot_scl_state_reg[7] ),
        .I4(\q_int[4]_i_2_n_0 ),
        .I5(Q[6]),
        .O(p_0_in[6]));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \q_int[4]_i_2 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[3]),
        .I5(Q[5]),
        .O(\q_int[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000001F)) 
    \q_int[5]_i_1 
       (.I0(\q_int_reg[0]_2 ),
        .I1(\q_int_reg[0]_3 ),
        .I2(\q_int_reg[0]_1 [4]),
        .I3(\q_int[0]_i_5__0_n_0 ),
        .I4(\q_int_reg[0]_4 ),
        .I5(\q_int[5]_i_2_n_0 ),
        .O(p_0_in[5]));
  LUT6 #(
    .INIT(64'h9555555555555555)) 
    \q_int[5]_i_2 
       (.I0(Q[5]),
        .I1(Q[4]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(Q[3]),
        .O(\q_int[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000001F)) 
    \q_int[6]_i_1__0 
       (.I0(\q_int_reg[0]_2 ),
        .I1(\q_int_reg[0]_3 ),
        .I2(\q_int_reg[0]_1 [4]),
        .I3(\q_int[0]_i_5__0_n_0 ),
        .I4(\q_int_reg[0]_4 ),
        .I5(\q_int[6]_i_2_n_0 ),
        .O(p_0_in[4]));
  LUT5 #(
    .INIT(32'h95555555)) 
    \q_int[6]_i_2 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\q_int[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000001F)) 
    \q_int[7]_i_1__0 
       (.I0(\q_int_reg[0]_2 ),
        .I1(\q_int_reg[0]_3 ),
        .I2(\q_int_reg[0]_1 [4]),
        .I3(\q_int[0]_i_5__0_n_0 ),
        .I4(\q_int_reg[0]_4 ),
        .I5(\q_int[7]_i_2_n_0 ),
        .O(p_0_in[3]));
  LUT4 #(
    .INIT(16'h9555)) 
    \q_int[7]_i_2 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(\q_int[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000001F)) 
    \q_int[8]_i_1__0 
       (.I0(\q_int_reg[0]_2 ),
        .I1(\q_int_reg[0]_3 ),
        .I2(\q_int_reg[0]_1 [4]),
        .I3(\q_int[0]_i_5__0_n_0 ),
        .I4(\q_int_reg[0]_4 ),
        .I5(\q_int[8]_i_2_n_0 ),
        .O(p_0_in[2]));
  LUT3 #(
    .INIT(8'h95)) 
    \q_int[8]_i_2 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(\q_int[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000011101110000)) 
    \q_int[9]_i_1__0 
       (.I0(\q_int[1]_i_2_n_0 ),
        .I1(\q_int[0]_i_5__0_n_0 ),
        .I2(\q_int_reg[1]_0 ),
        .I3(\FSM_onehot_scl_state_reg[7] ),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(p_0_in[1]));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[0] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1__0_n_0 ),
        .D(p_0_in[10]),
        .Q(Q[10]),
        .R(\q_int_reg[10]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[10] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1__0_n_0 ),
        .D(p_0_in[0]),
        .Q(Q[0]),
        .R(\q_int_reg[10]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[1] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1__0_n_0 ),
        .D(p_0_in[9]),
        .Q(Q[9]),
        .R(\q_int_reg[10]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[2] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1__0_n_0 ),
        .D(p_0_in[8]),
        .Q(Q[8]),
        .R(\q_int_reg[10]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[3] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1__0_n_0 ),
        .D(p_0_in[7]),
        .Q(Q[7]),
        .R(\q_int_reg[10]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[4] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1__0_n_0 ),
        .D(p_0_in[6]),
        .Q(Q[6]),
        .R(\q_int_reg[10]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[5] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1__0_n_0 ),
        .D(p_0_in[5]),
        .Q(Q[5]),
        .R(\q_int_reg[10]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[6] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1__0_n_0 ),
        .D(p_0_in[4]),
        .Q(Q[4]),
        .R(\q_int_reg[10]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[7] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1__0_n_0 ),
        .D(p_0_in[3]),
        .Q(Q[3]),
        .R(\q_int_reg[10]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[8] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1__0_n_0 ),
        .D(p_0_in[2]),
        .Q(Q[2]),
        .R(\q_int_reg[10]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[9] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1__0_n_0 ),
        .D(p_0_in[1]),
        .Q(Q[1]),
        .R(\q_int_reg[10]_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    stop_start_wait1_carry_i_2
       (.I0(Q[6]),
        .I1(\clk_cnt_en1_inferred__2/i__carry__0 [6]),
        .I2(Q[7]),
        .I3(\clk_cnt_en1_inferred__2/i__carry__0 [7]),
        .I4(\clk_cnt_en1_inferred__2/i__carry__0 [8]),
        .I5(Q[8]),
        .O(S[2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    stop_start_wait1_carry_i_3
       (.I0(Q[4]),
        .I1(\clk_cnt_en1_inferred__2/i__carry__0 [4]),
        .I2(Q[5]),
        .I3(\clk_cnt_en1_inferred__2/i__carry__0 [5]),
        .I4(\clk_cnt_en1_inferred__2/i__carry__0 [3]),
        .I5(Q[3]),
        .O(S[1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    stop_start_wait1_carry_i_4
       (.I0(Q[0]),
        .I1(\clk_cnt_en1_inferred__2/i__carry__0 [0]),
        .I2(Q[1]),
        .I3(\clk_cnt_en1_inferred__2/i__carry__0 [1]),
        .I4(\clk_cnt_en1_inferred__2/i__carry__0 [2]),
        .I5(Q[2]),
        .O(S[0]));
endmodule

(* ORIG_REF_NAME = "upcnt_n" *) 
module system_axi_iic_0_0__upcnt_n_2
   (\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ,
    Q,
    sda_setup,
    scndry_out,
    \q_int_reg[1]_0 ,
    tx_under_prev_d1,
    \q_int_reg[1]_1 ,
    gen_stop,
    gen_stop_d1,
    \q_int[0]_i_3_0 ,
    rsta_d1,
    \q_int_reg[0]_0 ,
    s_axi_aclk);
  output \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ;
  output [10:0]Q;
  input sda_setup;
  input scndry_out;
  input \q_int_reg[1]_0 ;
  input tx_under_prev_d1;
  input \q_int_reg[1]_1 ;
  input gen_stop;
  input gen_stop_d1;
  input [0:0]\q_int[0]_i_3_0 ;
  input rsta_d1;
  input \q_int_reg[0]_0 ;
  input s_axi_aclk;

  wire \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ;
  wire [10:0]Q;
  wire gen_stop;
  wire gen_stop_d1;
  wire [10:0]p_0_in__0;
  wire \q_int[0]_i_1_n_0 ;
  wire [0:0]\q_int[0]_i_3_0 ;
  wire \q_int[0]_i_4__0_n_0 ;
  wire \q_int[0]_i_5_n_0 ;
  wire \q_int[1]_i_1__1_n_0 ;
  wire \q_int[1]_i_2__0_n_0 ;
  wire \q_int[2]_i_1__1_n_0 ;
  wire \q_int[3]_i_1__1_n_0 ;
  wire \q_int[4]_i_1__0_n_0 ;
  wire \q_int[5]_i_1__0_n_0 ;
  wire \q_int[5]_i_2__0_n_0 ;
  wire \q_int_reg[0]_0 ;
  wire \q_int_reg[1]_0 ;
  wire \q_int_reg[1]_1 ;
  wire rsta_d1;
  wire s_axi_aclk;
  wire scndry_out;
  wire sda_setup;
  wire tx_under_prev_d1;

  LUT2 #(
    .INIT(4'hE)) 
    \q_int[0]_i_1 
       (.I0(sda_setup),
        .I1(\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ),
        .O(\q_int[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'h0078)) 
    \q_int[0]_i_2 
       (.I0(\q_int[0]_i_4__0_n_0 ),
        .I1(Q[9]),
        .I2(Q[10]),
        .I3(\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ),
        .O(p_0_in__0[10]));
  LUT5 #(
    .INIT(32'hAEAEFFAE)) 
    \q_int[0]_i_3 
       (.I0(\q_int[0]_i_5_n_0 ),
        .I1(scndry_out),
        .I2(\q_int_reg[1]_0 ),
        .I3(tx_under_prev_d1),
        .I4(\q_int_reg[1]_1 ),
        .O(\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ));
  LUT4 #(
    .INIT(16'h0800)) 
    \q_int[0]_i_4__0 
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(\q_int[1]_i_2__0_n_0 ),
        .I3(Q[6]),
        .O(\q_int[0]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h44F444F4FFFF44F4)) 
    \q_int[0]_i_5 
       (.I0(scndry_out),
        .I1(\q_int_reg[1]_0 ),
        .I2(gen_stop),
        .I3(gen_stop_d1),
        .I4(\q_int[0]_i_3_0 ),
        .I5(rsta_d1),
        .O(\q_int[0]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \q_int[10]_i_1 
       (.I0(Q[0]),
        .I1(\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ),
        .O(p_0_in__0[0]));
  LUT6 #(
    .INIT(64'h5515555500400000)) 
    \q_int[1]_i_1__1 
       (.I0(\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ),
        .I1(Q[8]),
        .I2(Q[7]),
        .I3(\q_int[1]_i_2__0_n_0 ),
        .I4(Q[6]),
        .I5(Q[9]),
        .O(\q_int[1]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \q_int[1]_i_2__0 
       (.I0(Q[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[3]),
        .I5(Q[5]),
        .O(\q_int[1]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'h51550400)) 
    \q_int[2]_i_1__1 
       (.I0(\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ),
        .I1(Q[6]),
        .I2(\q_int[1]_i_2__0_n_0 ),
        .I3(Q[7]),
        .I4(Q[8]),
        .O(\q_int[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'h4510)) 
    \q_int[3]_i_1__1 
       (.I0(\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ),
        .I1(\q_int[1]_i_2__0_n_0 ),
        .I2(Q[6]),
        .I3(Q[7]),
        .O(\q_int[3]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'h41)) 
    \q_int[4]_i_1__0 
       (.I0(\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ),
        .I1(\q_int[1]_i_2__0_n_0 ),
        .I2(Q[6]),
        .O(\q_int[4]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'h41)) 
    \q_int[5]_i_1__0 
       (.I0(\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ),
        .I1(\q_int[5]_i_2__0_n_0 ),
        .I2(Q[5]),
        .O(\q_int[5]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \q_int[5]_i_2__0 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[4]),
        .O(\q_int[5]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h000000007FFF8000)) 
    \q_int[6]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .I5(\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ),
        .O(p_0_in__0[4]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT5 #(
    .INIT(32'h00007F80)) 
    \q_int[7]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h0078)) 
    \q_int[8]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'h06)) 
    \q_int[9]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 ),
        .O(p_0_in__0[1]));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[0] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1_n_0 ),
        .D(p_0_in__0[10]),
        .Q(Q[10]),
        .R(\q_int_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[10] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1_n_0 ),
        .D(p_0_in__0[0]),
        .Q(Q[0]),
        .R(\q_int_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[1] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1_n_0 ),
        .D(\q_int[1]_i_1__1_n_0 ),
        .Q(Q[9]),
        .R(\q_int_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[2] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1_n_0 ),
        .D(\q_int[2]_i_1__1_n_0 ),
        .Q(Q[8]),
        .R(\q_int_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[3] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1_n_0 ),
        .D(\q_int[3]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(\q_int_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[4] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1_n_0 ),
        .D(\q_int[4]_i_1__0_n_0 ),
        .Q(Q[6]),
        .R(\q_int_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[5] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1_n_0 ),
        .D(\q_int[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(\q_int_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[6] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1_n_0 ),
        .D(p_0_in__0[4]),
        .Q(Q[4]),
        .R(\q_int_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[7] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1_n_0 ),
        .D(p_0_in__0[3]),
        .Q(Q[3]),
        .R(\q_int_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[8] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1_n_0 ),
        .D(p_0_in__0[2]),
        .Q(Q[2]),
        .R(\q_int_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[9] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1_n_0 ),
        .D(p_0_in__0[1]),
        .Q(Q[1]),
        .R(\q_int_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "upcnt_n" *) 
module system_axi_iic_0_0__upcnt_n__parameterized0
   (EarlyAckDataState0,
    \q_int_reg[1]_0 ,
    \FSM_sequential_state_reg[2] ,
    \FSM_sequential_state_reg[1] ,
    \FSM_sequential_state_reg[0] ,
    detect_start,
    state__0,
    bit_cnt_en,
    \FSM_sequential_state_reg[0]_0 ,
    EarlyAckDataState_reg,
    EarlyAckDataState_reg_0,
    scl_falling_edge,
    dtc_i_reg,
    \FSM_sequential_state_reg[2]_0 ,
    \FSM_sequential_state_reg[2]_1 ,
    state0,
    \FSM_sequential_state_reg[1]_0 ,
    Q,
    \FSM_sequential_state_reg[1]_1 ,
    \FSM_sequential_state_reg[0]_1 ,
    \q_int_reg[0]_0 ,
    s_axi_aclk);
  output EarlyAckDataState0;
  output \q_int_reg[1]_0 ;
  output \FSM_sequential_state_reg[2] ;
  output \FSM_sequential_state_reg[1] ;
  output \FSM_sequential_state_reg[0] ;
  input detect_start;
  input [2:0]state__0;
  input bit_cnt_en;
  input \FSM_sequential_state_reg[0]_0 ;
  input EarlyAckDataState_reg;
  input EarlyAckDataState_reg_0;
  input scl_falling_edge;
  input dtc_i_reg;
  input \FSM_sequential_state_reg[2]_0 ;
  input \FSM_sequential_state_reg[2]_1 ;
  input state0;
  input \FSM_sequential_state_reg[1]_0 ;
  input [0:0]Q;
  input \FSM_sequential_state_reg[1]_1 ;
  input \FSM_sequential_state_reg[0]_1 ;
  input \q_int_reg[0]_0 ;
  input s_axi_aclk;

  wire EarlyAckDataState0;
  wire EarlyAckDataState_reg;
  wire EarlyAckDataState_reg_0;
  wire \FSM_sequential_state[2]_i_2_n_0 ;
  wire \FSM_sequential_state[2]_i_6_n_0 ;
  wire \FSM_sequential_state_reg[0] ;
  wire \FSM_sequential_state_reg[0]_0 ;
  wire \FSM_sequential_state_reg[0]_1 ;
  wire \FSM_sequential_state_reg[1] ;
  wire \FSM_sequential_state_reg[1]_0 ;
  wire \FSM_sequential_state_reg[1]_1 ;
  wire \FSM_sequential_state_reg[2] ;
  wire \FSM_sequential_state_reg[2]_0 ;
  wire \FSM_sequential_state_reg[2]_1 ;
  wire [0:0]Q;
  wire [3:0]bit_cnt;
  wire bit_cnt_en;
  wire detect_start;
  wire dtc_i_reg;
  wire \q_int[0]_i_1__1_n_0 ;
  wire \q_int[0]_i_2__1_n_0 ;
  wire \q_int[0]_i_3__1_n_0 ;
  wire \q_int[1]_i_1__0_n_0 ;
  wire \q_int[2]_i_1__0_n_0 ;
  wire \q_int[3]_i_1__0_n_0 ;
  wire \q_int_reg[0]_0 ;
  wire \q_int_reg[1]_0 ;
  wire s_axi_aclk;
  wire scl_falling_edge;
  wire state0;
  wire [2:0]state__0;

  LUT6 #(
    .INIT(64'hAAAAAAAABAAAAAAE)) 
    EarlyAckDataState_i_1
       (.I0(EarlyAckDataState_reg),
        .I1(bit_cnt[3]),
        .I2(bit_cnt[1]),
        .I3(bit_cnt[0]),
        .I4(bit_cnt[2]),
        .I5(EarlyAckDataState_reg_0),
        .O(EarlyAckDataState0));
  LUT5 #(
    .INIT(32'h0000E200)) 
    \FSM_sequential_state[0]_i_1 
       (.I0(state__0[0]),
        .I1(\FSM_sequential_state[2]_i_2_n_0 ),
        .I2(\FSM_sequential_state_reg[0]_1 ),
        .I3(Q),
        .I4(\FSM_sequential_state_reg[1]_1 ),
        .O(\FSM_sequential_state_reg[0] ));
  LUT5 #(
    .INIT(32'h0000E200)) 
    \FSM_sequential_state[1]_i_1 
       (.I0(state__0[1]),
        .I1(\FSM_sequential_state[2]_i_2_n_0 ),
        .I2(\FSM_sequential_state_reg[1]_0 ),
        .I3(Q),
        .I4(\FSM_sequential_state_reg[1]_1 ),
        .O(\FSM_sequential_state_reg[1] ));
  LUT6 #(
    .INIT(64'h00000000EEEE62A2)) 
    \FSM_sequential_state[2]_i_1 
       (.I0(state__0[2]),
        .I1(\FSM_sequential_state[2]_i_2_n_0 ),
        .I2(\FSM_sequential_state_reg[2]_0 ),
        .I3(state__0[1]),
        .I4(\FSM_sequential_state_reg[2]_1 ),
        .I5(state0),
        .O(\FSM_sequential_state_reg[2] ));
  LUT6 #(
    .INIT(64'h000000000FFECFEA)) 
    \FSM_sequential_state[2]_i_2 
       (.I0(detect_start),
        .I1(\FSM_sequential_state[2]_i_6_n_0 ),
        .I2(state__0[2]),
        .I3(state__0[0]),
        .I4(state__0[1]),
        .I5(\FSM_sequential_state_reg[0]_0 ),
        .O(\FSM_sequential_state[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0010)) 
    \FSM_sequential_state[2]_i_6 
       (.I0(bit_cnt[1]),
        .I1(bit_cnt[0]),
        .I2(bit_cnt[3]),
        .I3(bit_cnt[2]),
        .O(\FSM_sequential_state[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0080FFFF00800000)) 
    dtc_i_i_1
       (.I0(bit_cnt[2]),
        .I1(bit_cnt[0]),
        .I2(bit_cnt[1]),
        .I3(bit_cnt[3]),
        .I4(scl_falling_edge),
        .I5(dtc_i_reg),
        .O(\q_int_reg[1]_0 ));
  LUT5 #(
    .INIT(32'hEFFEEFEF)) 
    \q_int[0]_i_1__1 
       (.I0(bit_cnt_en),
        .I1(detect_start),
        .I2(state__0[2]),
        .I3(state__0[0]),
        .I4(state__0[1]),
        .O(\q_int[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \q_int[0]_i_2__1 
       (.I0(\q_int[0]_i_3__1_n_0 ),
        .I1(bit_cnt[1]),
        .I2(bit_cnt[0]),
        .I3(bit_cnt[2]),
        .I4(bit_cnt[3]),
        .O(\q_int[0]_i_2__1_n_0 ));
  LUT4 #(
    .INIT(16'h00D2)) 
    \q_int[0]_i_3__1 
       (.I0(state__0[1]),
        .I1(state__0[0]),
        .I2(state__0[2]),
        .I3(detect_start),
        .O(\q_int[0]_i_3__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT4 #(
    .INIT(16'h2A80)) 
    \q_int[1]_i_1__0 
       (.I0(\q_int[0]_i_3__1_n_0 ),
        .I1(bit_cnt[0]),
        .I2(bit_cnt[1]),
        .I3(bit_cnt[2]),
        .O(\q_int[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000414441440000)) 
    \q_int[2]_i_1__0 
       (.I0(detect_start),
        .I1(state__0[2]),
        .I2(state__0[0]),
        .I3(state__0[1]),
        .I4(bit_cnt[0]),
        .I5(bit_cnt[1]),
        .O(\q_int[2]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h00004144)) 
    \q_int[3]_i_1__0 
       (.I0(detect_start),
        .I1(state__0[2]),
        .I2(state__0[0]),
        .I3(state__0[1]),
        .I4(bit_cnt[0]),
        .O(\q_int[3]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[0] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1__1_n_0 ),
        .D(\q_int[0]_i_2__1_n_0 ),
        .Q(bit_cnt[3]),
        .R(\q_int_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[1] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1__1_n_0 ),
        .D(\q_int[1]_i_1__0_n_0 ),
        .Q(bit_cnt[2]),
        .R(\q_int_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[2] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1__1_n_0 ),
        .D(\q_int[2]_i_1__0_n_0 ),
        .Q(bit_cnt[1]),
        .R(\q_int_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_int_reg[3] 
       (.C(s_axi_aclk),
        .CE(\q_int[0]_i_1__1_n_0 ),
        .D(\q_int[3]_i_1__0_n_0 ),
        .Q(bit_cnt[0]),
        .R(\q_int_reg[0]_0 ));
endmodule

(* CHECK_LICENSE_TYPE = "system_axi_uartlite_0_0,axi_uartlite,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi_uartlite,Vivado 2020.1" *) 
module system_axi_uartlite_0_0
   (s_axi_aclk,
    s_axi_aresetn,
    interrupt,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready,
    rx,
    tx);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 ACLK CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ACLK, ASSOCIATED_BUSIF S_AXI, ASSOCIATED_RESET s_axi_aresetn, FREQ_HZ 200000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1, INSERT_VIP 0" *) input s_axi_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 ARESETN RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ARESETN, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input s_axi_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:signal:interrupt:1.0 INTERRUPT INTERRUPT" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME INTERRUPT, SENSITIVITY EDGE_RISING, PortWidth 1" *) output interrupt;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME S_AXI, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 200000000, ID_WIDTH 0, ADDR_WIDTH 4, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 0, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input [3:0]s_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWVALID" *) input s_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWREADY" *) output s_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WDATA" *) input [31:0]s_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WSTRB" *) input [3:0]s_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WVALID" *) input s_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WREADY" *) output s_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BRESP" *) output [1:0]s_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BVALID" *) output s_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BREADY" *) input s_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARADDR" *) input [3:0]s_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARVALID" *) input s_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARREADY" *) output s_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RDATA" *) output [31:0]s_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RRESP" *) output [1:0]s_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RVALID" *) output s_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RREADY" *) input s_axi_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:uart:1.0 UART RxD" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME UART, BOARD.ASSOCIATED_PARAM UARTLITE_BOARD_INTERFACE" *) input rx;
  (* X_INTERFACE_INFO = "xilinx.com:interface:uart:1.0 UART TxD" *) output tx;

  wire rx;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [3:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire tx;
  wire NLW_U0_interrupt_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [31:8]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [31:8]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_wstrb_UNCONNECTED;

  (* C_BAUDRATE = "115200" *) 
  (* C_DATA_BITS = "8" *) 
  (* C_FAMILY = "spartan7" *) 
  (* C_ODD_PARITY = "0" *) 
  (* C_S_AXI_ACLK_FREQ_HZ = "200000000" *) 
  (* C_S_AXI_ADDR_WIDTH = "4" *) 
  (* C_S_AXI_DATA_WIDTH = "32" *) 
  (* C_USE_PARITY = "0" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  system_axi_uartlite_0_0__axi_uartlite U0
       (.interrupt(NLW_U0_interrupt_UNCONNECTED),
        .rx(rx),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[3:0]),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr({s_axi_awaddr[3:2],NLW_U0_s_axi_awaddr_UNCONNECTED[1:0]}),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata({NLW_U0_s_axi_rdata_UNCONNECTED[31:8],s_axi_rdata[7:0]}),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata({NLW_U0_s_axi_wdata_UNCONNECTED[31:8],s_axi_wdata[7:0]}),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wvalid(s_axi_wvalid),
        .tx(tx));
endmodule

(* ORIG_REF_NAME = "address_decoder" *) 
module system_axi_uartlite_0_0__address_decoder
   (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ,
    Bus_RNW_reg_reg_0,
    ip2bus_error,
    s_axi_aresetn_0,
    fifo_wr,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_1 ,
    reset_TX_FIFO,
    reset_RX_FIFO,
    D,
    s_axi_arready,
    s_axi_wready,
    \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_0 ,
    Bus_RNW_reg_reg_1,
    \INFERRED_GEN.cnt_i_reg[4] ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_1 ,
    bus2ip_rdce,
    \s_axi_wdata[4] ,
    \FSM_onehot_state_reg[3] ,
    s_axi_bready_0,
    FIFO_Full_reg,
    start2,
    s_axi_aclk,
    tx_Buffer_Full,
    Q,
    s_axi_aresetn,
    tx_Buffer_Empty_Pre_reg,
    s_axi_wdata,
    s_axi_rvalid_i_reg,
    \FSM_onehot_state_reg[0] ,
    s_axi_arvalid,
    s_axi_awvalid,
    s_axi_wvalid,
    out,
    rx_Buffer_Full,
    enable_interrupts,
    status_reg,
    s_axi_rready,
    s_axi_rvalid,
    s_axi_bready,
    s_axi_bvalid,
    s_axi_bresp,
    bus2ip_rnw_i,
    \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_1 ,
    \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_2 );
  output \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ;
  output \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ;
  output Bus_RNW_reg_reg_0;
  output ip2bus_error;
  output s_axi_aresetn_0;
  output fifo_wr;
  output \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_1 ;
  output reset_TX_FIFO;
  output reset_RX_FIFO;
  output [2:0]D;
  output s_axi_arready;
  output s_axi_wready;
  output [7:0]\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_0 ;
  output Bus_RNW_reg_reg_1;
  output \INFERRED_GEN.cnt_i_reg[4] ;
  output \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_1 ;
  output [0:0]bus2ip_rdce;
  output \s_axi_wdata[4] ;
  output \FSM_onehot_state_reg[3] ;
  output s_axi_bready_0;
  output FIFO_Full_reg;
  input start2;
  input s_axi_aclk;
  input tx_Buffer_Full;
  input [0:0]Q;
  input s_axi_aresetn;
  input [0:0]tx_Buffer_Empty_Pre_reg;
  input [2:0]s_axi_wdata;
  input [3:0]s_axi_rvalid_i_reg;
  input \FSM_onehot_state_reg[0] ;
  input s_axi_arvalid;
  input s_axi_awvalid;
  input s_axi_wvalid;
  input [7:0]out;
  input rx_Buffer_Full;
  input enable_interrupts;
  input [1:0]status_reg;
  input s_axi_rready;
  input s_axi_rvalid;
  input s_axi_bready;
  input s_axi_bvalid;
  input [0:0]s_axi_bresp;
  input bus2ip_rnw_i;
  input \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_1 ;
  input \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_2 ;

  wire Bus_RNW_reg_i_1_n_0;
  wire Bus_RNW_reg_reg_0;
  wire Bus_RNW_reg_reg_1;
  wire [2:0]D;
  wire \FSM_onehot_state[2]_i_2_n_0 ;
  wire \FSM_onehot_state[3]_i_2_n_0 ;
  wire \FSM_onehot_state_reg[0] ;
  wire \FSM_onehot_state_reg[3] ;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_1 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_1 ;
  wire \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ;
  wire [7:0]\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_0 ;
  wire \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_1 ;
  wire \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_2 ;
  wire \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ;
  wire [0:0]Q;
  wire [0:0]bus2ip_rdce;
  wire bus2ip_rnw_i;
  wire ce_expnd_i_0;
  wire ce_expnd_i_1;
  wire ce_expnd_i_2;
  wire ce_expnd_i_3;
  wire cs_ce_clr;
  wire enable_interrupts;
  wire fifo_wr;
  wire [7:0]out;
  wire reset_RX_FIFO;
  wire reset_TX_FIFO;
  wire rx_Buffer_Full;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bready_0;
  wire s_axi_bvalid;
  wire s_axi_bvalid_i_i_2_n_0;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [3:0]s_axi_rvalid_i_reg;
  wire [2:0]s_axi_wdata;
  wire \s_axi_wdata[4] ;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire start2;
  wire [1:0]status_reg;
  wire [0:0]tx_Buffer_Empty_Pre_reg;
  wire tx_Buffer_Full;

  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    Bus_RNW_reg_i_1
       (.I0(bus2ip_rnw_i),
        .I1(start2),
        .I2(Bus_RNW_reg_reg_0),
        .O(Bus_RNW_reg_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Bus_RNW_reg_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Bus_RNW_reg_i_1_n_0),
        .Q(Bus_RNW_reg_reg_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEAFFEAEA)) 
    \FSM_onehot_state[0]_i_1 
       (.I0(s_axi_bvalid_i_i_2_n_0),
        .I1(s_axi_rvalid_i_reg[3]),
        .I2(s_axi_arready),
        .I3(\FSM_onehot_state_reg[0] ),
        .I4(s_axi_rvalid_i_reg[0]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFF008000800080)) 
    \FSM_onehot_state[2]_i_1 
       (.I0(s_axi_awvalid),
        .I1(s_axi_wvalid),
        .I2(s_axi_rvalid_i_reg[1]),
        .I3(s_axi_arvalid),
        .I4(s_axi_rvalid_i_reg[2]),
        .I5(\FSM_onehot_state[2]_i_2_n_0 ),
        .O(D[1]));
  LUT5 #(
    .INIT(32'hAAAAAAAB)) 
    \FSM_onehot_state[2]_i_2 
       (.I0(Bus_RNW_reg_reg_0),
        .I1(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .I2(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ),
        .I3(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ),
        .I4(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .O(\FSM_onehot_state[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h8FFF8888)) 
    \FSM_onehot_state[3]_i_1 
       (.I0(s_axi_arvalid),
        .I1(s_axi_rvalid_i_reg[1]),
        .I2(Bus_RNW_reg_reg_0),
        .I3(\FSM_onehot_state[3]_i_2_n_0 ),
        .I4(s_axi_rvalid_i_reg[3]),
        .O(D[2]));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \FSM_onehot_state[3]_i_2 
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I1(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ),
        .I2(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ),
        .I3(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .O(\FSM_onehot_state[3]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(start2),
        .D(ce_expnd_i_3),
        .Q(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ),
        .R(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i[1]_i_1 
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_2 ),
        .I1(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_1 ),
        .O(ce_expnd_i_2));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(start2),
        .D(ce_expnd_i_2),
        .Q(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ),
        .R(cs_ce_clr));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(start2),
        .D(ce_expnd_i_1),
        .Q(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .R(cs_ce_clr));
  LUT5 #(
    .INIT(32'hFFFEFFFF)) 
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i[3]_i_1 
       (.I0(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .I1(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ),
        .I2(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ),
        .I3(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I4(s_axi_aresetn),
        .O(cs_ce_clr));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i[3]_i_2 
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_1 ),
        .I1(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_2 ),
        .O(ce_expnd_i_0));
  FDRE #(
    .INIT(1'b0)) 
    \GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(start2),
        .D(ce_expnd_i_0),
        .Q(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .R(cs_ce_clr));
  LUT3 #(
    .INIT(8'hF7)) 
    \INFERRED_GEN.cnt_i[3]_i_2 
       (.I0(Bus_RNW_reg_reg_0),
        .I1(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ),
        .I2(Q),
        .O(Bus_RNW_reg_reg_1));
  LUT3 #(
    .INIT(8'hFD)) 
    \INFERRED_GEN.cnt_i[4]_i_5 
       (.I0(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ),
        .I1(Bus_RNW_reg_reg_0),
        .I2(tx_Buffer_Full),
        .O(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_1 ));
  LUT3 #(
    .INIT(8'h10)) 
    \INFERRED_GEN.data_reg[15][7]_srl16_i_1 
       (.I0(tx_Buffer_Full),
        .I1(Bus_RNW_reg_reg_0),
        .I2(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ),
        .O(fifo_wr));
  system_axi_uartlite_0_0__pselect_f \MEM_DECODE_GEN[0].PER_CE_GEN[0].MULTIPLE_CES_THIS_CS_GEN.CE_I 
       (.\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] (\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_2 ),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 (\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_1 ),
        .ce_expnd_i_3(ce_expnd_i_3));
  system_axi_uartlite_0_0__pselect_f__parameterized1 \MEM_DECODE_GEN[0].PER_CE_GEN[2].MULTIPLE_CES_THIS_CS_GEN.CE_I 
       (.\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] (\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_1 ),
        .\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_0 (\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_2 ),
        .ce_expnd_i_1(ce_expnd_i_1));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h8)) 
    clr_Status_i_1
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I1(Bus_RNW_reg_reg_0),
        .O(bus2ip_rdce));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'hFB08)) 
    enable_interrupts_i_1
       (.I0(s_axi_wdata[2]),
        .I1(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .I2(Bus_RNW_reg_reg_0),
        .I3(enable_interrupts),
        .O(\s_axi_wdata[4] ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'h40)) 
    reset_RX_FIFO_i_1
       (.I0(Bus_RNW_reg_reg_0),
        .I1(s_axi_wdata[1]),
        .I2(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .O(reset_RX_FIFO));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'h40)) 
    reset_TX_FIFO_i_1
       (.I0(Bus_RNW_reg_reg_0),
        .I1(s_axi_wdata[0]),
        .I2(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .O(reset_TX_FIFO));
  LUT5 #(
    .INIT(32'hF0F0F0E0)) 
    s_axi_arready_INST_0
       (.I0(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ),
        .I1(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I2(Bus_RNW_reg_reg_0),
        .I3(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .I4(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ),
        .O(s_axi_arready));
  LUT2 #(
    .INIT(4'h7)) 
    \s_axi_bresp_i[1]_i_3 
       (.I0(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ),
        .I1(Bus_RNW_reg_reg_0),
        .O(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_1 ));
  LUT3 #(
    .INIT(8'hBA)) 
    s_axi_bvalid_i_i_1
       (.I0(s_axi_bvalid_i_i_2_n_0),
        .I1(s_axi_bready),
        .I2(s_axi_bvalid),
        .O(s_axi_bready_0));
  LUT6 #(
    .INIT(64'h00000000AAAAAAA8)) 
    s_axi_bvalid_i_i_2
       (.I0(s_axi_rvalid_i_reg[2]),
        .I1(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I2(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ),
        .I3(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ),
        .I4(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .I5(Bus_RNW_reg_reg_0),
        .O(s_axi_bvalid_i_i_2_n_0));
  LUT5 #(
    .INIT(32'h5050C000)) 
    \s_axi_rdata_i[0]_i_1 
       (.I0(Q),
        .I1(out[0]),
        .I2(Bus_RNW_reg_reg_0),
        .I3(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ),
        .I4(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .O(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_0 [0]));
  LUT5 #(
    .INIT(32'hA0A0C000)) 
    \s_axi_rdata_i[1]_i_1 
       (.I0(rx_Buffer_Full),
        .I1(out[1]),
        .I2(Bus_RNW_reg_reg_0),
        .I3(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ),
        .I4(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .O(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_0 [1]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'hA0A0C000)) 
    \s_axi_rdata_i[2]_i_1 
       (.I0(tx_Buffer_Empty_Pre_reg),
        .I1(out[2]),
        .I2(Bus_RNW_reg_reg_0),
        .I3(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ),
        .I4(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .O(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_0 [2]));
  LUT5 #(
    .INIT(32'hA0A0C000)) 
    \s_axi_rdata_i[3]_i_1 
       (.I0(tx_Buffer_Full),
        .I1(out[3]),
        .I2(Bus_RNW_reg_reg_0),
        .I3(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ),
        .I4(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .O(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_0 [3]));
  LUT5 #(
    .INIT(32'hA0A0C000)) 
    \s_axi_rdata_i[4]_i_1 
       (.I0(enable_interrupts),
        .I1(out[4]),
        .I2(Bus_RNW_reg_reg_0),
        .I3(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ),
        .I4(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .O(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_0 [4]));
  LUT5 #(
    .INIT(32'hA0A0C000)) 
    \s_axi_rdata_i[5]_i_1 
       (.I0(status_reg[0]),
        .I1(out[5]),
        .I2(Bus_RNW_reg_reg_0),
        .I3(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ),
        .I4(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .O(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_0 [5]));
  LUT5 #(
    .INIT(32'hA0A0C000)) 
    \s_axi_rdata_i[6]_i_1 
       (.I0(status_reg[1]),
        .I1(out[6]),
        .I2(Bus_RNW_reg_reg_0),
        .I3(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ),
        .I4(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .O(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_0 [6]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \s_axi_rdata_i[7]_i_1 
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I1(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ),
        .I2(Bus_RNW_reg_reg_0),
        .I3(out[7]),
        .O(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_0 [7]));
  LUT4 #(
    .INIT(16'h8F88)) 
    s_axi_rvalid_i_i_1
       (.I0(s_axi_rvalid_i_reg[3]),
        .I1(s_axi_arready),
        .I2(s_axi_rready),
        .I3(s_axi_rvalid),
        .O(\FSM_onehot_state_reg[3] ));
  LUT5 #(
    .INIT(32'h0000FFFE)) 
    s_axi_wready_INST_0
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg ),
        .I1(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ),
        .I2(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ),
        .I3(\GEN_BKEND_CE_REGISTERS[3].ce_out_i_reg ),
        .I4(Bus_RNW_reg_reg_0),
        .O(s_axi_wready));
endmodule

(* ORIG_REF_NAME = "axi_lite_ipif" *) 
module system_axi_uartlite_0_0__axi_lite_ipif
   (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    s_axi_rresp,
    Bus_RNW_reg,
    s_axi_rvalid,
    s_axi_bvalid,
    s_axi_bresp,
    s_axi_aresetn_0,
    fifo_wr,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ,
    reset_TX_FIFO,
    reset_RX_FIFO,
    s_axi_arready,
    s_axi_wready,
    Bus_RNW_reg_reg,
    \INFERRED_GEN.cnt_i_reg[4] ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ,
    bus2ip_rdce,
    \s_axi_wdata[4] ,
    s_axi_rdata,
    bus2ip_reset,
    s_axi_aclk,
    tx_Buffer_Full,
    Q,
    s_axi_aresetn,
    tx_Buffer_Empty_Pre_reg,
    s_axi_wdata,
    s_axi_arvalid,
    s_axi_awvalid,
    s_axi_wvalid,
    out,
    rx_Buffer_Full,
    enable_interrupts,
    status_reg,
    s_axi_bready,
    s_axi_rready,
    s_axi_awaddr,
    s_axi_araddr);
  output \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  output \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  output [0:0]s_axi_rresp;
  output Bus_RNW_reg;
  output s_axi_rvalid;
  output s_axi_bvalid;
  output [0:0]s_axi_bresp;
  output s_axi_aresetn_0;
  output fifo_wr;
  output \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ;
  output reset_TX_FIFO;
  output reset_RX_FIFO;
  output s_axi_arready;
  output s_axi_wready;
  output Bus_RNW_reg_reg;
  output \INFERRED_GEN.cnt_i_reg[4] ;
  output \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ;
  output [0:0]bus2ip_rdce;
  output \s_axi_wdata[4] ;
  output [7:0]s_axi_rdata;
  input bus2ip_reset;
  input s_axi_aclk;
  input tx_Buffer_Full;
  input [0:0]Q;
  input s_axi_aresetn;
  input [0:0]tx_Buffer_Empty_Pre_reg;
  input [2:0]s_axi_wdata;
  input s_axi_arvalid;
  input s_axi_awvalid;
  input s_axi_wvalid;
  input [7:0]out;
  input rx_Buffer_Full;
  input enable_interrupts;
  input [1:0]status_reg;
  input s_axi_bready;
  input s_axi_rready;
  input [1:0]s_axi_awaddr;
  input [1:0]s_axi_araddr;

  wire Bus_RNW_reg;
  wire Bus_RNW_reg_reg;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ;
  wire [0:0]Q;
  wire [0:0]bus2ip_rdce;
  wire bus2ip_reset;
  wire enable_interrupts;
  wire fifo_wr;
  wire [7:0]out;
  wire reset_RX_FIFO;
  wire reset_TX_FIFO;
  wire rx_Buffer_Full;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [1:0]s_axi_awaddr;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [7:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [2:0]s_axi_wdata;
  wire \s_axi_wdata[4] ;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire [1:0]status_reg;
  wire [0:0]tx_Buffer_Empty_Pre_reg;
  wire tx_Buffer_Full;
  wire \NLW_I_SLAVE_ATTACHMENT_INFERRED_GEN.cnt_i_reg[4]_UNCONNECTED ;
  wire NLW_I_SLAVE_ATTACHMENT_s_axi_aresetn_0_UNCONNECTED;
  wire [1:0]NLW_I_SLAVE_ATTACHMENT_s_axi_araddr_UNCONNECTED;
  wire [0:0]NLW_I_SLAVE_ATTACHMENT_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_I_SLAVE_ATTACHMENT_s_axi_rresp_UNCONNECTED;

  system_axi_uartlite_0_0__slave_attachment I_SLAVE_ATTACHMENT
       (.Bus_RNW_reg_reg(Bus_RNW_reg),
        .Bus_RNW_reg_reg_0(Bus_RNW_reg_reg),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ),
        .\INFERRED_GEN.cnt_i_reg[4] (\NLW_I_SLAVE_ATTACHMENT_INFERRED_GEN.cnt_i_reg[4]_UNCONNECTED ),
        .Q(Q),
        .bus2ip_rdce(bus2ip_rdce),
        .bus2ip_reset(bus2ip_reset),
        .enable_interrupts(enable_interrupts),
        .fifo_wr(fifo_wr),
        .out(out),
        .reset_RX_FIFO(reset_RX_FIFO),
        .reset_TX_FIFO(reset_TX_FIFO),
        .rx_Buffer_Full(rx_Buffer_Full),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(NLW_I_SLAVE_ATTACHMENT_s_axi_araddr_UNCONNECTED[1:0]),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_aresetn_0(NLW_I_SLAVE_ATTACHMENT_s_axi_aresetn_0_UNCONNECTED),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_I_SLAVE_ATTACHMENT_s_axi_bresp_UNCONNECTED[0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_I_SLAVE_ATTACHMENT_s_axi_rresp_UNCONNECTED[0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .\s_axi_wdata[4] (\s_axi_wdata[4] ),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid),
        .status_reg(status_reg),
        .tx_Buffer_Empty_Pre_reg(tx_Buffer_Empty_Pre_reg),
        .tx_Buffer_Full(tx_Buffer_Full));
endmodule

(* C_BAUDRATE = "115200" *) (* C_DATA_BITS = "8" *) (* C_FAMILY = "spartan7" *) 
(* C_ODD_PARITY = "0" *) (* C_S_AXI_ACLK_FREQ_HZ = "200000000" *) (* C_S_AXI_ADDR_WIDTH = "4" *) 
(* C_S_AXI_DATA_WIDTH = "32" *) (* C_USE_PARITY = "0" *) (* DowngradeIPIdentifiedWarnings = "yes" *) 
(* ORIG_REF_NAME = "axi_uartlite" *) 
module system_axi_uartlite_0_0__axi_uartlite
   (s_axi_aclk,
    s_axi_aresetn,
    interrupt,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready,
    rx,
    tx);
  input s_axi_aclk;
  input s_axi_aresetn;
  output interrupt;
  input [3:0]s_axi_awaddr;
  input s_axi_awvalid;
  output s_axi_awready;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wvalid;
  output s_axi_wready;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_araddr;
  input s_axi_arvalid;
  output s_axi_arready;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rvalid;
  input s_axi_rready;
  input rx;
  output tx;

  wire AXI_LITE_IPIF_I_n_14;
  wire AXI_LITE_IPIF_I_n_16;
  wire AXI_LITE_IPIF_I_n_18;
  wire AXI_LITE_IPIF_I_n_9;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/Bus_RNW_reg ;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \UARTLITE_RX_I/rx_Data_Empty ;
  wire \UARTLITE_TX_I/fifo_wr ;
  wire [1:1]bus2ip_rdce;
  wire bus2ip_reset;
  wire enable_interrupts;
  wire reset_RX_FIFO;
  wire reset_TX_FIFO;
  wire rx;
  wire rx_Buffer_Full;
  wire [0:7]rx_Data;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [3:0]s_axi_awaddr;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire [1:2]status_reg;
  wire tx;
  wire tx_Buffer_Empty;
  wire tx_Buffer_Full;
  wire \NLW_AXI_LITE_IPIF_I_INFERRED_GEN.cnt_i_reg[4]_UNCONNECTED ;
  wire NLW_AXI_LITE_IPIF_I_s_axi_aresetn_0_UNCONNECTED;
  wire [1:0]NLW_AXI_LITE_IPIF_I_s_axi_araddr_UNCONNECTED;
  wire [0:0]NLW_AXI_LITE_IPIF_I_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_AXI_LITE_IPIF_I_s_axi_rresp_UNCONNECTED;
  wire NLW_UARTLITE_CORE_I_interrupt_UNCONNECTED;
  wire NLW_UARTLITE_CORE_I_rx_Data_Present_Pre_reg_0_UNCONNECTED;
  wire NLW_UARTLITE_CORE_I_tx_Buffer_Empty_Pre_reg_0_UNCONNECTED;

  assign s_axi_awready = s_axi_wready;
  system_axi_uartlite_0_0__axi_lite_ipif AXI_LITE_IPIF_I
       (.Bus_RNW_reg(\I_SLAVE_ATTACHMENT/I_DECODER/Bus_RNW_reg ),
        .Bus_RNW_reg_reg(AXI_LITE_IPIF_I_n_14),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] (AXI_LITE_IPIF_I_n_16),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] (AXI_LITE_IPIF_I_n_9),
        .\INFERRED_GEN.cnt_i_reg[4] (\NLW_AXI_LITE_IPIF_I_INFERRED_GEN.cnt_i_reg[4]_UNCONNECTED ),
        .Q(\UARTLITE_RX_I/rx_Data_Empty ),
        .bus2ip_rdce(bus2ip_rdce),
        .bus2ip_reset(bus2ip_reset),
        .enable_interrupts(enable_interrupts),
        .fifo_wr(\UARTLITE_TX_I/fifo_wr ),
        .out({rx_Data[0],rx_Data[1],rx_Data[2],rx_Data[3],rx_Data[4],rx_Data[5],rx_Data[6],rx_Data[7]}),
        .reset_RX_FIFO(reset_RX_FIFO),
        .reset_TX_FIFO(reset_TX_FIFO),
        .rx_Buffer_Full(rx_Buffer_Full),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(NLW_AXI_LITE_IPIF_I_s_axi_araddr_UNCONNECTED[1:0]),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_aresetn_0(NLW_AXI_LITE_IPIF_I_s_axi_aresetn_0_UNCONNECTED),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr[3:2]),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(NLW_AXI_LITE_IPIF_I_s_axi_bresp_UNCONNECTED[0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata[7:0]),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(NLW_AXI_LITE_IPIF_I_s_axi_rresp_UNCONNECTED[0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata({s_axi_wdata[4],s_axi_wdata[1:0]}),
        .\s_axi_wdata[4] (AXI_LITE_IPIF_I_n_18),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid),
        .status_reg({status_reg[1],status_reg[2]}),
        .tx_Buffer_Empty_Pre_reg(tx_Buffer_Empty),
        .tx_Buffer_Full(tx_Buffer_Full));
  system_axi_uartlite_0_0__uartlite_core UARTLITE_CORE_I
       (.Bus_RNW_reg(\I_SLAVE_ATTACHMENT/I_DECODER/Bus_RNW_reg ),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\I_SLAVE_ATTACHMENT/I_DECODER/GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\INFERRED_GEN.cnt_i_reg[0] (AXI_LITE_IPIF_I_n_14),
        .\INFERRED_GEN.cnt_i_reg[2] (AXI_LITE_IPIF_I_n_9),
        .\INFERRED_GEN.cnt_i_reg[4] (\UARTLITE_RX_I/rx_Data_Empty ),
        .\INFERRED_GEN.cnt_i_reg[4]_0 (AXI_LITE_IPIF_I_n_16),
        .Q(tx_Buffer_Empty),
        .bus2ip_rdce(bus2ip_rdce),
        .bus2ip_reset(bus2ip_reset),
        .enable_interrupts(enable_interrupts),
        .enable_interrupts_reg_0(AXI_LITE_IPIF_I_n_18),
        .fifo_wr(\UARTLITE_TX_I/fifo_wr ),
        .interrupt(NLW_UARTLITE_CORE_I_interrupt_UNCONNECTED),
        .out({rx_Data[0],rx_Data[1],rx_Data[2],rx_Data[3],rx_Data[4],rx_Data[5],rx_Data[6],rx_Data[7]}),
        .reset_RX_FIFO(reset_RX_FIFO),
        .reset_TX_FIFO(reset_TX_FIFO),
        .rx(rx),
        .rx_Buffer_Full(rx_Buffer_Full),
        .rx_Data_Present_Pre_reg_0(NLW_UARTLITE_CORE_I_rx_Data_Present_Pre_reg_0_UNCONNECTED),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_wdata(s_axi_wdata[7:0]),
        .status_reg({status_reg[1],status_reg[2]}),
        .tx(tx),
        .tx_Buffer_Empty_Pre_reg_0(NLW_UARTLITE_CORE_I_tx_Buffer_Empty_Pre_reg_0_UNCONNECTED),
        .tx_Buffer_Full(tx_Buffer_Full));
endmodule

(* ORIG_REF_NAME = "baudrate" *) 
module system_axi_uartlite_0_0__baudrate
   (en_16x_Baud,
    EN_16x_Baud_reg_0,
    s_axi_aclk);
  output en_16x_Baud;
  input EN_16x_Baud_reg_0;
  input s_axi_aclk;

  wire EN_16x_Baud;
  wire EN_16x_Baud_reg_0;
  wire [6:0]count;
  wire \count[1]_i_2_n_0 ;
  wire \count[6]_i_2_n_0 ;
  wire [6:0]count_0;
  wire en_16x_Baud;
  wire s_axi_aclk;

  LUT6 #(
    .INIT(64'h0000000000000001)) 
    EN_16x_Baud_i_1
       (.I0(\count[6]_i_2_n_0 ),
        .I1(count[3]),
        .I2(count[2]),
        .I3(count[4]),
        .I4(count[6]),
        .I5(count[5]),
        .O(EN_16x_Baud));
  FDRE #(
    .INIT(1'b0)) 
    EN_16x_Baud_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(EN_16x_Baud),
        .Q(en_16x_Baud),
        .R(EN_16x_Baud_reg_0));
  LUT6 #(
    .INIT(64'h3333333333333332)) 
    \count[0]_i_1 
       (.I0(count[1]),
        .I1(count[0]),
        .I2(\count[1]_i_2_n_0 ),
        .I3(count[4]),
        .I4(count[2]),
        .I5(count[3]),
        .O(count_0[0]));
  LUT6 #(
    .INIT(64'h9999999999999998)) 
    \count[1]_i_1 
       (.I0(count[0]),
        .I1(count[1]),
        .I2(\count[1]_i_2_n_0 ),
        .I3(count[4]),
        .I4(count[2]),
        .I5(count[3]),
        .O(count_0[1]));
  LUT2 #(
    .INIT(4'hE)) 
    \count[1]_i_2 
       (.I0(count[5]),
        .I1(count[6]),
        .O(\count[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \count[2]_i_1 
       (.I0(count[2]),
        .I1(count[0]),
        .I2(count[1]),
        .O(count_0[2]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \count[3]_i_1 
       (.I0(count[0]),
        .I1(count[1]),
        .I2(count[2]),
        .I3(count[3]),
        .O(count_0[3]));
  LUT6 #(
    .INIT(64'hAAA9AAA9AAA9AAA8)) 
    \count[4]_i_1 
       (.I0(count[4]),
        .I1(count[2]),
        .I2(count[3]),
        .I3(\count[6]_i_2_n_0 ),
        .I4(count[5]),
        .I5(count[6]),
        .O(count_0[4]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
    \count[5]_i_1 
       (.I0(count[5]),
        .I1(count[4]),
        .I2(count[2]),
        .I3(count[3]),
        .I4(count[1]),
        .I5(count[0]),
        .O(count_0[5]));
  LUT6 #(
    .INIT(64'hCCCCCCCCCCCCCCC9)) 
    \count[6]_i_1 
       (.I0(count[5]),
        .I1(count[6]),
        .I2(count[4]),
        .I3(count[2]),
        .I4(count[3]),
        .I5(\count[6]_i_2_n_0 ),
        .O(count_0[6]));
  LUT2 #(
    .INIT(4'hE)) 
    \count[6]_i_2 
       (.I0(count[0]),
        .I1(count[1]),
        .O(\count[6]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(count_0[0]),
        .Q(count[0]),
        .R(EN_16x_Baud_reg_0));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(count_0[1]),
        .Q(count[1]),
        .R(EN_16x_Baud_reg_0));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(count_0[2]),
        .Q(count[2]),
        .R(EN_16x_Baud_reg_0));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(count_0[3]),
        .Q(count[3]),
        .R(EN_16x_Baud_reg_0));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(count_0[4]),
        .Q(count[4]),
        .R(EN_16x_Baud_reg_0));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(count_0[5]),
        .Q(count[5]),
        .R(EN_16x_Baud_reg_0));
  FDRE #(
    .INIT(1'b0)) 
    \count_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(count_0[6]),
        .Q(count[6]),
        .R(EN_16x_Baud_reg_0));
endmodule

(* ORIG_REF_NAME = "cdc_sync" *) 
module system_axi_uartlite_0_0__cdc_sync
   (fifo_Write0,
    scndry_out,
    clr_Status_reg,
    stop_Bit_Position_reg,
    stop_Bit_Position_reg_0,
    frame_err_ocrd_reg,
    sample_Point,
    en_16x_Baud,
    clr_Status,
    status_reg,
    s_axi_aresetn,
    \status_reg_reg[1] ,
    frame_err_ocrd,
    start_Edge_Detected,
    in,
    rx,
    s_axi_aclk);
  output fifo_Write0;
  output scndry_out;
  output clr_Status_reg;
  output stop_Bit_Position_reg;
  output stop_Bit_Position_reg_0;
  input frame_err_ocrd_reg;
  input sample_Point;
  input en_16x_Baud;
  input clr_Status;
  input [0:0]status_reg;
  input s_axi_aresetn;
  input \status_reg_reg[1] ;
  input frame_err_ocrd;
  input start_Edge_Detected;
  input [0:0]in;
  input rx;
  input s_axi_aclk;

  wire clr_Status;
  wire clr_Status_reg;
  wire en_16x_Baud;
  wire fifo_Write0;
  wire frame_err_ocrd;
  wire frame_err_ocrd_reg;
  wire [0:0]in;
  wire rx;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire s_level_out_d1_cdc_to;
  wire s_level_out_d2;
  wire s_level_out_d3;
  wire sample_Point;
  wire scndry_out;
  wire start_Edge_Detected;
  wire [0:0]status_reg;
  wire \status_reg_reg[1] ;
  wire stop_Bit_Position_reg;
  wire stop_Bit_Position_reg_0;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rx),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(scndry_out),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFBFFFFFF4000)) 
    \SERIAL_TO_PARALLEL[1].fifo_din[1]_i_1 
       (.I0(frame_err_ocrd_reg),
        .I1(sample_Point),
        .I2(scndry_out),
        .I3(en_16x_Baud),
        .I4(start_Edge_Detected),
        .I5(in),
        .O(stop_Bit_Position_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    fifo_Write_i_1
       (.I0(frame_err_ocrd_reg),
        .I1(sample_Point),
        .I2(en_16x_Baud),
        .I3(scndry_out),
        .O(fifo_Write0));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT5 #(
    .INIT(32'h00FF0080)) 
    frame_err_ocrd_i_1
       (.I0(frame_err_ocrd_reg),
        .I1(sample_Point),
        .I2(en_16x_Baud),
        .I3(scndry_out),
        .I4(frame_err_ocrd),
        .O(stop_Bit_Position_reg));
  LUT5 #(
    .INIT(32'h45004400)) 
    \status_reg[1]_i_1 
       (.I0(clr_Status),
        .I1(status_reg),
        .I2(scndry_out),
        .I3(s_axi_aresetn),
        .I4(\status_reg_reg[1] ),
        .O(clr_Status_reg));
endmodule

(* ORIG_REF_NAME = "cntr_incr_decr_addn_f" *) 
module system_axi_uartlite_0_0__cntr_incr_decr_addn_f
   (SS,
    Q,
    fifo_full_p1,
    tx_Start0,
    \INFERRED_GEN.cnt_i_reg[4]_0 ,
    s_axi_aresetn,
    fifo_Read,
    \INFERRED_GEN.cnt_i_reg[2]_0 ,
    tx_Buffer_Full,
    Bus_RNW_reg,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    tx_Start_reg,
    tx_DataBits,
    tx_Start,
    s_axi_aclk);
  output [0:0]SS;
  output [4:0]Q;
  output fifo_full_p1;
  output tx_Start0;
  input \INFERRED_GEN.cnt_i_reg[4]_0 ;
  input s_axi_aresetn;
  input fifo_Read;
  input \INFERRED_GEN.cnt_i_reg[2]_0 ;
  input tx_Buffer_Full;
  input Bus_RNW_reg;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  input tx_Start_reg;
  input tx_DataBits;
  input tx_Start;
  input s_axi_aclk;

  wire Bus_RNW_reg;
  wire FIFO_Full_i_2_n_0;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \INFERRED_GEN.cnt_i[3]_i_2__0_n_0 ;
  wire \INFERRED_GEN.cnt_i[4]_i_3__0_n_0 ;
  wire \INFERRED_GEN.cnt_i[4]_i_4__0_n_0 ;
  wire \INFERRED_GEN.cnt_i_reg[2]_0 ;
  wire \INFERRED_GEN.cnt_i_reg[4]_0 ;
  wire [4:0]Q;
  wire [0:0]SS;
  wire [4:0]addr_i_p1;
  wire fifo_Read;
  wire fifo_full_p1;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire tx_Buffer_Full;
  wire tx_DataBits;
  wire tx_Start;
  wire tx_Start0;
  wire tx_Start_reg;

  LUT6 #(
    .INIT(64'h0000000002090000)) 
    FIFO_Full_i_1
       (.I0(Q[0]),
        .I1(\INFERRED_GEN.cnt_i_reg[2]_0 ),
        .I2(Q[4]),
        .I3(fifo_Read),
        .I4(Q[3]),
        .I5(FIFO_Full_i_2_n_0),
        .O(fifo_full_p1));
  LUT2 #(
    .INIT(4'h7)) 
    FIFO_Full_i_2
       (.I0(Q[1]),
        .I1(Q[2]),
        .O(FIFO_Full_i_2_n_0));
  LUT6 #(
    .INIT(64'hBBB4BBBB444B4444)) 
    \INFERRED_GEN.cnt_i[0]_i_1 
       (.I0(Q[4]),
        .I1(fifo_Read),
        .I2(tx_Buffer_Full),
        .I3(Bus_RNW_reg),
        .I4(\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .I5(Q[0]),
        .O(addr_i_p1[0]));
  LUT5 #(
    .INIT(32'hAA659AAA)) 
    \INFERRED_GEN.cnt_i[1]_i_1 
       (.I0(Q[1]),
        .I1(Q[4]),
        .I2(fifo_Read),
        .I3(\INFERRED_GEN.cnt_i_reg[2]_0 ),
        .I4(Q[0]),
        .O(addr_i_p1[1]));
  LUT6 #(
    .INIT(64'hF4FF0B00FFBF0040)) 
    \INFERRED_GEN.cnt_i[2]_i_1 
       (.I0(Q[4]),
        .I1(fifo_Read),
        .I2(\INFERRED_GEN.cnt_i_reg[2]_0 ),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(Q[1]),
        .O(addr_i_p1[2]));
  LUT6 #(
    .INIT(64'hAAAA6AAAAAA9AAAA)) 
    \INFERRED_GEN.cnt_i[3]_i_1 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(\INFERRED_GEN.cnt_i[3]_i_2__0_n_0 ),
        .I4(\INFERRED_GEN.cnt_i_reg[2]_0 ),
        .I5(Q[0]),
        .O(addr_i_p1[3]));
  LUT2 #(
    .INIT(4'hB)) 
    \INFERRED_GEN.cnt_i[3]_i_2__0 
       (.I0(Q[4]),
        .I1(fifo_Read),
        .O(\INFERRED_GEN.cnt_i[3]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \INFERRED_GEN.cnt_i[4]_i_1__0 
       (.I0(\INFERRED_GEN.cnt_i_reg[4]_0 ),
        .I1(s_axi_aresetn),
        .O(SS));
  LUT6 #(
    .INIT(64'hF0F0FAFAF003F0F0)) 
    \INFERRED_GEN.cnt_i[4]_i_2 
       (.I0(\INFERRED_GEN.cnt_i[4]_i_3__0_n_0 ),
        .I1(fifo_Read),
        .I2(Q[4]),
        .I3(\INFERRED_GEN.cnt_i[4]_i_4__0_n_0 ),
        .I4(Q[0]),
        .I5(\INFERRED_GEN.cnt_i_reg[2]_0 ),
        .O(addr_i_p1[4]));
  LUT4 #(
    .INIT(16'h0004)) 
    \INFERRED_GEN.cnt_i[4]_i_3__0 
       (.I0(Q[3]),
        .I1(fifo_Read),
        .I2(Q[2]),
        .I3(Q[1]),
        .O(\INFERRED_GEN.cnt_i[4]_i_3__0_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \INFERRED_GEN.cnt_i[4]_i_4__0 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[3]),
        .O(\INFERRED_GEN.cnt_i[4]_i_4__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \INFERRED_GEN.cnt_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(addr_i_p1[0]),
        .Q(Q[0]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \INFERRED_GEN.cnt_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(addr_i_p1[1]),
        .Q(Q[1]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \INFERRED_GEN.cnt_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(addr_i_p1[2]),
        .Q(Q[2]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \INFERRED_GEN.cnt_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(addr_i_p1[3]),
        .Q(Q[3]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \INFERRED_GEN.cnt_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(addr_i_p1[4]),
        .Q(Q[4]),
        .S(SS));
  LUT4 #(
    .INIT(16'h0F02)) 
    tx_Start_i_1
       (.I0(tx_Start_reg),
        .I1(Q[4]),
        .I2(tx_DataBits),
        .I3(tx_Start),
        .O(tx_Start0));
endmodule

(* ORIG_REF_NAME = "cntr_incr_decr_addn_f" *) 
module system_axi_uartlite_0_0__cntr_incr_decr_addn_f_2
   (SS,
    fifo_full_p1,
    Q,
    Interrupt0,
    \INFERRED_GEN.cnt_i_reg[4]_0 ,
    s_axi_aresetn,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    Bus_RNW_reg,
    \INFERRED_GEN.cnt_i_reg[0]_0 ,
    valid_rx,
    \INFERRED_GEN.cnt_i_reg[0]_1 ,
    fifo_Write,
    \INFERRED_GEN.cnt_i_reg[4]_1 ,
    rx_Data_Present_Pre,
    enable_interrupts,
    Interrupt_reg,
    tx_Buffer_Empty_Pre,
    s_axi_aclk);
  output [0:0]SS;
  output fifo_full_p1;
  output [4:0]Q;
  output Interrupt0;
  input \INFERRED_GEN.cnt_i_reg[4]_0 ;
  input s_axi_aresetn;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  input Bus_RNW_reg;
  input \INFERRED_GEN.cnt_i_reg[0]_0 ;
  input valid_rx;
  input \INFERRED_GEN.cnt_i_reg[0]_1 ;
  input fifo_Write;
  input \INFERRED_GEN.cnt_i_reg[4]_1 ;
  input rx_Data_Present_Pre;
  input enable_interrupts;
  input [0:0]Interrupt_reg;
  input tx_Buffer_Empty_Pre;
  input s_axi_aclk;

  wire Bus_RNW_reg;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \INFERRED_GEN.cnt_i[4]_i_3_n_0 ;
  wire \INFERRED_GEN.cnt_i[4]_i_4_n_0 ;
  wire \INFERRED_GEN.cnt_i[4]_i_5__0_n_0 ;
  wire \INFERRED_GEN.cnt_i_reg[0]_0 ;
  wire \INFERRED_GEN.cnt_i_reg[0]_1 ;
  wire \INFERRED_GEN.cnt_i_reg[4]_0 ;
  wire \INFERRED_GEN.cnt_i_reg[4]_1 ;
  wire [4:0]Q;
  wire [0:0]SS;
  wire [4:0]addr_i_p1;
  wire fifo_Write;
  wire fifo_full_p1;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire valid_rx;

  LUT6 #(
    .INIT(64'h0000000004090909)) 
    FIFO_Full_i_1__0
       (.I0(\INFERRED_GEN.cnt_i[4]_i_5__0_n_0 ),
        .I1(Q[0]),
        .I2(Q[4]),
        .I3(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .I4(Bus_RNW_reg),
        .I5(\INFERRED_GEN.cnt_i[4]_i_4_n_0 ),
        .O(fifo_full_p1));
  LUT5 #(
    .INIT(32'hA6AA5955)) 
    \INFERRED_GEN.cnt_i[0]_i_1__0 
       (.I0(\INFERRED_GEN.cnt_i_reg[0]_0 ),
        .I1(valid_rx),
        .I2(\INFERRED_GEN.cnt_i_reg[0]_1 ),
        .I3(fifo_Write),
        .I4(Q[0]),
        .O(addr_i_p1[0]));
  LUT6 #(
    .INIT(64'hDFFFFF20200000DF)) 
    \INFERRED_GEN.cnt_i[1]_i_1__0 
       (.I0(fifo_Write),
        .I1(\INFERRED_GEN.cnt_i_reg[0]_1 ),
        .I2(valid_rx),
        .I3(Q[0]),
        .I4(\INFERRED_GEN.cnt_i_reg[0]_0 ),
        .I5(Q[1]),
        .O(addr_i_p1[1]));
  LUT5 #(
    .INIT(32'hF7EF0810)) 
    \INFERRED_GEN.cnt_i[2]_i_1__0 
       (.I0(\INFERRED_GEN.cnt_i_reg[0]_0 ),
        .I1(Q[0]),
        .I2(\INFERRED_GEN.cnt_i[4]_i_5__0_n_0 ),
        .I3(Q[1]),
        .I4(Q[2]),
        .O(addr_i_p1[2]));
  LUT6 #(
    .INIT(64'hF7FF0800FFEF0010)) 
    \INFERRED_GEN.cnt_i[3]_i_1__0 
       (.I0(\INFERRED_GEN.cnt_i_reg[0]_0 ),
        .I1(Q[0]),
        .I2(\INFERRED_GEN.cnt_i[4]_i_5__0_n_0 ),
        .I3(Q[1]),
        .I4(Q[3]),
        .I5(Q[2]),
        .O(addr_i_p1[3]));
  LUT2 #(
    .INIT(4'hB)) 
    \INFERRED_GEN.cnt_i[4]_i_1 
       (.I0(\INFERRED_GEN.cnt_i_reg[4]_0 ),
        .I1(s_axi_aresetn),
        .O(SS));
  LUT6 #(
    .INIT(64'hF0F0FAFAF00CF0F0)) 
    \INFERRED_GEN.cnt_i[4]_i_2__0 
       (.I0(\INFERRED_GEN.cnt_i[4]_i_3_n_0 ),
        .I1(\INFERRED_GEN.cnt_i_reg[4]_1 ),
        .I2(Q[4]),
        .I3(\INFERRED_GEN.cnt_i[4]_i_4_n_0 ),
        .I4(Q[0]),
        .I5(\INFERRED_GEN.cnt_i[4]_i_5__0_n_0 ),
        .O(addr_i_p1[4]));
  LUT5 #(
    .INIT(32'h01000000)) 
    \INFERRED_GEN.cnt_i[4]_i_3 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Bus_RNW_reg),
        .I4(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .O(\INFERRED_GEN.cnt_i[4]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \INFERRED_GEN.cnt_i[4]_i_4 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[3]),
        .O(\INFERRED_GEN.cnt_i[4]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hDF)) 
    \INFERRED_GEN.cnt_i[4]_i_5__0 
       (.I0(fifo_Write),
        .I1(\INFERRED_GEN.cnt_i_reg[0]_1 ),
        .I2(valid_rx),
        .O(\INFERRED_GEN.cnt_i[4]_i_5__0_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \INFERRED_GEN.cnt_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(addr_i_p1[0]),
        .Q(Q[0]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \INFERRED_GEN.cnt_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(addr_i_p1[1]),
        .Q(Q[1]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \INFERRED_GEN.cnt_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(addr_i_p1[2]),
        .Q(Q[2]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \INFERRED_GEN.cnt_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(addr_i_p1[3]),
        .Q(Q[3]),
        .S(SS));
  FDSE #(
    .INIT(1'b1)) 
    \INFERRED_GEN.cnt_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(addr_i_p1[4]),
        .Q(Q[4]),
        .S(SS));
endmodule

(* ORIG_REF_NAME = "dynshreg_f" *) 
module system_axi_uartlite_0_0__dynshreg_f
   (mux_Out,
    p_5_in,
    serial_Data_reg,
    serial_Data_reg_0,
    fifo_wr,
    s_axi_wdata,
    Q,
    s_axi_aclk);
  output mux_Out;
  input p_5_in;
  input serial_Data_reg;
  input serial_Data_reg_0;
  input fifo_wr;
  input [7:0]s_axi_wdata;
  input [3:0]Q;
  input s_axi_aclk;

  wire [3:0]Q;
  wire [0:7]fifo_DOut;
  wire fifo_wr;
  wire mux_Out;
  wire p_5_in;
  wire s_axi_aclk;
  wire [7:0]s_axi_wdata;
  wire serial_Data_i_2_n_0;
  wire serial_Data_i_3_n_0;
  wire serial_Data_i_4_n_0;
  wire serial_Data_i_5_n_0;
  wire serial_Data_reg;
  wire serial_Data_reg_0;

  (* srl_bus_name = "U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][0]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][0]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[7]),
        .Q(fifo_DOut[0]));
  (* srl_bus_name = "U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][1]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][1]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[6]),
        .Q(fifo_DOut[1]));
  (* srl_bus_name = "U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][2]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][2]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[5]),
        .Q(fifo_DOut[2]));
  (* srl_bus_name = "U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][3]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][3]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[4]),
        .Q(fifo_DOut[3]));
  (* srl_bus_name = "U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][4]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][4]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[3]),
        .Q(fifo_DOut[4]));
  (* srl_bus_name = "U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][5]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][5]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[2]),
        .Q(fifo_DOut[5]));
  (* srl_bus_name = "U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][6]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][6]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[1]),
        .Q(fifo_DOut[6]));
  (* srl_bus_name = "U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "U0/\UARTLITE_CORE_I/UARTLITE_TX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][7]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][7]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(s_axi_wdata[0]),
        .Q(fifo_DOut[7]));
  LUT4 #(
    .INIT(16'hFFFE)) 
    serial_Data_i_1
       (.I0(serial_Data_i_2_n_0),
        .I1(serial_Data_i_3_n_0),
        .I2(serial_Data_i_4_n_0),
        .I3(serial_Data_i_5_n_0),
        .O(mux_Out));
  LUT5 #(
    .INIT(32'h44400040)) 
    serial_Data_i_2
       (.I0(serial_Data_reg),
        .I1(p_5_in),
        .I2(fifo_DOut[2]),
        .I3(serial_Data_reg_0),
        .I4(fifo_DOut[6]),
        .O(serial_Data_i_2_n_0));
  LUT5 #(
    .INIT(32'h88800080)) 
    serial_Data_i_3
       (.I0(serial_Data_reg_0),
        .I1(serial_Data_reg),
        .I2(fifo_DOut[5]),
        .I3(p_5_in),
        .I4(fifo_DOut[7]),
        .O(serial_Data_i_3_n_0));
  LUT5 #(
    .INIT(32'h44400040)) 
    serial_Data_i_4
       (.I0(serial_Data_reg_0),
        .I1(serial_Data_reg),
        .I2(fifo_DOut[1]),
        .I3(p_5_in),
        .I4(fifo_DOut[3]),
        .O(serial_Data_i_4_n_0));
  LUT5 #(
    .INIT(32'h000A000C)) 
    serial_Data_i_5
       (.I0(fifo_DOut[4]),
        .I1(fifo_DOut[0]),
        .I2(p_5_in),
        .I3(serial_Data_reg),
        .I4(serial_Data_reg_0),
        .O(serial_Data_i_5_n_0));
endmodule

(* ORIG_REF_NAME = "dynshreg_f" *) 
module system_axi_uartlite_0_0__dynshreg_f_3
   (out,
    valid_rx,
    \INFERRED_GEN.data_reg[15][0]_srl16_0 ,
    fifo_Write,
    in,
    Q,
    s_axi_aclk);
  output [7:0]out;
  input valid_rx;
  input \INFERRED_GEN.data_reg[15][0]_srl16_0 ;
  input fifo_Write;
  input [0:7]in;
  input [3:0]Q;
  input s_axi_aclk;

  wire \INFERRED_GEN.data_reg[15][0]_srl16_0 ;
  wire [3:0]Q;
  wire fifo_Write;
  wire fifo_wr;
  wire [0:7]in;
  wire [7:0]out;
  wire s_axi_aclk;
  wire valid_rx;

  (* srl_bus_name = "U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][0]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][0]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(in[0]),
        .Q(out[7]));
  (* srl_bus_name = "U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][1]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][1]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(in[1]),
        .Q(out[6]));
  (* srl_bus_name = "U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][2]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][2]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(in[2]),
        .Q(out[5]));
  (* srl_bus_name = "U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][3]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][3]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(in[3]),
        .Q(out[4]));
  (* srl_bus_name = "U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][4]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][4]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(in[4]),
        .Q(out[3]));
  (* srl_bus_name = "U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][5]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][5]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(in[5]),
        .Q(out[2]));
  (* srl_bus_name = "U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][6]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][6]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(in[6]),
        .Q(out[1]));
  (* srl_bus_name = "U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15] " *) 
  (* srl_name = "U0/\UARTLITE_CORE_I/UARTLITE_RX_I/SRL_FIFO_I/I_SRL_FIFO_RBU_F/DYNSHREG_F_I/INFERRED_GEN.data_reg[15][7]_srl16 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \INFERRED_GEN.data_reg[15][7]_srl16 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(fifo_wr),
        .CLK(s_axi_aclk),
        .D(in[7]),
        .Q(out[0]));
  LUT3 #(
    .INIT(8'h20)) 
    \INFERRED_GEN.data_reg[15][7]_srl16_i_1__0 
       (.I0(valid_rx),
        .I1(\INFERRED_GEN.data_reg[15][0]_srl16_0 ),
        .I2(fifo_Write),
        .O(fifo_wr));
endmodule

(* ORIG_REF_NAME = "pselect_f" *) 
module system_axi_uartlite_0_0__pselect_f
   (ce_expnd_i_3,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 );
  output ce_expnd_i_3;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ;

  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ;
  wire ce_expnd_i_3;

  LUT2 #(
    .INIT(4'h1)) 
    CS
       (.I0(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ),
        .I1(\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ),
        .O(ce_expnd_i_3));
endmodule

(* ORIG_REF_NAME = "pselect_f" *) 
module system_axi_uartlite_0_0__pselect_f__parameterized1
   (ce_expnd_i_1,
    \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] ,
    \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_0 );
  output ce_expnd_i_1;
  input \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] ;
  input \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_0 ;

  wire \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] ;
  wire \GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_0 ;
  wire ce_expnd_i_1;

  LUT2 #(
    .INIT(4'h2)) 
    CS
       (.I0(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2] ),
        .I1(\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_0 ),
        .O(ce_expnd_i_1));
endmodule

(* ORIG_REF_NAME = "slave_attachment" *) 
module system_axi_uartlite_0_0__slave_attachment
   (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ,
    s_axi_rresp,
    Bus_RNW_reg_reg,
    s_axi_rvalid,
    s_axi_bvalid,
    s_axi_bresp,
    s_axi_aresetn_0,
    fifo_wr,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ,
    reset_TX_FIFO,
    reset_RX_FIFO,
    s_axi_arready,
    s_axi_wready,
    Bus_RNW_reg_reg_0,
    \INFERRED_GEN.cnt_i_reg[4] ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ,
    bus2ip_rdce,
    \s_axi_wdata[4] ,
    s_axi_rdata,
    bus2ip_reset,
    s_axi_aclk,
    tx_Buffer_Full,
    Q,
    s_axi_aresetn,
    tx_Buffer_Empty_Pre_reg,
    s_axi_wdata,
    s_axi_arvalid,
    s_axi_awvalid,
    s_axi_wvalid,
    out,
    rx_Buffer_Full,
    enable_interrupts,
    status_reg,
    s_axi_bready,
    s_axi_rready,
    s_axi_awaddr,
    s_axi_araddr);
  output \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ;
  output \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ;
  output [0:0]s_axi_rresp;
  output Bus_RNW_reg_reg;
  output s_axi_rvalid;
  output s_axi_bvalid;
  output [0:0]s_axi_bresp;
  output s_axi_aresetn_0;
  output fifo_wr;
  output \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ;
  output reset_TX_FIFO;
  output reset_RX_FIFO;
  output s_axi_arready;
  output s_axi_wready;
  output Bus_RNW_reg_reg_0;
  output \INFERRED_GEN.cnt_i_reg[4] ;
  output \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ;
  output [0:0]bus2ip_rdce;
  output \s_axi_wdata[4] ;
  output [7:0]s_axi_rdata;
  input bus2ip_reset;
  input s_axi_aclk;
  input tx_Buffer_Full;
  input [0:0]Q;
  input s_axi_aresetn;
  input [0:0]tx_Buffer_Empty_Pre_reg;
  input [2:0]s_axi_wdata;
  input s_axi_arvalid;
  input s_axi_awvalid;
  input s_axi_wvalid;
  input [7:0]out;
  input rx_Buffer_Full;
  input enable_interrupts;
  input [1:0]status_reg;
  input s_axi_bready;
  input s_axi_rready;
  input [1:0]s_axi_awaddr;
  input [1:0]s_axi_araddr;

  wire Bus_RNW_reg_reg;
  wire Bus_RNW_reg_reg_0;
  wire \FSM_onehot_state[1]_i_1_n_0 ;
  wire \FSM_onehot_state[1]_i_2_n_0 ;
  wire \FSM_onehot_state_reg_n_0_[0] ;
  wire \FSM_onehot_state_reg_n_0_[1] ;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ;
  wire I_DECODER_n_10;
  wire I_DECODER_n_11;
  wire I_DECODER_n_27;
  wire I_DECODER_n_28;
  wire I_DECODER_n_9;
  wire [0:0]Q;
  wire [0:7]SIn_DBus;
  wire \bus2ip_addr_i[2]_i_1_n_0 ;
  wire \bus2ip_addr_i[3]_i_1_n_0 ;
  wire \bus2ip_addr_i_reg_n_0_[2] ;
  wire \bus2ip_addr_i_reg_n_0_[3] ;
  wire [0:0]bus2ip_rdce;
  wire bus2ip_reset;
  wire bus2ip_rnw_i;
  wire bus2ip_rnw_i_i_1_n_0;
  wire enable_interrupts;
  wire fifo_wr;
  wire [7:0]out;
  wire reset_RX_FIFO;
  wire reset_TX_FIFO;
  wire rst;
  wire rx_Buffer_Full;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [1:0]s_axi_awaddr;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bresp_i;
  wire s_axi_bvalid;
  wire [7:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rresp_i;
  wire s_axi_rvalid;
  wire [2:0]s_axi_wdata;
  wire \s_axi_wdata[4] ;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire start2;
  wire start2_i_1_n_0;
  wire [1:0]status_reg;
  wire [0:0]tx_Buffer_Empty_Pre_reg;
  wire tx_Buffer_Full;
  wire NLW_I_DECODER_FIFO_Full_reg_UNCONNECTED;
  wire \NLW_I_DECODER_INFERRED_GEN.cnt_i_reg[4]_UNCONNECTED ;
  wire NLW_I_DECODER_ip2bus_error_UNCONNECTED;
  wire NLW_I_DECODER_s_axi_aresetn_0_UNCONNECTED;
  wire [0:0]NLW_I_DECODER_s_axi_bresp_UNCONNECTED;

  LUT6 #(
    .INIT(64'hFFFF007000700070)) 
    \FSM_onehot_state[1]_i_1 
       (.I0(s_axi_awvalid),
        .I1(s_axi_wvalid),
        .I2(\FSM_onehot_state_reg_n_0_[1] ),
        .I3(s_axi_arvalid),
        .I4(\FSM_onehot_state_reg_n_0_[0] ),
        .I5(\FSM_onehot_state[1]_i_2_n_0 ),
        .O(\FSM_onehot_state[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \FSM_onehot_state[1]_i_2 
       (.I0(s_axi_bready),
        .I1(s_axi_bvalid),
        .I2(s_axi_rready),
        .I3(s_axi_rvalid),
        .O(\FSM_onehot_state[1]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "sm_read:1000,sm_write:0100,sm_resp:0001,sm_idle:0010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(I_DECODER_n_11),
        .Q(\FSM_onehot_state_reg_n_0_[0] ),
        .R(rst));
  (* FSM_ENCODED_STATES = "sm_read:1000,sm_write:0100,sm_resp:0001,sm_idle:0010" *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\FSM_onehot_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[1] ),
        .S(rst));
  (* FSM_ENCODED_STATES = "sm_read:1000,sm_write:0100,sm_resp:0001,sm_idle:0010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(I_DECODER_n_10),
        .Q(s_axi_bresp_i),
        .R(rst));
  (* FSM_ENCODED_STATES = "sm_read:1000,sm_write:0100,sm_resp:0001,sm_idle:0010" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(I_DECODER_n_9),
        .Q(s_axi_rresp_i),
        .R(rst));
  system_axi_uartlite_0_0__address_decoder I_DECODER
       (.Bus_RNW_reg_reg_0(Bus_RNW_reg_reg),
        .Bus_RNW_reg_reg_1(Bus_RNW_reg_reg_0),
        .D({I_DECODER_n_9,I_DECODER_n_10,I_DECODER_n_11}),
        .FIFO_Full_reg(NLW_I_DECODER_FIFO_Full_reg_UNCONNECTED),
        .\FSM_onehot_state_reg[0] (\FSM_onehot_state[1]_i_2_n_0 ),
        .\FSM_onehot_state_reg[3] (I_DECODER_n_27),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0] ),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_1 (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg[0]_0 ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1] ),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_1 (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg[1]_0 ),
        .\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_0 ({SIn_DBus[0],SIn_DBus[1],SIn_DBus[2],SIn_DBus[3],SIn_DBus[4],SIn_DBus[5],SIn_DBus[6],SIn_DBus[7]}),
        .\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_1 (\bus2ip_addr_i_reg_n_0_[3] ),
        .\GEN_BKEND_CE_REGISTERS[2].ce_out_i_reg[2]_2 (\bus2ip_addr_i_reg_n_0_[2] ),
        .\INFERRED_GEN.cnt_i_reg[4] (\NLW_I_DECODER_INFERRED_GEN.cnt_i_reg[4]_UNCONNECTED ),
        .Q(Q),
        .bus2ip_rdce(bus2ip_rdce),
        .bus2ip_rnw_i(bus2ip_rnw_i),
        .enable_interrupts(enable_interrupts),
        .fifo_wr(fifo_wr),
        .ip2bus_error(NLW_I_DECODER_ip2bus_error_UNCONNECTED),
        .out(out),
        .reset_RX_FIFO(reset_RX_FIFO),
        .reset_TX_FIFO(reset_TX_FIFO),
        .rx_Buffer_Full(rx_Buffer_Full),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_aresetn_0(NLW_I_DECODER_s_axi_aresetn_0_UNCONNECTED),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bready_0(I_DECODER_n_28),
        .s_axi_bresp(NLW_I_DECODER_s_axi_bresp_UNCONNECTED[0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_rvalid_i_reg({s_axi_rresp_i,s_axi_bresp_i,\FSM_onehot_state_reg_n_0_[1] ,\FSM_onehot_state_reg_n_0_[0] }),
        .s_axi_wdata(s_axi_wdata),
        .\s_axi_wdata[4] (\s_axi_wdata[4] ),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid),
        .start2(start2),
        .status_reg(status_reg),
        .tx_Buffer_Empty_Pre_reg(tx_Buffer_Empty_Pre_reg),
        .tx_Buffer_Full(tx_Buffer_Full));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \bus2ip_addr_i[2]_i_1 
       (.I0(s_axi_awaddr[0]),
        .I1(start2_i_1_n_0),
        .I2(\bus2ip_addr_i_reg_n_0_[2] ),
        .O(\bus2ip_addr_i[2]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \bus2ip_addr_i[3]_i_1 
       (.I0(s_axi_awaddr[1]),
        .I1(start2_i_1_n_0),
        .I2(\bus2ip_addr_i_reg_n_0_[3] ),
        .O(\bus2ip_addr_i[3]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\bus2ip_addr_i[2]_i_1_n_0 ),
        .Q(\bus2ip_addr_i_reg_n_0_[2] ),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \bus2ip_addr_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\bus2ip_addr_i[3]_i_1_n_0 ),
        .Q(\bus2ip_addr_i_reg_n_0_[3] ),
        .R(rst));
  LUT5 #(
    .INIT(32'hFF7FF000)) 
    bus2ip_rnw_i_i_1
       (.I0(s_axi_awvalid),
        .I1(s_axi_wvalid),
        .I2(\FSM_onehot_state_reg_n_0_[1] ),
        .I3(s_axi_arvalid),
        .I4(bus2ip_rnw_i),
        .O(bus2ip_rnw_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    bus2ip_rnw_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(bus2ip_rnw_i_i_1_n_0),
        .Q(bus2ip_rnw_i),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    rst_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(bus2ip_reset),
        .Q(rst),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_bvalid_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(I_DECODER_n_28),
        .Q(s_axi_bvalid),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(SIn_DBus[7]),
        .Q(s_axi_rdata[0]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(SIn_DBus[6]),
        .Q(s_axi_rdata[1]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(SIn_DBus[5]),
        .Q(s_axi_rdata[2]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(SIn_DBus[4]),
        .Q(s_axi_rdata[3]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(SIn_DBus[3]),
        .Q(s_axi_rdata[4]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(SIn_DBus[2]),
        .Q(s_axi_rdata[5]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(SIn_DBus[1]),
        .Q(s_axi_rdata[6]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    \s_axi_rdata_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(s_axi_rresp_i),
        .D(SIn_DBus[0]),
        .Q(s_axi_rdata[7]),
        .R(rst));
  FDRE #(
    .INIT(1'b0)) 
    s_axi_rvalid_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(I_DECODER_n_27),
        .Q(s_axi_rvalid),
        .R(rst));
  LUT4 #(
    .INIT(16'hF080)) 
    start2_i_1
       (.I0(s_axi_awvalid),
        .I1(s_axi_wvalid),
        .I2(\FSM_onehot_state_reg_n_0_[1] ),
        .I3(s_axi_arvalid),
        .O(start2_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    start2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(start2_i_1_n_0),
        .Q(start2),
        .R(rst));
endmodule

(* ORIG_REF_NAME = "srl_fifo_f" *) 
module system_axi_uartlite_0_0__srl_fifo_f
   (tx_Buffer_Full,
    mux_Out,
    Q,
    tx_Start0,
    s_axi_aclk,
    p_5_in,
    serial_Data_reg,
    serial_Data_reg_0,
    \INFERRED_GEN.cnt_i_reg[4] ,
    s_axi_aresetn,
    fifo_Read,
    \INFERRED_GEN.cnt_i_reg[2] ,
    Bus_RNW_reg,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    tx_Start_reg,
    tx_DataBits,
    tx_Start,
    fifo_wr,
    s_axi_wdata);
  output tx_Buffer_Full;
  output mux_Out;
  output [0:0]Q;
  output tx_Start0;
  input s_axi_aclk;
  input p_5_in;
  input serial_Data_reg;
  input serial_Data_reg_0;
  input \INFERRED_GEN.cnt_i_reg[4] ;
  input s_axi_aresetn;
  input fifo_Read;
  input \INFERRED_GEN.cnt_i_reg[2] ;
  input Bus_RNW_reg;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  input tx_Start_reg;
  input tx_DataBits;
  input tx_Start;
  input fifo_wr;
  input [7:0]s_axi_wdata;

  wire Bus_RNW_reg;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \INFERRED_GEN.cnt_i_reg[2] ;
  wire \INFERRED_GEN.cnt_i_reg[4] ;
  wire [0:0]Q;
  wire fifo_Read;
  wire fifo_wr;
  wire mux_Out;
  wire p_5_in;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire [7:0]s_axi_wdata;
  wire serial_Data_reg;
  wire serial_Data_reg_0;
  wire tx_Buffer_Full;
  wire tx_DataBits;
  wire tx_Start;
  wire tx_Start0;
  wire tx_Start_reg;

  system_axi_uartlite_0_0__srl_fifo_rbu_f I_SRL_FIFO_RBU_F
       (.Bus_RNW_reg(Bus_RNW_reg),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\INFERRED_GEN.cnt_i_reg[2] (\INFERRED_GEN.cnt_i_reg[2] ),
        .\INFERRED_GEN.cnt_i_reg[4] (\INFERRED_GEN.cnt_i_reg[4] ),
        .Q(Q),
        .fifo_Read(fifo_Read),
        .fifo_wr(fifo_wr),
        .mux_Out(mux_Out),
        .p_5_in(p_5_in),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_wdata(s_axi_wdata),
        .serial_Data_reg(serial_Data_reg),
        .serial_Data_reg_0(serial_Data_reg_0),
        .tx_Buffer_Full(tx_Buffer_Full),
        .tx_DataBits(tx_DataBits),
        .tx_Start(tx_Start),
        .tx_Start0(tx_Start0),
        .tx_Start_reg(tx_Start_reg));
endmodule

(* ORIG_REF_NAME = "srl_fifo_f" *) 
module system_axi_uartlite_0_0__srl_fifo_f_0
   (FIFO_Full_reg,
    \status_reg_reg[2] ,
    Q,
    Interrupt0,
    out,
    s_axi_aclk,
    \INFERRED_GEN.cnt_i_reg[4] ,
    s_axi_aresetn,
    status_reg,
    clr_Status,
    fifo_Write,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    Bus_RNW_reg,
    \INFERRED_GEN.cnt_i_reg[0] ,
    valid_rx,
    \INFERRED_GEN.cnt_i_reg[4]_0 ,
    rx_Data_Present_Pre,
    enable_interrupts,
    Interrupt_reg,
    tx_Buffer_Empty_Pre,
    in);
  output FIFO_Full_reg;
  output \status_reg_reg[2] ;
  output [0:0]Q;
  output Interrupt0;
  output [7:0]out;
  input s_axi_aclk;
  input \INFERRED_GEN.cnt_i_reg[4] ;
  input s_axi_aresetn;
  input [0:0]status_reg;
  input clr_Status;
  input fifo_Write;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  input Bus_RNW_reg;
  input \INFERRED_GEN.cnt_i_reg[0] ;
  input valid_rx;
  input \INFERRED_GEN.cnt_i_reg[4]_0 ;
  input rx_Data_Present_Pre;
  input enable_interrupts;
  input [0:0]Interrupt_reg;
  input tx_Buffer_Empty_Pre;
  input [0:7]in;

  wire Bus_RNW_reg;
  wire FIFO_Full_reg;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \INFERRED_GEN.cnt_i_reg[0] ;
  wire \INFERRED_GEN.cnt_i_reg[4] ;
  wire \INFERRED_GEN.cnt_i_reg[4]_0 ;
  wire [0:0]Q;
  wire clr_Status;
  wire fifo_Write;
  wire [0:7]in;
  wire [7:0]out;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire [0:0]status_reg;
  wire \status_reg_reg[2] ;
  wire valid_rx;
  wire NLW_I_SRL_FIFO_RBU_F_Interrupt0_UNCONNECTED;
  wire NLW_I_SRL_FIFO_RBU_F_enable_interrupts_UNCONNECTED;
  wire NLW_I_SRL_FIFO_RBU_F_rx_Data_Present_Pre_UNCONNECTED;
  wire NLW_I_SRL_FIFO_RBU_F_tx_Buffer_Empty_Pre_UNCONNECTED;
  wire [0:0]NLW_I_SRL_FIFO_RBU_F_Interrupt_reg_UNCONNECTED;

  system_axi_uartlite_0_0__srl_fifo_rbu_f_1 I_SRL_FIFO_RBU_F
       (.Bus_RNW_reg(Bus_RNW_reg),
        .FIFO_Full_reg_0(FIFO_Full_reg),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\INFERRED_GEN.cnt_i_reg[0] (\INFERRED_GEN.cnt_i_reg[0] ),
        .\INFERRED_GEN.cnt_i_reg[4] (\INFERRED_GEN.cnt_i_reg[4] ),
        .\INFERRED_GEN.cnt_i_reg[4]_0 (\INFERRED_GEN.cnt_i_reg[4]_0 ),
        .Interrupt0(NLW_I_SRL_FIFO_RBU_F_Interrupt0_UNCONNECTED),
        .Interrupt_reg(NLW_I_SRL_FIFO_RBU_F_Interrupt_reg_UNCONNECTED[0]),
        .Q(Q),
        .clr_Status(clr_Status),
        .enable_interrupts(NLW_I_SRL_FIFO_RBU_F_enable_interrupts_UNCONNECTED),
        .fifo_Write(fifo_Write),
        .in(in),
        .out(out),
        .rx_Data_Present_Pre(NLW_I_SRL_FIFO_RBU_F_rx_Data_Present_Pre_UNCONNECTED),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .status_reg(status_reg),
        .\status_reg_reg[2] (\status_reg_reg[2] ),
        .tx_Buffer_Empty_Pre(NLW_I_SRL_FIFO_RBU_F_tx_Buffer_Empty_Pre_UNCONNECTED),
        .valid_rx(valid_rx));
endmodule

(* ORIG_REF_NAME = "srl_fifo_rbu_f" *) 
module system_axi_uartlite_0_0__srl_fifo_rbu_f
   (tx_Buffer_Full,
    mux_Out,
    Q,
    tx_Start0,
    s_axi_aclk,
    p_5_in,
    serial_Data_reg,
    serial_Data_reg_0,
    \INFERRED_GEN.cnt_i_reg[4] ,
    s_axi_aresetn,
    fifo_Read,
    \INFERRED_GEN.cnt_i_reg[2] ,
    Bus_RNW_reg,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    tx_Start_reg,
    tx_DataBits,
    tx_Start,
    fifo_wr,
    s_axi_wdata);
  output tx_Buffer_Full;
  output mux_Out;
  output [0:0]Q;
  output tx_Start0;
  input s_axi_aclk;
  input p_5_in;
  input serial_Data_reg;
  input serial_Data_reg_0;
  input \INFERRED_GEN.cnt_i_reg[4] ;
  input s_axi_aresetn;
  input fifo_Read;
  input \INFERRED_GEN.cnt_i_reg[2] ;
  input Bus_RNW_reg;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  input tx_Start_reg;
  input tx_DataBits;
  input tx_Start;
  input fifo_wr;
  input [7:0]s_axi_wdata;

  wire Bus_RNW_reg;
  wire CNTR_INCR_DECR_ADDN_F_I_n_2;
  wire CNTR_INCR_DECR_ADDN_F_I_n_3;
  wire CNTR_INCR_DECR_ADDN_F_I_n_4;
  wire CNTR_INCR_DECR_ADDN_F_I_n_5;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \INFERRED_GEN.cnt_i_reg[2] ;
  wire \INFERRED_GEN.cnt_i_reg[4] ;
  wire [0:0]Q;
  wire TX_FIFO_Reset;
  wire fifo_Read;
  wire fifo_full_p1;
  wire fifo_wr;
  wire mux_Out;
  wire p_5_in;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire [7:0]s_axi_wdata;
  wire serial_Data_reg;
  wire serial_Data_reg_0;
  wire tx_Buffer_Full;
  wire tx_DataBits;
  wire tx_Start;
  wire tx_Start0;
  wire tx_Start_reg;

  system_axi_uartlite_0_0__cntr_incr_decr_addn_f CNTR_INCR_DECR_ADDN_F_I
       (.Bus_RNW_reg(Bus_RNW_reg),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\INFERRED_GEN.cnt_i_reg[2]_0 (\INFERRED_GEN.cnt_i_reg[2] ),
        .\INFERRED_GEN.cnt_i_reg[4]_0 (\INFERRED_GEN.cnt_i_reg[4] ),
        .Q({Q,CNTR_INCR_DECR_ADDN_F_I_n_2,CNTR_INCR_DECR_ADDN_F_I_n_3,CNTR_INCR_DECR_ADDN_F_I_n_4,CNTR_INCR_DECR_ADDN_F_I_n_5}),
        .SS(TX_FIFO_Reset),
        .fifo_Read(fifo_Read),
        .fifo_full_p1(fifo_full_p1),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .tx_Buffer_Full(tx_Buffer_Full),
        .tx_DataBits(tx_DataBits),
        .tx_Start(tx_Start),
        .tx_Start0(tx_Start0),
        .tx_Start_reg(tx_Start_reg));
  system_axi_uartlite_0_0__dynshreg_f DYNSHREG_F_I
       (.Q({CNTR_INCR_DECR_ADDN_F_I_n_2,CNTR_INCR_DECR_ADDN_F_I_n_3,CNTR_INCR_DECR_ADDN_F_I_n_4,CNTR_INCR_DECR_ADDN_F_I_n_5}),
        .fifo_wr(fifo_wr),
        .mux_Out(mux_Out),
        .p_5_in(p_5_in),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_wdata(s_axi_wdata),
        .serial_Data_reg(serial_Data_reg),
        .serial_Data_reg_0(serial_Data_reg_0));
  FDRE #(
    .INIT(1'b0)) 
    FIFO_Full_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(fifo_full_p1),
        .Q(tx_Buffer_Full),
        .R(TX_FIFO_Reset));
endmodule

(* ORIG_REF_NAME = "srl_fifo_rbu_f" *) 
module system_axi_uartlite_0_0__srl_fifo_rbu_f_1
   (FIFO_Full_reg_0,
    \status_reg_reg[2] ,
    Q,
    Interrupt0,
    out,
    s_axi_aclk,
    \INFERRED_GEN.cnt_i_reg[4] ,
    s_axi_aresetn,
    status_reg,
    clr_Status,
    fifo_Write,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    Bus_RNW_reg,
    \INFERRED_GEN.cnt_i_reg[0] ,
    valid_rx,
    \INFERRED_GEN.cnt_i_reg[4]_0 ,
    rx_Data_Present_Pre,
    enable_interrupts,
    Interrupt_reg,
    tx_Buffer_Empty_Pre,
    in);
  output FIFO_Full_reg_0;
  output \status_reg_reg[2] ;
  output [0:0]Q;
  output Interrupt0;
  output [7:0]out;
  input s_axi_aclk;
  input \INFERRED_GEN.cnt_i_reg[4] ;
  input s_axi_aresetn;
  input [0:0]status_reg;
  input clr_Status;
  input fifo_Write;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  input Bus_RNW_reg;
  input \INFERRED_GEN.cnt_i_reg[0] ;
  input valid_rx;
  input \INFERRED_GEN.cnt_i_reg[4]_0 ;
  input rx_Data_Present_Pre;
  input enable_interrupts;
  input [0:0]Interrupt_reg;
  input tx_Buffer_Empty_Pre;
  input [0:7]in;

  wire Bus_RNW_reg;
  wire CNTR_INCR_DECR_ADDN_F_I_n_3;
  wire CNTR_INCR_DECR_ADDN_F_I_n_4;
  wire CNTR_INCR_DECR_ADDN_F_I_n_5;
  wire CNTR_INCR_DECR_ADDN_F_I_n_6;
  wire FIFO_Full_reg_0;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \INFERRED_GEN.cnt_i_reg[0] ;
  wire \INFERRED_GEN.cnt_i_reg[4] ;
  wire \INFERRED_GEN.cnt_i_reg[4]_0 ;
  wire [0:0]Q;
  wire RX_FIFO_Reset;
  wire clr_Status;
  wire fifo_Write;
  wire fifo_full_p1;
  wire [0:7]in;
  wire [7:0]out;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire [0:0]status_reg;
  wire \status_reg_reg[2] ;
  wire valid_rx;
  wire NLW_CNTR_INCR_DECR_ADDN_F_I_Interrupt0_UNCONNECTED;
  wire NLW_CNTR_INCR_DECR_ADDN_F_I_enable_interrupts_UNCONNECTED;
  wire NLW_CNTR_INCR_DECR_ADDN_F_I_rx_Data_Present_Pre_UNCONNECTED;
  wire NLW_CNTR_INCR_DECR_ADDN_F_I_tx_Buffer_Empty_Pre_UNCONNECTED;
  wire [0:0]NLW_CNTR_INCR_DECR_ADDN_F_I_Interrupt_reg_UNCONNECTED;

  system_axi_uartlite_0_0__cntr_incr_decr_addn_f_2 CNTR_INCR_DECR_ADDN_F_I
       (.Bus_RNW_reg(Bus_RNW_reg),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\INFERRED_GEN.cnt_i_reg[0]_0 (\INFERRED_GEN.cnt_i_reg[0] ),
        .\INFERRED_GEN.cnt_i_reg[0]_1 (FIFO_Full_reg_0),
        .\INFERRED_GEN.cnt_i_reg[4]_0 (\INFERRED_GEN.cnt_i_reg[4] ),
        .\INFERRED_GEN.cnt_i_reg[4]_1 (\INFERRED_GEN.cnt_i_reg[4]_0 ),
        .Interrupt0(NLW_CNTR_INCR_DECR_ADDN_F_I_Interrupt0_UNCONNECTED),
        .Interrupt_reg(NLW_CNTR_INCR_DECR_ADDN_F_I_Interrupt_reg_UNCONNECTED[0]),
        .Q({Q,CNTR_INCR_DECR_ADDN_F_I_n_3,CNTR_INCR_DECR_ADDN_F_I_n_4,CNTR_INCR_DECR_ADDN_F_I_n_5,CNTR_INCR_DECR_ADDN_F_I_n_6}),
        .SS(RX_FIFO_Reset),
        .enable_interrupts(NLW_CNTR_INCR_DECR_ADDN_F_I_enable_interrupts_UNCONNECTED),
        .fifo_Write(fifo_Write),
        .fifo_full_p1(fifo_full_p1),
        .rx_Data_Present_Pre(NLW_CNTR_INCR_DECR_ADDN_F_I_rx_Data_Present_Pre_UNCONNECTED),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .tx_Buffer_Empty_Pre(NLW_CNTR_INCR_DECR_ADDN_F_I_tx_Buffer_Empty_Pre_UNCONNECTED),
        .valid_rx(valid_rx));
  system_axi_uartlite_0_0__dynshreg_f_3 DYNSHREG_F_I
       (.\INFERRED_GEN.data_reg[15][0]_srl16_0 (FIFO_Full_reg_0),
        .Q({CNTR_INCR_DECR_ADDN_F_I_n_3,CNTR_INCR_DECR_ADDN_F_I_n_4,CNTR_INCR_DECR_ADDN_F_I_n_5,CNTR_INCR_DECR_ADDN_F_I_n_6}),
        .fifo_Write(fifo_Write),
        .in(in),
        .out(out),
        .s_axi_aclk(s_axi_aclk),
        .valid_rx(valid_rx));
  FDRE #(
    .INIT(1'b0)) 
    FIFO_Full_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(fifo_full_p1),
        .Q(FIFO_Full_reg_0),
        .R(RX_FIFO_Reset));
  LUT5 #(
    .INIT(32'h32220000)) 
    \status_reg[2]_i_1 
       (.I0(status_reg),
        .I1(clr_Status),
        .I2(FIFO_Full_reg_0),
        .I3(fifo_Write),
        .I4(s_axi_aresetn),
        .O(\status_reg_reg[2] ));
endmodule

(* ORIG_REF_NAME = "uartlite_core" *) 
module system_axi_uartlite_0_0__uartlite_core
   (bus2ip_reset,
    rx_Buffer_Full,
    tx_Buffer_Full,
    tx,
    interrupt,
    status_reg,
    enable_interrupts,
    Q,
    \INFERRED_GEN.cnt_i_reg[4] ,
    out,
    s_axi_aclk,
    reset_TX_FIFO,
    reset_RX_FIFO,
    bus2ip_rdce,
    enable_interrupts_reg_0,
    tx_Buffer_Empty_Pre_reg_0,
    rx_Data_Present_Pre_reg_0,
    s_axi_aresetn,
    \INFERRED_GEN.cnt_i_reg[2] ,
    Bus_RNW_reg,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    \INFERRED_GEN.cnt_i_reg[0] ,
    \INFERRED_GEN.cnt_i_reg[4]_0 ,
    rx,
    fifo_wr,
    s_axi_wdata);
  output bus2ip_reset;
  output rx_Buffer_Full;
  output tx_Buffer_Full;
  output tx;
  output interrupt;
  output [1:0]status_reg;
  output enable_interrupts;
  output [0:0]Q;
  output [0:0]\INFERRED_GEN.cnt_i_reg[4] ;
  output [7:0]out;
  input s_axi_aclk;
  input reset_TX_FIFO;
  input reset_RX_FIFO;
  input [0:0]bus2ip_rdce;
  input enable_interrupts_reg_0;
  input tx_Buffer_Empty_Pre_reg_0;
  input rx_Data_Present_Pre_reg_0;
  input s_axi_aresetn;
  input \INFERRED_GEN.cnt_i_reg[2] ;
  input Bus_RNW_reg;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  input \INFERRED_GEN.cnt_i_reg[0] ;
  input \INFERRED_GEN.cnt_i_reg[4]_0 ;
  input rx;
  input fifo_wr;
  input [7:0]s_axi_wdata;

  wire Bus_RNW_reg;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \INFERRED_GEN.cnt_i_reg[0] ;
  wire \INFERRED_GEN.cnt_i_reg[2] ;
  wire [0:0]\INFERRED_GEN.cnt_i_reg[4] ;
  wire \INFERRED_GEN.cnt_i_reg[4]_0 ;
  wire [0:0]Q;
  wire UARTLITE_RX_I_n_2;
  wire UARTLITE_RX_I_n_3;
  wire UARTLITE_RX_I_n_4;
  wire [0:0]bus2ip_rdce;
  wire bus2ip_reset;
  wire clr_Status;
  wire en_16x_Baud;
  wire enable_interrupts;
  wire enable_interrupts_reg_0;
  wire fifo_wr;
  wire [7:0]out;
  wire reset_RX_FIFO;
  wire reset_RX_FIFO_reg_n_0;
  wire reset_TX_FIFO;
  wire reset_TX_FIFO_reg_n_0;
  wire rx;
  wire rx_Buffer_Full;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire [7:0]s_axi_wdata;
  wire [1:0]status_reg;
  wire tx;
  wire tx_Buffer_Full;
  wire NLW_UARTLITE_RX_I_Interrupt0_UNCONNECTED;
  wire NLW_UARTLITE_RX_I_enable_interrupts_UNCONNECTED;
  wire NLW_UARTLITE_RX_I_rx_Data_Present_Pre_UNCONNECTED;
  wire NLW_UARTLITE_RX_I_tx_Buffer_Empty_Pre_UNCONNECTED;
  wire [0:0]NLW_UARTLITE_RX_I_Interrupt_reg_UNCONNECTED;

  system_axi_uartlite_0_0__baudrate BAUD_RATE_I
       (.EN_16x_Baud_reg_0(bus2ip_reset),
        .en_16x_Baud(en_16x_Baud),
        .s_axi_aclk(s_axi_aclk));
  system_axi_uartlite_0_0__uartlite_rx UARTLITE_RX_I
       (.Bus_RNW_reg(Bus_RNW_reg),
        .FIFO_Full_reg(rx_Buffer_Full),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\INFERRED_GEN.cnt_i_reg[0] (\INFERRED_GEN.cnt_i_reg[0] ),
        .\INFERRED_GEN.cnt_i_reg[4] (reset_RX_FIFO_reg_n_0),
        .\INFERRED_GEN.cnt_i_reg[4]_0 (\INFERRED_GEN.cnt_i_reg[4]_0 ),
        .Interrupt0(NLW_UARTLITE_RX_I_Interrupt0_UNCONNECTED),
        .Interrupt_reg(NLW_UARTLITE_RX_I_Interrupt_reg_UNCONNECTED[0]),
        .Q(\INFERRED_GEN.cnt_i_reg[4] ),
        .clr_Status(clr_Status),
        .clr_Status_reg(UARTLITE_RX_I_n_3),
        .data_shift_reg_r_12_0(UARTLITE_RX_I_n_2),
        .en_16x_Baud(en_16x_Baud),
        .enable_interrupts(NLW_UARTLITE_RX_I_enable_interrupts_UNCONNECTED),
        .out(out),
        .rx(rx),
        .rx_Data_Present_Pre(NLW_UARTLITE_RX_I_rx_Data_Present_Pre_UNCONNECTED),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_aresetn_0(bus2ip_reset),
        .status_reg(status_reg),
        .\status_reg_reg[2] (UARTLITE_RX_I_n_4),
        .tx_Buffer_Empty_Pre(NLW_UARTLITE_RX_I_tx_Buffer_Empty_Pre_UNCONNECTED));
  system_axi_uartlite_0_0__uartlite_tx UARTLITE_TX_I
       (.Bus_RNW_reg(Bus_RNW_reg),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\INFERRED_GEN.cnt_i_reg[2] (\INFERRED_GEN.cnt_i_reg[2] ),
        .\INFERRED_GEN.cnt_i_reg[4] (reset_TX_FIFO_reg_n_0),
        .Q(Q),
        .\data_shift_reg[15]_0 (bus2ip_reset),
        .\data_shift_reg[15]_1 (UARTLITE_RX_I_n_2),
        .en_16x_Baud(en_16x_Baud),
        .fifo_wr(fifo_wr),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_wdata(s_axi_wdata),
        .tx(tx),
        .tx_Buffer_Full(tx_Buffer_Full));
  FDRE #(
    .INIT(1'b0)) 
    clr_Status_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(bus2ip_rdce),
        .Q(clr_Status),
        .R(bus2ip_reset));
  FDRE #(
    .INIT(1'b0)) 
    enable_interrupts_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(enable_interrupts_reg_0),
        .Q(enable_interrupts),
        .R(bus2ip_reset));
  FDSE #(
    .INIT(1'b1)) 
    reset_RX_FIFO_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(reset_RX_FIFO),
        .Q(reset_RX_FIFO_reg_n_0),
        .S(bus2ip_reset));
  FDSE #(
    .INIT(1'b1)) 
    reset_TX_FIFO_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(reset_TX_FIFO),
        .Q(reset_TX_FIFO_reg_n_0),
        .S(bus2ip_reset));
  FDRE #(
    .INIT(1'b0)) 
    \status_reg_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(UARTLITE_RX_I_n_3),
        .Q(status_reg[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \status_reg_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(UARTLITE_RX_I_n_4),
        .Q(status_reg[0]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "uartlite_rx" *) 
module system_axi_uartlite_0_0__uartlite_rx
   (s_axi_aresetn_0,
    FIFO_Full_reg,
    data_shift_reg_r_12_0,
    clr_Status_reg,
    \status_reg_reg[2] ,
    Q,
    Interrupt0,
    out,
    en_16x_Baud,
    s_axi_aclk,
    clr_Status,
    status_reg,
    s_axi_aresetn,
    \INFERRED_GEN.cnt_i_reg[4] ,
    \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ,
    Bus_RNW_reg,
    \INFERRED_GEN.cnt_i_reg[0] ,
    \INFERRED_GEN.cnt_i_reg[4]_0 ,
    rx_Data_Present_Pre,
    enable_interrupts,
    Interrupt_reg,
    tx_Buffer_Empty_Pre,
    rx);
  output s_axi_aresetn_0;
  output FIFO_Full_reg;
  output data_shift_reg_r_12_0;
  output clr_Status_reg;
  output \status_reg_reg[2] ;
  output [0:0]Q;
  output Interrupt0;
  output [7:0]out;
  input en_16x_Baud;
  input s_axi_aclk;
  input clr_Status;
  input [1:0]status_reg;
  input s_axi_aresetn;
  input \INFERRED_GEN.cnt_i_reg[4] ;
  input \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  input Bus_RNW_reg;
  input \INFERRED_GEN.cnt_i_reg[0] ;
  input \INFERRED_GEN.cnt_i_reg[4]_0 ;
  input rx_Data_Present_Pre;
  input enable_interrupts;
  input [0:0]Interrupt_reg;
  input tx_Buffer_Empty_Pre;
  input rx;

  wire Bus_RNW_reg;
  wire FIFO_Full_reg;
  wire \GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ;
  wire \INFERRED_GEN.cnt_i_reg[0] ;
  wire \INFERRED_GEN.cnt_i_reg[4] ;
  wire \INFERRED_GEN.cnt_i_reg[4]_0 ;
  wire INPUT_DOUBLE_REGS3_n_3;
  wire INPUT_DOUBLE_REGS3_n_4;
  wire [0:0]Q;
  wire RX_D2;
  wire \SERIAL_TO_PARALLEL[8].fifo_din[8]_i_1_n_0 ;
  wire clr_Status;
  wire clr_Status_reg;
  wire \data_shift_reg[13]_srl14___UARTLITE_CORE_I_UARTLITE_RX_I_data_shift_reg_r_12_n_0 ;
  wire \data_shift_reg[14]_UARTLITE_CORE_I_UARTLITE_RX_I_data_shift_reg_r_13_n_0 ;
  wire data_shift_reg_gate_n_0;
  wire data_shift_reg_r_0_n_0;
  wire data_shift_reg_r_10_n_0;
  wire data_shift_reg_r_11_n_0;
  wire data_shift_reg_r_12_0;
  wire data_shift_reg_r_13_n_0;
  wire data_shift_reg_r_1_n_0;
  wire data_shift_reg_r_2_n_0;
  wire data_shift_reg_r_3_n_0;
  wire data_shift_reg_r_4_n_0;
  wire data_shift_reg_r_5_n_0;
  wire data_shift_reg_r_6_n_0;
  wire data_shift_reg_r_7_n_0;
  wire data_shift_reg_r_8_n_0;
  wire data_shift_reg_r_9_n_0;
  wire data_shift_reg_r_n_0;
  wire en_16x_Baud;
  wire fifo_Write;
  wire fifo_Write0;
  wire [1:8]fifo_din;
  wire frame_err_ocrd;
  wire [7:0]out;
  wire [0:0]p_1_out;
  wire running_i_1_n_0;
  wire running_reg_n_0;
  wire rx;
  wire rx_1;
  wire rx_2;
  wire rx_3;
  wire rx_4;
  wire rx_5;
  wire rx_6;
  wire rx_7;
  wire rx_8;
  wire rx_9;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire s_axi_aresetn_0;
  wire sample_Point;
  wire [2:8]serial_to_Par;
  wire start_Edge_Detected;
  wire start_Edge_Detected0;
  wire start_Edge_Detected_i_2_n_0;
  wire [1:0]status_reg;
  wire \status_reg[1]_i_2_n_0 ;
  wire \status_reg_reg[2] ;
  wire stop_Bit_Position_i_1_n_0;
  wire stop_Bit_Position_reg_n_0;
  wire valid_rx;
  wire valid_rx_i_1_n_0;
  wire NLW_SRL_FIFO_I_Interrupt0_UNCONNECTED;
  wire NLW_SRL_FIFO_I_enable_interrupts_UNCONNECTED;
  wire NLW_SRL_FIFO_I_rx_Data_Present_Pre_UNCONNECTED;
  wire NLW_SRL_FIFO_I_tx_Buffer_Empty_Pre_UNCONNECTED;
  wire [0:0]NLW_SRL_FIFO_I_Interrupt_reg_UNCONNECTED;

  system_axi_uartlite_0_0__cdc_sync INPUT_DOUBLE_REGS3
       (.clr_Status(clr_Status),
        .clr_Status_reg(clr_Status_reg),
        .en_16x_Baud(en_16x_Baud),
        .fifo_Write0(fifo_Write0),
        .frame_err_ocrd(frame_err_ocrd),
        .frame_err_ocrd_reg(stop_Bit_Position_reg_n_0),
        .in(fifo_din[1]),
        .rx(rx),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .sample_Point(sample_Point),
        .scndry_out(RX_D2),
        .start_Edge_Detected(start_Edge_Detected),
        .status_reg(status_reg[1]),
        .\status_reg_reg[1] (\status_reg[1]_i_2_n_0 ),
        .stop_Bit_Position_reg(INPUT_DOUBLE_REGS3_n_3),
        .stop_Bit_Position_reg_0(INPUT_DOUBLE_REGS3_n_4));
  LUT1 #(
    .INIT(2'h1)) 
    Interrupt_i_1
       (.I0(s_axi_aresetn),
        .O(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    \SERIAL_TO_PARALLEL[1].fifo_din_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(INPUT_DOUBLE_REGS3_n_4),
        .Q(fifo_din[1]),
        .R(s_axi_aresetn_0));
  LUT4 #(
    .INIT(16'hBA8A)) 
    \SERIAL_TO_PARALLEL[2].fifo_din[2]_i_1 
       (.I0(fifo_din[2]),
        .I1(stop_Bit_Position_reg_n_0),
        .I2(sample_Point),
        .I3(fifo_din[1]),
        .O(serial_to_Par[2]));
  FDRE #(
    .INIT(1'b0)) 
    \SERIAL_TO_PARALLEL[2].fifo_din_reg[2] 
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(serial_to_Par[2]),
        .Q(fifo_din[2]),
        .R(\SERIAL_TO_PARALLEL[8].fifo_din[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT4 #(
    .INIT(16'hBA8A)) 
    \SERIAL_TO_PARALLEL[3].fifo_din[3]_i_1 
       (.I0(fifo_din[3]),
        .I1(stop_Bit_Position_reg_n_0),
        .I2(sample_Point),
        .I3(fifo_din[2]),
        .O(serial_to_Par[3]));
  FDRE #(
    .INIT(1'b0)) 
    \SERIAL_TO_PARALLEL[3].fifo_din_reg[3] 
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(serial_to_Par[3]),
        .Q(fifo_din[3]),
        .R(\SERIAL_TO_PARALLEL[8].fifo_din[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT4 #(
    .INIT(16'hBA8A)) 
    \SERIAL_TO_PARALLEL[4].fifo_din[4]_i_1 
       (.I0(fifo_din[4]),
        .I1(stop_Bit_Position_reg_n_0),
        .I2(sample_Point),
        .I3(fifo_din[3]),
        .O(serial_to_Par[4]));
  FDRE #(
    .INIT(1'b0)) 
    \SERIAL_TO_PARALLEL[4].fifo_din_reg[4] 
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(serial_to_Par[4]),
        .Q(fifo_din[4]),
        .R(\SERIAL_TO_PARALLEL[8].fifo_din[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT4 #(
    .INIT(16'hBA8A)) 
    \SERIAL_TO_PARALLEL[5].fifo_din[5]_i_1 
       (.I0(fifo_din[5]),
        .I1(stop_Bit_Position_reg_n_0),
        .I2(sample_Point),
        .I3(fifo_din[4]),
        .O(serial_to_Par[5]));
  FDRE #(
    .INIT(1'b0)) 
    \SERIAL_TO_PARALLEL[5].fifo_din_reg[5] 
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(serial_to_Par[5]),
        .Q(fifo_din[5]),
        .R(\SERIAL_TO_PARALLEL[8].fifo_din[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT4 #(
    .INIT(16'hBA8A)) 
    \SERIAL_TO_PARALLEL[6].fifo_din[6]_i_1 
       (.I0(fifo_din[6]),
        .I1(stop_Bit_Position_reg_n_0),
        .I2(sample_Point),
        .I3(fifo_din[5]),
        .O(serial_to_Par[6]));
  FDRE #(
    .INIT(1'b0)) 
    \SERIAL_TO_PARALLEL[6].fifo_din_reg[6] 
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(serial_to_Par[6]),
        .Q(fifo_din[6]),
        .R(\SERIAL_TO_PARALLEL[8].fifo_din[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT4 #(
    .INIT(16'hBA8A)) 
    \SERIAL_TO_PARALLEL[7].fifo_din[7]_i_1 
       (.I0(fifo_din[7]),
        .I1(stop_Bit_Position_reg_n_0),
        .I2(sample_Point),
        .I3(fifo_din[6]),
        .O(serial_to_Par[7]));
  FDRE #(
    .INIT(1'b0)) 
    \SERIAL_TO_PARALLEL[7].fifo_din_reg[7] 
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(serial_to_Par[7]),
        .Q(fifo_din[7]),
        .R(\SERIAL_TO_PARALLEL[8].fifo_din[8]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \SERIAL_TO_PARALLEL[8].fifo_din[8]_i_1 
       (.I0(start_Edge_Detected),
        .I1(s_axi_aresetn),
        .O(\SERIAL_TO_PARALLEL[8].fifo_din[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT4 #(
    .INIT(16'hBA8A)) 
    \SERIAL_TO_PARALLEL[8].fifo_din[8]_i_2 
       (.I0(fifo_din[8]),
        .I1(stop_Bit_Position_reg_n_0),
        .I2(sample_Point),
        .I3(fifo_din[7]),
        .O(serial_to_Par[8]));
  FDRE #(
    .INIT(1'b0)) 
    \SERIAL_TO_PARALLEL[8].fifo_din_reg[8] 
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(serial_to_Par[8]),
        .Q(fifo_din[8]),
        .R(\SERIAL_TO_PARALLEL[8].fifo_din[8]_i_1_n_0 ));
  system_axi_uartlite_0_0__srl_fifo_f_0 SRL_FIFO_I
       (.Bus_RNW_reg(Bus_RNW_reg),
        .FIFO_Full_reg(FIFO_Full_reg),
        .\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[0].ce_out_i_reg ),
        .\INFERRED_GEN.cnt_i_reg[0] (\INFERRED_GEN.cnt_i_reg[0] ),
        .\INFERRED_GEN.cnt_i_reg[4] (\INFERRED_GEN.cnt_i_reg[4] ),
        .\INFERRED_GEN.cnt_i_reg[4]_0 (\INFERRED_GEN.cnt_i_reg[4]_0 ),
        .Interrupt0(NLW_SRL_FIFO_I_Interrupt0_UNCONNECTED),
        .Interrupt_reg(NLW_SRL_FIFO_I_Interrupt_reg_UNCONNECTED[0]),
        .Q(Q),
        .clr_Status(clr_Status),
        .enable_interrupts(NLW_SRL_FIFO_I_enable_interrupts_UNCONNECTED),
        .fifo_Write(fifo_Write),
        .in(fifo_din),
        .out(out),
        .rx_Data_Present_Pre(NLW_SRL_FIFO_I_rx_Data_Present_Pre_UNCONNECTED),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .status_reg(status_reg[0]),
        .\status_reg_reg[2] (\status_reg_reg[2] ),
        .tx_Buffer_Empty_Pre(NLW_SRL_FIFO_I_tx_Buffer_Empty_Pre_UNCONNECTED),
        .valid_rx(valid_rx));
  (* srl_bus_name = "U0/\UARTLITE_CORE_I/UARTLITE_RX_I/data_shift_reg " *) 
  (* srl_name = "U0/\UARTLITE_CORE_I/UARTLITE_RX_I/data_shift_reg[13]_srl14___UARTLITE_CORE_I_UARTLITE_RX_I_data_shift_reg_r_12 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \data_shift_reg[13]_srl14___UARTLITE_CORE_I_UARTLITE_RX_I_data_shift_reg_r_12 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b1),
        .CE(en_16x_Baud),
        .CLK(s_axi_aclk),
        .D(p_1_out),
        .Q(\data_shift_reg[13]_srl14___UARTLITE_CORE_I_UARTLITE_RX_I_data_shift_reg_r_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT4 #(
    .INIT(16'h3200)) 
    \data_shift_reg[13]_srl14___UARTLITE_CORE_I_UARTLITE_RX_I_data_shift_reg_r_12_i_1 
       (.I0(start_Edge_Detected),
        .I1(stop_Bit_Position_reg_n_0),
        .I2(sample_Point),
        .I3(valid_rx),
        .O(p_1_out));
  FDRE #(
    .INIT(1'b0)) 
    \data_shift_reg[14]_UARTLITE_CORE_I_UARTLITE_RX_I_data_shift_reg_r_13 
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(\data_shift_reg[13]_srl14___UARTLITE_CORE_I_UARTLITE_RX_I_data_shift_reg_r_12_n_0 ),
        .Q(\data_shift_reg[14]_UARTLITE_CORE_I_UARTLITE_RX_I_data_shift_reg_r_13_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_shift_reg[15] 
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(data_shift_reg_gate_n_0),
        .Q(sample_Point),
        .R(s_axi_aresetn_0));
  LUT2 #(
    .INIT(4'h8)) 
    data_shift_reg_gate
       (.I0(\data_shift_reg[14]_UARTLITE_CORE_I_UARTLITE_RX_I_data_shift_reg_r_13_n_0 ),
        .I1(data_shift_reg_r_13_n_0),
        .O(data_shift_reg_gate_n_0));
  FDRE #(
    .INIT(1'b0)) 
    data_shift_reg_r
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(1'b1),
        .Q(data_shift_reg_r_n_0),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    data_shift_reg_r_0
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(data_shift_reg_r_n_0),
        .Q(data_shift_reg_r_0_n_0),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    data_shift_reg_r_1
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(data_shift_reg_r_0_n_0),
        .Q(data_shift_reg_r_1_n_0),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    data_shift_reg_r_10
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(data_shift_reg_r_9_n_0),
        .Q(data_shift_reg_r_10_n_0),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    data_shift_reg_r_11
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(data_shift_reg_r_10_n_0),
        .Q(data_shift_reg_r_11_n_0),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    data_shift_reg_r_12
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(data_shift_reg_r_11_n_0),
        .Q(data_shift_reg_r_12_0),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    data_shift_reg_r_13
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(data_shift_reg_r_12_0),
        .Q(data_shift_reg_r_13_n_0),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    data_shift_reg_r_2
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(data_shift_reg_r_1_n_0),
        .Q(data_shift_reg_r_2_n_0),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    data_shift_reg_r_3
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(data_shift_reg_r_2_n_0),
        .Q(data_shift_reg_r_3_n_0),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    data_shift_reg_r_4
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(data_shift_reg_r_3_n_0),
        .Q(data_shift_reg_r_4_n_0),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    data_shift_reg_r_5
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(data_shift_reg_r_4_n_0),
        .Q(data_shift_reg_r_5_n_0),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    data_shift_reg_r_6
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(data_shift_reg_r_5_n_0),
        .Q(data_shift_reg_r_6_n_0),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    data_shift_reg_r_7
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(data_shift_reg_r_6_n_0),
        .Q(data_shift_reg_r_7_n_0),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    data_shift_reg_r_8
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(data_shift_reg_r_7_n_0),
        .Q(data_shift_reg_r_8_n_0),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    data_shift_reg_r_9
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(data_shift_reg_r_8_n_0),
        .Q(data_shift_reg_r_9_n_0),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    fifo_Write_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(fifo_Write0),
        .Q(fifo_Write),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    frame_err_ocrd_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(INPUT_DOUBLE_REGS3_n_3),
        .Q(frame_err_ocrd),
        .R(s_axi_aresetn_0));
  LUT5 #(
    .INIT(32'hBFFFAA00)) 
    running_i_1
       (.I0(start_Edge_Detected),
        .I1(stop_Bit_Position_reg_n_0),
        .I2(sample_Point),
        .I3(en_16x_Baud),
        .I4(running_reg_n_0),
        .O(running_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    running_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(running_i_1_n_0),
        .Q(running_reg_n_0),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    rx_1_reg
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(RX_D2),
        .Q(rx_1),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    rx_2_reg
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(rx_1),
        .Q(rx_2),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    rx_3_reg
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(rx_2),
        .Q(rx_3),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    rx_4_reg
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(rx_3),
        .Q(rx_4),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    rx_5_reg
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(rx_4),
        .Q(rx_5),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    rx_6_reg
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(rx_5),
        .Q(rx_6),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    rx_7_reg
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(rx_6),
        .Q(rx_7),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    rx_8_reg
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(rx_7),
        .Q(rx_8),
        .R(s_axi_aresetn_0));
  FDRE #(
    .INIT(1'b0)) 
    rx_9_reg
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(rx_8),
        .Q(rx_9),
        .R(s_axi_aresetn_0));
  LUT6 #(
    .INIT(64'h0000001000000000)) 
    start_Edge_Detected_i_1
       (.I0(rx_7),
        .I1(rx_5),
        .I2(start_Edge_Detected_i_2_n_0),
        .I3(rx_4),
        .I4(rx_6),
        .I5(rx_9),
        .O(start_Edge_Detected0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    start_Edge_Detected_i_2
       (.I0(frame_err_ocrd),
        .I1(rx_8),
        .I2(rx_2),
        .I3(rx_3),
        .I4(rx_1),
        .I5(running_reg_n_0),
        .O(start_Edge_Detected_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    start_Edge_Detected_reg
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(start_Edge_Detected0),
        .Q(start_Edge_Detected),
        .R(s_axi_aresetn_0));
  LUT3 #(
    .INIT(8'h80)) 
    \status_reg[1]_i_2 
       (.I0(en_16x_Baud),
        .I1(sample_Point),
        .I2(stop_Bit_Position_reg_n_0),
        .O(\status_reg[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h2CCC)) 
    stop_Bit_Position_i_1
       (.I0(fifo_din[8]),
        .I1(stop_Bit_Position_reg_n_0),
        .I2(en_16x_Baud),
        .I3(sample_Point),
        .O(stop_Bit_Position_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    stop_Bit_Position_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(stop_Bit_Position_i_1_n_0),
        .Q(stop_Bit_Position_reg_n_0),
        .R(s_axi_aresetn_0));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    valid_rx_i_1
       (.I0(start_Edge_Detected),
        .I1(fifo_Write),
        .I2(valid_rx),
        .O(valid_rx_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    valid_rx_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(valid_rx_i_1_n_0),
        .Q(valid_rx),
        .R(s_axi_aresetn_0));
endmodule

(* ORIG_REF_NAME = "uartlite_tx" *) 
module system_axi_uartlite_0_0__uartlite_tx
   (tx_Buffer_Full,
    tx,
    Q,
    s_axi_aclk,
    \data_shift_reg[15]_0 ,
    en_16x_Baud,
    \data_shift_reg[15]_1 ,
    \INFERRED_GEN.cnt_i_reg[4] ,
    s_axi_aresetn,
    \INFERRED_GEN.cnt_i_reg[2] ,
    Bus_RNW_reg,
    \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ,
    fifo_wr,
    s_axi_wdata);
  output tx_Buffer_Full;
  output tx;
  output [0:0]Q;
  input s_axi_aclk;
  input \data_shift_reg[15]_0 ;
  input en_16x_Baud;
  input \data_shift_reg[15]_1 ;
  input \INFERRED_GEN.cnt_i_reg[4] ;
  input s_axi_aresetn;
  input \INFERRED_GEN.cnt_i_reg[2] ;
  input Bus_RNW_reg;
  input \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  input fifo_wr;
  input [7:0]s_axi_wdata;

  wire Bus_RNW_reg;
  wire \GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ;
  wire \INFERRED_GEN.cnt_i_reg[2] ;
  wire \INFERRED_GEN.cnt_i_reg[4] ;
  wire [0:0]Q;
  wire TX0;
  wire \data_shift_reg[13]_srl13___UARTLITE_CORE_I_UARTLITE_RX_I_data_shift_reg_r_11_n_0 ;
  wire \data_shift_reg[14]_UARTLITE_CORE_I_UARTLITE_RX_I_data_shift_reg_r_12_n_0 ;
  wire \data_shift_reg[15]_0 ;
  wire \data_shift_reg[15]_1 ;
  wire data_shift_reg_gate_n_0;
  wire div16;
  wire en_16x_Baud;
  wire fifo_Read;
  wire fifo_Read0;
  wire fifo_wr;
  wire mux_Out;
  wire \mux_sel[0]_i_1_n_0 ;
  wire \mux_sel[1]_i_1_n_0 ;
  wire \mux_sel[2]_i_1_n_0 ;
  wire \mux_sel_reg_n_0_[0] ;
  wire \mux_sel_reg_n_0_[2] ;
  wire [1:1]p_0_in;
  wire p_5_in;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire [7:0]s_axi_wdata;
  wire serial_Data;
  wire tx;
  wire tx_Buffer_Full;
  wire tx_DataBits;
  wire tx_DataBits0;
  wire tx_Data_Enable_i_1_n_0;
  wire tx_Data_Enable_reg_n_0;
  wire tx_Start;
  wire tx_Start0;

  system_axi_uartlite_0_0__srl_fifo_f SRL_FIFO_I
       (.Bus_RNW_reg(Bus_RNW_reg),
        .\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg (\GEN_BKEND_CE_REGISTERS[1].ce_out_i_reg ),
        .\INFERRED_GEN.cnt_i_reg[2] (\INFERRED_GEN.cnt_i_reg[2] ),
        .\INFERRED_GEN.cnt_i_reg[4] (\INFERRED_GEN.cnt_i_reg[4] ),
        .Q(Q),
        .fifo_Read(fifo_Read),
        .fifo_wr(fifo_wr),
        .mux_Out(mux_Out),
        .p_5_in(p_5_in),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_wdata(s_axi_wdata),
        .serial_Data_reg(\mux_sel_reg_n_0_[2] ),
        .serial_Data_reg_0(\mux_sel_reg_n_0_[0] ),
        .tx_Buffer_Full(tx_Buffer_Full),
        .tx_DataBits(tx_DataBits),
        .tx_Start(tx_Start),
        .tx_Start0(tx_Start0),
        .tx_Start_reg(tx_Data_Enable_reg_n_0));
  LUT3 #(
    .INIT(8'h31)) 
    TX_i_1
       (.I0(tx_DataBits),
        .I1(tx_Start),
        .I2(serial_Data),
        .O(TX0));
  FDSE #(
    .INIT(1'b1)) 
    TX_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(TX0),
        .Q(tx),
        .S(\data_shift_reg[15]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \data_shift_reg[0] 
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(div16),
        .Q(p_0_in),
        .S(\data_shift_reg[15]_0 ));
  (* srl_bus_name = "U0/\UARTLITE_CORE_I/UARTLITE_TX_I/data_shift_reg " *) 
  (* srl_name = "U0/\UARTLITE_CORE_I/UARTLITE_TX_I/data_shift_reg[13]_srl13___UARTLITE_CORE_I_UARTLITE_RX_I_data_shift_reg_r_11 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \data_shift_reg[13]_srl13___UARTLITE_CORE_I_UARTLITE_RX_I_data_shift_reg_r_11 
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b1),
        .CE(en_16x_Baud),
        .CLK(s_axi_aclk),
        .D(p_0_in),
        .Q(\data_shift_reg[13]_srl13___UARTLITE_CORE_I_UARTLITE_RX_I_data_shift_reg_r_11_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_shift_reg[14]_UARTLITE_CORE_I_UARTLITE_RX_I_data_shift_reg_r_12 
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(\data_shift_reg[13]_srl13___UARTLITE_CORE_I_UARTLITE_RX_I_data_shift_reg_r_11_n_0 ),
        .Q(\data_shift_reg[14]_UARTLITE_CORE_I_UARTLITE_RX_I_data_shift_reg_r_12_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_shift_reg[15] 
       (.C(s_axi_aclk),
        .CE(en_16x_Baud),
        .D(data_shift_reg_gate_n_0),
        .Q(div16),
        .R(\data_shift_reg[15]_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    data_shift_reg_gate
       (.I0(\data_shift_reg[14]_UARTLITE_CORE_I_UARTLITE_RX_I_data_shift_reg_r_12_n_0 ),
        .I1(\data_shift_reg[15]_1 ),
        .O(data_shift_reg_gate_n_0));
  LUT4 #(
    .INIT(16'h0100)) 
    fifo_Read_i_1
       (.I0(\mux_sel_reg_n_0_[0] ),
        .I1(\mux_sel_reg_n_0_[2] ),
        .I2(p_5_in),
        .I3(tx_Data_Enable_reg_n_0),
        .O(fifo_Read0));
  FDRE #(
    .INIT(1'b0)) 
    fifo_Read_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(fifo_Read0),
        .Q(fifo_Read),
        .R(\data_shift_reg[15]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT5 #(
    .INIT(32'hE1F0F1F0)) 
    \mux_sel[0]_i_1 
       (.I0(p_5_in),
        .I1(\mux_sel_reg_n_0_[2] ),
        .I2(\mux_sel_reg_n_0_[0] ),
        .I3(tx_Data_Enable_reg_n_0),
        .I4(tx_DataBits),
        .O(\mux_sel[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT5 #(
    .INIT(32'h99AAABAA)) 
    \mux_sel[1]_i_1 
       (.I0(p_5_in),
        .I1(\mux_sel_reg_n_0_[2] ),
        .I2(\mux_sel_reg_n_0_[0] ),
        .I3(tx_Data_Enable_reg_n_0),
        .I4(tx_DataBits),
        .O(\mux_sel[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h7777888C)) 
    \mux_sel[2]_i_1 
       (.I0(tx_DataBits),
        .I1(tx_Data_Enable_reg_n_0),
        .I2(\mux_sel_reg_n_0_[0] ),
        .I3(p_5_in),
        .I4(\mux_sel_reg_n_0_[2] ),
        .O(\mux_sel[2]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \mux_sel_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\mux_sel[0]_i_1_n_0 ),
        .Q(\mux_sel_reg_n_0_[0] ),
        .S(\data_shift_reg[15]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \mux_sel_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\mux_sel[1]_i_1_n_0 ),
        .Q(p_5_in),
        .S(\data_shift_reg[15]_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \mux_sel_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\mux_sel[2]_i_1_n_0 ),
        .Q(\mux_sel_reg_n_0_[2] ),
        .S(\data_shift_reg[15]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    serial_Data_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(mux_Out),
        .Q(serial_Data),
        .R(\data_shift_reg[15]_0 ));
  LUT4 #(
    .INIT(16'h0F08)) 
    tx_DataBits_i_1
       (.I0(tx_Start),
        .I1(tx_Data_Enable_reg_n_0),
        .I2(fifo_Read),
        .I3(tx_DataBits),
        .O(tx_DataBits0));
  FDRE #(
    .INIT(1'b0)) 
    tx_DataBits_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(tx_DataBits0),
        .Q(tx_DataBits),
        .R(\data_shift_reg[15]_0 ));
  LUT3 #(
    .INIT(8'h20)) 
    tx_Data_Enable_i_1
       (.I0(div16),
        .I1(tx_Data_Enable_reg_n_0),
        .I2(en_16x_Baud),
        .O(tx_Data_Enable_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    tx_Data_Enable_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(tx_Data_Enable_i_1_n_0),
        .Q(tx_Data_Enable_reg_n_0),
        .R(\data_shift_reg[15]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    tx_Start_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(tx_Start0),
        .Q(tx_Start),
        .R(\data_shift_reg[15]_0 ));
endmodule

(* CHECK_LICENSE_TYPE = "system_bayer2rgb_0_0,bayer2rgb,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* IP_DEFINITION_SOURCE = "module_ref" *) 
(* X_CORE_INFO = "bayer2rgb,Vivado 2020.1" *) 
module system_bayer2rgb_0_0
   (clk,
    data_in,
    hsync_in,
    vsync_in,
    de_in,
    hdata,
    vdata,
    hsync_out,
    vsync_out,
    de_out,
    data_out);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN /clk_wiz_1_clk_out1, INSERT_VIP 0" *) input clk;
  input [7:0]data_in;
  input hsync_in;
  input vsync_in;
  input de_in;
  input [10:0]hdata;
  input [9:0]vdata;
  output hsync_out;
  output vsync_out;
  output de_out;
  output [23:0]data_out;

  wire clk;
  wire [7:0]data_in;
  wire [23:0]data_out;
  wire de_in;
  wire de_out;
  wire [10:0]hdata;
  wire hsync_out;
  wire [9:0]vdata;
  wire vsync_in;
  wire vsync_out;
  wire NLW_inst_hsync_in_UNCONNECTED;
  wire [0:0]NLW_inst_hdata_UNCONNECTED;

  (* DELAY_LINE = "2" *) 
  (* HFP = "1390" *) 
  (* HMAX = "1650" *) 
  (* HSIZE = "1280" *) 
  (* HSP = "1430" *) 
  (* HSPP = "0" *) 
  (* IDLE = "0" *) 
  (* IDLE_BG = "1" *) 
  (* IDLE_GR = "4" *) 
  (* PATTERN0 = "2" *) 
  (* PATTERN1 = "3" *) 
  (* PATTERN2 = "5" *) 
  (* PATTERN3 = "6" *) 
  (* VFP = "725" *) 
  (* VMAX = "750" *) 
  (* VSIZE = "720" *) 
  (* VSP = "730" *) 
  (* VSPP = "0" *) 
  (* WIDTH = "12" *) 
  system_bayer2rgb_0_0_bayer2rgb inst
       (.clk(clk),
        .data_in(data_in),
        .data_out(data_out),
        .de_in(de_in),
        .de_out(de_out),
        .hdata({hdata[10:1],NLW_inst_hdata_UNCONNECTED[0]}),
        .hsync_in(NLW_inst_hsync_in_UNCONNECTED),
        .hsync_out(hsync_out),
        .vdata(vdata),
        .vsync_in(vsync_in),
        .vsync_out(vsync_out));
endmodule

(* DELAY_LINE = "2" *) (* HFP = "1390" *) (* HMAX = "1650" *) 
(* HSIZE = "1280" *) (* HSP = "1430" *) (* HSPP = "0" *) 
(* IDLE = "0" *) (* IDLE_BG = "1" *) (* IDLE_GR = "4" *) 
(* ORIG_REF_NAME = "bayer2rgb" *) (* PATTERN0 = "2" *) (* PATTERN1 = "3" *) 
(* PATTERN2 = "5" *) (* PATTERN3 = "6" *) (* VFP = "725" *) 
(* VMAX = "750" *) (* VSIZE = "720" *) (* VSP = "730" *) 
(* VSPP = "0" *) (* WIDTH = "12" *) 
module system_bayer2rgb_0_0_bayer2rgb
   (clk,
    data_in,
    hsync_in,
    vsync_in,
    de_in,
    hdata,
    vdata,
    hsync_out,
    vsync_out,
    de_out,
    data_out);
  input clk;
  input [7:0]data_in;
  input hsync_in;
  input vsync_in;
  input de_in;
  input [10:0]hdata;
  input [9:0]vdata;
  output hsync_out;
  output vsync_out;
  output de_out;
  output [23:0]data_out;

  wire \FSM_sequential_read_state[0]_i_1_n_0 ;
  wire \FSM_sequential_read_state[1]_i_1_n_0 ;
  wire \FSM_sequential_read_state[2]_i_1_n_0 ;
  wire \addra[10]_i_1_n_0 ;
  wire \addra[10]_i_2_n_0 ;
  wire \addra[10]_i_4_n_0 ;
  wire \addra[10]_i_5_n_0 ;
  wire \addra[10]_i_6_n_0 ;
  wire \addra[10]_i_7_n_0 ;
  wire [10:0]addra_reg;
  wire [7:0]bram0_doutb;
  wire [7:0]bram1_doutb;
  wire [7:0]bram2_doutb;
  wire clk;
  wire \color_b[2]_i_1_n_0 ;
  wire \color_b[3]_i_1_n_0 ;
  wire \color_b[4]_i_1_n_0 ;
  wire \color_b[5]_i_1_n_0 ;
  wire \color_b[6]_i_1_n_0 ;
  wire \color_b[7]_i_1_n_0 ;
  wire \color_b[8]_i_1_n_0 ;
  wire \color_b[9]_i_1_n_0 ;
  wire [9:2]color_g;
  wire \color_g[3]_i_10_n_0 ;
  wire \color_g[3]_i_3_n_0 ;
  wire \color_g[3]_i_4_n_0 ;
  wire \color_g[3]_i_5_n_0 ;
  wire \color_g[3]_i_6_n_0 ;
  wire \color_g[3]_i_7_n_0 ;
  wire \color_g[3]_i_8_n_0 ;
  wire \color_g[3]_i_9_n_0 ;
  wire \color_g[7]_i_10_n_0 ;
  wire \color_g[7]_i_11_n_0 ;
  wire \color_g[7]_i_12_n_0 ;
  wire \color_g[7]_i_13_n_0 ;
  wire \color_g[7]_i_14_n_0 ;
  wire \color_g[7]_i_3_n_0 ;
  wire \color_g[7]_i_4_n_0 ;
  wire \color_g[7]_i_5_n_0 ;
  wire \color_g[7]_i_6_n_0 ;
  wire \color_g[7]_i_7_n_0 ;
  wire \color_g[7]_i_8_n_0 ;
  wire \color_g[7]_i_9_n_0 ;
  wire \color_g[9]_i_3_n_0 ;
  wire \color_g[9]_i_4_n_0 ;
  wire \color_g[9]_i_5_n_0 ;
  wire \color_g[9]_i_6_n_0 ;
  wire \color_g_reg[3]_i_2_n_0 ;
  wire \color_g_reg[7]_i_2_n_0 ;
  wire \color_r[2]_i_1_n_0 ;
  wire \color_r[3]_i_10_n_0 ;
  wire \color_r[3]_i_11_n_0 ;
  wire \color_r[3]_i_12_n_0 ;
  wire \color_r[3]_i_13_n_0 ;
  wire \color_r[3]_i_14_n_0 ;
  wire \color_r[3]_i_15_n_0 ;
  wire \color_r[3]_i_16_n_0 ;
  wire \color_r[3]_i_17_n_0 ;
  wire \color_r[3]_i_18_n_0 ;
  wire \color_r[3]_i_1_n_0 ;
  wire \color_r[3]_i_5_n_0 ;
  wire \color_r[3]_i_6_n_0 ;
  wire \color_r[3]_i_7_n_0 ;
  wire \color_r[3]_i_8_n_0 ;
  wire \color_r[3]_i_9_n_0 ;
  wire \color_r[4]_i_1_n_0 ;
  wire \color_r[5]_i_1_n_0 ;
  wire \color_r[6]_i_1_n_0 ;
  wire \color_r[7]_i_10_n_0 ;
  wire \color_r[7]_i_11_n_0 ;
  wire \color_r[7]_i_12_n_0 ;
  wire \color_r[7]_i_13_n_0 ;
  wire \color_r[7]_i_14_n_0 ;
  wire \color_r[7]_i_15_n_0 ;
  wire \color_r[7]_i_16_n_0 ;
  wire \color_r[7]_i_17_n_0 ;
  wire \color_r[7]_i_18_n_0 ;
  wire \color_r[7]_i_19_n_0 ;
  wire \color_r[7]_i_1_n_0 ;
  wire \color_r[7]_i_20_n_0 ;
  wire \color_r[7]_i_21_n_0 ;
  wire \color_r[7]_i_22_n_0 ;
  wire \color_r[7]_i_23_n_0 ;
  wire \color_r[7]_i_24_n_0 ;
  wire \color_r[7]_i_5_n_0 ;
  wire \color_r[7]_i_6_n_0 ;
  wire \color_r[7]_i_7_n_0 ;
  wire \color_r[7]_i_8_n_0 ;
  wire \color_r[7]_i_9_n_0 ;
  wire \color_r[8]_i_1_n_0 ;
  wire \color_r[9]_i_10_n_0 ;
  wire \color_r[9]_i_11_n_0 ;
  wire \color_r[9]_i_12_n_0 ;
  wire \color_r[9]_i_1_n_0 ;
  wire \color_r[9]_i_2_n_0 ;
  wire \color_r[9]_i_5_n_0 ;
  wire \color_r[9]_i_7_n_0 ;
  wire \color_r[9]_i_8_n_0 ;
  wire \color_r[9]_i_9_n_0 ;
  wire \color_r_reg[3]_i_2_n_0 ;
  wire \color_r_reg[3]_i_3_n_0 ;
  wire \color_r_reg[3]_i_4_n_0 ;
  wire \color_r_reg[7]_i_2_n_0 ;
  wire \color_r_reg[7]_i_3_n_0 ;
  wire \color_r_reg[7]_i_4_n_0 ;
  wire [7:0]data_in;
  wire \data_in_r2_reg[0]_srl2_n_0 ;
  wire \data_in_r2_reg[1]_srl2_n_0 ;
  wire \data_in_r2_reg[2]_srl2_n_0 ;
  wire \data_in_r2_reg[3]_srl2_n_0 ;
  wire \data_in_r2_reg[4]_srl2_n_0 ;
  wire \data_in_r2_reg[5]_srl2_n_0 ;
  wire \data_in_r2_reg[6]_srl2_n_0 ;
  wire \data_in_r2_reg[7]_srl2_n_0 ;
  wire [23:0]data_out;
  wire de_delay;
  wire \de_delay_r_reg[4]_srl5_i_2_n_0 ;
  wire \de_delay_r_reg[4]_srl5_i_3_n_0 ;
  wire \de_delay_r_reg[4]_srl5_i_4_n_0 ;
  wire \de_delay_r_reg[4]_srl5_n_0 ;
  wire de_in;
  wire de_neg;
  wire de_neg0;
  wire de_neg_r1;
  wire de_neg_r2;
  wire de_out;
  wire de_pos0;
  wire de_pos_r1_reg_srl2_n_0;
  wire de_pos_r2;
  wire de_r1;
  wire de_r2;
  wire de_r3;
  wire [10:0]hdata;
  wire \hsync_delay_r_reg[4]_srl5_i_1_n_0 ;
  wire \hsync_delay_r_reg[4]_srl5_i_2_n_0 ;
  wire \hsync_delay_r_reg[4]_srl5_i_3_n_0 ;
  wire \hsync_delay_r_reg[4]_srl5_n_0 ;
  wire hsync_out;
  wire [9:2]in5;
  wire [9:2]in6;
  wire [9:2]in7;
  wire [9:2]in8;
  wire [9:2]in9;
  wire \line0[0][0]_i_1_n_0 ;
  wire \line0[0][1]_i_1_n_0 ;
  wire \line0[0][2]_i_1_n_0 ;
  wire \line0[0][3]_i_1_n_0 ;
  wire \line0[0][4]_i_1_n_0 ;
  wire \line0[0][5]_i_1_n_0 ;
  wire \line0[0][6]_i_1_n_0 ;
  wire \line0[0][7]_i_1_n_0 ;
  wire [7:0]\line0_reg[0] ;
  wire [7:0]\line0_reg[2] ;
  wire \line1[0][0]_i_1_n_0 ;
  wire \line1[0][1]_i_1_n_0 ;
  wire \line1[0][2]_i_1_n_0 ;
  wire \line1[0][3]_i_1_n_0 ;
  wire \line1[0][4]_i_1_n_0 ;
  wire \line1[0][5]_i_1_n_0 ;
  wire \line1[0][6]_i_1_n_0 ;
  wire \line1[0][7]_i_1_n_0 ;
  wire [7:0]\line1_reg[2] ;
  wire [7:0]\line2_reg[0] ;
  wire [7:0]\line2_reg[2] ;
  wire p_0_in;
  wire [8:1]p_0_in0_in;
  wire p_0_in3_in;
  wire [10:0]p_0_in__0;
  wire [8:1]p_1_in;
  wire [8:1]p_1_in1_in;
  wire [2:0]read_state__0;
  wire [9:0]vdata;
  wire \vsync_delay_r_reg[4]_srl5_i_1_n_0 ;
  wire \vsync_delay_r_reg[4]_srl5_i_2_n_0 ;
  wire \vsync_delay_r_reg[4]_srl5_i_3_n_0 ;
  wire \vsync_delay_r_reg[4]_srl5_n_0 ;
  wire vsync_in;
  wire vsync_out;
  wire vsync_pos;
  wire vsync_pos0;
  wire vsync_r1;
  wire vsync_r2;
  wire wea0;
  wire wea1;
  wire wea2;
  wire \wea[0]_i_1_n_0 ;
  wire \wea[1]_i_1_n_0 ;
  wire \wea[2]_i_1_n_0 ;
  wire \wea_reg_n_0_[0] ;
  wire [2:0]\NLW_color_g_reg[3]_i_2_CO_UNCONNECTED ;
  wire [1:0]\NLW_color_g_reg[3]_i_2_O_UNCONNECTED ;
  wire [2:0]\NLW_color_g_reg[7]_i_2_CO_UNCONNECTED ;
  wire [3:0]\NLW_color_g_reg[9]_i_2_CO_UNCONNECTED ;
  wire [3:1]\NLW_color_g_reg[9]_i_2_O_UNCONNECTED ;
  wire [2:0]\NLW_color_r_reg[3]_i_2_CO_UNCONNECTED ;
  wire [1:0]\NLW_color_r_reg[3]_i_2_O_UNCONNECTED ;
  wire [2:0]\NLW_color_r_reg[3]_i_3_CO_UNCONNECTED ;
  wire [1:0]\NLW_color_r_reg[3]_i_3_O_UNCONNECTED ;
  wire [2:0]\NLW_color_r_reg[3]_i_4_CO_UNCONNECTED ;
  wire [1:0]\NLW_color_r_reg[3]_i_4_O_UNCONNECTED ;
  wire [2:0]\NLW_color_r_reg[7]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_color_r_reg[7]_i_3_CO_UNCONNECTED ;
  wire [2:0]\NLW_color_r_reg[7]_i_4_CO_UNCONNECTED ;
  wire [3:0]\NLW_color_r_reg[9]_i_3_CO_UNCONNECTED ;
  wire [3:1]\NLW_color_r_reg[9]_i_3_O_UNCONNECTED ;
  wire [3:0]\NLW_color_r_reg[9]_i_4_CO_UNCONNECTED ;
  wire [3:1]\NLW_color_r_reg[9]_i_4_O_UNCONNECTED ;
  wire [3:0]\NLW_color_r_reg[9]_i_6_CO_UNCONNECTED ;
  wire [3:1]\NLW_color_r_reg[9]_i_6_O_UNCONNECTED ;

  LUT5 #(
    .INIT(32'hF0A1554C)) 
    \FSM_sequential_read_state[0]_i_1 
       (.I0(vsync_pos),
        .I1(de_pos_r2),
        .I2(read_state__0[2]),
        .I3(read_state__0[1]),
        .I4(read_state__0[0]),
        .O(\FSM_sequential_read_state[0]_i_1_n_0 ));
  (* \PinAttr:I0:HOLD_DETOUR  = "148" *) 
  LUT6 #(
    .INIT(64'hFF11333000330000)) 
    \FSM_sequential_read_state[1]_i_1 
       (.I0(de_neg_r2),
        .I1(vsync_pos),
        .I2(de_pos_r2),
        .I3(read_state__0[2]),
        .I4(read_state__0[1]),
        .I5(read_state__0[0]),
        .O(\FSM_sequential_read_state[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF2301030)) 
    \FSM_sequential_read_state[2]_i_1 
       (.I0(de_neg_r2),
        .I1(vsync_pos),
        .I2(read_state__0[2]),
        .I3(read_state__0[1]),
        .I4(read_state__0[0]),
        .O(\FSM_sequential_read_state[2]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "PATTERN1:011,PATTERN0:010,IDLE_GR:100,PATTERN3:110,IDLE:000,PATTERN2:101,IDLE_BG:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_read_state_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\FSM_sequential_read_state[0]_i_1_n_0 ),
        .Q(read_state__0[0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "PATTERN1:011,PATTERN0:010,IDLE_GR:100,PATTERN3:110,IDLE:000,PATTERN2:101,IDLE_BG:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_read_state_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\FSM_sequential_read_state[1]_i_1_n_0 ),
        .Q(read_state__0[1]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "PATTERN1:011,PATTERN0:010,IDLE_GR:100,PATTERN3:110,IDLE:000,PATTERN2:101,IDLE_BG:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_read_state_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\FSM_sequential_read_state[2]_i_1_n_0 ),
        .Q(read_state__0[2]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \addra[0]_i_1 
       (.I0(addra_reg[0]),
        .O(p_0_in__0[0]));
  LUT2 #(
    .INIT(4'hE)) 
    \addra[10]_i_1 
       (.I0(de_neg),
        .I1(vsync_pos),
        .O(\addra[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAABFFAAAAAAAA)) 
    \addra[10]_i_2 
       (.I0(de_in),
        .I1(hdata[9]),
        .I2(hdata[8]),
        .I3(hdata[10]),
        .I4(\addra[10]_i_4_n_0 ),
        .I5(\addra[10]_i_5_n_0 ),
        .O(\addra[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \addra[10]_i_3 
       (.I0(addra_reg[10]),
        .I1(addra_reg[8]),
        .I2(addra_reg[6]),
        .I3(\addra[10]_i_6_n_0 ),
        .I4(addra_reg[7]),
        .I5(addra_reg[9]),
        .O(p_0_in__0[10]));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \addra[10]_i_4 
       (.I0(\addra[10]_i_7_n_0 ),
        .I1(vdata[9]),
        .I2(vdata[7]),
        .I3(vdata[6]),
        .I4(vdata[4]),
        .I5(\vsync_delay_r_reg[4]_srl5_i_2_n_0 ),
        .O(\addra[10]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hABBBFFFF)) 
    \addra[10]_i_5 
       (.I0(\de_delay_r_reg[4]_srl5_i_2_n_0 ),
        .I1(vdata[8]),
        .I2(vdata[7]),
        .I3(vdata[6]),
        .I4(vdata[9]),
        .O(\addra[10]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \addra[10]_i_6 
       (.I0(addra_reg[5]),
        .I1(addra_reg[4]),
        .I2(addra_reg[2]),
        .I3(addra_reg[1]),
        .I4(addra_reg[0]),
        .I5(addra_reg[3]),
        .O(\addra[10]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \addra[10]_i_7 
       (.I0(vdata[1]),
        .I1(vdata[3]),
        .I2(vdata[2]),
        .O(\addra[10]_i_7_n_0 ));
  (* \PinAttr:I0:HOLD_DETOUR  = "194" *) 
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \addra[1]_i_1 
       (.I0(addra_reg[1]),
        .I1(addra_reg[0]),
        .O(p_0_in__0[1]));
  (* \PinAttr:I1:HOLD_DETOUR  = "194" *) 
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \addra[2]_i_1 
       (.I0(addra_reg[2]),
        .I1(addra_reg[1]),
        .I2(addra_reg[0]),
        .O(p_0_in__0[2]));
  (* \PinAttr:I2:HOLD_DETOUR  = "196" *) 
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \addra[3]_i_1 
       (.I0(addra_reg[3]),
        .I1(addra_reg[0]),
        .I2(addra_reg[1]),
        .I3(addra_reg[2]),
        .O(p_0_in__0[3]));
  (* \PinAttr:I2:HOLD_DETOUR  = "196" *) 
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \addra[4]_i_1 
       (.I0(addra_reg[4]),
        .I1(addra_reg[2]),
        .I2(addra_reg[1]),
        .I3(addra_reg[0]),
        .I4(addra_reg[3]),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \addra[5]_i_1 
       (.I0(addra_reg[3]),
        .I1(addra_reg[0]),
        .I2(addra_reg[1]),
        .I3(addra_reg[2]),
        .I4(addra_reg[4]),
        .I5(addra_reg[5]),
        .O(p_0_in__0[5]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \addra[6]_i_1 
       (.I0(addra_reg[6]),
        .I1(\addra[10]_i_6_n_0 ),
        .O(p_0_in__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \addra[7]_i_1 
       (.I0(addra_reg[7]),
        .I1(\addra[10]_i_6_n_0 ),
        .I2(addra_reg[6]),
        .O(p_0_in__0[7]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \addra[8]_i_1 
       (.I0(addra_reg[8]),
        .I1(addra_reg[6]),
        .I2(\addra[10]_i_6_n_0 ),
        .I3(addra_reg[7]),
        .O(p_0_in__0[8]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \addra[9]_i_1 
       (.I0(addra_reg[9]),
        .I1(addra_reg[7]),
        .I2(\addra[10]_i_6_n_0 ),
        .I3(addra_reg[6]),
        .I4(addra_reg[8]),
        .O(p_0_in__0[9]));
  FDRE #(
    .INIT(1'b0)) 
    \addra_reg[0] 
       (.C(clk),
        .CE(\addra[10]_i_2_n_0 ),
        .D(p_0_in__0[0]),
        .Q(addra_reg[0]),
        .R(\addra[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \addra_reg[10] 
       (.C(clk),
        .CE(\addra[10]_i_2_n_0 ),
        .D(p_0_in__0[10]),
        .Q(addra_reg[10]),
        .R(\addra[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \addra_reg[1] 
       (.C(clk),
        .CE(\addra[10]_i_2_n_0 ),
        .D(p_0_in__0[1]),
        .Q(addra_reg[1]),
        .R(\addra[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \addra_reg[2] 
       (.C(clk),
        .CE(\addra[10]_i_2_n_0 ),
        .D(p_0_in__0[2]),
        .Q(addra_reg[2]),
        .R(\addra[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \addra_reg[3] 
       (.C(clk),
        .CE(\addra[10]_i_2_n_0 ),
        .D(p_0_in__0[3]),
        .Q(addra_reg[3]),
        .R(\addra[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \addra_reg[4] 
       (.C(clk),
        .CE(\addra[10]_i_2_n_0 ),
        .D(p_0_in__0[4]),
        .Q(addra_reg[4]),
        .R(\addra[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \addra_reg[5] 
       (.C(clk),
        .CE(\addra[10]_i_2_n_0 ),
        .D(p_0_in__0[5]),
        .Q(addra_reg[5]),
        .R(\addra[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \addra_reg[6] 
       (.C(clk),
        .CE(\addra[10]_i_2_n_0 ),
        .D(p_0_in__0[6]),
        .Q(addra_reg[6]),
        .R(\addra[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \addra_reg[7] 
       (.C(clk),
        .CE(\addra[10]_i_2_n_0 ),
        .D(p_0_in__0[7]),
        .Q(addra_reg[7]),
        .R(\addra[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \addra_reg[8] 
       (.C(clk),
        .CE(\addra[10]_i_2_n_0 ),
        .D(p_0_in__0[8]),
        .Q(addra_reg[8]),
        .R(\addra[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \addra_reg[9] 
       (.C(clk),
        .CE(\addra[10]_i_2_n_0 ),
        .D(p_0_in__0[9]),
        .Q(addra_reg[9]),
        .R(\addra[10]_i_1_n_0 ));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_1,blk_mem_gen_v8_4_4,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "blk_mem_gen_v8_4_4,Vivado 2020.1" *) 
  system_bayer2rgb_0_0_blk_mem_gen_1__1 bram0
       (.addra(addra_reg),
        .addrb(addra_reg),
        .clka(clk),
        .clkb(clk),
        .dina(data_in),
        .doutb(bram0_doutb),
        .pwropt(vsync_pos0),
        .pwropt_1(de_neg0),
        .pwropt_2(\wea[2]_i_1_n_0 ),
        .pwropt_3(\wea[0]_i_1_n_0 ),
        .pwropt_4(\wea_reg_n_0_[0] ),
        .pwropt_5(de_neg),
        .pwropt_6(p_0_in),
        .pwropt_7(vsync_pos),
        .wea(wea0));
  LUT2 #(
    .INIT(4'h8)) 
    bram0_i_1
       (.I0(\wea_reg_n_0_[0] ),
        .I1(de_in),
        .O(wea0));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_1,blk_mem_gen_v8_4_4,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "blk_mem_gen_v8_4_4,Vivado 2020.1" *) 
  system_bayer2rgb_0_0_blk_mem_gen_1__2 bram1
       (.addra(addra_reg),
        .addrb(addra_reg),
        .clka(clk),
        .clkb(clk),
        .dina(data_in),
        .doutb(bram1_doutb),
        .pwropt(vsync_pos0),
        .pwropt_1(\wea[2]_i_1_n_0 ),
        .pwropt_2(de_neg0),
        .pwropt_3(\wea[0]_i_1_n_0 ),
        .pwropt_4(\wea[1]_i_1_n_0 ),
        .wea(wea1));
  LUT2 #(
    .INIT(4'h8)) 
    bram1_i_1
       (.I0(de_in),
        .I1(p_0_in3_in),
        .O(wea1));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_1,blk_mem_gen_v8_4_4,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "blk_mem_gen_v8_4_4,Vivado 2020.1" *) 
  system_bayer2rgb_0_0_blk_mem_gen_1 bram2
       (.addra(addra_reg),
        .addrb(addra_reg),
        .clka(clk),
        .clkb(clk),
        .dina(data_in),
        .doutb(bram2_doutb),
        .pwropt(de_neg0),
        .pwropt_1(vsync_pos0),
        .pwropt_2(\wea[0]_i_1_n_0 ),
        .pwropt_3(\wea[1]_i_1_n_0 ),
        .wea(wea2));
  LUT2 #(
    .INIT(4'h8)) 
    bram2_i_1
       (.I0(de_in),
        .I1(p_0_in),
        .O(wea2));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \color_b[2]_i_1 
       (.I0(in6[2]),
        .I1(in5[2]),
        .I2(read_state__0[2]),
        .I3(in8[2]),
        .I4(\color_r[9]_i_5_n_0 ),
        .I5(in7[2]),
        .O(\color_b[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \color_b[3]_i_1 
       (.I0(in6[3]),
        .I1(in5[3]),
        .I2(read_state__0[2]),
        .I3(in8[3]),
        .I4(\color_r[9]_i_5_n_0 ),
        .I5(in7[3]),
        .O(\color_b[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \color_b[4]_i_1 
       (.I0(in6[4]),
        .I1(in5[4]),
        .I2(read_state__0[2]),
        .I3(in8[4]),
        .I4(\color_r[9]_i_5_n_0 ),
        .I5(in7[4]),
        .O(\color_b[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \color_b[5]_i_1 
       (.I0(in6[5]),
        .I1(in5[5]),
        .I2(read_state__0[2]),
        .I3(in8[5]),
        .I4(\color_r[9]_i_5_n_0 ),
        .I5(in7[5]),
        .O(\color_b[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \color_b[6]_i_1 
       (.I0(in6[6]),
        .I1(in5[6]),
        .I2(read_state__0[2]),
        .I3(in8[6]),
        .I4(\color_r[9]_i_5_n_0 ),
        .I5(in7[6]),
        .O(\color_b[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \color_b[7]_i_1 
       (.I0(in6[7]),
        .I1(in5[7]),
        .I2(read_state__0[2]),
        .I3(in8[7]),
        .I4(\color_r[9]_i_5_n_0 ),
        .I5(in7[7]),
        .O(\color_b[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \color_b[8]_i_1 
       (.I0(in6[8]),
        .I1(in5[8]),
        .I2(read_state__0[2]),
        .I3(in8[8]),
        .I4(\color_r[9]_i_5_n_0 ),
        .I5(in7[8]),
        .O(\color_b[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \color_b[9]_i_1 
       (.I0(in6[9]),
        .I1(in5[9]),
        .I2(read_state__0[2]),
        .I3(in8[9]),
        .I4(\color_r[9]_i_5_n_0 ),
        .I5(in7[9]),
        .O(\color_b[9]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \color_b_reg[2] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(\color_b[2]_i_1_n_0 ),
        .Q(data_out[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \color_b_reg[3] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(\color_b[3]_i_1_n_0 ),
        .Q(data_out[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \color_b_reg[4] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(\color_b[4]_i_1_n_0 ),
        .Q(data_out[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \color_b_reg[5] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(\color_b[5]_i_1_n_0 ),
        .Q(data_out[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \color_b_reg[6] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(\color_b[6]_i_1_n_0 ),
        .Q(data_out[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \color_b_reg[7] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(\color_b[7]_i_1_n_0 ),
        .Q(data_out[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \color_b_reg[8] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(\color_b[8]_i_1_n_0 ),
        .Q(data_out[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \color_b_reg[9] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(\color_b[9]_i_1_n_0 ),
        .Q(data_out[15]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h70FF7000)) 
    \color_g[2]_i_1 
       (.I0(read_state__0[2]),
        .I1(read_state__0[1]),
        .I2(in8[2]),
        .I3(read_state__0[0]),
        .I4(in9[2]),
        .O(color_g[2]));
  LUT5 #(
    .INIT(32'h70FF7000)) 
    \color_g[3]_i_1 
       (.I0(read_state__0[2]),
        .I1(read_state__0[1]),
        .I2(in8[3]),
        .I3(read_state__0[0]),
        .I4(in9[3]),
        .O(color_g[3]));
  LUT3 #(
    .INIT(8'h96)) 
    \color_g[3]_i_10 
       (.I0(\line1_reg[2] [2]),
        .I1(p_1_in[3]),
        .I2(p_0_in0_in[3]),
        .O(\color_g[3]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hFFE8E800)) 
    \color_g[3]_i_3 
       (.I0(\line1_reg[2] [1]),
        .I1(p_0_in0_in[2]),
        .I2(p_1_in[2]),
        .I3(p_1_in1_in[3]),
        .I4(\color_g[3]_i_10_n_0 ),
        .O(\color_g[3]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hE81717E8)) 
    \color_g[3]_i_4 
       (.I0(p_1_in[2]),
        .I1(p_0_in0_in[2]),
        .I2(\line1_reg[2] [1]),
        .I3(\color_g[3]_i_10_n_0 ),
        .I4(p_1_in1_in[3]),
        .O(\color_g[3]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \color_g[3]_i_5 
       (.I0(p_0_in0_in[2]),
        .I1(p_1_in[2]),
        .I2(\line1_reg[2] [1]),
        .I3(p_1_in1_in[2]),
        .O(\color_g[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \color_g[3]_i_6 
       (.I0(\color_g[3]_i_3_n_0 ),
        .I1(p_1_in1_in[4]),
        .I2(\color_g[7]_i_14_n_0 ),
        .I3(\line1_reg[2] [2]),
        .I4(p_0_in0_in[3]),
        .I5(p_1_in[3]),
        .O(\color_g[3]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h6999999699969666)) 
    \color_g[3]_i_7 
       (.I0(p_1_in1_in[3]),
        .I1(\color_g[3]_i_10_n_0 ),
        .I2(\line1_reg[2] [1]),
        .I3(p_1_in[2]),
        .I4(p_0_in0_in[2]),
        .I5(p_1_in1_in[2]),
        .O(\color_g[3]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h566A)) 
    \color_g[3]_i_8 
       (.I0(\color_g[3]_i_5_n_0 ),
        .I1(p_1_in[1]),
        .I2(\line1_reg[2] [0]),
        .I3(p_0_in0_in[1]),
        .O(\color_g[3]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \color_g[3]_i_9 
       (.I0(p_0_in0_in[1]),
        .I1(p_1_in[1]),
        .I2(\line1_reg[2] [0]),
        .I3(p_1_in1_in[1]),
        .O(\color_g[3]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h70FF7000)) 
    \color_g[4]_i_1 
       (.I0(read_state__0[2]),
        .I1(read_state__0[1]),
        .I2(in8[4]),
        .I3(read_state__0[0]),
        .I4(in9[4]),
        .O(color_g[4]));
  LUT5 #(
    .INIT(32'h70FF7000)) 
    \color_g[5]_i_1 
       (.I0(read_state__0[2]),
        .I1(read_state__0[1]),
        .I2(in8[5]),
        .I3(read_state__0[0]),
        .I4(in9[5]),
        .O(color_g[5]));
  LUT5 #(
    .INIT(32'h70FF7000)) 
    \color_g[6]_i_1 
       (.I0(read_state__0[2]),
        .I1(read_state__0[1]),
        .I2(in8[6]),
        .I3(read_state__0[0]),
        .I4(in9[6]),
        .O(color_g[6]));
  LUT5 #(
    .INIT(32'h70FF7000)) 
    \color_g[7]_i_1 
       (.I0(read_state__0[2]),
        .I1(read_state__0[1]),
        .I2(in8[7]),
        .I3(read_state__0[0]),
        .I4(in9[7]),
        .O(color_g[7]));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \color_g[7]_i_10 
       (.I0(\color_g[7]_i_6_n_0 ),
        .I1(p_1_in1_in[5]),
        .I2(\color_g[7]_i_13_n_0 ),
        .I3(\line1_reg[2] [3]),
        .I4(p_0_in0_in[4]),
        .I5(p_1_in[4]),
        .O(\color_g[7]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \color_g[7]_i_11 
       (.I0(\line1_reg[2] [6]),
        .I1(p_1_in[7]),
        .I2(p_0_in0_in[7]),
        .O(\color_g[7]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \color_g[7]_i_12 
       (.I0(\line1_reg[2] [5]),
        .I1(p_1_in[6]),
        .I2(p_0_in0_in[6]),
        .O(\color_g[7]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \color_g[7]_i_13 
       (.I0(\line1_reg[2] [4]),
        .I1(p_1_in[5]),
        .I2(p_0_in0_in[5]),
        .O(\color_g[7]_i_13_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \color_g[7]_i_14 
       (.I0(\line1_reg[2] [3]),
        .I1(p_1_in[4]),
        .I2(p_0_in0_in[4]),
        .O(\color_g[7]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \color_g[7]_i_3 
       (.I0(p_1_in1_in[7]),
        .I1(\color_g[7]_i_11_n_0 ),
        .I2(\line1_reg[2] [5]),
        .I3(p_0_in0_in[6]),
        .I4(p_1_in[6]),
        .O(\color_g[7]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \color_g[7]_i_4 
       (.I0(p_1_in1_in[6]),
        .I1(\color_g[7]_i_12_n_0 ),
        .I2(\line1_reg[2] [4]),
        .I3(p_0_in0_in[5]),
        .I4(p_1_in[5]),
        .O(\color_g[7]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFE8E800)) 
    \color_g[7]_i_5 
       (.I0(\line1_reg[2] [3]),
        .I1(p_0_in0_in[4]),
        .I2(p_1_in[4]),
        .I3(p_1_in1_in[5]),
        .I4(\color_g[7]_i_13_n_0 ),
        .O(\color_g[7]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \color_g[7]_i_6 
       (.I0(p_1_in1_in[4]),
        .I1(\color_g[7]_i_14_n_0 ),
        .I2(\line1_reg[2] [2]),
        .I3(p_0_in0_in[3]),
        .I4(p_1_in[3]),
        .O(\color_g[7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \color_g[7]_i_7 
       (.I0(\color_g[7]_i_3_n_0 ),
        .I1(p_1_in1_in[8]),
        .I2(\color_g[9]_i_5_n_0 ),
        .I3(\line1_reg[2] [6]),
        .I4(p_0_in0_in[7]),
        .I5(p_1_in[7]),
        .O(\color_g[7]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \color_g[7]_i_8 
       (.I0(\color_g[7]_i_4_n_0 ),
        .I1(p_1_in1_in[7]),
        .I2(\color_g[7]_i_11_n_0 ),
        .I3(\line1_reg[2] [5]),
        .I4(p_0_in0_in[6]),
        .I5(p_1_in[6]),
        .O(\color_g[7]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \color_g[7]_i_9 
       (.I0(\color_g[7]_i_5_n_0 ),
        .I1(p_1_in1_in[6]),
        .I2(\color_g[7]_i_12_n_0 ),
        .I3(\line1_reg[2] [4]),
        .I4(p_0_in0_in[5]),
        .I5(p_1_in[5]),
        .O(\color_g[7]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h70FF7000)) 
    \color_g[8]_i_1 
       (.I0(read_state__0[2]),
        .I1(read_state__0[1]),
        .I2(in8[8]),
        .I3(read_state__0[0]),
        .I4(in9[8]),
        .O(color_g[8]));
  LUT5 #(
    .INIT(32'h70FF7000)) 
    \color_g[9]_i_1 
       (.I0(read_state__0[2]),
        .I1(read_state__0[1]),
        .I2(in8[9]),
        .I3(read_state__0[0]),
        .I4(in9[9]),
        .O(color_g[9]));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \color_g[9]_i_3 
       (.I0(p_1_in1_in[8]),
        .I1(\color_g[9]_i_5_n_0 ),
        .I2(\line1_reg[2] [6]),
        .I3(p_0_in0_in[7]),
        .I4(p_1_in[7]),
        .O(\color_g[9]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h177E7EE8)) 
    \color_g[9]_i_4 
       (.I0(\color_g[9]_i_6_n_0 ),
        .I1(p_1_in1_in[8]),
        .I2(p_1_in[8]),
        .I3(\line1_reg[2] [7]),
        .I4(p_0_in0_in[8]),
        .O(\color_g[9]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \color_g[9]_i_5 
       (.I0(p_0_in0_in[8]),
        .I1(\line1_reg[2] [7]),
        .I2(p_1_in[8]),
        .O(\color_g[9]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'hE8)) 
    \color_g[9]_i_6 
       (.I0(\line1_reg[2] [6]),
        .I1(p_0_in0_in[7]),
        .I2(p_1_in[7]),
        .O(\color_g[9]_i_6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \color_g_reg[2] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(color_g[2]),
        .Q(data_out[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \color_g_reg[3] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(color_g[3]),
        .Q(data_out[1]),
        .R(1'b0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \color_g_reg[3]_i_2 
       (.CI(1'b0),
        .CO({\color_g_reg[3]_i_2_n_0 ,\NLW_color_g_reg[3]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\color_g[3]_i_3_n_0 ,\color_g[3]_i_4_n_0 ,\color_g[3]_i_5_n_0 ,p_1_in1_in[1]}),
        .O({in9[3:2],\NLW_color_g_reg[3]_i_2_O_UNCONNECTED [1:0]}),
        .S({\color_g[3]_i_6_n_0 ,\color_g[3]_i_7_n_0 ,\color_g[3]_i_8_n_0 ,\color_g[3]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \color_g_reg[4] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(color_g[4]),
        .Q(data_out[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \color_g_reg[5] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(color_g[5]),
        .Q(data_out[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \color_g_reg[6] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(color_g[6]),
        .Q(data_out[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \color_g_reg[7] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(color_g[7]),
        .Q(data_out[5]),
        .R(1'b0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \color_g_reg[7]_i_2 
       (.CI(\color_g_reg[3]_i_2_n_0 ),
        .CO({\color_g_reg[7]_i_2_n_0 ,\NLW_color_g_reg[7]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\color_g[7]_i_3_n_0 ,\color_g[7]_i_4_n_0 ,\color_g[7]_i_5_n_0 ,\color_g[7]_i_6_n_0 }),
        .O(in9[7:4]),
        .S({\color_g[7]_i_7_n_0 ,\color_g[7]_i_8_n_0 ,\color_g[7]_i_9_n_0 ,\color_g[7]_i_10_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \color_g_reg[8] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(color_g[8]),
        .Q(data_out[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \color_g_reg[9] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(color_g[9]),
        .Q(data_out[7]),
        .R(1'b0));
  CARRY4 \color_g_reg[9]_i_2 
       (.CI(\color_g_reg[7]_i_2_n_0 ),
        .CO({\NLW_color_g_reg[9]_i_2_CO_UNCONNECTED [3:2],in9[9],\NLW_color_g_reg[9]_i_2_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\color_g[9]_i_3_n_0 }),
        .O({\NLW_color_g_reg[9]_i_2_O_UNCONNECTED [3:1],in9[8]}),
        .S({1'b0,1'b0,1'b1,\color_g[9]_i_4_n_0 }));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \color_r[2]_i_1 
       (.I0(in7[2]),
        .I1(in8[2]),
        .I2(read_state__0[2]),
        .I3(in5[2]),
        .I4(\color_r[9]_i_5_n_0 ),
        .I5(in6[2]),
        .O(\color_r[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \color_r[3]_i_1 
       (.I0(in7[3]),
        .I1(in8[3]),
        .I2(read_state__0[2]),
        .I3(in5[3]),
        .I4(\color_r[9]_i_5_n_0 ),
        .I5(in6[3]),
        .O(\color_r[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \color_r[3]_i_10 
       (.I0(\line2_reg[2] [1]),
        .I1(\line0_reg[2] [1]),
        .I2(\line2_reg[0] [1]),
        .I3(\line0_reg[0] [1]),
        .O(\color_r[3]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \color_r[3]_i_11 
       (.I0(\color_r[3]_i_8_n_0 ),
        .I1(\line0_reg[0] [3]),
        .I2(\color_r[7]_i_24_n_0 ),
        .I3(\line2_reg[0] [2]),
        .I4(\line2_reg[2] [2]),
        .I5(\line0_reg[2] [2]),
        .O(\color_r[3]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h6999999699969666)) 
    \color_r[3]_i_12 
       (.I0(\line0_reg[0] [2]),
        .I1(\color_r[3]_i_18_n_0 ),
        .I2(\line2_reg[0] [1]),
        .I3(\line0_reg[2] [1]),
        .I4(\line2_reg[2] [1]),
        .I5(\line0_reg[0] [1]),
        .O(\color_r[3]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h566A)) 
    \color_r[3]_i_13 
       (.I0(\color_r[3]_i_10_n_0 ),
        .I1(\line2_reg[2] [0]),
        .I2(\line0_reg[2] [0]),
        .I3(\line2_reg[0] [0]),
        .O(\color_r[3]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h6996)) 
    \color_r[3]_i_14 
       (.I0(\line2_reg[0] [0]),
        .I1(\line0_reg[2] [0]),
        .I2(\line2_reg[2] [0]),
        .I3(\line0_reg[0] [0]),
        .O(\color_r[3]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \color_r[3]_i_15 
       (.I0(p_1_in1_in[3]),
        .I1(p_0_in0_in[3]),
        .O(\color_r[3]_i_15_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \color_r[3]_i_16 
       (.I0(p_1_in1_in[2]),
        .I1(p_0_in0_in[2]),
        .O(\color_r[3]_i_16_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \color_r[3]_i_17 
       (.I0(p_1_in1_in[1]),
        .I1(p_0_in0_in[1]),
        .O(\color_r[3]_i_17_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \color_r[3]_i_18 
       (.I0(\line2_reg[0] [2]),
        .I1(\line0_reg[2] [2]),
        .I2(\line2_reg[2] [2]),
        .O(\color_r[3]_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \color_r[3]_i_5 
       (.I0(p_1_in[3]),
        .I1(\line1_reg[2] [2]),
        .O(\color_r[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \color_r[3]_i_6 
       (.I0(p_1_in[2]),
        .I1(\line1_reg[2] [1]),
        .O(\color_r[3]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \color_r[3]_i_7 
       (.I0(p_1_in[1]),
        .I1(\line1_reg[2] [0]),
        .O(\color_r[3]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFE8E800)) 
    \color_r[3]_i_8 
       (.I0(\line2_reg[0] [1]),
        .I1(\line2_reg[2] [1]),
        .I2(\line0_reg[2] [1]),
        .I3(\line0_reg[0] [2]),
        .I4(\color_r[3]_i_18_n_0 ),
        .O(\color_r[3]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hE81717E8)) 
    \color_r[3]_i_9 
       (.I0(\line0_reg[2] [1]),
        .I1(\line2_reg[2] [1]),
        .I2(\line2_reg[0] [1]),
        .I3(\color_r[3]_i_18_n_0 ),
        .I4(\line0_reg[0] [2]),
        .O(\color_r[3]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \color_r[4]_i_1 
       (.I0(in7[4]),
        .I1(in8[4]),
        .I2(read_state__0[2]),
        .I3(in5[4]),
        .I4(\color_r[9]_i_5_n_0 ),
        .I5(in6[4]),
        .O(\color_r[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \color_r[5]_i_1 
       (.I0(in7[5]),
        .I1(in8[5]),
        .I2(read_state__0[2]),
        .I3(in5[5]),
        .I4(\color_r[9]_i_5_n_0 ),
        .I5(in6[5]),
        .O(\color_r[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \color_r[6]_i_1 
       (.I0(in7[6]),
        .I1(in8[6]),
        .I2(read_state__0[2]),
        .I3(in5[6]),
        .I4(\color_r[9]_i_5_n_0 ),
        .I5(in6[6]),
        .O(\color_r[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \color_r[7]_i_1 
       (.I0(in7[7]),
        .I1(in8[7]),
        .I2(read_state__0[2]),
        .I3(in5[7]),
        .I4(\color_r[9]_i_5_n_0 ),
        .I5(in6[7]),
        .O(\color_r[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \color_r[7]_i_10 
       (.I0(\line0_reg[0] [5]),
        .I1(\color_r[7]_i_22_n_0 ),
        .I2(\line2_reg[0] [4]),
        .I3(\line2_reg[2] [4]),
        .I4(\line0_reg[2] [4]),
        .O(\color_r[7]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \color_r[7]_i_11 
       (.I0(\line0_reg[0] [4]),
        .I1(\color_r[7]_i_23_n_0 ),
        .I2(\line2_reg[0] [3]),
        .I3(\line2_reg[2] [3]),
        .I4(\line0_reg[2] [3]),
        .O(\color_r[7]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \color_r[7]_i_12 
       (.I0(\line0_reg[0] [3]),
        .I1(\color_r[7]_i_24_n_0 ),
        .I2(\line2_reg[0] [2]),
        .I3(\line2_reg[2] [2]),
        .I4(\line0_reg[2] [2]),
        .O(\color_r[7]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \color_r[7]_i_13 
       (.I0(\color_r[7]_i_9_n_0 ),
        .I1(\line0_reg[0] [7]),
        .I2(\color_r[9]_i_11_n_0 ),
        .I3(\line2_reg[0] [6]),
        .I4(\line2_reg[2] [6]),
        .I5(\line0_reg[2] [6]),
        .O(\color_r[7]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \color_r[7]_i_14 
       (.I0(\color_r[7]_i_10_n_0 ),
        .I1(\line0_reg[0] [6]),
        .I2(\color_r[7]_i_21_n_0 ),
        .I3(\line2_reg[0] [5]),
        .I4(\line2_reg[2] [5]),
        .I5(\line0_reg[2] [5]),
        .O(\color_r[7]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \color_r[7]_i_15 
       (.I0(\color_r[7]_i_11_n_0 ),
        .I1(\line0_reg[0] [5]),
        .I2(\color_r[7]_i_22_n_0 ),
        .I3(\line2_reg[0] [4]),
        .I4(\line2_reg[2] [4]),
        .I5(\line0_reg[2] [4]),
        .O(\color_r[7]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    \color_r[7]_i_16 
       (.I0(\color_r[7]_i_12_n_0 ),
        .I1(\line0_reg[0] [4]),
        .I2(\color_r[7]_i_23_n_0 ),
        .I3(\line2_reg[0] [3]),
        .I4(\line2_reg[2] [3]),
        .I5(\line0_reg[2] [3]),
        .O(\color_r[7]_i_16_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \color_r[7]_i_17 
       (.I0(p_1_in1_in[7]),
        .I1(p_0_in0_in[7]),
        .O(\color_r[7]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \color_r[7]_i_18 
       (.I0(p_1_in1_in[6]),
        .I1(p_0_in0_in[6]),
        .O(\color_r[7]_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \color_r[7]_i_19 
       (.I0(p_1_in1_in[5]),
        .I1(p_0_in0_in[5]),
        .O(\color_r[7]_i_19_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \color_r[7]_i_20 
       (.I0(p_1_in1_in[4]),
        .I1(p_0_in0_in[4]),
        .O(\color_r[7]_i_20_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \color_r[7]_i_21 
       (.I0(\line2_reg[0] [6]),
        .I1(\line0_reg[2] [6]),
        .I2(\line2_reg[2] [6]),
        .O(\color_r[7]_i_21_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \color_r[7]_i_22 
       (.I0(\line2_reg[0] [5]),
        .I1(\line0_reg[2] [5]),
        .I2(\line2_reg[2] [5]),
        .O(\color_r[7]_i_22_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \color_r[7]_i_23 
       (.I0(\line2_reg[0] [4]),
        .I1(\line0_reg[2] [4]),
        .I2(\line2_reg[2] [4]),
        .O(\color_r[7]_i_23_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \color_r[7]_i_24 
       (.I0(\line2_reg[0] [3]),
        .I1(\line0_reg[2] [3]),
        .I2(\line2_reg[2] [3]),
        .O(\color_r[7]_i_24_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \color_r[7]_i_5 
       (.I0(p_1_in[7]),
        .I1(\line1_reg[2] [6]),
        .O(\color_r[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \color_r[7]_i_6 
       (.I0(p_1_in[6]),
        .I1(\line1_reg[2] [5]),
        .O(\color_r[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \color_r[7]_i_7 
       (.I0(p_1_in[5]),
        .I1(\line1_reg[2] [4]),
        .O(\color_r[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \color_r[7]_i_8 
       (.I0(p_1_in[4]),
        .I1(\line1_reg[2] [3]),
        .O(\color_r[7]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \color_r[7]_i_9 
       (.I0(\line0_reg[0] [6]),
        .I1(\color_r[7]_i_21_n_0 ),
        .I2(\line2_reg[0] [5]),
        .I3(\line2_reg[2] [5]),
        .I4(\line0_reg[2] [5]),
        .O(\color_r[7]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \color_r[8]_i_1 
       (.I0(in7[8]),
        .I1(in8[8]),
        .I2(read_state__0[2]),
        .I3(in5[8]),
        .I4(\color_r[9]_i_5_n_0 ),
        .I5(in6[8]),
        .O(\color_r[8]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \color_r[9]_i_1 
       (.I0(read_state__0[2]),
        .I1(read_state__0[0]),
        .I2(read_state__0[1]),
        .O(\color_r[9]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \color_r[9]_i_10 
       (.I0(p_1_in1_in[8]),
        .I1(p_0_in0_in[8]),
        .O(\color_r[9]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \color_r[9]_i_11 
       (.I0(\line2_reg[2] [7]),
        .I1(\line0_reg[2] [7]),
        .I2(\line2_reg[0] [7]),
        .O(\color_r[9]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'hE8)) 
    \color_r[9]_i_12 
       (.I0(\line2_reg[0] [6]),
        .I1(\line2_reg[2] [6]),
        .I2(\line0_reg[2] [6]),
        .O(\color_r[9]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \color_r[9]_i_2 
       (.I0(in7[9]),
        .I1(in8[9]),
        .I2(read_state__0[2]),
        .I3(in5[9]),
        .I4(\color_r[9]_i_5_n_0 ),
        .I5(in6[9]),
        .O(\color_r[9]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h35)) 
    \color_r[9]_i_5 
       (.I0(read_state__0[0]),
        .I1(read_state__0[1]),
        .I2(read_state__0[2]),
        .O(\color_r[9]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \color_r[9]_i_7 
       (.I0(p_1_in[8]),
        .I1(\line1_reg[2] [7]),
        .O(\color_r[9]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \color_r[9]_i_8 
       (.I0(\line0_reg[0] [7]),
        .I1(\color_r[9]_i_11_n_0 ),
        .I2(\line2_reg[0] [6]),
        .I3(\line2_reg[2] [6]),
        .I4(\line0_reg[2] [6]),
        .O(\color_r[9]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h177E7EE8)) 
    \color_r[9]_i_9 
       (.I0(\color_r[9]_i_12_n_0 ),
        .I1(\line0_reg[0] [7]),
        .I2(\line0_reg[2] [7]),
        .I3(\line2_reg[0] [7]),
        .I4(\line2_reg[2] [7]),
        .O(\color_r[9]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \color_r_reg[2] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(\color_r[2]_i_1_n_0 ),
        .Q(data_out[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \color_r_reg[3] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(\color_r[3]_i_1_n_0 ),
        .Q(data_out[17]),
        .R(1'b0));
  (* OPT_MODIFIED = "PROPCONST SWEEP" *) 
  CARRY4 \color_r_reg[3]_i_2 
       (.CI(1'b0),
        .CO({\color_r_reg[3]_i_2_n_0 ,\NLW_color_r_reg[3]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({p_1_in[3:1],1'b0}),
        .O({in7[3:2],\NLW_color_r_reg[3]_i_2_O_UNCONNECTED [1:0]}),
        .S({\color_r[3]_i_5_n_0 ,\color_r[3]_i_6_n_0 ,\color_r[3]_i_7_n_0 ,1'b0}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \color_r_reg[3]_i_3 
       (.CI(1'b0),
        .CO({\color_r_reg[3]_i_3_n_0 ,\NLW_color_r_reg[3]_i_3_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\color_r[3]_i_8_n_0 ,\color_r[3]_i_9_n_0 ,\color_r[3]_i_10_n_0 ,\line0_reg[0] [0]}),
        .O({in5[3:2],\NLW_color_r_reg[3]_i_3_O_UNCONNECTED [1:0]}),
        .S({\color_r[3]_i_11_n_0 ,\color_r[3]_i_12_n_0 ,\color_r[3]_i_13_n_0 ,\color_r[3]_i_14_n_0 }));
  (* OPT_MODIFIED = "PROPCONST SWEEP" *) 
  CARRY4 \color_r_reg[3]_i_4 
       (.CI(1'b0),
        .CO({\color_r_reg[3]_i_4_n_0 ,\NLW_color_r_reg[3]_i_4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({p_1_in1_in[3:1],1'b0}),
        .O({in6[3:2],\NLW_color_r_reg[3]_i_4_O_UNCONNECTED [1:0]}),
        .S({\color_r[3]_i_15_n_0 ,\color_r[3]_i_16_n_0 ,\color_r[3]_i_17_n_0 ,1'b0}));
  FDRE #(
    .INIT(1'b0)) 
    \color_r_reg[4] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(\color_r[4]_i_1_n_0 ),
        .Q(data_out[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \color_r_reg[5] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(\color_r[5]_i_1_n_0 ),
        .Q(data_out[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \color_r_reg[6] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(\color_r[6]_i_1_n_0 ),
        .Q(data_out[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \color_r_reg[7] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(\color_r[7]_i_1_n_0 ),
        .Q(data_out[21]),
        .R(1'b0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \color_r_reg[7]_i_2 
       (.CI(\color_r_reg[3]_i_2_n_0 ),
        .CO({\color_r_reg[7]_i_2_n_0 ,\NLW_color_r_reg[7]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(p_1_in[7:4]),
        .O(in7[7:4]),
        .S({\color_r[7]_i_5_n_0 ,\color_r[7]_i_6_n_0 ,\color_r[7]_i_7_n_0 ,\color_r[7]_i_8_n_0 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \color_r_reg[7]_i_3 
       (.CI(\color_r_reg[3]_i_3_n_0 ),
        .CO({\color_r_reg[7]_i_3_n_0 ,\NLW_color_r_reg[7]_i_3_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\color_r[7]_i_9_n_0 ,\color_r[7]_i_10_n_0 ,\color_r[7]_i_11_n_0 ,\color_r[7]_i_12_n_0 }),
        .O(in5[7:4]),
        .S({\color_r[7]_i_13_n_0 ,\color_r[7]_i_14_n_0 ,\color_r[7]_i_15_n_0 ,\color_r[7]_i_16_n_0 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \color_r_reg[7]_i_4 
       (.CI(\color_r_reg[3]_i_4_n_0 ),
        .CO({\color_r_reg[7]_i_4_n_0 ,\NLW_color_r_reg[7]_i_4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(p_1_in1_in[7:4]),
        .O(in6[7:4]),
        .S({\color_r[7]_i_17_n_0 ,\color_r[7]_i_18_n_0 ,\color_r[7]_i_19_n_0 ,\color_r[7]_i_20_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \color_r_reg[8] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(\color_r[8]_i_1_n_0 ),
        .Q(data_out[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \color_r_reg[9] 
       (.C(clk),
        .CE(\color_r[9]_i_1_n_0 ),
        .D(\color_r[9]_i_2_n_0 ),
        .Q(data_out[23]),
        .R(1'b0));
  CARRY4 \color_r_reg[9]_i_3 
       (.CI(\color_r_reg[7]_i_2_n_0 ),
        .CO({\NLW_color_r_reg[9]_i_3_CO_UNCONNECTED [3:2],in7[9],\NLW_color_r_reg[9]_i_3_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,p_1_in[8]}),
        .O({\NLW_color_r_reg[9]_i_3_O_UNCONNECTED [3:1],in7[8]}),
        .S({1'b0,1'b0,1'b1,\color_r[9]_i_7_n_0 }));
  CARRY4 \color_r_reg[9]_i_4 
       (.CI(\color_r_reg[7]_i_3_n_0 ),
        .CO({\NLW_color_r_reg[9]_i_4_CO_UNCONNECTED [3:2],in5[9],\NLW_color_r_reg[9]_i_4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\color_r[9]_i_8_n_0 }),
        .O({\NLW_color_r_reg[9]_i_4_O_UNCONNECTED [3:1],in5[8]}),
        .S({1'b0,1'b0,1'b1,\color_r[9]_i_9_n_0 }));
  CARRY4 \color_r_reg[9]_i_6 
       (.CI(\color_r_reg[7]_i_4_n_0 ),
        .CO({\NLW_color_r_reg[9]_i_6_CO_UNCONNECTED [3:2],in6[9],\NLW_color_r_reg[9]_i_6_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,p_1_in1_in[8]}),
        .O({\NLW_color_r_reg[9]_i_6_O_UNCONNECTED [3:1],in6[8]}),
        .S({1'b0,1'b0,1'b1,\color_r[9]_i_10_n_0 }));
  (* srl_bus_name = "inst/\data_in_r2_reg " *) 
  (* srl_name = "inst/\data_in_r2_reg[0]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \data_in_r2_reg[0]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(data_in[0]),
        .Q(\data_in_r2_reg[0]_srl2_n_0 ));
  (* srl_bus_name = "inst/\data_in_r2_reg " *) 
  (* srl_name = "inst/\data_in_r2_reg[1]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \data_in_r2_reg[1]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(data_in[1]),
        .Q(\data_in_r2_reg[1]_srl2_n_0 ));
  (* srl_bus_name = "inst/\data_in_r2_reg " *) 
  (* srl_name = "inst/\data_in_r2_reg[2]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \data_in_r2_reg[2]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(data_in[2]),
        .Q(\data_in_r2_reg[2]_srl2_n_0 ));
  (* srl_bus_name = "inst/\data_in_r2_reg " *) 
  (* srl_name = "inst/\data_in_r2_reg[3]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \data_in_r2_reg[3]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(data_in[3]),
        .Q(\data_in_r2_reg[3]_srl2_n_0 ));
  (* srl_bus_name = "inst/\data_in_r2_reg " *) 
  (* srl_name = "inst/\data_in_r2_reg[4]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \data_in_r2_reg[4]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(data_in[4]),
        .Q(\data_in_r2_reg[4]_srl2_n_0 ));
  (* srl_bus_name = "inst/\data_in_r2_reg " *) 
  (* srl_name = "inst/\data_in_r2_reg[5]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \data_in_r2_reg[5]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(data_in[5]),
        .Q(\data_in_r2_reg[5]_srl2_n_0 ));
  (* srl_bus_name = "inst/\data_in_r2_reg " *) 
  (* srl_name = "inst/\data_in_r2_reg[6]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \data_in_r2_reg[6]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(data_in[6]),
        .Q(\data_in_r2_reg[6]_srl2_n_0 ));
  (* srl_bus_name = "inst/\data_in_r2_reg " *) 
  (* srl_name = "inst/\data_in_r2_reg[7]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \data_in_r2_reg[7]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(data_in[7]),
        .Q(\data_in_r2_reg[7]_srl2_n_0 ));
  (* srl_bus_name = "inst/\de_delay_r_reg " *) 
  (* srl_name = "inst/\de_delay_r_reg[4]_srl5 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \de_delay_r_reg[4]_srl5 
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(de_delay),
        .Q(\de_delay_r_reg[4]_srl5_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFF557F)) 
    \de_delay_r_reg[4]_srl5_i_1 
       (.I0(vdata[9]),
        .I1(vdata[6]),
        .I2(vdata[7]),
        .I3(vdata[8]),
        .I4(\de_delay_r_reg[4]_srl5_i_2_n_0 ),
        .I5(\de_delay_r_reg[4]_srl5_i_3_n_0 ),
        .O(de_delay));
  LUT6 #(
    .INIT(64'h0000000000005557)) 
    \de_delay_r_reg[4]_srl5_i_2 
       (.I0(vdata[4]),
        .I1(vdata[1]),
        .I2(vdata[3]),
        .I3(vdata[2]),
        .I4(vdata[8]),
        .I5(vdata[5]),
        .O(\de_delay_r_reg[4]_srl5_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hE0FFE0E0)) 
    \de_delay_r_reg[4]_srl5_i_3 
       (.I0(hdata[9]),
        .I1(hdata[8]),
        .I2(hdata[10]),
        .I3(\de_delay_r_reg[4]_srl5_i_4_n_0 ),
        .I4(\addra[10]_i_7_n_0 ),
        .O(\de_delay_r_reg[4]_srl5_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \de_delay_r_reg[4]_srl5_i_4 
       (.I0(vdata[8]),
        .I1(vdata[5]),
        .I2(vdata[4]),
        .I3(vdata[6]),
        .I4(vdata[7]),
        .I5(vdata[9]),
        .O(\de_delay_r_reg[4]_srl5_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \de_delay_r_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\de_delay_r_reg[4]_srl5_n_0 ),
        .Q(de_out),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    de_neg_i_1
       (.I0(de_r3),
        .I1(de_r2),
        .O(de_neg0));
  FDRE #(
    .INIT(1'b0)) 
    de_neg_r1_reg
       (.C(clk),
        .CE(1'b1),
        .D(de_neg),
        .Q(de_neg_r1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    de_neg_r2_reg
       (.C(clk),
        .CE(1'b1),
        .D(de_neg_r1),
        .Q(de_neg_r2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    de_neg_reg
       (.C(clk),
        .CE(1'b1),
        .D(de_neg0),
        .Q(de_neg),
        .R(1'b0));
  (* srl_name = "inst/de_pos_r1_reg_srl2" *) 
  SRL16E #(
    .INIT(16'h0000)) 
    de_pos_r1_reg_srl2
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(de_pos0),
        .Q(de_pos_r1_reg_srl2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    de_pos_r1_reg_srl2_i_1
       (.I0(de_r2),
        .I1(de_r3),
        .O(de_pos0));
  FDRE #(
    .INIT(1'b0)) 
    de_pos_r2_reg
       (.C(clk),
        .CE(1'b1),
        .D(de_pos_r1_reg_srl2_n_0),
        .Q(de_pos_r2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    de_r1_reg
       (.C(clk),
        .CE(1'b1),
        .D(de_in),
        .Q(de_r1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    de_r2_reg
       (.C(clk),
        .CE(1'b1),
        .D(de_r1),
        .Q(de_r2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    de_r3_reg
       (.C(clk),
        .CE(1'b1),
        .D(de_r2),
        .Q(de_r3),
        .R(1'b0));
  (* srl_bus_name = "inst/\hsync_delay_r_reg " *) 
  (* srl_name = "inst/\hsync_delay_r_reg[4]_srl5 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \hsync_delay_r_reg[4]_srl5 
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(\hsync_delay_r_reg[4]_srl5_i_1_n_0 ),
        .Q(\hsync_delay_r_reg[4]_srl5_n_0 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \hsync_delay_r_reg[4]_srl5_i_1 
       (.I0(hdata[10]),
        .I1(hdata[9]),
        .I2(hdata[8]),
        .I3(\hsync_delay_r_reg[4]_srl5_i_2_n_0 ),
        .O(\hsync_delay_r_reg[4]_srl5_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFBFBFBDBDFDFDFD)) 
    \hsync_delay_r_reg[4]_srl5_i_2 
       (.I0(hdata[7]),
        .I1(hdata[6]),
        .I2(hdata[5]),
        .I3(hdata[3]),
        .I4(\hsync_delay_r_reg[4]_srl5_i_3_n_0 ),
        .I5(hdata[4]),
        .O(\hsync_delay_r_reg[4]_srl5_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \hsync_delay_r_reg[4]_srl5_i_3 
       (.I0(hdata[1]),
        .I1(hdata[2]),
        .O(\hsync_delay_r_reg[4]_srl5_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \hsync_delay_r_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\hsync_delay_r_reg[4]_srl5_n_0 ),
        .Q(hsync_out),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \line0[0][0]_i_1 
       (.I0(bram1_doutb[0]),
        .I1(\wea_reg_n_0_[0] ),
        .I2(bram2_doutb[0]),
        .I3(p_0_in3_in),
        .I4(bram0_doutb[0]),
        .O(\line0[0][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \line0[0][1]_i_1 
       (.I0(bram1_doutb[1]),
        .I1(\wea_reg_n_0_[0] ),
        .I2(bram2_doutb[1]),
        .I3(p_0_in3_in),
        .I4(bram0_doutb[1]),
        .O(\line0[0][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \line0[0][2]_i_1 
       (.I0(bram1_doutb[2]),
        .I1(\wea_reg_n_0_[0] ),
        .I2(bram2_doutb[2]),
        .I3(p_0_in3_in),
        .I4(bram0_doutb[2]),
        .O(\line0[0][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \line0[0][3]_i_1 
       (.I0(bram1_doutb[3]),
        .I1(\wea_reg_n_0_[0] ),
        .I2(bram2_doutb[3]),
        .I3(p_0_in3_in),
        .I4(bram0_doutb[3]),
        .O(\line0[0][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \line0[0][4]_i_1 
       (.I0(bram1_doutb[4]),
        .I1(\wea_reg_n_0_[0] ),
        .I2(bram2_doutb[4]),
        .I3(p_0_in3_in),
        .I4(bram0_doutb[4]),
        .O(\line0[0][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \line0[0][5]_i_1 
       (.I0(bram1_doutb[5]),
        .I1(\wea_reg_n_0_[0] ),
        .I2(bram2_doutb[5]),
        .I3(p_0_in3_in),
        .I4(bram0_doutb[5]),
        .O(\line0[0][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \line0[0][6]_i_1 
       (.I0(bram1_doutb[6]),
        .I1(\wea_reg_n_0_[0] ),
        .I2(bram2_doutb[6]),
        .I3(p_0_in3_in),
        .I4(bram0_doutb[6]),
        .O(\line0[0][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \line0[0][7]_i_1 
       (.I0(bram1_doutb[7]),
        .I1(\wea_reg_n_0_[0] ),
        .I2(bram2_doutb[7]),
        .I3(p_0_in3_in),
        .I4(bram0_doutb[7]),
        .O(\line0[0][7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[0][0] 
       (.C(clk),
        .CE(1'b1),
        .D(\line0[0][0]_i_1_n_0 ),
        .Q(\line0_reg[0] [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[0][1] 
       (.C(clk),
        .CE(1'b1),
        .D(\line0[0][1]_i_1_n_0 ),
        .Q(\line0_reg[0] [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[0][2] 
       (.C(clk),
        .CE(1'b1),
        .D(\line0[0][2]_i_1_n_0 ),
        .Q(\line0_reg[0] [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[0][3] 
       (.C(clk),
        .CE(1'b1),
        .D(\line0[0][3]_i_1_n_0 ),
        .Q(\line0_reg[0] [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[0][4] 
       (.C(clk),
        .CE(1'b1),
        .D(\line0[0][4]_i_1_n_0 ),
        .Q(\line0_reg[0] [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[0][5] 
       (.C(clk),
        .CE(1'b1),
        .D(\line0[0][5]_i_1_n_0 ),
        .Q(\line0_reg[0] [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[0][6] 
       (.C(clk),
        .CE(1'b1),
        .D(\line0[0][6]_i_1_n_0 ),
        .Q(\line0_reg[0] [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[0][7] 
       (.C(clk),
        .CE(1'b1),
        .D(\line0[0][7]_i_1_n_0 ),
        .Q(\line0_reg[0] [7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[1][0] 
       (.C(clk),
        .CE(1'b1),
        .D(\line0_reg[0] [0]),
        .Q(p_1_in1_in[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[1][1] 
       (.C(clk),
        .CE(1'b1),
        .D(\line0_reg[0] [1]),
        .Q(p_1_in1_in[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[1][2] 
       (.C(clk),
        .CE(1'b1),
        .D(\line0_reg[0] [2]),
        .Q(p_1_in1_in[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[1][3] 
       (.C(clk),
        .CE(1'b1),
        .D(\line0_reg[0] [3]),
        .Q(p_1_in1_in[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[1][4] 
       (.C(clk),
        .CE(1'b1),
        .D(\line0_reg[0] [4]),
        .Q(p_1_in1_in[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[1][5] 
       (.C(clk),
        .CE(1'b1),
        .D(\line0_reg[0] [5]),
        .Q(p_1_in1_in[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[1][6] 
       (.C(clk),
        .CE(1'b1),
        .D(\line0_reg[0] [6]),
        .Q(p_1_in1_in[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[1][7] 
       (.C(clk),
        .CE(1'b1),
        .D(\line0_reg[0] [7]),
        .Q(p_1_in1_in[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[2][0] 
       (.C(clk),
        .CE(1'b1),
        .D(p_1_in1_in[1]),
        .Q(\line0_reg[2] [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[2][1] 
       (.C(clk),
        .CE(1'b1),
        .D(p_1_in1_in[2]),
        .Q(\line0_reg[2] [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[2][2] 
       (.C(clk),
        .CE(1'b1),
        .D(p_1_in1_in[3]),
        .Q(\line0_reg[2] [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[2][3] 
       (.C(clk),
        .CE(1'b1),
        .D(p_1_in1_in[4]),
        .Q(\line0_reg[2] [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[2][4] 
       (.C(clk),
        .CE(1'b1),
        .D(p_1_in1_in[5]),
        .Q(\line0_reg[2] [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[2][5] 
       (.C(clk),
        .CE(1'b1),
        .D(p_1_in1_in[6]),
        .Q(\line0_reg[2] [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[2][6] 
       (.C(clk),
        .CE(1'b1),
        .D(p_1_in1_in[7]),
        .Q(\line0_reg[2] [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line0_reg[2][7] 
       (.C(clk),
        .CE(1'b1),
        .D(p_1_in1_in[8]),
        .Q(\line0_reg[2] [7]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \line1[0][0]_i_1 
       (.I0(bram2_doutb[0]),
        .I1(\wea_reg_n_0_[0] ),
        .I2(bram0_doutb[0]),
        .I3(p_0_in3_in),
        .I4(bram1_doutb[0]),
        .O(\line1[0][0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \line1[0][1]_i_1 
       (.I0(bram2_doutb[1]),
        .I1(\wea_reg_n_0_[0] ),
        .I2(bram0_doutb[1]),
        .I3(p_0_in3_in),
        .I4(bram1_doutb[1]),
        .O(\line1[0][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \line1[0][2]_i_1 
       (.I0(bram2_doutb[2]),
        .I1(\wea_reg_n_0_[0] ),
        .I2(bram0_doutb[2]),
        .I3(p_0_in3_in),
        .I4(bram1_doutb[2]),
        .O(\line1[0][2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \line1[0][3]_i_1 
       (.I0(bram2_doutb[3]),
        .I1(\wea_reg_n_0_[0] ),
        .I2(bram0_doutb[3]),
        .I3(p_0_in3_in),
        .I4(bram1_doutb[3]),
        .O(\line1[0][3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \line1[0][4]_i_1 
       (.I0(bram2_doutb[4]),
        .I1(\wea_reg_n_0_[0] ),
        .I2(bram0_doutb[4]),
        .I3(p_0_in3_in),
        .I4(bram1_doutb[4]),
        .O(\line1[0][4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \line1[0][5]_i_1 
       (.I0(bram2_doutb[5]),
        .I1(\wea_reg_n_0_[0] ),
        .I2(bram0_doutb[5]),
        .I3(p_0_in3_in),
        .I4(bram1_doutb[5]),
        .O(\line1[0][5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \line1[0][6]_i_1 
       (.I0(bram2_doutb[6]),
        .I1(\wea_reg_n_0_[0] ),
        .I2(bram0_doutb[6]),
        .I3(p_0_in3_in),
        .I4(bram1_doutb[6]),
        .O(\line1[0][6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \line1[0][7]_i_1 
       (.I0(bram2_doutb[7]),
        .I1(\wea_reg_n_0_[0] ),
        .I2(bram0_doutb[7]),
        .I3(p_0_in3_in),
        .I4(bram1_doutb[7]),
        .O(\line1[0][7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[0][0] 
       (.C(clk),
        .CE(1'b1),
        .D(\line1[0][0]_i_1_n_0 ),
        .Q(p_1_in[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[0][1] 
       (.C(clk),
        .CE(1'b1),
        .D(\line1[0][1]_i_1_n_0 ),
        .Q(p_1_in[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[0][2] 
       (.C(clk),
        .CE(1'b1),
        .D(\line1[0][2]_i_1_n_0 ),
        .Q(p_1_in[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[0][3] 
       (.C(clk),
        .CE(1'b1),
        .D(\line1[0][3]_i_1_n_0 ),
        .Q(p_1_in[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[0][4] 
       (.C(clk),
        .CE(1'b1),
        .D(\line1[0][4]_i_1_n_0 ),
        .Q(p_1_in[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[0][5] 
       (.C(clk),
        .CE(1'b1),
        .D(\line1[0][5]_i_1_n_0 ),
        .Q(p_1_in[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[0][6] 
       (.C(clk),
        .CE(1'b1),
        .D(\line1[0][6]_i_1_n_0 ),
        .Q(p_1_in[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[0][7] 
       (.C(clk),
        .CE(1'b1),
        .D(\line1[0][7]_i_1_n_0 ),
        .Q(p_1_in[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[1][0] 
       (.C(clk),
        .CE(1'b1),
        .D(p_1_in[1]),
        .Q(in8[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[1][1] 
       (.C(clk),
        .CE(1'b1),
        .D(p_1_in[2]),
        .Q(in8[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[1][2] 
       (.C(clk),
        .CE(1'b1),
        .D(p_1_in[3]),
        .Q(in8[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[1][3] 
       (.C(clk),
        .CE(1'b1),
        .D(p_1_in[4]),
        .Q(in8[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[1][4] 
       (.C(clk),
        .CE(1'b1),
        .D(p_1_in[5]),
        .Q(in8[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[1][5] 
       (.C(clk),
        .CE(1'b1),
        .D(p_1_in[6]),
        .Q(in8[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[1][6] 
       (.C(clk),
        .CE(1'b1),
        .D(p_1_in[7]),
        .Q(in8[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[1][7] 
       (.C(clk),
        .CE(1'b1),
        .D(p_1_in[8]),
        .Q(in8[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[2][0] 
       (.C(clk),
        .CE(1'b1),
        .D(in8[2]),
        .Q(\line1_reg[2] [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[2][1] 
       (.C(clk),
        .CE(1'b1),
        .D(in8[3]),
        .Q(\line1_reg[2] [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[2][2] 
       (.C(clk),
        .CE(1'b1),
        .D(in8[4]),
        .Q(\line1_reg[2] [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[2][3] 
       (.C(clk),
        .CE(1'b1),
        .D(in8[5]),
        .Q(\line1_reg[2] [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[2][4] 
       (.C(clk),
        .CE(1'b1),
        .D(in8[6]),
        .Q(\line1_reg[2] [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[2][5] 
       (.C(clk),
        .CE(1'b1),
        .D(in8[7]),
        .Q(\line1_reg[2] [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[2][6] 
       (.C(clk),
        .CE(1'b1),
        .D(in8[8]),
        .Q(\line1_reg[2] [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line1_reg[2][7] 
       (.C(clk),
        .CE(1'b1),
        .D(in8[9]),
        .Q(\line1_reg[2] [7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[0][0] 
       (.C(clk),
        .CE(1'b1),
        .D(\data_in_r2_reg[0]_srl2_n_0 ),
        .Q(\line2_reg[0] [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[0][1] 
       (.C(clk),
        .CE(1'b1),
        .D(\data_in_r2_reg[1]_srl2_n_0 ),
        .Q(\line2_reg[0] [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[0][2] 
       (.C(clk),
        .CE(1'b1),
        .D(\data_in_r2_reg[2]_srl2_n_0 ),
        .Q(\line2_reg[0] [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[0][3] 
       (.C(clk),
        .CE(1'b1),
        .D(\data_in_r2_reg[3]_srl2_n_0 ),
        .Q(\line2_reg[0] [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[0][4] 
       (.C(clk),
        .CE(1'b1),
        .D(\data_in_r2_reg[4]_srl2_n_0 ),
        .Q(\line2_reg[0] [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[0][5] 
       (.C(clk),
        .CE(1'b1),
        .D(\data_in_r2_reg[5]_srl2_n_0 ),
        .Q(\line2_reg[0] [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[0][6] 
       (.C(clk),
        .CE(1'b1),
        .D(\data_in_r2_reg[6]_srl2_n_0 ),
        .Q(\line2_reg[0] [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[0][7] 
       (.C(clk),
        .CE(1'b1),
        .D(\data_in_r2_reg[7]_srl2_n_0 ),
        .Q(\line2_reg[0] [7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[1][0] 
       (.C(clk),
        .CE(1'b1),
        .D(\line2_reg[0] [0]),
        .Q(p_0_in0_in[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[1][1] 
       (.C(clk),
        .CE(1'b1),
        .D(\line2_reg[0] [1]),
        .Q(p_0_in0_in[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[1][2] 
       (.C(clk),
        .CE(1'b1),
        .D(\line2_reg[0] [2]),
        .Q(p_0_in0_in[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[1][3] 
       (.C(clk),
        .CE(1'b1),
        .D(\line2_reg[0] [3]),
        .Q(p_0_in0_in[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[1][4] 
       (.C(clk),
        .CE(1'b1),
        .D(\line2_reg[0] [4]),
        .Q(p_0_in0_in[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[1][5] 
       (.C(clk),
        .CE(1'b1),
        .D(\line2_reg[0] [5]),
        .Q(p_0_in0_in[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[1][6] 
       (.C(clk),
        .CE(1'b1),
        .D(\line2_reg[0] [6]),
        .Q(p_0_in0_in[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[1][7] 
       (.C(clk),
        .CE(1'b1),
        .D(\line2_reg[0] [7]),
        .Q(p_0_in0_in[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[2][0] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in0_in[1]),
        .Q(\line2_reg[2] [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[2][1] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in0_in[2]),
        .Q(\line2_reg[2] [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[2][2] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in0_in[3]),
        .Q(\line2_reg[2] [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[2][3] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in0_in[4]),
        .Q(\line2_reg[2] [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[2][4] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in0_in[5]),
        .Q(\line2_reg[2] [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[2][5] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in0_in[6]),
        .Q(\line2_reg[2] [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[2][6] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in0_in[7]),
        .Q(\line2_reg[2] [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \line2_reg[2][7] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in0_in[8]),
        .Q(\line2_reg[2] [7]),
        .R(1'b0));
  (* srl_bus_name = "inst/\vsync_delay_r_reg " *) 
  (* srl_name = "inst/\vsync_delay_r_reg[4]_srl5 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \vsync_delay_r_reg[4]_srl5 
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(\vsync_delay_r_reg[4]_srl5_i_1_n_0 ),
        .Q(\vsync_delay_r_reg[4]_srl5_n_0 ));
  LUT6 #(
    .INIT(64'hFEFEFEFEFBFFFFFF)) 
    \vsync_delay_r_reg[4]_srl5_i_1 
       (.I0(\vsync_delay_r_reg[4]_srl5_i_2_n_0 ),
        .I1(vdata[2]),
        .I2(\vsync_delay_r_reg[4]_srl5_i_3_n_0 ),
        .I3(vdata[0]),
        .I4(vdata[1]),
        .I5(vdata[3]),
        .O(\vsync_delay_r_reg[4]_srl5_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \vsync_delay_r_reg[4]_srl5_i_2 
       (.I0(vdata[5]),
        .I1(vdata[8]),
        .O(\vsync_delay_r_reg[4]_srl5_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \vsync_delay_r_reg[4]_srl5_i_3 
       (.I0(vdata[7]),
        .I1(vdata[6]),
        .I2(vdata[9]),
        .I3(vdata[4]),
        .O(\vsync_delay_r_reg[4]_srl5_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \vsync_delay_r_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\vsync_delay_r_reg[4]_srl5_n_0 ),
        .Q(vsync_out),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    vsync_pos_i_1
       (.I0(vsync_r1),
        .I1(vsync_r2),
        .O(vsync_pos0));
  FDRE #(
    .INIT(1'b0)) 
    vsync_pos_reg
       (.C(clk),
        .CE(1'b1),
        .D(vsync_pos0),
        .Q(vsync_pos),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    vsync_r1_reg
       (.C(clk),
        .CE(1'b1),
        .D(vsync_in),
        .Q(vsync_r1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    vsync_r2_reg
       (.C(clk),
        .CE(1'b1),
        .D(vsync_r1),
        .Q(vsync_r2),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFFE2)) 
    \wea[0]_i_1 
       (.I0(\wea_reg_n_0_[0] ),
        .I1(de_neg),
        .I2(p_0_in),
        .I3(vsync_pos),
        .O(\wea[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \wea[1]_i_1 
       (.I0(p_0_in3_in),
        .I1(de_neg),
        .I2(\wea_reg_n_0_[0] ),
        .I3(vsync_pos),
        .O(\wea[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h00E2)) 
    \wea[2]_i_1 
       (.I0(p_0_in),
        .I1(de_neg),
        .I2(p_0_in3_in),
        .I3(vsync_pos),
        .O(\wea[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b1)) 
    \wea_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\wea[0]_i_1_n_0 ),
        .Q(\wea_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wea_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\wea[1]_i_1_n_0 ),
        .Q(p_0_in3_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wea_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\wea[2]_i_1_n_0 ),
        .Q(p_0_in),
        .R(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_1,blk_mem_gen_v8_4_4,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "blk_mem_gen_1" *) 
(* X_CORE_INFO = "blk_mem_gen_v8_4_4,Vivado 2020.1" *) 
module system_bayer2rgb_0_0_blk_mem_gen_1
   (clka,
    wea,
    addra,
    dina,
    clkb,
    addrb,
    doutb,
    pwropt,
    pwropt_1,
    pwropt_2,
    pwropt_3);
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [10:0]addra;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [7:0]dina;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [10:0]addrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [7:0]doutb;
  input pwropt;
  input pwropt_1;
  input pwropt_2;
  input pwropt_3;

  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire pwropt;
  wire pwropt_1;
  wire pwropt_2;
  wire pwropt_3;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_deepsleep_UNCONNECTED;
  wire NLW_U0_eccpipece_UNCONNECTED;
  wire NLW_U0_ena_UNCONNECTED;
  wire NLW_U0_enb_UNCONNECTED;
  wire NLW_U0_injectdbiterr_UNCONNECTED;
  wire NLW_U0_injectsbiterr_UNCONNECTED;
  wire NLW_U0_regcea_UNCONNECTED;
  wire NLW_U0_regceb_UNCONNECTED;
  wire NLW_U0_rsta_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_aclk_UNCONNECTED;
  wire NLW_U0_s_aresetn_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_arvalid_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_awvalid_UNCONNECTED;
  wire NLW_U0_s_axi_bready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectdbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectsbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rready_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wlast_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axi_wvalid_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_shutdown_UNCONNECTED;
  wire NLW_U0_sleep_UNCONNECTED;
  wire [7:0]NLW_U0_dinb_UNCONNECTED;
  wire [7:0]NLW_U0_douta_UNCONNECTED;
  wire [10:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awsize_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [10:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_web_UNCONNECTED;

  (* C_ADDRA_WIDTH = "11" *) 
  (* C_ADDRB_WIDTH = "11" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.5592 mW" *) 
  (* C_FAMILY = "spartan7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "1" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_1.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "1280" *) 
  (* C_READ_DEPTH_B = "1280" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "8" *) 
  (* C_READ_WIDTH_B = "8" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "1280" *) 
  (* C_WRITE_DEPTH_B = "1280" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "8" *) 
  (* C_WRITE_WIDTH_B = "8" *) 
  (* C_XDEVICEFAMILY = "spartan7" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  system_bayer2rgb_0_0_blk_mem_gen_v8_4_4 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(NLW_U0_deepsleep_UNCONNECTED),
        .dina(dina),
        .dinb(NLW_U0_dinb_UNCONNECTED[7:0]),
        .douta(NLW_U0_douta_UNCONNECTED[7:0]),
        .doutb(doutb),
        .eccpipece(NLW_U0_eccpipece_UNCONNECTED),
        .ena(NLW_U0_ena_UNCONNECTED),
        .enb(NLW_U0_enb_UNCONNECTED),
        .injectdbiterr(NLW_U0_injectdbiterr_UNCONNECTED),
        .injectsbiterr(NLW_U0_injectsbiterr_UNCONNECTED),
        .pwropt(pwropt),
        .pwropt_1(pwropt_1),
        .pwropt_2(pwropt_2),
        .pwropt_3(pwropt_3),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[10:0]),
        .regcea(NLW_U0_regcea_UNCONNECTED),
        .regceb(NLW_U0_regceb_UNCONNECTED),
        .rsta(NLW_U0_rsta_UNCONNECTED),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(NLW_U0_rstb_UNCONNECTED),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(NLW_U0_s_aclk_UNCONNECTED),
        .s_aresetn(NLW_U0_s_aresetn_UNCONNECTED),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_U0_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arid(NLW_U0_s_axi_arid_UNCONNECTED[3:0]),
        .s_axi_arlen(NLW_U0_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize(NLW_U0_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_arvalid(NLW_U0_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_U0_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awid(NLW_U0_s_axi_awid_UNCONNECTED[3:0]),
        .s_axi_awlen(NLW_U0_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize(NLW_U0_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awvalid(NLW_U0_s_axi_awvalid_UNCONNECTED),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(NLW_U0_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(NLW_U0_s_axi_injectdbiterr_UNCONNECTED),
        .s_axi_injectsbiterr(NLW_U0_s_axi_injectsbiterr_UNCONNECTED),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[10:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[7:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(NLW_U0_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(NLW_U0_s_axi_wdata_UNCONNECTED[7:0]),
        .s_axi_wlast(NLW_U0_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[0]),
        .s_axi_wvalid(NLW_U0_s_axi_wvalid_UNCONNECTED),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(NLW_U0_shutdown_UNCONNECTED),
        .sleep(NLW_U0_sleep_UNCONNECTED),
        .wea(wea),
        .web(NLW_U0_web_UNCONNECTED[0]));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_1,blk_mem_gen_v8_4_4,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "blk_mem_gen_1" *) 
(* X_CORE_INFO = "blk_mem_gen_v8_4_4,Vivado 2020.1" *) 
module system_bayer2rgb_0_0_blk_mem_gen_1__1
   (clka,
    wea,
    addra,
    dina,
    clkb,
    addrb,
    doutb,
    pwropt,
    pwropt_1,
    pwropt_2,
    pwropt_3,
    pwropt_4,
    pwropt_5,
    pwropt_6,
    pwropt_7);
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [10:0]addra;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [7:0]dina;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [10:0]addrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [7:0]doutb;
  input pwropt;
  input pwropt_1;
  input pwropt_2;
  input pwropt_3;
  input pwropt_4;
  input pwropt_5;
  input pwropt_6;
  input pwropt_7;

  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire pwropt;
  wire pwropt_1;
  wire pwropt_2;
  wire pwropt_3;
  wire pwropt_4;
  wire pwropt_5;
  wire pwropt_6;
  wire pwropt_7;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_deepsleep_UNCONNECTED;
  wire NLW_U0_eccpipece_UNCONNECTED;
  wire NLW_U0_ena_UNCONNECTED;
  wire NLW_U0_enb_UNCONNECTED;
  wire NLW_U0_injectdbiterr_UNCONNECTED;
  wire NLW_U0_injectsbiterr_UNCONNECTED;
  wire NLW_U0_regcea_UNCONNECTED;
  wire NLW_U0_regceb_UNCONNECTED;
  wire NLW_U0_rsta_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_aclk_UNCONNECTED;
  wire NLW_U0_s_aresetn_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_arvalid_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_awvalid_UNCONNECTED;
  wire NLW_U0_s_axi_bready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectdbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectsbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rready_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wlast_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axi_wvalid_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_shutdown_UNCONNECTED;
  wire NLW_U0_sleep_UNCONNECTED;
  wire [7:0]NLW_U0_dinb_UNCONNECTED;
  wire [7:0]NLW_U0_douta_UNCONNECTED;
  wire [10:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awsize_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [10:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_web_UNCONNECTED;

  (* C_ADDRA_WIDTH = "11" *) 
  (* C_ADDRB_WIDTH = "11" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.5592 mW" *) 
  (* C_FAMILY = "spartan7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "1" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_1.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "1280" *) 
  (* C_READ_DEPTH_B = "1280" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "8" *) 
  (* C_READ_WIDTH_B = "8" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "1280" *) 
  (* C_WRITE_DEPTH_B = "1280" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "8" *) 
  (* C_WRITE_WIDTH_B = "8" *) 
  (* C_XDEVICEFAMILY = "spartan7" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  system_bayer2rgb_0_0_blk_mem_gen_v8_4_4__1 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(NLW_U0_deepsleep_UNCONNECTED),
        .dina(dina),
        .dinb(NLW_U0_dinb_UNCONNECTED[7:0]),
        .douta(NLW_U0_douta_UNCONNECTED[7:0]),
        .doutb(doutb),
        .eccpipece(NLW_U0_eccpipece_UNCONNECTED),
        .ena(NLW_U0_ena_UNCONNECTED),
        .enb(NLW_U0_enb_UNCONNECTED),
        .injectdbiterr(NLW_U0_injectdbiterr_UNCONNECTED),
        .injectsbiterr(NLW_U0_injectsbiterr_UNCONNECTED),
        .pwropt(pwropt),
        .pwropt_1(pwropt_1),
        .pwropt_2(pwropt_2),
        .pwropt_3(pwropt_3),
        .pwropt_4(pwropt_4),
        .pwropt_5(pwropt_5),
        .pwropt_6(pwropt_6),
        .pwropt_7(pwropt_7),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[10:0]),
        .regcea(NLW_U0_regcea_UNCONNECTED),
        .regceb(NLW_U0_regceb_UNCONNECTED),
        .rsta(NLW_U0_rsta_UNCONNECTED),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(NLW_U0_rstb_UNCONNECTED),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(NLW_U0_s_aclk_UNCONNECTED),
        .s_aresetn(NLW_U0_s_aresetn_UNCONNECTED),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_U0_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arid(NLW_U0_s_axi_arid_UNCONNECTED[3:0]),
        .s_axi_arlen(NLW_U0_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize(NLW_U0_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_arvalid(NLW_U0_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_U0_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awid(NLW_U0_s_axi_awid_UNCONNECTED[3:0]),
        .s_axi_awlen(NLW_U0_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize(NLW_U0_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awvalid(NLW_U0_s_axi_awvalid_UNCONNECTED),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(NLW_U0_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(NLW_U0_s_axi_injectdbiterr_UNCONNECTED),
        .s_axi_injectsbiterr(NLW_U0_s_axi_injectsbiterr_UNCONNECTED),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[10:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[7:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(NLW_U0_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(NLW_U0_s_axi_wdata_UNCONNECTED[7:0]),
        .s_axi_wlast(NLW_U0_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[0]),
        .s_axi_wvalid(NLW_U0_s_axi_wvalid_UNCONNECTED),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(NLW_U0_shutdown_UNCONNECTED),
        .sleep(NLW_U0_sleep_UNCONNECTED),
        .wea(wea),
        .web(NLW_U0_web_UNCONNECTED[0]));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_1,blk_mem_gen_v8_4_4,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "blk_mem_gen_1" *) 
(* X_CORE_INFO = "blk_mem_gen_v8_4_4,Vivado 2020.1" *) 
module system_bayer2rgb_0_0_blk_mem_gen_1__2
   (clka,
    wea,
    addra,
    dina,
    clkb,
    addrb,
    doutb,
    pwropt,
    pwropt_1,
    pwropt_2,
    pwropt_3,
    pwropt_4);
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [10:0]addra;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [7:0]dina;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [10:0]addrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [7:0]doutb;
  input pwropt;
  input pwropt_1;
  input pwropt_2;
  input pwropt_3;
  input pwropt_4;

  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire pwropt;
  wire pwropt_1;
  wire pwropt_2;
  wire pwropt_3;
  wire pwropt_4;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_deepsleep_UNCONNECTED;
  wire NLW_U0_eccpipece_UNCONNECTED;
  wire NLW_U0_ena_UNCONNECTED;
  wire NLW_U0_enb_UNCONNECTED;
  wire NLW_U0_injectdbiterr_UNCONNECTED;
  wire NLW_U0_injectsbiterr_UNCONNECTED;
  wire NLW_U0_regcea_UNCONNECTED;
  wire NLW_U0_regceb_UNCONNECTED;
  wire NLW_U0_rsta_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_aclk_UNCONNECTED;
  wire NLW_U0_s_aresetn_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_arvalid_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_awvalid_UNCONNECTED;
  wire NLW_U0_s_axi_bready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectdbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectsbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rready_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wlast_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axi_wvalid_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_shutdown_UNCONNECTED;
  wire NLW_U0_sleep_UNCONNECTED;
  wire [7:0]NLW_U0_dinb_UNCONNECTED;
  wire [7:0]NLW_U0_douta_UNCONNECTED;
  wire [10:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awsize_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [10:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_web_UNCONNECTED;

  (* C_ADDRA_WIDTH = "11" *) 
  (* C_ADDRB_WIDTH = "11" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.5592 mW" *) 
  (* C_FAMILY = "spartan7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "1" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_1.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "1280" *) 
  (* C_READ_DEPTH_B = "1280" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "8" *) 
  (* C_READ_WIDTH_B = "8" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "1280" *) 
  (* C_WRITE_DEPTH_B = "1280" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "8" *) 
  (* C_WRITE_WIDTH_B = "8" *) 
  (* C_XDEVICEFAMILY = "spartan7" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  system_bayer2rgb_0_0_blk_mem_gen_v8_4_4__2 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(NLW_U0_deepsleep_UNCONNECTED),
        .dina(dina),
        .dinb(NLW_U0_dinb_UNCONNECTED[7:0]),
        .douta(NLW_U0_douta_UNCONNECTED[7:0]),
        .doutb(doutb),
        .eccpipece(NLW_U0_eccpipece_UNCONNECTED),
        .ena(NLW_U0_ena_UNCONNECTED),
        .enb(NLW_U0_enb_UNCONNECTED),
        .injectdbiterr(NLW_U0_injectdbiterr_UNCONNECTED),
        .injectsbiterr(NLW_U0_injectsbiterr_UNCONNECTED),
        .pwropt(pwropt),
        .pwropt_1(pwropt_1),
        .pwropt_2(pwropt_2),
        .pwropt_3(pwropt_3),
        .pwropt_4(pwropt_4),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[10:0]),
        .regcea(NLW_U0_regcea_UNCONNECTED),
        .regceb(NLW_U0_regceb_UNCONNECTED),
        .rsta(NLW_U0_rsta_UNCONNECTED),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(NLW_U0_rstb_UNCONNECTED),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(NLW_U0_s_aclk_UNCONNECTED),
        .s_aresetn(NLW_U0_s_aresetn_UNCONNECTED),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_U0_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arid(NLW_U0_s_axi_arid_UNCONNECTED[3:0]),
        .s_axi_arlen(NLW_U0_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize(NLW_U0_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_arvalid(NLW_U0_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_U0_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awid(NLW_U0_s_axi_awid_UNCONNECTED[3:0]),
        .s_axi_awlen(NLW_U0_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize(NLW_U0_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awvalid(NLW_U0_s_axi_awvalid_UNCONNECTED),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(NLW_U0_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(NLW_U0_s_axi_injectdbiterr_UNCONNECTED),
        .s_axi_injectsbiterr(NLW_U0_s_axi_injectsbiterr_UNCONNECTED),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[10:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[7:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(NLW_U0_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(NLW_U0_s_axi_wdata_UNCONNECTED[7:0]),
        .s_axi_wlast(NLW_U0_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[0]),
        .s_axi_wvalid(NLW_U0_s_axi_wvalid_UNCONNECTED),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(NLW_U0_shutdown_UNCONNECTED),
        .sleep(NLW_U0_sleep_UNCONNECTED),
        .wea(wea),
        .web(NLW_U0_web_UNCONNECTED[0]));
endmodule

module system_clk_wiz_0_1
   (clk_out1,
    locked,
    clk_in1);
  output clk_out1;
  output locked;
  input clk_in1;

  wire clk_in1;
  wire clk_out1;
  wire locked;

  system_clk_wiz_0_1__system_clk_wiz_0_1_clk_wiz inst
       (.clk_in1(clk_in1),
        .clk_out1(clk_out1),
        .locked(locked));
endmodule

(* ORIG_REF_NAME = "system_clk_wiz_0_1_clk_wiz" *) 
module system_clk_wiz_0_1__system_clk_wiz_0_1_clk_wiz
   (clk_out1,
    locked,
    clk_in1);
  output clk_out1;
  output locked;
  input clk_in1;

  wire clk_in1;
  wire clk_in1_system_clk_wiz_0_1;
  wire clk_out1;
  wire clk_out1_system_clk_wiz_0_1;
  wire clkfbout_buf_system_clk_wiz_0_1;
  wire clkfbout_system_clk_wiz_0_1;
  wire locked;
  wire NLW_mmcm_adv_inst_CLKFBOUTB_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKFBSTOPPED_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKINSTOPPED_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT0B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT1_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT1B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT2_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT2B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT3_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT3B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT4_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT5_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT6_UNCONNECTED;
  wire NLW_mmcm_adv_inst_DRDY_UNCONNECTED;
  wire NLW_mmcm_adv_inst_PSDONE_UNCONNECTED;
  wire [15:0]NLW_mmcm_adv_inst_DO_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG clkf_buf
       (.I(clkfbout_system_clk_wiz_0_1),
        .O(clkfbout_buf_system_clk_wiz_0_1));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUF #(
    .IOSTANDARD("DEFAULT")) 
    clkin1_ibufg
       (.I(clk_in1),
        .O(clk_in1_system_clk_wiz_0_1));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG clkout1_buf
       (.I(clk_out1_system_clk_wiz_0_1),
        .O(clk_out1));
  (* BOX_TYPE = "PRIMITIVE" *) 
  MMCME2_ADV #(
    .BANDWIDTH("OPTIMIZED"),
    .CLKFBOUT_MULT_F(10.000000),
    .CLKFBOUT_PHASE(0.000000),
    .CLKFBOUT_USE_FINE_PS("FALSE"),
    .CLKIN1_PERIOD(10.000000),
    .CLKIN2_PERIOD(0.000000),
    .CLKOUT0_DIVIDE_F(5.000000),
    .CLKOUT0_DUTY_CYCLE(0.500000),
    .CLKOUT0_PHASE(0.000000),
    .CLKOUT0_USE_FINE_PS("FALSE"),
    .CLKOUT1_DIVIDE(1),
    .CLKOUT1_DUTY_CYCLE(0.500000),
    .CLKOUT1_PHASE(0.000000),
    .CLKOUT1_USE_FINE_PS("FALSE"),
    .CLKOUT2_DIVIDE(1),
    .CLKOUT2_DUTY_CYCLE(0.500000),
    .CLKOUT2_PHASE(0.000000),
    .CLKOUT2_USE_FINE_PS("FALSE"),
    .CLKOUT3_DIVIDE(1),
    .CLKOUT3_DUTY_CYCLE(0.500000),
    .CLKOUT3_PHASE(0.000000),
    .CLKOUT3_USE_FINE_PS("FALSE"),
    .CLKOUT4_CASCADE("FALSE"),
    .CLKOUT4_DIVIDE(1),
    .CLKOUT4_DUTY_CYCLE(0.500000),
    .CLKOUT4_PHASE(0.000000),
    .CLKOUT4_USE_FINE_PS("FALSE"),
    .CLKOUT5_DIVIDE(1),
    .CLKOUT5_DUTY_CYCLE(0.500000),
    .CLKOUT5_PHASE(0.000000),
    .CLKOUT5_USE_FINE_PS("FALSE"),
    .CLKOUT6_DIVIDE(1),
    .CLKOUT6_DUTY_CYCLE(0.500000),
    .CLKOUT6_PHASE(0.000000),
    .CLKOUT6_USE_FINE_PS("FALSE"),
    .COMPENSATION("ZHOLD"),
    .DIVCLK_DIVIDE(1),
    .IS_CLKINSEL_INVERTED(1'b0),
    .IS_PSEN_INVERTED(1'b0),
    .IS_PSINCDEC_INVERTED(1'b0),
    .IS_PWRDWN_INVERTED(1'b0),
    .IS_RST_INVERTED(1'b0),
    .REF_JITTER1(0.010000),
    .REF_JITTER2(0.010000),
    .SS_EN("FALSE"),
    .SS_MODE("CENTER_HIGH"),
    .SS_MOD_PERIOD(10000),
    .STARTUP_WAIT("FALSE")) 
    mmcm_adv_inst
       (.CLKFBIN(clkfbout_buf_system_clk_wiz_0_1),
        .CLKFBOUT(clkfbout_system_clk_wiz_0_1),
        .CLKFBOUTB(NLW_mmcm_adv_inst_CLKFBOUTB_UNCONNECTED),
        .CLKFBSTOPPED(NLW_mmcm_adv_inst_CLKFBSTOPPED_UNCONNECTED),
        .CLKIN1(clk_in1_system_clk_wiz_0_1),
        .CLKIN2(1'b0),
        .CLKINSEL(1'b1),
        .CLKINSTOPPED(NLW_mmcm_adv_inst_CLKINSTOPPED_UNCONNECTED),
        .CLKOUT0(clk_out1_system_clk_wiz_0_1),
        .CLKOUT0B(NLW_mmcm_adv_inst_CLKOUT0B_UNCONNECTED),
        .CLKOUT1(NLW_mmcm_adv_inst_CLKOUT1_UNCONNECTED),
        .CLKOUT1B(NLW_mmcm_adv_inst_CLKOUT1B_UNCONNECTED),
        .CLKOUT2(NLW_mmcm_adv_inst_CLKOUT2_UNCONNECTED),
        .CLKOUT2B(NLW_mmcm_adv_inst_CLKOUT2B_UNCONNECTED),
        .CLKOUT3(NLW_mmcm_adv_inst_CLKOUT3_UNCONNECTED),
        .CLKOUT3B(NLW_mmcm_adv_inst_CLKOUT3B_UNCONNECTED),
        .CLKOUT4(NLW_mmcm_adv_inst_CLKOUT4_UNCONNECTED),
        .CLKOUT5(NLW_mmcm_adv_inst_CLKOUT5_UNCONNECTED),
        .CLKOUT6(NLW_mmcm_adv_inst_CLKOUT6_UNCONNECTED),
        .DADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DCLK(1'b0),
        .DEN(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DO(NLW_mmcm_adv_inst_DO_UNCONNECTED[15:0]),
        .DRDY(NLW_mmcm_adv_inst_DRDY_UNCONNECTED),
        .DWE(1'b0),
        .LOCKED(locked),
        .PSCLK(1'b0),
        .PSDONE(NLW_mmcm_adv_inst_PSDONE_UNCONNECTED),
        .PSEN(1'b0),
        .PSINCDEC(1'b0),
        .PWRDWN(1'b0),
        .RST(1'b0));
endmodule

module system_clk_wiz_1_0
   (clk_out1,
    clk_out2,
    clk_in1);
  output clk_out1;
  output clk_out2;
  input clk_in1;

  (* IBUF_LOW_PWR *) wire clk_in1;
  wire clk_out1;
  wire clk_out2;

  system_clk_wiz_1_0__system_clk_wiz_1_0_clk_wiz inst
       (.clk_in1(clk_in1),
        .clk_out1(clk_out1),
        .clk_out2(clk_out2));
endmodule

(* ORIG_REF_NAME = "system_clk_wiz_1_0_clk_wiz" *) 
module system_clk_wiz_1_0__system_clk_wiz_1_0_clk_wiz
   (clk_out1,
    clk_out2,
    clk_in1);
  output clk_out1;
  output clk_out2;
  input clk_in1;

  wire clk_in1;
  wire clk_out1;
  wire clk_out1_system_clk_wiz_1_0;
  wire clk_out2;
  wire clk_out2_system_clk_wiz_1_0;
  wire clkfbout_buf_system_clk_wiz_1_0;
  wire clkfbout_system_clk_wiz_1_0;
  wire NLW_mmcm_adv_inst_CLKFBOUTB_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKFBSTOPPED_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKINSTOPPED_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT0B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT1B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT2_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT2B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT3_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT3B_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT4_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT5_UNCONNECTED;
  wire NLW_mmcm_adv_inst_CLKOUT6_UNCONNECTED;
  wire NLW_mmcm_adv_inst_DRDY_UNCONNECTED;
  wire NLW_mmcm_adv_inst_LOCKED_UNCONNECTED;
  wire NLW_mmcm_adv_inst_PSDONE_UNCONNECTED;
  wire [15:0]NLW_mmcm_adv_inst_DO_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG clkf_buf
       (.I(clkfbout_system_clk_wiz_1_0),
        .O(clkfbout_buf_system_clk_wiz_1_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG clkout1_buf
       (.I(clk_out1_system_clk_wiz_1_0),
        .O(clk_out1));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG clkout2_buf
       (.I(clk_out2_system_clk_wiz_1_0),
        .O(clk_out2));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  MMCME2_ADV #(
    .BANDWIDTH("OPTIMIZED"),
    .CLKFBOUT_MULT_F(10.000000),
    .CLKFBOUT_PHASE(0.000000),
    .CLKFBOUT_USE_FINE_PS("FALSE"),
    .CLKIN1_PERIOD(10.000000),
    .CLKIN2_PERIOD(0.000000),
    .CLKOUT0_DIVIDE_F(10.000000),
    .CLKOUT0_DUTY_CYCLE(0.500000),
    .CLKOUT0_PHASE(0.000000),
    .CLKOUT0_USE_FINE_PS("FALSE"),
    .CLKOUT1_DIVIDE(2),
    .CLKOUT1_DUTY_CYCLE(0.500000),
    .CLKOUT1_PHASE(0.000000),
    .CLKOUT1_USE_FINE_PS("FALSE"),
    .CLKOUT2_DIVIDE(1),
    .CLKOUT2_DUTY_CYCLE(0.500000),
    .CLKOUT2_PHASE(0.000000),
    .CLKOUT2_USE_FINE_PS("FALSE"),
    .CLKOUT3_DIVIDE(1),
    .CLKOUT3_DUTY_CYCLE(0.500000),
    .CLKOUT3_PHASE(0.000000),
    .CLKOUT3_USE_FINE_PS("FALSE"),
    .CLKOUT4_CASCADE("FALSE"),
    .CLKOUT4_DIVIDE(1),
    .CLKOUT4_DUTY_CYCLE(0.500000),
    .CLKOUT4_PHASE(0.000000),
    .CLKOUT4_USE_FINE_PS("FALSE"),
    .CLKOUT5_DIVIDE(1),
    .CLKOUT5_DUTY_CYCLE(0.500000),
    .CLKOUT5_PHASE(0.000000),
    .CLKOUT5_USE_FINE_PS("FALSE"),
    .CLKOUT6_DIVIDE(1),
    .CLKOUT6_DUTY_CYCLE(0.500000),
    .CLKOUT6_PHASE(0.000000),
    .CLKOUT6_USE_FINE_PS("FALSE"),
    .COMPENSATION("BUF_IN"),
    .DIVCLK_DIVIDE(1),
    .IS_CLKINSEL_INVERTED(1'b0),
    .IS_PSEN_INVERTED(1'b0),
    .IS_PSINCDEC_INVERTED(1'b0),
    .IS_PWRDWN_INVERTED(1'b0),
    .IS_RST_INVERTED(1'b0),
    .REF_JITTER1(0.010000),
    .REF_JITTER2(0.010000),
    .SS_EN("FALSE"),
    .SS_MODE("CENTER_HIGH"),
    .SS_MOD_PERIOD(10000),
    .STARTUP_WAIT("FALSE")) 
    mmcm_adv_inst
       (.CLKFBIN(clkfbout_buf_system_clk_wiz_1_0),
        .CLKFBOUT(clkfbout_system_clk_wiz_1_0),
        .CLKFBOUTB(NLW_mmcm_adv_inst_CLKFBOUTB_UNCONNECTED),
        .CLKFBSTOPPED(NLW_mmcm_adv_inst_CLKFBSTOPPED_UNCONNECTED),
        .CLKIN1(clk_in1),
        .CLKIN2(1'b0),
        .CLKINSEL(1'b1),
        .CLKINSTOPPED(NLW_mmcm_adv_inst_CLKINSTOPPED_UNCONNECTED),
        .CLKOUT0(clk_out1_system_clk_wiz_1_0),
        .CLKOUT0B(NLW_mmcm_adv_inst_CLKOUT0B_UNCONNECTED),
        .CLKOUT1(clk_out2_system_clk_wiz_1_0),
        .CLKOUT1B(NLW_mmcm_adv_inst_CLKOUT1B_UNCONNECTED),
        .CLKOUT2(NLW_mmcm_adv_inst_CLKOUT2_UNCONNECTED),
        .CLKOUT2B(NLW_mmcm_adv_inst_CLKOUT2B_UNCONNECTED),
        .CLKOUT3(NLW_mmcm_adv_inst_CLKOUT3_UNCONNECTED),
        .CLKOUT3B(NLW_mmcm_adv_inst_CLKOUT3B_UNCONNECTED),
        .CLKOUT4(NLW_mmcm_adv_inst_CLKOUT4_UNCONNECTED),
        .CLKOUT5(NLW_mmcm_adv_inst_CLKOUT5_UNCONNECTED),
        .CLKOUT6(NLW_mmcm_adv_inst_CLKOUT6_UNCONNECTED),
        .DADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DCLK(1'b0),
        .DEN(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DO(NLW_mmcm_adv_inst_DO_UNCONNECTED[15:0]),
        .DRDY(NLW_mmcm_adv_inst_DRDY_UNCONNECTED),
        .DWE(1'b0),
        .LOCKED(NLW_mmcm_adv_inst_LOCKED_UNCONNECTED),
        .PSCLK(1'b0),
        .PSDONE(NLW_mmcm_adv_inst_PSDONE_UNCONNECTED),
        .PSEN(1'b0),
        .PSINCDEC(1'b0),
        .PWRDWN(1'b0),
        .RST(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "system_csi2_d_phy_rx_0_1,csi2_d_phy_rx,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "csi2_d_phy_rx,Vivado 2020.1" *) 
module system_csi2_d_phy_rx_0_1
   (in_delay_clk,
    clk_rxp,
    clk_rxn,
    data_rxp,
    data_rxn,
    data_lp_p,
    data_lp_n,
    trig_req,
    trig_ack,
    rxbyteclkhs,
    cl_enable,
    cl_stopstate,
    cl_rxclkactivehs,
    dl0_enable,
    dl0_rxactivehs,
    dl0_rxvalidhs,
    dl0_rxsynchs,
    dl0_datahs,
    dl1_enable,
    dl1_rxactivehs,
    dl1_rxvalidhs,
    dl1_rxsynchs,
    dl1_datahs,
    dl2_enable,
    dl2_rxactivehs,
    dl2_rxvalidhs,
    dl2_rxsynchs,
    dl2_datahs,
    dl3_enable,
    dl3_rxactivehs,
    dl3_rxvalidhs,
    dl3_rxsynchs,
    dl3_datahs);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 in_delay_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME in_delay_clk, FREQ_HZ 200000000, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1" *) input in_delay_clk;
  input clk_rxp;
  input clk_rxn;
  input [1:0]data_rxp;
  input [1:0]data_rxn;
  input [0:0]data_lp_p;
  input [0:0]data_lp_n;
  (* X_INTERFACE_INFO = "xilinx.com:interface:trigger:1.0 data_err TRIG" *) input trig_req;
  (* X_INTERFACE_INFO = "xilinx.com:interface:trigger:1.0 data_err ACK" *) output trig_ack;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 rxbyteclkhs CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME rxbyteclkhs, FREQ_HZ 100000000, PHASE 0.000, CLK_DOMAIN system_csi2_d_phy_rx_0_1_rxbyteclkhs" *) output rxbyteclkhs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI CL_ENABLE" *) input cl_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI CL_STOPSTATE" *) output cl_stopstate;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI CL_RXCLKACTIVEHS" *) output cl_rxclkactivehs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL0_ENABLE" *) input dl0_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL0_RXACTIVEHS" *) output dl0_rxactivehs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL0_RXVALIDHS" *) output dl0_rxvalidhs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL0_RXSYNCHS" *) output dl0_rxsynchs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL0_RXDATAHS" *) output [7:0]dl0_datahs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL1_ENABLE" *) input dl1_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL1_RXACTIVEHS" *) output dl1_rxactivehs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL1_RXVALIDHS" *) output dl1_rxvalidhs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL1_RXSYNCHS" *) output dl1_rxsynchs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL1_RXDATAHS" *) output [7:0]dl1_datahs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL2_ENABLE" *) input dl2_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL2_RXACTIVEHS" *) output dl2_rxactivehs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL2_RXVALIDHS" *) output dl2_rxvalidhs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL2_RXSYNCHS" *) output dl2_rxsynchs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL2_RXDATAHS" *) output [7:0]dl2_datahs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL3_ENABLE" *) input dl3_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL3_RXACTIVEHS" *) output dl3_rxactivehs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL3_RXVALIDHS" *) output dl3_rxvalidhs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL3_RXSYNCHS" *) output dl3_rxsynchs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL3_RXDATAHS" *) output [7:0]dl3_datahs;

  wire clk_rxn;
  wire clk_rxp;
  wire [0:0]data_lp_n;
  wire [0:0]data_lp_p;
  wire [1:0]data_rxn;
  wire [1:0]data_rxp;
  wire [7:0]dl0_datahs;
  wire dl0_rxvalidhs;
  wire [7:0]dl1_datahs;
  wire dl1_rxvalidhs;
  wire in_delay_clk;
  wire rxbyteclkhs;
  wire trig_req;
  wire NLW_U0_cl_enable_UNCONNECTED;
  wire NLW_U0_cl_rxclkactivehs_UNCONNECTED;
  wire NLW_U0_cl_stopstate_UNCONNECTED;
  wire NLW_U0_dl0_enable_UNCONNECTED;
  wire NLW_U0_dl0_rxactivehs_UNCONNECTED;
  wire NLW_U0_dl0_rxsynchs_UNCONNECTED;
  wire NLW_U0_dl1_enable_UNCONNECTED;
  wire NLW_U0_dl1_rxactivehs_UNCONNECTED;
  wire NLW_U0_dl1_rxsynchs_UNCONNECTED;
  wire NLW_U0_dl2_enable_UNCONNECTED;
  wire NLW_U0_dl2_rxactivehs_UNCONNECTED;
  wire NLW_U0_dl2_rxsynchs_UNCONNECTED;
  wire NLW_U0_dl2_rxvalidhs_UNCONNECTED;
  wire NLW_U0_dl3_enable_UNCONNECTED;
  wire NLW_U0_dl3_rxactivehs_UNCONNECTED;
  wire NLW_U0_dl3_rxsynchs_UNCONNECTED;
  wire NLW_U0_dl3_rxvalidhs_UNCONNECTED;
  wire NLW_U0_trig_ack_UNCONNECTED;
  wire [7:0]NLW_U0_dl2_datahs_UNCONNECTED;
  wire [7:0]NLW_U0_dl3_datahs_UNCONNECTED;

  (* C_ADD_IDELAYCTRL = "TRUE" *) 
  (* C_CALIB_WAIT = "8191" *) 
  (* C_D0_SWAP = "FALSE" *) 
  (* C_D1_SWAP = "FALSE" *) 
  (* C_D2_SWAP = "FALSE" *) 
  (* C_D3_SWAP = "FALSE" *) 
  (* C_DIFF_TERM = "FALSE" *) 
  (* C_IODELAY_GROUP = "csi_dly_grp" *) 
  (* C_NUM_LANES = "2" *) 
  (* C_NUM_LP_LANES = "1" *) 
  (* C_RATE_LIMIT = "50" *) 
  (* C_USE_DELAY = "TRUE" *) 
  system_csi2_d_phy_rx_0_1__csi2_d_phy_rx U0
       (.cl_enable(NLW_U0_cl_enable_UNCONNECTED),
        .cl_rxclkactivehs(NLW_U0_cl_rxclkactivehs_UNCONNECTED),
        .cl_stopstate(NLW_U0_cl_stopstate_UNCONNECTED),
        .clk_rxn(clk_rxn),
        .clk_rxp(clk_rxp),
        .data_lp_n(data_lp_n),
        .data_lp_p(data_lp_p),
        .data_rxn(data_rxn),
        .data_rxp(data_rxp),
        .dl0_datahs(dl0_datahs),
        .dl0_enable(NLW_U0_dl0_enable_UNCONNECTED),
        .dl0_rxactivehs(NLW_U0_dl0_rxactivehs_UNCONNECTED),
        .dl0_rxsynchs(NLW_U0_dl0_rxsynchs_UNCONNECTED),
        .dl0_rxvalidhs(dl0_rxvalidhs),
        .dl1_datahs(dl1_datahs),
        .dl1_enable(NLW_U0_dl1_enable_UNCONNECTED),
        .dl1_rxactivehs(NLW_U0_dl1_rxactivehs_UNCONNECTED),
        .dl1_rxsynchs(NLW_U0_dl1_rxsynchs_UNCONNECTED),
        .dl1_rxvalidhs(dl1_rxvalidhs),
        .dl2_datahs(NLW_U0_dl2_datahs_UNCONNECTED[7:0]),
        .dl2_enable(NLW_U0_dl2_enable_UNCONNECTED),
        .dl2_rxactivehs(NLW_U0_dl2_rxactivehs_UNCONNECTED),
        .dl2_rxsynchs(NLW_U0_dl2_rxsynchs_UNCONNECTED),
        .dl2_rxvalidhs(NLW_U0_dl2_rxvalidhs_UNCONNECTED),
        .dl3_datahs(NLW_U0_dl3_datahs_UNCONNECTED[7:0]),
        .dl3_enable(NLW_U0_dl3_enable_UNCONNECTED),
        .dl3_rxactivehs(NLW_U0_dl3_rxactivehs_UNCONNECTED),
        .dl3_rxsynchs(NLW_U0_dl3_rxsynchs_UNCONNECTED),
        .dl3_rxvalidhs(NLW_U0_dl3_rxvalidhs_UNCONNECTED),
        .in_delay_clk(in_delay_clk),
        .rxbyteclkhs(rxbyteclkhs),
        .trig_ack(NLW_U0_trig_ack_UNCONNECTED),
        .trig_req(trig_req));
endmodule

(* C_ADD_IDELAYCTRL = "TRUE" *) (* C_CALIB_WAIT = "8191" *) (* C_D0_SWAP = "FALSE" *) 
(* C_D1_SWAP = "FALSE" *) (* C_D2_SWAP = "FALSE" *) (* C_D3_SWAP = "FALSE" *) 
(* C_DIFF_TERM = "FALSE" *) (* C_IODELAY_GROUP = "csi_dly_grp" *) (* C_NUM_LANES = "2" *) 
(* C_NUM_LP_LANES = "1" *) (* C_RATE_LIMIT = "50" *) (* C_USE_DELAY = "TRUE" *) 
(* ORIG_REF_NAME = "csi2_d_phy_rx" *) 
module system_csi2_d_phy_rx_0_1__csi2_d_phy_rx
   (in_delay_clk,
    clk_rxp,
    clk_rxn,
    data_rxp,
    data_rxn,
    data_lp_p,
    data_lp_n,
    trig_req,
    trig_ack,
    rxbyteclkhs,
    cl_enable,
    cl_stopstate,
    cl_rxclkactivehs,
    dl0_enable,
    dl0_rxactivehs,
    dl0_rxvalidhs,
    dl0_rxsynchs,
    dl0_datahs,
    dl1_enable,
    dl1_rxactivehs,
    dl1_rxvalidhs,
    dl1_rxsynchs,
    dl1_datahs,
    dl2_enable,
    dl2_rxactivehs,
    dl2_rxvalidhs,
    dl2_rxsynchs,
    dl2_datahs,
    dl3_enable,
    dl3_rxactivehs,
    dl3_rxvalidhs,
    dl3_rxsynchs,
    dl3_datahs);
  input in_delay_clk;
  input clk_rxp;
  input clk_rxn;
  input [1:0]data_rxp;
  input [1:0]data_rxn;
  input [0:0]data_lp_p;
  input [0:0]data_lp_n;
  input trig_req;
  output trig_ack;
  output rxbyteclkhs;
  input cl_enable;
  output cl_stopstate;
  output cl_rxclkactivehs;
  input dl0_enable;
  output dl0_rxactivehs;
  output dl0_rxvalidhs;
  output dl0_rxsynchs;
  output [7:0]dl0_datahs;
  input dl1_enable;
  output dl1_rxactivehs;
  output dl1_rxvalidhs;
  output dl1_rxsynchs;
  output [7:0]dl1_datahs;
  input dl2_enable;
  output dl2_rxactivehs;
  output dl2_rxvalidhs;
  output dl2_rxsynchs;
  output [7:0]dl2_datahs;
  input dl3_enable;
  output dl3_rxactivehs;
  output dl3_rxvalidhs;
  output dl3_rxsynchs;
  output [7:0]dl3_datahs;

  wire clk_rxn;
  wire clk_rxp;
  wire clock_upd_req;
  wire [0:0]data_lp_n;
  wire [0:0]data_lp_p;
  wire [1:0]data_rxn;
  wire [1:0]data_rxp;
  wire dclk;
  wire [7:0]dl0_datahs;
  wire dl0_rxvalidhs;
  wire [7:0]dl1_datahs;
  wire in_delay_clk;
  wire [7:0]out_data;
  wire [7:0]out_data0_in;
  wire pclk;
  wire \raw_fe_data_reg_n_0_[0] ;
  wire \raw_fe_data_reg_n_0_[10] ;
  wire \raw_fe_data_reg_n_0_[11] ;
  wire \raw_fe_data_reg_n_0_[12] ;
  wire \raw_fe_data_reg_n_0_[13] ;
  wire \raw_fe_data_reg_n_0_[14] ;
  wire \raw_fe_data_reg_n_0_[15] ;
  wire \raw_fe_data_reg_n_0_[1] ;
  wire \raw_fe_data_reg_n_0_[2] ;
  wire \raw_fe_data_reg_n_0_[3] ;
  wire \raw_fe_data_reg_n_0_[4] ;
  wire \raw_fe_data_reg_n_0_[5] ;
  wire \raw_fe_data_reg_n_0_[6] ;
  wire \raw_fe_data_reg_n_0_[7] ;
  wire \raw_fe_data_reg_n_0_[8] ;
  wire \raw_fe_data_reg_n_0_[9] ;
  wire raw_fe_valid_reg;
  wire rxbyteclkhs;
  wire trig_req;
  wire \with_lp_gen.line_raw_sync_reg1 ;
  wire \with_lp_gen.raw_valid_reg ;
  wire \NLW_IDELAYCTRL_gen.IdlyCtrl_inst_0_RDY_UNCONNECTED ;

  assign dl1_rxvalidhs = dl0_rxvalidhs;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "csi_dly_grp" *) 
  IDELAYCTRL #(
    .SIM_DEVICE("7SERIES")) 
    \IDELAYCTRL_gen.IdlyCtrl_inst_0 
       (.RDY(\NLW_IDELAYCTRL_gen.IdlyCtrl_inst_0_RDY_UNCONNECTED ),
        .REFCLK(in_delay_clk),
        .RST(1'b0));
  system_csi2_d_phy_rx_0_1__line_if \bits_gen[0].line_if_inst 
       (.CLKB(dclk),
        .D(out_data),
        .data_rxn(data_rxn[0]),
        .data_rxp(data_rxp[0]),
        .dclk(dclk),
        .pclk(pclk));
  system_csi2_d_phy_rx_0_1__line_if_0 \bits_gen[1].line_if_inst 
       (.CLKB(dclk),
        .D(out_data0_in),
        .data_rxn(data_rxn[1]),
        .data_rxp(data_rxp[1]),
        .dclk(dclk),
        .pclk(pclk));
  system_csi2_d_phy_rx_0_1__phy_clock_system clock_system_inst
       (.CLK(rxbyteclkhs),
        .clk_rxn(clk_rxn),
        .clk_rxp(clk_rxp),
        .dclk(dclk),
        .in0(clock_upd_req),
        .in_delay_clk(in_delay_clk),
        .pclk(pclk));
  FDRE #(
    .INIT(1'b0)) 
    clock_upd_req_reg
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(trig_req),
        .Q(clock_upd_req),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dl0_datahs_reg[0] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\raw_fe_data_reg_n_0_[0] ),
        .Q(dl0_datahs[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dl0_datahs_reg[1] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\raw_fe_data_reg_n_0_[1] ),
        .Q(dl0_datahs[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dl0_datahs_reg[2] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\raw_fe_data_reg_n_0_[2] ),
        .Q(dl0_datahs[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dl0_datahs_reg[3] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\raw_fe_data_reg_n_0_[3] ),
        .Q(dl0_datahs[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dl0_datahs_reg[4] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\raw_fe_data_reg_n_0_[4] ),
        .Q(dl0_datahs[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dl0_datahs_reg[5] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\raw_fe_data_reg_n_0_[5] ),
        .Q(dl0_datahs[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dl0_datahs_reg[6] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\raw_fe_data_reg_n_0_[6] ),
        .Q(dl0_datahs[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dl0_datahs_reg[7] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\raw_fe_data_reg_n_0_[7] ),
        .Q(dl0_datahs[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    dl0_rxvalidhs_reg
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(raw_fe_valid_reg),
        .Q(dl0_rxvalidhs),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \lane_1_gen.dl1_datahs_reg[0] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\raw_fe_data_reg_n_0_[8] ),
        .Q(dl1_datahs[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \lane_1_gen.dl1_datahs_reg[1] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\raw_fe_data_reg_n_0_[9] ),
        .Q(dl1_datahs[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \lane_1_gen.dl1_datahs_reg[2] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\raw_fe_data_reg_n_0_[10] ),
        .Q(dl1_datahs[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \lane_1_gen.dl1_datahs_reg[3] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\raw_fe_data_reg_n_0_[11] ),
        .Q(dl1_datahs[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \lane_1_gen.dl1_datahs_reg[4] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\raw_fe_data_reg_n_0_[12] ),
        .Q(dl1_datahs[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \lane_1_gen.dl1_datahs_reg[5] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\raw_fe_data_reg_n_0_[13] ),
        .Q(dl1_datahs[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \lane_1_gen.dl1_datahs_reg[6] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\raw_fe_data_reg_n_0_[14] ),
        .Q(dl1_datahs[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \lane_1_gen.dl1_datahs_reg[7] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\raw_fe_data_reg_n_0_[15] ),
        .Q(dl1_datahs[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \raw_fe_data_reg[0] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(out_data[0]),
        .Q(\raw_fe_data_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \raw_fe_data_reg[10] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(out_data0_in[2]),
        .Q(\raw_fe_data_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \raw_fe_data_reg[11] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(out_data0_in[3]),
        .Q(\raw_fe_data_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \raw_fe_data_reg[12] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(out_data0_in[4]),
        .Q(\raw_fe_data_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \raw_fe_data_reg[13] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(out_data0_in[5]),
        .Q(\raw_fe_data_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \raw_fe_data_reg[14] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(out_data0_in[6]),
        .Q(\raw_fe_data_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \raw_fe_data_reg[15] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(out_data0_in[7]),
        .Q(\raw_fe_data_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \raw_fe_data_reg[1] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(out_data[1]),
        .Q(\raw_fe_data_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \raw_fe_data_reg[2] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(out_data[2]),
        .Q(\raw_fe_data_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \raw_fe_data_reg[3] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(out_data[3]),
        .Q(\raw_fe_data_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \raw_fe_data_reg[4] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(out_data[4]),
        .Q(\raw_fe_data_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \raw_fe_data_reg[5] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(out_data[5]),
        .Q(\raw_fe_data_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \raw_fe_data_reg[6] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(out_data[6]),
        .Q(\raw_fe_data_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \raw_fe_data_reg[7] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(out_data[7]),
        .Q(\raw_fe_data_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \raw_fe_data_reg[8] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(out_data0_in[0]),
        .Q(\raw_fe_data_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \raw_fe_data_reg[9] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(out_data0_in[1]),
        .Q(\raw_fe_data_reg_n_0_[9] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \raw_fe_valid_reg[0] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\with_lp_gen.raw_valid_reg ),
        .Q(raw_fe_valid_reg),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \with_lp_gen.raw_valid[0]_i_1 
       (.I0(data_lp_n),
        .I1(data_lp_p),
        .O(\with_lp_gen.line_raw_sync_reg1 ));
  FDRE #(
    .INIT(1'b0)) 
    \with_lp_gen.raw_valid_reg[0] 
       (.C(pclk),
        .CE(1'b1),
        .D(\with_lp_gen.line_raw_sync_reg1 ),
        .Q(\with_lp_gen.raw_valid_reg ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "line_if" *) 
module system_csi2_d_phy_rx_0_1__line_if
   (D,
    data_rxp,
    data_rxn,
    dclk,
    CLKB,
    pclk);
  output [7:0]D;
  input [0:0]data_rxp;
  input [0:0]data_rxn;
  input dclk;
  input CLKB;
  input pclk;

  wire CLKB;
  wire [7:0]D;
  wire [0:0]data_rxn;
  wire [0:0]data_rxp;
  wire data_s;
  wire dclk;
  wire pclk;
  wire NLW_ISERDESE2_inst_O_UNCONNECTED;
  wire NLW_ISERDESE2_inst_SHIFTOUT1_UNCONNECTED;
  wire NLW_ISERDESE2_inst_SHIFTOUT2_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  ISERDESE2 #(
    .DATA_RATE("DDR"),
    .DATA_WIDTH(8),
    .DYN_CLKDIV_INV_EN("FALSE"),
    .DYN_CLK_INV_EN("FALSE"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .INIT_Q3(1'b0),
    .INIT_Q4(1'b0),
    .INTERFACE_TYPE("NETWORKING"),
    .IOBDELAY("NONE"),
    .IS_CLKB_INVERTED(1'b1),
    .IS_CLKDIVP_INVERTED(1'b0),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_OCLKB_INVERTED(1'b0),
    .IS_OCLK_INVERTED(1'b0),
    .NUM_CE(2),
    .OFB_USED("FALSE"),
    .SERDES_MODE("MASTER"),
    .SRVAL_Q1(1'b0),
    .SRVAL_Q2(1'b0),
    .SRVAL_Q3(1'b0),
    .SRVAL_Q4(1'b0)) 
    ISERDESE2_inst
       (.BITSLIP(1'b0),
        .CE1(1'b1),
        .CE2(1'b1),
        .CLK(dclk),
        .CLKB(CLKB),
        .CLKDIV(pclk),
        .CLKDIVP(1'b0),
        .D(data_s),
        .DDLY(1'b0),
        .DYNCLKDIVSEL(1'b0),
        .DYNCLKSEL(1'b0),
        .O(NLW_ISERDESE2_inst_O_UNCONNECTED),
        .OCLK(1'b0),
        .OCLKB(1'b0),
        .OFB(1'b0),
        .Q1(D[7]),
        .Q2(D[6]),
        .Q3(D[5]),
        .Q4(D[4]),
        .Q5(D[3]),
        .Q6(D[2]),
        .Q7(D[1]),
        .Q8(D[0]),
        .RST(1'b0),
        .SHIFTIN1(1'b0),
        .SHIFTIN2(1'b0),
        .SHIFTOUT1(NLW_ISERDESE2_inst_SHIFTOUT1_UNCONNECTED),
        .SHIFTOUT2(NLW_ISERDESE2_inst_SHIFTOUT2_UNCONNECTED));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUFDS #(
    .IOSTANDARD("DEFAULT")) 
    d_ibufds_inst
       (.I(data_rxp),
        .IB(data_rxn),
        .O(data_s));
endmodule

(* ORIG_REF_NAME = "line_if" *) 
module system_csi2_d_phy_rx_0_1__line_if_0
   (D,
    data_rxp,
    data_rxn,
    dclk,
    CLKB,
    pclk);
  output [7:0]D;
  input [0:0]data_rxp;
  input [0:0]data_rxn;
  input dclk;
  input CLKB;
  input pclk;

  wire CLKB;
  wire [7:0]D;
  wire [0:0]data_rxn;
  wire [0:0]data_rxp;
  wire data_s;
  wire dclk;
  wire pclk;
  wire NLW_ISERDESE2_inst_O_UNCONNECTED;
  wire NLW_ISERDESE2_inst_SHIFTOUT1_UNCONNECTED;
  wire NLW_ISERDESE2_inst_SHIFTOUT2_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  ISERDESE2 #(
    .DATA_RATE("DDR"),
    .DATA_WIDTH(8),
    .DYN_CLKDIV_INV_EN("FALSE"),
    .DYN_CLK_INV_EN("FALSE"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .INIT_Q3(1'b0),
    .INIT_Q4(1'b0),
    .INTERFACE_TYPE("NETWORKING"),
    .IOBDELAY("NONE"),
    .IS_CLKB_INVERTED(1'b1),
    .IS_CLKDIVP_INVERTED(1'b0),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_OCLKB_INVERTED(1'b0),
    .IS_OCLK_INVERTED(1'b0),
    .NUM_CE(2),
    .OFB_USED("FALSE"),
    .SERDES_MODE("MASTER"),
    .SRVAL_Q1(1'b0),
    .SRVAL_Q2(1'b0),
    .SRVAL_Q3(1'b0),
    .SRVAL_Q4(1'b0)) 
    ISERDESE2_inst
       (.BITSLIP(1'b0),
        .CE1(1'b1),
        .CE2(1'b1),
        .CLK(dclk),
        .CLKB(CLKB),
        .CLKDIV(pclk),
        .CLKDIVP(1'b0),
        .D(data_s),
        .DDLY(1'b0),
        .DYNCLKDIVSEL(1'b0),
        .DYNCLKSEL(1'b0),
        .O(NLW_ISERDESE2_inst_O_UNCONNECTED),
        .OCLK(1'b0),
        .OCLKB(1'b0),
        .OFB(1'b0),
        .Q1(D[7]),
        .Q2(D[6]),
        .Q3(D[5]),
        .Q4(D[4]),
        .Q5(D[3]),
        .Q6(D[2]),
        .Q7(D[1]),
        .Q8(D[0]),
        .RST(1'b0),
        .SHIFTIN1(1'b0),
        .SHIFTIN2(1'b0),
        .SHIFTOUT1(NLW_ISERDESE2_inst_SHIFTOUT1_UNCONNECTED),
        .SHIFTOUT2(NLW_ISERDESE2_inst_SHIFTOUT2_UNCONNECTED));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* IFD_DELAY_VALUE = "AUTO" *) 
  IBUFDS #(
    .IOSTANDARD("DEFAULT")) 
    d_ibufds_inst
       (.I(data_rxp),
        .IB(data_rxn),
        .O(data_s));
endmodule

(* ORIG_REF_NAME = "phy_clock_system" *) 
module system_csi2_d_phy_rx_0_1__phy_clock_system
   (dclk,
    pclk,
    CLK,
    clk_rxp,
    clk_rxn,
    in_delay_clk,
    in0);
  output dclk;
  output pclk;
  output CLK;
  input clk_rxp;
  input clk_rxn;
  input in_delay_clk;
  input in0;

  wire CLK;
  wire [4:0]CNTVALUEIN;
  wire \FSM_sequential_dly_gen.sm_state[0]_i_1_n_0 ;
  wire \FSM_sequential_dly_gen.sm_state[0]_i_2_n_0 ;
  wire \FSM_sequential_dly_gen.sm_state[1]_i_1_n_0 ;
  wire \FSM_sequential_dly_gen.sm_state[2]_i_1_n_0 ;
  wire \FSM_sequential_dly_gen.sm_state[2]_i_2_n_0 ;
  wire \FSM_sequential_dly_gen.sm_state[2]_i_3_n_0 ;
  wire \FSM_sequential_dly_gen.sm_state[2]_i_4_n_0 ;
  wire I1;
  wire LD;
  wire [19:0]acc_cnt;
  wire acc_cnt0_carry__0_n_0;
  wire acc_cnt0_carry__1_n_0;
  wire acc_cnt0_carry__2_n_0;
  wire acc_cnt0_carry_n_0;
  wire clk_bufmr;
  wire clk_d;
  wire clk_dg;
  wire clk_g;
  wire clk_rxn;
  wire clk_rxp;
  wire curr_delay;
  wire [19:0]data0;
  wire dclk;
  wire delay_set;
  (* RTL_KEEP = "true" *) wire direct_clk_c;
  wire direct_clk_c_i_1_n_0;
  (* RTL_KEEP = "true" *) wire direct_clk_s;
  wire \dly_gen.acc_cnt[19]_i_1_n_0 ;
  wire \dly_gen.acc_cnt[19]_i_2_n_0 ;
  wire \dly_gen.acc_cnt[19]_i_3_n_0 ;
  wire \dly_gen.acc_cnt[19]_i_4_n_0 ;
  wire \dly_gen.acc_cnt[19]_i_5_n_0 ;
  wire \dly_gen.acc_val[0]_i_1_n_0 ;
  wire \dly_gen.acc_val[0]_i_3_n_0 ;
  wire [19:0]\dly_gen.acc_val_reg ;
  wire \dly_gen.acc_val_reg[0]_i_2_n_0 ;
  wire \dly_gen.acc_val_reg[0]_i_2_n_4 ;
  wire \dly_gen.acc_val_reg[0]_i_2_n_5 ;
  wire \dly_gen.acc_val_reg[0]_i_2_n_6 ;
  wire \dly_gen.acc_val_reg[0]_i_2_n_7 ;
  wire \dly_gen.acc_val_reg[12]_i_1_n_0 ;
  wire \dly_gen.acc_val_reg[12]_i_1_n_4 ;
  wire \dly_gen.acc_val_reg[12]_i_1_n_5 ;
  wire \dly_gen.acc_val_reg[12]_i_1_n_6 ;
  wire \dly_gen.acc_val_reg[12]_i_1_n_7 ;
  wire \dly_gen.acc_val_reg[16]_i_1_n_4 ;
  wire \dly_gen.acc_val_reg[16]_i_1_n_5 ;
  wire \dly_gen.acc_val_reg[16]_i_1_n_6 ;
  wire \dly_gen.acc_val_reg[16]_i_1_n_7 ;
  wire \dly_gen.acc_val_reg[4]_i_1_n_0 ;
  wire \dly_gen.acc_val_reg[4]_i_1_n_4 ;
  wire \dly_gen.acc_val_reg[4]_i_1_n_5 ;
  wire \dly_gen.acc_val_reg[4]_i_1_n_6 ;
  wire \dly_gen.acc_val_reg[4]_i_1_n_7 ;
  wire \dly_gen.acc_val_reg[8]_i_1_n_0 ;
  wire \dly_gen.acc_val_reg[8]_i_1_n_4 ;
  wire \dly_gen.acc_val_reg[8]_i_1_n_5 ;
  wire \dly_gen.acc_val_reg[8]_i_1_n_6 ;
  wire \dly_gen.acc_val_reg[8]_i_1_n_7 ;
  wire \dly_gen.curr_delay[0]_i_1_n_0 ;
  wire \dly_gen.curr_delay[1]_i_1_n_0 ;
  wire \dly_gen.curr_delay[2]_i_1_n_0 ;
  wire \dly_gen.curr_delay[3]_i_1_n_0 ;
  wire \dly_gen.curr_delay[3]_i_2_n_0 ;
  wire \dly_gen.curr_delay[4]_i_2_n_0 ;
  wire \dly_gen.curr_delay[4]_i_3_n_0 ;
  wire \dly_gen.curr_delay[4]_i_4_n_0 ;
  wire \dly_gen.delay_set_i_1_n_0 ;
  wire \dly_gen.invers_clk_i_1_n_0 ;
  wire \dly_gen.invers_clk_i_2_n_0 ;
  wire \dly_gen.sum_dly[1]_i_1_n_0 ;
  wire \dly_gen.sum_dly[2]_i_1_n_0 ;
  wire \dly_gen.sum_dly[3]_i_1_n_0 ;
  wire \dly_gen.sum_dly[4]_i_1_n_0 ;
  wire \dly_gen.sum_dly[5]_i_2_n_0 ;
  wire \dly_gen.sum_dly[5]_i_3_n_0 ;
  wire \dly_gen.sum_dly_reg_n_0_[1] ;
  wire \dly_gen.sum_dly_reg_n_0_[2] ;
  wire \dly_gen.sum_dly_reg_n_0_[3] ;
  wire \dly_gen.sum_dly_reg_n_0_[4] ;
  wire \dly_gen.sum_dly_reg_n_0_[5] ;
  wire \dly_gen.wait_cnt[0]_i_1_n_0 ;
  wire \dly_gen.wait_cnt[10]_i_1_n_0 ;
  wire \dly_gen.wait_cnt[11]_i_1_n_0 ;
  wire \dly_gen.wait_cnt[12]_i_1_n_0 ;
  wire \dly_gen.wait_cnt[12]_i_3_n_0 ;
  wire \dly_gen.wait_cnt[12]_i_4_n_0 ;
  wire \dly_gen.wait_cnt[1]_i_1_n_0 ;
  wire \dly_gen.wait_cnt[2]_i_1_n_0 ;
  wire \dly_gen.wait_cnt[3]_i_1_n_0 ;
  wire \dly_gen.wait_cnt[4]_i_1_n_0 ;
  wire \dly_gen.wait_cnt[5]_i_1_n_0 ;
  wire \dly_gen.wait_cnt[6]_i_1_n_0 ;
  wire \dly_gen.wait_cnt[7]_i_1_n_0 ;
  wire \dly_gen.wait_cnt[8]_i_1_n_0 ;
  wire \dly_gen.wait_cnt[9]_i_1_n_0 ;
  wire \dly_gen.wait_cnt_reg_n_0_[0] ;
  wire \dly_gen.wait_cnt_reg_n_0_[10] ;
  wire \dly_gen.wait_cnt_reg_n_0_[11] ;
  wire \dly_gen.wait_cnt_reg_n_0_[12] ;
  wire \dly_gen.wait_cnt_reg_n_0_[1] ;
  wire \dly_gen.wait_cnt_reg_n_0_[2] ;
  wire \dly_gen.wait_cnt_reg_n_0_[3] ;
  wire \dly_gen.wait_cnt_reg_n_0_[4] ;
  wire \dly_gen.wait_cnt_reg_n_0_[5] ;
  wire \dly_gen.wait_cnt_reg_n_0_[6] ;
  wire \dly_gen.wait_cnt_reg_n_0_[7] ;
  wire \dly_gen.wait_cnt_reg_n_0_[8] ;
  wire \dly_gen.wait_cnt_reg_n_0_[9] ;
  wire [4:0]end_dly;
  wire end_dly_0;
  wire [19:0]err_rate;
  wire [1:0]err_sr;
  wire in0;
  wire [12:1]in9;
  wire in_delay_clk;
  wire invers_clk;
  (* RTL_KEEP = "true" *) wire invers_clk_c;
  (* RTL_KEEP = "true" *) wire invers_clk_s;
  wire pclk;
  (* async_reg = "true" *) wire req_i;
  wire sm_state0_carry__0_i_1_n_0;
  wire sm_state0_carry__0_i_2_n_0;
  wire sm_state0_carry__0_i_3_n_0;
  wire sm_state0_carry__0_i_4_n_0;
  wire sm_state0_carry__0_i_5_n_0;
  wire sm_state0_carry__0_i_6_n_0;
  wire sm_state0_carry__0_i_7_n_0;
  wire sm_state0_carry__0_i_8_n_0;
  wire sm_state0_carry__0_n_0;
  wire sm_state0_carry__1_i_1_n_0;
  wire sm_state0_carry__1_i_2_n_0;
  wire sm_state0_carry__1_i_3_n_0;
  wire sm_state0_carry__1_i_4_n_0;
  wire sm_state0_carry__1_n_2;
  wire sm_state0_carry_i_1_n_0;
  wire sm_state0_carry_i_2_n_0;
  wire sm_state0_carry_i_3_n_0;
  wire sm_state0_carry_i_4_n_0;
  wire sm_state0_carry_i_5_n_0;
  wire sm_state0_carry_i_6_n_0;
  wire sm_state0_carry_i_7_n_0;
  wire sm_state0_carry_n_0;
  wire [2:0]sm_state__0;
  wire [1:1]sm_state__1;
  wire [4:0]start_dly;
  wire start_dly_1;
  wire sum_dly;
  wire wait_cnt;
  wire wait_cnt0_carry__0_i_1_n_0;
  wire wait_cnt0_carry__0_i_2_n_0;
  wire wait_cnt0_carry__0_i_3_n_0;
  wire wait_cnt0_carry__0_i_4_n_0;
  wire wait_cnt0_carry__0_n_0;
  wire wait_cnt0_carry__1_i_1_n_0;
  wire wait_cnt0_carry__1_i_2_n_0;
  wire wait_cnt0_carry__1_i_3_n_0;
  wire wait_cnt0_carry__1_i_4_n_0;
  wire wait_cnt0_carry_i_1_n_0;
  wire wait_cnt0_carry_i_2_n_0;
  wire wait_cnt0_carry_i_3_n_0;
  wire wait_cnt0_carry_i_4_n_0;
  wire wait_cnt0_carry_n_0;
  wire [2:0]NLW_acc_cnt0_carry_CO_UNCONNECTED;
  wire [2:0]NLW_acc_cnt0_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_acc_cnt0_carry__1_CO_UNCONNECTED;
  wire [2:0]NLW_acc_cnt0_carry__2_CO_UNCONNECTED;
  wire [3:0]NLW_acc_cnt0_carry__3_CO_UNCONNECTED;
  wire [3:3]NLW_acc_cnt0_carry__3_O_UNCONNECTED;
  wire [4:0]\NLW_dly_gen.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED ;
  wire [2:0]\NLW_dly_gen.acc_val_reg[0]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_dly_gen.acc_val_reg[12]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_dly_gen.acc_val_reg[16]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_dly_gen.acc_val_reg[4]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_dly_gen.acc_val_reg[8]_i_1_CO_UNCONNECTED ;
  wire [2:0]NLW_sm_state0_carry_CO_UNCONNECTED;
  wire [3:0]NLW_sm_state0_carry_O_UNCONNECTED;
  wire [2:0]NLW_sm_state0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_sm_state0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_sm_state0_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_sm_state0_carry__1_O_UNCONNECTED;
  wire [2:0]NLW_wait_cnt0_carry_CO_UNCONNECTED;
  wire [2:0]NLW_wait_cnt0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_wait_cnt0_carry__1_CO_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFIO BUFIO_inst
       (.I(clk_bufmr),
        .O(dclk));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFMRCE #(
    .CE_TYPE("ASYNC"),
    .INIT_OUT(0),
    .IS_CE_INVERTED(1'b0)) 
    BUFMRCE_inst
       (.CE(1'b1),
        .I(clk_dg),
        .O(clk_bufmr));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFR #(
    .BUFR_DIVIDE("4"),
    .SIM_DEVICE("7SERIES")) 
    BUFR_inst
       (.CE(1'b1),
        .CLR(1'b0),
        .I(clk_bufmr),
        .O(pclk));
  LUT6 #(
    .INIT(64'hE0ACE0AC0FFF0FF0)) 
    \FSM_sequential_dly_gen.sm_state[0]_i_1 
       (.I0(\FSM_sequential_dly_gen.sm_state[0]_i_2_n_0 ),
        .I1(\FSM_sequential_dly_gen.sm_state[2]_i_2_n_0 ),
        .I2(sm_state__0[1]),
        .I3(sm_state__0[2]),
        .I4(sm_state0_carry__1_n_2),
        .I5(sm_state__0[0]),
        .O(\FSM_sequential_dly_gen.sm_state[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hAAEF)) 
    \FSM_sequential_dly_gen.sm_state[0]_i_2 
       (.I0(sm_state__0[2]),
        .I1(\dly_gen.curr_delay[4]_i_4_n_0 ),
        .I2(CNTVALUEIN[4]),
        .I3(req_i),
        .O(\FSM_sequential_dly_gen.sm_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEAA2EAA2EAAAEAA0)) 
    \FSM_sequential_dly_gen.sm_state[1]_i_1 
       (.I0(sm_state__1),
        .I1(\FSM_sequential_dly_gen.sm_state[2]_i_2_n_0 ),
        .I2(sm_state__0[1]),
        .I3(sm_state__0[2]),
        .I4(sm_state0_carry__1_n_2),
        .I5(sm_state__0[0]),
        .O(\FSM_sequential_dly_gen.sm_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF000F0F0F0DFF0F0)) 
    \FSM_sequential_dly_gen.sm_state[1]_i_2 
       (.I0(CNTVALUEIN[4]),
        .I1(\dly_gen.curr_delay[4]_i_4_n_0 ),
        .I2(sm_state__0[0]),
        .I3(sm_state__0[2]),
        .I4(sm_state__0[1]),
        .I5(req_i),
        .O(sm_state__1));
  LUT4 #(
    .INIT(16'hBCB0)) 
    \FSM_sequential_dly_gen.sm_state[2]_i_1 
       (.I0(\FSM_sequential_dly_gen.sm_state[2]_i_2_n_0 ),
        .I1(sm_state__0[1]),
        .I2(sm_state__0[2]),
        .I3(sm_state__0[0]),
        .O(\FSM_sequential_dly_gen.sm_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \FSM_sequential_dly_gen.sm_state[2]_i_2 
       (.I0(\FSM_sequential_dly_gen.sm_state[2]_i_3_n_0 ),
        .I1(\dly_gen.wait_cnt_reg_n_0_[4] ),
        .I2(\dly_gen.wait_cnt_reg_n_0_[3] ),
        .I3(\dly_gen.wait_cnt_reg_n_0_[6] ),
        .I4(\dly_gen.wait_cnt_reg_n_0_[5] ),
        .I5(\FSM_sequential_dly_gen.sm_state[2]_i_4_n_0 ),
        .O(\FSM_sequential_dly_gen.sm_state[2]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \FSM_sequential_dly_gen.sm_state[2]_i_3 
       (.I0(\dly_gen.wait_cnt_reg_n_0_[8] ),
        .I1(\dly_gen.wait_cnt_reg_n_0_[7] ),
        .I2(\dly_gen.wait_cnt_reg_n_0_[10] ),
        .I3(\dly_gen.wait_cnt_reg_n_0_[9] ),
        .O(\FSM_sequential_dly_gen.sm_state[2]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \FSM_sequential_dly_gen.sm_state[2]_i_4 
       (.I0(\dly_gen.wait_cnt_reg_n_0_[0] ),
        .I1(\dly_gen.wait_cnt_reg_n_0_[11] ),
        .I2(\dly_gen.wait_cnt_reg_n_0_[12] ),
        .I3(\dly_gen.wait_cnt_reg_n_0_[2] ),
        .I4(\dly_gen.wait_cnt_reg_n_0_[1] ),
        .O(\FSM_sequential_dly_gen.sm_state[2]_i_4_n_0 ));
  (* FSM_ENCODED_STATES = "st_check:000,st_find_good:010,st_set_dly:101,st_set_wait:110,st_good_wait:001,st_find_bad:011,st_bad_wait:111,st_calk_dly:100" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dly_gen.sm_state_reg[0] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(\FSM_sequential_dly_gen.sm_state[0]_i_1_n_0 ),
        .Q(sm_state__0[0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "st_check:000,st_find_good:010,st_set_dly:101,st_set_wait:110,st_good_wait:001,st_find_bad:011,st_bad_wait:111,st_calk_dly:100" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dly_gen.sm_state_reg[1] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(\FSM_sequential_dly_gen.sm_state[1]_i_1_n_0 ),
        .Q(sm_state__0[1]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "st_check:000,st_find_good:010,st_set_dly:101,st_set_wait:110,st_good_wait:001,st_find_bad:011,st_bad_wait:111,st_calk_dly:100" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_dly_gen.sm_state_reg[2] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(\FSM_sequential_dly_gen.sm_state[2]_i_1_n_0 ),
        .Q(sm_state__0[2]),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* \PinAttr:S[0]:HOLD_DETOUR  = "188" *) 
  CARRY4 acc_cnt0_carry
       (.CI(1'b0),
        .CO({acc_cnt0_carry_n_0,NLW_acc_cnt0_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(acc_cnt[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[4:1]),
        .S(acc_cnt[4:1]));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 acc_cnt0_carry__0
       (.CI(acc_cnt0_carry_n_0),
        .CO({acc_cnt0_carry__0_n_0,NLW_acc_cnt0_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[8:5]),
        .S(acc_cnt[8:5]));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 acc_cnt0_carry__1
       (.CI(acc_cnt0_carry__0_n_0),
        .CO({acc_cnt0_carry__1_n_0,NLW_acc_cnt0_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[12:9]),
        .S(acc_cnt[12:9]));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 acc_cnt0_carry__2
       (.CI(acc_cnt0_carry__1_n_0),
        .CO({acc_cnt0_carry__2_n_0,NLW_acc_cnt0_carry__2_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[16:13]),
        .S(acc_cnt[16:13]));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 acc_cnt0_carry__3
       (.CI(acc_cnt0_carry__2_n_0),
        .CO(NLW_acc_cnt0_carry__3_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_acc_cnt0_carry__3_O_UNCONNECTED[3],data0[19:17]}),
        .S({1'b0,acc_cnt[19:17]}));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* XILINX_LEGACY_PRIM = "IBUFGDS" *) 
  IBUFDS #(
    .IOSTANDARD("DEFAULT")) 
    clk_ibufgds_inst
       (.I(clk_rxp),
        .IB(clk_rxn),
        .O(clk_g));
  LUT1 #(
    .INIT(2'h1)) 
    direct_clk_c_i_1
       (.I0(invers_clk),
        .O(direct_clk_c_i_1_n_0));
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    direct_clk_c_reg
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(direct_clk_c_i_1_n_0),
        .Q(direct_clk_c),
        .R(1'b0));
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    direct_clk_s_reg
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(direct_clk_c_i_1_n_0),
        .Q(direct_clk_s),
        .R(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFGCTRL #(
    .CE_TYPE_CE0("SYNC"),
    .CE_TYPE_CE1("SYNC"),
    .INIT_OUT(0),
    .IS_CE0_INVERTED(1'b0),
    .IS_CE1_INVERTED(1'b0),
    .IS_I0_INVERTED(1'b0),
    .IS_I1_INVERTED(1'b0),
    .IS_IGNORE0_INVERTED(1'b0),
    .IS_IGNORE1_INVERTED(1'b0),
    .IS_S0_INVERTED(1'b0),
    .IS_S1_INVERTED(1'b0),
    .PRESELECT_I0("FALSE"),
    .PRESELECT_I1("FALSE"),
    .SIM_DEVICE("7SERIES"),
    .STARTUP_SYNC("FALSE")) 
    \dly_gen.BUFGCTRL_inst 
       (.CE0(direct_clk_c),
        .CE1(invers_clk_c),
        .I0(clk_d),
        .I1(I1),
        .IGNORE0(1'b0),
        .IGNORE1(1'b0),
        .O(clk_dg),
        .S0(direct_clk_s),
        .S1(invers_clk_s));
  LUT1 #(
    .INIT(2'h1)) 
    \dly_gen.BUFGCTRL_inst_i_1 
       (.I0(clk_d),
        .O(I1));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "csi_dly_grp" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("CLOCK")) 
    \dly_gen.IDELAYE2_inst 
       (.C(in_delay_clk),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(CNTVALUEIN),
        .CNTVALUEOUT(\NLW_dly_gen.IDELAYE2_inst_CNTVALUEOUT_UNCONNECTED [4:0]),
        .DATAIN(1'b0),
        .DATAOUT(clk_d),
        .IDATAIN(clk_g),
        .INC(1'b1),
        .LD(LD),
        .LDPIPEEN(1'b0),
        .REGRST(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \dly_gen.acc_cnt[0]_i_1 
       (.I0(acc_cnt[0]),
        .O(data0[0]));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    \dly_gen.acc_cnt[19]_i_1 
       (.I0(acc_cnt[1]),
        .I1(acc_cnt[0]),
        .I2(acc_cnt[3]),
        .I3(acc_cnt[2]),
        .I4(\dly_gen.acc_cnt[19]_i_2_n_0 ),
        .I5(\dly_gen.acc_cnt[19]_i_3_n_0 ),
        .O(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFB)) 
    \dly_gen.acc_cnt[19]_i_2 
       (.I0(acc_cnt[15]),
        .I1(acc_cnt[14]),
        .I2(acc_cnt[12]),
        .I3(acc_cnt[13]),
        .I4(\dly_gen.acc_cnt[19]_i_4_n_0 ),
        .O(\dly_gen.acc_cnt[19]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFEFFF)) 
    \dly_gen.acc_cnt[19]_i_3 
       (.I0(acc_cnt[6]),
        .I1(acc_cnt[7]),
        .I2(acc_cnt[4]),
        .I3(acc_cnt[5]),
        .I4(\dly_gen.acc_cnt[19]_i_5_n_0 ),
        .O(\dly_gen.acc_cnt[19]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \dly_gen.acc_cnt[19]_i_4 
       (.I0(acc_cnt[17]),
        .I1(acc_cnt[16]),
        .I2(acc_cnt[19]),
        .I3(acc_cnt[18]),
        .O(\dly_gen.acc_cnt[19]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFFFD)) 
    \dly_gen.acc_cnt[19]_i_5 
       (.I0(acc_cnt[9]),
        .I1(acc_cnt[8]),
        .I2(acc_cnt[11]),
        .I3(acc_cnt[10]),
        .O(\dly_gen.acc_cnt[19]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_cnt_reg[0] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(data0[0]),
        .Q(acc_cnt[0]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_cnt_reg[10] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(data0[10]),
        .Q(acc_cnt[10]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_cnt_reg[11] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(data0[11]),
        .Q(acc_cnt[11]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_cnt_reg[12] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(data0[12]),
        .Q(acc_cnt[12]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_cnt_reg[13] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(data0[13]),
        .Q(acc_cnt[13]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_cnt_reg[14] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(data0[14]),
        .Q(acc_cnt[14]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_cnt_reg[15] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(data0[15]),
        .Q(acc_cnt[15]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_cnt_reg[16] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(data0[16]),
        .Q(acc_cnt[16]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_cnt_reg[17] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(data0[17]),
        .Q(acc_cnt[17]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_cnt_reg[18] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(data0[18]),
        .Q(acc_cnt[18]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_cnt_reg[19] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(data0[19]),
        .Q(acc_cnt[19]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_cnt_reg[1] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(data0[1]),
        .Q(acc_cnt[1]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_cnt_reg[2] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(data0[2]),
        .Q(acc_cnt[2]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_cnt_reg[3] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(data0[3]),
        .Q(acc_cnt[3]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_cnt_reg[4] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(data0[4]),
        .Q(acc_cnt[4]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_cnt_reg[5] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(data0[5]),
        .Q(acc_cnt[5]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_cnt_reg[6] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(data0[6]),
        .Q(acc_cnt[6]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_cnt_reg[7] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(data0[7]),
        .Q(acc_cnt[7]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_cnt_reg[8] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(data0[8]),
        .Q(acc_cnt[8]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_cnt_reg[9] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(data0[9]),
        .Q(acc_cnt[9]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \dly_gen.acc_val[0]_i_1 
       (.I0(err_sr[0]),
        .I1(err_sr[1]),
        .O(\dly_gen.acc_val[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \dly_gen.acc_val[0]_i_3 
       (.I0(\dly_gen.acc_val_reg [0]),
        .O(\dly_gen.acc_val[0]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_val_reg[0] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_val[0]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg[0]_i_2_n_7 ),
        .Q(\dly_gen.acc_val_reg [0]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \dly_gen.acc_val_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\dly_gen.acc_val_reg[0]_i_2_n_0 ,\NLW_dly_gen.acc_val_reg[0]_i_2_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\dly_gen.acc_val_reg[0]_i_2_n_4 ,\dly_gen.acc_val_reg[0]_i_2_n_5 ,\dly_gen.acc_val_reg[0]_i_2_n_6 ,\dly_gen.acc_val_reg[0]_i_2_n_7 }),
        .S({\dly_gen.acc_val_reg [3:1],\dly_gen.acc_val[0]_i_3_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_val_reg[10] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_val[0]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg[8]_i_1_n_5 ),
        .Q(\dly_gen.acc_val_reg [10]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_val_reg[11] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_val[0]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg[8]_i_1_n_4 ),
        .Q(\dly_gen.acc_val_reg [11]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_val_reg[12] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_val[0]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg[12]_i_1_n_7 ),
        .Q(\dly_gen.acc_val_reg [12]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \dly_gen.acc_val_reg[12]_i_1 
       (.CI(\dly_gen.acc_val_reg[8]_i_1_n_0 ),
        .CO({\dly_gen.acc_val_reg[12]_i_1_n_0 ,\NLW_dly_gen.acc_val_reg[12]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\dly_gen.acc_val_reg[12]_i_1_n_4 ,\dly_gen.acc_val_reg[12]_i_1_n_5 ,\dly_gen.acc_val_reg[12]_i_1_n_6 ,\dly_gen.acc_val_reg[12]_i_1_n_7 }),
        .S(\dly_gen.acc_val_reg [15:12]));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_val_reg[13] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_val[0]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg[12]_i_1_n_6 ),
        .Q(\dly_gen.acc_val_reg [13]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_val_reg[14] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_val[0]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg[12]_i_1_n_5 ),
        .Q(\dly_gen.acc_val_reg [14]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_val_reg[15] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_val[0]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg[12]_i_1_n_4 ),
        .Q(\dly_gen.acc_val_reg [15]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_val_reg[16] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_val[0]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg[16]_i_1_n_7 ),
        .Q(\dly_gen.acc_val_reg [16]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \dly_gen.acc_val_reg[16]_i_1 
       (.CI(\dly_gen.acc_val_reg[12]_i_1_n_0 ),
        .CO(\NLW_dly_gen.acc_val_reg[16]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\dly_gen.acc_val_reg[16]_i_1_n_4 ,\dly_gen.acc_val_reg[16]_i_1_n_5 ,\dly_gen.acc_val_reg[16]_i_1_n_6 ,\dly_gen.acc_val_reg[16]_i_1_n_7 }),
        .S(\dly_gen.acc_val_reg [19:16]));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_val_reg[17] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_val[0]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg[16]_i_1_n_6 ),
        .Q(\dly_gen.acc_val_reg [17]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_val_reg[18] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_val[0]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg[16]_i_1_n_5 ),
        .Q(\dly_gen.acc_val_reg [18]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_val_reg[19] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_val[0]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg[16]_i_1_n_4 ),
        .Q(\dly_gen.acc_val_reg [19]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_val_reg[1] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_val[0]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg[0]_i_2_n_6 ),
        .Q(\dly_gen.acc_val_reg [1]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_val_reg[2] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_val[0]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg[0]_i_2_n_5 ),
        .Q(\dly_gen.acc_val_reg [2]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_val_reg[3] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_val[0]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg[0]_i_2_n_4 ),
        .Q(\dly_gen.acc_val_reg [3]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_val_reg[4] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_val[0]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg[4]_i_1_n_7 ),
        .Q(\dly_gen.acc_val_reg [4]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \dly_gen.acc_val_reg[4]_i_1 
       (.CI(\dly_gen.acc_val_reg[0]_i_2_n_0 ),
        .CO({\dly_gen.acc_val_reg[4]_i_1_n_0 ,\NLW_dly_gen.acc_val_reg[4]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\dly_gen.acc_val_reg[4]_i_1_n_4 ,\dly_gen.acc_val_reg[4]_i_1_n_5 ,\dly_gen.acc_val_reg[4]_i_1_n_6 ,\dly_gen.acc_val_reg[4]_i_1_n_7 }),
        .S(\dly_gen.acc_val_reg [7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_val_reg[5] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_val[0]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg[4]_i_1_n_6 ),
        .Q(\dly_gen.acc_val_reg [5]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_val_reg[6] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_val[0]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg[4]_i_1_n_5 ),
        .Q(\dly_gen.acc_val_reg [6]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_val_reg[7] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_val[0]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg[4]_i_1_n_4 ),
        .Q(\dly_gen.acc_val_reg [7]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_val_reg[8] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_val[0]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg[8]_i_1_n_7 ),
        .Q(\dly_gen.acc_val_reg [8]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  (* ADDER_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \dly_gen.acc_val_reg[8]_i_1 
       (.CI(\dly_gen.acc_val_reg[4]_i_1_n_0 ),
        .CO({\dly_gen.acc_val_reg[8]_i_1_n_0 ,\NLW_dly_gen.acc_val_reg[8]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\dly_gen.acc_val_reg[8]_i_1_n_4 ,\dly_gen.acc_val_reg[8]_i_1_n_5 ,\dly_gen.acc_val_reg[8]_i_1_n_6 ,\dly_gen.acc_val_reg[8]_i_1_n_7 }),
        .S(\dly_gen.acc_val_reg [11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.acc_val_reg[9] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_val[0]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg[8]_i_1_n_6 ),
        .Q(\dly_gen.acc_val_reg [9]),
        .R(\dly_gen.acc_cnt[19]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h55C0)) 
    \dly_gen.curr_delay[0]_i_1 
       (.I0(CNTVALUEIN[0]),
        .I1(\dly_gen.sum_dly_reg_n_0_[1] ),
        .I2(sm_state__0[2]),
        .I3(sm_state__0[1]),
        .O(\dly_gen.curr_delay[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0FF08888)) 
    \dly_gen.curr_delay[1]_i_1 
       (.I0(sm_state__0[2]),
        .I1(\dly_gen.sum_dly_reg_n_0_[2] ),
        .I2(CNTVALUEIN[0]),
        .I3(CNTVALUEIN[1]),
        .I4(sm_state__0[1]),
        .O(\dly_gen.curr_delay[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0FFFF00088888888)) 
    \dly_gen.curr_delay[2]_i_1 
       (.I0(sm_state__0[2]),
        .I1(\dly_gen.sum_dly_reg_n_0_[3] ),
        .I2(CNTVALUEIN[0]),
        .I3(CNTVALUEIN[1]),
        .I4(CNTVALUEIN[2]),
        .I5(sm_state__0[1]),
        .O(\dly_gen.curr_delay[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF00F8888)) 
    \dly_gen.curr_delay[3]_i_1 
       (.I0(sm_state__0[2]),
        .I1(\dly_gen.sum_dly_reg_n_0_[4] ),
        .I2(\dly_gen.curr_delay[3]_i_2_n_0 ),
        .I3(CNTVALUEIN[3]),
        .I4(sm_state__0[1]),
        .O(\dly_gen.curr_delay[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \dly_gen.curr_delay[3]_i_2 
       (.I0(CNTVALUEIN[1]),
        .I1(CNTVALUEIN[0]),
        .I2(CNTVALUEIN[2]),
        .O(\dly_gen.curr_delay[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0F5000CF0F5000C0)) 
    \dly_gen.curr_delay[4]_i_1 
       (.I0(\dly_gen.curr_delay[4]_i_3_n_0 ),
        .I1(req_i),
        .I2(sm_state__0[1]),
        .I3(sm_state__0[2]),
        .I4(sm_state__0[0]),
        .I5(sm_state0_carry__1_n_2),
        .O(curr_delay));
  LUT5 #(
    .INIT(32'hF00F8888)) 
    \dly_gen.curr_delay[4]_i_2 
       (.I0(sm_state__0[2]),
        .I1(\dly_gen.sum_dly_reg_n_0_[5] ),
        .I2(\dly_gen.curr_delay[4]_i_4_n_0 ),
        .I3(CNTVALUEIN[4]),
        .I4(sm_state__0[1]),
        .O(\dly_gen.curr_delay[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEAAAAAAAAAAAAAAA)) 
    \dly_gen.curr_delay[4]_i_3 
       (.I0(req_i),
        .I1(CNTVALUEIN[4]),
        .I2(CNTVALUEIN[2]),
        .I3(CNTVALUEIN[0]),
        .I4(CNTVALUEIN[1]),
        .I5(CNTVALUEIN[3]),
        .O(\dly_gen.curr_delay[4]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \dly_gen.curr_delay[4]_i_4 
       (.I0(CNTVALUEIN[2]),
        .I1(CNTVALUEIN[0]),
        .I2(CNTVALUEIN[1]),
        .I3(CNTVALUEIN[3]),
        .O(\dly_gen.curr_delay[4]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.curr_delay_reg[0] 
       (.C(in_delay_clk),
        .CE(curr_delay),
        .D(\dly_gen.curr_delay[0]_i_1_n_0 ),
        .Q(CNTVALUEIN[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.curr_delay_reg[1] 
       (.C(in_delay_clk),
        .CE(curr_delay),
        .D(\dly_gen.curr_delay[1]_i_1_n_0 ),
        .Q(CNTVALUEIN[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.curr_delay_reg[2] 
       (.C(in_delay_clk),
        .CE(curr_delay),
        .D(\dly_gen.curr_delay[2]_i_1_n_0 ),
        .Q(CNTVALUEIN[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.curr_delay_reg[3] 
       (.C(in_delay_clk),
        .CE(curr_delay),
        .D(\dly_gen.curr_delay[3]_i_1_n_0 ),
        .Q(CNTVALUEIN[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.curr_delay_reg[4] 
       (.C(in_delay_clk),
        .CE(curr_delay),
        .D(\dly_gen.curr_delay[4]_i_2_n_0 ),
        .Q(CNTVALUEIN[4]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0FF4FFFF0FF40000)) 
    \dly_gen.delay_set_i_1 
       (.I0(sm_state__0[0]),
        .I1(sm_state0_carry__1_n_2),
        .I2(sm_state__0[2]),
        .I3(sm_state__0[1]),
        .I4(delay_set),
        .I5(LD),
        .O(\dly_gen.delay_set_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hE7E7E7E7EDE5EDED)) 
    \dly_gen.delay_set_i_2 
       (.I0(sm_state__0[1]),
        .I1(sm_state__0[0]),
        .I2(sm_state__0[2]),
        .I3(\dly_gen.curr_delay[4]_i_4_n_0 ),
        .I4(CNTVALUEIN[4]),
        .I5(req_i),
        .O(delay_set));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.delay_set_reg 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(\dly_gen.delay_set_i_1_n_0 ),
        .Q(LD),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0808080800080000)) 
    \dly_gen.end_dly[4]_i_1 
       (.I0(sm_state__0[0]),
        .I1(sm_state__0[1]),
        .I2(sm_state__0[2]),
        .I3(\dly_gen.curr_delay[4]_i_4_n_0 ),
        .I4(CNTVALUEIN[4]),
        .I5(req_i),
        .O(end_dly_0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.end_dly_reg[0] 
       (.C(in_delay_clk),
        .CE(end_dly_0),
        .D(CNTVALUEIN[0]),
        .Q(end_dly[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.end_dly_reg[1] 
       (.C(in_delay_clk),
        .CE(end_dly_0),
        .D(CNTVALUEIN[1]),
        .Q(end_dly[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.end_dly_reg[2] 
       (.C(in_delay_clk),
        .CE(end_dly_0),
        .D(CNTVALUEIN[2]),
        .Q(end_dly[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.end_dly_reg[3] 
       (.C(in_delay_clk),
        .CE(end_dly_0),
        .D(CNTVALUEIN[3]),
        .Q(end_dly[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.end_dly_reg[4] 
       (.C(in_delay_clk),
        .CE(end_dly_0),
        .D(CNTVALUEIN[4]),
        .Q(end_dly[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.err_rate_reg[0] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_cnt[19]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg [0]),
        .Q(err_rate[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.err_rate_reg[10] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_cnt[19]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg [10]),
        .Q(err_rate[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.err_rate_reg[11] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_cnt[19]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg [11]),
        .Q(err_rate[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.err_rate_reg[12] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_cnt[19]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg [12]),
        .Q(err_rate[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.err_rate_reg[13] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_cnt[19]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg [13]),
        .Q(err_rate[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.err_rate_reg[14] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_cnt[19]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg [14]),
        .Q(err_rate[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.err_rate_reg[15] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_cnt[19]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg [15]),
        .Q(err_rate[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.err_rate_reg[16] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_cnt[19]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg [16]),
        .Q(err_rate[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.err_rate_reg[17] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_cnt[19]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg [17]),
        .Q(err_rate[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.err_rate_reg[18] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_cnt[19]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg [18]),
        .Q(err_rate[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.err_rate_reg[19] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_cnt[19]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg [19]),
        .Q(err_rate[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.err_rate_reg[1] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_cnt[19]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg [1]),
        .Q(err_rate[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.err_rate_reg[2] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_cnt[19]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg [2]),
        .Q(err_rate[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.err_rate_reg[3] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_cnt[19]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg [3]),
        .Q(err_rate[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.err_rate_reg[4] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_cnt[19]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg [4]),
        .Q(err_rate[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.err_rate_reg[5] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_cnt[19]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg [5]),
        .Q(err_rate[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.err_rate_reg[6] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_cnt[19]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg [6]),
        .Q(err_rate[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.err_rate_reg[7] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_cnt[19]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg [7]),
        .Q(err_rate[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.err_rate_reg[8] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_cnt[19]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg [8]),
        .Q(err_rate[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.err_rate_reg[9] 
       (.C(in_delay_clk),
        .CE(\dly_gen.acc_cnt[19]_i_1_n_0 ),
        .D(\dly_gen.acc_val_reg [9]),
        .Q(err_rate[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.err_sr_reg[0] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(req_i),
        .Q(err_sr[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.err_sr_reg[1] 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(err_sr[0]),
        .Q(err_sr[1]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFBFFF00004000)) 
    \dly_gen.invers_clk_i_1 
       (.I0(\dly_gen.curr_delay[4]_i_4_n_0 ),
        .I1(CNTVALUEIN[4]),
        .I2(req_i),
        .I3(sm_state__0[1]),
        .I4(\dly_gen.invers_clk_i_2_n_0 ),
        .I5(invers_clk),
        .O(\dly_gen.invers_clk_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \dly_gen.invers_clk_i_2 
       (.I0(sm_state__0[0]),
        .I1(sm_state__0[2]),
        .O(\dly_gen.invers_clk_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.invers_clk_reg 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(\dly_gen.invers_clk_i_1_n_0 ),
        .Q(invers_clk),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.req_i_reg 
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(in0),
        .Q(req_i),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0004)) 
    \dly_gen.start_dly[4]_i_1 
       (.I0(req_i),
        .I1(sm_state__0[1]),
        .I2(sm_state__0[2]),
        .I3(sm_state__0[0]),
        .O(start_dly_1));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.start_dly_reg[0] 
       (.C(in_delay_clk),
        .CE(start_dly_1),
        .D(CNTVALUEIN[0]),
        .Q(start_dly[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.start_dly_reg[1] 
       (.C(in_delay_clk),
        .CE(start_dly_1),
        .D(CNTVALUEIN[1]),
        .Q(start_dly[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.start_dly_reg[2] 
       (.C(in_delay_clk),
        .CE(start_dly_1),
        .D(CNTVALUEIN[2]),
        .Q(start_dly[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.start_dly_reg[3] 
       (.C(in_delay_clk),
        .CE(start_dly_1),
        .D(CNTVALUEIN[3]),
        .Q(start_dly[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.start_dly_reg[4] 
       (.C(in_delay_clk),
        .CE(start_dly_1),
        .D(CNTVALUEIN[4]),
        .Q(start_dly[4]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h8778)) 
    \dly_gen.sum_dly[1]_i_1 
       (.I0(start_dly[0]),
        .I1(end_dly[0]),
        .I2(end_dly[1]),
        .I3(start_dly[1]),
        .O(\dly_gen.sum_dly[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF880077F077FF880)) 
    \dly_gen.sum_dly[2]_i_1 
       (.I0(end_dly[0]),
        .I1(start_dly[0]),
        .I2(start_dly[1]),
        .I3(end_dly[1]),
        .I4(end_dly[2]),
        .I5(start_dly[2]),
        .O(\dly_gen.sum_dly[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \dly_gen.sum_dly[3]_i_1 
       (.I0(\dly_gen.sum_dly[5]_i_3_n_0 ),
        .I1(end_dly[3]),
        .I2(start_dly[3]),
        .O(\dly_gen.sum_dly[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'hE81717E8)) 
    \dly_gen.sum_dly[4]_i_1 
       (.I0(\dly_gen.sum_dly[5]_i_3_n_0 ),
        .I1(start_dly[3]),
        .I2(end_dly[3]),
        .I3(end_dly[4]),
        .I4(start_dly[4]),
        .O(\dly_gen.sum_dly[4]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \dly_gen.sum_dly[5]_i_1 
       (.I0(sm_state__0[1]),
        .I1(sm_state__0[2]),
        .I2(sm_state__0[0]),
        .O(sum_dly));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'hEEE8E888)) 
    \dly_gen.sum_dly[5]_i_2 
       (.I0(end_dly[4]),
        .I1(start_dly[4]),
        .I2(\dly_gen.sum_dly[5]_i_3_n_0 ),
        .I3(start_dly[3]),
        .I4(end_dly[3]),
        .O(\dly_gen.sum_dly[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEE888E8888888)) 
    \dly_gen.sum_dly[5]_i_3 
       (.I0(end_dly[2]),
        .I1(start_dly[2]),
        .I2(end_dly[0]),
        .I3(start_dly[0]),
        .I4(start_dly[1]),
        .I5(end_dly[1]),
        .O(\dly_gen.sum_dly[5]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.sum_dly_reg[1] 
       (.C(in_delay_clk),
        .CE(sum_dly),
        .D(\dly_gen.sum_dly[1]_i_1_n_0 ),
        .Q(\dly_gen.sum_dly_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.sum_dly_reg[2] 
       (.C(in_delay_clk),
        .CE(sum_dly),
        .D(\dly_gen.sum_dly[2]_i_1_n_0 ),
        .Q(\dly_gen.sum_dly_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.sum_dly_reg[3] 
       (.C(in_delay_clk),
        .CE(sum_dly),
        .D(\dly_gen.sum_dly[3]_i_1_n_0 ),
        .Q(\dly_gen.sum_dly_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.sum_dly_reg[4] 
       (.C(in_delay_clk),
        .CE(sum_dly),
        .D(\dly_gen.sum_dly[4]_i_1_n_0 ),
        .Q(\dly_gen.sum_dly_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gen.sum_dly_reg[5] 
       (.C(in_delay_clk),
        .CE(sum_dly),
        .D(\dly_gen.sum_dly[5]_i_2_n_0 ),
        .Q(\dly_gen.sum_dly_reg_n_0_[5] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \dly_gen.wait_cnt[0]_i_1 
       (.I0(sm_state__0[2]),
        .I1(sm_state__0[0]),
        .I2(\dly_gen.wait_cnt_reg_n_0_[0] ),
        .O(\dly_gen.wait_cnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \dly_gen.wait_cnt[10]_i_1 
       (.I0(sm_state__0[2]),
        .I1(sm_state__0[0]),
        .I2(in9[10]),
        .O(\dly_gen.wait_cnt[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \dly_gen.wait_cnt[11]_i_1 
       (.I0(sm_state__0[2]),
        .I1(sm_state__0[0]),
        .I2(in9[11]),
        .O(\dly_gen.wait_cnt[11]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h382B3828)) 
    \dly_gen.wait_cnt[12]_i_1 
       (.I0(\dly_gen.wait_cnt[12]_i_4_n_0 ),
        .I1(sm_state__0[1]),
        .I2(sm_state__0[2]),
        .I3(sm_state__0[0]),
        .I4(sm_state0_carry__1_n_2),
        .O(\dly_gen.wait_cnt[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAA00F0AC)) 
    \dly_gen.wait_cnt[12]_i_2 
       (.I0(\FSM_sequential_dly_gen.sm_state[2]_i_2_n_0 ),
        .I1(sm_state0_carry__1_n_2),
        .I2(sm_state__0[0]),
        .I3(sm_state__0[2]),
        .I4(sm_state__0[1]),
        .I5(\dly_gen.wait_cnt[12]_i_4_n_0 ),
        .O(wait_cnt));
  LUT3 #(
    .INIT(8'hE0)) 
    \dly_gen.wait_cnt[12]_i_3 
       (.I0(sm_state__0[2]),
        .I1(sm_state__0[0]),
        .I2(in9[12]),
        .O(\dly_gen.wait_cnt[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h1202121200000000)) 
    \dly_gen.wait_cnt[12]_i_4 
       (.I0(req_i),
        .I1(sm_state__0[2]),
        .I2(sm_state__0[0]),
        .I3(\dly_gen.curr_delay[4]_i_4_n_0 ),
        .I4(CNTVALUEIN[4]),
        .I5(sm_state__0[1]),
        .O(\dly_gen.wait_cnt[12]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \dly_gen.wait_cnt[1]_i_1 
       (.I0(sm_state__0[2]),
        .I1(sm_state__0[0]),
        .I2(in9[1]),
        .O(\dly_gen.wait_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \dly_gen.wait_cnt[2]_i_1 
       (.I0(sm_state__0[2]),
        .I1(sm_state__0[0]),
        .I2(in9[2]),
        .O(\dly_gen.wait_cnt[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \dly_gen.wait_cnt[3]_i_1 
       (.I0(sm_state__0[2]),
        .I1(sm_state__0[0]),
        .I2(in9[3]),
        .O(\dly_gen.wait_cnt[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \dly_gen.wait_cnt[4]_i_1 
       (.I0(sm_state__0[2]),
        .I1(sm_state__0[0]),
        .I2(in9[4]),
        .O(\dly_gen.wait_cnt[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \dly_gen.wait_cnt[5]_i_1 
       (.I0(sm_state__0[2]),
        .I1(sm_state__0[0]),
        .I2(in9[5]),
        .O(\dly_gen.wait_cnt[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \dly_gen.wait_cnt[6]_i_1 
       (.I0(sm_state__0[2]),
        .I1(sm_state__0[0]),
        .I2(in9[6]),
        .O(\dly_gen.wait_cnt[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \dly_gen.wait_cnt[7]_i_1 
       (.I0(sm_state__0[2]),
        .I1(sm_state__0[0]),
        .I2(in9[7]),
        .O(\dly_gen.wait_cnt[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \dly_gen.wait_cnt[8]_i_1 
       (.I0(sm_state__0[2]),
        .I1(sm_state__0[0]),
        .I2(in9[8]),
        .O(\dly_gen.wait_cnt[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \dly_gen.wait_cnt[9]_i_1 
       (.I0(sm_state__0[2]),
        .I1(sm_state__0[0]),
        .I2(in9[9]),
        .O(\dly_gen.wait_cnt[9]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \dly_gen.wait_cnt_reg[0] 
       (.C(in_delay_clk),
        .CE(wait_cnt),
        .D(\dly_gen.wait_cnt[0]_i_1_n_0 ),
        .Q(\dly_gen.wait_cnt_reg_n_0_[0] ),
        .S(\dly_gen.wait_cnt[12]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \dly_gen.wait_cnt_reg[10] 
       (.C(in_delay_clk),
        .CE(wait_cnt),
        .D(\dly_gen.wait_cnt[10]_i_1_n_0 ),
        .Q(\dly_gen.wait_cnt_reg_n_0_[10] ),
        .S(\dly_gen.wait_cnt[12]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \dly_gen.wait_cnt_reg[11] 
       (.C(in_delay_clk),
        .CE(wait_cnt),
        .D(\dly_gen.wait_cnt[11]_i_1_n_0 ),
        .Q(\dly_gen.wait_cnt_reg_n_0_[11] ),
        .S(\dly_gen.wait_cnt[12]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \dly_gen.wait_cnt_reg[12] 
       (.C(in_delay_clk),
        .CE(wait_cnt),
        .D(\dly_gen.wait_cnt[12]_i_3_n_0 ),
        .Q(\dly_gen.wait_cnt_reg_n_0_[12] ),
        .S(\dly_gen.wait_cnt[12]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \dly_gen.wait_cnt_reg[1] 
       (.C(in_delay_clk),
        .CE(wait_cnt),
        .D(\dly_gen.wait_cnt[1]_i_1_n_0 ),
        .Q(\dly_gen.wait_cnt_reg_n_0_[1] ),
        .S(\dly_gen.wait_cnt[12]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \dly_gen.wait_cnt_reg[2] 
       (.C(in_delay_clk),
        .CE(wait_cnt),
        .D(\dly_gen.wait_cnt[2]_i_1_n_0 ),
        .Q(\dly_gen.wait_cnt_reg_n_0_[2] ),
        .S(\dly_gen.wait_cnt[12]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \dly_gen.wait_cnt_reg[3] 
       (.C(in_delay_clk),
        .CE(wait_cnt),
        .D(\dly_gen.wait_cnt[3]_i_1_n_0 ),
        .Q(\dly_gen.wait_cnt_reg_n_0_[3] ),
        .S(\dly_gen.wait_cnt[12]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \dly_gen.wait_cnt_reg[4] 
       (.C(in_delay_clk),
        .CE(wait_cnt),
        .D(\dly_gen.wait_cnt[4]_i_1_n_0 ),
        .Q(\dly_gen.wait_cnt_reg_n_0_[4] ),
        .S(\dly_gen.wait_cnt[12]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \dly_gen.wait_cnt_reg[5] 
       (.C(in_delay_clk),
        .CE(wait_cnt),
        .D(\dly_gen.wait_cnt[5]_i_1_n_0 ),
        .Q(\dly_gen.wait_cnt_reg_n_0_[5] ),
        .S(\dly_gen.wait_cnt[12]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \dly_gen.wait_cnt_reg[6] 
       (.C(in_delay_clk),
        .CE(wait_cnt),
        .D(\dly_gen.wait_cnt[6]_i_1_n_0 ),
        .Q(\dly_gen.wait_cnt_reg_n_0_[6] ),
        .S(\dly_gen.wait_cnt[12]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \dly_gen.wait_cnt_reg[7] 
       (.C(in_delay_clk),
        .CE(wait_cnt),
        .D(\dly_gen.wait_cnt[7]_i_1_n_0 ),
        .Q(\dly_gen.wait_cnt_reg_n_0_[7] ),
        .S(\dly_gen.wait_cnt[12]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \dly_gen.wait_cnt_reg[8] 
       (.C(in_delay_clk),
        .CE(wait_cnt),
        .D(\dly_gen.wait_cnt[8]_i_1_n_0 ),
        .Q(\dly_gen.wait_cnt_reg_n_0_[8] ),
        .S(\dly_gen.wait_cnt[12]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \dly_gen.wait_cnt_reg[9] 
       (.C(in_delay_clk),
        .CE(wait_cnt),
        .D(\dly_gen.wait_cnt[9]_i_1_n_0 ),
        .Q(\dly_gen.wait_cnt_reg_n_0_[9] ),
        .S(\dly_gen.wait_cnt[12]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    invers_clk_c_reg
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(invers_clk),
        .Q(invers_clk_c),
        .R(1'b0));
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    invers_clk_s_reg
       (.C(in_delay_clk),
        .CE(1'b1),
        .D(invers_clk),
        .Q(invers_clk_s),
        .R(1'b0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 sm_state0_carry
       (.CI(1'b0),
        .CO({sm_state0_carry_n_0,NLW_sm_state0_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({sm_state0_carry_i_1_n_0,1'b0,sm_state0_carry_i_2_n_0,sm_state0_carry_i_3_n_0}),
        .O(NLW_sm_state0_carry_O_UNCONNECTED[3:0]),
        .S({sm_state0_carry_i_4_n_0,sm_state0_carry_i_5_n_0,sm_state0_carry_i_6_n_0,sm_state0_carry_i_7_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 sm_state0_carry__0
       (.CI(sm_state0_carry_n_0),
        .CO({sm_state0_carry__0_n_0,NLW_sm_state0_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({sm_state0_carry__0_i_1_n_0,sm_state0_carry__0_i_2_n_0,sm_state0_carry__0_i_3_n_0,sm_state0_carry__0_i_4_n_0}),
        .O(NLW_sm_state0_carry__0_O_UNCONNECTED[3:0]),
        .S({sm_state0_carry__0_i_5_n_0,sm_state0_carry__0_i_6_n_0,sm_state0_carry__0_i_7_n_0,sm_state0_carry__0_i_8_n_0}));
  LUT2 #(
    .INIT(4'hE)) 
    sm_state0_carry__0_i_1
       (.I0(err_rate[14]),
        .I1(err_rate[15]),
        .O(sm_state0_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    sm_state0_carry__0_i_2
       (.I0(err_rate[12]),
        .I1(err_rate[13]),
        .O(sm_state0_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    sm_state0_carry__0_i_3
       (.I0(err_rate[10]),
        .I1(err_rate[11]),
        .O(sm_state0_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    sm_state0_carry__0_i_4
       (.I0(err_rate[8]),
        .I1(err_rate[9]),
        .O(sm_state0_carry__0_i_4_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sm_state0_carry__0_i_5
       (.I0(err_rate[14]),
        .I1(err_rate[15]),
        .O(sm_state0_carry__0_i_5_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sm_state0_carry__0_i_6
       (.I0(err_rate[12]),
        .I1(err_rate[13]),
        .O(sm_state0_carry__0_i_6_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sm_state0_carry__0_i_7
       (.I0(err_rate[10]),
        .I1(err_rate[11]),
        .O(sm_state0_carry__0_i_7_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sm_state0_carry__0_i_8
       (.I0(err_rate[8]),
        .I1(err_rate[9]),
        .O(sm_state0_carry__0_i_8_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 sm_state0_carry__1
       (.CI(sm_state0_carry__0_n_0),
        .CO({NLW_sm_state0_carry__1_CO_UNCONNECTED[3:2],sm_state0_carry__1_n_2,NLW_sm_state0_carry__1_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,sm_state0_carry__1_i_1_n_0,sm_state0_carry__1_i_2_n_0}),
        .O(NLW_sm_state0_carry__1_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,sm_state0_carry__1_i_3_n_0,sm_state0_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'hE)) 
    sm_state0_carry__1_i_1
       (.I0(err_rate[18]),
        .I1(err_rate[19]),
        .O(sm_state0_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    sm_state0_carry__1_i_2
       (.I0(err_rate[16]),
        .I1(err_rate[17]),
        .O(sm_state0_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sm_state0_carry__1_i_3
       (.I0(err_rate[18]),
        .I1(err_rate[19]),
        .O(sm_state0_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sm_state0_carry__1_i_4
       (.I0(err_rate[16]),
        .I1(err_rate[17]),
        .O(sm_state0_carry__1_i_4_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    sm_state0_carry_i_1
       (.I0(err_rate[6]),
        .I1(err_rate[7]),
        .O(sm_state0_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    sm_state0_carry_i_2
       (.I0(err_rate[2]),
        .I1(err_rate[3]),
        .O(sm_state0_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    sm_state0_carry_i_3
       (.I0(err_rate[0]),
        .I1(err_rate[1]),
        .O(sm_state0_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sm_state0_carry_i_4
       (.I0(err_rate[6]),
        .I1(err_rate[7]),
        .O(sm_state0_carry_i_4_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    sm_state0_carry_i_5
       (.I0(err_rate[4]),
        .I1(err_rate[5]),
        .O(sm_state0_carry_i_5_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sm_state0_carry_i_6
       (.I0(err_rate[2]),
        .I1(err_rate[3]),
        .O(sm_state0_carry_i_6_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    sm_state0_carry_i_7
       (.I0(err_rate[1]),
        .I1(err_rate[0]),
        .O(sm_state0_carry_i_7_n_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG usr_BUFG_inst
       (.I(pclk),
        .O(CLK));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 wait_cnt0_carry
       (.CI(1'b0),
        .CO({wait_cnt0_carry_n_0,NLW_wait_cnt0_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(\dly_gen.wait_cnt_reg_n_0_[0] ),
        .DI({\dly_gen.wait_cnt_reg_n_0_[4] ,\dly_gen.wait_cnt_reg_n_0_[3] ,\dly_gen.wait_cnt_reg_n_0_[2] ,\dly_gen.wait_cnt_reg_n_0_[1] }),
        .O(in9[4:1]),
        .S({wait_cnt0_carry_i_1_n_0,wait_cnt0_carry_i_2_n_0,wait_cnt0_carry_i_3_n_0,wait_cnt0_carry_i_4_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 wait_cnt0_carry__0
       (.CI(wait_cnt0_carry_n_0),
        .CO({wait_cnt0_carry__0_n_0,NLW_wait_cnt0_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\dly_gen.wait_cnt_reg_n_0_[8] ,\dly_gen.wait_cnt_reg_n_0_[7] ,\dly_gen.wait_cnt_reg_n_0_[6] ,\dly_gen.wait_cnt_reg_n_0_[5] }),
        .O(in9[8:5]),
        .S({wait_cnt0_carry__0_i_1_n_0,wait_cnt0_carry__0_i_2_n_0,wait_cnt0_carry__0_i_3_n_0,wait_cnt0_carry__0_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    wait_cnt0_carry__0_i_1
       (.I0(\dly_gen.wait_cnt_reg_n_0_[8] ),
        .O(wait_cnt0_carry__0_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    wait_cnt0_carry__0_i_2
       (.I0(\dly_gen.wait_cnt_reg_n_0_[7] ),
        .O(wait_cnt0_carry__0_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    wait_cnt0_carry__0_i_3
       (.I0(\dly_gen.wait_cnt_reg_n_0_[6] ),
        .O(wait_cnt0_carry__0_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    wait_cnt0_carry__0_i_4
       (.I0(\dly_gen.wait_cnt_reg_n_0_[5] ),
        .O(wait_cnt0_carry__0_i_4_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 wait_cnt0_carry__1
       (.CI(wait_cnt0_carry__0_n_0),
        .CO(NLW_wait_cnt0_carry__1_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,\dly_gen.wait_cnt_reg_n_0_[11] ,\dly_gen.wait_cnt_reg_n_0_[10] ,\dly_gen.wait_cnt_reg_n_0_[9] }),
        .O(in9[12:9]),
        .S({wait_cnt0_carry__1_i_1_n_0,wait_cnt0_carry__1_i_2_n_0,wait_cnt0_carry__1_i_3_n_0,wait_cnt0_carry__1_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    wait_cnt0_carry__1_i_1
       (.I0(\dly_gen.wait_cnt_reg_n_0_[12] ),
        .O(wait_cnt0_carry__1_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    wait_cnt0_carry__1_i_2
       (.I0(\dly_gen.wait_cnt_reg_n_0_[11] ),
        .O(wait_cnt0_carry__1_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    wait_cnt0_carry__1_i_3
       (.I0(\dly_gen.wait_cnt_reg_n_0_[10] ),
        .O(wait_cnt0_carry__1_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    wait_cnt0_carry__1_i_4
       (.I0(\dly_gen.wait_cnt_reg_n_0_[9] ),
        .O(wait_cnt0_carry__1_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    wait_cnt0_carry_i_1
       (.I0(\dly_gen.wait_cnt_reg_n_0_[4] ),
        .O(wait_cnt0_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    wait_cnt0_carry_i_2
       (.I0(\dly_gen.wait_cnt_reg_n_0_[3] ),
        .O(wait_cnt0_carry_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    wait_cnt0_carry_i_3
       (.I0(\dly_gen.wait_cnt_reg_n_0_[2] ),
        .O(wait_cnt0_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    wait_cnt0_carry_i_4
       (.I0(\dly_gen.wait_cnt_reg_n_0_[1] ),
        .O(wait_cnt0_carry_i_4_n_0));
endmodule

(* CHECK_LICENSE_TYPE = "system_csi2dvp_0_0,csi2dvp,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* IP_DEFINITION_SOURCE = "module_ref" *) 
(* X_CORE_INFO = "csi2dvp,Vivado 2020.1" *) 
module system_csi2dvp_0_0
   (s_axis_aclk,
    s_axis_tlast,
    s_axis_tuser,
    s_axis_tvalid,
    s_axis_tdata,
    s_axis_tready,
    vid_clk,
    vid_hsync,
    vid_vsync,
    vid_active_video,
    vid_data,
    hdata,
    vdata);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 s_axis_aclk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axis_aclk, ASSOCIATED_BUSIF s_axis, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.000, CLK_DOMAIN system_csi2_d_phy_rx_0_1_rxbyteclkhs, INSERT_VIP 0" *) input s_axis_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis TLAST" *) input s_axis_tlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis TUSER" *) input s_axis_tuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis TVALID" *) input s_axis_tvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis TDATA" *) input [15:0]s_axis_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 s_axis TREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_axis, TDATA_NUM_BYTES 2, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 1, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 1, FREQ_HZ 100000000, PHASE 0.000, CLK_DOMAIN system_csi2_d_phy_rx_0_1_rxbyteclkhs, LAYERED_METADATA undef, INSERT_VIP 0" *) output s_axis_tready;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 vid_clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME vid_clk, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN /clk_wiz_1_clk_out1, INSERT_VIP 0" *) input vid_clk;
  output vid_hsync;
  output vid_vsync;
  output vid_active_video;
  output [7:0]vid_data;
  output [10:0]hdata;
  output [9:0]vdata;

  wire [10:0]hdata;
  wire s_axis_aclk;
  wire [15:0]s_axis_tdata;
  wire s_axis_tlast;
  wire s_axis_tuser;
  wire s_axis_tvalid;
  wire [9:0]vdata;
  wire vid_active_video;
  wire vid_clk;
  wire [7:0]vid_data;
  wire vid_vsync;
  wire NLW_inst_s_axis_tready_UNCONNECTED;
  wire NLW_inst_vid_hsync_UNCONNECTED;
  wire [0:0]NLW_inst_hdata_UNCONNECTED;

  (* HFP = "1390" *) 
  (* HMAX = "1650" *) 
  (* HSIZE = "1280" *) 
  (* HSP = "1430" *) 
  (* HSPP = "0" *) 
  (* VFP = "725" *) 
  (* VMAX = "750" *) 
  (* VSIZE = "720" *) 
  (* VSP = "730" *) 
  (* VSPP = "0" *) 
  (* WIDTH = "12" *) 
  system_csi2dvp_0_0_csi2dvp inst
       (.hdata({hdata[10:1],NLW_inst_hdata_UNCONNECTED[0]}),
        .s_axis_aclk(s_axis_aclk),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tlast(s_axis_tlast),
        .s_axis_tready(NLW_inst_s_axis_tready_UNCONNECTED),
        .s_axis_tuser(s_axis_tuser),
        .s_axis_tvalid(s_axis_tvalid),
        .vdata(vdata),
        .vid_active_video(vid_active_video),
        .vid_clk(vid_clk),
        .vid_data(vid_data),
        .vid_hsync(NLW_inst_vid_hsync_UNCONNECTED),
        .vid_vsync(vid_vsync));
endmodule

(* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_4,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "blk_mem_gen_0" *) 
(* X_CORE_INFO = "blk_mem_gen_v8_4_4,Vivado 2020.1" *) 
module system_csi2dvp_0_0_blk_mem_gen_0
   (clka,
    wea,
    addra,
    dina,
    clkb,
    addrb,
    doutb);
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clka;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [0:0]wea;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [9:0]addra;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [15:0]dina;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE OTHER, READ_LATENCY 1" *) input clkb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [10:0]addrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [7:0]doutb;

  wire [9:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [15:0]dina;
  wire [7:0]doutb;
  wire [0:0]wea;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_deepsleep_UNCONNECTED;
  wire NLW_U0_eccpipece_UNCONNECTED;
  wire NLW_U0_ena_UNCONNECTED;
  wire NLW_U0_enb_UNCONNECTED;
  wire NLW_U0_injectdbiterr_UNCONNECTED;
  wire NLW_U0_injectsbiterr_UNCONNECTED;
  wire NLW_U0_regcea_UNCONNECTED;
  wire NLW_U0_regceb_UNCONNECTED;
  wire NLW_U0_rsta_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_aclk_UNCONNECTED;
  wire NLW_U0_s_aresetn_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_arvalid_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_awvalid_UNCONNECTED;
  wire NLW_U0_s_axi_bready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectdbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectsbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rready_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wlast_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axi_wvalid_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_shutdown_UNCONNECTED;
  wire NLW_U0_sleep_UNCONNECTED;
  wire [7:0]NLW_U0_dinb_UNCONNECTED;
  wire [15:0]NLW_U0_douta_UNCONNECTED;
  wire [10:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awsize_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [10:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [15:0]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_web_UNCONNECTED;

  (* C_ADDRA_WIDTH = "10" *) 
  (* C_ADDRB_WIDTH = "11" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "9" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "1" *) 
  (* C_COUNT_36K_BRAM = "0" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "0" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.5052 mW" *) 
  (* C_FAMILY = "spartan7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "0" *) 
  (* C_HAS_ENB = "0" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "1" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "0" *) 
  (* C_HAS_RSTB = "0" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "1" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "800" *) 
  (* C_READ_DEPTH_B = "1600" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "16" *) 
  (* C_READ_WIDTH_B = "8" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "0" *) 
  (* C_USE_BYTE_WEA = "0" *) 
  (* C_USE_BYTE_WEB = "0" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "1" *) 
  (* C_WEB_WIDTH = "1" *) 
  (* C_WRITE_DEPTH_A = "800" *) 
  (* C_WRITE_DEPTH_B = "1600" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "16" *) 
  (* C_WRITE_WIDTH_B = "8" *) 
  (* C_XDEVICEFAMILY = "spartan7" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  system_csi2dvp_0_0_blk_mem_gen_v8_4_4 U0
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(NLW_U0_deepsleep_UNCONNECTED),
        .dina(dina),
        .dinb(NLW_U0_dinb_UNCONNECTED[7:0]),
        .douta(NLW_U0_douta_UNCONNECTED[15:0]),
        .doutb(doutb),
        .eccpipece(NLW_U0_eccpipece_UNCONNECTED),
        .ena(NLW_U0_ena_UNCONNECTED),
        .enb(NLW_U0_enb_UNCONNECTED),
        .injectdbiterr(NLW_U0_injectdbiterr_UNCONNECTED),
        .injectsbiterr(NLW_U0_injectsbiterr_UNCONNECTED),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[10:0]),
        .regcea(NLW_U0_regcea_UNCONNECTED),
        .regceb(NLW_U0_regceb_UNCONNECTED),
        .rsta(NLW_U0_rsta_UNCONNECTED),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(NLW_U0_rstb_UNCONNECTED),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(NLW_U0_s_aclk_UNCONNECTED),
        .s_aresetn(NLW_U0_s_aresetn_UNCONNECTED),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_U0_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arid(NLW_U0_s_axi_arid_UNCONNECTED[3:0]),
        .s_axi_arlen(NLW_U0_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize(NLW_U0_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_arvalid(NLW_U0_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_U0_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awid(NLW_U0_s_axi_awid_UNCONNECTED[3:0]),
        .s_axi_awlen(NLW_U0_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize(NLW_U0_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awvalid(NLW_U0_s_axi_awvalid_UNCONNECTED),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(NLW_U0_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(NLW_U0_s_axi_injectdbiterr_UNCONNECTED),
        .s_axi_injectsbiterr(NLW_U0_s_axi_injectsbiterr_UNCONNECTED),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[10:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[7:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(NLW_U0_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(NLW_U0_s_axi_wdata_UNCONNECTED[15:0]),
        .s_axi_wlast(NLW_U0_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[0]),
        .s_axi_wvalid(NLW_U0_s_axi_wvalid_UNCONNECTED),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(NLW_U0_shutdown_UNCONNECTED),
        .sleep(NLW_U0_sleep_UNCONNECTED),
        .wea(wea),
        .web(NLW_U0_web_UNCONNECTED[0]));
endmodule

(* HFP = "1390" *) (* HMAX = "1650" *) (* HSIZE = "1280" *) 
(* HSP = "1430" *) (* HSPP = "0" *) (* ORIG_REF_NAME = "csi2dvp" *) 
(* VFP = "725" *) (* VMAX = "750" *) (* VSIZE = "720" *) 
(* VSP = "730" *) (* VSPP = "0" *) (* WIDTH = "12" *) 
module system_csi2dvp_0_0_csi2dvp
   (s_axis_aclk,
    s_axis_tlast,
    s_axis_tuser,
    s_axis_tvalid,
    s_axis_tdata,
    s_axis_tready,
    vid_clk,
    vid_hsync,
    vid_vsync,
    vid_active_video,
    vid_data,
    hdata,
    vdata);
  input s_axis_aclk;
  input s_axis_tlast;
  input s_axis_tuser;
  input s_axis_tvalid;
  input [15:0]s_axis_tdata;
  output s_axis_tready;
  input vid_clk;
  output vid_hsync;
  output vid_vsync;
  output vid_active_video;
  output [7:0]vid_data;
  output [10:0]hdata;
  output [9:0]vdata;

  wire \addra_r[9]_i_2_n_0 ;
  wire [9:0]addra_r_reg;
  wire [10:0]addrb;
  wire [10:0]addrb_r;
  wire \addrb_r[3]_i_2_n_0 ;
  wire \addrb_r[3]_i_3_n_0 ;
  wire \addrb_r_reg[3]_i_1_n_0 ;
  wire \addrb_r_reg[7]_i_1_n_0 ;
  wire frame_start;
  wire frame_start_i_1_n_0;
  wire frame_start_pos;
  wire frame_start_pos0;
  wire frame_start_r1;
  wire frame_start_r2;
  wire [10:0]\^hdata ;
  wire \hdata[0]_i_1_n_0 ;
  wire \hdata[10]_i_1_n_0 ;
  wire \hdata[10]_i_2_n_0 ;
  wire \hdata[10]_i_3_n_0 ;
  wire \hdata[10]_i_4_n_0 ;
  wire \hdata[1]_i_1_n_0 ;
  wire \hdata[2]_i_1_n_0 ;
  wire \hdata[3]_i_1_n_0 ;
  wire \hdata[4]_i_1_n_0 ;
  wire \hdata[5]_i_1_n_0 ;
  wire \hdata[6]_i_1_n_0 ;
  wire \hdata[6]_i_2_n_0 ;
  wire \hdata[7]_i_1_n_0 ;
  wire \hdata[8]_i_1_n_0 ;
  wire \hdata[9]_i_1_n_0 ;
  wire \hdata[9]_i_2_n_0 ;
  wire [9:0]p_0_in;
  wire s_axis_aclk;
  wire [15:0]s_axis_tdata;
  wire s_axis_tlast;
  wire s_axis_tuser;
  wire s_axis_tvalid;
  wire unpack_cnt;
  wire \unpack_cnt[0]_i_1_n_0 ;
  wire \unpack_cnt[1]_i_1_n_0 ;
  wire \unpack_cnt[2]_i_1_n_0 ;
  wire \unpack_cnt[3]_i_2_n_0 ;
  wire \unpack_cnt[3]_i_3_n_0 ;
  wire \unpack_cnt_reg_n_0_[0] ;
  wire \unpack_cnt_reg_n_0_[1] ;
  wire \unpack_cnt_reg_n_0_[2] ;
  wire \unpack_cnt_reg_n_0_[3] ;
  wire valid_neg;
  wire valid_neg0;
  wire valid_r1;
  wire valid_r2;
  wire [9:0]vdata;
  wire \vdata[0]_i_1_n_0 ;
  wire \vdata[1]_i_1_n_0 ;
  wire \vdata[2]_i_1_n_0 ;
  wire \vdata[3]_i_1_n_0 ;
  wire \vdata[3]_i_2_n_0 ;
  wire \vdata[4]_i_1_n_0 ;
  wire \vdata[5]_i_1_n_0 ;
  wire \vdata[5]_i_2_n_0 ;
  wire \vdata[6]_i_1_n_0 ;
  wire \vdata[6]_i_2_n_0 ;
  wire \vdata[7]_i_1_n_0 ;
  wire \vdata[8]_i_1_n_0 ;
  wire \vdata[9]_i_1_n_0 ;
  wire \vdata[9]_i_2_n_0 ;
  wire \vdata[9]_i_3_n_0 ;
  wire \vdata[9]_i_4_n_0 ;
  wire \vdata[9]_i_5_n_0 ;
  wire \vdata[9]_i_6_n_0 ;
  wire vid_active_video;
  wire vid_active_video_INST_0_i_1_n_0;
  wire vid_clk;
  wire [7:0]vid_data;
  wire vid_vsync;
  wire vid_vsync_INST_0_i_1_n_0;
  wire vid_vsync_INST_0_i_2_n_0;
  wire [3:0]\NLW_addrb_r_reg[10]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_addrb_r_reg[10]_i_1_O_UNCONNECTED ;
  wire [2:0]\NLW_addrb_r_reg[3]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_addrb_r_reg[7]_i_1_CO_UNCONNECTED ;

  assign hdata[10:1] = \^hdata [10:1];
  LUT1 #(
    .INIT(2'h1)) 
    \addra_r[0]_i_1 
       (.I0(addra_r_reg[0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \addra_r[1]_i_1 
       (.I0(addra_r_reg[0]),
        .I1(addra_r_reg[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \addra_r[2]_i_1 
       (.I0(addra_r_reg[0]),
        .I1(addra_r_reg[1]),
        .I2(addra_r_reg[2]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \addra_r[3]_i_1 
       (.I0(addra_r_reg[1]),
        .I1(addra_r_reg[0]),
        .I2(addra_r_reg[2]),
        .I3(addra_r_reg[3]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \addra_r[4]_i_1 
       (.I0(addra_r_reg[2]),
        .I1(addra_r_reg[0]),
        .I2(addra_r_reg[1]),
        .I3(addra_r_reg[3]),
        .I4(addra_r_reg[4]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \addra_r[5]_i_1 
       (.I0(addra_r_reg[3]),
        .I1(addra_r_reg[1]),
        .I2(addra_r_reg[0]),
        .I3(addra_r_reg[2]),
        .I4(addra_r_reg[4]),
        .I5(addra_r_reg[5]),
        .O(p_0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \addra_r[6]_i_1 
       (.I0(\addra_r[9]_i_2_n_0 ),
        .I1(addra_r_reg[6]),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \addra_r[7]_i_1 
       (.I0(\addra_r[9]_i_2_n_0 ),
        .I1(addra_r_reg[6]),
        .I2(addra_r_reg[7]),
        .O(p_0_in[7]));
  (* \PinAttr:I3:HOLD_DETOUR  = "193" *) 
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \addra_r[8]_i_1 
       (.I0(addra_r_reg[6]),
        .I1(\addra_r[9]_i_2_n_0 ),
        .I2(addra_r_reg[7]),
        .I3(addra_r_reg[8]),
        .O(p_0_in[8]));
  (* \PinAttr:I3:HOLD_DETOUR  = "193" *) 
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \addra_r[9]_i_1 
       (.I0(addra_r_reg[7]),
        .I1(\addra_r[9]_i_2_n_0 ),
        .I2(addra_r_reg[6]),
        .I3(addra_r_reg[8]),
        .I4(addra_r_reg[9]),
        .O(p_0_in[9]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \addra_r[9]_i_2 
       (.I0(addra_r_reg[5]),
        .I1(addra_r_reg[3]),
        .I2(addra_r_reg[1]),
        .I3(addra_r_reg[0]),
        .I4(addra_r_reg[2]),
        .I5(addra_r_reg[4]),
        .O(\addra_r[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \addra_r_reg[0] 
       (.C(s_axis_aclk),
        .CE(s_axis_tvalid),
        .D(p_0_in[0]),
        .Q(addra_r_reg[0]),
        .R(valid_neg));
  FDRE #(
    .INIT(1'b0)) 
    \addra_r_reg[1] 
       (.C(s_axis_aclk),
        .CE(s_axis_tvalid),
        .D(p_0_in[1]),
        .Q(addra_r_reg[1]),
        .R(valid_neg));
  FDRE #(
    .INIT(1'b0)) 
    \addra_r_reg[2] 
       (.C(s_axis_aclk),
        .CE(s_axis_tvalid),
        .D(p_0_in[2]),
        .Q(addra_r_reg[2]),
        .R(valid_neg));
  FDRE #(
    .INIT(1'b0)) 
    \addra_r_reg[3] 
       (.C(s_axis_aclk),
        .CE(s_axis_tvalid),
        .D(p_0_in[3]),
        .Q(addra_r_reg[3]),
        .R(valid_neg));
  FDRE #(
    .INIT(1'b0)) 
    \addra_r_reg[4] 
       (.C(s_axis_aclk),
        .CE(s_axis_tvalid),
        .D(p_0_in[4]),
        .Q(addra_r_reg[4]),
        .R(valid_neg));
  FDRE #(
    .INIT(1'b0)) 
    \addra_r_reg[5] 
       (.C(s_axis_aclk),
        .CE(s_axis_tvalid),
        .D(p_0_in[5]),
        .Q(addra_r_reg[5]),
        .R(valid_neg));
  FDRE #(
    .INIT(1'b0)) 
    \addra_r_reg[6] 
       (.C(s_axis_aclk),
        .CE(s_axis_tvalid),
        .D(p_0_in[6]),
        .Q(addra_r_reg[6]),
        .R(valid_neg));
  FDRE #(
    .INIT(1'b0)) 
    \addra_r_reg[7] 
       (.C(s_axis_aclk),
        .CE(s_axis_tvalid),
        .D(p_0_in[7]),
        .Q(addra_r_reg[7]),
        .R(valid_neg));
  FDRE #(
    .INIT(1'b0)) 
    \addra_r_reg[8] 
       (.C(s_axis_aclk),
        .CE(s_axis_tvalid),
        .D(p_0_in[8]),
        .Q(addra_r_reg[8]),
        .R(valid_neg));
  FDRE #(
    .INIT(1'b0)) 
    \addra_r_reg[9] 
       (.C(s_axis_aclk),
        .CE(s_axis_tvalid),
        .D(p_0_in[9]),
        .Q(addra_r_reg[9]),
        .R(valid_neg));
  LUT5 #(
    .INIT(32'hAAAA9AAA)) 
    \addrb_r[3]_i_2 
       (.I0(addrb[1]),
        .I1(\unpack_cnt_reg_n_0_[2] ),
        .I2(\unpack_cnt_reg_n_0_[0] ),
        .I3(\unpack_cnt_reg_n_0_[1] ),
        .I4(\unpack_cnt_reg_n_0_[3] ),
        .O(\addrb_r[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h55556555)) 
    \addrb_r[3]_i_3 
       (.I0(addrb[0]),
        .I1(\unpack_cnt_reg_n_0_[2] ),
        .I2(\unpack_cnt_reg_n_0_[0] ),
        .I3(\unpack_cnt_reg_n_0_[1] ),
        .I4(\unpack_cnt_reg_n_0_[3] ),
        .O(\addrb_r[3]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \addrb_r_reg[0] 
       (.C(vid_clk),
        .CE(vid_active_video),
        .D(addrb_r[0]),
        .Q(addrb[0]),
        .R(unpack_cnt));
  FDRE #(
    .INIT(1'b0)) 
    \addrb_r_reg[10] 
       (.C(vid_clk),
        .CE(vid_active_video),
        .D(addrb_r[10]),
        .Q(addrb[10]),
        .R(unpack_cnt));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \addrb_r_reg[10]_i_1 
       (.CI(\addrb_r_reg[7]_i_1_n_0 ),
        .CO(\NLW_addrb_r_reg[10]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_addrb_r_reg[10]_i_1_O_UNCONNECTED [3],addrb_r[10:8]}),
        .S({1'b0,addrb[10:8]}));
  FDRE #(
    .INIT(1'b0)) 
    \addrb_r_reg[1] 
       (.C(vid_clk),
        .CE(vid_active_video),
        .D(addrb_r[1]),
        .Q(addrb[1]),
        .R(unpack_cnt));
  FDRE #(
    .INIT(1'b0)) 
    \addrb_r_reg[2] 
       (.C(vid_clk),
        .CE(vid_active_video),
        .D(addrb_r[2]),
        .Q(addrb[2]),
        .R(unpack_cnt));
  FDRE #(
    .INIT(1'b0)) 
    \addrb_r_reg[3] 
       (.C(vid_clk),
        .CE(vid_active_video),
        .D(addrb_r[3]),
        .Q(addrb[3]),
        .R(unpack_cnt));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \addrb_r_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\addrb_r_reg[3]_i_1_n_0 ,\NLW_addrb_r_reg[3]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,addrb[1:0]}),
        .O(addrb_r[3:0]),
        .S({addrb[3:2],\addrb_r[3]_i_2_n_0 ,\addrb_r[3]_i_3_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \addrb_r_reg[4] 
       (.C(vid_clk),
        .CE(vid_active_video),
        .D(addrb_r[4]),
        .Q(addrb[4]),
        .R(unpack_cnt));
  FDRE #(
    .INIT(1'b0)) 
    \addrb_r_reg[5] 
       (.C(vid_clk),
        .CE(vid_active_video),
        .D(addrb_r[5]),
        .Q(addrb[5]),
        .R(unpack_cnt));
  FDRE #(
    .INIT(1'b0)) 
    \addrb_r_reg[6] 
       (.C(vid_clk),
        .CE(vid_active_video),
        .D(addrb_r[6]),
        .Q(addrb[6]),
        .R(unpack_cnt));
  FDRE #(
    .INIT(1'b0)) 
    \addrb_r_reg[7] 
       (.C(vid_clk),
        .CE(vid_active_video),
        .D(addrb_r[7]),
        .Q(addrb[7]),
        .R(unpack_cnt));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \addrb_r_reg[7]_i_1 
       (.CI(\addrb_r_reg[3]_i_1_n_0 ),
        .CO({\addrb_r_reg[7]_i_1_n_0 ,\NLW_addrb_r_reg[7]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(addrb_r[7:4]),
        .S(addrb[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \addrb_r_reg[8] 
       (.C(vid_clk),
        .CE(vid_active_video),
        .D(addrb_r[8]),
        .Q(addrb[8]),
        .R(unpack_cnt));
  FDRE #(
    .INIT(1'b0)) 
    \addrb_r_reg[9] 
       (.C(vid_clk),
        .CE(vid_active_video),
        .D(addrb_r[9]),
        .Q(addrb[9]),
        .R(unpack_cnt));
  (* CHECK_LICENSE_TYPE = "blk_mem_gen_0,blk_mem_gen_v8_4_4,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "blk_mem_gen_v8_4_4,Vivado 2020.1" *) 
  system_csi2dvp_0_0_blk_mem_gen_0 bram0
       (.addra(addra_r_reg),
        .addrb(addrb),
        .clka(s_axis_aclk),
        .clkb(vid_clk),
        .dina(s_axis_tdata),
        .doutb(vid_data),
        .wea(s_axis_tvalid));
  LUT3 #(
    .INIT(8'hF4)) 
    frame_start_i_1
       (.I0(s_axis_tlast),
        .I1(frame_start),
        .I2(s_axis_tuser),
        .O(frame_start_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    frame_start_pos_i_1
       (.I0(frame_start_r1),
        .I1(frame_start_r2),
        .O(frame_start_pos0));
  FDRE #(
    .INIT(1'b0)) 
    frame_start_pos_reg
       (.C(vid_clk),
        .CE(1'b1),
        .D(frame_start_pos0),
        .Q(frame_start_pos),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    frame_start_r1_reg
       (.C(vid_clk),
        .CE(1'b1),
        .D(frame_start),
        .Q(frame_start_r1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    frame_start_r2_reg
       (.C(vid_clk),
        .CE(1'b1),
        .D(frame_start_r1),
        .Q(frame_start_r2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    frame_start_reg
       (.C(s_axis_aclk),
        .CE(1'b1),
        .D(frame_start_i_1_n_0),
        .Q(frame_start),
        .R(1'b0));
  (* \PinAttr:I0:HOLD_DETOUR  = "189" *) 
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \hdata[0]_i_1 
       (.I0(\^hdata [0]),
        .O(\hdata[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFCAFA00003000)) 
    \hdata[10]_i_1 
       (.I0(\hdata[10]_i_2_n_0 ),
        .I1(\hdata[10]_i_3_n_0 ),
        .I2(\^hdata [8]),
        .I3(\^hdata [7]),
        .I4(\hdata[10]_i_4_n_0 ),
        .I5(\^hdata [10]),
        .O(\hdata[10]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    \hdata[10]_i_2 
       (.I0(\^hdata [10]),
        .I1(\^hdata [3]),
        .I2(\^hdata [7]),
        .I3(\^hdata [1]),
        .I4(\^hdata [2]),
        .O(\hdata[10]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h7F)) 
    \hdata[10]_i_3 
       (.I0(\^hdata [3]),
        .I1(\^hdata [1]),
        .I2(\^hdata [2]),
        .O(\hdata[10]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \hdata[10]_i_4 
       (.I0(\^hdata [5]),
        .I1(\^hdata [6]),
        .I2(\^hdata [4]),
        .I3(\^hdata [0]),
        .I4(\^hdata [9]),
        .O(\hdata[10]_i_4_n_0 ));
  (* \PinAttr:I4:HOLD_DETOUR  = "189" *) 
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'h00FEFE00)) 
    \hdata[1]_i_1 
       (.I0(\^hdata [8]),
        .I1(\hdata[10]_i_4_n_0 ),
        .I2(\hdata[10]_i_2_n_0 ),
        .I3(\^hdata [1]),
        .I4(\^hdata [0]),
        .O(\hdata[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \hdata[2]_i_1 
       (.I0(\^hdata [0]),
        .I1(\^hdata [1]),
        .I2(\^hdata [2]),
        .O(\hdata[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \hdata[3]_i_1 
       (.I0(\^hdata [3]),
        .I1(\^hdata [0]),
        .I2(\^hdata [1]),
        .I3(\^hdata [2]),
        .O(\hdata[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFE00FEFE00FE0000)) 
    \hdata[4]_i_1 
       (.I0(\^hdata [8]),
        .I1(\hdata[10]_i_4_n_0 ),
        .I2(\hdata[10]_i_2_n_0 ),
        .I3(\hdata[10]_i_3_n_0 ),
        .I4(\^hdata [0]),
        .I5(\^hdata [4]),
        .O(\hdata[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00FEFE00)) 
    \hdata[5]_i_1 
       (.I0(\^hdata [8]),
        .I1(\hdata[10]_i_4_n_0 ),
        .I2(\hdata[10]_i_2_n_0 ),
        .I3(\hdata[6]_i_2_n_0 ),
        .I4(\^hdata [5]),
        .O(\hdata[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00FEFEFEFE000000)) 
    \hdata[6]_i_1 
       (.I0(\^hdata [8]),
        .I1(\hdata[10]_i_2_n_0 ),
        .I2(\hdata[10]_i_4_n_0 ),
        .I3(\hdata[6]_i_2_n_0 ),
        .I4(\^hdata [5]),
        .I5(\^hdata [6]),
        .O(\hdata[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \hdata[6]_i_2 
       (.I0(\^hdata [0]),
        .I1(\^hdata [4]),
        .I2(\^hdata [2]),
        .I3(\^hdata [1]),
        .I4(\^hdata [3]),
        .O(\hdata[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9AAAAAAAAAAAAAAA)) 
    \hdata[7]_i_1 
       (.I0(\^hdata [7]),
        .I1(\hdata[10]_i_3_n_0 ),
        .I2(\^hdata [0]),
        .I3(\^hdata [4]),
        .I4(\^hdata [6]),
        .I5(\^hdata [5]),
        .O(\hdata[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h9AAAAAAAAAAAAAAA)) 
    \hdata[8]_i_1 
       (.I0(\^hdata [8]),
        .I1(\hdata[9]_i_2_n_0 ),
        .I2(\^hdata [2]),
        .I3(\^hdata [1]),
        .I4(\^hdata [3]),
        .I5(\^hdata [7]),
        .O(\hdata[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFA3A000000C0)) 
    \hdata[9]_i_1 
       (.I0(\hdata[10]_i_2_n_0 ),
        .I1(\^hdata [7]),
        .I2(\^hdata [8]),
        .I3(\hdata[10]_i_3_n_0 ),
        .I4(\hdata[9]_i_2_n_0 ),
        .I5(\^hdata [9]),
        .O(\hdata[9]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \hdata[9]_i_2 
       (.I0(\^hdata [0]),
        .I1(\^hdata [4]),
        .I2(\^hdata [6]),
        .I3(\^hdata [5]),
        .O(\hdata[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \hdata_reg[0] 
       (.C(vid_clk),
        .CE(1'b1),
        .D(\hdata[0]_i_1_n_0 ),
        .Q(\^hdata [0]),
        .R(frame_start_pos));
  FDRE #(
    .INIT(1'b0)) 
    \hdata_reg[10] 
       (.C(vid_clk),
        .CE(1'b1),
        .D(\hdata[10]_i_1_n_0 ),
        .Q(\^hdata [10]),
        .R(frame_start_pos));
  FDRE #(
    .INIT(1'b0)) 
    \hdata_reg[1] 
       (.C(vid_clk),
        .CE(1'b1),
        .D(\hdata[1]_i_1_n_0 ),
        .Q(\^hdata [1]),
        .R(frame_start_pos));
  FDRE #(
    .INIT(1'b0)) 
    \hdata_reg[2] 
       (.C(vid_clk),
        .CE(1'b1),
        .D(\hdata[2]_i_1_n_0 ),
        .Q(\^hdata [2]),
        .R(frame_start_pos));
  FDRE #(
    .INIT(1'b0)) 
    \hdata_reg[3] 
       (.C(vid_clk),
        .CE(1'b1),
        .D(\hdata[3]_i_1_n_0 ),
        .Q(\^hdata [3]),
        .R(frame_start_pos));
  FDRE #(
    .INIT(1'b0)) 
    \hdata_reg[4] 
       (.C(vid_clk),
        .CE(1'b1),
        .D(\hdata[4]_i_1_n_0 ),
        .Q(\^hdata [4]),
        .R(frame_start_pos));
  FDRE #(
    .INIT(1'b0)) 
    \hdata_reg[5] 
       (.C(vid_clk),
        .CE(1'b1),
        .D(\hdata[5]_i_1_n_0 ),
        .Q(\^hdata [5]),
        .R(frame_start_pos));
  FDRE #(
    .INIT(1'b0)) 
    \hdata_reg[6] 
       (.C(vid_clk),
        .CE(1'b1),
        .D(\hdata[6]_i_1_n_0 ),
        .Q(\^hdata [6]),
        .R(frame_start_pos));
  FDRE #(
    .INIT(1'b0)) 
    \hdata_reg[7] 
       (.C(vid_clk),
        .CE(1'b1),
        .D(\hdata[7]_i_1_n_0 ),
        .Q(\^hdata [7]),
        .R(frame_start_pos));
  FDRE #(
    .INIT(1'b0)) 
    \hdata_reg[8] 
       (.C(vid_clk),
        .CE(1'b1),
        .D(\hdata[8]_i_1_n_0 ),
        .Q(\^hdata [8]),
        .R(frame_start_pos));
  FDRE #(
    .INIT(1'b0)) 
    \hdata_reg[9] 
       (.C(vid_clk),
        .CE(1'b1),
        .D(\hdata[9]_i_1_n_0 ),
        .Q(\^hdata [9]),
        .R(frame_start_pos));
  (* \PinAttr:I0:HOLD_DETOUR  = "193" *) 
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \unpack_cnt[0]_i_1 
       (.I0(\unpack_cnt_reg_n_0_[0] ),
        .O(\unpack_cnt[0]_i_1_n_0 ));
  (* \PinAttr:I1:HOLD_DETOUR  = "193" *) 
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \unpack_cnt[1]_i_1 
       (.I0(\unpack_cnt_reg_n_0_[1] ),
        .I1(\unpack_cnt_reg_n_0_[0] ),
        .O(\unpack_cnt[1]_i_1_n_0 ));
  (* \PinAttr:I2:HOLD_DETOUR  = "194" *) 
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'h3F80)) 
    \unpack_cnt[2]_i_1 
       (.I0(\unpack_cnt_reg_n_0_[3] ),
        .I1(\unpack_cnt_reg_n_0_[1] ),
        .I2(\unpack_cnt_reg_n_0_[0] ),
        .I3(\unpack_cnt_reg_n_0_[2] ),
        .O(\unpack_cnt[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \unpack_cnt[3]_i_1 
       (.I0(\unpack_cnt[3]_i_3_n_0 ),
        .I1(\^hdata [0]),
        .I2(\^hdata [4]),
        .I3(\^hdata [5]),
        .I4(\^hdata [6]),
        .I5(\hdata[10]_i_2_n_0 ),
        .O(unpack_cnt));
  (* \PinAttr:I2:HOLD_DETOUR  = "194" *) 
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \unpack_cnt[3]_i_2 
       (.I0(\unpack_cnt_reg_n_0_[3] ),
        .I1(\unpack_cnt_reg_n_0_[1] ),
        .I2(\unpack_cnt_reg_n_0_[0] ),
        .I3(\unpack_cnt_reg_n_0_[2] ),
        .O(\unpack_cnt[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \unpack_cnt[3]_i_3 
       (.I0(\^hdata [9]),
        .I1(\^hdata [8]),
        .O(\unpack_cnt[3]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \unpack_cnt_reg[0] 
       (.C(vid_clk),
        .CE(vid_active_video),
        .D(\unpack_cnt[0]_i_1_n_0 ),
        .Q(\unpack_cnt_reg_n_0_[0] ),
        .R(unpack_cnt));
  FDRE #(
    .INIT(1'b0)) 
    \unpack_cnt_reg[1] 
       (.C(vid_clk),
        .CE(vid_active_video),
        .D(\unpack_cnt[1]_i_1_n_0 ),
        .Q(\unpack_cnt_reg_n_0_[1] ),
        .R(unpack_cnt));
  FDRE #(
    .INIT(1'b0)) 
    \unpack_cnt_reg[2] 
       (.C(vid_clk),
        .CE(vid_active_video),
        .D(\unpack_cnt[2]_i_1_n_0 ),
        .Q(\unpack_cnt_reg_n_0_[2] ),
        .R(unpack_cnt));
  FDRE #(
    .INIT(1'b0)) 
    \unpack_cnt_reg[3] 
       (.C(vid_clk),
        .CE(vid_active_video),
        .D(\unpack_cnt[3]_i_2_n_0 ),
        .Q(\unpack_cnt_reg_n_0_[3] ),
        .R(unpack_cnt));
  LUT2 #(
    .INIT(4'h2)) 
    valid_neg_i_1
       (.I0(valid_r2),
        .I1(valid_r1),
        .O(valid_neg0));
  FDRE #(
    .INIT(1'b0)) 
    valid_neg_reg
       (.C(s_axis_aclk),
        .CE(1'b1),
        .D(valid_neg0),
        .Q(valid_neg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    valid_r1_reg
       (.C(s_axis_aclk),
        .CE(1'b1),
        .D(s_axis_tvalid),
        .Q(valid_r1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    valid_r2_reg
       (.C(s_axis_aclk),
        .CE(1'b1),
        .D(valid_r1),
        .Q(valid_r2),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \vdata[0]_i_1 
       (.I0(vdata[0]),
        .O(\vdata[0]_i_1_n_0 ));
  (* \PinAttr:I0:HOLD_DETOUR  = "207" *) 
  LUT6 #(
    .INIT(64'h0000FFEFFFFF0000)) 
    \vdata[1]_i_1 
       (.I0(vdata[4]),
        .I1(vdata[8]),
        .I2(vdata[9]),
        .I3(\vdata[9]_i_4_n_0 ),
        .I4(vdata[1]),
        .I5(vdata[0]),
        .O(\vdata[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00FFFBFBFF000000)) 
    \vdata[2]_i_1 
       (.I0(\vdata[6]_i_2_n_0 ),
        .I1(vdata[9]),
        .I2(\vdata[9]_i_4_n_0 ),
        .I3(vdata[0]),
        .I4(vdata[1]),
        .I5(vdata[2]),
        .O(\vdata[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFFFFEF)) 
    \vdata[3]_i_1 
       (.I0(vdata[4]),
        .I1(vdata[8]),
        .I2(vdata[9]),
        .I3(vdata[1]),
        .I4(\vdata[9]_i_4_n_0 ),
        .I5(\vdata[3]_i_2_n_0 ),
        .O(\vdata[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h9555)) 
    \vdata[3]_i_2 
       (.I0(vdata[3]),
        .I1(vdata[2]),
        .I2(vdata[0]),
        .I3(vdata[1]),
        .O(\vdata[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \vdata[4]_i_1 
       (.I0(vdata[4]),
        .I1(vdata[0]),
        .I2(vdata[1]),
        .I3(vdata[3]),
        .I4(vdata[2]),
        .O(\vdata[4]_i_1_n_0 ));
  (* \PinAttr:I3:HOLD_DETOUR  = "199" *) 
  LUT6 #(
    .INIT(64'h00000000FFFFFFEF)) 
    \vdata[5]_i_1 
       (.I0(vdata[4]),
        .I1(vdata[8]),
        .I2(vdata[9]),
        .I3(vdata[1]),
        .I4(\vdata[9]_i_4_n_0 ),
        .I5(\vdata[5]_i_2_n_0 ),
        .O(\vdata[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h9555555555555555)) 
    \vdata[5]_i_2 
       (.I0(vdata[5]),
        .I1(vdata[2]),
        .I2(vdata[3]),
        .I3(vdata[1]),
        .I4(vdata[0]),
        .I5(vdata[4]),
        .O(\vdata[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000FFFBFFFB0000)) 
    \vdata[6]_i_1 
       (.I0(\vdata[6]_i_2_n_0 ),
        .I1(vdata[9]),
        .I2(vdata[1]),
        .I3(\vdata[9]_i_4_n_0 ),
        .I4(\vdata[9]_i_5_n_0 ),
        .I5(vdata[6]),
        .O(\vdata[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \vdata[6]_i_2 
       (.I0(vdata[8]),
        .I1(vdata[4]),
        .O(\vdata[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0EEEE000)) 
    \vdata[7]_i_1 
       (.I0(\vdata[9]_i_3_n_0 ),
        .I1(\vdata[9]_i_4_n_0 ),
        .I2(\vdata[9]_i_5_n_0 ),
        .I3(vdata[6]),
        .I4(vdata[7]),
        .O(\vdata[7]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h9AAA)) 
    \vdata[8]_i_1 
       (.I0(vdata[8]),
        .I1(\vdata[9]_i_4_n_0 ),
        .I2(vdata[4]),
        .I3(vdata[1]),
        .O(\vdata[8]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \vdata[9]_i_1 
       (.I0(\^hdata [8]),
        .I1(\hdata[10]_i_4_n_0 ),
        .I2(\hdata[10]_i_2_n_0 ),
        .O(\vdata[9]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEEEE0EEE0000E000)) 
    \vdata[9]_i_2 
       (.I0(\vdata[9]_i_3_n_0 ),
        .I1(\vdata[9]_i_4_n_0 ),
        .I2(\vdata[9]_i_5_n_0 ),
        .I3(vdata[8]),
        .I4(\vdata[9]_i_6_n_0 ),
        .I5(vdata[9]),
        .O(\vdata[9]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \vdata[9]_i_3 
       (.I0(vdata[4]),
        .I1(vdata[8]),
        .I2(vdata[9]),
        .I3(vdata[1]),
        .O(\vdata[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \vdata[9]_i_4 
       (.I0(vdata[6]),
        .I1(vdata[7]),
        .I2(vdata[2]),
        .I3(vdata[3]),
        .I4(vdata[0]),
        .I5(vdata[5]),
        .O(\vdata[9]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \vdata[9]_i_5 
       (.I0(vdata[5]),
        .I1(vdata[2]),
        .I2(vdata[3]),
        .I3(vdata[1]),
        .I4(vdata[0]),
        .I5(vdata[4]),
        .O(\vdata[9]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \vdata[9]_i_6 
       (.I0(vdata[7]),
        .I1(vdata[6]),
        .O(\vdata[9]_i_6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \vdata_reg[0] 
       (.C(vid_clk),
        .CE(\vdata[9]_i_1_n_0 ),
        .D(\vdata[0]_i_1_n_0 ),
        .Q(vdata[0]),
        .R(frame_start_pos));
  FDRE #(
    .INIT(1'b0)) 
    \vdata_reg[1] 
       (.C(vid_clk),
        .CE(\vdata[9]_i_1_n_0 ),
        .D(\vdata[1]_i_1_n_0 ),
        .Q(vdata[1]),
        .R(frame_start_pos));
  FDRE #(
    .INIT(1'b0)) 
    \vdata_reg[2] 
       (.C(vid_clk),
        .CE(\vdata[9]_i_1_n_0 ),
        .D(\vdata[2]_i_1_n_0 ),
        .Q(vdata[2]),
        .R(frame_start_pos));
  FDRE #(
    .INIT(1'b0)) 
    \vdata_reg[3] 
       (.C(vid_clk),
        .CE(\vdata[9]_i_1_n_0 ),
        .D(\vdata[3]_i_1_n_0 ),
        .Q(vdata[3]),
        .R(frame_start_pos));
  FDRE #(
    .INIT(1'b0)) 
    \vdata_reg[4] 
       (.C(vid_clk),
        .CE(\vdata[9]_i_1_n_0 ),
        .D(\vdata[4]_i_1_n_0 ),
        .Q(vdata[4]),
        .R(frame_start_pos));
  FDRE #(
    .INIT(1'b0)) 
    \vdata_reg[5] 
       (.C(vid_clk),
        .CE(\vdata[9]_i_1_n_0 ),
        .D(\vdata[5]_i_1_n_0 ),
        .Q(vdata[5]),
        .R(frame_start_pos));
  FDRE #(
    .INIT(1'b0)) 
    \vdata_reg[6] 
       (.C(vid_clk),
        .CE(\vdata[9]_i_1_n_0 ),
        .D(\vdata[6]_i_1_n_0 ),
        .Q(vdata[6]),
        .R(frame_start_pos));
  FDRE #(
    .INIT(1'b0)) 
    \vdata_reg[7] 
       (.C(vid_clk),
        .CE(\vdata[9]_i_1_n_0 ),
        .D(\vdata[7]_i_1_n_0 ),
        .Q(vdata[7]),
        .R(frame_start_pos));
  FDRE #(
    .INIT(1'b0)) 
    \vdata_reg[8] 
       (.C(vid_clk),
        .CE(\vdata[9]_i_1_n_0 ),
        .D(\vdata[8]_i_1_n_0 ),
        .Q(vdata[8]),
        .R(frame_start_pos));
  FDRE #(
    .INIT(1'b0)) 
    \vdata_reg[9] 
       (.C(vid_clk),
        .CE(\vdata[9]_i_1_n_0 ),
        .D(\vdata[9]_i_2_n_0 ),
        .Q(vdata[9]),
        .R(frame_start_pos));
  LUT4 #(
    .INIT(16'h0057)) 
    vid_active_video_INST_0
       (.I0(\^hdata [10]),
        .I1(\^hdata [9]),
        .I2(\^hdata [8]),
        .I3(vid_active_video_INST_0_i_1_n_0),
        .O(vid_active_video));
  LUT6 #(
    .INIT(64'hF0F0F0F0E0000000)) 
    vid_active_video_INST_0_i_1
       (.I0(vdata[4]),
        .I1(vdata[5]),
        .I2(vdata[9]),
        .I3(vdata[6]),
        .I4(vdata[7]),
        .I5(vdata[8]),
        .O(vid_active_video_INST_0_i_1_n_0));
  (* \PinAttr:I2:HOLD_DETOUR  = "222" *) 
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0D3D)) 
    vid_vsync_INST_0
       (.I0(vdata[3]),
        .I1(vdata[1]),
        .I2(vdata[2]),
        .I3(vdata[0]),
        .I4(vid_vsync_INST_0_i_1_n_0),
        .I5(vid_vsync_INST_0_i_2_n_0),
        .O(vid_vsync));
  LUT4 #(
    .INIT(16'hFF8F)) 
    vid_vsync_INST_0_i_1
       (.I0(vdata[2]),
        .I1(vdata[3]),
        .I2(vdata[4]),
        .I3(vdata[5]),
        .O(vid_vsync_INST_0_i_1_n_0));
  LUT4 #(
    .INIT(16'hFF7F)) 
    vid_vsync_INST_0_i_2
       (.I0(vdata[6]),
        .I1(vdata[7]),
        .I2(vdata[9]),
        .I3(vdata[8]),
        .O(vid_vsync_INST_0_i_2_n_0));
endmodule

(* CHECK_LICENSE_TYPE = "system_csi_to_axis_0_1,csi_to_axis_v1_0,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "csi_to_axis_v1_0,Vivado 2018.2" *) 
module system_csi_to_axis_0_1
   (enable_in,
    rxbyteclkhs,
    cl_enable,
    cl_stopstate,
    cl_rxclkactivehs,
    dl0_enable,
    dl0_rxactivehs,
    dl0_rxvalidhs,
    dl0_rxsynchs,
    dl0_datahs,
    dl1_enable,
    dl1_rxactivehs,
    dl1_rxvalidhs,
    dl1_rxsynchs,
    dl1_datahs,
    trig_req,
    trig_ack,
    m_axis_tdata,
    m_axis_tuser,
    m_axis_tlast,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_aclk,
    m_axis_aresetn);
  input enable_in;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 rxbyteclkhs CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME rxbyteclkhs, PHASE 0.000, CLK_DOMAIN system_csi2_d_phy_rx_0_1_rxbyteclkhs" *) input rxbyteclkhs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI CL_ENABLE" *) output cl_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI CL_STOPSTATE" *) input cl_stopstate;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI CL_RXCLKACTIVEHS" *) input cl_rxclkactivehs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL0_ENABLE" *) output dl0_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL0_RXACTIVEHS" *) input dl0_rxactivehs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL0_RXVALIDHS" *) input dl0_rxvalidhs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL0_RXSYNCHS" *) input dl0_rxsynchs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL0_RXDATAHS" *) input [7:0]dl0_datahs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL1_ENABLE" *) output dl1_enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL1_RXACTIVEHS" *) input dl1_rxactivehs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL1_RXVALIDHS" *) input dl1_rxvalidhs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL1_RXSYNCHS" *) input dl1_rxsynchs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:rx_mipi_ppi_if:1.0 RX_MIPI_PPI DL1_RXDATAHS" *) input [7:0]dl1_datahs;
  (* X_INTERFACE_INFO = "xilinx.com:interface:trigger:1.0 data_err TRIG" *) output trig_req;
  (* X_INTERFACE_INFO = "xilinx.com:interface:trigger:1.0 data_err ACK" *) input trig_ack;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 M_AXIS TDATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M_AXIS, WIZ_DATA_WIDTH 32, TDATA_NUM_BYTES 2, TDEST_WIDTH 0, TID_WIDTH 0, TUSER_WIDTH 1, HAS_TREADY 1, HAS_TSTRB 0, HAS_TKEEP 0, HAS_TLAST 1, FREQ_HZ 100000000, PHASE 0.000, CLK_DOMAIN system_csi2_d_phy_rx_0_1_rxbyteclkhs, LAYERED_METADATA undef" *) output [15:0]m_axis_tdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 M_AXIS TUSER" *) output m_axis_tuser;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 M_AXIS TLAST" *) output m_axis_tlast;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 M_AXIS TVALID" *) output m_axis_tvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:axis:1.0 M_AXIS TREADY" *) input m_axis_tready;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 m_axis_aclk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_axis_aclk, ASSOCIATED_BUSIF M_AXIS, ASSOCIATED_RESET m_axis_aresetn, FREQ_HZ 100000000, PHASE 0.000, CLK_DOMAIN system_csi2_d_phy_rx_0_1_rxbyteclkhs" *) input m_axis_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 m_axis_aresetn RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME m_axis_aresetn, POLARITY ACTIVE_LOW" *) input m_axis_aresetn;

  wire [7:0]dl0_datahs;
  wire dl0_rxvalidhs;
  wire [7:0]dl1_datahs;
  wire dl1_rxvalidhs;
  wire enable_in;
  wire [15:0]m_axis_tdata;
  wire m_axis_tlast;
  wire m_axis_tuser;
  wire m_axis_tvalid;
  wire rxbyteclkhs;
  wire trig_req;
  wire NLW_U0_cl_enable_UNCONNECTED;
  wire NLW_U0_cl_rxclkactivehs_UNCONNECTED;
  wire NLW_U0_cl_stopstate_UNCONNECTED;
  wire NLW_U0_dl0_enable_UNCONNECTED;
  wire NLW_U0_dl0_rxactivehs_UNCONNECTED;
  wire NLW_U0_dl0_rxsynchs_UNCONNECTED;
  wire NLW_U0_dl1_enable_UNCONNECTED;
  wire NLW_U0_dl1_rxactivehs_UNCONNECTED;
  wire NLW_U0_dl1_rxsynchs_UNCONNECTED;
  wire NLW_U0_dl2_enable_UNCONNECTED;
  wire NLW_U0_dl2_rxactivehs_UNCONNECTED;
  wire NLW_U0_dl2_rxsynchs_UNCONNECTED;
  wire NLW_U0_dl2_rxvalidhs_UNCONNECTED;
  wire NLW_U0_dl3_enable_UNCONNECTED;
  wire NLW_U0_dl3_rxactivehs_UNCONNECTED;
  wire NLW_U0_dl3_rxsynchs_UNCONNECTED;
  wire NLW_U0_dl3_rxvalidhs_UNCONNECTED;
  wire NLW_U0_m_axis_aclk_UNCONNECTED;
  wire NLW_U0_m_axis_aresetn_UNCONNECTED;
  wire NLW_U0_m_axis_tready_UNCONNECTED;
  wire NLW_U0_trig_ack_UNCONNECTED;
  wire [7:0]NLW_U0_dl2_datahs_UNCONNECTED;
  wire [7:0]NLW_U0_dl3_datahs_UNCONNECTED;

  (* C_LANES = "2" *) 
  (* C_M_AXIS_TDATA_WIDTH = "32" *) 
  (* C_TIMEOUT = "255" *) 
  system_csi_to_axis_0_1__csi_to_axis_v1_0 U0
       (.cl_enable(NLW_U0_cl_enable_UNCONNECTED),
        .cl_rxclkactivehs(NLW_U0_cl_rxclkactivehs_UNCONNECTED),
        .cl_stopstate(NLW_U0_cl_stopstate_UNCONNECTED),
        .dl0_datahs(dl0_datahs),
        .dl0_enable(NLW_U0_dl0_enable_UNCONNECTED),
        .dl0_rxactivehs(NLW_U0_dl0_rxactivehs_UNCONNECTED),
        .dl0_rxsynchs(NLW_U0_dl0_rxsynchs_UNCONNECTED),
        .dl0_rxvalidhs(dl0_rxvalidhs),
        .dl1_datahs(dl1_datahs),
        .dl1_enable(NLW_U0_dl1_enable_UNCONNECTED),
        .dl1_rxactivehs(NLW_U0_dl1_rxactivehs_UNCONNECTED),
        .dl1_rxsynchs(NLW_U0_dl1_rxsynchs_UNCONNECTED),
        .dl1_rxvalidhs(dl1_rxvalidhs),
        .dl2_datahs(NLW_U0_dl2_datahs_UNCONNECTED[7:0]),
        .dl2_enable(NLW_U0_dl2_enable_UNCONNECTED),
        .dl2_rxactivehs(NLW_U0_dl2_rxactivehs_UNCONNECTED),
        .dl2_rxsynchs(NLW_U0_dl2_rxsynchs_UNCONNECTED),
        .dl2_rxvalidhs(NLW_U0_dl2_rxvalidhs_UNCONNECTED),
        .dl3_datahs(NLW_U0_dl3_datahs_UNCONNECTED[7:0]),
        .dl3_enable(NLW_U0_dl3_enable_UNCONNECTED),
        .dl3_rxactivehs(NLW_U0_dl3_rxactivehs_UNCONNECTED),
        .dl3_rxsynchs(NLW_U0_dl3_rxsynchs_UNCONNECTED),
        .dl3_rxvalidhs(NLW_U0_dl3_rxvalidhs_UNCONNECTED),
        .enable_in(enable_in),
        .m_axis_aclk(NLW_U0_m_axis_aclk_UNCONNECTED),
        .m_axis_aresetn(NLW_U0_m_axis_aresetn_UNCONNECTED),
        .m_axis_tdata(m_axis_tdata),
        .m_axis_tlast(m_axis_tlast),
        .m_axis_tready(NLW_U0_m_axis_tready_UNCONNECTED),
        .m_axis_tuser(m_axis_tuser),
        .m_axis_tvalid(m_axis_tvalid),
        .rxbyteclkhs(rxbyteclkhs),
        .trig_ack(NLW_U0_trig_ack_UNCONNECTED),
        .trig_req(trig_req));
endmodule

(* ORIG_REF_NAME = "csi2_parser" *) 
module system_csi_to_axis_0_1__csi2_parser
   (m_axis_tvalid,
    m_axis_tuser,
    m_axis_tlast,
    sm_state,
    \FSM_sequential_sm_state_reg[1]_0 ,
    \FSM_sequential_sm_state_reg[0]_0 ,
    m_axis_tdata,
    enable_in,
    rxbyteclkhs,
    merge_valid,
    \FSM_sequential_sm_state_reg[1]_1 ,
    \FSM_sequential_sm_state_reg[2]_0 ,
    D);
  output m_axis_tvalid;
  output m_axis_tuser;
  output m_axis_tlast;
  output [2:0]sm_state;
  output \FSM_sequential_sm_state_reg[1]_0 ;
  output \FSM_sequential_sm_state_reg[0]_0 ;
  output [15:0]m_axis_tdata;
  input enable_in;
  input rxbyteclkhs;
  input merge_valid;
  input \FSM_sequential_sm_state_reg[1]_1 ;
  input \FSM_sequential_sm_state_reg[2]_0 ;
  input [15:0]D;

  wire [15:0]D;
  wire \FSM_sequential_sm_state[0]_i_1_n_0 ;
  wire \FSM_sequential_sm_state[0]_i_3_n_0 ;
  wire \FSM_sequential_sm_state[0]_i_4_n_0 ;
  wire \FSM_sequential_sm_state[1]_i_1_n_0 ;
  wire \FSM_sequential_sm_state[1]_i_3_n_0 ;
  wire \FSM_sequential_sm_state[1]_i_4_n_0 ;
  wire \FSM_sequential_sm_state[2]_i_1_n_0 ;
  wire \FSM_sequential_sm_state[2]_i_2_n_0 ;
  wire \FSM_sequential_sm_state_reg[0]_0 ;
  wire \FSM_sequential_sm_state_reg[1]_0 ;
  wire \FSM_sequential_sm_state_reg[1]_1 ;
  wire \FSM_sequential_sm_state_reg[2]_0 ;
  wire enable_i_1_n_0;
  wire enable_i_2_n_0;
  wire enable_in;
  wire enable_reg_n_0;
  wire enable_req;
  wire [15:0]in14;
  wire [15:0]m_axis_tdata;
  wire m_axis_tlast;
  wire m_axis_tlast0_carry__0_i_1_n_0;
  wire m_axis_tlast0_carry__0_i_2_n_0;
  wire m_axis_tlast0_carry__0_i_3_n_0;
  wire m_axis_tlast0_carry__0_i_4_n_0;
  wire m_axis_tlast0_carry__0_i_5_n_0;
  wire m_axis_tlast0_carry__0_i_6_n_0;
  wire m_axis_tlast0_carry__0_i_7_n_0;
  wire m_axis_tlast0_carry__0_i_8_n_0;
  wire m_axis_tlast0_carry__0_n_0;
  wire m_axis_tlast0_carry_i_1_n_0;
  wire m_axis_tlast0_carry_i_2_n_0;
  wire m_axis_tlast0_carry_i_3_n_0;
  wire m_axis_tlast0_carry_i_4_n_0;
  wire m_axis_tlast0_carry_i_5_n_0;
  wire m_axis_tlast0_carry_i_6_n_0;
  wire m_axis_tlast0_carry_i_7_n_0;
  wire m_axis_tlast0_carry_i_8_n_0;
  wire m_axis_tlast0_carry_n_0;
  wire m_axis_tlast_i_1_n_0;
  wire m_axis_tuser;
  wire m_axis_tuser_i_1_n_0;
  wire m_axis_tvalid;
  wire m_axis_tvalid_i_1_n_0;
  wire merge_valid;
  wire [15:0]minusOp;
  wire minusOp_carry__0_i_1_n_0;
  wire minusOp_carry__0_i_2_n_0;
  wire minusOp_carry__0_i_3_n_0;
  wire minusOp_carry__0_i_4_n_0;
  wire minusOp_carry__0_n_0;
  wire minusOp_carry__1_i_1_n_0;
  wire minusOp_carry__1_i_2_n_0;
  wire minusOp_carry__1_i_3_n_0;
  wire minusOp_carry__1_i_4_n_0;
  wire minusOp_carry__1_n_0;
  wire minusOp_carry__2_i_1_n_0;
  wire minusOp_carry__2_i_2_n_0;
  wire minusOp_carry__2_i_3_n_0;
  wire minusOp_carry__2_i_4_n_0;
  wire minusOp_carry_i_1_n_0;
  wire minusOp_carry_i_2_n_0;
  wire minusOp_carry_i_3_n_0;
  wire minusOp_carry_n_0;
  wire \packet_id_reg_n_0_[0] ;
  wire \packet_id_reg_n_0_[1] ;
  wire \packet_id_reg_n_0_[2] ;
  wire \packet_id_reg_n_0_[3] ;
  wire \packet_id_reg_n_0_[4] ;
  wire \packet_id_reg_n_0_[5] ;
  wire \packet_id_reg_n_0_[6] ;
  wire \packet_id_reg_n_0_[7] ;
  wire [7:7]packet_size;
  wire \packet_size[15]_i_1_n_0 ;
  wire \packet_size_reg_n_0_[0] ;
  wire \packet_size_reg_n_0_[10] ;
  wire \packet_size_reg_n_0_[11] ;
  wire \packet_size_reg_n_0_[12] ;
  wire \packet_size_reg_n_0_[13] ;
  wire \packet_size_reg_n_0_[14] ;
  wire \packet_size_reg_n_0_[15] ;
  wire \packet_size_reg_n_0_[1] ;
  wire \packet_size_reg_n_0_[2] ;
  wire \packet_size_reg_n_0_[3] ;
  wire \packet_size_reg_n_0_[4] ;
  wire \packet_size_reg_n_0_[5] ;
  wire \packet_size_reg_n_0_[6] ;
  wire \packet_size_reg_n_0_[7] ;
  wire \packet_size_reg_n_0_[8] ;
  wire \packet_size_reg_n_0_[9] ;
  wire plusOp_carry__0_n_0;
  wire plusOp_carry__1_n_0;
  wire plusOp_carry_i_1_n_0;
  wire plusOp_carry_n_0;
  wire rxbyteclkhs;
  wire [2:0]sm_state;
  wire [0:0]sm_state__0;
  wire start_of_frame;
  wire start_of_frame_i_1_n_0;
  wire \transfer_cnt[15]_i_1_n_0 ;
  wire \transfer_cnt[15]_i_2_n_0 ;
  wire \transfer_cnt[15]_i_3_n_0 ;
  wire \transfer_cnt[15]_i_4_n_0 ;
  wire \transfer_cnt_reg_n_0_[0] ;
  wire \transfer_cnt_reg_n_0_[10] ;
  wire \transfer_cnt_reg_n_0_[11] ;
  wire \transfer_cnt_reg_n_0_[12] ;
  wire \transfer_cnt_reg_n_0_[13] ;
  wire \transfer_cnt_reg_n_0_[14] ;
  wire \transfer_cnt_reg_n_0_[15] ;
  wire \transfer_cnt_reg_n_0_[1] ;
  wire \transfer_cnt_reg_n_0_[2] ;
  wire \transfer_cnt_reg_n_0_[3] ;
  wire \transfer_cnt_reg_n_0_[4] ;
  wire \transfer_cnt_reg_n_0_[5] ;
  wire \transfer_cnt_reg_n_0_[6] ;
  wire \transfer_cnt_reg_n_0_[7] ;
  wire \transfer_cnt_reg_n_0_[8] ;
  wire \transfer_cnt_reg_n_0_[9] ;
  wire [2:0]NLW_m_axis_tlast0_carry_CO_UNCONNECTED;
  wire [3:0]NLW_m_axis_tlast0_carry_O_UNCONNECTED;
  wire [2:0]NLW_m_axis_tlast0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_m_axis_tlast0_carry__0_O_UNCONNECTED;
  wire [2:0]NLW_minusOp_carry_CO_UNCONNECTED;
  wire [2:0]NLW_minusOp_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_minusOp_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_minusOp_carry__2_CO_UNCONNECTED;
  wire [2:0]NLW_plusOp_carry_CO_UNCONNECTED;
  wire [2:0]NLW_plusOp_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_plusOp_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_plusOp_carry__2_CO_UNCONNECTED;

  LUT6 #(
    .INIT(64'hEA8AEA8AAAA8EAA8)) 
    \FSM_sequential_sm_state[0]_i_1 
       (.I0(sm_state__0),
        .I1(sm_state[0]),
        .I2(merge_valid),
        .I3(sm_state[1]),
        .I4(m_axis_tlast0_carry__0_n_0),
        .I5(sm_state[2]),
        .O(\FSM_sequential_sm_state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h888888888BBB8B88)) 
    \FSM_sequential_sm_state[0]_i_2 
       (.I0(merge_valid),
        .I1(sm_state[2]),
        .I2(\FSM_sequential_sm_state[0]_i_3_n_0 ),
        .I3(sm_state[1]),
        .I4(\FSM_sequential_sm_state_reg[2]_0 ),
        .I5(sm_state[0]),
        .O(sm_state__0));
  LUT6 #(
    .INIT(64'hDFFFFFFFFFFFFFFF)) 
    \FSM_sequential_sm_state[0]_i_3 
       (.I0(merge_valid),
        .I1(\FSM_sequential_sm_state[0]_i_4_n_0 ),
        .I2(\packet_id_reg_n_0_[3] ),
        .I3(\packet_id_reg_n_0_[0] ),
        .I4(\packet_id_reg_n_0_[5] ),
        .I5(\packet_id_reg_n_0_[1] ),
        .O(\FSM_sequential_sm_state[0]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \FSM_sequential_sm_state[0]_i_4 
       (.I0(\packet_id_reg_n_0_[2] ),
        .I1(\packet_id_reg_n_0_[6] ),
        .I2(\packet_id_reg_n_0_[4] ),
        .I3(\packet_id_reg_n_0_[7] ),
        .O(\FSM_sequential_sm_state[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00F2FFFF00F20000)) 
    \FSM_sequential_sm_state[1]_i_1 
       (.I0(packet_size),
        .I1(\FSM_sequential_sm_state_reg[1]_1 ),
        .I2(\FSM_sequential_sm_state[1]_i_3_n_0 ),
        .I3(sm_state[2]),
        .I4(\FSM_sequential_sm_state[1]_i_4_n_0 ),
        .I5(sm_state[1]),
        .O(\FSM_sequential_sm_state[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \FSM_sequential_sm_state[1]_i_3 
       (.I0(sm_state[0]),
        .I1(sm_state[1]),
        .I2(\transfer_cnt[15]_i_3_n_0 ),
        .O(\FSM_sequential_sm_state[1]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h7B7BFE7E)) 
    \FSM_sequential_sm_state[1]_i_4 
       (.I0(sm_state[0]),
        .I1(merge_valid),
        .I2(sm_state[1]),
        .I3(m_axis_tlast0_carry__0_n_0),
        .I4(sm_state[2]),
        .O(\FSM_sequential_sm_state[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0F0F0AAA82AA8)) 
    \FSM_sequential_sm_state[2]_i_1 
       (.I0(\FSM_sequential_sm_state[2]_i_2_n_0 ),
        .I1(sm_state[0]),
        .I2(merge_valid),
        .I3(sm_state[1]),
        .I4(m_axis_tlast0_carry__0_n_0),
        .I5(sm_state[2]),
        .O(\FSM_sequential_sm_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCCAACCAAF300F3FF)) 
    \FSM_sequential_sm_state[2]_i_2 
       (.I0(\transfer_cnt[15]_i_3_n_0 ),
        .I1(merge_valid),
        .I2(\FSM_sequential_sm_state_reg[1]_1 ),
        .I3(sm_state[0]),
        .I4(\FSM_sequential_sm_state_reg[2]_0 ),
        .I5(sm_state[1]),
        .O(\FSM_sequential_sm_state[2]_i_2_n_0 ));
  (* FSM_ENCODED_STATES = "st_hdra:001,iSTATE:101,st_hdrb:010,st_transfer:011,st_idle:000,st_resync:100" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_state_reg[0] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\FSM_sequential_sm_state[0]_i_1_n_0 ),
        .Q(sm_state[0]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "st_hdra:001,iSTATE:101,st_hdrb:010,st_transfer:011,st_idle:000,st_resync:100" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_state_reg[1] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\FSM_sequential_sm_state[1]_i_1_n_0 ),
        .Q(sm_state[1]),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "st_hdra:001,iSTATE:101,st_hdrb:010,st_transfer:011,st_idle:000,st_resync:100" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_state_reg[2] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\FSM_sequential_sm_state[2]_i_1_n_0 ),
        .Q(sm_state[2]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    enable_i_1
       (.I0(enable_req),
        .I1(enable_i_2_n_0),
        .I2(merge_valid),
        .I3(sm_state[1]),
        .I4(sm_state[0]),
        .I5(enable_reg_n_0),
        .O(enable_i_1_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    enable_i_2
       (.I0(\packet_id_reg_n_0_[3] ),
        .I1(\packet_id_reg_n_0_[5] ),
        .I2(\packet_id_reg_n_0_[1] ),
        .I3(\transfer_cnt[15]_i_4_n_0 ),
        .O(enable_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    enable_reg
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(enable_i_1_n_0),
        .Q(enable_reg_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    enable_req_reg
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(enable_in),
        .Q(enable_req),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_axis_tdata_reg[0] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[0]),
        .Q(m_axis_tdata[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_axis_tdata_reg[10] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[10]),
        .Q(m_axis_tdata[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_axis_tdata_reg[11] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[11]),
        .Q(m_axis_tdata[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_axis_tdata_reg[12] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[12]),
        .Q(m_axis_tdata[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_axis_tdata_reg[13] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[13]),
        .Q(m_axis_tdata[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_axis_tdata_reg[14] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[14]),
        .Q(m_axis_tdata[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_axis_tdata_reg[15] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[15]),
        .Q(m_axis_tdata[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_axis_tdata_reg[1] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[1]),
        .Q(m_axis_tdata[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_axis_tdata_reg[2] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[2]),
        .Q(m_axis_tdata[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_axis_tdata_reg[3] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[3]),
        .Q(m_axis_tdata[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_axis_tdata_reg[4] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[4]),
        .Q(m_axis_tdata[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_axis_tdata_reg[5] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[5]),
        .Q(m_axis_tdata[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_axis_tdata_reg[6] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[6]),
        .Q(m_axis_tdata[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_axis_tdata_reg[7] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[7]),
        .Q(m_axis_tdata[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_axis_tdata_reg[8] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[8]),
        .Q(m_axis_tdata[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_axis_tdata_reg[9] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[9]),
        .Q(m_axis_tdata[9]),
        .R(1'b0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 m_axis_tlast0_carry
       (.CI(1'b0),
        .CO({m_axis_tlast0_carry_n_0,NLW_m_axis_tlast0_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b1),
        .DI({m_axis_tlast0_carry_i_1_n_0,m_axis_tlast0_carry_i_2_n_0,m_axis_tlast0_carry_i_3_n_0,m_axis_tlast0_carry_i_4_n_0}),
        .O(NLW_m_axis_tlast0_carry_O_UNCONNECTED[3:0]),
        .S({m_axis_tlast0_carry_i_5_n_0,m_axis_tlast0_carry_i_6_n_0,m_axis_tlast0_carry_i_7_n_0,m_axis_tlast0_carry_i_8_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 m_axis_tlast0_carry__0
       (.CI(m_axis_tlast0_carry_n_0),
        .CO({m_axis_tlast0_carry__0_n_0,NLW_m_axis_tlast0_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({m_axis_tlast0_carry__0_i_1_n_0,m_axis_tlast0_carry__0_i_2_n_0,m_axis_tlast0_carry__0_i_3_n_0,m_axis_tlast0_carry__0_i_4_n_0}),
        .O(NLW_m_axis_tlast0_carry__0_O_UNCONNECTED[3:0]),
        .S({m_axis_tlast0_carry__0_i_5_n_0,m_axis_tlast0_carry__0_i_6_n_0,m_axis_tlast0_carry__0_i_7_n_0,m_axis_tlast0_carry__0_i_8_n_0}));
  LUT4 #(
    .INIT(16'h22B2)) 
    m_axis_tlast0_carry__0_i_1
       (.I0(\transfer_cnt_reg_n_0_[15] ),
        .I1(minusOp[15]),
        .I2(\transfer_cnt_reg_n_0_[14] ),
        .I3(minusOp[14]),
        .O(m_axis_tlast0_carry__0_i_1_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    m_axis_tlast0_carry__0_i_2
       (.I0(\transfer_cnt_reg_n_0_[13] ),
        .I1(minusOp[13]),
        .I2(\transfer_cnt_reg_n_0_[12] ),
        .I3(minusOp[12]),
        .O(m_axis_tlast0_carry__0_i_2_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    m_axis_tlast0_carry__0_i_3
       (.I0(\transfer_cnt_reg_n_0_[11] ),
        .I1(minusOp[11]),
        .I2(\transfer_cnt_reg_n_0_[10] ),
        .I3(minusOp[10]),
        .O(m_axis_tlast0_carry__0_i_3_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    m_axis_tlast0_carry__0_i_4
       (.I0(\transfer_cnt_reg_n_0_[9] ),
        .I1(minusOp[9]),
        .I2(\transfer_cnt_reg_n_0_[8] ),
        .I3(minusOp[8]),
        .O(m_axis_tlast0_carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    m_axis_tlast0_carry__0_i_5
       (.I0(minusOp[15]),
        .I1(\transfer_cnt_reg_n_0_[15] ),
        .I2(minusOp[14]),
        .I3(\transfer_cnt_reg_n_0_[14] ),
        .O(m_axis_tlast0_carry__0_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    m_axis_tlast0_carry__0_i_6
       (.I0(minusOp[13]),
        .I1(\transfer_cnt_reg_n_0_[13] ),
        .I2(minusOp[12]),
        .I3(\transfer_cnt_reg_n_0_[12] ),
        .O(m_axis_tlast0_carry__0_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    m_axis_tlast0_carry__0_i_7
       (.I0(minusOp[11]),
        .I1(\transfer_cnt_reg_n_0_[11] ),
        .I2(minusOp[10]),
        .I3(\transfer_cnt_reg_n_0_[10] ),
        .O(m_axis_tlast0_carry__0_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    m_axis_tlast0_carry__0_i_8
       (.I0(minusOp[9]),
        .I1(\transfer_cnt_reg_n_0_[9] ),
        .I2(minusOp[8]),
        .I3(\transfer_cnt_reg_n_0_[8] ),
        .O(m_axis_tlast0_carry__0_i_8_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    m_axis_tlast0_carry_i_1
       (.I0(\transfer_cnt_reg_n_0_[7] ),
        .I1(minusOp[7]),
        .I2(\transfer_cnt_reg_n_0_[6] ),
        .I3(minusOp[6]),
        .O(m_axis_tlast0_carry_i_1_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    m_axis_tlast0_carry_i_2
       (.I0(\transfer_cnt_reg_n_0_[5] ),
        .I1(minusOp[5]),
        .I2(\transfer_cnt_reg_n_0_[4] ),
        .I3(minusOp[4]),
        .O(m_axis_tlast0_carry_i_2_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    m_axis_tlast0_carry_i_3
       (.I0(\transfer_cnt_reg_n_0_[3] ),
        .I1(minusOp[3]),
        .I2(\transfer_cnt_reg_n_0_[2] ),
        .I3(minusOp[2]),
        .O(m_axis_tlast0_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    m_axis_tlast0_carry_i_4
       (.I0(\transfer_cnt_reg_n_0_[1] ),
        .I1(minusOp[1]),
        .I2(\transfer_cnt_reg_n_0_[0] ),
        .I3(minusOp[0]),
        .O(m_axis_tlast0_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    m_axis_tlast0_carry_i_5
       (.I0(minusOp[7]),
        .I1(\transfer_cnt_reg_n_0_[7] ),
        .I2(minusOp[6]),
        .I3(\transfer_cnt_reg_n_0_[6] ),
        .O(m_axis_tlast0_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    m_axis_tlast0_carry_i_6
       (.I0(minusOp[5]),
        .I1(\transfer_cnt_reg_n_0_[5] ),
        .I2(minusOp[4]),
        .I3(\transfer_cnt_reg_n_0_[4] ),
        .O(m_axis_tlast0_carry_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    m_axis_tlast0_carry_i_7
       (.I0(minusOp[3]),
        .I1(\transfer_cnt_reg_n_0_[3] ),
        .I2(minusOp[2]),
        .I3(\transfer_cnt_reg_n_0_[2] ),
        .O(m_axis_tlast0_carry_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    m_axis_tlast0_carry_i_8
       (.I0(minusOp[1]),
        .I1(\transfer_cnt_reg_n_0_[1] ),
        .I2(minusOp[0]),
        .I3(\transfer_cnt_reg_n_0_[0] ),
        .O(m_axis_tlast0_carry_i_8_n_0));
  LUT5 #(
    .INIT(32'hEEEE8808)) 
    m_axis_tlast_i_1
       (.I0(sm_state[0]),
        .I1(sm_state[1]),
        .I2(merge_valid),
        .I3(m_axis_tlast0_carry__0_n_0),
        .I4(m_axis_tlast),
        .O(m_axis_tlast_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    m_axis_tlast_reg
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(m_axis_tlast_i_1_n_0),
        .Q(m_axis_tlast),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    m_axis_tuser_i_1
       (.I0(start_of_frame),
        .I1(sm_state[0]),
        .I2(sm_state[1]),
        .I3(merge_valid),
        .I4(m_axis_tuser),
        .O(m_axis_tuser_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    m_axis_tuser_reg
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(m_axis_tuser_i_1_n_0),
        .Q(m_axis_tuser),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hBFF08000)) 
    m_axis_tvalid_i_1
       (.I0(enable_reg_n_0),
        .I1(merge_valid),
        .I2(sm_state[1]),
        .I3(sm_state[0]),
        .I4(m_axis_tvalid),
        .O(m_axis_tvalid_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    m_axis_tvalid_reg
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(m_axis_tvalid_i_1_n_0),
        .Q(m_axis_tvalid),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "PROPCONST SWEEP" *) 
  CARRY4 minusOp_carry
       (.CI(1'b0),
        .CO({minusOp_carry_n_0,NLW_minusOp_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\packet_size_reg_n_0_[3] ,\packet_size_reg_n_0_[2] ,\packet_size_reg_n_0_[1] ,1'b0}),
        .O(minusOp[3:0]),
        .S({minusOp_carry_i_1_n_0,minusOp_carry_i_2_n_0,minusOp_carry_i_3_n_0,\packet_size_reg_n_0_[0] }));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 minusOp_carry__0
       (.CI(minusOp_carry_n_0),
        .CO({minusOp_carry__0_n_0,NLW_minusOp_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\packet_size_reg_n_0_[7] ,\packet_size_reg_n_0_[6] ,\packet_size_reg_n_0_[5] ,\packet_size_reg_n_0_[4] }),
        .O(minusOp[7:4]),
        .S({minusOp_carry__0_i_1_n_0,minusOp_carry__0_i_2_n_0,minusOp_carry__0_i_3_n_0,minusOp_carry__0_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__0_i_1
       (.I0(\packet_size_reg_n_0_[7] ),
        .O(minusOp_carry__0_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__0_i_2
       (.I0(\packet_size_reg_n_0_[6] ),
        .O(minusOp_carry__0_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__0_i_3
       (.I0(\packet_size_reg_n_0_[5] ),
        .O(minusOp_carry__0_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__0_i_4
       (.I0(\packet_size_reg_n_0_[4] ),
        .O(minusOp_carry__0_i_4_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 minusOp_carry__1
       (.CI(minusOp_carry__0_n_0),
        .CO({minusOp_carry__1_n_0,NLW_minusOp_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({\packet_size_reg_n_0_[11] ,\packet_size_reg_n_0_[10] ,\packet_size_reg_n_0_[9] ,\packet_size_reg_n_0_[8] }),
        .O(minusOp[11:8]),
        .S({minusOp_carry__1_i_1_n_0,minusOp_carry__1_i_2_n_0,minusOp_carry__1_i_3_n_0,minusOp_carry__1_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__1_i_1
       (.I0(\packet_size_reg_n_0_[11] ),
        .O(minusOp_carry__1_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__1_i_2
       (.I0(\packet_size_reg_n_0_[10] ),
        .O(minusOp_carry__1_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__1_i_3
       (.I0(\packet_size_reg_n_0_[9] ),
        .O(minusOp_carry__1_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__1_i_4
       (.I0(\packet_size_reg_n_0_[8] ),
        .O(minusOp_carry__1_i_4_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 minusOp_carry__2
       (.CI(minusOp_carry__1_n_0),
        .CO(NLW_minusOp_carry__2_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,\packet_size_reg_n_0_[14] ,\packet_size_reg_n_0_[13] ,\packet_size_reg_n_0_[12] }),
        .O(minusOp[15:12]),
        .S({minusOp_carry__2_i_1_n_0,minusOp_carry__2_i_2_n_0,minusOp_carry__2_i_3_n_0,minusOp_carry__2_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__2_i_1
       (.I0(\packet_size_reg_n_0_[15] ),
        .O(minusOp_carry__2_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__2_i_2
       (.I0(\packet_size_reg_n_0_[14] ),
        .O(minusOp_carry__2_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__2_i_3
       (.I0(\packet_size_reg_n_0_[13] ),
        .O(minusOp_carry__2_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry__2_i_4
       (.I0(\packet_size_reg_n_0_[12] ),
        .O(minusOp_carry__2_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry_i_1
       (.I0(\packet_size_reg_n_0_[3] ),
        .O(minusOp_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry_i_2
       (.I0(\packet_size_reg_n_0_[2] ),
        .O(minusOp_carry_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    minusOp_carry_i_3
       (.I0(\packet_size_reg_n_0_[1] ),
        .O(minusOp_carry_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \packet_id_reg[0] 
       (.C(rxbyteclkhs),
        .CE(packet_size),
        .D(D[0]),
        .Q(\packet_id_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \packet_id_reg[1] 
       (.C(rxbyteclkhs),
        .CE(packet_size),
        .D(D[1]),
        .Q(\packet_id_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \packet_id_reg[2] 
       (.C(rxbyteclkhs),
        .CE(packet_size),
        .D(D[2]),
        .Q(\packet_id_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \packet_id_reg[3] 
       (.C(rxbyteclkhs),
        .CE(packet_size),
        .D(D[3]),
        .Q(\packet_id_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \packet_id_reg[4] 
       (.C(rxbyteclkhs),
        .CE(packet_size),
        .D(D[4]),
        .Q(\packet_id_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \packet_id_reg[5] 
       (.C(rxbyteclkhs),
        .CE(packet_size),
        .D(D[5]),
        .Q(\packet_id_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \packet_id_reg[6] 
       (.C(rxbyteclkhs),
        .CE(packet_size),
        .D(D[6]),
        .Q(\packet_id_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \packet_id_reg[7] 
       (.C(rxbyteclkhs),
        .CE(packet_size),
        .D(D[7]),
        .Q(\packet_id_reg_n_0_[7] ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h40)) 
    \packet_size[15]_i_1 
       (.I0(sm_state[0]),
        .I1(sm_state[1]),
        .I2(merge_valid),
        .O(\packet_size[15]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \packet_size[7]_i_1 
       (.I0(merge_valid),
        .I1(sm_state[0]),
        .I2(sm_state[1]),
        .O(packet_size));
  FDRE #(
    .INIT(1'b0)) 
    \packet_size_reg[0] 
       (.C(rxbyteclkhs),
        .CE(packet_size),
        .D(D[8]),
        .Q(\packet_size_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \packet_size_reg[10] 
       (.C(rxbyteclkhs),
        .CE(\packet_size[15]_i_1_n_0 ),
        .D(D[2]),
        .Q(\packet_size_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \packet_size_reg[11] 
       (.C(rxbyteclkhs),
        .CE(\packet_size[15]_i_1_n_0 ),
        .D(D[3]),
        .Q(\packet_size_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \packet_size_reg[12] 
       (.C(rxbyteclkhs),
        .CE(\packet_size[15]_i_1_n_0 ),
        .D(D[4]),
        .Q(\packet_size_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \packet_size_reg[13] 
       (.C(rxbyteclkhs),
        .CE(\packet_size[15]_i_1_n_0 ),
        .D(D[5]),
        .Q(\packet_size_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \packet_size_reg[14] 
       (.C(rxbyteclkhs),
        .CE(\packet_size[15]_i_1_n_0 ),
        .D(D[6]),
        .Q(\packet_size_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \packet_size_reg[15] 
       (.C(rxbyteclkhs),
        .CE(\packet_size[15]_i_1_n_0 ),
        .D(D[7]),
        .Q(\packet_size_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \packet_size_reg[1] 
       (.C(rxbyteclkhs),
        .CE(packet_size),
        .D(D[9]),
        .Q(\packet_size_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \packet_size_reg[2] 
       (.C(rxbyteclkhs),
        .CE(packet_size),
        .D(D[10]),
        .Q(\packet_size_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \packet_size_reg[3] 
       (.C(rxbyteclkhs),
        .CE(packet_size),
        .D(D[11]),
        .Q(\packet_size_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \packet_size_reg[4] 
       (.C(rxbyteclkhs),
        .CE(packet_size),
        .D(D[12]),
        .Q(\packet_size_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \packet_size_reg[5] 
       (.C(rxbyteclkhs),
        .CE(packet_size),
        .D(D[13]),
        .Q(\packet_size_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \packet_size_reg[6] 
       (.C(rxbyteclkhs),
        .CE(packet_size),
        .D(D[14]),
        .Q(\packet_size_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \packet_size_reg[7] 
       (.C(rxbyteclkhs),
        .CE(packet_size),
        .D(D[15]),
        .Q(\packet_size_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \packet_size_reg[8] 
       (.C(rxbyteclkhs),
        .CE(\packet_size[15]_i_1_n_0 ),
        .D(D[0]),
        .Q(\packet_size_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \packet_size_reg[9] 
       (.C(rxbyteclkhs),
        .CE(\packet_size[15]_i_1_n_0 ),
        .D(D[1]),
        .Q(\packet_size_reg_n_0_[9] ),
        .R(1'b0));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "PROPCONST SWEEP" *) 
  CARRY4 plusOp_carry
       (.CI(1'b0),
        .CO({plusOp_carry_n_0,NLW_plusOp_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\transfer_cnt_reg_n_0_[1] ,1'b0}),
        .O(in14[3:0]),
        .S({\transfer_cnt_reg_n_0_[3] ,\transfer_cnt_reg_n_0_[2] ,plusOp_carry_i_1_n_0,\transfer_cnt_reg_n_0_[0] }));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 plusOp_carry__0
       (.CI(plusOp_carry_n_0),
        .CO({plusOp_carry__0_n_0,NLW_plusOp_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(in14[7:4]),
        .S({\transfer_cnt_reg_n_0_[7] ,\transfer_cnt_reg_n_0_[6] ,\transfer_cnt_reg_n_0_[5] ,\transfer_cnt_reg_n_0_[4] }));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 plusOp_carry__1
       (.CI(plusOp_carry__0_n_0),
        .CO({plusOp_carry__1_n_0,NLW_plusOp_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(in14[11:8]),
        .S({\transfer_cnt_reg_n_0_[11] ,\transfer_cnt_reg_n_0_[10] ,\transfer_cnt_reg_n_0_[9] ,\transfer_cnt_reg_n_0_[8] }));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 plusOp_carry__2
       (.CI(plusOp_carry__1_n_0),
        .CO(NLW_plusOp_carry__2_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(in14[15:12]),
        .S({\transfer_cnt_reg_n_0_[15] ,\transfer_cnt_reg_n_0_[14] ,\transfer_cnt_reg_n_0_[13] ,\transfer_cnt_reg_n_0_[12] }));
  LUT1 #(
    .INIT(2'h1)) 
    plusOp_carry_i_1
       (.I0(\transfer_cnt_reg_n_0_[1] ),
        .O(plusOp_carry_i_1_n_0));
  LUT5 #(
    .INIT(32'h77FF0080)) 
    start_of_frame_i_1
       (.I0(sm_state[1]),
        .I1(merge_valid),
        .I2(enable_i_2_n_0),
        .I3(sm_state[0]),
        .I4(start_of_frame),
        .O(start_of_frame_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    start_of_frame_reg
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(start_of_frame_i_1_n_0),
        .Q(start_of_frame),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hFE)) 
    \transfer[1]_i_12 
       (.I0(sm_state[1]),
        .I1(sm_state[2]),
        .I2(sm_state[0]),
        .O(\FSM_sequential_sm_state_reg[1]_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \transfer[1]_i_13 
       (.I0(sm_state[0]),
        .I1(sm_state[2]),
        .I2(sm_state[1]),
        .O(\FSM_sequential_sm_state_reg[0]_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \transfer_cnt[15]_i_1 
       (.I0(\transfer_cnt[15]_i_3_n_0 ),
        .I1(sm_state[1]),
        .I2(sm_state[0]),
        .O(\transfer_cnt[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h44000F00)) 
    \transfer_cnt[15]_i_2 
       (.I0(m_axis_tlast0_carry__0_n_0),
        .I1(merge_valid),
        .I2(\transfer_cnt[15]_i_3_n_0 ),
        .I3(sm_state[1]),
        .I4(sm_state[0]),
        .O(\transfer_cnt[15]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBFFFFFFF)) 
    \transfer_cnt[15]_i_3 
       (.I0(\transfer_cnt[15]_i_4_n_0 ),
        .I1(merge_valid),
        .I2(\packet_id_reg_n_0_[3] ),
        .I3(\packet_id_reg_n_0_[1] ),
        .I4(\packet_id_reg_n_0_[5] ),
        .O(\transfer_cnt[15]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFEFF)) 
    \transfer_cnt[15]_i_4 
       (.I0(\packet_id_reg_n_0_[2] ),
        .I1(\packet_id_reg_n_0_[7] ),
        .I2(\packet_id_reg_n_0_[4] ),
        .I3(\packet_id_reg_n_0_[0] ),
        .I4(\packet_id_reg_n_0_[6] ),
        .O(\transfer_cnt[15]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \transfer_cnt_reg[0] 
       (.C(rxbyteclkhs),
        .CE(\transfer_cnt[15]_i_2_n_0 ),
        .D(in14[0]),
        .Q(\transfer_cnt_reg_n_0_[0] ),
        .R(\transfer_cnt[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \transfer_cnt_reg[10] 
       (.C(rxbyteclkhs),
        .CE(\transfer_cnt[15]_i_2_n_0 ),
        .D(in14[10]),
        .Q(\transfer_cnt_reg_n_0_[10] ),
        .R(\transfer_cnt[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \transfer_cnt_reg[11] 
       (.C(rxbyteclkhs),
        .CE(\transfer_cnt[15]_i_2_n_0 ),
        .D(in14[11]),
        .Q(\transfer_cnt_reg_n_0_[11] ),
        .R(\transfer_cnt[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \transfer_cnt_reg[12] 
       (.C(rxbyteclkhs),
        .CE(\transfer_cnt[15]_i_2_n_0 ),
        .D(in14[12]),
        .Q(\transfer_cnt_reg_n_0_[12] ),
        .R(\transfer_cnt[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \transfer_cnt_reg[13] 
       (.C(rxbyteclkhs),
        .CE(\transfer_cnt[15]_i_2_n_0 ),
        .D(in14[13]),
        .Q(\transfer_cnt_reg_n_0_[13] ),
        .R(\transfer_cnt[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \transfer_cnt_reg[14] 
       (.C(rxbyteclkhs),
        .CE(\transfer_cnt[15]_i_2_n_0 ),
        .D(in14[14]),
        .Q(\transfer_cnt_reg_n_0_[14] ),
        .R(\transfer_cnt[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \transfer_cnt_reg[15] 
       (.C(rxbyteclkhs),
        .CE(\transfer_cnt[15]_i_2_n_0 ),
        .D(in14[15]),
        .Q(\transfer_cnt_reg_n_0_[15] ),
        .R(\transfer_cnt[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \transfer_cnt_reg[1] 
       (.C(rxbyteclkhs),
        .CE(\transfer_cnt[15]_i_2_n_0 ),
        .D(in14[1]),
        .Q(\transfer_cnt_reg_n_0_[1] ),
        .R(\transfer_cnt[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \transfer_cnt_reg[2] 
       (.C(rxbyteclkhs),
        .CE(\transfer_cnt[15]_i_2_n_0 ),
        .D(in14[2]),
        .Q(\transfer_cnt_reg_n_0_[2] ),
        .R(\transfer_cnt[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \transfer_cnt_reg[3] 
       (.C(rxbyteclkhs),
        .CE(\transfer_cnt[15]_i_2_n_0 ),
        .D(in14[3]),
        .Q(\transfer_cnt_reg_n_0_[3] ),
        .R(\transfer_cnt[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \transfer_cnt_reg[4] 
       (.C(rxbyteclkhs),
        .CE(\transfer_cnt[15]_i_2_n_0 ),
        .D(in14[4]),
        .Q(\transfer_cnt_reg_n_0_[4] ),
        .R(\transfer_cnt[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \transfer_cnt_reg[5] 
       (.C(rxbyteclkhs),
        .CE(\transfer_cnt[15]_i_2_n_0 ),
        .D(in14[5]),
        .Q(\transfer_cnt_reg_n_0_[5] ),
        .R(\transfer_cnt[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \transfer_cnt_reg[6] 
       (.C(rxbyteclkhs),
        .CE(\transfer_cnt[15]_i_2_n_0 ),
        .D(in14[6]),
        .Q(\transfer_cnt_reg_n_0_[6] ),
        .R(\transfer_cnt[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \transfer_cnt_reg[7] 
       (.C(rxbyteclkhs),
        .CE(\transfer_cnt[15]_i_2_n_0 ),
        .D(in14[7]),
        .Q(\transfer_cnt_reg_n_0_[7] ),
        .R(\transfer_cnt[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \transfer_cnt_reg[8] 
       (.C(rxbyteclkhs),
        .CE(\transfer_cnt[15]_i_2_n_0 ),
        .D(in14[8]),
        .Q(\transfer_cnt_reg_n_0_[8] ),
        .R(\transfer_cnt[15]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \transfer_cnt_reg[9] 
       (.C(rxbyteclkhs),
        .CE(\transfer_cnt[15]_i_2_n_0 ),
        .D(in14[9]),
        .Q(\transfer_cnt_reg_n_0_[9] ),
        .R(\transfer_cnt[15]_i_1_n_0 ));
endmodule

(* C_LANES = "2" *) (* C_M_AXIS_TDATA_WIDTH = "32" *) (* C_TIMEOUT = "255" *) 
(* ORIG_REF_NAME = "csi_to_axis_v1_0" *) 
module system_csi_to_axis_0_1__csi_to_axis_v1_0
   (enable_in,
    rxbyteclkhs,
    cl_enable,
    cl_stopstate,
    cl_rxclkactivehs,
    dl0_enable,
    dl0_rxactivehs,
    dl0_rxvalidhs,
    dl0_rxsynchs,
    dl0_datahs,
    dl1_enable,
    dl1_rxactivehs,
    dl1_rxvalidhs,
    dl1_rxsynchs,
    dl1_datahs,
    dl2_enable,
    dl2_rxactivehs,
    dl2_rxvalidhs,
    dl2_rxsynchs,
    dl2_datahs,
    dl3_enable,
    dl3_rxactivehs,
    dl3_rxvalidhs,
    dl3_rxsynchs,
    dl3_datahs,
    trig_req,
    trig_ack,
    m_axis_aclk,
    m_axis_aresetn,
    m_axis_tvalid,
    m_axis_tdata,
    m_axis_tuser,
    m_axis_tlast,
    m_axis_tready);
  input enable_in;
  input rxbyteclkhs;
  output cl_enable;
  input cl_stopstate;
  input cl_rxclkactivehs;
  output dl0_enable;
  input dl0_rxactivehs;
  input dl0_rxvalidhs;
  input dl0_rxsynchs;
  input [7:0]dl0_datahs;
  output dl1_enable;
  input dl1_rxactivehs;
  input dl1_rxvalidhs;
  input dl1_rxsynchs;
  input [7:0]dl1_datahs;
  output dl2_enable;
  input dl2_rxactivehs;
  input dl2_rxvalidhs;
  input dl2_rxsynchs;
  input [7:0]dl2_datahs;
  output dl3_enable;
  input dl3_rxactivehs;
  input dl3_rxvalidhs;
  input dl3_rxsynchs;
  input [7:0]dl3_datahs;
  output trig_req;
  input trig_ack;
  input m_axis_aclk;
  input m_axis_aresetn;
  output m_axis_tvalid;
  output [15:0]m_axis_tdata;
  output m_axis_tuser;
  output m_axis_tlast;
  input m_axis_tready;

  wire [1:0]align_valid;
  wire [15:0]data_in;
  wire [7:0]dl0_datahs;
  wire dl0_rxvalidhs;
  wire [7:0]dl1_datahs;
  wire dl1_rxvalidhs;
  wire enable_in;
  wire lane_align_inst_n_21;
  wire lane_align_inst_n_22;
  wire lane_align_inst_n_23;
  wire lane_align_inst_n_3;
  wire lane_align_inst_n_4;
  wire lane_merge_inst_n_1;
  wire lane_merge_inst_n_2;
  wire lane_merge_inst_n_3;
  wire [15:0]m_axis_tdata;
  wire m_axis_tlast;
  wire m_axis_tuser;
  wire m_axis_tvalid;
  wire [15:0]merge_data;
  wire merge_valid;
  wire parser_inst_n_6;
  wire parser_inst_n_7;
  wire rxbyteclkhs;
  wire [2:0]sm_state;
  wire trig_req;

  system_csi_to_axis_0_1__lane_align lane_align_inst
       (.D(data_in),
        .align_valid(align_valid),
        .\data_shift_reg[0][0]_0 (lane_align_inst_n_22),
        .\data_shift_reg[0][0]_1 (lane_align_inst_n_23),
        .\data_shift_reg[1][0]_0 (lane_align_inst_n_4),
        .\data_shift_reg[1][0]_1 (lane_align_inst_n_21),
        .dl0_datahs(dl0_datahs),
        .dl0_rxvalidhs(dl0_rxvalidhs),
        .dl1_datahs(dl1_datahs),
        .dl1_rxvalidhs(dl1_rxvalidhs),
        .rxbyteclkhs(rxbyteclkhs),
        .\transfer_reg[0]_0 (lane_align_inst_n_3),
        .\transfer_reg[1]_0 (lane_merge_inst_n_2),
        .trig_req(trig_req));
  system_csi_to_axis_0_1__lane_merge lane_merge_inst
       (.D(data_in),
        .Q(merge_data),
        .align_valid(align_valid),
        .\align_vec_reg[0]_0 (parser_inst_n_6),
        .\align_vec_reg[0]_1 (lane_align_inst_n_3),
        .\align_vec_reg[0]_2 (lane_align_inst_n_23),
        .\align_vec_reg[0]_3 (lane_align_inst_n_22),
        .\align_vec_reg[1]_0 (lane_align_inst_n_21),
        .\align_vec_reg[1]_1 (lane_align_inst_n_4),
        .\data_out_reg[0]_0 (lane_merge_inst_n_1),
        .\data_out_reg[3]_0 (lane_merge_inst_n_3),
        .merge_valid(merge_valid),
        .resync_out_reg_0(lane_merge_inst_n_2),
        .rxbyteclkhs(rxbyteclkhs),
        .sm_state(sm_state),
        .\transfer_reg[1] (parser_inst_n_7));
  system_csi_to_axis_0_1__csi2_parser parser_inst
       (.D(merge_data),
        .\FSM_sequential_sm_state_reg[0]_0 (parser_inst_n_7),
        .\FSM_sequential_sm_state_reg[1]_0 (parser_inst_n_6),
        .\FSM_sequential_sm_state_reg[1]_1 (lane_merge_inst_n_3),
        .\FSM_sequential_sm_state_reg[2]_0 (lane_merge_inst_n_1),
        .enable_in(enable_in),
        .m_axis_tdata(m_axis_tdata),
        .m_axis_tlast(m_axis_tlast),
        .m_axis_tuser(m_axis_tuser),
        .m_axis_tvalid(m_axis_tvalid),
        .merge_valid(merge_valid),
        .rxbyteclkhs(rxbyteclkhs),
        .sm_state(sm_state));
endmodule

(* ORIG_REF_NAME = "lane_align" *) 
module system_csi_to_axis_0_1__lane_align
   (trig_req,
    align_valid,
    \transfer_reg[0]_0 ,
    \data_shift_reg[1][0]_0 ,
    D,
    \data_shift_reg[1][0]_1 ,
    \data_shift_reg[0][0]_0 ,
    \data_shift_reg[0][0]_1 ,
    rxbyteclkhs,
    dl1_rxvalidhs,
    \transfer_reg[1]_0 ,
    dl0_rxvalidhs,
    dl0_datahs,
    dl1_datahs);
  output trig_req;
  output [1:0]align_valid;
  output \transfer_reg[0]_0 ;
  output \data_shift_reg[1][0]_0 ;
  output [15:0]D;
  output \data_shift_reg[1][0]_1 ;
  output \data_shift_reg[0][0]_0 ;
  output \data_shift_reg[0][0]_1 ;
  input rxbyteclkhs;
  input dl1_rxvalidhs;
  input \transfer_reg[1]_0 ;
  input dl0_rxvalidhs;
  input [7:0]dl0_datahs;
  input [7:0]dl1_datahs;

  wire [15:0]D;
  wire [1:0]align_valid;
  wire \data_dl[0]_i_2_n_0 ;
  wire \data_dl[10]_i_2_n_0 ;
  wire \data_dl[11]_i_2_n_0 ;
  wire \data_dl[12]_i_2_n_0 ;
  wire \data_dl[13]_i_2_n_0 ;
  wire \data_dl[14]_i_2_n_0 ;
  wire \data_dl[15]_i_2_n_0 ;
  wire \data_dl[15]_i_3_n_0 ;
  wire \data_dl[15]_i_4_n_0 ;
  wire \data_dl[15]_i_5_n_0 ;
  wire \data_dl[1]_i_2_n_0 ;
  wire \data_dl[2]_i_2_n_0 ;
  wire \data_dl[3]_i_2_n_0 ;
  wire \data_dl[4]_i_2_n_0 ;
  wire \data_dl[5]_i_2_n_0 ;
  wire \data_dl[6]_i_2_n_0 ;
  wire \data_dl[7]_i_2_n_0 ;
  wire \data_dl[7]_i_3_n_0 ;
  wire \data_dl[7]_i_4_n_0 ;
  wire \data_dl[7]_i_5_n_0 ;
  wire \data_dl[8]_i_2_n_0 ;
  wire \data_dl[9]_i_2_n_0 ;
  wire [15:0]\data_dly_reg[0] ;
  wire [15:0]\data_dly_reg[1] ;
  wire \data_shift[0][0]_i_1_n_0 ;
  wire \data_shift[0][0]_i_2_n_0 ;
  wire \data_shift[0][0]_i_3_n_0 ;
  wire \data_shift[0][0]_i_4_n_0 ;
  wire \data_shift[0][0]_i_5_n_0 ;
  wire \data_shift[0][0]_i_6_n_0 ;
  wire \data_shift[0][0]_i_7_n_0 ;
  wire \data_shift[0][1]_i_1_n_0 ;
  wire \data_shift[0][1]_i_2_n_0 ;
  wire \data_shift[0][2]_i_10_n_0 ;
  wire \data_shift[0][2]_i_11_n_0 ;
  wire \data_shift[0][2]_i_12_n_0 ;
  wire \data_shift[0][2]_i_13_n_0 ;
  wire \data_shift[0][2]_i_14_n_0 ;
  wire \data_shift[0][2]_i_15_n_0 ;
  wire \data_shift[0][2]_i_1_n_0 ;
  wire \data_shift[0][2]_i_2_n_0 ;
  wire \data_shift[0][2]_i_3_n_0 ;
  wire \data_shift[0][2]_i_4_n_0 ;
  wire \data_shift[0][2]_i_5_n_0 ;
  wire \data_shift[0][2]_i_6_n_0 ;
  wire \data_shift[0][2]_i_7_n_0 ;
  wire \data_shift[0][2]_i_8_n_0 ;
  wire \data_shift[0][2]_i_9_n_0 ;
  wire \data_shift[0][3]_i_10_n_0 ;
  wire \data_shift[0][3]_i_11_n_0 ;
  wire \data_shift[0][3]_i_12_n_0 ;
  wire \data_shift[0][3]_i_13_n_0 ;
  wire \data_shift[0][3]_i_3_n_0 ;
  wire \data_shift[0][3]_i_4_n_0 ;
  wire \data_shift[0][3]_i_5_n_0 ;
  wire \data_shift[0][3]_i_6_n_0 ;
  wire \data_shift[0][3]_i_7_n_0 ;
  wire \data_shift[0][3]_i_8_n_0 ;
  wire \data_shift[0][3]_i_9_n_0 ;
  wire \data_shift[1][0]_i_10_n_0 ;
  wire \data_shift[1][0]_i_11_n_0 ;
  wire \data_shift[1][0]_i_1_n_0 ;
  wire \data_shift[1][0]_i_2_n_0 ;
  wire \data_shift[1][0]_i_3_n_0 ;
  wire \data_shift[1][0]_i_4_n_0 ;
  wire \data_shift[1][0]_i_5_n_0 ;
  wire \data_shift[1][0]_i_6_n_0 ;
  wire \data_shift[1][0]_i_7_n_0 ;
  wire \data_shift[1][0]_i_8_n_0 ;
  wire \data_shift[1][0]_i_9_n_0 ;
  wire \data_shift[1][1]_i_1_n_0 ;
  wire \data_shift[1][2]_i_10_n_0 ;
  wire \data_shift[1][2]_i_11_n_0 ;
  wire \data_shift[1][2]_i_12_n_0 ;
  wire \data_shift[1][2]_i_1_n_0 ;
  wire \data_shift[1][2]_i_2_n_0 ;
  wire \data_shift[1][2]_i_3_n_0 ;
  wire \data_shift[1][2]_i_4_n_0 ;
  wire \data_shift[1][2]_i_5_n_0 ;
  wire \data_shift[1][2]_i_6_n_0 ;
  wire \data_shift[1][2]_i_7_n_0 ;
  wire \data_shift[1][2]_i_8_n_0 ;
  wire \data_shift[1][2]_i_9_n_0 ;
  wire \data_shift[1][3]_i_1_n_0 ;
  wire \data_shift[1][3]_i_2_n_0 ;
  wire \data_shift[1][3]_i_3_n_0 ;
  wire \data_shift[1][3]_i_4_n_0 ;
  wire \data_shift[1]_0 ;
  wire [3:0]\data_shift_reg[0] ;
  wire \data_shift_reg[0][0]_0 ;
  wire \data_shift_reg[0][0]_1 ;
  wire [3:0]\data_shift_reg[1] ;
  wire \data_shift_reg[1][0]_0 ;
  wire \data_shift_reg[1][0]_1 ;
  wire \data_sr_reg_n_0_[0][0] ;
  wire \data_sr_reg_n_0_[0][1] ;
  wire \data_sr_reg_n_0_[0][2] ;
  wire \data_sr_reg_n_0_[0][3] ;
  wire \data_sr_reg_n_0_[0][4] ;
  wire \data_sr_reg_n_0_[0][5] ;
  wire \data_sr_reg_n_0_[0][6] ;
  wire \data_sr_reg_n_0_[0][7] ;
  wire \data_sr_reg_n_0_[1][0] ;
  wire \data_sr_reg_n_0_[1][10] ;
  wire \data_sr_reg_n_0_[1][11] ;
  wire \data_sr_reg_n_0_[1][12] ;
  wire \data_sr_reg_n_0_[1][13] ;
  wire \data_sr_reg_n_0_[1][14] ;
  wire \data_sr_reg_n_0_[1][15] ;
  wire \data_sr_reg_n_0_[1][16] ;
  wire \data_sr_reg_n_0_[1][17] ;
  wire \data_sr_reg_n_0_[1][18] ;
  wire \data_sr_reg_n_0_[1][19] ;
  wire \data_sr_reg_n_0_[1][1] ;
  wire \data_sr_reg_n_0_[1][20] ;
  wire \data_sr_reg_n_0_[1][21] ;
  wire \data_sr_reg_n_0_[1][22] ;
  wire \data_sr_reg_n_0_[1][23] ;
  wire \data_sr_reg_n_0_[1][2] ;
  wire \data_sr_reg_n_0_[1][3] ;
  wire \data_sr_reg_n_0_[1][4] ;
  wire \data_sr_reg_n_0_[1][5] ;
  wire \data_sr_reg_n_0_[1][6] ;
  wire \data_sr_reg_n_0_[1][7] ;
  wire \data_sr_reg_n_0_[1][8] ;
  wire \data_sr_reg_n_0_[1][9] ;
  wire [7:0]dl0_datahs;
  wire dl0_rxvalidhs;
  wire [7:0]dl1_datahs;
  wire dl1_rxvalidhs;
  wire err_req_i_1_n_0;
  wire [7:1]p_0_in;
  wire [7:1]p_0_in__0;
  wire p_0_out;
  wire [1:0]p_5_out;
  wire [15:0]p_7_in;
  wire rxbyteclkhs;
  wire \to_cnt[0][0]_i_1_n_0 ;
  wire \to_cnt[0][7]_i_4_n_0 ;
  wire \to_cnt[0]_2 ;
  wire \to_cnt[1][0]_i_1_n_0 ;
  wire \to_cnt[1][7]_i_4_n_0 ;
  wire \to_cnt[1]_1 ;
  wire [7:0]\to_cnt_reg[0]_3 ;
  wire [7:0]\to_cnt_reg[1]_4 ;
  wire [1:0]to_flag;
  wire \to_flag[0]_i_1_n_0 ;
  wire \to_flag[0]_i_2_n_0 ;
  wire \to_flag[0]_i_3_n_0 ;
  wire \to_flag[1]_i_1_n_0 ;
  wire \to_flag[1]_i_2_n_0 ;
  wire \to_flag[1]_i_3_n_0 ;
  wire \transfer[0]_i_1_n_0 ;
  wire \transfer[0]_i_2_n_0 ;
  wire \transfer[0]_i_3_n_0 ;
  wire \transfer[0]_i_4_n_0 ;
  wire \transfer[0]_i_5_n_0 ;
  wire \transfer[0]_i_6_n_0 ;
  wire \transfer[0]_i_7_n_0 ;
  wire \transfer[0]_i_8_n_0 ;
  wire \transfer[1]_i_10_n_0 ;
  wire \transfer[1]_i_11_n_0 ;
  wire \transfer[1]_i_14_n_0 ;
  wire \transfer[1]_i_15_n_0 ;
  wire \transfer[1]_i_1_n_0 ;
  wire \transfer[1]_i_2_n_0 ;
  wire \transfer[1]_i_3_n_0 ;
  wire \transfer[1]_i_4_n_0 ;
  wire \transfer[1]_i_6_n_0 ;
  wire \transfer[1]_i_7_n_0 ;
  wire \transfer[1]_i_8_n_0 ;
  wire \transfer[1]_i_9_n_0 ;
  wire \transfer_reg[0]_0 ;
  wire \transfer_reg[1]_0 ;
  wire trig_req;

  LUT4 #(
    .INIT(16'h4000)) 
    \align_vec[0]_i_2 
       (.I0(D[6]),
        .I1(D[7]),
        .I2(D[3]),
        .I3(D[5]),
        .O(\data_shift_reg[0][0]_1 ));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \align_vec[0]_i_3 
       (.I0(D[2]),
        .I1(D[1]),
        .I2(D[4]),
        .I3(D[0]),
        .O(\data_shift_reg[0][0]_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \align_vec[1]_i_3 
       (.I0(D[10]),
        .I1(D[9]),
        .I2(D[14]),
        .I3(D[8]),
        .O(\data_shift_reg[1][0]_1 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \align_vec[1]_i_4 
       (.I0(D[15]),
        .I1(D[13]),
        .I2(D[11]),
        .I3(D[12]),
        .O(\data_shift_reg[1][0]_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \align_vec[1]_i_8 
       (.I0(align_valid[0]),
        .I1(align_valid[1]),
        .O(\transfer_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[0]_i_1 
       (.I0(\data_dl[3]_i_2_n_0 ),
        .I1(\data_dl[1]_i_2_n_0 ),
        .I2(\data_shift_reg[0] [0]),
        .I3(\data_dl[2]_i_2_n_0 ),
        .I4(\data_shift_reg[0] [1]),
        .I5(\data_dl[0]_i_2_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[0]_i_2 
       (.I0(\data_dly_reg[0] [12]),
        .I1(\data_dly_reg[0] [4]),
        .I2(\data_shift_reg[0] [2]),
        .I3(\data_dly_reg[0] [8]),
        .I4(\data_shift_reg[0] [3]),
        .I5(\data_dly_reg[0] [0]),
        .O(\data_dl[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[10]_i_1 
       (.I0(\data_dl[13]_i_2_n_0 ),
        .I1(\data_dl[11]_i_2_n_0 ),
        .I2(\data_shift_reg[1] [0]),
        .I3(\data_dl[12]_i_2_n_0 ),
        .I4(\data_shift_reg[1] [1]),
        .I5(\data_dl[10]_i_2_n_0 ),
        .O(D[10]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[10]_i_2 
       (.I0(\data_dly_reg[1] [14]),
        .I1(\data_dly_reg[1] [6]),
        .I2(\data_shift_reg[1] [2]),
        .I3(\data_dly_reg[1] [10]),
        .I4(\data_shift_reg[1] [3]),
        .I5(\data_dly_reg[1] [2]),
        .O(\data_dl[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[11]_i_1 
       (.I0(\data_dl[14]_i_2_n_0 ),
        .I1(\data_dl[12]_i_2_n_0 ),
        .I2(\data_shift_reg[1] [0]),
        .I3(\data_dl[13]_i_2_n_0 ),
        .I4(\data_shift_reg[1] [1]),
        .I5(\data_dl[11]_i_2_n_0 ),
        .O(D[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[11]_i_2 
       (.I0(\data_dly_reg[1] [15]),
        .I1(\data_dly_reg[1] [7]),
        .I2(\data_shift_reg[1] [2]),
        .I3(\data_dly_reg[1] [11]),
        .I4(\data_shift_reg[1] [3]),
        .I5(\data_dly_reg[1] [3]),
        .O(\data_dl[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[12]_i_1 
       (.I0(\data_dl[15]_i_5_n_0 ),
        .I1(\data_dl[13]_i_2_n_0 ),
        .I2(\data_shift_reg[1] [0]),
        .I3(\data_dl[14]_i_2_n_0 ),
        .I4(\data_shift_reg[1] [1]),
        .I5(\data_dl[12]_i_2_n_0 ),
        .O(D[12]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[12]_i_2 
       (.I0(\data_dly_reg[1] [0]),
        .I1(\data_dly_reg[1] [8]),
        .I2(\data_shift_reg[1] [2]),
        .I3(\data_dly_reg[1] [12]),
        .I4(\data_shift_reg[1] [3]),
        .I5(\data_dly_reg[1] [4]),
        .O(\data_dl[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[13]_i_1 
       (.I0(\data_dl[15]_i_3_n_0 ),
        .I1(\data_dl[14]_i_2_n_0 ),
        .I2(\data_shift_reg[1] [0]),
        .I3(\data_dl[15]_i_5_n_0 ),
        .I4(\data_shift_reg[1] [1]),
        .I5(\data_dl[13]_i_2_n_0 ),
        .O(D[13]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[13]_i_2 
       (.I0(\data_dly_reg[1] [1]),
        .I1(\data_dly_reg[1] [9]),
        .I2(\data_shift_reg[1] [2]),
        .I3(\data_dly_reg[1] [13]),
        .I4(\data_shift_reg[1] [3]),
        .I5(\data_dly_reg[1] [5]),
        .O(\data_dl[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[14]_i_1 
       (.I0(\data_dl[15]_i_4_n_0 ),
        .I1(\data_dl[15]_i_5_n_0 ),
        .I2(\data_shift_reg[1] [0]),
        .I3(\data_dl[15]_i_3_n_0 ),
        .I4(\data_shift_reg[1] [1]),
        .I5(\data_dl[14]_i_2_n_0 ),
        .O(D[14]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[14]_i_2 
       (.I0(\data_dly_reg[1] [2]),
        .I1(\data_dly_reg[1] [10]),
        .I2(\data_shift_reg[1] [2]),
        .I3(\data_dly_reg[1] [14]),
        .I4(\data_shift_reg[1] [3]),
        .I5(\data_dly_reg[1] [6]),
        .O(\data_dl[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[15]_i_1 
       (.I0(\data_dl[15]_i_2_n_0 ),
        .I1(\data_dl[15]_i_3_n_0 ),
        .I2(\data_shift_reg[1] [0]),
        .I3(\data_dl[15]_i_4_n_0 ),
        .I4(\data_shift_reg[1] [1]),
        .I5(\data_dl[15]_i_5_n_0 ),
        .O(D[15]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[15]_i_2 
       (.I0(\data_dly_reg[1] [6]),
        .I1(\data_dly_reg[1] [14]),
        .I2(\data_shift_reg[1] [2]),
        .I3(\data_dly_reg[1] [2]),
        .I4(\data_shift_reg[1] [3]),
        .I5(\data_dly_reg[1] [10]),
        .O(\data_dl[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[15]_i_3 
       (.I0(\data_dly_reg[1] [4]),
        .I1(\data_dly_reg[1] [12]),
        .I2(\data_shift_reg[1] [2]),
        .I3(\data_dly_reg[1] [0]),
        .I4(\data_shift_reg[1] [3]),
        .I5(\data_dly_reg[1] [8]),
        .O(\data_dl[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[15]_i_4 
       (.I0(\data_dly_reg[1] [5]),
        .I1(\data_dly_reg[1] [13]),
        .I2(\data_shift_reg[1] [2]),
        .I3(\data_dly_reg[1] [1]),
        .I4(\data_shift_reg[1] [3]),
        .I5(\data_dly_reg[1] [9]),
        .O(\data_dl[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[15]_i_5 
       (.I0(\data_dly_reg[1] [3]),
        .I1(\data_dly_reg[1] [11]),
        .I2(\data_shift_reg[1] [2]),
        .I3(\data_dly_reg[1] [15]),
        .I4(\data_shift_reg[1] [3]),
        .I5(\data_dly_reg[1] [7]),
        .O(\data_dl[15]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[1]_i_1 
       (.I0(\data_dl[4]_i_2_n_0 ),
        .I1(\data_dl[2]_i_2_n_0 ),
        .I2(\data_shift_reg[0] [0]),
        .I3(\data_dl[3]_i_2_n_0 ),
        .I4(\data_shift_reg[0] [1]),
        .I5(\data_dl[1]_i_2_n_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[1]_i_2 
       (.I0(\data_dly_reg[0] [13]),
        .I1(\data_dly_reg[0] [5]),
        .I2(\data_shift_reg[0] [2]),
        .I3(\data_dly_reg[0] [9]),
        .I4(\data_shift_reg[0] [3]),
        .I5(\data_dly_reg[0] [1]),
        .O(\data_dl[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[2]_i_1 
       (.I0(\data_dl[5]_i_2_n_0 ),
        .I1(\data_dl[3]_i_2_n_0 ),
        .I2(\data_shift_reg[0] [0]),
        .I3(\data_dl[4]_i_2_n_0 ),
        .I4(\data_shift_reg[0] [1]),
        .I5(\data_dl[2]_i_2_n_0 ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[2]_i_2 
       (.I0(\data_dly_reg[0] [14]),
        .I1(\data_dly_reg[0] [6]),
        .I2(\data_shift_reg[0] [2]),
        .I3(\data_dly_reg[0] [10]),
        .I4(\data_shift_reg[0] [3]),
        .I5(\data_dly_reg[0] [2]),
        .O(\data_dl[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[3]_i_1 
       (.I0(\data_dl[6]_i_2_n_0 ),
        .I1(\data_dl[4]_i_2_n_0 ),
        .I2(\data_shift_reg[0] [0]),
        .I3(\data_dl[5]_i_2_n_0 ),
        .I4(\data_shift_reg[0] [1]),
        .I5(\data_dl[3]_i_2_n_0 ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[3]_i_2 
       (.I0(\data_dly_reg[0] [15]),
        .I1(\data_dly_reg[0] [7]),
        .I2(\data_shift_reg[0] [2]),
        .I3(\data_dly_reg[0] [11]),
        .I4(\data_shift_reg[0] [3]),
        .I5(\data_dly_reg[0] [3]),
        .O(\data_dl[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[4]_i_1 
       (.I0(\data_dl[7]_i_5_n_0 ),
        .I1(\data_dl[5]_i_2_n_0 ),
        .I2(\data_shift_reg[0] [0]),
        .I3(\data_dl[6]_i_2_n_0 ),
        .I4(\data_shift_reg[0] [1]),
        .I5(\data_dl[4]_i_2_n_0 ),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[4]_i_2 
       (.I0(\data_dly_reg[0] [0]),
        .I1(\data_dly_reg[0] [8]),
        .I2(\data_shift_reg[0] [2]),
        .I3(\data_dly_reg[0] [12]),
        .I4(\data_shift_reg[0] [3]),
        .I5(\data_dly_reg[0] [4]),
        .O(\data_dl[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[5]_i_1 
       (.I0(\data_dl[7]_i_3_n_0 ),
        .I1(\data_dl[6]_i_2_n_0 ),
        .I2(\data_shift_reg[0] [0]),
        .I3(\data_dl[7]_i_5_n_0 ),
        .I4(\data_shift_reg[0] [1]),
        .I5(\data_dl[5]_i_2_n_0 ),
        .O(D[5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[5]_i_2 
       (.I0(\data_dly_reg[0] [1]),
        .I1(\data_dly_reg[0] [9]),
        .I2(\data_shift_reg[0] [2]),
        .I3(\data_dly_reg[0] [13]),
        .I4(\data_shift_reg[0] [3]),
        .I5(\data_dly_reg[0] [5]),
        .O(\data_dl[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[6]_i_1 
       (.I0(\data_dl[7]_i_4_n_0 ),
        .I1(\data_dl[7]_i_5_n_0 ),
        .I2(\data_shift_reg[0] [0]),
        .I3(\data_dl[7]_i_3_n_0 ),
        .I4(\data_shift_reg[0] [1]),
        .I5(\data_dl[6]_i_2_n_0 ),
        .O(D[6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[6]_i_2 
       (.I0(\data_dly_reg[0] [2]),
        .I1(\data_dly_reg[0] [10]),
        .I2(\data_shift_reg[0] [2]),
        .I3(\data_dly_reg[0] [14]),
        .I4(\data_shift_reg[0] [3]),
        .I5(\data_dly_reg[0] [6]),
        .O(\data_dl[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[7]_i_1 
       (.I0(\data_dl[7]_i_2_n_0 ),
        .I1(\data_dl[7]_i_3_n_0 ),
        .I2(\data_shift_reg[0] [0]),
        .I3(\data_dl[7]_i_4_n_0 ),
        .I4(\data_shift_reg[0] [1]),
        .I5(\data_dl[7]_i_5_n_0 ),
        .O(D[7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[7]_i_2 
       (.I0(\data_dly_reg[0] [6]),
        .I1(\data_dly_reg[0] [14]),
        .I2(\data_shift_reg[0] [2]),
        .I3(\data_dly_reg[0] [2]),
        .I4(\data_shift_reg[0] [3]),
        .I5(\data_dly_reg[0] [10]),
        .O(\data_dl[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[7]_i_3 
       (.I0(\data_dly_reg[0] [4]),
        .I1(\data_dly_reg[0] [12]),
        .I2(\data_shift_reg[0] [2]),
        .I3(\data_dly_reg[0] [0]),
        .I4(\data_shift_reg[0] [3]),
        .I5(\data_dly_reg[0] [8]),
        .O(\data_dl[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[7]_i_4 
       (.I0(\data_dly_reg[0] [5]),
        .I1(\data_dly_reg[0] [13]),
        .I2(\data_shift_reg[0] [2]),
        .I3(\data_dly_reg[0] [1]),
        .I4(\data_shift_reg[0] [3]),
        .I5(\data_dly_reg[0] [9]),
        .O(\data_dl[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[7]_i_5 
       (.I0(\data_dly_reg[0] [3]),
        .I1(\data_dly_reg[0] [11]),
        .I2(\data_shift_reg[0] [2]),
        .I3(\data_dly_reg[0] [15]),
        .I4(\data_shift_reg[0] [3]),
        .I5(\data_dly_reg[0] [7]),
        .O(\data_dl[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[8]_i_1 
       (.I0(\data_dl[11]_i_2_n_0 ),
        .I1(\data_dl[9]_i_2_n_0 ),
        .I2(\data_shift_reg[1] [0]),
        .I3(\data_dl[10]_i_2_n_0 ),
        .I4(\data_shift_reg[1] [1]),
        .I5(\data_dl[8]_i_2_n_0 ),
        .O(D[8]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[8]_i_2 
       (.I0(\data_dly_reg[1] [12]),
        .I1(\data_dly_reg[1] [4]),
        .I2(\data_shift_reg[1] [2]),
        .I3(\data_dly_reg[1] [8]),
        .I4(\data_shift_reg[1] [3]),
        .I5(\data_dly_reg[1] [0]),
        .O(\data_dl[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[9]_i_1 
       (.I0(\data_dl[12]_i_2_n_0 ),
        .I1(\data_dl[10]_i_2_n_0 ),
        .I2(\data_shift_reg[1] [0]),
        .I3(\data_dl[11]_i_2_n_0 ),
        .I4(\data_shift_reg[1] [1]),
        .I5(\data_dl[9]_i_2_n_0 ),
        .O(D[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \data_dl[9]_i_2 
       (.I0(\data_dly_reg[1] [13]),
        .I1(\data_dly_reg[1] [5]),
        .I2(\data_shift_reg[1] [2]),
        .I3(\data_dly_reg[1] [9]),
        .I4(\data_shift_reg[1] [3]),
        .I5(\data_dly_reg[1] [1]),
        .O(\data_dl[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[0][0] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(p_7_in[0]),
        .Q(\data_dly_reg[0] [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[0][10] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(p_7_in[10]),
        .Q(\data_dly_reg[0] [10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[0][11] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(p_7_in[11]),
        .Q(\data_dly_reg[0] [11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[0][12] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(p_7_in[12]),
        .Q(\data_dly_reg[0] [12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[0][13] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(p_7_in[13]),
        .Q(\data_dly_reg[0] [13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[0][14] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(p_7_in[14]),
        .Q(\data_dly_reg[0] [14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[0][15] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(p_7_in[15]),
        .Q(\data_dly_reg[0] [15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[0][1] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(p_7_in[1]),
        .Q(\data_dly_reg[0] [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[0][2] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(p_7_in[2]),
        .Q(\data_dly_reg[0] [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[0][3] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(p_7_in[3]),
        .Q(\data_dly_reg[0] [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[0][4] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(p_7_in[4]),
        .Q(\data_dly_reg[0] [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[0][5] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(p_7_in[5]),
        .Q(\data_dly_reg[0] [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[0][6] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(p_7_in[6]),
        .Q(\data_dly_reg[0] [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[0][7] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(p_7_in[7]),
        .Q(\data_dly_reg[0] [7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[0][8] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(p_7_in[8]),
        .Q(\data_dly_reg[0] [8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[0][9] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(p_7_in[9]),
        .Q(\data_dly_reg[0] [9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[1][0] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_sr_reg_n_0_[1][8] ),
        .Q(\data_dly_reg[1] [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[1][10] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_sr_reg_n_0_[1][18] ),
        .Q(\data_dly_reg[1] [10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[1][11] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_sr_reg_n_0_[1][19] ),
        .Q(\data_dly_reg[1] [11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[1][12] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_sr_reg_n_0_[1][20] ),
        .Q(\data_dly_reg[1] [12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[1][13] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_sr_reg_n_0_[1][21] ),
        .Q(\data_dly_reg[1] [13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[1][14] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_sr_reg_n_0_[1][22] ),
        .Q(\data_dly_reg[1] [14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[1][15] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_sr_reg_n_0_[1][23] ),
        .Q(\data_dly_reg[1] [15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[1][1] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_sr_reg_n_0_[1][9] ),
        .Q(\data_dly_reg[1] [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[1][2] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_sr_reg_n_0_[1][10] ),
        .Q(\data_dly_reg[1] [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[1][3] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_sr_reg_n_0_[1][11] ),
        .Q(\data_dly_reg[1] [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[1][4] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_sr_reg_n_0_[1][12] ),
        .Q(\data_dly_reg[1] [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[1][5] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_sr_reg_n_0_[1][13] ),
        .Q(\data_dly_reg[1] [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[1][6] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_sr_reg_n_0_[1][14] ),
        .Q(\data_dly_reg[1] [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[1][7] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_sr_reg_n_0_[1][15] ),
        .Q(\data_dly_reg[1] [7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[1][8] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_sr_reg_n_0_[1][16] ),
        .Q(\data_dly_reg[1] [8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dly_reg[1][9] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_sr_reg_n_0_[1][17] ),
        .Q(\data_dly_reg[1] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFFEFEE)) 
    \data_shift[0][0]_i_1 
       (.I0(\data_shift[0][2]_i_2_n_0 ),
        .I1(\data_shift[0][0]_i_2_n_0 ),
        .I2(\data_shift[0][0]_i_3_n_0 ),
        .I3(\data_shift[0][0]_i_4_n_0 ),
        .I4(\data_shift[0][2]_i_4_n_0 ),
        .O(\data_shift[0][0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \data_shift[0][0]_i_2 
       (.I0(\data_shift[0][0]_i_5_n_0 ),
        .I1(\data_shift[0][0]_i_6_n_0 ),
        .I2(\transfer[0]_i_6_n_0 ),
        .I3(\data_sr_reg_n_0_[0][7] ),
        .I4(p_7_in[0]),
        .I5(\data_shift[0][2]_i_11_n_0 ),
        .O(\data_shift[0][0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \data_shift[0][0]_i_3 
       (.I0(p_7_in[6]),
        .I1(p_7_in[3]),
        .I2(p_7_in[8]),
        .I3(p_7_in[7]),
        .O(\data_shift[0][0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000020000)) 
    \data_shift[0][0]_i_4 
       (.I0(\data_shift[0][2]_i_13_n_0 ),
        .I1(\data_shift[0][0]_i_7_n_0 ),
        .I2(\data_sr_reg_n_0_[0][1] ),
        .I3(\data_sr_reg_n_0_[0][2] ),
        .I4(p_7_in[4]),
        .I5(\data_sr_reg_n_0_[0][4] ),
        .O(\data_shift[0][0]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \data_shift[0][0]_i_5 
       (.I0(p_7_in[8]),
        .I1(\data_sr_reg_n_0_[0][5] ),
        .I2(p_7_in[10]),
        .I3(p_7_in[5]),
        .O(\data_shift[0][0]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \data_shift[0][0]_i_6 
       (.I0(p_7_in[9]),
        .I1(\data_sr_reg_n_0_[0][4] ),
        .I2(\data_sr_reg_n_0_[0][3] ),
        .I3(\data_sr_reg_n_0_[0][6] ),
        .O(\data_shift[0][0]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \data_shift[0][0]_i_7 
       (.I0(p_7_in[2]),
        .I1(p_7_in[1]),
        .I2(p_7_in[5]),
        .I3(\data_sr_reg_n_0_[0][3] ),
        .O(\data_shift[0][0]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \data_shift[0][1]_i_1 
       (.I0(\data_shift[0][1]_i_2_n_0 ),
        .I1(\transfer[0]_i_3_n_0 ),
        .O(\data_shift[0][1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00010000)) 
    \data_shift[0][1]_i_2 
       (.I0(p_7_in[7]),
        .I1(p_7_in[6]),
        .I2(p_7_in[4]),
        .I3(p_7_in[5]),
        .I4(\data_shift[0][2]_i_3_n_0 ),
        .I5(\data_shift[0][2]_i_2_n_0 ),
        .O(\data_shift[0][1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFAEFFFF)) 
    \data_shift[0][2]_i_1 
       (.I0(\data_shift[0][2]_i_2_n_0 ),
        .I1(\data_shift[0][2]_i_3_n_0 ),
        .I2(\data_shift[0][3]_i_9_n_0 ),
        .I3(\data_shift[0][2]_i_4_n_0 ),
        .I4(\data_shift[0][2]_i_5_n_0 ),
        .O(\data_shift[0][2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \data_shift[0][2]_i_10 
       (.I0(p_7_in[3]),
        .I1(p_7_in[2]),
        .I2(p_7_in[11]),
        .I3(p_7_in[10]),
        .O(\data_shift[0][2]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \data_shift[0][2]_i_11 
       (.I0(p_7_in[1]),
        .I1(p_7_in[2]),
        .O(\data_shift[0][2]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hFF7F)) 
    \data_shift[0][2]_i_12 
       (.I0(p_7_in[9]),
        .I1(p_7_in[8]),
        .I2(p_7_in[12]),
        .I3(p_7_in[7]),
        .O(\data_shift[0][2]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \data_shift[0][2]_i_13 
       (.I0(\data_sr_reg_n_0_[0][5] ),
        .I1(\data_sr_reg_n_0_[0][6] ),
        .I2(\data_sr_reg_n_0_[0][7] ),
        .I3(p_7_in[0]),
        .O(\data_shift[0][2]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'hFEFF)) 
    \data_shift[0][2]_i_14 
       (.I0(\data_sr_reg_n_0_[0][4] ),
        .I1(\data_sr_reg_n_0_[0][5] ),
        .I2(p_7_in[6]),
        .I3(p_7_in[7]),
        .O(\data_shift[0][2]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \data_shift[0][2]_i_15 
       (.I0(\data_sr_reg_n_0_[0][6] ),
        .I1(\data_sr_reg_n_0_[0][7] ),
        .I2(p_7_in[9]),
        .I3(p_7_in[8]),
        .O(\data_shift[0][2]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    \data_shift[0][2]_i_2 
       (.I0(\data_shift[0][2]_i_6_n_0 ),
        .I1(p_7_in[13]),
        .I2(p_7_in[14]),
        .I3(\data_shift[0][2]_i_7_n_0 ),
        .I4(\data_shift[0][2]_i_8_n_0 ),
        .I5(\data_shift[0][2]_i_9_n_0 ),
        .O(\data_shift[0][2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000010000000000)) 
    \data_shift[0][2]_i_3 
       (.I0(\transfer[0]_i_5_n_0 ),
        .I1(\data_shift[0][2]_i_10_n_0 ),
        .I2(p_7_in[8]),
        .I3(p_7_in[9]),
        .I4(p_7_in[12]),
        .I5(p_7_in[13]),
        .O(\data_shift[0][2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \data_shift[0][2]_i_4 
       (.I0(\data_shift[0][2]_i_6_n_0 ),
        .I1(p_7_in[11]),
        .I2(p_7_in[10]),
        .I3(\data_shift[0][2]_i_11_n_0 ),
        .I4(\data_shift[0][2]_i_12_n_0 ),
        .I5(\data_shift[0][2]_i_13_n_0 ),
        .O(\data_shift[0][2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEFFFFFFFFFF)) 
    \data_shift[0][2]_i_5 
       (.I0(\data_shift[0][2]_i_14_n_0 ),
        .I1(\data_shift[0][2]_i_15_n_0 ),
        .I2(p_7_in[5]),
        .I3(p_7_in[11]),
        .I4(p_7_in[4]),
        .I5(\data_shift[0][3]_i_7_n_0 ),
        .O(\data_shift[0][2]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \data_shift[0][2]_i_6 
       (.I0(p_7_in[5]),
        .I1(p_7_in[6]),
        .I2(p_7_in[4]),
        .I3(p_7_in[3]),
        .O(\data_shift[0][2]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \data_shift[0][2]_i_7 
       (.I0(p_7_in[7]),
        .I1(p_7_in[12]),
        .O(\data_shift[0][2]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hFFF7)) 
    \data_shift[0][2]_i_8 
       (.I0(p_7_in[11]),
        .I1(p_7_in[10]),
        .I2(p_7_in[9]),
        .I3(p_7_in[8]),
        .O(\data_shift[0][2]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \data_shift[0][2]_i_9 
       (.I0(\data_sr_reg_n_0_[0][7] ),
        .I1(p_7_in[0]),
        .I2(p_7_in[2]),
        .I3(p_7_in[1]),
        .O(\data_shift[0][2]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFD0FFD0D0D0D0)) 
    \data_shift[0][3]_i_1 
       (.I0(\data_shift[0][3]_i_3_n_0 ),
        .I1(\transfer[1]_i_4_n_0 ),
        .I2(\data_shift[0][3]_i_4_n_0 ),
        .I3(\data_shift[0][3]_i_5_n_0 ),
        .I4(\data_shift[0][2]_i_1_n_0 ),
        .I5(\data_shift[0][3]_i_6_n_0 ),
        .O(\data_shift[1]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
    \data_shift[0][3]_i_10 
       (.I0(\data_sr_reg_n_0_[1][3] ),
        .I1(\data_sr_reg_n_0_[1][2] ),
        .I2(\transfer[1]_i_7_n_0 ),
        .I3(\data_shift[0][3]_i_12_n_0 ),
        .I4(\data_sr_reg_n_0_[1][5] ),
        .I5(\data_sr_reg_n_0_[1][4] ),
        .O(\data_shift[0][3]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \data_shift[0][3]_i_11 
       (.I0(\transfer[0]_i_8_n_0 ),
        .I1(\data_shift[0][3]_i_13_n_0 ),
        .I2(\data_sr_reg_n_0_[0][2] ),
        .I3(p_7_in[2]),
        .I4(\transfer[0]_i_6_n_0 ),
        .I5(\transfer[0]_i_5_n_0 ),
        .O(\data_shift[0][3]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \data_shift[0][3]_i_12 
       (.I0(\data_sr_reg_n_0_[1][17] ),
        .I1(\data_sr_reg_n_0_[1][16] ),
        .O(\data_shift[0][3]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \data_shift[0][3]_i_13 
       (.I0(p_7_in[9]),
        .I1(p_7_in[8]),
        .O(\data_shift[0][3]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    \data_shift[0][3]_i_2 
       (.I0(\data_shift[0][3]_i_7_n_0 ),
        .I1(p_7_in[12]),
        .I2(p_7_in[13]),
        .I3(p_7_in[15]),
        .I4(\data_shift[0][3]_i_8_n_0 ),
        .I5(\data_shift[0][3]_i_9_n_0 ),
        .O(p_0_out));
  LUT5 #(
    .INIT(32'h00000054)) 
    \data_shift[0][3]_i_3 
       (.I0(\data_shift[1][0]_i_2_n_0 ),
        .I1(\data_shift[0][3]_i_10_n_0 ),
        .I2(\transfer[1]_i_6_n_0 ),
        .I3(\data_shift[1][3]_i_1_n_0 ),
        .I4(\data_shift[1][2]_i_2_n_0 ),
        .O(\data_shift[0][3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \data_shift[0][3]_i_4 
       (.I0(dl1_rxvalidhs),
        .I1(align_valid[1]),
        .O(\data_shift[0][3]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00001101)) 
    \data_shift[0][3]_i_5 
       (.I0(\data_shift[0][0]_i_2_n_0 ),
        .I1(\data_shift[0][3]_i_11_n_0 ),
        .I2(\data_shift[0][0]_i_4_n_0 ),
        .I3(\transfer[0]_i_4_n_0 ),
        .I4(p_0_out),
        .O(\data_shift[0][3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \data_shift[0][3]_i_6 
       (.I0(dl0_rxvalidhs),
        .I1(align_valid[0]),
        .O(\data_shift[0][3]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \data_shift[0][3]_i_7 
       (.I0(p_7_in[3]),
        .I1(p_7_in[2]),
        .I2(p_7_in[1]),
        .I3(p_7_in[0]),
        .I4(p_7_in[10]),
        .O(\data_shift[0][3]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \data_shift[0][3]_i_8 
       (.I0(p_7_in[9]),
        .I1(p_7_in[8]),
        .I2(p_7_in[11]),
        .I3(p_7_in[14]),
        .O(\data_shift[0][3]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \data_shift[0][3]_i_9 
       (.I0(p_7_in[7]),
        .I1(p_7_in[6]),
        .I2(p_7_in[4]),
        .I3(p_7_in[5]),
        .O(\data_shift[0][3]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \data_shift[1][0]_i_1 
       (.I0(\data_shift[1][2]_i_3_n_0 ),
        .I1(\data_shift[1][0]_i_2_n_0 ),
        .I2(\data_shift[1][0]_i_3_n_0 ),
        .I3(\data_shift[1][0]_i_4_n_0 ),
        .O(\data_shift[1][0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \data_shift[1][0]_i_10 
       (.I0(\data_sr_reg_n_0_[1][5] ),
        .I1(\data_sr_reg_n_0_[1][6] ),
        .I2(\data_sr_reg_n_0_[1][8] ),
        .I3(\data_sr_reg_n_0_[1][7] ),
        .O(\data_shift[1][0]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \data_shift[1][0]_i_11 
       (.I0(\data_sr_reg_n_0_[1][10] ),
        .I1(\data_sr_reg_n_0_[1][9] ),
        .I2(\data_sr_reg_n_0_[1][17] ),
        .I3(\data_sr_reg_n_0_[1][16] ),
        .O(\data_shift[1][0]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \data_shift[1][0]_i_2 
       (.I0(\data_shift[1][0]_i_5_n_0 ),
        .I1(\data_sr_reg_n_0_[1][12] ),
        .I2(\data_sr_reg_n_0_[1][13] ),
        .I3(\data_shift[1][0]_i_6_n_0 ),
        .I4(\data_shift[1][0]_i_7_n_0 ),
        .I5(\data_shift[1][2]_i_10_n_0 ),
        .O(\data_shift[1][0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    \data_shift[1][0]_i_3 
       (.I0(\transfer[1]_i_7_n_0 ),
        .I1(\data_sr_reg_n_0_[1][12] ),
        .I2(\data_sr_reg_n_0_[1][13] ),
        .I3(\data_shift[1][0]_i_8_n_0 ),
        .I4(\data_shift[1][0]_i_9_n_0 ),
        .I5(\data_shift[1][0]_i_10_n_0 ),
        .O(\data_shift[1][0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    \data_shift[1][0]_i_4 
       (.I0(\data_shift[1][2]_i_7_n_0 ),
        .I1(\data_sr_reg_n_0_[1][19] ),
        .I2(\data_sr_reg_n_0_[1][18] ),
        .I3(\data_shift[1][2]_i_9_n_0 ),
        .I4(\data_shift[1][0]_i_11_n_0 ),
        .I5(\data_shift[1][0]_i_10_n_0 ),
        .O(\data_shift[1][0]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFFF7)) 
    \data_shift[1][0]_i_5 
       (.I0(\data_sr_reg_n_0_[1][14] ),
        .I1(\data_sr_reg_n_0_[1][15] ),
        .I2(\data_sr_reg_n_0_[1][3] ),
        .I3(\data_sr_reg_n_0_[1][4] ),
        .O(\data_shift[1][0]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \data_shift[1][0]_i_6 
       (.I0(\data_sr_reg_n_0_[1][6] ),
        .I1(\data_sr_reg_n_0_[1][5] ),
        .O(\data_shift[1][0]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hFFDF)) 
    \data_shift[1][0]_i_7 
       (.I0(\data_sr_reg_n_0_[1][16] ),
        .I1(\data_sr_reg_n_0_[1][11] ),
        .I2(\data_sr_reg_n_0_[1][18] ),
        .I3(\data_sr_reg_n_0_[1][17] ),
        .O(\data_shift[1][0]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h1000)) 
    \data_shift[1][0]_i_8 
       (.I0(\data_sr_reg_n_0_[1][3] ),
        .I1(\data_sr_reg_n_0_[1][4] ),
        .I2(\data_sr_reg_n_0_[1][16] ),
        .I3(\data_sr_reg_n_0_[1][14] ),
        .O(\data_shift[1][0]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \data_shift[1][0]_i_9 
       (.I0(\data_sr_reg_n_0_[1][2] ),
        .I1(\data_sr_reg_n_0_[1][9] ),
        .I2(\data_sr_reg_n_0_[1][15] ),
        .I3(\data_sr_reg_n_0_[1][1] ),
        .O(\data_shift[1][0]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'hEF)) 
    \data_shift[1][1]_i_1 
       (.I0(\data_shift[1][2]_i_2_n_0 ),
        .I1(\data_shift[1][2]_i_3_n_0 ),
        .I2(\transfer[1]_i_3_n_0 ),
        .O(\data_shift[1][1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \data_shift[1][2]_i_1 
       (.I0(\data_shift[1][2]_i_2_n_0 ),
        .I1(\data_shift[1][2]_i_3_n_0 ),
        .I2(\data_shift[1][2]_i_4_n_0 ),
        .O(\data_shift[1][2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \data_shift[1][2]_i_10 
       (.I0(\data_sr_reg_n_0_[1][8] ),
        .I1(\data_sr_reg_n_0_[1][7] ),
        .I2(\data_sr_reg_n_0_[1][10] ),
        .I3(\data_sr_reg_n_0_[1][9] ),
        .O(\data_shift[1][2]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \data_shift[1][2]_i_11 
       (.I0(\data_sr_reg_n_0_[1][4] ),
        .I1(\data_sr_reg_n_0_[1][5] ),
        .I2(\data_sr_reg_n_0_[1][6] ),
        .I3(\data_sr_reg_n_0_[1][7] ),
        .O(\data_shift[1][2]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'h08000000)) 
    \data_shift[1][2]_i_12 
       (.I0(\data_sr_reg_n_0_[1][15] ),
        .I1(\data_sr_reg_n_0_[1][19] ),
        .I2(\data_sr_reg_n_0_[1][18] ),
        .I3(\data_sr_reg_n_0_[1][17] ),
        .I4(\data_sr_reg_n_0_[1][16] ),
        .O(\data_shift[1][2]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000020000)) 
    \data_shift[1][2]_i_2 
       (.I0(\data_shift[1][2]_i_5_n_0 ),
        .I1(\data_shift[1][3]_i_3_n_0 ),
        .I2(\data_sr_reg_n_0_[1][15] ),
        .I3(\data_sr_reg_n_0_[1][20] ),
        .I4(\data_sr_reg_n_0_[1][21] ),
        .I5(\data_shift[1][2]_i_6_n_0 ),
        .O(\data_shift[1][2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000002000000)) 
    \data_shift[1][2]_i_3 
       (.I0(\data_shift[1][2]_i_7_n_0 ),
        .I1(\data_shift[1][2]_i_8_n_0 ),
        .I2(\data_shift[1][2]_i_9_n_0 ),
        .I3(\data_sr_reg_n_0_[1][18] ),
        .I4(\data_sr_reg_n_0_[1][19] ),
        .I5(\data_shift[1][2]_i_10_n_0 ),
        .O(\data_shift[1][2]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF0100)) 
    \data_shift[1][2]_i_4 
       (.I0(\data_shift[1][2]_i_11_n_0 ),
        .I1(\data_shift[1][3]_i_4_n_0 ),
        .I2(\data_shift[1][3]_i_3_n_0 ),
        .I3(\data_shift[1][2]_i_12_n_0 ),
        .I4(\data_shift[1][0]_i_4_n_0 ),
        .O(\data_shift[1][2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    \data_shift[1][2]_i_5 
       (.I0(\data_sr_reg_n_0_[1][16] ),
        .I1(\data_sr_reg_n_0_[1][17] ),
        .I2(\data_sr_reg_n_0_[1][18] ),
        .I3(\data_sr_reg_n_0_[1][19] ),
        .I4(\data_sr_reg_n_0_[1][11] ),
        .I5(\data_sr_reg_n_0_[1][10] ),
        .O(\data_shift[1][2]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \data_shift[1][2]_i_6 
       (.I0(\data_sr_reg_n_0_[1][6] ),
        .I1(\data_sr_reg_n_0_[1][7] ),
        .I2(\data_sr_reg_n_0_[1][8] ),
        .I3(\data_sr_reg_n_0_[1][9] ),
        .O(\data_shift[1][2]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \data_shift[1][2]_i_7 
       (.I0(\data_sr_reg_n_0_[1][11] ),
        .I1(\data_sr_reg_n_0_[1][13] ),
        .I2(\data_sr_reg_n_0_[1][12] ),
        .I3(\data_sr_reg_n_0_[1][14] ),
        .O(\data_shift[1][2]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \data_shift[1][2]_i_8 
       (.I0(\data_sr_reg_n_0_[1][17] ),
        .I1(\data_sr_reg_n_0_[1][16] ),
        .I2(\data_sr_reg_n_0_[1][22] ),
        .I3(\data_sr_reg_n_0_[1][21] ),
        .O(\data_shift[1][2]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \data_shift[1][2]_i_9 
       (.I0(\data_sr_reg_n_0_[1][15] ),
        .I1(\data_sr_reg_n_0_[1][20] ),
        .O(\data_shift[1][2]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000200000)) 
    \data_shift[1][3]_i_1 
       (.I0(\data_shift[1][3]_i_2_n_0 ),
        .I1(\data_shift[1][3]_i_3_n_0 ),
        .I2(\data_sr_reg_n_0_[1][21] ),
        .I3(\data_sr_reg_n_0_[1][18] ),
        .I4(\data_sr_reg_n_0_[1][19] ),
        .I5(\data_shift[1][3]_i_4_n_0 ),
        .O(\data_shift[1][3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000400)) 
    \data_shift[1][3]_i_2 
       (.I0(\data_sr_reg_n_0_[1][22] ),
        .I1(\data_sr_reg_n_0_[1][23] ),
        .I2(\data_sr_reg_n_0_[1][15] ),
        .I3(\data_sr_reg_n_0_[1][20] ),
        .I4(\data_sr_reg_n_0_[1][17] ),
        .I5(\data_sr_reg_n_0_[1][16] ),
        .O(\data_shift[1][3]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \data_shift[1][3]_i_3 
       (.I0(\data_sr_reg_n_0_[1][14] ),
        .I1(\data_sr_reg_n_0_[1][12] ),
        .I2(\data_sr_reg_n_0_[1][13] ),
        .O(\data_shift[1][3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \data_shift[1][3]_i_4 
       (.I0(\data_sr_reg_n_0_[1][10] ),
        .I1(\data_sr_reg_n_0_[1][11] ),
        .I2(\data_sr_reg_n_0_[1][8] ),
        .I3(\data_sr_reg_n_0_[1][9] ),
        .O(\data_shift[1][3]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_shift_reg[0][0] 
       (.C(rxbyteclkhs),
        .CE(\data_shift[1]_0 ),
        .D(\data_shift[0][0]_i_1_n_0 ),
        .Q(\data_shift_reg[0] [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_shift_reg[0][1] 
       (.C(rxbyteclkhs),
        .CE(\data_shift[1]_0 ),
        .D(\data_shift[0][1]_i_1_n_0 ),
        .Q(\data_shift_reg[0] [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_shift_reg[0][2] 
       (.C(rxbyteclkhs),
        .CE(\data_shift[1]_0 ),
        .D(\data_shift[0][2]_i_1_n_0 ),
        .Q(\data_shift_reg[0] [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_shift_reg[0][3] 
       (.C(rxbyteclkhs),
        .CE(\data_shift[1]_0 ),
        .D(p_0_out),
        .Q(\data_shift_reg[0] [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_shift_reg[1][0] 
       (.C(rxbyteclkhs),
        .CE(\data_shift[1]_0 ),
        .D(\data_shift[1][0]_i_1_n_0 ),
        .Q(\data_shift_reg[1] [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_shift_reg[1][1] 
       (.C(rxbyteclkhs),
        .CE(\data_shift[1]_0 ),
        .D(\data_shift[1][1]_i_1_n_0 ),
        .Q(\data_shift_reg[1] [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_shift_reg[1][2] 
       (.C(rxbyteclkhs),
        .CE(\data_shift[1]_0 ),
        .D(\data_shift[1][2]_i_1_n_0 ),
        .Q(\data_shift_reg[1] [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_shift_reg[1][3] 
       (.C(rxbyteclkhs),
        .CE(\data_shift[1]_0 ),
        .D(\data_shift[1][3]_i_1_n_0 ),
        .Q(\data_shift_reg[1] [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][0] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(p_7_in[0]),
        .Q(\data_sr_reg_n_0_[0][0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][10] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(p_7_in[10]),
        .Q(p_7_in[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][11] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(p_7_in[11]),
        .Q(p_7_in[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][12] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(p_7_in[12]),
        .Q(p_7_in[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][13] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(p_7_in[13]),
        .Q(p_7_in[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][14] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(p_7_in[14]),
        .Q(p_7_in[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][15] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(p_7_in[15]),
        .Q(p_7_in[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][16] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(dl0_datahs[0]),
        .Q(p_7_in[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][17] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(dl0_datahs[1]),
        .Q(p_7_in[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][18] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(dl0_datahs[2]),
        .Q(p_7_in[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][19] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(dl0_datahs[3]),
        .Q(p_7_in[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][1] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(p_7_in[1]),
        .Q(\data_sr_reg_n_0_[0][1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][20] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(dl0_datahs[4]),
        .Q(p_7_in[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][21] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(dl0_datahs[5]),
        .Q(p_7_in[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][22] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(dl0_datahs[6]),
        .Q(p_7_in[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][23] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(dl0_datahs[7]),
        .Q(p_7_in[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][2] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(p_7_in[2]),
        .Q(\data_sr_reg_n_0_[0][2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][3] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(p_7_in[3]),
        .Q(\data_sr_reg_n_0_[0][3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][4] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(p_7_in[4]),
        .Q(\data_sr_reg_n_0_[0][4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][5] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(p_7_in[5]),
        .Q(\data_sr_reg_n_0_[0][5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][6] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(p_7_in[6]),
        .Q(\data_sr_reg_n_0_[0][6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][7] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(p_7_in[7]),
        .Q(\data_sr_reg_n_0_[0][7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][8] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(p_7_in[8]),
        .Q(p_7_in[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[0][9] 
       (.C(rxbyteclkhs),
        .CE(dl0_rxvalidhs),
        .D(p_7_in[9]),
        .Q(p_7_in[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][0] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(\data_sr_reg_n_0_[1][8] ),
        .Q(\data_sr_reg_n_0_[1][0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][10] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(\data_sr_reg_n_0_[1][18] ),
        .Q(\data_sr_reg_n_0_[1][10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][11] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(\data_sr_reg_n_0_[1][19] ),
        .Q(\data_sr_reg_n_0_[1][11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][12] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(\data_sr_reg_n_0_[1][20] ),
        .Q(\data_sr_reg_n_0_[1][12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][13] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(\data_sr_reg_n_0_[1][21] ),
        .Q(\data_sr_reg_n_0_[1][13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][14] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(\data_sr_reg_n_0_[1][22] ),
        .Q(\data_sr_reg_n_0_[1][14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][15] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(\data_sr_reg_n_0_[1][23] ),
        .Q(\data_sr_reg_n_0_[1][15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][16] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(dl1_datahs[0]),
        .Q(\data_sr_reg_n_0_[1][16] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][17] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(dl1_datahs[1]),
        .Q(\data_sr_reg_n_0_[1][17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][18] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(dl1_datahs[2]),
        .Q(\data_sr_reg_n_0_[1][18] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][19] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(dl1_datahs[3]),
        .Q(\data_sr_reg_n_0_[1][19] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][1] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(\data_sr_reg_n_0_[1][9] ),
        .Q(\data_sr_reg_n_0_[1][1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][20] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(dl1_datahs[4]),
        .Q(\data_sr_reg_n_0_[1][20] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][21] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(dl1_datahs[5]),
        .Q(\data_sr_reg_n_0_[1][21] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][22] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(dl1_datahs[6]),
        .Q(\data_sr_reg_n_0_[1][22] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][23] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(dl1_datahs[7]),
        .Q(\data_sr_reg_n_0_[1][23] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][2] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(\data_sr_reg_n_0_[1][10] ),
        .Q(\data_sr_reg_n_0_[1][2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][3] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(\data_sr_reg_n_0_[1][11] ),
        .Q(\data_sr_reg_n_0_[1][3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][4] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(\data_sr_reg_n_0_[1][12] ),
        .Q(\data_sr_reg_n_0_[1][4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][5] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(\data_sr_reg_n_0_[1][13] ),
        .Q(\data_sr_reg_n_0_[1][5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][6] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(\data_sr_reg_n_0_[1][14] ),
        .Q(\data_sr_reg_n_0_[1][6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][7] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(\data_sr_reg_n_0_[1][15] ),
        .Q(\data_sr_reg_n_0_[1][7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][8] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(\data_sr_reg_n_0_[1][16] ),
        .Q(\data_sr_reg_n_0_[1][8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_sr_reg[1][9] 
       (.C(rxbyteclkhs),
        .CE(dl1_rxvalidhs),
        .D(\data_sr_reg_n_0_[1][17] ),
        .Q(\data_sr_reg_n_0_[1][9] ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    err_req_i_1
       (.I0(to_flag[1]),
        .I1(to_flag[0]),
        .O(err_req_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    err_req_reg
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(err_req_i_1_n_0),
        .Q(trig_req),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \to_cnt[0][0]_i_1 
       (.I0(\to_cnt_reg[0]_3 [0]),
        .O(\to_cnt[0][0]_i_1_n_0 ));
  (* \PinAttr:I0:HOLD_DETOUR  = "193" *) 
  (* \PinAttr:I1:HOLD_DETOUR  = "191" *) 
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \to_cnt[0][1]_i_1 
       (.I0(\to_cnt_reg[0]_3 [1]),
        .I1(\to_cnt_reg[0]_3 [0]),
        .O(p_0_in[1]));
  (* \PinAttr:I1:HOLD_DETOUR  = "193" *) 
  (* \PinAttr:I2:HOLD_DETOUR  = "191" *) 
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \to_cnt[0][2]_i_1 
       (.I0(\to_cnt_reg[0]_3 [2]),
        .I1(\to_cnt_reg[0]_3 [1]),
        .I2(\to_cnt_reg[0]_3 [0]),
        .O(p_0_in[2]));
  (* \PinAttr:I1:HOLD_DETOUR  = "196" *) 
  (* \PinAttr:I2:HOLD_DETOUR  = "195" *) 
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \to_cnt[0][3]_i_1 
       (.I0(\to_cnt_reg[0]_3 [3]),
        .I1(\to_cnt_reg[0]_3 [0]),
        .I2(\to_cnt_reg[0]_3 [1]),
        .I3(\to_cnt_reg[0]_3 [2]),
        .O(p_0_in[3]));
  (* \PinAttr:I2:HOLD_DETOUR  = "195" *) 
  (* \PinAttr:I3:HOLD_DETOUR  = "196" *) 
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \to_cnt[0][4]_i_1 
       (.I0(\to_cnt_reg[0]_3 [4]),
        .I1(\to_cnt_reg[0]_3 [2]),
        .I2(\to_cnt_reg[0]_3 [1]),
        .I3(\to_cnt_reg[0]_3 [0]),
        .I4(\to_cnt_reg[0]_3 [3]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \to_cnt[0][5]_i_1 
       (.I0(\to_cnt_reg[0]_3 [3]),
        .I1(\to_cnt_reg[0]_3 [0]),
        .I2(\to_cnt_reg[0]_3 [1]),
        .I3(\to_cnt_reg[0]_3 [2]),
        .I4(\to_cnt_reg[0]_3 [4]),
        .I5(\to_cnt_reg[0]_3 [5]),
        .O(p_0_in[5]));
  (* \PinAttr:I0:HOLD_DETOUR  = "193" *) 
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \to_cnt[0][6]_i_1 
       (.I0(\to_cnt_reg[0]_3 [6]),
        .I1(\to_cnt[0][7]_i_4_n_0 ),
        .O(p_0_in[6]));
  LUT6 #(
    .INIT(64'hFFFF00FFFE00FE00)) 
    \to_cnt[0][7]_i_1 
       (.I0(\transfer[0]_i_2_n_0 ),
        .I1(\transfer[0]_i_3_n_0 ),
        .I2(\data_shift[0][2]_i_1_n_0 ),
        .I3(dl0_rxvalidhs),
        .I4(\transfer_reg[1]_0 ),
        .I5(align_valid[0]),
        .O(p_5_out[0]));
  LUT5 #(
    .INIT(32'h04444444)) 
    \to_cnt[0][7]_i_2 
       (.I0(align_valid[0]),
        .I1(dl0_rxvalidhs),
        .I2(\to_cnt_reg[0]_3 [6]),
        .I3(\to_cnt[0][7]_i_4_n_0 ),
        .I4(\to_cnt_reg[0]_3 [7]),
        .O(\to_cnt[0]_2 ));
  (* \PinAttr:I2:HOLD_DETOUR  = "193" *) 
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \to_cnt[0][7]_i_3 
       (.I0(\to_cnt_reg[0]_3 [7]),
        .I1(\to_cnt[0][7]_i_4_n_0 ),
        .I2(\to_cnt_reg[0]_3 [6]),
        .O(p_0_in[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \to_cnt[0][7]_i_4 
       (.I0(\to_cnt_reg[0]_3 [5]),
        .I1(\to_cnt_reg[0]_3 [4]),
        .I2(\to_cnt_reg[0]_3 [2]),
        .I3(\to_cnt_reg[0]_3 [1]),
        .I4(\to_cnt_reg[0]_3 [0]),
        .I5(\to_cnt_reg[0]_3 [3]),
        .O(\to_cnt[0][7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \to_cnt[1][0]_i_1 
       (.I0(\to_cnt_reg[1]_4 [0]),
        .O(\to_cnt[1][0]_i_1_n_0 ));
  (* \PinAttr:I0:HOLD_DETOUR  = "193" *) 
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \to_cnt[1][1]_i_1 
       (.I0(\to_cnt_reg[1]_4 [1]),
        .I1(\to_cnt_reg[1]_4 [0]),
        .O(p_0_in__0[1]));
  (* \PinAttr:I1:HOLD_DETOUR  = "193" *) 
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \to_cnt[1][2]_i_1 
       (.I0(\to_cnt_reg[1]_4 [2]),
        .I1(\to_cnt_reg[1]_4 [1]),
        .I2(\to_cnt_reg[1]_4 [0]),
        .O(p_0_in__0[2]));
  (* \PinAttr:I2:HOLD_DETOUR  = "195" *) 
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \to_cnt[1][3]_i_1 
       (.I0(\to_cnt_reg[1]_4 [3]),
        .I1(\to_cnt_reg[1]_4 [0]),
        .I2(\to_cnt_reg[1]_4 [1]),
        .I3(\to_cnt_reg[1]_4 [2]),
        .O(p_0_in__0[3]));
  (* \PinAttr:I2:HOLD_DETOUR  = "195" *) 
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \to_cnt[1][4]_i_1 
       (.I0(\to_cnt_reg[1]_4 [4]),
        .I1(\to_cnt_reg[1]_4 [2]),
        .I2(\to_cnt_reg[1]_4 [1]),
        .I3(\to_cnt_reg[1]_4 [0]),
        .I4(\to_cnt_reg[1]_4 [3]),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \to_cnt[1][5]_i_1 
       (.I0(\to_cnt_reg[1]_4 [5]),
        .I1(\to_cnt_reg[1]_4 [3]),
        .I2(\to_cnt_reg[1]_4 [0]),
        .I3(\to_cnt_reg[1]_4 [1]),
        .I4(\to_cnt_reg[1]_4 [2]),
        .I5(\to_cnt_reg[1]_4 [4]),
        .O(p_0_in__0[5]));
  (* \PinAttr:I1:HOLD_DETOUR  = "194" *) 
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \to_cnt[1][6]_i_1 
       (.I0(\to_cnt[1][7]_i_4_n_0 ),
        .I1(\to_cnt_reg[1]_4 [6]),
        .O(p_0_in__0[6]));
  LUT6 #(
    .INIT(64'hFFFF00FFFB00FB00)) 
    \to_cnt[1][7]_i_1 
       (.I0(\transfer[1]_i_2_n_0 ),
        .I1(\transfer[1]_i_3_n_0 ),
        .I2(\transfer[1]_i_4_n_0 ),
        .I3(dl1_rxvalidhs),
        .I4(\transfer_reg[1]_0 ),
        .I5(align_valid[1]),
        .O(p_5_out[1]));
  LUT5 #(
    .INIT(32'h44044444)) 
    \to_cnt[1][7]_i_2 
       (.I0(align_valid[1]),
        .I1(dl1_rxvalidhs),
        .I2(\to_cnt_reg[1]_4 [6]),
        .I3(\to_cnt[1][7]_i_4_n_0 ),
        .I4(\to_cnt_reg[1]_4 [7]),
        .O(\to_cnt[1]_1 ));
  (* \PinAttr:I2:HOLD_DETOUR  = "194" *) 
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'h9A)) 
    \to_cnt[1][7]_i_3 
       (.I0(\to_cnt_reg[1]_4 [7]),
        .I1(\to_cnt[1][7]_i_4_n_0 ),
        .I2(\to_cnt_reg[1]_4 [6]),
        .O(p_0_in__0[7]));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \to_cnt[1][7]_i_4 
       (.I0(\to_cnt_reg[1]_4 [4]),
        .I1(\to_cnt_reg[1]_4 [2]),
        .I2(\to_cnt_reg[1]_4 [1]),
        .I3(\to_cnt_reg[1]_4 [0]),
        .I4(\to_cnt_reg[1]_4 [3]),
        .I5(\to_cnt_reg[1]_4 [5]),
        .O(\to_cnt[1][7]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \to_cnt_reg[0][0] 
       (.C(rxbyteclkhs),
        .CE(\to_cnt[0]_2 ),
        .D(\to_cnt[0][0]_i_1_n_0 ),
        .Q(\to_cnt_reg[0]_3 [0]),
        .R(p_5_out[0]));
  FDRE #(
    .INIT(1'b0)) 
    \to_cnt_reg[0][1] 
       (.C(rxbyteclkhs),
        .CE(\to_cnt[0]_2 ),
        .D(p_0_in[1]),
        .Q(\to_cnt_reg[0]_3 [1]),
        .R(p_5_out[0]));
  FDRE #(
    .INIT(1'b0)) 
    \to_cnt_reg[0][2] 
       (.C(rxbyteclkhs),
        .CE(\to_cnt[0]_2 ),
        .D(p_0_in[2]),
        .Q(\to_cnt_reg[0]_3 [2]),
        .R(p_5_out[0]));
  FDRE #(
    .INIT(1'b0)) 
    \to_cnt_reg[0][3] 
       (.C(rxbyteclkhs),
        .CE(\to_cnt[0]_2 ),
        .D(p_0_in[3]),
        .Q(\to_cnt_reg[0]_3 [3]),
        .R(p_5_out[0]));
  FDRE #(
    .INIT(1'b0)) 
    \to_cnt_reg[0][4] 
       (.C(rxbyteclkhs),
        .CE(\to_cnt[0]_2 ),
        .D(p_0_in[4]),
        .Q(\to_cnt_reg[0]_3 [4]),
        .R(p_5_out[0]));
  FDRE #(
    .INIT(1'b0)) 
    \to_cnt_reg[0][5] 
       (.C(rxbyteclkhs),
        .CE(\to_cnt[0]_2 ),
        .D(p_0_in[5]),
        .Q(\to_cnt_reg[0]_3 [5]),
        .R(p_5_out[0]));
  FDRE #(
    .INIT(1'b0)) 
    \to_cnt_reg[0][6] 
       (.C(rxbyteclkhs),
        .CE(\to_cnt[0]_2 ),
        .D(p_0_in[6]),
        .Q(\to_cnt_reg[0]_3 [6]),
        .R(p_5_out[0]));
  FDRE #(
    .INIT(1'b0)) 
    \to_cnt_reg[0][7] 
       (.C(rxbyteclkhs),
        .CE(\to_cnt[0]_2 ),
        .D(p_0_in[7]),
        .Q(\to_cnt_reg[0]_3 [7]),
        .R(p_5_out[0]));
  FDRE #(
    .INIT(1'b0)) 
    \to_cnt_reg[1][0] 
       (.C(rxbyteclkhs),
        .CE(\to_cnt[1]_1 ),
        .D(\to_cnt[1][0]_i_1_n_0 ),
        .Q(\to_cnt_reg[1]_4 [0]),
        .R(p_5_out[1]));
  FDRE #(
    .INIT(1'b0)) 
    \to_cnt_reg[1][1] 
       (.C(rxbyteclkhs),
        .CE(\to_cnt[1]_1 ),
        .D(p_0_in__0[1]),
        .Q(\to_cnt_reg[1]_4 [1]),
        .R(p_5_out[1]));
  FDRE #(
    .INIT(1'b0)) 
    \to_cnt_reg[1][2] 
       (.C(rxbyteclkhs),
        .CE(\to_cnt[1]_1 ),
        .D(p_0_in__0[2]),
        .Q(\to_cnt_reg[1]_4 [2]),
        .R(p_5_out[1]));
  FDRE #(
    .INIT(1'b0)) 
    \to_cnt_reg[1][3] 
       (.C(rxbyteclkhs),
        .CE(\to_cnt[1]_1 ),
        .D(p_0_in__0[3]),
        .Q(\to_cnt_reg[1]_4 [3]),
        .R(p_5_out[1]));
  FDRE #(
    .INIT(1'b0)) 
    \to_cnt_reg[1][4] 
       (.C(rxbyteclkhs),
        .CE(\to_cnt[1]_1 ),
        .D(p_0_in__0[4]),
        .Q(\to_cnt_reg[1]_4 [4]),
        .R(p_5_out[1]));
  FDRE #(
    .INIT(1'b0)) 
    \to_cnt_reg[1][5] 
       (.C(rxbyteclkhs),
        .CE(\to_cnt[1]_1 ),
        .D(p_0_in__0[5]),
        .Q(\to_cnt_reg[1]_4 [5]),
        .R(p_5_out[1]));
  FDRE #(
    .INIT(1'b0)) 
    \to_cnt_reg[1][6] 
       (.C(rxbyteclkhs),
        .CE(\to_cnt[1]_1 ),
        .D(p_0_in__0[6]),
        .Q(\to_cnt_reg[1]_4 [6]),
        .R(p_5_out[1]));
  FDRE #(
    .INIT(1'b0)) 
    \to_cnt_reg[1][7] 
       (.C(rxbyteclkhs),
        .CE(\to_cnt[1]_1 ),
        .D(p_0_in__0[7]),
        .Q(\to_cnt_reg[1]_4 [7]),
        .R(p_5_out[1]));
  LUT6 #(
    .INIT(64'h00000002AAAAAAAA)) 
    \to_flag[0]_i_1 
       (.I0(\to_flag[0]_i_2_n_0 ),
        .I1(p_0_out),
        .I2(\to_flag[0]_i_3_n_0 ),
        .I3(\transfer[0]_i_3_n_0 ),
        .I4(\data_shift[0][2]_i_1_n_0 ),
        .I5(\data_shift[0][3]_i_6_n_0 ),
        .O(\to_flag[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00008000)) 
    \to_flag[0]_i_2 
       (.I0(\to_cnt_reg[0]_3 [7]),
        .I1(\to_cnt[0][7]_i_4_n_0 ),
        .I2(\to_cnt_reg[0]_3 [6]),
        .I3(dl0_rxvalidhs),
        .I4(align_valid[0]),
        .I5(to_flag[0]),
        .O(\to_flag[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0008200800002000)) 
    \to_flag[0]_i_3 
       (.I0(\data_shift[0][0]_i_4_n_0 ),
        .I1(p_7_in[6]),
        .I2(p_7_in[7]),
        .I3(p_7_in[3]),
        .I4(\data_sr_reg_n_0_[0][0] ),
        .I5(p_7_in[8]),
        .O(\to_flag[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000020AAAAAAAA)) 
    \to_flag[1]_i_1 
       (.I0(\to_flag[1]_i_2_n_0 ),
        .I1(\transfer[1]_i_2_n_0 ),
        .I2(\transfer[1]_i_3_n_0 ),
        .I3(\to_flag[1]_i_3_n_0 ),
        .I4(\data_shift[1][2]_i_4_n_0 ),
        .I5(\data_shift[0][3]_i_4_n_0 ),
        .O(\to_flag[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00002000)) 
    \to_flag[1]_i_2 
       (.I0(\to_cnt_reg[1]_4 [7]),
        .I1(\to_cnt[1][7]_i_4_n_0 ),
        .I2(\to_cnt_reg[1]_4 [6]),
        .I3(dl1_rxvalidhs),
        .I4(align_valid[1]),
        .I5(to_flag[1]),
        .O(\to_flag[1]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFAE)) 
    \to_flag[1]_i_3 
       (.I0(\data_shift[1][2]_i_3_n_0 ),
        .I1(\transfer[1]_i_11_n_0 ),
        .I2(\transfer[1]_i_10_n_0 ),
        .I3(\data_shift[1][0]_i_3_n_0 ),
        .O(\to_flag[1]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \to_flag_reg[0] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\to_flag[0]_i_1_n_0 ),
        .Q(to_flag[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \to_flag_reg[1] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\to_flag[1]_i_1_n_0 ),
        .Q(to_flag[1]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000FF00FE00FE00)) 
    \transfer[0]_i_1 
       (.I0(\transfer[0]_i_2_n_0 ),
        .I1(\transfer[0]_i_3_n_0 ),
        .I2(\data_shift[0][2]_i_1_n_0 ),
        .I3(dl0_rxvalidhs),
        .I4(\transfer_reg[1]_0 ),
        .I5(align_valid[0]),
        .O(\transfer[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \transfer[0]_i_2 
       (.I0(p_0_out),
        .I1(\transfer[0]_i_4_n_0 ),
        .I2(\data_shift[0][0]_i_4_n_0 ),
        .O(\transfer[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFF10)) 
    \transfer[0]_i_3 
       (.I0(\transfer[0]_i_5_n_0 ),
        .I1(\transfer[0]_i_6_n_0 ),
        .I2(\transfer[0]_i_7_n_0 ),
        .I3(\data_shift[0][0]_i_2_n_0 ),
        .O(\transfer[0]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFF5CFFF)) 
    \transfer[0]_i_4 
       (.I0(p_7_in[8]),
        .I1(\data_sr_reg_n_0_[0][0] ),
        .I2(p_7_in[3]),
        .I3(p_7_in[7]),
        .I4(p_7_in[6]),
        .O(\transfer[0]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \transfer[0]_i_5 
       (.I0(p_7_in[0]),
        .I1(p_7_in[1]),
        .I2(\data_sr_reg_n_0_[0][6] ),
        .I3(\data_sr_reg_n_0_[0][7] ),
        .O(\transfer[0]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \transfer[0]_i_6 
       (.I0(p_7_in[4]),
        .I1(p_7_in[3]),
        .I2(p_7_in[7]),
        .I3(p_7_in[6]),
        .O(\transfer[0]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h00000010)) 
    \transfer[0]_i_7 
       (.I0(p_7_in[2]),
        .I1(\data_sr_reg_n_0_[0][2] ),
        .I2(p_7_in[9]),
        .I3(p_7_in[8]),
        .I4(\transfer[0]_i_8_n_0 ),
        .O(\transfer[0]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \transfer[0]_i_8 
       (.I0(\data_sr_reg_n_0_[0][4] ),
        .I1(\data_sr_reg_n_0_[0][5] ),
        .I2(p_7_in[5]),
        .I3(\data_sr_reg_n_0_[0][3] ),
        .O(\transfer[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF00FB00FB00)) 
    \transfer[1]_i_1 
       (.I0(\transfer[1]_i_2_n_0 ),
        .I1(\transfer[1]_i_3_n_0 ),
        .I2(\transfer[1]_i_4_n_0 ),
        .I3(dl1_rxvalidhs),
        .I4(\transfer_reg[1]_0 ),
        .I5(align_valid[1]),
        .O(\transfer[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFEFFFF)) 
    \transfer[1]_i_10 
       (.I0(\data_shift[1][2]_i_11_n_0 ),
        .I1(\data_sr_reg_n_0_[1][1] ),
        .I2(\data_sr_reg_n_0_[1][14] ),
        .I3(\data_sr_reg_n_0_[1][0] ),
        .I4(\data_sr_reg_n_0_[1][11] ),
        .O(\transfer[1]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \transfer[1]_i_11 
       (.I0(\data_sr_reg_n_0_[1][3] ),
        .I1(\data_sr_reg_n_0_[1][2] ),
        .I2(\data_sr_reg_n_0_[1][15] ),
        .I3(\data_sr_reg_n_0_[1][8] ),
        .I4(\transfer[1]_i_14_n_0 ),
        .I5(\transfer[1]_i_15_n_0 ),
        .O(\transfer[1]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \transfer[1]_i_14 
       (.I0(\data_sr_reg_n_0_[1][13] ),
        .I1(\data_sr_reg_n_0_[1][12] ),
        .O(\transfer[1]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \transfer[1]_i_15 
       (.I0(\data_sr_reg_n_0_[1][9] ),
        .I1(\data_sr_reg_n_0_[1][10] ),
        .O(\transfer[1]_i_15_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \transfer[1]_i_2 
       (.I0(\data_shift[1][2]_i_2_n_0 ),
        .I1(\data_shift[1][3]_i_1_n_0 ),
        .O(\transfer[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFFFFFE)) 
    \transfer[1]_i_3 
       (.I0(\transfer[1]_i_6_n_0 ),
        .I1(\data_sr_reg_n_0_[1][3] ),
        .I2(\data_sr_reg_n_0_[1][2] ),
        .I3(\transfer[1]_i_7_n_0 ),
        .I4(\transfer[1]_i_8_n_0 ),
        .I5(\data_shift[1][0]_i_2_n_0 ),
        .O(\transfer[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFFFEFE)) 
    \transfer[1]_i_4 
       (.I0(\data_shift[1][0]_i_4_n_0 ),
        .I1(\transfer[1]_i_9_n_0 ),
        .I2(\data_shift[1][0]_i_3_n_0 ),
        .I3(\transfer[1]_i_10_n_0 ),
        .I4(\transfer[1]_i_11_n_0 ),
        .I5(\data_shift[1][2]_i_3_n_0 ),
        .O(\transfer[1]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hEFFFFFFF)) 
    \transfer[1]_i_6 
       (.I0(\data_shift[1][2]_i_6_n_0 ),
        .I1(\data_sr_reg_n_0_[1][12] ),
        .I2(\data_sr_reg_n_0_[1][13] ),
        .I3(\data_sr_reg_n_0_[1][15] ),
        .I4(\data_sr_reg_n_0_[1][14] ),
        .O(\transfer[1]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \transfer[1]_i_7 
       (.I0(\data_sr_reg_n_0_[1][11] ),
        .I1(\data_sr_reg_n_0_[1][10] ),
        .O(\transfer[1]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hFEFF)) 
    \transfer[1]_i_8 
       (.I0(\data_sr_reg_n_0_[1][4] ),
        .I1(\data_sr_reg_n_0_[1][5] ),
        .I2(\data_sr_reg_n_0_[1][16] ),
        .I3(\data_sr_reg_n_0_[1][17] ),
        .O(\transfer[1]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \transfer[1]_i_9 
       (.I0(\data_shift[1][2]_i_12_n_0 ),
        .I1(\data_sr_reg_n_0_[1][13] ),
        .I2(\data_sr_reg_n_0_[1][12] ),
        .I3(\data_sr_reg_n_0_[1][14] ),
        .I4(\data_shift[1][3]_i_4_n_0 ),
        .I5(\data_shift[1][2]_i_11_n_0 ),
        .O(\transfer[1]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \transfer_reg[0] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\transfer[0]_i_1_n_0 ),
        .Q(align_valid[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \transfer_reg[1] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\transfer[1]_i_1_n_0 ),
        .Q(align_valid[1]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "lane_merge" *) 
module system_csi_to_axis_0_1__lane_merge
   (merge_valid,
    \data_out_reg[0]_0 ,
    resync_out_reg_0,
    \data_out_reg[3]_0 ,
    Q,
    rxbyteclkhs,
    align_valid,
    \align_vec_reg[0]_0 ,
    \align_vec_reg[0]_1 ,
    \transfer_reg[1] ,
    sm_state,
    D,
    \align_vec_reg[1]_0 ,
    \align_vec_reg[1]_1 ,
    \align_vec_reg[0]_2 ,
    \align_vec_reg[0]_3 );
  output merge_valid;
  output \data_out_reg[0]_0 ;
  output resync_out_reg_0;
  output \data_out_reg[3]_0 ;
  output [15:0]Q;
  input rxbyteclkhs;
  input [1:0]align_valid;
  input \align_vec_reg[0]_0 ;
  input \align_vec_reg[0]_1 ;
  input \transfer_reg[1] ;
  input [2:0]sm_state;
  input [15:0]D;
  input \align_vec_reg[1]_0 ;
  input \align_vec_reg[1]_1 ;
  input \align_vec_reg[0]_2 ;
  input \align_vec_reg[0]_3 ;

  wire [15:0]D;
  wire \FSM_sequential_sm_state[1]_i_5_n_0 ;
  wire \FSM_sequential_sm_state[2]_i_4_n_0 ;
  wire \FSM_sequential_sm_state[2]_i_5_n_0 ;
  wire \FSM_sequential_sm_state[2]_i_6_n_0 ;
  wire \FSM_sequential_sm_state[2]_i_7_n_0 ;
  wire [15:0]Q;
  wire [1:0]align_valid;
  wire \align_vec[0]_i_1_n_0 ;
  wire \align_vec[0]_i_4_n_0 ;
  wire \align_vec[1]_i_10_n_0 ;
  wire \align_vec[1]_i_11_n_0 ;
  wire \align_vec[1]_i_1_n_0 ;
  wire \align_vec[1]_i_2_n_0 ;
  wire \align_vec[1]_i_5_n_0 ;
  wire \align_vec[1]_i_6_n_0 ;
  wire \align_vec[1]_i_7_n_0 ;
  wire \align_vec[1]_i_9_n_0 ;
  wire \align_vec_reg[0]_0 ;
  wire \align_vec_reg[0]_1 ;
  wire \align_vec_reg[0]_2 ;
  wire \align_vec_reg[0]_3 ;
  wire \align_vec_reg[1]_0 ;
  wire \align_vec_reg[1]_1 ;
  wire \align_vec_reg_n_0_[0] ;
  wire \align_vec_reg_n_0_[1] ;
  wire [15:0]data_dl;
  wire \data_out[0]_i_1_n_0 ;
  wire \data_out[10]_i_1_n_0 ;
  wire \data_out[11]_i_1_n_0 ;
  wire \data_out[12]_i_1_n_0 ;
  wire \data_out[13]_i_1_n_0 ;
  wire \data_out[14]_i_1_n_0 ;
  wire \data_out[15]_i_1_n_0 ;
  wire \data_out[1]_i_1_n_0 ;
  wire \data_out[2]_i_1_n_0 ;
  wire \data_out[3]_i_1_n_0 ;
  wire \data_out[4]_i_1_n_0 ;
  wire \data_out[5]_i_1_n_0 ;
  wire \data_out[6]_i_1_n_0 ;
  wire \data_out[7]_i_1_n_0 ;
  wire \data_out[8]_i_1_n_0 ;
  wire \data_out[9]_i_1_n_0 ;
  wire \data_out_reg[0]_0 ;
  wire \data_out_reg[3]_0 ;
  wire merge_valid;
  wire resync_out;
  wire resync_out_i_1_n_0;
  wire resync_out_reg_0;
  wire rxbyteclkhs;
  wire [2:0]sm_state;
  wire \sm_state[0]_i_1_n_0 ;
  wire \sm_state[0]_i_2_n_0 ;
  wire \sm_state[1]_i_1_n_0 ;
  wire \sm_state_reg_n_0_[0] ;
  wire \sm_state_reg_n_0_[1] ;
  wire \transfer_reg[1] ;
  wire valid_out_i_1_n_0;

  LUT4 #(
    .INIT(16'h7EFF)) 
    \FSM_sequential_sm_state[1]_i_2 
       (.I0(Q[3]),
        .I1(Q[5]),
        .I2(Q[1]),
        .I3(\FSM_sequential_sm_state[1]_i_5_n_0 ),
        .O(\data_out_reg[3]_0 ));
  LUT5 #(
    .INIT(32'h00000100)) 
    \FSM_sequential_sm_state[1]_i_5 
       (.I0(Q[6]),
        .I1(Q[2]),
        .I2(Q[4]),
        .I3(Q[0]),
        .I4(Q[7]),
        .O(\FSM_sequential_sm_state[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    \FSM_sequential_sm_state[2]_i_3 
       (.I0(\FSM_sequential_sm_state[2]_i_4_n_0 ),
        .I1(\FSM_sequential_sm_state[2]_i_5_n_0 ),
        .I2(\FSM_sequential_sm_state[2]_i_6_n_0 ),
        .I3(\FSM_sequential_sm_state[2]_i_7_n_0 ),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\data_out_reg[0]_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \FSM_sequential_sm_state[2]_i_4 
       (.I0(Q[15]),
        .I1(Q[11]),
        .I2(Q[12]),
        .I3(Q[13]),
        .O(\FSM_sequential_sm_state[2]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \FSM_sequential_sm_state[2]_i_5 
       (.I0(Q[8]),
        .I1(Q[9]),
        .I2(Q[14]),
        .I3(Q[10]),
        .O(\FSM_sequential_sm_state[2]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \FSM_sequential_sm_state[2]_i_6 
       (.I0(Q[7]),
        .I1(Q[3]),
        .I2(Q[4]),
        .I3(Q[5]),
        .O(\FSM_sequential_sm_state[2]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_sm_state[2]_i_7 
       (.I0(Q[2]),
        .I1(Q[6]),
        .O(\FSM_sequential_sm_state[2]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFD0FFFFFFD00000)) 
    \align_vec[0]_i_1 
       (.I0(\align_vec_reg[0]_2 ),
        .I1(\align_vec_reg[0]_3 ),
        .I2(\align_vec[1]_i_5_n_0 ),
        .I3(\align_vec[0]_i_4_n_0 ),
        .I4(\align_vec[1]_i_6_n_0 ),
        .I5(\align_vec_reg_n_0_[0] ),
        .O(\align_vec[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \align_vec[0]_i_4 
       (.I0(align_valid[0]),
        .I1(\sm_state_reg_n_0_[0] ),
        .I2(\sm_state_reg_n_0_[1] ),
        .O(\align_vec[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFEAAFFFFFEAA0000)) 
    \align_vec[1]_i_1 
       (.I0(\align_vec[1]_i_2_n_0 ),
        .I1(\align_vec_reg[1]_0 ),
        .I2(\align_vec_reg[1]_1 ),
        .I3(\align_vec[1]_i_5_n_0 ),
        .I4(\align_vec[1]_i_6_n_0 ),
        .I5(\align_vec_reg_n_0_[1] ),
        .O(\align_vec[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFB0000)) 
    \align_vec[1]_i_10 
       (.I0(\FSM_sequential_sm_state[2]_i_4_n_0 ),
        .I1(\FSM_sequential_sm_state[2]_i_5_n_0 ),
        .I2(\FSM_sequential_sm_state[2]_i_6_n_0 ),
        .I3(\align_vec[1]_i_11_n_0 ),
        .I4(merge_valid),
        .I5(\align_vec_reg[0]_0 ),
        .O(\align_vec[1]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \align_vec[1]_i_11 
       (.I0(Q[6]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(\align_vec[1]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \align_vec[1]_i_2 
       (.I0(align_valid[1]),
        .I1(\sm_state_reg_n_0_[0] ),
        .I2(\sm_state_reg_n_0_[1] ),
        .O(\align_vec[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000AA8A)) 
    \align_vec[1]_i_5 
       (.I0(\align_vec[1]_i_7_n_0 ),
        .I1(\align_vec_reg[0]_0 ),
        .I2(merge_valid),
        .I3(\data_out_reg[0]_0 ),
        .I4(\align_vec_reg[0]_1 ),
        .I5(\align_vec[1]_i_9_n_0 ),
        .O(\align_vec[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0B0F0F0FFFFFFFF0)) 
    \align_vec[1]_i_6 
       (.I0(\align_vec[1]_i_10_n_0 ),
        .I1(\align_vec[1]_i_7_n_0 ),
        .I2(\sm_state_reg_n_0_[0] ),
        .I3(align_valid[1]),
        .I4(align_valid[0]),
        .I5(\sm_state_reg_n_0_[1] ),
        .O(\align_vec[1]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h8002FFFF)) 
    \align_vec[1]_i_7 
       (.I0(\FSM_sequential_sm_state[1]_i_5_n_0 ),
        .I1(Q[1]),
        .I2(Q[5]),
        .I3(Q[3]),
        .I4(\transfer_reg[1] ),
        .O(\align_vec[1]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \align_vec[1]_i_9 
       (.I0(\sm_state_reg_n_0_[1] ),
        .I1(\sm_state_reg_n_0_[0] ),
        .O(\align_vec[1]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \align_vec_reg[0] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\align_vec[0]_i_1_n_0 ),
        .Q(\align_vec_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \align_vec_reg[1] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\align_vec[1]_i_1_n_0 ),
        .Q(\align_vec_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dl_reg[0] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[0]),
        .Q(data_dl[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dl_reg[10] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[10]),
        .Q(data_dl[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dl_reg[11] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[11]),
        .Q(data_dl[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dl_reg[12] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[12]),
        .Q(data_dl[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dl_reg[13] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[13]),
        .Q(data_dl[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dl_reg[14] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[14]),
        .Q(data_dl[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dl_reg[15] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[15]),
        .Q(data_dl[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dl_reg[1] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[1]),
        .Q(data_dl[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dl_reg[2] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[2]),
        .Q(data_dl[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dl_reg[3] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[3]),
        .Q(data_dl[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dl_reg[4] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[4]),
        .Q(data_dl[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dl_reg[5] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[5]),
        .Q(data_dl[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dl_reg[6] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[6]),
        .Q(data_dl[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dl_reg[7] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[7]),
        .Q(data_dl[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dl_reg[8] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[8]),
        .Q(data_dl[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_dl_reg[9] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(D[9]),
        .Q(data_dl[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[0]_i_1 
       (.I0(data_dl[0]),
        .I1(\align_vec_reg_n_0_[0] ),
        .I2(D[0]),
        .O(\data_out[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[10]_i_1 
       (.I0(data_dl[10]),
        .I1(\align_vec_reg_n_0_[1] ),
        .I2(D[10]),
        .O(\data_out[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[11]_i_1 
       (.I0(data_dl[11]),
        .I1(\align_vec_reg_n_0_[1] ),
        .I2(D[11]),
        .O(\data_out[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[12]_i_1 
       (.I0(data_dl[12]),
        .I1(\align_vec_reg_n_0_[1] ),
        .I2(D[12]),
        .O(\data_out[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[13]_i_1 
       (.I0(data_dl[13]),
        .I1(\align_vec_reg_n_0_[1] ),
        .I2(D[13]),
        .O(\data_out[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[14]_i_1 
       (.I0(data_dl[14]),
        .I1(\align_vec_reg_n_0_[1] ),
        .I2(D[14]),
        .O(\data_out[14]_i_1_n_0 ));
  (* \PinAttr:I0:HOLD_DETOUR  = "196" *) 
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[15]_i_1 
       (.I0(data_dl[15]),
        .I1(\align_vec_reg_n_0_[1] ),
        .I2(D[15]),
        .O(\data_out[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[1]_i_1 
       (.I0(data_dl[1]),
        .I1(\align_vec_reg_n_0_[0] ),
        .I2(D[1]),
        .O(\data_out[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[2]_i_1 
       (.I0(data_dl[2]),
        .I1(\align_vec_reg_n_0_[0] ),
        .I2(D[2]),
        .O(\data_out[2]_i_1_n_0 ));
  (* \PinAttr:I0:HOLD_DETOUR  = "195" *) 
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[3]_i_1 
       (.I0(data_dl[3]),
        .I1(\align_vec_reg_n_0_[0] ),
        .I2(D[3]),
        .O(\data_out[3]_i_1_n_0 ));
  (* \PinAttr:I1:HOLD_DETOUR  = "195" *) 
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[4]_i_1 
       (.I0(data_dl[4]),
        .I1(\align_vec_reg_n_0_[0] ),
        .I2(D[4]),
        .O(\data_out[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[5]_i_1 
       (.I0(data_dl[5]),
        .I1(\align_vec_reg_n_0_[0] ),
        .I2(D[5]),
        .O(\data_out[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[6]_i_1 
       (.I0(data_dl[6]),
        .I1(\align_vec_reg_n_0_[0] ),
        .I2(D[6]),
        .O(\data_out[6]_i_1_n_0 ));
  (* \PinAttr:I1:HOLD_DETOUR  = "195" *) 
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[7]_i_1 
       (.I0(data_dl[7]),
        .I1(\align_vec_reg_n_0_[0] ),
        .I2(D[7]),
        .O(\data_out[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[8]_i_1 
       (.I0(data_dl[8]),
        .I1(\align_vec_reg_n_0_[1] ),
        .I2(D[8]),
        .O(\data_out[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[9]_i_1 
       (.I0(data_dl[9]),
        .I1(\align_vec_reg_n_0_[1] ),
        .I2(D[9]),
        .O(\data_out[9]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[0] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_out[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[10] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_out[10]_i_1_n_0 ),
        .Q(Q[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[11] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_out[11]_i_1_n_0 ),
        .Q(Q[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[12] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_out[12]_i_1_n_0 ),
        .Q(Q[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[13] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_out[13]_i_1_n_0 ),
        .Q(Q[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[14] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_out[14]_i_1_n_0 ),
        .Q(Q[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[15] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_out[15]_i_1_n_0 ),
        .Q(Q[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[1] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_out[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[2] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_out[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[3] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_out[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[4] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_out[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[5] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_out[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[6] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_out[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[7] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_out[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[8] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_out[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \data_out_reg[9] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\data_out[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000AAEABFFFAAAA)) 
    resync_out_i_1
       (.I0(resync_out),
        .I1(align_valid[1]),
        .I2(align_valid[0]),
        .I3(\sm_state[0]_i_2_n_0 ),
        .I4(\sm_state_reg_n_0_[0] ),
        .I5(\sm_state_reg_n_0_[1] ),
        .O(resync_out_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    resync_out_reg
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(resync_out_i_1_n_0),
        .Q(resync_out),
        .R(1'b0));
  (* \PinAttr:I4:HOLD_DETOUR  = "193" *) 
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT5 #(
    .INIT(32'hBFF57550)) 
    \sm_state[0]_i_1 
       (.I0(\sm_state_reg_n_0_[1] ),
        .I1(\sm_state[0]_i_2_n_0 ),
        .I2(align_valid[0]),
        .I3(align_valid[1]),
        .I4(\sm_state_reg_n_0_[0] ),
        .O(\sm_state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFDFFFDFFFDFCFDFF)) 
    \sm_state[0]_i_2 
       (.I0(\data_out_reg[3]_0 ),
        .I1(sm_state[1]),
        .I2(sm_state[2]),
        .I3(sm_state[0]),
        .I4(merge_valid),
        .I5(\data_out_reg[0]_0 ),
        .O(\sm_state[0]_i_2_n_0 ));
  (* \PinAttr:I3:HOLD_DETOUR  = "193" *) 
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT4 #(
    .INIT(16'hFD80)) 
    \sm_state[1]_i_1 
       (.I0(\sm_state_reg_n_0_[1] ),
        .I1(align_valid[0]),
        .I2(align_valid[1]),
        .I3(\sm_state_reg_n_0_[0] ),
        .O(\sm_state[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_state_reg[0] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\sm_state[0]_i_1_n_0 ),
        .Q(\sm_state_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_state_reg[1] 
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(\sm_state[1]_i_1_n_0 ),
        .Q(\sm_state_reg_n_0_[1] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFAABAAABAAABA)) 
    \transfer[1]_i_5 
       (.I0(resync_out),
        .I1(\data_out_reg[0]_0 ),
        .I2(merge_valid),
        .I3(\align_vec_reg[0]_0 ),
        .I4(\data_out_reg[3]_0 ),
        .I5(\transfer_reg[1] ),
        .O(resync_out_reg_0));
  LUT6 #(
    .INIT(64'hFDDDDDDD40000000)) 
    valid_out_i_1
       (.I0(\sm_state_reg_n_0_[1] ),
        .I1(\sm_state_reg_n_0_[0] ),
        .I2(align_valid[1]),
        .I3(align_valid[0]),
        .I4(\sm_state[0]_i_2_n_0 ),
        .I5(merge_valid),
        .O(valid_out_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    valid_out_reg
       (.C(rxbyteclkhs),
        .CE(1'b1),
        .D(valid_out_i_1_n_0),
        .Q(merge_valid),
        .R(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "system_dlmb_bram_if_cntlr_0,lmb_bram_if_cntlr,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "lmb_bram_if_cntlr,Vivado 2020.1" *) 
module system_dlmb_bram_if_cntlr_0
   (LMB_Clk,
    LMB_Rst,
    LMB_ABus,
    LMB_WriteDBus,
    LMB_AddrStrobe,
    LMB_ReadStrobe,
    LMB_WriteStrobe,
    LMB_BE,
    Sl_DBus,
    Sl_Ready,
    Sl_Wait,
    Sl_UE,
    Sl_CE,
    BRAM_Rst_A,
    BRAM_Clk_A,
    BRAM_Addr_A,
    BRAM_EN_A,
    BRAM_WEN_A,
    BRAM_Dout_A,
    BRAM_Din_A);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLK.LMB_Clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME CLK.LMB_Clk, ASSOCIATED_BUSIF SLMB:SLMB1:SLMB2:SLMB3, ASSOCIATED_RESET LMB_Rst, FREQ_HZ 200000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1, INSERT_VIP 0" *) input LMB_Clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 RST.LMB_Rst RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME RST.LMB_Rst, POLARITY ACTIVE_HIGH, TYPE INTERCONNECT, INSERT_VIP 0" *) input LMB_Rst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB ABUS" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME SLMB, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_WRITE, PROTOCOL STANDARD" *) input [0:31]LMB_ABus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB WRITEDBUS" *) input [0:31]LMB_WriteDBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB ADDRSTROBE" *) input LMB_AddrStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB READSTROBE" *) input LMB_ReadStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB WRITESTROBE" *) input LMB_WriteStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB BE" *) input [0:3]LMB_BE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB READDBUS" *) output [0:31]Sl_DBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB READY" *) output Sl_Ready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB WAIT" *) output Sl_Wait;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB UE" *) output Sl_UE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB CE" *) output Sl_CE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME BRAM_PORT, MEM_SIZE 8192, MASTER_TYPE BRAM_CTRL, MEM_WIDTH 32, MEM_ECC NONE, READ_LATENCY 1" *) output BRAM_Rst_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT CLK" *) output BRAM_Clk_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT ADDR" *) output [0:31]BRAM_Addr_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT EN" *) output BRAM_EN_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT WE" *) output [0:3]BRAM_WEN_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT DIN" *) output [0:31]BRAM_Dout_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT DOUT" *) input [0:31]BRAM_Din_A;

  wire [0:31]BRAM_Addr_A;
  wire BRAM_Clk_A;
  wire [0:31]BRAM_Din_A;
  wire [0:31]BRAM_Dout_A;
  wire BRAM_EN_A;
  wire [0:3]BRAM_WEN_A;
  wire [0:31]LMB_ABus;
  wire LMB_AddrStrobe;
  wire [0:3]LMB_BE;
  wire LMB_Clk;
  wire LMB_Rst;
  wire [0:31]LMB_WriteDBus;
  wire LMB_WriteStrobe;
  wire [0:31]Sl_DBus;
  wire Sl_Ready;
  wire NLW_U0_BRAM_Rst_A_UNCONNECTED;
  wire NLW_U0_CE_UNCONNECTED;
  wire NLW_U0_Interrupt_UNCONNECTED;
  wire NLW_U0_LMB1_AddrStrobe_UNCONNECTED;
  wire NLW_U0_LMB1_ReadStrobe_UNCONNECTED;
  wire NLW_U0_LMB1_WriteStrobe_UNCONNECTED;
  wire NLW_U0_LMB2_AddrStrobe_UNCONNECTED;
  wire NLW_U0_LMB2_ReadStrobe_UNCONNECTED;
  wire NLW_U0_LMB2_WriteStrobe_UNCONNECTED;
  wire NLW_U0_LMB3_AddrStrobe_UNCONNECTED;
  wire NLW_U0_LMB3_ReadStrobe_UNCONNECTED;
  wire NLW_U0_LMB3_WriteStrobe_UNCONNECTED;
  wire NLW_U0_LMB_ReadStrobe_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_ACLK_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_ARESETN_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_ARREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_ARVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_AWREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_AWVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_BREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_BVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_RREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_RVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_WREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_WVALID_UNCONNECTED;
  wire NLW_U0_Sl1_CE_UNCONNECTED;
  wire NLW_U0_Sl1_Ready_UNCONNECTED;
  wire NLW_U0_Sl1_UE_UNCONNECTED;
  wire NLW_U0_Sl1_Wait_UNCONNECTED;
  wire NLW_U0_Sl2_CE_UNCONNECTED;
  wire NLW_U0_Sl2_Ready_UNCONNECTED;
  wire NLW_U0_Sl2_UE_UNCONNECTED;
  wire NLW_U0_Sl2_Wait_UNCONNECTED;
  wire NLW_U0_Sl3_CE_UNCONNECTED;
  wire NLW_U0_Sl3_Ready_UNCONNECTED;
  wire NLW_U0_Sl3_UE_UNCONNECTED;
  wire NLW_U0_Sl3_Wait_UNCONNECTED;
  wire NLW_U0_Sl_CE_UNCONNECTED;
  wire NLW_U0_Sl_UE_UNCONNECTED;
  wire NLW_U0_Sl_Wait_UNCONNECTED;
  wire NLW_U0_UE_UNCONNECTED;
  wire [0:31]NLW_U0_BRAM_Addr_A_UNCONNECTED;
  wire [0:31]NLW_U0_LMB1_ABus_UNCONNECTED;
  wire [0:3]NLW_U0_LMB1_BE_UNCONNECTED;
  wire [0:31]NLW_U0_LMB1_WriteDBus_UNCONNECTED;
  wire [0:31]NLW_U0_LMB2_ABus_UNCONNECTED;
  wire [0:3]NLW_U0_LMB2_BE_UNCONNECTED;
  wire [0:31]NLW_U0_LMB2_WriteDBus_UNCONNECTED;
  wire [0:31]NLW_U0_LMB3_ABus_UNCONNECTED;
  wire [0:3]NLW_U0_LMB3_BE_UNCONNECTED;
  wire [0:31]NLW_U0_LMB3_WriteDBus_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_ABus_UNCONNECTED;
  wire [31:0]NLW_U0_S_AXI_CTRL_ARADDR_UNCONNECTED;
  wire [31:0]NLW_U0_S_AXI_CTRL_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_S_AXI_CTRL_BRESP_UNCONNECTED;
  wire [31:0]NLW_U0_S_AXI_CTRL_RDATA_UNCONNECTED;
  wire [1:0]NLW_U0_S_AXI_CTRL_RRESP_UNCONNECTED;
  wire [31:0]NLW_U0_S_AXI_CTRL_WDATA_UNCONNECTED;
  wire [3:0]NLW_U0_S_AXI_CTRL_WSTRB_UNCONNECTED;
  wire [0:31]NLW_U0_Sl1_DBus_UNCONNECTED;
  wire [0:31]NLW_U0_Sl2_DBus_UNCONNECTED;
  wire [0:31]NLW_U0_Sl3_DBus_UNCONNECTED;

  (* C_BASEADDR = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_BRAM_AWIDTH = "32" *) 
  (* C_CE_COUNTER_WIDTH = "0" *) 
  (* C_CE_FAILING_REGISTERS = "0" *) 
  (* C_ECC = "0" *) 
  (* C_ECC_ONOFF_REGISTER = "0" *) 
  (* C_ECC_ONOFF_RESET_VALUE = "1" *) 
  (* C_ECC_STATUS_REGISTERS = "0" *) 
  (* C_FAMILY = "spartan7" *) 
  (* C_FAULT_INJECT = "0" *) 
  (* C_HIGHADDR = "64'b0000000000000000000000000000000000000000000000000001111111111111" *) 
  (* C_INTERCONNECT = "0" *) 
  (* C_LMB_AWIDTH = "32" *) 
  (* C_LMB_DWIDTH = "32" *) 
  (* C_LMB_PROTOCOL = "0" *) 
  (* C_MASK = "64'b0000000000000000000000000000000001000000000000000000000000000000" *) 
  (* C_MASK1 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) 
  (* C_MASK2 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) 
  (* C_MASK3 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) 
  (* C_NUM_LMB = "1" *) 
  (* C_S_AXI_CTRL_ADDR_WIDTH = "32" *) 
  (* C_S_AXI_CTRL_BASEADDR = "32'b11111111111111111111111111111111" *) 
  (* C_S_AXI_CTRL_DATA_WIDTH = "32" *) 
  (* C_S_AXI_CTRL_HIGHADDR = "32'b00000000000000000000000000000000" *) 
  (* C_UE_FAILING_REGISTERS = "0" *) 
  (* C_WRITE_ACCESS = "2" *) 
  system_dlmb_bram_if_cntlr_0__lmb_bram_if_cntlr U0
       (.BRAM_Addr_A({NLW_U0_BRAM_Addr_A_UNCONNECTED[0:18],BRAM_Addr_A[19:29],NLW_U0_BRAM_Addr_A_UNCONNECTED[30:31]}),
        .BRAM_Clk_A(BRAM_Clk_A),
        .BRAM_Din_A(BRAM_Din_A),
        .BRAM_Dout_A(BRAM_Dout_A),
        .BRAM_EN_A(BRAM_EN_A),
        .BRAM_Rst_A(NLW_U0_BRAM_Rst_A_UNCONNECTED),
        .BRAM_WEN_A(BRAM_WEN_A),
        .CE(NLW_U0_CE_UNCONNECTED),
        .Interrupt(NLW_U0_Interrupt_UNCONNECTED),
        .LMB1_ABus(NLW_U0_LMB1_ABus_UNCONNECTED[0:31]),
        .LMB1_AddrStrobe(NLW_U0_LMB1_AddrStrobe_UNCONNECTED),
        .LMB1_BE(NLW_U0_LMB1_BE_UNCONNECTED[0:3]),
        .LMB1_ReadStrobe(NLW_U0_LMB1_ReadStrobe_UNCONNECTED),
        .LMB1_WriteDBus(NLW_U0_LMB1_WriteDBus_UNCONNECTED[0:31]),
        .LMB1_WriteStrobe(NLW_U0_LMB1_WriteStrobe_UNCONNECTED),
        .LMB2_ABus(NLW_U0_LMB2_ABus_UNCONNECTED[0:31]),
        .LMB2_AddrStrobe(NLW_U0_LMB2_AddrStrobe_UNCONNECTED),
        .LMB2_BE(NLW_U0_LMB2_BE_UNCONNECTED[0:3]),
        .LMB2_ReadStrobe(NLW_U0_LMB2_ReadStrobe_UNCONNECTED),
        .LMB2_WriteDBus(NLW_U0_LMB2_WriteDBus_UNCONNECTED[0:31]),
        .LMB2_WriteStrobe(NLW_U0_LMB2_WriteStrobe_UNCONNECTED),
        .LMB3_ABus(NLW_U0_LMB3_ABus_UNCONNECTED[0:31]),
        .LMB3_AddrStrobe(NLW_U0_LMB3_AddrStrobe_UNCONNECTED),
        .LMB3_BE(NLW_U0_LMB3_BE_UNCONNECTED[0:3]),
        .LMB3_ReadStrobe(NLW_U0_LMB3_ReadStrobe_UNCONNECTED),
        .LMB3_WriteDBus(NLW_U0_LMB3_WriteDBus_UNCONNECTED[0:31]),
        .LMB3_WriteStrobe(NLW_U0_LMB3_WriteStrobe_UNCONNECTED),
        .LMB_ABus({NLW_U0_LMB_ABus_UNCONNECTED[0],LMB_ABus[1],NLW_U0_LMB_ABus_UNCONNECTED[2:18],LMB_ABus[19:29],NLW_U0_LMB_ABus_UNCONNECTED[30:31]}),
        .LMB_AddrStrobe(LMB_AddrStrobe),
        .LMB_BE(LMB_BE),
        .LMB_Clk(LMB_Clk),
        .LMB_ReadStrobe(NLW_U0_LMB_ReadStrobe_UNCONNECTED),
        .LMB_Rst(LMB_Rst),
        .LMB_WriteDBus(LMB_WriteDBus),
        .LMB_WriteStrobe(LMB_WriteStrobe),
        .S_AXI_CTRL_ACLK(NLW_U0_S_AXI_CTRL_ACLK_UNCONNECTED),
        .S_AXI_CTRL_ARADDR(NLW_U0_S_AXI_CTRL_ARADDR_UNCONNECTED[31:0]),
        .S_AXI_CTRL_ARESETN(NLW_U0_S_AXI_CTRL_ARESETN_UNCONNECTED),
        .S_AXI_CTRL_ARREADY(NLW_U0_S_AXI_CTRL_ARREADY_UNCONNECTED),
        .S_AXI_CTRL_ARVALID(NLW_U0_S_AXI_CTRL_ARVALID_UNCONNECTED),
        .S_AXI_CTRL_AWADDR(NLW_U0_S_AXI_CTRL_AWADDR_UNCONNECTED[31:0]),
        .S_AXI_CTRL_AWREADY(NLW_U0_S_AXI_CTRL_AWREADY_UNCONNECTED),
        .S_AXI_CTRL_AWVALID(NLW_U0_S_AXI_CTRL_AWVALID_UNCONNECTED),
        .S_AXI_CTRL_BREADY(NLW_U0_S_AXI_CTRL_BREADY_UNCONNECTED),
        .S_AXI_CTRL_BRESP(NLW_U0_S_AXI_CTRL_BRESP_UNCONNECTED[1:0]),
        .S_AXI_CTRL_BVALID(NLW_U0_S_AXI_CTRL_BVALID_UNCONNECTED),
        .S_AXI_CTRL_RDATA(NLW_U0_S_AXI_CTRL_RDATA_UNCONNECTED[31:0]),
        .S_AXI_CTRL_RREADY(NLW_U0_S_AXI_CTRL_RREADY_UNCONNECTED),
        .S_AXI_CTRL_RRESP(NLW_U0_S_AXI_CTRL_RRESP_UNCONNECTED[1:0]),
        .S_AXI_CTRL_RVALID(NLW_U0_S_AXI_CTRL_RVALID_UNCONNECTED),
        .S_AXI_CTRL_WDATA(NLW_U0_S_AXI_CTRL_WDATA_UNCONNECTED[31:0]),
        .S_AXI_CTRL_WREADY(NLW_U0_S_AXI_CTRL_WREADY_UNCONNECTED),
        .S_AXI_CTRL_WSTRB(NLW_U0_S_AXI_CTRL_WSTRB_UNCONNECTED[3:0]),
        .S_AXI_CTRL_WVALID(NLW_U0_S_AXI_CTRL_WVALID_UNCONNECTED),
        .Sl1_CE(NLW_U0_Sl1_CE_UNCONNECTED),
        .Sl1_DBus(NLW_U0_Sl1_DBus_UNCONNECTED[0:31]),
        .Sl1_Ready(NLW_U0_Sl1_Ready_UNCONNECTED),
        .Sl1_UE(NLW_U0_Sl1_UE_UNCONNECTED),
        .Sl1_Wait(NLW_U0_Sl1_Wait_UNCONNECTED),
        .Sl2_CE(NLW_U0_Sl2_CE_UNCONNECTED),
        .Sl2_DBus(NLW_U0_Sl2_DBus_UNCONNECTED[0:31]),
        .Sl2_Ready(NLW_U0_Sl2_Ready_UNCONNECTED),
        .Sl2_UE(NLW_U0_Sl2_UE_UNCONNECTED),
        .Sl2_Wait(NLW_U0_Sl2_Wait_UNCONNECTED),
        .Sl3_CE(NLW_U0_Sl3_CE_UNCONNECTED),
        .Sl3_DBus(NLW_U0_Sl3_DBus_UNCONNECTED[0:31]),
        .Sl3_Ready(NLW_U0_Sl3_Ready_UNCONNECTED),
        .Sl3_UE(NLW_U0_Sl3_UE_UNCONNECTED),
        .Sl3_Wait(NLW_U0_Sl3_Wait_UNCONNECTED),
        .Sl_CE(NLW_U0_Sl_CE_UNCONNECTED),
        .Sl_DBus(Sl_DBus),
        .Sl_Ready(Sl_Ready),
        .Sl_UE(NLW_U0_Sl_UE_UNCONNECTED),
        .Sl_Wait(NLW_U0_Sl_Wait_UNCONNECTED),
        .UE(NLW_U0_UE_UNCONNECTED));
endmodule

(* C_BASEADDR = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) (* C_BRAM_AWIDTH = "32" *) (* C_CE_COUNTER_WIDTH = "0" *) 
(* C_CE_FAILING_REGISTERS = "0" *) (* C_ECC = "0" *) (* C_ECC_ONOFF_REGISTER = "0" *) 
(* C_ECC_ONOFF_RESET_VALUE = "1" *) (* C_ECC_STATUS_REGISTERS = "0" *) (* C_FAMILY = "spartan7" *) 
(* C_FAULT_INJECT = "0" *) (* C_HIGHADDR = "64'b0000000000000000000000000000000000000000000000000001111111111111" *) (* C_INTERCONNECT = "0" *) 
(* C_LMB_AWIDTH = "32" *) (* C_LMB_DWIDTH = "32" *) (* C_LMB_PROTOCOL = "0" *) 
(* C_MASK = "64'b0000000000000000000000000000000001000000000000000000000000000000" *) (* C_MASK1 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) (* C_MASK2 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) 
(* C_MASK3 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) (* C_NUM_LMB = "1" *) (* C_S_AXI_CTRL_ADDR_WIDTH = "32" *) 
(* C_S_AXI_CTRL_BASEADDR = "32'b11111111111111111111111111111111" *) (* C_S_AXI_CTRL_DATA_WIDTH = "32" *) (* C_S_AXI_CTRL_HIGHADDR = "32'b00000000000000000000000000000000" *) 
(* C_UE_FAILING_REGISTERS = "0" *) (* C_WRITE_ACCESS = "2" *) (* ORIG_REF_NAME = "lmb_bram_if_cntlr" *) 
module system_dlmb_bram_if_cntlr_0__lmb_bram_if_cntlr
   (LMB_Clk,
    LMB_Rst,
    LMB_ABus,
    LMB_WriteDBus,
    LMB_AddrStrobe,
    LMB_ReadStrobe,
    LMB_WriteStrobe,
    LMB_BE,
    Sl_DBus,
    Sl_Ready,
    Sl_Wait,
    Sl_UE,
    Sl_CE,
    LMB1_ABus,
    LMB1_WriteDBus,
    LMB1_AddrStrobe,
    LMB1_ReadStrobe,
    LMB1_WriteStrobe,
    LMB1_BE,
    Sl1_DBus,
    Sl1_Ready,
    Sl1_Wait,
    Sl1_UE,
    Sl1_CE,
    LMB2_ABus,
    LMB2_WriteDBus,
    LMB2_AddrStrobe,
    LMB2_ReadStrobe,
    LMB2_WriteStrobe,
    LMB2_BE,
    Sl2_DBus,
    Sl2_Ready,
    Sl2_Wait,
    Sl2_UE,
    Sl2_CE,
    LMB3_ABus,
    LMB3_WriteDBus,
    LMB3_AddrStrobe,
    LMB3_ReadStrobe,
    LMB3_WriteStrobe,
    LMB3_BE,
    Sl3_DBus,
    Sl3_Ready,
    Sl3_Wait,
    Sl3_UE,
    Sl3_CE,
    BRAM_Rst_A,
    BRAM_Clk_A,
    BRAM_Addr_A,
    BRAM_EN_A,
    BRAM_WEN_A,
    BRAM_Dout_A,
    BRAM_Din_A,
    S_AXI_CTRL_ACLK,
    S_AXI_CTRL_ARESETN,
    S_AXI_CTRL_AWADDR,
    S_AXI_CTRL_AWVALID,
    S_AXI_CTRL_AWREADY,
    S_AXI_CTRL_WDATA,
    S_AXI_CTRL_WSTRB,
    S_AXI_CTRL_WVALID,
    S_AXI_CTRL_WREADY,
    S_AXI_CTRL_BRESP,
    S_AXI_CTRL_BVALID,
    S_AXI_CTRL_BREADY,
    S_AXI_CTRL_ARADDR,
    S_AXI_CTRL_ARVALID,
    S_AXI_CTRL_ARREADY,
    S_AXI_CTRL_RDATA,
    S_AXI_CTRL_RRESP,
    S_AXI_CTRL_RVALID,
    S_AXI_CTRL_RREADY,
    UE,
    CE,
    Interrupt);
  input LMB_Clk;
  input LMB_Rst;
  input [0:31]LMB_ABus;
  input [0:31]LMB_WriteDBus;
  input LMB_AddrStrobe;
  input LMB_ReadStrobe;
  input LMB_WriteStrobe;
  input [0:3]LMB_BE;
  output [0:31]Sl_DBus;
  output Sl_Ready;
  output Sl_Wait;
  output Sl_UE;
  output Sl_CE;
  input [0:31]LMB1_ABus;
  input [0:31]LMB1_WriteDBus;
  input LMB1_AddrStrobe;
  input LMB1_ReadStrobe;
  input LMB1_WriteStrobe;
  input [0:3]LMB1_BE;
  output [0:31]Sl1_DBus;
  output Sl1_Ready;
  output Sl1_Wait;
  output Sl1_UE;
  output Sl1_CE;
  input [0:31]LMB2_ABus;
  input [0:31]LMB2_WriteDBus;
  input LMB2_AddrStrobe;
  input LMB2_ReadStrobe;
  input LMB2_WriteStrobe;
  input [0:3]LMB2_BE;
  output [0:31]Sl2_DBus;
  output Sl2_Ready;
  output Sl2_Wait;
  output Sl2_UE;
  output Sl2_CE;
  input [0:31]LMB3_ABus;
  input [0:31]LMB3_WriteDBus;
  input LMB3_AddrStrobe;
  input LMB3_ReadStrobe;
  input LMB3_WriteStrobe;
  input [0:3]LMB3_BE;
  output [0:31]Sl3_DBus;
  output Sl3_Ready;
  output Sl3_Wait;
  output Sl3_UE;
  output Sl3_CE;
  output BRAM_Rst_A;
  output BRAM_Clk_A;
  output [0:31]BRAM_Addr_A;
  output BRAM_EN_A;
  output [0:3]BRAM_WEN_A;
  output [0:31]BRAM_Dout_A;
  input [0:31]BRAM_Din_A;
  input S_AXI_CTRL_ACLK;
  input S_AXI_CTRL_ARESETN;
  input [31:0]S_AXI_CTRL_AWADDR;
  input S_AXI_CTRL_AWVALID;
  output S_AXI_CTRL_AWREADY;
  input [31:0]S_AXI_CTRL_WDATA;
  input [3:0]S_AXI_CTRL_WSTRB;
  input S_AXI_CTRL_WVALID;
  output S_AXI_CTRL_WREADY;
  output [1:0]S_AXI_CTRL_BRESP;
  output S_AXI_CTRL_BVALID;
  input S_AXI_CTRL_BREADY;
  input [31:0]S_AXI_CTRL_ARADDR;
  input S_AXI_CTRL_ARVALID;
  output S_AXI_CTRL_ARREADY;
  output [31:0]S_AXI_CTRL_RDATA;
  output [1:0]S_AXI_CTRL_RRESP;
  output S_AXI_CTRL_RVALID;
  input S_AXI_CTRL_RREADY;
  output UE;
  output CE;
  output Interrupt;

  wire [0:31]BRAM_Din_A;
  wire [0:3]BRAM_WEN_A;
  wire [0:31]LMB_ABus;
  wire LMB_AddrStrobe;
  wire [0:3]LMB_BE;
  wire LMB_Clk;
  wire LMB_Rst;
  wire [0:31]LMB_WriteDBus;
  wire LMB_WriteStrobe;
  wire \No_ECC.Sl_Rdy_i_1_n_0 ;
  wire \No_ECC.lmb_as_i_1_n_0 ;
  wire Sl_Rdy;
  wire Sl_Ready;
  wire lmb_as;

  assign BRAM_Addr_A[19:29] = LMB_ABus[19:29];
  assign BRAM_Clk_A = LMB_Clk;
  assign BRAM_Dout_A[0:31] = LMB_WriteDBus;
  assign BRAM_EN_A = LMB_AddrStrobe;
  assign Sl_DBus[0:31] = BRAM_Din_A;
  LUT3 #(
    .INIT(8'h40)) 
    \BRAM_WEN_A[0]_INST_0 
       (.I0(LMB_ABus[1]),
        .I1(LMB_WriteStrobe),
        .I2(LMB_BE[0]),
        .O(BRAM_WEN_A[0]));
  LUT3 #(
    .INIT(8'h40)) 
    \BRAM_WEN_A[1]_INST_0 
       (.I0(LMB_ABus[1]),
        .I1(LMB_WriteStrobe),
        .I2(LMB_BE[1]),
        .O(BRAM_WEN_A[1]));
  LUT3 #(
    .INIT(8'h40)) 
    \BRAM_WEN_A[2]_INST_0 
       (.I0(LMB_ABus[1]),
        .I1(LMB_WriteStrobe),
        .I2(LMB_BE[2]),
        .O(BRAM_WEN_A[2]));
  LUT3 #(
    .INIT(8'h40)) 
    \BRAM_WEN_A[3]_INST_0 
       (.I0(LMB_ABus[1]),
        .I1(LMB_WriteStrobe),
        .I2(LMB_BE[3]),
        .O(BRAM_WEN_A[3]));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \No_ECC.Sl_Rdy_i_1 
       (.I0(LMB_ABus[1]),
        .I1(LMB_Rst),
        .O(\No_ECC.Sl_Rdy_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \No_ECC.Sl_Rdy_reg 
       (.C(LMB_Clk),
        .CE(1'b1),
        .D(\No_ECC.Sl_Rdy_i_1_n_0 ),
        .Q(Sl_Rdy),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \No_ECC.lmb_as_i_1 
       (.I0(LMB_AddrStrobe),
        .I1(LMB_Rst),
        .O(\No_ECC.lmb_as_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \No_ECC.lmb_as_reg 
       (.C(LMB_Clk),
        .CE(1'b1),
        .D(\No_ECC.lmb_as_i_1_n_0 ),
        .Q(lmb_as),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    Sl_Ready_INST_0
       (.I0(lmb_as),
        .I1(Sl_Rdy),
        .O(Sl_Ready));
endmodule

(* CHECK_LICENSE_TYPE = "system_dlmb_v10_0,lmb_v10,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "lmb_v10,Vivado 2020.1" *) 
module system_dlmb_v10_0
   (LMB_Clk,
    SYS_Rst,
    LMB_Rst,
    M_ABus,
    M_ReadStrobe,
    M_WriteStrobe,
    M_AddrStrobe,
    M_DBus,
    M_BE,
    Sl_DBus,
    Sl_Ready,
    Sl_Wait,
    Sl_UE,
    Sl_CE,
    LMB_ABus,
    LMB_ReadStrobe,
    LMB_WriteStrobe,
    LMB_AddrStrobe,
    LMB_ReadDBus,
    LMB_WriteDBus,
    LMB_Ready,
    LMB_Wait,
    LMB_UE,
    LMB_CE,
    LMB_BE);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLK.LMB_Clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME CLK.LMB_Clk, ASSOCIATED_BUSIF LMB_Sl_0:LMB_Sl_1:LMB_Sl_2:LMB_Sl_3:LMB_Sl_4:LMB_Sl_5:LMB_Sl_6:LMB_Sl_7:LMB_Sl_8:LMB_Sl_9:LMB_Sl_10:LMB_Sl_11:LMB_Sl_12:LMB_Sl_13:LMB_Sl_14:LMB_Sl_15:LMB_M, ASSOCIATED_RESET SYS_Rst, FREQ_HZ 200000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1, INSERT_VIP 0" *) input LMB_Clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 RST.SYS_Rst RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME RST.SYS_Rst, POLARITY ACTIVE_HIGH, TYPE INTERCONNECT, INSERT_VIP 0" *) input SYS_Rst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 RST, xilinx.com:interface:lmb:1.0 LMB_M RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME LMB_Sl_0, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_WRITE, PROTOCOL STANDARD, XIL_INTERFACENAME LMB_M, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_WRITE, PROTOCOL STANDARD" *) output LMB_Rst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M ABUS" *) input [0:31]M_ABus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M READSTROBE" *) input M_ReadStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M WRITESTROBE" *) input M_WriteStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M ADDRSTROBE" *) input M_AddrStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M WRITEDBUS" *) input [0:31]M_DBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M BE" *) input [0:3]M_BE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READDBUS" *) input [0:31]Sl_DBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READY" *) input [0:0]Sl_Ready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WAIT" *) input [0:0]Sl_Wait;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 UE" *) input [0:0]Sl_UE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 CE" *) input [0:0]Sl_CE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 ABUS" *) output [0:31]LMB_ABus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READSTROBE" *) output LMB_ReadStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WRITESTROBE" *) output LMB_WriteStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 ADDRSTROBE" *) output LMB_AddrStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M READDBUS" *) output [0:31]LMB_ReadDBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WRITEDBUS" *) output [0:31]LMB_WriteDBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M READY" *) output LMB_Ready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M WAIT" *) output LMB_Wait;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M UE" *) output LMB_UE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M CE" *) output LMB_CE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 BE" *) output [0:3]LMB_BE;

  wire [0:31]LMB_ABus;
  wire LMB_AddrStrobe;
  wire [0:3]LMB_BE;
  wire [0:31]LMB_ReadDBus;
  wire LMB_Ready;
  wire [0:31]LMB_WriteDBus;
  wire LMB_WriteStrobe;
  wire [0:31]M_ABus;
  wire M_AddrStrobe;
  wire [0:3]M_BE;
  wire [0:31]M_DBus;
  wire M_WriteStrobe;
  wire [0:31]Sl_DBus;
  wire [0:0]Sl_Ready;
  wire NLW_U0_LMB_CE_UNCONNECTED;
  wire NLW_U0_LMB_Clk_UNCONNECTED;
  wire NLW_U0_LMB_ReadStrobe_UNCONNECTED;
  wire NLW_U0_LMB_Rst_UNCONNECTED;
  wire NLW_U0_LMB_UE_UNCONNECTED;
  wire NLW_U0_LMB_Wait_UNCONNECTED;
  wire NLW_U0_M_ReadStrobe_UNCONNECTED;
  wire NLW_U0_SYS_Rst_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_ABus_UNCONNECTED;
  wire [0:31]NLW_U0_M_ABus_UNCONNECTED;
  wire [0:0]NLW_U0_Sl_CE_UNCONNECTED;
  wire [0:0]NLW_U0_Sl_UE_UNCONNECTED;
  wire [0:0]NLW_U0_Sl_Wait_UNCONNECTED;

  (* C_EXT_RESET_HIGH = "1" *) 
  (* C_LMB_AWIDTH = "32" *) 
  (* C_LMB_DWIDTH = "32" *) 
  (* C_LMB_NUM_SLAVES = "1" *) 
  (* C_LMB_PROTOCOL = "0" *) 
  system_dlmb_v10_0__lmb_v10 U0
       (.LMB_ABus({NLW_U0_LMB_ABus_UNCONNECTED[0],LMB_ABus[1],NLW_U0_LMB_ABus_UNCONNECTED[2:18],LMB_ABus[19:29],NLW_U0_LMB_ABus_UNCONNECTED[30:31]}),
        .LMB_AddrStrobe(LMB_AddrStrobe),
        .LMB_BE(LMB_BE),
        .LMB_CE(NLW_U0_LMB_CE_UNCONNECTED),
        .LMB_Clk(NLW_U0_LMB_Clk_UNCONNECTED),
        .LMB_ReadDBus(LMB_ReadDBus),
        .LMB_ReadStrobe(NLW_U0_LMB_ReadStrobe_UNCONNECTED),
        .LMB_Ready(LMB_Ready),
        .LMB_Rst(NLW_U0_LMB_Rst_UNCONNECTED),
        .LMB_UE(NLW_U0_LMB_UE_UNCONNECTED),
        .LMB_Wait(NLW_U0_LMB_Wait_UNCONNECTED),
        .LMB_WriteDBus(LMB_WriteDBus),
        .LMB_WriteStrobe(LMB_WriteStrobe),
        .M_ABus({NLW_U0_M_ABus_UNCONNECTED[0],M_ABus[1],NLW_U0_M_ABus_UNCONNECTED[2:18],M_ABus[19:29],NLW_U0_M_ABus_UNCONNECTED[30:31]}),
        .M_AddrStrobe(M_AddrStrobe),
        .M_BE(M_BE),
        .M_DBus(M_DBus),
        .M_ReadStrobe(NLW_U0_M_ReadStrobe_UNCONNECTED),
        .M_WriteStrobe(M_WriteStrobe),
        .SYS_Rst(NLW_U0_SYS_Rst_UNCONNECTED),
        .Sl_CE(NLW_U0_Sl_CE_UNCONNECTED[0]),
        .Sl_DBus(Sl_DBus),
        .Sl_Ready(Sl_Ready),
        .Sl_UE(NLW_U0_Sl_UE_UNCONNECTED[0]),
        .Sl_Wait(NLW_U0_Sl_Wait_UNCONNECTED[0]));
endmodule

(* C_EXT_RESET_HIGH = "1" *) (* C_LMB_AWIDTH = "32" *) (* C_LMB_DWIDTH = "32" *) 
(* C_LMB_NUM_SLAVES = "1" *) (* C_LMB_PROTOCOL = "0" *) (* ORIG_REF_NAME = "lmb_v10" *) 
module system_dlmb_v10_0__lmb_v10
   (LMB_Clk,
    SYS_Rst,
    LMB_Rst,
    M_ABus,
    M_ReadStrobe,
    M_WriteStrobe,
    M_AddrStrobe,
    M_DBus,
    M_BE,
    Sl_DBus,
    Sl_Ready,
    Sl_Wait,
    Sl_UE,
    Sl_CE,
    LMB_ABus,
    LMB_ReadStrobe,
    LMB_WriteStrobe,
    LMB_AddrStrobe,
    LMB_ReadDBus,
    LMB_WriteDBus,
    LMB_Ready,
    LMB_Wait,
    LMB_UE,
    LMB_CE,
    LMB_BE);
  input LMB_Clk;
  input SYS_Rst;
  output LMB_Rst;
  input [0:31]M_ABus;
  input M_ReadStrobe;
  input M_WriteStrobe;
  input M_AddrStrobe;
  input [0:31]M_DBus;
  input [0:3]M_BE;
  input [0:31]Sl_DBus;
  input [0:0]Sl_Ready;
  input [0:0]Sl_Wait;
  input [0:0]Sl_UE;
  input [0:0]Sl_CE;
  output [0:31]LMB_ABus;
  output LMB_ReadStrobe;
  output LMB_WriteStrobe;
  output LMB_AddrStrobe;
  output [0:31]LMB_ReadDBus;
  output [0:31]LMB_WriteDBus;
  output LMB_Ready;
  output LMB_Wait;
  output LMB_UE;
  output LMB_CE;
  output [0:3]LMB_BE;

  wire [0:31]M_ABus;
  wire M_AddrStrobe;
  wire [0:3]M_BE;
  wire [0:31]M_DBus;
  wire M_WriteStrobe;
  wire [0:31]Sl_DBus;
  wire [0:0]Sl_Ready;

  assign LMB_ABus[1] = M_ABus[1];
  assign LMB_ABus[19:29] = M_ABus[19:29];
  assign LMB_AddrStrobe = M_AddrStrobe;
  assign LMB_BE[0:3] = M_BE;
  assign LMB_ReadDBus[0:31] = Sl_DBus;
  assign LMB_Ready = Sl_Ready;
  assign LMB_WriteDBus[0:31] = M_DBus;
  assign LMB_WriteStrobe = M_WriteStrobe;
endmodule

(* CHECK_LICENSE_TYPE = "system_gamma_correction_0_0,gamma_correction,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* IP_DEFINITION_SOURCE = "module_ref" *) 
(* X_CORE_INFO = "gamma_correction,Vivado 2020.1" *) 
module system_gamma_correction_0_0
   (rgb_data_in,
    key,
    rgb_data_out,
    state);
  input [23:0]rgb_data_in;
  input [1:0]key;
  output [23:0]rgb_data_out;
  output [2:0]state;

  wire [1:0]key;
  wire [23:0]rgb_data_in;
  wire [23:0]rgb_data_out;
  wire [2:0]NLW_inst_Q_UNCONNECTED;

  system_gamma_correction_0_0_gamma_correction inst
       (.Q(NLW_inst_Q_UNCONNECTED[2:0]),
        .key(key),
        .rgb_data_in(rgb_data_in),
        .rgb_data_out(rgb_data_out));
endmodule

(* ORIG_REF_NAME = "gamma_correction" *) 
module system_gamma_correction_0_0_gamma_correction
   (Q,
    rgb_data_out,
    rgb_data_in,
    key);
  output [2:0]Q;
  output [23:0]rgb_data_out;
  input [23:0]rgb_data_in;
  input [1:0]key;

  wire [2:0]\^Q ;
  wire b1;
  wire b1_carry_i_10_n_0;
  wire b1_carry_i_11_n_0;
  wire b1_carry_i_12_n_0;
  wire b1_carry_i_13_n_0;
  wire b1_carry_i_14_n_0;
  wire b1_carry_i_15_n_0;
  wire b1_carry_i_15_n_4;
  wire b1_carry_i_15_n_5;
  wire b1_carry_i_15_n_6;
  wire b1_carry_i_15_n_7;
  wire b1_carry_i_16_n_0;
  wire b1_carry_i_17_n_0;
  wire b1_carry_i_17_n_4;
  wire b1_carry_i_17_n_5;
  wire b1_carry_i_17_n_6;
  wire b1_carry_i_17_n_7;
  wire b1_carry_i_18_n_0;
  wire b1_carry_i_19_n_0;
  wire b1_carry_i_1_n_1;
  wire b1_carry_i_1_n_6;
  wire b1_carry_i_1_n_7;
  wire b1_carry_i_20_n_0;
  wire b1_carry_i_21_n_0;
  wire b1_carry_i_22_n_0;
  wire b1_carry_i_23_n_0;
  wire b1_carry_i_24_n_0;
  wire b1_carry_i_25_n_0;
  wire b1_carry_i_26_n_0;
  wire b1_carry_i_27_n_0;
  wire b1_carry_i_2_n_0;
  wire b1_carry_i_3_n_0;
  wire b1_carry_i_4_n_0;
  wire b1_carry_i_5_n_0;
  wire b1_carry_i_5_n_4;
  wire b1_carry_i_5_n_5;
  wire b1_carry_i_5_n_6;
  wire b1_carry_i_5_n_7;
  wire b1_carry_i_6_n_2;
  wire b1_carry_i_6_n_7;
  wire b1_carry_i_7_n_0;
  wire b1_carry_i_8_n_0;
  wire b1_carry_i_9_n_0;
  wire b1_carry_n_2;
  wire [10:0]b2;
  wire [7:0]data4;
  wire g1;
  wire g1_carry_i_1_n_0;
  wire g1_carry_i_2_n_0;
  wire g1_carry_i_3_n_0;
  wire g1_carry_i_4_n_0;
  wire g1_carry_i_5_n_0;
  wire g1_carry_n_0;
  wire [15:0]g2;
  wire g2_carry__0_i_1_n_0;
  wire g2_carry__0_i_2_n_0;
  wire g2_carry__0_i_3_n_0;
  wire g2_carry__0_i_4_n_0;
  wire g2_carry__0_i_5_n_0;
  wire g2_carry__0_i_6_n_0;
  wire g2_carry__0_i_7_n_0;
  wire g2_carry__0_i_8_n_0;
  wire g2_carry__0_n_0;
  wire g2_carry__0_n_4;
  wire g2_carry__0_n_5;
  wire g2_carry__0_n_6;
  wire g2_carry__0_n_7;
  wire g2_carry__1_n_0;
  wire g2_carry__1_n_5;
  wire g2_carry__1_n_6;
  wire g2_carry__1_n_7;
  wire g2_carry_i_1_n_0;
  wire g2_carry_i_2_n_0;
  wire g2_carry_i_3_n_0;
  wire g2_carry_i_4_n_0;
  wire g2_carry_i_5_n_0;
  wire g2_carry_i_6_n_0;
  wire g2_carry_i_7_n_0;
  wire g2_carry_i_8_n_0;
  wire g2_carry_i_9_n_3;
  wire g2_carry_n_0;
  wire g2_carry_n_4;
  wire g2_carry_n_5;
  wire g2_carry_n_6;
  wire g2_carry_n_7;
  wire \g2_inferred__0/i__carry__0_n_0 ;
  wire \g2_inferred__0/i__carry__1_n_0 ;
  wire \g2_inferred__0/i__carry_n_0 ;
  wire g30;
  wire g4__34_carry__0_i_10_n_0;
  wire g4__34_carry__0_i_11_n_0;
  wire g4__34_carry__0_i_12_n_0;
  wire g4__34_carry__0_i_13_n_0;
  wire g4__34_carry__0_i_15_n_0;
  wire g4__34_carry__0_i_16_n_0;
  wire g4__34_carry__0_i_17_n_0;
  wire g4__34_carry__0_i_1_n_0;
  wire g4__34_carry__0_i_2_n_0;
  wire g4__34_carry__0_i_3_n_0;
  wire g4__34_carry__0_i_4_n_0;
  wire g4__34_carry__0_i_5_n_0;
  wire g4__34_carry__0_i_6_n_0;
  wire g4__34_carry__0_i_7_n_0;
  wire g4__34_carry__0_i_8_n_0;
  wire g4__34_carry__0_n_0;
  wire g4__34_carry__0_n_4;
  wire g4__34_carry__0_n_5;
  wire g4__34_carry__0_n_6;
  wire g4__34_carry__1_i_10_n_0;
  wire g4__34_carry__1_i_14_n_0;
  wire g4__34_carry__1_i_1_n_0;
  wire g4__34_carry__1_i_2_n_0;
  wire g4__34_carry__1_i_3_n_0;
  wire g4__34_carry__1_i_4_n_0;
  wire g4__34_carry__1_i_5_n_0;
  wire g4__34_carry__1_i_6_n_0;
  wire g4__34_carry__1_i_7_n_0;
  wire g4__34_carry__1_i_8_n_0;
  wire g4__34_carry__1_n_0;
  wire g4__34_carry__1_n_4;
  wire g4__34_carry__1_n_5;
  wire g4__34_carry__1_n_6;
  wire g4__34_carry__1_n_7;
  wire g4__34_carry__2_i_1_n_0;
  wire g4__34_carry__2_i_2_n_0;
  wire g4__34_carry__2_i_3_n_0;
  wire g4__34_carry__2_i_4_n_0;
  wire g4__34_carry__2_i_5_n_3;
  wire g4__34_carry__2_n_6;
  wire g4__34_carry__2_n_7;
  wire g4__34_carry_i_1_n_0;
  wire g4__34_carry_i_2_n_0;
  wire g4__34_carry_i_3_n_0;
  wire g4__34_carry_i_4_n_0;
  wire g4__34_carry_i_5_n_0;
  wire g4__34_carry_i_6_n_0;
  wire g4__34_carry_n_0;
  wire g4_carry__0_i_1_n_0;
  wire g4_carry__0_i_2_n_0;
  wire g4_carry__0_i_3_n_0;
  wire g4_carry__0_i_4_n_0;
  wire g4_carry__0_i_5_n_0;
  wire g4_carry__0_i_6_n_0;
  wire g4_carry__0_i_7_n_0;
  wire g4_carry__0_i_8_n_0;
  wire g4_carry__0_n_0;
  wire g4_carry__0_n_4;
  wire g4_carry__0_n_5;
  wire g4_carry__0_n_6;
  wire g4_carry__0_n_7;
  wire g4_carry__1_i_1_n_0;
  wire g4_carry__1_i_2_n_0;
  wire g4_carry__1_i_3_n_0;
  wire g4_carry__1_i_4_n_0;
  wire g4_carry__1_i_5_n_0;
  wire g4_carry__1_i_6_n_0;
  wire g4_carry__1_i_7_n_0;
  wire g4_carry__1_i_8_n_0;
  wire g4_carry__1_n_0;
  wire g4_carry__1_n_4;
  wire g4_carry__1_n_5;
  wire g4_carry__1_n_6;
  wire g4_carry__1_n_7;
  wire g4_carry_i_1_n_0;
  wire g4_carry_i_2_n_0;
  wire g4_carry_i_3_n_0;
  wire g4_carry_i_4_n_0;
  wire g4_carry_i_5_n_0;
  wire g4_carry_i_6_n_0;
  wire g4_carry_i_7_n_0;
  wire g4_carry_n_0;
  wire g4_carry_n_4;
  wire g4_carry_n_5;
  wire g4_carry_n_6;
  wire g4_carry_n_7;
  wire i__carry__0_i_10_n_0;
  wire i__carry__0_i_11_n_0;
  wire i__carry__0_i_12_n_0;
  wire i__carry__0_i_13_n_0;
  wire i__carry__0_i_14_n_0;
  wire i__carry__0_i_15_n_0;
  wire i__carry__0_i_16_n_0;
  wire i__carry__0_i_17_n_0;
  wire i__carry__0_i_18_n_0;
  wire i__carry__0_i_19_n_0;
  wire i__carry__0_i_1_n_0;
  wire i__carry__0_i_20_n_0;
  wire i__carry__0_i_21_n_0;
  wire i__carry__0_i_22_n_0;
  wire i__carry__0_i_23_n_0;
  wire i__carry__0_i_24_n_0;
  wire i__carry__0_i_25_n_0;
  wire i__carry__0_i_26_n_0;
  wire i__carry__0_i_2_n_0;
  wire i__carry__0_i_3_n_0;
  wire i__carry__0_i_4_n_0;
  wire i__carry__0_i_6_n_0;
  wire i__carry__0_i_7_n_0;
  wire i__carry__0_i_8_n_0;
  wire i__carry__0_i_9_n_0;
  wire i__carry_i_10__0_n_0;
  wire i__carry_i_10_n_0;
  wire i__carry_i_11__0_n_0;
  wire i__carry_i_11_n_0;
  wire i__carry_i_12__0_n_0;
  wire i__carry_i_12_n_0;
  wire i__carry_i_13__0_n_0;
  wire i__carry_i_13_n_0;
  wire i__carry_i_14__0_n_0;
  wire i__carry_i_14_n_0;
  wire i__carry_i_15_n_0;
  wire i__carry_i_16_n_0;
  wire i__carry_i_17_n_0;
  wire i__carry_i_18_n_0;
  wire i__carry_i_19_n_0;
  wire i__carry_i_1__1_n_0;
  wire i__carry_i_20_n_0;
  wire i__carry_i_21_n_0;
  wire i__carry_i_22_n_0;
  wire i__carry_i_23_n_0;
  wire i__carry_i_24_n_0;
  wire i__carry_i_25_n_0;
  wire i__carry_i_26_n_0;
  wire i__carry_i_27_n_0;
  wire i__carry_i_28_n_0;
  wire i__carry_i_29_n_0;
  wire i__carry_i_2__0_n_0;
  wire i__carry_i_2__1_n_0;
  wire i__carry_i_2_n_0;
  wire i__carry_i_30_n_0;
  wire i__carry_i_31_n_0;
  wire i__carry_i_32_n_0;
  wire i__carry_i_33_n_0;
  wire i__carry_i_34_n_0;
  wire i__carry_i_35_n_0;
  wire i__carry_i_36_n_0;
  wire i__carry_i_37_n_0;
  wire i__carry_i_38_n_0;
  wire i__carry_i_39_n_0;
  wire i__carry_i_3__0_n_0;
  wire i__carry_i_3__1_n_0;
  wire i__carry_i_3_n_0;
  wire i__carry_i_40_n_0;
  wire i__carry_i_41_n_0;
  wire i__carry_i_42_n_0;
  wire i__carry_i_43_n_0;
  wire i__carry_i_44_n_0;
  wire i__carry_i_45_n_0;
  wire i__carry_i_4__0_n_0;
  wire i__carry_i_4__1_n_0;
  wire i__carry_i_4_n_0;
  wire i__carry_i_5__0_n_0;
  wire i__carry_i_5__1_n_0;
  wire i__carry_i_5_n_0;
  wire i__carry_i_6__0_n_0;
  wire i__carry_i_6_n_0;
  wire i__carry_i_7__0_n_0;
  wire i__carry_i_7_n_0;
  wire i__carry_i_8__0_n_0;
  wire i__carry_i_8_n_0;
  wire i__carry_i_9__0_n_0;
  wire i__carry_i_9_n_0;
  wire increase_brightness02_carry__0_i_1_n_0;
  wire increase_brightness02_carry__0_i_2_n_0;
  wire increase_brightness02_carry__0_i_3_n_0;
  wire increase_brightness02_carry__0_i_4_n_0;
  wire increase_brightness02_carry__0_i_5_n_0;
  wire increase_brightness02_carry__0_i_6_n_0;
  wire increase_brightness02_carry__0_i_7_n_0;
  wire increase_brightness02_carry__0_n_0;
  wire increase_brightness02_carry__0_n_4;
  wire increase_brightness02_carry__0_n_5;
  wire increase_brightness02_carry__0_n_6;
  wire increase_brightness02_carry__0_n_7;
  wire increase_brightness02_carry__1_i_1_n_0;
  wire increase_brightness02_carry__1_n_7;
  wire increase_brightness02_carry_i_1_n_0;
  wire increase_brightness02_carry_i_2_n_0;
  wire increase_brightness02_carry_i_3_n_0;
  wire increase_brightness02_carry_i_4_n_0;
  wire increase_brightness02_carry_i_5_n_0;
  wire increase_brightness02_carry_i_6_n_0;
  wire increase_brightness02_carry_i_7_n_0;
  wire increase_brightness02_carry_n_0;
  wire increase_brightness02_carry_n_4;
  wire increase_brightness02_carry_n_5;
  wire increase_brightness02_carry_n_6;
  wire increase_brightness02_carry_n_7;
  wire increase_brightness12_carry__0_i_1_n_0;
  wire increase_brightness12_carry__0_i_2_n_0;
  wire increase_brightness12_carry__0_i_3_n_0;
  wire increase_brightness12_carry__0_i_4_n_0;
  wire increase_brightness12_carry__0_i_5_n_0;
  wire increase_brightness12_carry__0_i_6_n_0;
  wire increase_brightness12_carry__0_i_7_n_0;
  wire increase_brightness12_carry__0_n_0;
  wire increase_brightness12_carry__0_n_4;
  wire increase_brightness12_carry__0_n_5;
  wire increase_brightness12_carry__0_n_6;
  wire increase_brightness12_carry__0_n_7;
  wire increase_brightness12_carry__1_i_1_n_0;
  wire increase_brightness12_carry__1_n_7;
  wire increase_brightness12_carry_i_1_n_0;
  wire increase_brightness12_carry_i_2_n_0;
  wire increase_brightness12_carry_i_3_n_0;
  wire increase_brightness12_carry_i_4_n_0;
  wire increase_brightness12_carry_i_5_n_0;
  wire increase_brightness12_carry_i_6_n_0;
  wire increase_brightness12_carry_i_7_n_0;
  wire increase_brightness12_carry_n_0;
  wire increase_brightness12_carry_n_4;
  wire increase_brightness12_carry_n_5;
  wire increase_brightness12_carry_n_6;
  wire increase_brightness12_carry_n_7;
  wire increase_brightness22_carry__0_i_1_n_0;
  wire increase_brightness22_carry__0_i_2_n_0;
  wire increase_brightness22_carry__0_i_3_n_0;
  wire increase_brightness22_carry__0_i_4_n_0;
  wire increase_brightness22_carry__0_i_5_n_0;
  wire increase_brightness22_carry__0_i_6_n_0;
  wire increase_brightness22_carry__0_i_7_n_0;
  wire increase_brightness22_carry__0_i_8_n_0;
  wire increase_brightness22_carry__0_n_0;
  wire increase_brightness22_carry__0_n_4;
  wire increase_brightness22_carry__0_n_5;
  wire increase_brightness22_carry__0_n_6;
  wire increase_brightness22_carry__0_n_7;
  wire increase_brightness22_carry__1_i_1_n_0;
  wire increase_brightness22_carry__1_n_7;
  wire increase_brightness22_carry_i_1_n_0;
  wire increase_brightness22_carry_i_2_n_0;
  wire increase_brightness22_carry_i_3_n_0;
  wire increase_brightness22_carry_i_4_n_0;
  wire increase_brightness22_carry_i_5_n_0;
  wire increase_brightness22_carry_i_6_n_0;
  wire increase_brightness22_carry_i_7_n_0;
  wire increase_brightness22_carry_i_8_n_0;
  wire increase_brightness22_carry_n_0;
  wire increase_brightness22_carry_n_4;
  wire increase_brightness22_carry_n_5;
  wire increase_brightness22_carry_n_6;
  wire increase_brightness22_carry_n_7;
  wire increase_brightness2_carry__0_i_1_n_0;
  wire increase_brightness2_carry__0_i_2_n_0;
  wire increase_brightness2_carry__0_i_3_n_0;
  wire increase_brightness2_carry__0_i_4_n_0;
  wire increase_brightness2_carry__0_i_5_n_0;
  wire increase_brightness2_carry__0_i_6_n_0;
  wire increase_brightness2_carry__0_i_7_n_0;
  wire increase_brightness2_carry__0_n_0;
  wire increase_brightness2_carry__0_n_4;
  wire increase_brightness2_carry__0_n_5;
  wire increase_brightness2_carry__0_n_6;
  wire increase_brightness2_carry__0_n_7;
  wire increase_brightness2_carry__1_i_1_n_0;
  wire increase_brightness2_carry__1_n_7;
  wire increase_brightness2_carry_i_1_n_0;
  wire increase_brightness2_carry_i_2_n_0;
  wire increase_brightness2_carry_i_3_n_0;
  wire increase_brightness2_carry_i_4_n_0;
  wire increase_brightness2_carry_i_5_n_0;
  wire increase_brightness2_carry_i_6_n_0;
  wire increase_brightness2_carry_i_7_n_0;
  wire increase_brightness2_carry_i_8_n_0;
  wire increase_brightness2_carry_n_0;
  wire increase_brightness2_carry_n_4;
  wire increase_brightness2_carry_n_5;
  wire increase_brightness2_carry_n_6;
  wire increase_brightness2_carry_n_7;
  wire [1:0]key;
  wire [7:7]p_0_in;
  wire [9:0]r2;
  wire [23:0]rgb_data_in;
  wire [23:0]rgb_data_out;
  wire \rgb_data_out_reg[0]_i_1_n_0 ;
  wire \rgb_data_out_reg[0]_i_2_n_0 ;
  wire \rgb_data_out_reg[0]_i_3_n_0 ;
  wire \rgb_data_out_reg[0]_i_4_n_0 ;
  wire \rgb_data_out_reg[0]_i_5_n_0 ;
  wire \rgb_data_out_reg[0]_i_6_n_0 ;
  wire \rgb_data_out_reg[10]_i_1_n_0 ;
  wire \rgb_data_out_reg[10]_i_2_n_0 ;
  wire \rgb_data_out_reg[10]_i_3_n_0 ;
  wire \rgb_data_out_reg[10]_i_4_n_0 ;
  wire \rgb_data_out_reg[10]_i_5_n_0 ;
  wire \rgb_data_out_reg[10]_i_6_n_0 ;
  wire \rgb_data_out_reg[10]_i_7_n_0 ;
  wire \rgb_data_out_reg[10]_i_8_n_0 ;
  wire \rgb_data_out_reg[10]_i_9_n_0 ;
  wire \rgb_data_out_reg[11]_i_10_n_0 ;
  wire \rgb_data_out_reg[11]_i_11_n_0 ;
  wire \rgb_data_out_reg[11]_i_12_n_0 ;
  wire \rgb_data_out_reg[11]_i_13_n_0 ;
  wire \rgb_data_out_reg[11]_i_14_n_0 ;
  wire \rgb_data_out_reg[11]_i_15_n_0 ;
  wire \rgb_data_out_reg[11]_i_16_n_0 ;
  wire \rgb_data_out_reg[11]_i_17_n_0 ;
  wire \rgb_data_out_reg[11]_i_18_n_0 ;
  wire \rgb_data_out_reg[11]_i_19_n_0 ;
  wire \rgb_data_out_reg[11]_i_1_n_0 ;
  wire \rgb_data_out_reg[11]_i_2_n_0 ;
  wire \rgb_data_out_reg[11]_i_3_n_0 ;
  wire \rgb_data_out_reg[11]_i_4_n_0 ;
  wire \rgb_data_out_reg[11]_i_5_n_0 ;
  wire \rgb_data_out_reg[11]_i_6_n_0 ;
  wire \rgb_data_out_reg[11]_i_7_n_0 ;
  wire \rgb_data_out_reg[11]_i_8_n_0 ;
  wire \rgb_data_out_reg[11]_i_9_n_0 ;
  wire \rgb_data_out_reg[11]_i_9_n_4 ;
  wire \rgb_data_out_reg[11]_i_9_n_5 ;
  wire \rgb_data_out_reg[11]_i_9_n_6 ;
  wire \rgb_data_out_reg[11]_i_9_n_7 ;
  wire \rgb_data_out_reg[12]_i_10_n_0 ;
  wire \rgb_data_out_reg[12]_i_1_n_0 ;
  wire \rgb_data_out_reg[12]_i_2_n_0 ;
  wire \rgb_data_out_reg[12]_i_3_n_0 ;
  wire \rgb_data_out_reg[12]_i_4_n_0 ;
  wire \rgb_data_out_reg[12]_i_5_n_0 ;
  wire \rgb_data_out_reg[12]_i_6_n_0 ;
  wire \rgb_data_out_reg[12]_i_7_n_0 ;
  wire \rgb_data_out_reg[12]_i_8_n_0 ;
  wire \rgb_data_out_reg[12]_i_9_n_0 ;
  wire \rgb_data_out_reg[13]_i_10_n_0 ;
  wire \rgb_data_out_reg[13]_i_11_n_0 ;
  wire \rgb_data_out_reg[13]_i_12_n_0 ;
  wire \rgb_data_out_reg[13]_i_13_n_0 ;
  wire \rgb_data_out_reg[13]_i_14_n_0 ;
  wire \rgb_data_out_reg[13]_i_1_n_0 ;
  wire \rgb_data_out_reg[13]_i_2_n_0 ;
  wire \rgb_data_out_reg[13]_i_3_n_0 ;
  wire \rgb_data_out_reg[13]_i_4_n_0 ;
  wire \rgb_data_out_reg[13]_i_5_n_0 ;
  wire \rgb_data_out_reg[13]_i_6_n_0 ;
  wire \rgb_data_out_reg[13]_i_7_n_0 ;
  wire \rgb_data_out_reg[13]_i_8_n_0 ;
  wire \rgb_data_out_reg[13]_i_9_n_0 ;
  wire \rgb_data_out_reg[14]_i_10_n_0 ;
  wire \rgb_data_out_reg[14]_i_11_n_0 ;
  wire \rgb_data_out_reg[14]_i_12_n_0 ;
  wire \rgb_data_out_reg[14]_i_13_n_0 ;
  wire \rgb_data_out_reg[14]_i_1_n_0 ;
  wire \rgb_data_out_reg[14]_i_2_n_0 ;
  wire \rgb_data_out_reg[14]_i_3_n_0 ;
  wire \rgb_data_out_reg[14]_i_4_n_0 ;
  wire \rgb_data_out_reg[14]_i_5_n_0 ;
  wire \rgb_data_out_reg[14]_i_6_n_0 ;
  wire \rgb_data_out_reg[14]_i_7_n_0 ;
  wire \rgb_data_out_reg[14]_i_8_n_0 ;
  wire \rgb_data_out_reg[14]_i_9_n_0 ;
  wire \rgb_data_out_reg[15]_i_10_n_0 ;
  wire \rgb_data_out_reg[15]_i_11_n_0 ;
  wire \rgb_data_out_reg[15]_i_12_n_0 ;
  wire \rgb_data_out_reg[15]_i_13_n_0 ;
  wire \rgb_data_out_reg[15]_i_13_n_4 ;
  wire \rgb_data_out_reg[15]_i_13_n_5 ;
  wire \rgb_data_out_reg[15]_i_13_n_6 ;
  wire \rgb_data_out_reg[15]_i_13_n_7 ;
  wire \rgb_data_out_reg[15]_i_14_n_0 ;
  wire \rgb_data_out_reg[15]_i_15_n_0 ;
  wire \rgb_data_out_reg[15]_i_16_n_0 ;
  wire \rgb_data_out_reg[15]_i_17_n_0 ;
  wire \rgb_data_out_reg[15]_i_18_n_0 ;
  wire \rgb_data_out_reg[15]_i_19_n_0 ;
  wire \rgb_data_out_reg[15]_i_1_n_0 ;
  wire \rgb_data_out_reg[15]_i_20_n_0 ;
  wire \rgb_data_out_reg[15]_i_21_n_0 ;
  wire \rgb_data_out_reg[15]_i_22_n_0 ;
  wire \rgb_data_out_reg[15]_i_2_n_0 ;
  wire \rgb_data_out_reg[15]_i_3_n_0 ;
  wire \rgb_data_out_reg[15]_i_4_n_0 ;
  wire \rgb_data_out_reg[15]_i_5_n_0 ;
  wire \rgb_data_out_reg[15]_i_6_n_0 ;
  wire \rgb_data_out_reg[15]_i_6_n_5 ;
  wire \rgb_data_out_reg[15]_i_6_n_6 ;
  wire \rgb_data_out_reg[15]_i_6_n_7 ;
  wire \rgb_data_out_reg[15]_i_7_n_0 ;
  wire \rgb_data_out_reg[15]_i_8_n_0 ;
  wire \rgb_data_out_reg[15]_i_9_n_0 ;
  wire \rgb_data_out_reg[16]_i_10_n_0 ;
  wire \rgb_data_out_reg[16]_i_11_n_0 ;
  wire \rgb_data_out_reg[16]_i_12_n_0 ;
  wire \rgb_data_out_reg[16]_i_13_n_0 ;
  wire \rgb_data_out_reg[16]_i_14_n_0 ;
  wire \rgb_data_out_reg[16]_i_15_n_0 ;
  wire \rgb_data_out_reg[16]_i_16_n_0 ;
  wire \rgb_data_out_reg[16]_i_17_n_0 ;
  wire \rgb_data_out_reg[16]_i_18_n_0 ;
  wire \rgb_data_out_reg[16]_i_19_n_0 ;
  wire \rgb_data_out_reg[16]_i_1_n_0 ;
  wire \rgb_data_out_reg[16]_i_20_n_0 ;
  wire \rgb_data_out_reg[16]_i_21_n_0 ;
  wire \rgb_data_out_reg[16]_i_22_n_0 ;
  wire \rgb_data_out_reg[16]_i_2_n_0 ;
  wire \rgb_data_out_reg[16]_i_3_n_0 ;
  wire \rgb_data_out_reg[16]_i_4_n_0 ;
  wire \rgb_data_out_reg[16]_i_5_n_0 ;
  wire \rgb_data_out_reg[16]_i_6_n_0 ;
  wire \rgb_data_out_reg[16]_i_7_n_0 ;
  wire \rgb_data_out_reg[16]_i_7_n_4 ;
  wire \rgb_data_out_reg[16]_i_7_n_5 ;
  wire \rgb_data_out_reg[16]_i_7_n_6 ;
  wire \rgb_data_out_reg[16]_i_7_n_7 ;
  wire \rgb_data_out_reg[16]_i_8_n_0 ;
  wire \rgb_data_out_reg[16]_i_9_n_0 ;
  wire \rgb_data_out_reg[17]_i_1_n_0 ;
  wire \rgb_data_out_reg[17]_i_2_n_0 ;
  wire \rgb_data_out_reg[17]_i_3_n_0 ;
  wire \rgb_data_out_reg[17]_i_4_n_0 ;
  wire \rgb_data_out_reg[17]_i_5_n_0 ;
  wire \rgb_data_out_reg[17]_i_6_n_0 ;
  wire \rgb_data_out_reg[17]_i_7_n_0 ;
  wire \rgb_data_out_reg[17]_i_8_n_0 ;
  wire \rgb_data_out_reg[17]_i_9_n_0 ;
  wire \rgb_data_out_reg[18]_i_1_n_0 ;
  wire \rgb_data_out_reg[18]_i_2_n_0 ;
  wire \rgb_data_out_reg[18]_i_3_n_0 ;
  wire \rgb_data_out_reg[18]_i_4_n_0 ;
  wire \rgb_data_out_reg[18]_i_5_n_0 ;
  wire \rgb_data_out_reg[18]_i_6_n_0 ;
  wire \rgb_data_out_reg[18]_i_7_n_0 ;
  wire \rgb_data_out_reg[18]_i_8_n_0 ;
  wire \rgb_data_out_reg[18]_i_9_n_0 ;
  wire \rgb_data_out_reg[19]_i_10_n_0 ;
  wire \rgb_data_out_reg[19]_i_11_n_0 ;
  wire \rgb_data_out_reg[19]_i_12_n_0 ;
  wire \rgb_data_out_reg[19]_i_13_n_0 ;
  wire \rgb_data_out_reg[19]_i_14_n_0 ;
  wire \rgb_data_out_reg[19]_i_15_n_0 ;
  wire \rgb_data_out_reg[19]_i_15_n_4 ;
  wire \rgb_data_out_reg[19]_i_15_n_5 ;
  wire \rgb_data_out_reg[19]_i_15_n_6 ;
  wire \rgb_data_out_reg[19]_i_16_n_0 ;
  wire \rgb_data_out_reg[19]_i_17_n_0 ;
  wire \rgb_data_out_reg[19]_i_18_n_0 ;
  wire \rgb_data_out_reg[19]_i_19_n_0 ;
  wire \rgb_data_out_reg[19]_i_1_n_0 ;
  wire \rgb_data_out_reg[19]_i_20_n_0 ;
  wire \rgb_data_out_reg[19]_i_21_n_0 ;
  wire \rgb_data_out_reg[19]_i_23_n_0 ;
  wire \rgb_data_out_reg[19]_i_24_n_0 ;
  wire \rgb_data_out_reg[19]_i_25_n_0 ;
  wire \rgb_data_out_reg[19]_i_26_n_0 ;
  wire \rgb_data_out_reg[19]_i_2_n_0 ;
  wire \rgb_data_out_reg[19]_i_3_n_0 ;
  wire \rgb_data_out_reg[19]_i_4_n_0 ;
  wire \rgb_data_out_reg[19]_i_5_n_0 ;
  wire \rgb_data_out_reg[19]_i_6_n_0 ;
  wire \rgb_data_out_reg[19]_i_7_n_0 ;
  wire \rgb_data_out_reg[19]_i_8_n_0 ;
  wire \rgb_data_out_reg[19]_i_9_n_0 ;
  wire \rgb_data_out_reg[1]_i_1_n_0 ;
  wire \rgb_data_out_reg[1]_i_2_n_0 ;
  wire \rgb_data_out_reg[1]_i_3_n_0 ;
  wire \rgb_data_out_reg[1]_i_4_n_0 ;
  wire \rgb_data_out_reg[1]_i_5_n_0 ;
  wire \rgb_data_out_reg[1]_i_6_n_0 ;
  wire \rgb_data_out_reg[1]_i_7_n_0 ;
  wire \rgb_data_out_reg[1]_i_8_n_0 ;
  wire \rgb_data_out_reg[20]_i_10_n_0 ;
  wire \rgb_data_out_reg[20]_i_1_n_0 ;
  wire \rgb_data_out_reg[20]_i_2_n_0 ;
  wire \rgb_data_out_reg[20]_i_3_n_0 ;
  wire \rgb_data_out_reg[20]_i_4_n_0 ;
  wire \rgb_data_out_reg[20]_i_5_n_0 ;
  wire \rgb_data_out_reg[20]_i_6_n_0 ;
  wire \rgb_data_out_reg[20]_i_7_n_0 ;
  wire \rgb_data_out_reg[20]_i_8_n_0 ;
  wire \rgb_data_out_reg[20]_i_9_n_0 ;
  wire \rgb_data_out_reg[21]_i_10_n_0 ;
  wire \rgb_data_out_reg[21]_i_11_n_0 ;
  wire \rgb_data_out_reg[21]_i_12_n_0 ;
  wire \rgb_data_out_reg[21]_i_13_n_0 ;
  wire \rgb_data_out_reg[21]_i_14_n_2 ;
  wire \rgb_data_out_reg[21]_i_14_n_7 ;
  wire \rgb_data_out_reg[21]_i_15_n_0 ;
  wire \rgb_data_out_reg[21]_i_16_n_0 ;
  wire \rgb_data_out_reg[21]_i_17_n_0 ;
  wire \rgb_data_out_reg[21]_i_1_n_0 ;
  wire \rgb_data_out_reg[21]_i_2_n_0 ;
  wire \rgb_data_out_reg[21]_i_3_n_0 ;
  wire \rgb_data_out_reg[21]_i_4_n_0 ;
  wire \rgb_data_out_reg[21]_i_5_n_0 ;
  wire \rgb_data_out_reg[21]_i_6_n_0 ;
  wire \rgb_data_out_reg[21]_i_7_n_0 ;
  wire \rgb_data_out_reg[21]_i_8_n_0 ;
  wire \rgb_data_out_reg[21]_i_9_n_0 ;
  wire \rgb_data_out_reg[22]_i_10_n_0 ;
  wire \rgb_data_out_reg[22]_i_11_n_0 ;
  wire \rgb_data_out_reg[22]_i_13_n_0 ;
  wire \rgb_data_out_reg[22]_i_14_n_0 ;
  wire \rgb_data_out_reg[22]_i_15_n_0 ;
  wire \rgb_data_out_reg[22]_i_16_n_0 ;
  wire \rgb_data_out_reg[22]_i_17_n_0 ;
  wire \rgb_data_out_reg[22]_i_18_n_2 ;
  wire \rgb_data_out_reg[22]_i_18_n_7 ;
  wire \rgb_data_out_reg[22]_i_19_n_0 ;
  wire \rgb_data_out_reg[22]_i_19_n_4 ;
  wire \rgb_data_out_reg[22]_i_19_n_5 ;
  wire \rgb_data_out_reg[22]_i_19_n_6 ;
  wire \rgb_data_out_reg[22]_i_19_n_7 ;
  wire \rgb_data_out_reg[22]_i_1_n_0 ;
  wire \rgb_data_out_reg[22]_i_20_n_0 ;
  wire \rgb_data_out_reg[22]_i_21_n_0 ;
  wire \rgb_data_out_reg[22]_i_22_n_0 ;
  wire \rgb_data_out_reg[22]_i_23_n_0 ;
  wire \rgb_data_out_reg[22]_i_24_n_0 ;
  wire \rgb_data_out_reg[22]_i_25_n_0 ;
  wire \rgb_data_out_reg[22]_i_26_n_0 ;
  wire \rgb_data_out_reg[22]_i_27_n_0 ;
  wire \rgb_data_out_reg[22]_i_28_n_0 ;
  wire \rgb_data_out_reg[22]_i_29_n_0 ;
  wire \rgb_data_out_reg[22]_i_2_n_0 ;
  wire \rgb_data_out_reg[22]_i_30_n_0 ;
  wire \rgb_data_out_reg[22]_i_3_n_0 ;
  wire \rgb_data_out_reg[22]_i_4_n_0 ;
  wire \rgb_data_out_reg[22]_i_5_n_0 ;
  wire \rgb_data_out_reg[22]_i_6_n_0 ;
  wire \rgb_data_out_reg[22]_i_7_n_0 ;
  wire \rgb_data_out_reg[22]_i_8_n_0 ;
  wire \rgb_data_out_reg[22]_i_9_n_0 ;
  wire \rgb_data_out_reg[23]_i_10_n_0 ;
  wire \rgb_data_out_reg[23]_i_12_n_0 ;
  wire \rgb_data_out_reg[23]_i_13_n_0 ;
  wire \rgb_data_out_reg[23]_i_14_n_0 ;
  wire \rgb_data_out_reg[23]_i_14_n_4 ;
  wire \rgb_data_out_reg[23]_i_14_n_5 ;
  wire \rgb_data_out_reg[23]_i_14_n_6 ;
  wire \rgb_data_out_reg[23]_i_14_n_7 ;
  wire \rgb_data_out_reg[23]_i_15_n_0 ;
  wire \rgb_data_out_reg[23]_i_16_n_0 ;
  wire \rgb_data_out_reg[23]_i_17_n_0 ;
  wire \rgb_data_out_reg[23]_i_18_n_0 ;
  wire \rgb_data_out_reg[23]_i_19_n_0 ;
  wire \rgb_data_out_reg[23]_i_1_n_0 ;
  wire \rgb_data_out_reg[23]_i_20_n_0 ;
  wire \rgb_data_out_reg[23]_i_21_n_0 ;
  wire \rgb_data_out_reg[23]_i_22_n_0 ;
  wire \rgb_data_out_reg[23]_i_23_n_0 ;
  wire \rgb_data_out_reg[23]_i_24_n_0 ;
  wire \rgb_data_out_reg[23]_i_25_n_0 ;
  wire \rgb_data_out_reg[23]_i_26_n_0 ;
  wire \rgb_data_out_reg[23]_i_27_n_0 ;
  wire \rgb_data_out_reg[23]_i_28_n_0 ;
  wire \rgb_data_out_reg[23]_i_2_n_0 ;
  wire \rgb_data_out_reg[23]_i_3_n_0 ;
  wire \rgb_data_out_reg[23]_i_4_n_0 ;
  wire \rgb_data_out_reg[23]_i_5_n_0 ;
  wire \rgb_data_out_reg[23]_i_6_n_0 ;
  wire \rgb_data_out_reg[23]_i_7_n_0 ;
  wire \rgb_data_out_reg[23]_i_8_n_0 ;
  wire \rgb_data_out_reg[23]_i_9_n_0 ;
  wire \rgb_data_out_reg[2]_i_1_n_0 ;
  wire \rgb_data_out_reg[2]_i_2_n_0 ;
  wire \rgb_data_out_reg[2]_i_3_n_0 ;
  wire \rgb_data_out_reg[2]_i_4_n_0 ;
  wire \rgb_data_out_reg[2]_i_5_n_0 ;
  wire \rgb_data_out_reg[2]_i_6_n_0 ;
  wire \rgb_data_out_reg[2]_i_7_n_0 ;
  wire \rgb_data_out_reg[2]_i_8_n_0 ;
  wire \rgb_data_out_reg[2]_i_9_n_0 ;
  wire \rgb_data_out_reg[3]_i_10_n_0 ;
  wire \rgb_data_out_reg[3]_i_11_n_0 ;
  wire \rgb_data_out_reg[3]_i_12_n_0 ;
  wire \rgb_data_out_reg[3]_i_1_n_0 ;
  wire \rgb_data_out_reg[3]_i_2_n_0 ;
  wire \rgb_data_out_reg[3]_i_3_n_0 ;
  wire \rgb_data_out_reg[3]_i_4_n_0 ;
  wire \rgb_data_out_reg[3]_i_5_n_0 ;
  wire \rgb_data_out_reg[3]_i_6_n_0 ;
  wire \rgb_data_out_reg[3]_i_7_n_0 ;
  wire \rgb_data_out_reg[3]_i_8_n_0 ;
  wire \rgb_data_out_reg[3]_i_9_n_0 ;
  wire \rgb_data_out_reg[4]_i_10_n_0 ;
  wire \rgb_data_out_reg[4]_i_11_n_0 ;
  wire \rgb_data_out_reg[4]_i_1_n_0 ;
  wire \rgb_data_out_reg[4]_i_2_n_0 ;
  wire \rgb_data_out_reg[4]_i_3_n_0 ;
  wire \rgb_data_out_reg[4]_i_4_n_0 ;
  wire \rgb_data_out_reg[4]_i_5_n_0 ;
  wire \rgb_data_out_reg[4]_i_6_n_0 ;
  wire \rgb_data_out_reg[4]_i_7_n_0 ;
  wire \rgb_data_out_reg[4]_i_8_n_0 ;
  wire \rgb_data_out_reg[4]_i_9_n_0 ;
  wire \rgb_data_out_reg[5]_i_10_n_0 ;
  wire \rgb_data_out_reg[5]_i_11_n_0 ;
  wire \rgb_data_out_reg[5]_i_12_n_0 ;
  wire \rgb_data_out_reg[5]_i_13_n_0 ;
  wire \rgb_data_out_reg[5]_i_14_n_0 ;
  wire \rgb_data_out_reg[5]_i_15_n_0 ;
  wire \rgb_data_out_reg[5]_i_16_n_0 ;
  wire \rgb_data_out_reg[5]_i_17_n_0 ;
  wire \rgb_data_out_reg[5]_i_18_n_0 ;
  wire \rgb_data_out_reg[5]_i_1_n_0 ;
  wire \rgb_data_out_reg[5]_i_2_n_0 ;
  wire \rgb_data_out_reg[5]_i_3_n_0 ;
  wire \rgb_data_out_reg[5]_i_4_n_0 ;
  wire \rgb_data_out_reg[5]_i_5_n_0 ;
  wire \rgb_data_out_reg[5]_i_6_n_0 ;
  wire \rgb_data_out_reg[5]_i_7_n_0 ;
  wire \rgb_data_out_reg[5]_i_8_n_0 ;
  wire \rgb_data_out_reg[5]_i_9_n_0 ;
  wire \rgb_data_out_reg[6]_i_1_n_0 ;
  wire \rgb_data_out_reg[6]_i_2_n_0 ;
  wire \rgb_data_out_reg[6]_i_3_n_0 ;
  wire \rgb_data_out_reg[6]_i_4_n_0 ;
  wire \rgb_data_out_reg[6]_i_5_n_0 ;
  wire \rgb_data_out_reg[6]_i_6_n_0 ;
  wire \rgb_data_out_reg[6]_i_7_n_0 ;
  wire \rgb_data_out_reg[6]_i_8_n_0 ;
  wire \rgb_data_out_reg[7]_i_10_n_0 ;
  wire \rgb_data_out_reg[7]_i_11_n_0 ;
  wire \rgb_data_out_reg[7]_i_12_n_0 ;
  wire \rgb_data_out_reg[7]_i_13_n_0 ;
  wire \rgb_data_out_reg[7]_i_14_n_0 ;
  wire \rgb_data_out_reg[7]_i_14_n_4 ;
  wire \rgb_data_out_reg[7]_i_14_n_5 ;
  wire \rgb_data_out_reg[7]_i_14_n_6 ;
  wire \rgb_data_out_reg[7]_i_14_n_7 ;
  wire \rgb_data_out_reg[7]_i_15_n_0 ;
  wire \rgb_data_out_reg[7]_i_16_n_0 ;
  wire \rgb_data_out_reg[7]_i_17_n_0 ;
  wire \rgb_data_out_reg[7]_i_18_n_0 ;
  wire \rgb_data_out_reg[7]_i_19_n_0 ;
  wire \rgb_data_out_reg[7]_i_1_n_0 ;
  wire \rgb_data_out_reg[7]_i_20_n_0 ;
  wire \rgb_data_out_reg[7]_i_21_n_0 ;
  wire \rgb_data_out_reg[7]_i_22_n_0 ;
  wire \rgb_data_out_reg[7]_i_23_n_0 ;
  wire \rgb_data_out_reg[7]_i_2_n_0 ;
  wire \rgb_data_out_reg[7]_i_3_n_0 ;
  wire \rgb_data_out_reg[7]_i_4_n_0 ;
  wire \rgb_data_out_reg[7]_i_5_n_0 ;
  wire \rgb_data_out_reg[7]_i_6_n_0 ;
  wire \rgb_data_out_reg[7]_i_7_n_0 ;
  wire \rgb_data_out_reg[7]_i_8_n_0 ;
  wire \rgb_data_out_reg[7]_i_9_n_0 ;
  wire \rgb_data_out_reg[7]_i_9_n_5 ;
  wire \rgb_data_out_reg[7]_i_9_n_6 ;
  wire \rgb_data_out_reg[7]_i_9_n_7 ;
  wire \rgb_data_out_reg[8]_i_1_n_0 ;
  wire \rgb_data_out_reg[8]_i_2_n_0 ;
  wire \rgb_data_out_reg[8]_i_3_n_0 ;
  wire \rgb_data_out_reg[8]_i_4_n_0 ;
  wire \rgb_data_out_reg[8]_i_5_n_0 ;
  wire \rgb_data_out_reg[8]_i_6_n_0 ;
  wire \rgb_data_out_reg[8]_i_7_n_0 ;
  wire \rgb_data_out_reg[8]_i_8_n_0 ;
  wire \rgb_data_out_reg[8]_i_9_n_0 ;
  wire \rgb_data_out_reg[9]_i_1_n_0 ;
  wire \rgb_data_out_reg[9]_i_2_n_0 ;
  wire \rgb_data_out_reg[9]_i_3_n_0 ;
  wire \rgb_data_out_reg[9]_i_4_n_0 ;
  wire \rgb_data_out_reg[9]_i_5_n_0 ;
  wire \rgb_data_out_reg[9]_i_6_n_0 ;
  wire \rgb_data_out_reg[9]_i_7_n_0 ;
  wire \rgb_data_out_reg[9]_i_8_n_0 ;
  wire \state[0]_i_1_n_0 ;
  wire \state[1]_i_1_n_0 ;
  wire \state[2]_i_1_n_0 ;
  wire \state[2]_i_2_n_0 ;
  wire \state[2]_i_3_n_0 ;
  wire [12:5]u3;
  wire u3__0_carry__0_i_1_n_0;
  wire u3__0_carry__0_i_2_n_0;
  wire u3__0_carry__0_i_3_n_0;
  wire u3__0_carry__0_i_4_n_0;
  wire u3__0_carry__0_i_5_n_0;
  wire u3__0_carry__0_i_6_n_0;
  wire u3__0_carry__0_i_7_n_0;
  wire u3__0_carry__0_i_8_n_0;
  wire u3__0_carry__0_n_0;
  wire u3__0_carry__0_n_4;
  wire u3__0_carry__0_n_5;
  wire u3__0_carry__0_n_6;
  wire u3__0_carry__0_n_7;
  wire u3__0_carry__1_i_1_n_0;
  wire u3__0_carry__1_i_2_n_0;
  wire u3__0_carry__1_n_1;
  wire u3__0_carry__1_n_6;
  wire u3__0_carry__1_n_7;
  wire u3__0_carry_i_1_n_0;
  wire u3__0_carry_i_2_n_0;
  wire u3__0_carry_i_3_n_0;
  wire u3__0_carry_i_4_n_0;
  wire u3__0_carry_i_5_n_0;
  wire u3__0_carry_i_6_n_0;
  wire u3__0_carry_i_7_n_0;
  wire u3__0_carry_n_0;
  wire u3__0_carry_n_4;
  wire u3__0_carry_n_5;
  wire u3__0_carry_n_6;
  wire u3__0_carry_n_7;
  wire u3__32_carry__0_i_10_n_0;
  wire u3__32_carry__0_i_11_n_0;
  wire u3__32_carry__0_i_12_n_0;
  wire u3__32_carry__0_i_13_n_0;
  wire u3__32_carry__0_i_14_n_0;
  wire u3__32_carry__0_i_15_n_0;
  wire u3__32_carry__0_i_16_n_0;
  wire u3__32_carry__0_i_17_n_0;
  wire u3__32_carry__0_i_1_n_0;
  wire u3__32_carry__0_i_2_n_0;
  wire u3__32_carry__0_i_3_n_0;
  wire u3__32_carry__0_i_4_n_0;
  wire u3__32_carry__0_i_5_n_0;
  wire u3__32_carry__0_i_6_n_0;
  wire u3__32_carry__0_i_7_n_0;
  wire u3__32_carry__0_i_8_n_0;
  wire u3__32_carry__0_i_9_n_0;
  wire u3__32_carry__0_n_0;
  wire u3__32_carry__1_i_10_n_0;
  wire u3__32_carry__1_i_11_n_0;
  wire u3__32_carry__1_i_12_n_0;
  wire u3__32_carry__1_i_1_n_0;
  wire u3__32_carry__1_i_2_n_0;
  wire u3__32_carry__1_i_3_n_0;
  wire u3__32_carry__1_i_4_n_0;
  wire u3__32_carry__1_i_5_n_0;
  wire u3__32_carry__1_i_6_n_0;
  wire u3__32_carry__1_i_7_n_0;
  wire u3__32_carry__1_i_8_n_0;
  wire u3__32_carry__1_i_9_n_0;
  wire u3__32_carry__1_n_0;
  wire u3__32_carry__2_i_1_n_0;
  wire u3__32_carry__2_i_2_n_0;
  wire u3__32_carry__2_n_2;
  wire u3__32_carry_i_1_n_0;
  wire u3__32_carry_i_2_n_0;
  wire u3__32_carry_i_3_n_0;
  wire u3__32_carry_i_4_n_0;
  wire u3__32_carry_i_5_n_0;
  wire u3__32_carry_i_6_n_0;
  wire u3__32_carry_i_7_n_0;
  wire u3__32_carry_i_8_n_0;
  wire u3__32_carry_n_0;
  wire [7:0]v0_out;
  wire v3__0_carry__0_i_1_n_0;
  wire v3__0_carry__0_i_2_n_0;
  wire v3__0_carry__0_i_3_n_0;
  wire v3__0_carry__0_i_4_n_0;
  wire v3__0_carry__0_i_5_n_0;
  wire v3__0_carry__0_i_6_n_0;
  wire v3__0_carry__0_i_7_n_0;
  wire v3__0_carry__0_i_8_n_0;
  wire v3__0_carry__0_n_0;
  wire v3__0_carry__0_n_4;
  wire v3__0_carry__0_n_5;
  wire v3__0_carry__0_n_6;
  wire v3__0_carry__0_n_7;
  wire v3__0_carry__1_i_1_n_0;
  wire v3__0_carry__1_i_2_n_0;
  wire v3__0_carry__1_i_3_n_0;
  wire v3__0_carry__1_n_0;
  wire v3__0_carry__1_n_5;
  wire v3__0_carry__1_n_6;
  wire v3__0_carry__1_n_7;
  wire v3__0_carry_i_1_n_0;
  wire v3__0_carry_i_2_n_0;
  wire v3__0_carry_i_3_n_0;
  wire v3__0_carry_i_4_n_0;
  wire v3__0_carry_i_5_n_0;
  wire v3__0_carry_i_6_n_0;
  wire v3__0_carry_i_7_n_0;
  wire v3__0_carry_i_8_n_0;
  wire v3__0_carry_n_0;
  wire v3__0_carry_n_4;
  wire v3__0_carry_n_5;
  wire v3__0_carry_n_6;
  wire v3__0_carry_n_7;
  wire v3__29_carry__0_i_1_n_0;
  wire v3__29_carry__0_i_2_n_0;
  wire v3__29_carry__0_i_3_n_0;
  wire v3__29_carry__0_i_4_n_0;
  wire v3__29_carry__0_i_5_n_0;
  wire v3__29_carry__0_i_6_n_0;
  wire v3__29_carry__0_i_7_n_0;
  wire v3__29_carry__0_i_8_n_0;
  wire v3__29_carry__0_n_0;
  wire v3__29_carry__0_n_4;
  wire v3__29_carry__0_n_5;
  wire v3__29_carry__0_n_6;
  wire v3__29_carry__1_i_1_n_0;
  wire v3__29_carry__1_i_2_n_0;
  wire v3__29_carry__1_i_3_n_0;
  wire v3__29_carry__1_i_4_n_0;
  wire v3__29_carry__1_i_5_n_0;
  wire v3__29_carry__1_i_6_n_0;
  wire v3__29_carry__1_i_7_n_0;
  wire v3__29_carry__1_i_8_n_0;
  wire v3__29_carry__1_n_0;
  wire v3__29_carry__1_n_4;
  wire v3__29_carry__1_n_5;
  wire v3__29_carry__1_n_6;
  wire v3__29_carry__1_n_7;
  wire v3__29_carry__2_i_1_n_0;
  wire v3__29_carry__2_n_2;
  wire v3__29_carry__2_n_7;
  wire v3__29_carry_i_1_n_0;
  wire v3__29_carry_i_2_n_0;
  wire v3__29_carry_i_3_n_0;
  wire v3__29_carry_n_0;
  wire y3__1_carry__0_i_1_n_0;
  wire y3__1_carry__0_i_2_n_0;
  wire y3__1_carry__0_i_3_n_0;
  wire y3__1_carry__0_i_4_n_0;
  wire y3__1_carry__0_i_5_n_0;
  wire y3__1_carry__0_i_6_n_0;
  wire y3__1_carry__0_i_7_n_0;
  wire y3__1_carry__0_i_8_n_0;
  wire y3__1_carry__0_n_0;
  wire y3__1_carry__0_n_4;
  wire y3__1_carry__0_n_5;
  wire y3__1_carry__0_n_6;
  wire y3__1_carry__0_n_7;
  wire y3__1_carry__1_i_1_n_0;
  wire y3__1_carry__1_i_2_n_0;
  wire y3__1_carry__1_i_3_n_0;
  wire y3__1_carry__1_i_4_n_0;
  wire y3__1_carry__1_n_1;
  wire y3__1_carry__1_n_6;
  wire y3__1_carry__1_n_7;
  wire y3__1_carry_i_1_n_0;
  wire y3__1_carry_i_2_n_0;
  wire y3__1_carry_i_3_n_0;
  wire y3__1_carry_i_4_n_0;
  wire y3__1_carry_n_0;
  wire y3__1_carry_n_4;
  wire y3__1_carry_n_5;
  wire y3__1_carry_n_6;
  wire y3__1_carry_n_7;
  wire y3__33_carry__0_i_10_n_0;
  wire y3__33_carry__0_i_11_n_0;
  wire y3__33_carry__0_i_12_n_0;
  wire y3__33_carry__0_i_1_n_0;
  wire y3__33_carry__0_i_2_n_0;
  wire y3__33_carry__0_i_3_n_0;
  wire y3__33_carry__0_i_4_n_0;
  wire y3__33_carry__0_i_5_n_0;
  wire y3__33_carry__0_i_6_n_0;
  wire y3__33_carry__0_i_7_n_0;
  wire y3__33_carry__0_i_8_n_0;
  wire y3__33_carry__0_i_9_n_0;
  wire y3__33_carry__0_n_0;
  wire y3__33_carry__0_n_4;
  wire y3__33_carry__0_n_5;
  wire y3__33_carry__0_n_6;
  wire y3__33_carry__0_n_7;
  wire y3__33_carry__1_i_1_n_0;
  wire y3__33_carry__1_i_2_n_0;
  wire y3__33_carry__1_i_3_n_0;
  wire y3__33_carry__1_i_4_n_0;
  wire y3__33_carry__1_i_5_n_0;
  wire y3__33_carry__1_i_6_n_0;
  wire y3__33_carry__1_i_7_n_0;
  wire y3__33_carry__1_i_8_n_0;
  wire y3__33_carry__1_n_0;
  wire y3__33_carry__1_n_4;
  wire y3__33_carry__1_n_5;
  wire y3__33_carry__1_n_6;
  wire y3__33_carry__1_n_7;
  wire y3__33_carry_i_1_n_0;
  wire y3__33_carry_i_2_n_0;
  wire y3__33_carry_i_3_n_0;
  wire y3__33_carry_i_4_n_0;
  wire y3__33_carry_i_5_n_0;
  wire y3__33_carry_i_6_n_0;
  wire y3__33_carry_i_7_n_0;
  wire y3__33_carry_n_0;
  wire [3:0]NLW_b1_carry_CO_UNCONNECTED;
  wire [3:0]NLW_b1_carry_O_UNCONNECTED;
  wire [3:0]NLW_b1_carry_i_1_CO_UNCONNECTED;
  wire [3:2]NLW_b1_carry_i_1_O_UNCONNECTED;
  wire [2:0]NLW_b1_carry_i_15_CO_UNCONNECTED;
  wire [2:0]NLW_b1_carry_i_17_CO_UNCONNECTED;
  wire [2:0]NLW_b1_carry_i_5_CO_UNCONNECTED;
  wire [3:0]NLW_b1_carry_i_6_CO_UNCONNECTED;
  wire [3:1]NLW_b1_carry_i_6_O_UNCONNECTED;
  wire [3:0]\NLW_b1_inferred__1/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_b1_inferred__1/i__carry_O_UNCONNECTED ;
  wire [2:0]NLW_g1_carry_CO_UNCONNECTED;
  wire [3:0]NLW_g1_carry_O_UNCONNECTED;
  wire [2:0]\NLW_g1_inferred__1/i__carry_CO_UNCONNECTED ;
  wire [3:0]\NLW_g1_inferred__1/i__carry_O_UNCONNECTED ;
  wire [2:0]NLW_g2_carry_CO_UNCONNECTED;
  wire [2:0]NLW_g2_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_g2_carry__1_CO_UNCONNECTED;
  wire [3:3]NLW_g2_carry__1_O_UNCONNECTED;
  wire [3:1]NLW_g2_carry_i_9_CO_UNCONNECTED;
  wire [3:0]NLW_g2_carry_i_9_O_UNCONNECTED;
  wire [2:0]\NLW_g2_inferred__0/i__carry_CO_UNCONNECTED ;
  wire [2:0]\NLW_g2_inferred__0/i__carry__0_CO_UNCONNECTED ;
  wire [2:0]\NLW_g2_inferred__0/i__carry__1_CO_UNCONNECTED ;
  wire [3:3]\NLW_g2_inferred__0/i__carry__1_O_UNCONNECTED ;
  wire [2:0]NLW_g4__34_carry_CO_UNCONNECTED;
  wire [3:0]NLW_g4__34_carry_O_UNCONNECTED;
  wire [2:0]NLW_g4__34_carry__0_CO_UNCONNECTED;
  wire [0:0]NLW_g4__34_carry__0_O_UNCONNECTED;
  wire [2:0]NLW_g4__34_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_g4__34_carry__2_CO_UNCONNECTED;
  wire [3:3]NLW_g4__34_carry__2_O_UNCONNECTED;
  wire [3:1]NLW_g4__34_carry__2_i_5_CO_UNCONNECTED;
  wire [3:0]NLW_g4__34_carry__2_i_5_O_UNCONNECTED;
  wire [2:0]NLW_g4_carry_CO_UNCONNECTED;
  wire [2:0]NLW_g4_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_g4_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_i__carry_i_1__0_CO_UNCONNECTED;
  wire [3:2]NLW_i__carry_i_1__0_O_UNCONNECTED;
  wire [2:0]NLW_i__carry_i_5__1_CO_UNCONNECTED;
  wire [2:0]NLW_i__carry_i_6__0_CO_UNCONNECTED;
  wire [2:0]NLW_increase_brightness02_carry_CO_UNCONNECTED;
  wire [2:0]NLW_increase_brightness02_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_increase_brightness02_carry__1_CO_UNCONNECTED;
  wire [3:1]NLW_increase_brightness02_carry__1_O_UNCONNECTED;
  wire [2:0]NLW_increase_brightness12_carry_CO_UNCONNECTED;
  wire [2:0]NLW_increase_brightness12_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_increase_brightness12_carry__1_CO_UNCONNECTED;
  wire [3:1]NLW_increase_brightness12_carry__1_O_UNCONNECTED;
  wire [2:0]NLW_increase_brightness22_carry_CO_UNCONNECTED;
  wire [2:0]NLW_increase_brightness22_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_increase_brightness22_carry__1_CO_UNCONNECTED;
  wire [3:1]NLW_increase_brightness22_carry__1_O_UNCONNECTED;
  wire [2:0]NLW_increase_brightness2_carry_CO_UNCONNECTED;
  wire [2:0]NLW_increase_brightness2_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_increase_brightness2_carry__1_CO_UNCONNECTED;
  wire [3:1]NLW_increase_brightness2_carry__1_O_UNCONNECTED;
  wire [2:0]\NLW_rgb_data_out_reg[11]_i_9_CO_UNCONNECTED ;
  wire [2:0]\NLW_rgb_data_out_reg[15]_i_13_CO_UNCONNECTED ;
  wire [2:0]\NLW_rgb_data_out_reg[15]_i_6_CO_UNCONNECTED ;
  wire [3:3]\NLW_rgb_data_out_reg[15]_i_6_O_UNCONNECTED ;
  wire [2:0]\NLW_rgb_data_out_reg[16]_i_10_CO_UNCONNECTED ;
  wire [2:0]\NLW_rgb_data_out_reg[16]_i_7_CO_UNCONNECTED ;
  wire [2:0]\NLW_rgb_data_out_reg[19]_i_13_CO_UNCONNECTED ;
  wire [2:0]\NLW_rgb_data_out_reg[19]_i_15_CO_UNCONNECTED ;
  wire [0:0]\NLW_rgb_data_out_reg[19]_i_15_O_UNCONNECTED ;
  wire [3:0]\NLW_rgb_data_out_reg[21]_i_14_CO_UNCONNECTED ;
  wire [3:1]\NLW_rgb_data_out_reg[21]_i_14_O_UNCONNECTED ;
  wire [3:0]\NLW_rgb_data_out_reg[22]_i_12_CO_UNCONNECTED ;
  wire [3:1]\NLW_rgb_data_out_reg[22]_i_12_O_UNCONNECTED ;
  wire [2:0]\NLW_rgb_data_out_reg[22]_i_13_CO_UNCONNECTED ;
  wire [3:0]\NLW_rgb_data_out_reg[22]_i_18_CO_UNCONNECTED ;
  wire [3:1]\NLW_rgb_data_out_reg[22]_i_18_O_UNCONNECTED ;
  wire [2:0]\NLW_rgb_data_out_reg[22]_i_19_CO_UNCONNECTED ;
  wire [2:0]\NLW_rgb_data_out_reg[23]_i_11_CO_UNCONNECTED ;
  wire [3:3]\NLW_rgb_data_out_reg[23]_i_11_O_UNCONNECTED ;
  wire [2:0]\NLW_rgb_data_out_reg[23]_i_14_CO_UNCONNECTED ;
  wire [2:0]\NLW_rgb_data_out_reg[7]_i_14_CO_UNCONNECTED ;
  wire [2:0]\NLW_rgb_data_out_reg[7]_i_9_CO_UNCONNECTED ;
  wire [3:3]\NLW_rgb_data_out_reg[7]_i_9_O_UNCONNECTED ;
  wire [2:0]NLW_u3__0_carry_CO_UNCONNECTED;
  wire [2:0]NLW_u3__0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_u3__0_carry__1_CO_UNCONNECTED;
  wire [3:2]NLW_u3__0_carry__1_O_UNCONNECTED;
  wire [2:0]NLW_u3__32_carry_CO_UNCONNECTED;
  wire [3:0]NLW_u3__32_carry_O_UNCONNECTED;
  wire [2:0]NLW_u3__32_carry__0_CO_UNCONNECTED;
  wire [0:0]NLW_u3__32_carry__0_O_UNCONNECTED;
  wire [2:0]NLW_u3__32_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_u3__32_carry__2_CO_UNCONNECTED;
  wire [3:1]NLW_u3__32_carry__2_O_UNCONNECTED;
  wire [2:0]NLW_v3__0_carry_CO_UNCONNECTED;
  wire [2:0]NLW_v3__0_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_v3__0_carry__1_CO_UNCONNECTED;
  wire [3:3]NLW_v3__0_carry__1_O_UNCONNECTED;
  wire [2:0]NLW_v3__29_carry_CO_UNCONNECTED;
  wire [3:0]NLW_v3__29_carry_O_UNCONNECTED;
  wire [2:0]NLW_v3__29_carry__0_CO_UNCONNECTED;
  wire [0:0]NLW_v3__29_carry__0_O_UNCONNECTED;
  wire [2:0]NLW_v3__29_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_v3__29_carry__2_CO_UNCONNECTED;
  wire [3:1]NLW_v3__29_carry__2_O_UNCONNECTED;
  wire [2:0]NLW_y3__1_carry_CO_UNCONNECTED;
  wire [2:0]NLW_y3__1_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_y3__1_carry__1_CO_UNCONNECTED;
  wire [3:2]NLW_y3__1_carry__1_O_UNCONNECTED;
  wire [2:0]NLW_y3__33_carry_CO_UNCONNECTED;
  wire [3:0]NLW_y3__33_carry_O_UNCONNECTED;
  wire [2:0]NLW_y3__33_carry__0_CO_UNCONNECTED;
  wire [2:0]NLW_y3__33_carry__1_CO_UNCONNECTED;

  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 b1_carry
       (.CI(1'b0),
        .CO({NLW_b1_carry_CO_UNCONNECTED[3:2],b1_carry_n_2,NLW_b1_carry_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,b1_carry_i_1_n_1,b1_carry_i_2_n_0}),
        .O(NLW_b1_carry_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,b1_carry_i_3_n_0,b1_carry_i_4_n_0}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 b1_carry_i_1
       (.CI(b1_carry_i_5_n_0),
        .CO({NLW_b1_carry_i_1_CO_UNCONNECTED[3],b1_carry_i_1_n_1,NLW_b1_carry_i_1_CO_UNCONNECTED[1:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_b1_carry_i_1_O_UNCONNECTED[3:2],b1_carry_i_1_n_6,b1_carry_i_1_n_7}),
        .S({1'b0,1'b1,b1_carry_i_6_n_2,b1_carry_i_6_n_7}));
  LUT2 #(
    .INIT(4'hE)) 
    b1_carry_i_10
       (.I0(y3__33_carry__1_n_7),
        .I1(g2_carry_i_9_n_3),
        .O(b1_carry_i_10_n_0));
  LUT3 #(
    .INIT(8'h1E)) 
    b1_carry_i_11
       (.I0(y3__33_carry__1_n_4),
        .I1(g2_carry_i_9_n_3),
        .I2(b1_carry_i_15_n_4),
        .O(b1_carry_i_11_n_0));
  LUT3 #(
    .INIT(8'h1E)) 
    b1_carry_i_12
       (.I0(y3__33_carry__1_n_5),
        .I1(g2_carry_i_9_n_3),
        .I2(b1_carry_i_15_n_5),
        .O(b1_carry_i_12_n_0));
  LUT3 #(
    .INIT(8'h1E)) 
    b1_carry_i_13
       (.I0(y3__33_carry__1_n_6),
        .I1(g2_carry_i_9_n_3),
        .I2(b1_carry_i_15_n_6),
        .O(b1_carry_i_13_n_0));
  LUT3 #(
    .INIT(8'h1E)) 
    b1_carry_i_14
       (.I0(y3__33_carry__1_n_7),
        .I1(g2_carry_i_9_n_3),
        .I2(b1_carry_i_15_n_7),
        .O(b1_carry_i_14_n_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 b1_carry_i_15
       (.CI(b1_carry_i_17_n_0),
        .CO({b1_carry_i_15_n_0,NLW_b1_carry_i_15_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({b1_carry_i_15_n_4,b1_carry_i_15_n_5,b1_carry_i_15_n_6,b1_carry_i_15_n_7}),
        .S({b1_carry_i_18_n_0,b1_carry_i_19_n_0,b1_carry_i_20_n_0,b1_carry_i_21_n_0}));
  LUT2 #(
    .INIT(4'hB)) 
    b1_carry_i_16
       (.I0(u3[12]),
        .I1(u3__32_carry__2_n_2),
        .O(b1_carry_i_16_n_0));
  (* OPT_MODIFIED = "PROPCONST SWEEP" *) 
  CARRY4 b1_carry_i_17
       (.CI(1'b0),
        .CO({b1_carry_i_17_n_0,NLW_b1_carry_i_17_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,b1_carry_i_22_n_0,b1_carry_i_23_n_0,1'b0}),
        .O({b1_carry_i_17_n_4,b1_carry_i_17_n_5,b1_carry_i_17_n_6,b1_carry_i_17_n_7}),
        .S({b1_carry_i_24_n_0,b1_carry_i_25_n_0,b1_carry_i_26_n_0,b1_carry_i_27_n_0}));
  LUT2 #(
    .INIT(4'hB)) 
    b1_carry_i_18
       (.I0(u3[11]),
        .I1(u3__32_carry__2_n_2),
        .O(b1_carry_i_18_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    b1_carry_i_19
       (.I0(u3[10]),
        .I1(u3__32_carry__2_n_2),
        .O(b1_carry_i_19_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    b1_carry_i_2
       (.I0(b1_carry_i_1_n_6),
        .I1(b1_carry_i_1_n_7),
        .O(b1_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    b1_carry_i_20
       (.I0(u3[9]),
        .I1(u3__32_carry__2_n_2),
        .O(b1_carry_i_20_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    b1_carry_i_21
       (.I0(u3[8]),
        .I1(u3__32_carry__2_n_2),
        .O(b1_carry_i_21_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    b1_carry_i_22
       (.I0(u3[6]),
        .I1(u3__32_carry__2_n_2),
        .O(b1_carry_i_22_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    b1_carry_i_23
       (.I0(u3[11]),
        .I1(u3__32_carry__2_n_2),
        .O(b1_carry_i_23_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    b1_carry_i_24
       (.I0(u3[7]),
        .I1(u3__32_carry__2_n_2),
        .O(b1_carry_i_24_n_0));
  LUT3 #(
    .INIT(8'h60)) 
    b1_carry_i_25
       (.I0(u3[6]),
        .I1(u3[12]),
        .I2(u3__32_carry__2_n_2),
        .O(b1_carry_i_25_n_0));
  LUT3 #(
    .INIT(8'h60)) 
    b1_carry_i_26
       (.I0(u3[5]),
        .I1(u3[11]),
        .I2(u3__32_carry__2_n_2),
        .O(b1_carry_i_26_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    b1_carry_i_27
       (.I0(u3[10]),
        .I1(u3__32_carry__2_n_2),
        .O(b1_carry_i_27_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    b1_carry_i_3
       (.I0(b1_carry_i_1_n_1),
        .O(b1_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    b1_carry_i_4
       (.I0(b1_carry_i_1_n_7),
        .I1(b1_carry_i_1_n_6),
        .O(b1_carry_i_4_n_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 b1_carry_i_5
       (.CI(\rgb_data_out_reg[11]_i_9_n_0 ),
        .CO({b1_carry_i_5_n_0,NLW_b1_carry_i_5_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({b1_carry_i_7_n_0,b1_carry_i_8_n_0,b1_carry_i_9_n_0,b1_carry_i_10_n_0}),
        .O({b1_carry_i_5_n_4,b1_carry_i_5_n_5,b1_carry_i_5_n_6,b1_carry_i_5_n_7}),
        .S({b1_carry_i_11_n_0,b1_carry_i_12_n_0,b1_carry_i_13_n_0,b1_carry_i_14_n_0}));
  CARRY4 b1_carry_i_6
       (.CI(b1_carry_i_15_n_0),
        .CO({NLW_b1_carry_i_6_CO_UNCONNECTED[3:2],b1_carry_i_6_n_2,NLW_b1_carry_i_6_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_b1_carry_i_6_O_UNCONNECTED[3:1],b1_carry_i_6_n_7}),
        .S({1'b0,1'b0,1'b1,b1_carry_i_16_n_0}));
  LUT2 #(
    .INIT(4'hE)) 
    b1_carry_i_7
       (.I0(y3__33_carry__1_n_4),
        .I1(g2_carry_i_9_n_3),
        .O(b1_carry_i_7_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    b1_carry_i_8
       (.I0(g2_carry_i_9_n_3),
        .I1(y3__33_carry__1_n_5),
        .O(b1_carry_i_8_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    b1_carry_i_9
       (.I0(y3__33_carry__1_n_6),
        .I1(g2_carry_i_9_n_3),
        .O(b1_carry_i_9_n_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \b1_inferred__1/i__carry 
       (.CI(1'b0),
        .CO({\NLW_b1_inferred__1/i__carry_CO_UNCONNECTED [3:2],b1,\NLW_b1_inferred__1/i__carry_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,b2[10],i__carry_i_2__0_n_0}),
        .O(\NLW_b1_inferred__1/i__carry_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,i__carry_i_3__0_n_0,i__carry_i_4__0_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 g1_carry
       (.CI(1'b0),
        .CO({g1_carry_n_0,NLW_g1_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,g1_carry_i_1_n_0,g1_carry_i_2_n_0,g1_carry_i_3_n_0}),
        .O(NLW_g1_carry_O_UNCONNECTED[3:0]),
        .S({g2_carry__1_n_0,g2_carry__1_n_0,g1_carry_i_4_n_0,g1_carry_i_5_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    g1_carry_i_1
       (.I0(g2_carry__1_n_0),
        .O(g1_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    g1_carry_i_2
       (.I0(g2_carry__1_n_5),
        .I1(g2_carry__1_n_0),
        .O(g1_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    g1_carry_i_3
       (.I0(g2_carry__1_n_6),
        .I1(g2_carry__1_n_7),
        .O(g1_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    g1_carry_i_4
       (.I0(g2_carry__1_n_0),
        .I1(g2_carry__1_n_5),
        .O(g1_carry_i_4_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    g1_carry_i_5
       (.I0(g2_carry__1_n_7),
        .I1(g2_carry__1_n_6),
        .O(g1_carry_i_5_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \g1_inferred__1/i__carry 
       (.CI(1'b0),
        .CO({g1,\NLW_g1_inferred__1/i__carry_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,g2[15],i__carry_i_2_n_0,i__carry_i_3_n_0}),
        .O(\NLW_g1_inferred__1/i__carry_O_UNCONNECTED [3:0]),
        .S({\g2_inferred__0/i__carry__1_n_0 ,\g2_inferred__0/i__carry__1_n_0 ,i__carry_i_4_n_0,i__carry_i_5__0_n_0}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 g2_carry
       (.CI(1'b0),
        .CO({g2_carry_n_0,NLW_g2_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({g2_carry_i_1_n_0,g2_carry_i_2_n_0,g2_carry_i_3_n_0,g2_carry_i_4_n_0}),
        .O({g2_carry_n_4,g2_carry_n_5,g2_carry_n_6,g2_carry_n_7}),
        .S({g2_carry_i_5_n_0,g2_carry_i_6_n_0,g2_carry_i_7_n_0,g2_carry_i_8_n_0}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 g2_carry__0
       (.CI(g2_carry_n_0),
        .CO({g2_carry__0_n_0,NLW_g2_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({g2_carry__0_i_1_n_0,g2_carry__0_i_2_n_0,g2_carry__0_i_3_n_0,g2_carry__0_i_4_n_0}),
        .O({g2_carry__0_n_4,g2_carry__0_n_5,g2_carry__0_n_6,g2_carry__0_n_7}),
        .S({g2_carry__0_i_5_n_0,g2_carry__0_i_6_n_0,g2_carry__0_i_7_n_0,g2_carry__0_i_8_n_0}));
  LUT2 #(
    .INIT(4'hE)) 
    g2_carry__0_i_1
       (.I0(y3__33_carry__1_n_4),
        .I1(g2_carry_i_9_n_3),
        .O(g2_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    g2_carry__0_i_2
       (.I0(g2_carry_i_9_n_3),
        .I1(y3__33_carry__1_n_5),
        .O(g2_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    g2_carry__0_i_3
       (.I0(y3__33_carry__1_n_6),
        .I1(g2_carry_i_9_n_3),
        .O(g2_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    g2_carry__0_i_4
       (.I0(y3__33_carry__1_n_7),
        .I1(g2_carry_i_9_n_3),
        .O(g2_carry__0_i_4_n_0));
  LUT3 #(
    .INIT(8'h1E)) 
    g2_carry__0_i_5
       (.I0(y3__33_carry__1_n_4),
        .I1(g2_carry_i_9_n_3),
        .I2(g4__34_carry__2_n_7),
        .O(g2_carry__0_i_5_n_0));
  LUT3 #(
    .INIT(8'h1E)) 
    g2_carry__0_i_6
       (.I0(y3__33_carry__1_n_5),
        .I1(g2_carry_i_9_n_3),
        .I2(g4__34_carry__1_n_4),
        .O(g2_carry__0_i_6_n_0));
  LUT3 #(
    .INIT(8'h1E)) 
    g2_carry__0_i_7
       (.I0(y3__33_carry__1_n_6),
        .I1(g2_carry_i_9_n_3),
        .I2(g4__34_carry__1_n_5),
        .O(g2_carry__0_i_7_n_0));
  LUT3 #(
    .INIT(8'h1E)) 
    g2_carry__0_i_8
       (.I0(y3__33_carry__1_n_7),
        .I1(g2_carry_i_9_n_3),
        .I2(g4__34_carry__1_n_6),
        .O(g2_carry__0_i_8_n_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 g2_carry__1
       (.CI(g2_carry__0_n_0),
        .CO({g2_carry__1_n_0,NLW_g2_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b0,1'b0}),
        .O({NLW_g2_carry__1_O_UNCONNECTED[3],g2_carry__1_n_5,g2_carry__1_n_6,g2_carry__1_n_7}),
        .S({1'b1,g30,g30,g4__34_carry__2_n_6}));
  LUT2 #(
    .INIT(4'hE)) 
    g2_carry_i_1
       (.I0(g2_carry_i_9_n_3),
        .I1(y3__33_carry__0_n_4),
        .O(g2_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    g2_carry_i_2
       (.I0(y3__33_carry__0_n_5),
        .I1(g2_carry_i_9_n_3),
        .O(g2_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    g2_carry_i_3
       (.I0(y3__33_carry__0_n_6),
        .I1(g2_carry_i_9_n_3),
        .O(g2_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    g2_carry_i_4
       (.I0(y3__33_carry__0_n_7),
        .I1(g2_carry_i_9_n_3),
        .O(g2_carry_i_4_n_0));
  LUT3 #(
    .INIT(8'h1E)) 
    g2_carry_i_5
       (.I0(y3__33_carry__0_n_4),
        .I1(g2_carry_i_9_n_3),
        .I2(g4__34_carry__1_n_7),
        .O(g2_carry_i_5_n_0));
  LUT3 #(
    .INIT(8'h1E)) 
    g2_carry_i_6
       (.I0(y3__33_carry__0_n_5),
        .I1(g2_carry_i_9_n_3),
        .I2(g4__34_carry__0_n_4),
        .O(g2_carry_i_6_n_0));
  LUT3 #(
    .INIT(8'h1E)) 
    g2_carry_i_7
       (.I0(y3__33_carry__0_n_6),
        .I1(g2_carry_i_9_n_3),
        .I2(g4__34_carry__0_n_5),
        .O(g2_carry_i_7_n_0));
  LUT3 #(
    .INIT(8'h1E)) 
    g2_carry_i_8
       (.I0(y3__33_carry__0_n_7),
        .I1(g2_carry_i_9_n_3),
        .I2(g4__34_carry__0_n_6),
        .O(g2_carry_i_8_n_0));
  CARRY4 g2_carry_i_9
       (.CI(y3__33_carry__1_n_0),
        .CO({NLW_g2_carry_i_9_CO_UNCONNECTED[3:1],g2_carry_i_9_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_g2_carry_i_9_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,1'b1}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \g2_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\g2_inferred__0/i__carry_n_0 ,\NLW_g2_inferred__0/i__carry_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({g4__34_carry__1_n_7,g4__34_carry__0_n_4,g4__34_carry__0_n_5,g4__34_carry__0_n_6}),
        .O(g2[3:0]),
        .S({i__carry_i_1__1_n_0,i__carry_i_2__1_n_0,i__carry_i_3__1_n_0,i__carry_i_4__1_n_0}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \g2_inferred__0/i__carry__0 
       (.CI(\g2_inferred__0/i__carry_n_0 ),
        .CO({\g2_inferred__0/i__carry__0_n_0 ,\NLW_g2_inferred__0/i__carry__0_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({g4__34_carry__2_n_7,g4__34_carry__1_n_4,g4__34_carry__1_n_5,g4__34_carry__1_n_6}),
        .O(g2[7:4]),
        .S({i__carry__0_i_1_n_0,i__carry__0_i_2_n_0,i__carry__0_i_3_n_0,i__carry__0_i_4_n_0}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \g2_inferred__0/i__carry__1 
       (.CI(\g2_inferred__0/i__carry__0_n_0 ),
        .CO({\g2_inferred__0/i__carry__1_n_0 ,\NLW_g2_inferred__0/i__carry__1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b0,1'b0}),
        .O({\NLW_g2_inferred__0/i__carry__1_O_UNCONNECTED [3],g2[10:8]}),
        .S({1'b1,g30,g30,g4__34_carry__2_n_6}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 g4__34_carry
       (.CI(1'b0),
        .CO({g4__34_carry_n_0,NLW_g4__34_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({g4__34_carry_i_1_n_0,g4__34_carry_i_2_n_0,g4_carry_n_6,g4_carry_n_7}),
        .O(NLW_g4__34_carry_O_UNCONNECTED[3:0]),
        .S({g4__34_carry_i_3_n_0,g4__34_carry_i_4_n_0,g4__34_carry_i_5_n_0,g4__34_carry_i_6_n_0}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 g4__34_carry__0
       (.CI(g4__34_carry_n_0),
        .CO({g4__34_carry__0_n_0,NLW_g4__34_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({g4__34_carry__0_i_1_n_0,g4__34_carry__0_i_2_n_0,g4__34_carry__0_i_3_n_0,g4__34_carry__0_i_4_n_0}),
        .O({g4__34_carry__0_n_4,g4__34_carry__0_n_5,g4__34_carry__0_n_6,NLW_g4__34_carry__0_O_UNCONNECTED[0]}),
        .S({g4__34_carry__0_i_5_n_0,g4__34_carry__0_i_6_n_0,g4__34_carry__0_i_7_n_0,g4__34_carry__0_i_8_n_0}));
  LUT6 #(
    .INIT(64'hBA2AFFFF0000BA2A)) 
    g4__34_carry__0_i_1
       (.I0(g4_carry__0_n_6),
        .I1(u3[10]),
        .I2(u3__32_carry__2_n_2),
        .I3(u3[8]),
        .I4(v0_out[2]),
        .I5(g4__34_carry__0_i_10_n_0),
        .O(g4__34_carry__0_i_1_n_0));
  LUT4 #(
    .INIT(16'h48B7)) 
    g4__34_carry__0_i_10
       (.I0(u3[9]),
        .I1(u3__32_carry__2_n_2),
        .I2(u3[11]),
        .I3(g4_carry__0_n_5),
        .O(g4__34_carry__0_i_10_n_0));
  LUT4 #(
    .INIT(16'h48B7)) 
    g4__34_carry__0_i_11
       (.I0(u3[8]),
        .I1(u3__32_carry__2_n_2),
        .I2(u3[10]),
        .I3(g4_carry__0_n_6),
        .O(g4__34_carry__0_i_11_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    g4__34_carry__0_i_12
       (.I0(u3__32_carry__2_n_2),
        .I1(u3[11]),
        .O(g4__34_carry__0_i_12_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    g4__34_carry__0_i_13
       (.I0(u3__32_carry__2_n_2),
        .I1(u3[9]),
        .O(g4__34_carry__0_i_13_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    g4__34_carry__0_i_14
       (.I0(v3__29_carry__2_n_2),
        .I1(v3__29_carry__1_n_7),
        .O(v0_out[3]));
  LUT4 #(
    .INIT(16'hB748)) 
    g4__34_carry__0_i_15
       (.I0(u3[10]),
        .I1(u3__32_carry__2_n_2),
        .I2(u3[12]),
        .I3(g4_carry__0_n_4),
        .O(g4__34_carry__0_i_15_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    g4__34_carry__0_i_16
       (.I0(u3__32_carry__2_n_2),
        .I1(u3[10]),
        .O(g4__34_carry__0_i_16_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    g4__34_carry__0_i_17
       (.I0(u3__32_carry__2_n_2),
        .I1(u3[8]),
        .O(g4__34_carry__0_i_17_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    g4__34_carry__0_i_18
       (.I0(v3__29_carry__2_n_2),
        .I1(v3__29_carry__0_n_5),
        .O(v0_out[1]));
  LUT6 #(
    .INIT(64'hBF2ABFBFBF2ABF2A)) 
    g4__34_carry__0_i_2
       (.I0(g4__34_carry__0_i_11_n_0),
        .I1(v3__29_carry__0_n_5),
        .I2(v3__29_carry__2_n_2),
        .I3(g4_carry__0_n_7),
        .I4(u3[9]),
        .I5(u3__32_carry__2_n_2),
        .O(g4__34_carry__0_i_2_n_0));
  LUT6 #(
    .INIT(64'h0BBBBFFF8FFF3BBB)) 
    g4__34_carry__0_i_3
       (.I0(u3[7]),
        .I1(u3__32_carry__2_n_2),
        .I2(v3__29_carry__0_n_6),
        .I3(v3__29_carry__2_n_2),
        .I4(g4_carry__0_n_7),
        .I5(u3[9]),
        .O(g4__34_carry__0_i_3_n_0));
  LUT6 #(
    .INIT(64'h9666C3336999C333)) 
    g4__34_carry__0_i_4
       (.I0(u3[9]),
        .I1(g4_carry__0_n_7),
        .I2(v3__29_carry__2_n_2),
        .I3(v3__29_carry__0_n_6),
        .I4(u3__32_carry__2_n_2),
        .I5(u3[7]),
        .O(g4__34_carry__0_i_4_n_0));
  LUT6 #(
    .INIT(64'h6A5695A995A96A56)) 
    g4__34_carry__0_i_5
       (.I0(g4__34_carry__0_i_1_n_0),
        .I1(g4_carry__0_n_5),
        .I2(g4__34_carry__0_i_12_n_0),
        .I3(g4__34_carry__0_i_13_n_0),
        .I4(v0_out[3]),
        .I5(g4__34_carry__0_i_15_n_0),
        .O(g4__34_carry__0_i_5_n_0));
  LUT6 #(
    .INIT(64'h95A96A566A5695A9)) 
    g4__34_carry__0_i_6
       (.I0(g4__34_carry__0_i_2_n_0),
        .I1(g4_carry__0_n_6),
        .I2(g4__34_carry__0_i_16_n_0),
        .I3(g4__34_carry__0_i_17_n_0),
        .I4(v0_out[2]),
        .I5(g4__34_carry__0_i_10_n_0),
        .O(g4__34_carry__0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9669969696699669)) 
    g4__34_carry__0_i_7
       (.I0(g4__34_carry__0_i_3_n_0),
        .I1(v0_out[1]),
        .I2(g4__34_carry__0_i_11_n_0),
        .I3(g4_carry__0_n_7),
        .I4(u3[9]),
        .I5(u3__32_carry__2_n_2),
        .O(g4__34_carry__0_i_7_n_0));
  LUT5 #(
    .INIT(32'h6555AA6A)) 
    g4__34_carry__0_i_8
       (.I0(g4__34_carry__0_i_4_n_0),
        .I1(u3[6]),
        .I2(u3__32_carry__2_n_2),
        .I3(u3[8]),
        .I4(g4_carry_n_4),
        .O(g4__34_carry__0_i_8_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    g4__34_carry__0_i_9
       (.I0(v3__29_carry__2_n_2),
        .I1(v3__29_carry__0_n_4),
        .O(v0_out[2]));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 g4__34_carry__1
       (.CI(g4__34_carry__0_n_0),
        .CO({g4__34_carry__1_n_0,NLW_g4__34_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({g4__34_carry__1_i_1_n_0,g4__34_carry__1_i_2_n_0,g4__34_carry__1_i_3_n_0,g4__34_carry__1_i_4_n_0}),
        .O({g4__34_carry__1_n_4,g4__34_carry__1_n_5,g4__34_carry__1_n_6,g4__34_carry__1_n_7}),
        .S({g4__34_carry__1_i_5_n_0,g4__34_carry__1_i_6_n_0,g4__34_carry__1_i_7_n_0,g4__34_carry__1_i_8_n_0}));
  LUT6 #(
    .INIT(64'h00FBFB00FB00FB00)) 
    g4__34_carry__1_i_1
       (.I0(g4_carry__1_n_6),
        .I1(u3__32_carry__2_n_2),
        .I2(u3[12]),
        .I3(g4_carry__1_n_5),
        .I4(v3__29_carry__1_n_4),
        .I5(v3__29_carry__2_n_2),
        .O(g4__34_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    g4__34_carry__1_i_10
       (.I0(u3__32_carry__2_n_2),
        .I1(u3[12]),
        .O(g4__34_carry__1_i_10_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    g4__34_carry__1_i_11
       (.I0(v3__29_carry__2_n_2),
        .I1(v3__29_carry__1_n_6),
        .O(v0_out[4]));
  LUT2 #(
    .INIT(4'h8)) 
    g4__34_carry__1_i_12
       (.I0(v3__29_carry__2_n_2),
        .I1(v3__29_carry__2_n_7),
        .O(v0_out[7]));
  LUT2 #(
    .INIT(4'h8)) 
    g4__34_carry__1_i_13
       (.I0(v3__29_carry__2_n_2),
        .I1(v3__29_carry__1_n_4),
        .O(v0_out[6]));
  LUT4 #(
    .INIT(16'h45D5)) 
    g4__34_carry__1_i_14
       (.I0(g4_carry__0_n_4),
        .I1(u3[12]),
        .I2(u3__32_carry__2_n_2),
        .I3(u3[10]),
        .O(g4__34_carry__1_i_14_n_0));
  LUT6 #(
    .INIT(64'hF75DF75DF75D7315)) 
    g4__34_carry__1_i_2
       (.I0(v0_out[5]),
        .I1(u3__32_carry__2_n_2),
        .I2(u3[12]),
        .I3(g4_carry__1_n_6),
        .I4(u3[11]),
        .I5(g4_carry__1_n_7),
        .O(g4__34_carry__1_i_2_n_0));
  LUT6 #(
    .INIT(64'h008E8EFF8EFF008E)) 
    g4__34_carry__1_i_3
       (.I0(g4_carry__0_n_4),
        .I1(g4__34_carry__1_i_10_n_0),
        .I2(g4__34_carry__0_i_16_n_0),
        .I3(v0_out[4]),
        .I4(g4__34_carry__0_i_12_n_0),
        .I5(g4_carry__1_n_7),
        .O(g4__34_carry__1_i_3_n_0));
  LUT6 #(
    .INIT(64'h7177717111717171)) 
    g4__34_carry__1_i_4
       (.I0(g4__34_carry__0_i_15_n_0),
        .I1(v0_out[3]),
        .I2(g4_carry__0_n_5),
        .I3(u3[11]),
        .I4(u3__32_carry__2_n_2),
        .I5(u3[9]),
        .O(g4__34_carry__1_i_4_n_0));
  LUT6 #(
    .INIT(64'hF00F2DD2D22DF00F)) 
    g4__34_carry__1_i_5
       (.I0(g4__34_carry__1_i_10_n_0),
        .I1(g4_carry__1_n_6),
        .I2(v0_out[7]),
        .I3(g4_carry__1_n_4),
        .I4(v0_out[6]),
        .I5(g4_carry__1_n_5),
        .O(g4__34_carry__1_i_5_n_0));
  LUT6 #(
    .INIT(64'h6969696969966969)) 
    g4__34_carry__1_i_6
       (.I0(g4__34_carry__1_i_2_n_0),
        .I1(v0_out[6]),
        .I2(g4_carry__1_n_5),
        .I3(u3[12]),
        .I4(u3__32_carry__2_n_2),
        .I5(g4_carry__1_n_6),
        .O(g4__34_carry__1_i_6_n_0));
  LUT6 #(
    .INIT(64'h6996699696696996)) 
    g4__34_carry__1_i_7
       (.I0(g4__34_carry__1_i_3_n_0),
        .I1(v0_out[5]),
        .I2(g4__34_carry__1_i_10_n_0),
        .I3(g4_carry__1_n_6),
        .I4(g4__34_carry__0_i_12_n_0),
        .I5(g4_carry__1_n_7),
        .O(g4__34_carry__1_i_7_n_0));
  LUT6 #(
    .INIT(64'h6996696996699696)) 
    g4__34_carry__1_i_8
       (.I0(g4__34_carry__1_i_4_n_0),
        .I1(g4__34_carry__1_i_14_n_0),
        .I2(g4_carry__1_n_7),
        .I3(u3[11]),
        .I4(u3__32_carry__2_n_2),
        .I5(v0_out[4]),
        .O(g4__34_carry__1_i_8_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    g4__34_carry__1_i_9
       (.I0(v3__29_carry__2_n_2),
        .I1(v3__29_carry__1_n_5),
        .O(v0_out[5]));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 g4__34_carry__2
       (.CI(g4__34_carry__1_n_0),
        .CO(NLW_g4__34_carry__2_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,g4__34_carry__2_i_1_n_0,g4__34_carry__2_i_2_n_0}),
        .O({NLW_g4__34_carry__2_O_UNCONNECTED[3],g30,g4__34_carry__2_n_6,g4__34_carry__2_n_7}),
        .S({1'b0,1'b1,g4__34_carry__2_i_3_n_0,g4__34_carry__2_i_4_n_0}));
  LUT4 #(
    .INIT(16'hAA2A)) 
    g4__34_carry__2_i_1
       (.I0(g4__34_carry__2_i_5_n_3),
        .I1(v3__29_carry__2_n_2),
        .I2(v3__29_carry__2_n_7),
        .I3(g4_carry__1_n_4),
        .O(g4__34_carry__2_i_1_n_0));
  LUT5 #(
    .INIT(32'h0BB0F0F0)) 
    g4__34_carry__2_i_2
       (.I0(g4_carry__1_n_5),
        .I1(v3__29_carry__1_n_4),
        .I2(g4_carry__1_n_4),
        .I3(v3__29_carry__2_n_7),
        .I4(v3__29_carry__2_n_2),
        .O(g4__34_carry__2_i_2_n_0));
  LUT4 #(
    .INIT(16'hAA2A)) 
    g4__34_carry__2_i_3
       (.I0(g4__34_carry__2_i_5_n_3),
        .I1(v3__29_carry__2_n_2),
        .I2(v3__29_carry__2_n_7),
        .I3(g4_carry__1_n_4),
        .O(g4__34_carry__2_i_3_n_0));
  LUT6 #(
    .INIT(64'h02D0F0F0FD2F0F0F)) 
    g4__34_carry__2_i_4
       (.I0(v3__29_carry__1_n_4),
        .I1(g4_carry__1_n_5),
        .I2(g4_carry__1_n_4),
        .I3(v3__29_carry__2_n_7),
        .I4(v3__29_carry__2_n_2),
        .I5(g4__34_carry__2_i_5_n_3),
        .O(g4__34_carry__2_i_4_n_0));
  CARRY4 g4__34_carry__2_i_5
       (.CI(g4_carry__1_n_0),
        .CO({NLW_g4__34_carry__2_i_5_CO_UNCONNECTED[3:1],g4__34_carry__2_i_5_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_g4__34_carry__2_i_5_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,1'b1}));
  (* HLUTNM = "lutpair26" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    g4__34_carry_i_1
       (.I0(g4_carry_n_5),
        .I1(u3[7]),
        .I2(u3__32_carry__2_n_2),
        .O(g4__34_carry_i_1_n_0));
  LUT3 #(
    .INIT(8'h4B)) 
    g4__34_carry_i_2
       (.I0(u3[7]),
        .I1(u3__32_carry__2_n_2),
        .I2(g4_carry_n_5),
        .O(g4__34_carry_i_2_n_0));
  LUT5 #(
    .INIT(32'h96996999)) 
    g4__34_carry_i_3
       (.I0(g4__34_carry_i_1_n_0),
        .I1(g4_carry_n_4),
        .I2(u3[8]),
        .I3(u3__32_carry__2_n_2),
        .I4(u3[6]),
        .O(g4__34_carry_i_3_n_0));
  (* HLUTNM = "lutpair26" *) 
  LUT4 #(
    .INIT(16'h9A6A)) 
    g4__34_carry_i_4
       (.I0(g4_carry_n_5),
        .I1(u3[7]),
        .I2(u3__32_carry__2_n_2),
        .I3(u3[5]),
        .O(g4__34_carry_i_4_n_0));
  LUT3 #(
    .INIT(8'h9A)) 
    g4__34_carry_i_5
       (.I0(g4_carry_n_6),
        .I1(u3[6]),
        .I2(u3__32_carry__2_n_2),
        .O(g4__34_carry_i_5_n_0));
  LUT3 #(
    .INIT(8'h9A)) 
    g4__34_carry_i_6
       (.I0(g4_carry_n_7),
        .I1(u3[5]),
        .I2(u3__32_carry__2_n_2),
        .O(g4__34_carry_i_6_n_0));
  (* OPT_MODIFIED = "PROPCONST SWEEP" *) 
  CARRY4 g4_carry
       (.CI(1'b0),
        .CO({g4_carry_n_0,NLW_g4_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({g4_carry_i_1_n_0,g4_carry_i_2_n_0,g4_carry_i_3_n_0,1'b0}),
        .O({g4_carry_n_4,g4_carry_n_5,g4_carry_n_6,g4_carry_n_7}),
        .S({g4_carry_i_4_n_0,g4_carry_i_5_n_0,g4_carry_i_6_n_0,g4_carry_i_7_n_0}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 g4_carry__0
       (.CI(g4_carry_n_0),
        .CO({g4_carry__0_n_0,NLW_g4_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({g4_carry__0_i_1_n_0,g4_carry__0_i_2_n_0,g4_carry__0_i_3_n_0,g4_carry__0_i_4_n_0}),
        .O({g4_carry__0_n_4,g4_carry__0_n_5,g4_carry__0_n_6,g4_carry__0_n_7}),
        .S({g4_carry__0_i_5_n_0,g4_carry__0_i_6_n_0,g4_carry__0_i_7_n_0,g4_carry__0_i_8_n_0}));
  LUT5 #(
    .INIT(32'h04FF4FFF)) 
    g4_carry__0_i_1
       (.I0(u3[7]),
        .I1(u3__32_carry__2_n_2),
        .I2(v3__29_carry__1_n_5),
        .I3(v3__29_carry__2_n_2),
        .I4(v3__29_carry__1_n_4),
        .O(g4_carry__0_i_1_n_0));
  LUT5 #(
    .INIT(32'h04FF4FFF)) 
    g4_carry__0_i_2
       (.I0(u3[6]),
        .I1(u3__32_carry__2_n_2),
        .I2(v3__29_carry__1_n_6),
        .I3(v3__29_carry__2_n_2),
        .I4(v3__29_carry__1_n_5),
        .O(g4_carry__0_i_2_n_0));
  LUT3 #(
    .INIT(8'h7F)) 
    g4_carry__0_i_3
       (.I0(v3__29_carry__1_n_6),
        .I1(v3__29_carry__1_n_7),
        .I2(v3__29_carry__2_n_2),
        .O(g4_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    g4_carry__0_i_4
       (.I0(u3__32_carry__2_n_2),
        .I1(u3[5]),
        .O(g4_carry__0_i_4_n_0));
  LUT6 #(
    .INIT(64'h9A659A9A6A956A6A)) 
    g4_carry__0_i_5
       (.I0(g4_carry__0_i_1_n_0),
        .I1(v3__29_carry__1_n_4),
        .I2(v3__29_carry__2_n_2),
        .I3(u3[8]),
        .I4(u3__32_carry__2_n_2),
        .I5(v3__29_carry__2_n_7),
        .O(g4_carry__0_i_5_n_0));
  LUT6 #(
    .INIT(64'h9A659A9A6A956A6A)) 
    g4_carry__0_i_6
       (.I0(g4_carry__0_i_2_n_0),
        .I1(v3__29_carry__1_n_5),
        .I2(v3__29_carry__2_n_2),
        .I3(u3[7]),
        .I4(u3__32_carry__2_n_2),
        .I5(v3__29_carry__1_n_4),
        .O(g4_carry__0_i_6_n_0));
  LUT6 #(
    .INIT(64'h9A659A9A6A956A6A)) 
    g4_carry__0_i_7
       (.I0(g4_carry__0_i_3_n_0),
        .I1(v3__29_carry__1_n_6),
        .I2(v3__29_carry__2_n_2),
        .I3(u3[6]),
        .I4(u3__32_carry__2_n_2),
        .I5(v3__29_carry__1_n_5),
        .O(g4_carry__0_i_7_n_0));
  LUT5 #(
    .INIT(32'h9F609F9F)) 
    g4_carry__0_i_8
       (.I0(v3__29_carry__1_n_6),
        .I1(v3__29_carry__1_n_7),
        .I2(v3__29_carry__2_n_2),
        .I3(u3[5]),
        .I4(u3__32_carry__2_n_2),
        .O(g4_carry__0_i_8_n_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 g4_carry__1
       (.CI(g4_carry__0_n_0),
        .CO({g4_carry__1_n_0,NLW_g4_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({g4_carry__1_i_1_n_0,g4_carry__1_i_2_n_0,g4_carry__1_i_3_n_0,g4_carry__1_i_4_n_0}),
        .O({g4_carry__1_n_4,g4_carry__1_n_5,g4_carry__1_n_6,g4_carry__1_n_7}),
        .S({g4_carry__1_i_5_n_0,g4_carry__1_i_6_n_0,g4_carry__1_i_7_n_0,g4_carry__1_i_8_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    g4_carry__1_i_1
       (.I0(u3__32_carry__2_n_2),
        .I1(u3[12]),
        .O(g4_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    g4_carry__1_i_2
       (.I0(u3__32_carry__2_n_2),
        .I1(u3[11]),
        .O(g4_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    g4_carry__1_i_3
       (.I0(u3__32_carry__2_n_2),
        .I1(u3[10]),
        .O(g4_carry__1_i_3_n_0));
  LUT5 #(
    .INIT(32'h04FF4FFF)) 
    g4_carry__1_i_4
       (.I0(u3[8]),
        .I1(u3__32_carry__2_n_2),
        .I2(v3__29_carry__1_n_4),
        .I3(v3__29_carry__2_n_2),
        .I4(v3__29_carry__2_n_7),
        .O(g4_carry__1_i_4_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    g4_carry__1_i_5
       (.I0(u3[12]),
        .I1(u3__32_carry__2_n_2),
        .O(g4_carry__1_i_5_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    g4_carry__1_i_6
       (.I0(u3[11]),
        .I1(u3__32_carry__2_n_2),
        .O(g4_carry__1_i_6_n_0));
  LUT5 #(
    .INIT(32'h7F807777)) 
    g4_carry__1_i_7
       (.I0(v3__29_carry__2_n_2),
        .I1(v3__29_carry__2_n_7),
        .I2(u3[9]),
        .I3(u3[10]),
        .I4(u3__32_carry__2_n_2),
        .O(g4_carry__1_i_7_n_0));
  LUT6 #(
    .INIT(64'hEF1FFF0F7585FF0F)) 
    g4_carry__1_i_8
       (.I0(v3__29_carry__1_n_4),
        .I1(u3[8]),
        .I2(u3__32_carry__2_n_2),
        .I3(u3[9]),
        .I4(v3__29_carry__2_n_2),
        .I5(v3__29_carry__2_n_7),
        .O(g4_carry__1_i_8_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    g4_carry_i_1
       (.I0(v3__29_carry__1_n_7),
        .I1(v3__29_carry__2_n_2),
        .O(g4_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    g4_carry_i_2
       (.I0(v3__29_carry__0_n_4),
        .I1(v3__29_carry__2_n_2),
        .O(g4_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    g4_carry_i_3
       (.I0(v3__29_carry__0_n_5),
        .I1(v3__29_carry__2_n_2),
        .O(g4_carry_i_3_n_0));
  LUT3 #(
    .INIT(8'h60)) 
    g4_carry_i_4
       (.I0(v3__29_carry__1_n_7),
        .I1(v3__29_carry__0_n_4),
        .I2(v3__29_carry__2_n_2),
        .O(g4_carry_i_4_n_0));
  LUT3 #(
    .INIT(8'h60)) 
    g4_carry_i_5
       (.I0(v3__29_carry__0_n_4),
        .I1(v3__29_carry__0_n_5),
        .I2(v3__29_carry__2_n_2),
        .O(g4_carry_i_5_n_0));
  LUT3 #(
    .INIT(8'h60)) 
    g4_carry_i_6
       (.I0(v3__29_carry__0_n_5),
        .I1(v3__29_carry__0_n_6),
        .I2(v3__29_carry__2_n_2),
        .O(g4_carry_i_6_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    g4_carry_i_7
       (.I0(v3__29_carry__0_n_6),
        .I1(v3__29_carry__2_n_2),
        .O(g4_carry_i_7_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    i__carry__0_i_1
       (.I0(p_0_in),
        .I1(g4__34_carry__2_n_7),
        .O(i__carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    i__carry__0_i_10
       (.I0(increase_brightness22_carry__1_n_7),
        .I1(increase_brightness22_carry__0_n_6),
        .O(i__carry__0_i_10_n_0));
  LUT5 #(
    .INIT(32'h3F2A0C2A)) 
    i__carry__0_i_11
       (.I0(i__carry__0_i_18_n_0),
        .I1(i__carry_i_11__0_n_0),
        .I2(i__carry_i_22_n_0),
        .I3(i__carry_i_18_n_0),
        .I4(i__carry__0_i_19_n_0),
        .O(i__carry__0_i_11_n_0));
  LUT6 #(
    .INIT(64'h0000EEEEFFF0EEEE)) 
    i__carry__0_i_12
       (.I0(g2_carry_i_9_n_3),
        .I1(y3__33_carry__1_n_7),
        .I2(increase_brightness22_carry__1_n_7),
        .I3(increase_brightness22_carry__0_n_7),
        .I4(i__carry_i_6_n_0),
        .I5(\^Q [0]),
        .O(i__carry__0_i_12_n_0));
  LUT6 #(
    .INIT(64'hDCECDCECDCEFDFEC)) 
    i__carry__0_i_13
       (.I0(i__carry__0_i_20_n_0),
        .I1(i__carry__0_i_21_n_0),
        .I2(i__carry_i_23_n_0),
        .I3(i__carry__0_i_9_n_0),
        .I4(i__carry_i_44_n_0),
        .I5(i__carry_i_25_n_0),
        .O(i__carry__0_i_13_n_0));
  LUT6 #(
    .INIT(64'hFEFBFBFBAAAAAAAA)) 
    i__carry__0_i_14
       (.I0(i__carry_i_17_n_0),
        .I1(y3__33_carry__0_n_4),
        .I2(g2_carry_i_9_n_3),
        .I3(y3__33_carry__0_n_6),
        .I4(y3__33_carry__0_n_5),
        .I5(i__carry_i_11__0_n_0),
        .O(i__carry__0_i_14_n_0));
  LUT6 #(
    .INIT(64'h8822888282228882)) 
    i__carry__0_i_15
       (.I0(i__carry__0_i_22_n_0),
        .I1(i__carry_i_37_n_0),
        .I2(y3__33_carry__0_n_5),
        .I3(i__carry_i_35_n_0),
        .I4(i__carry_i_29_n_0),
        .I5(i__carry_i_36_n_0),
        .O(i__carry__0_i_15_n_0));
  LUT6 #(
    .INIT(64'hFE00000000000000)) 
    i__carry__0_i_16
       (.I0(y3__33_carry__0_n_4),
        .I1(y3__33_carry__1_n_7),
        .I2(y3__33_carry__0_n_5),
        .I3(y3__33_carry__1_n_6),
        .I4(y3__33_carry__1_n_5),
        .I5(i__carry_i_6_n_0),
        .O(i__carry__0_i_16_n_0));
  LUT6 #(
    .INIT(64'hFFFFAAAAFFFF8000)) 
    i__carry__0_i_17
       (.I0(y3__33_carry__1_n_6),
        .I1(y3__33_carry__0_n_6),
        .I2(y3__33_carry__0_n_5),
        .I3(y3__33_carry__0_n_4),
        .I4(g2_carry_i_9_n_3),
        .I5(y3__33_carry__1_n_7),
        .O(i__carry__0_i_17_n_0));
  LUT6 #(
    .INIT(64'hABAB5757A8AB5454)) 
    i__carry__0_i_18
       (.I0(i__carry__0_i_17_n_0),
        .I1(i__carry_i_31_n_0),
        .I2(i__carry__0_i_23_n_0),
        .I3(i__carry_i_45_n_0),
        .I4(i__carry__0_i_8_n_0),
        .I5(i__carry__0_i_24_n_0),
        .O(i__carry__0_i_18_n_0));
  LUT5 #(
    .INIT(32'h0FF0EEF0)) 
    i__carry__0_i_19
       (.I0(i__carry__0_i_25_n_0),
        .I1(y3__33_carry__1_n_7),
        .I2(i__carry_i_32_n_0),
        .I3(i__carry__0_i_9_n_0),
        .I4(i__carry_i_34_n_0),
        .O(i__carry__0_i_19_n_0));
  LUT6 #(
    .INIT(64'hA808FD5D57F702A2)) 
    i__carry__0_i_2
       (.I0(i__carry_i_6_n_0),
        .I1(i__carry__0_i_6_n_0),
        .I2(\^Q [0]),
        .I3(i__carry__0_i_7_n_0),
        .I4(i__carry__0_i_8_n_0),
        .I5(g4__34_carry__1_n_4),
        .O(i__carry__0_i_2_n_0));
  LUT5 #(
    .INIT(32'h01111111)) 
    i__carry__0_i_20
       (.I0(y3__33_carry__1_n_7),
        .I1(g2_carry_i_9_n_3),
        .I2(y3__33_carry__0_n_4),
        .I3(y3__33_carry__0_n_5),
        .I4(y3__33_carry__0_n_6),
        .O(i__carry__0_i_20_n_0));
  LUT6 #(
    .INIT(64'hFFFFE000FFFF0000)) 
    i__carry__0_i_21
       (.I0(y3__33_carry__1_n_7),
        .I1(y3__33_carry__0_n_4),
        .I2(y3__33_carry__1_n_5),
        .I3(y3__33_carry__1_n_4),
        .I4(g2_carry_i_9_n_3),
        .I5(y3__33_carry__1_n_6),
        .O(i__carry__0_i_21_n_0));
  LUT6 #(
    .INIT(64'h000000FF000500FC)) 
    i__carry__0_i_22
       (.I0(i__carry_i_44_n_0),
        .I1(i__carry__0_i_26_n_0),
        .I2(y3__33_carry__1_n_6),
        .I3(g2_carry_i_9_n_3),
        .I4(y3__33_carry__1_n_4),
        .I5(y3__33_carry__1_n_5),
        .O(i__carry__0_i_22_n_0));
  LUT6 #(
    .INIT(64'h0015005500550055)) 
    i__carry__0_i_23
       (.I0(y3__33_carry__1_n_5),
        .I1(y3__33_carry__1_n_7),
        .I2(y3__33_carry__1_n_6),
        .I3(g2_carry_i_9_n_3),
        .I4(y3__33_carry__0_n_4),
        .I5(y3__33_carry__0_n_5),
        .O(i__carry__0_i_23_n_0));
  LUT6 #(
    .INIT(64'h005600AA00AA00AA)) 
    i__carry__0_i_24
       (.I0(y3__33_carry__1_n_6),
        .I1(y3__33_carry__0_n_5),
        .I2(y3__33_carry__0_n_6),
        .I3(g2_carry_i_9_n_3),
        .I4(y3__33_carry__0_n_4),
        .I5(y3__33_carry__1_n_7),
        .O(i__carry__0_i_24_n_0));
  LUT5 #(
    .INIT(32'hFFAAFF80)) 
    i__carry__0_i_25
       (.I0(y3__33_carry__0_n_4),
        .I1(y3__33_carry__0_n_6),
        .I2(y3__33_carry__0_n_7),
        .I3(g2_carry_i_9_n_3),
        .I4(y3__33_carry__0_n_5),
        .O(i__carry__0_i_25_n_0));
  LUT6 #(
    .INIT(64'hFFAAFFAAFFAAFF80)) 
    i__carry__0_i_26
       (.I0(y3__33_carry__1_n_7),
        .I1(y3__33_carry__0_n_6),
        .I2(y3__33_carry__0_n_7),
        .I3(g2_carry_i_9_n_3),
        .I4(y3__33_carry__0_n_5),
        .I5(y3__33_carry__0_n_4),
        .O(i__carry__0_i_26_n_0));
  LUT6 #(
    .INIT(64'h222EEE2EDDD111D1)) 
    i__carry__0_i_3
       (.I0(i__carry__0_i_9_n_0),
        .I1(i__carry_i_6_n_0),
        .I2(i__carry__0_i_10_n_0),
        .I3(\^Q [0]),
        .I4(i__carry__0_i_11_n_0),
        .I5(g4__34_carry__1_n_5),
        .O(i__carry__0_i_3_n_0));
  LUT6 #(
    .INIT(64'h55555501AAAAAAFE)) 
    i__carry__0_i_4
       (.I0(i__carry__0_i_12_n_0),
        .I1(i__carry__0_i_13_n_0),
        .I2(i__carry_i_18_n_0),
        .I3(i__carry__0_i_14_n_0),
        .I4(i__carry__0_i_15_n_0),
        .I5(g4__34_carry__1_n_6),
        .O(i__carry__0_i_4_n_0));
  LUT6 #(
    .INIT(64'hDDFFDDDDDDF0DDDD)) 
    i__carry__0_i_5
       (.I0(i__carry_i_31_n_0),
        .I1(i__carry__0_i_16_n_0),
        .I2(increase_brightness22_carry__1_n_7),
        .I3(\^Q [0]),
        .I4(i__carry_i_6_n_0),
        .I5(increase_brightness22_carry__0_n_4),
        .O(p_0_in));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry__0_i_6
       (.I0(increase_brightness22_carry__1_n_7),
        .I1(increase_brightness22_carry__0_n_5),
        .O(i__carry__0_i_6_n_0));
  LUT6 #(
    .INIT(64'h505040B0505040BF)) 
    i__carry__0_i_7
       (.I0(i__carry_i_32_n_0),
        .I1(y3__33_carry__1_n_6),
        .I2(i__carry_i_18_n_0),
        .I3(y3__33_carry__1_n_5),
        .I4(g2_carry_i_9_n_3),
        .I5(i__carry__0_i_17_n_0),
        .O(i__carry__0_i_7_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    i__carry__0_i_8
       (.I0(g2_carry_i_9_n_3),
        .I1(y3__33_carry__1_n_5),
        .O(i__carry__0_i_8_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry__0_i_9
       (.I0(g2_carry_i_9_n_3),
        .I1(y3__33_carry__1_n_6),
        .O(i__carry__0_i_9_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_1
       (.I0(\g2_inferred__0/i__carry__1_n_0 ),
        .O(g2[15]));
  LUT6 #(
    .INIT(64'h55555501AAAAAAFE)) 
    i__carry_i_10
       (.I0(i__carry__0_i_12_n_0),
        .I1(i__carry__0_i_13_n_0),
        .I2(i__carry_i_18_n_0),
        .I3(i__carry__0_i_14_n_0),
        .I4(i__carry__0_i_15_n_0),
        .I5(b1_carry_i_15_n_7),
        .O(i__carry_i_10_n_0));
  LUT6 #(
    .INIT(64'h0400FFFF04000400)) 
    i__carry_i_10__0
       (.I0(y3__33_carry__1_n_6),
        .I1(i__carry_i_31_n_0),
        .I2(y3__33_carry__1_n_5),
        .I3(i__carry_i_32_n_0),
        .I4(i__carry_i_33_n_0),
        .I5(i__carry_i_11__0_n_0),
        .O(i__carry_i_10__0_n_0));
  LUT6 #(
    .INIT(64'h55555515AAAAAAEA)) 
    i__carry_i_11
       (.I0(i__carry_i_5_n_0),
        .I1(i__carry_i_6_n_0),
        .I2(\^Q [0]),
        .I3(i__carry_i_7__0_n_0),
        .I4(i__carry_i_8__0_n_0),
        .I5(b1_carry_i_17_n_4),
        .O(i__carry_i_11_n_0));
  LUT6 #(
    .INIT(64'h1111111100000001)) 
    i__carry_i_11__0
       (.I0(i__carry_i_34_n_0),
        .I1(y3__33_carry__1_n_6),
        .I2(i__carry_i_35_n_0),
        .I3(y3__33_carry__0_n_5),
        .I4(i__carry_i_36_n_0),
        .I5(i__carry_i_37_n_0),
        .O(i__carry_i_11__0_n_0));
  LUT6 #(
    .INIT(64'hAAAAEEEF55551110)) 
    i__carry_i_12
       (.I0(i__carry_i_9__0_n_0),
        .I1(i__carry_i_10__0_n_0),
        .I2(i__carry_i_11__0_n_0),
        .I3(i__carry_i_12__0_n_0),
        .I4(i__carry_i_13__0_n_0),
        .I5(b1_carry_i_17_n_5),
        .O(i__carry_i_12_n_0));
  LUT6 #(
    .INIT(64'h0000FF47FFFFFF47)) 
    i__carry_i_12__0
       (.I0(i__carry_i_38_n_0),
        .I1(i__carry_i_23_n_0),
        .I2(i__carry_i_39_n_0),
        .I3(i__carry_i_40_n_0),
        .I4(i__carry_i_18_n_0),
        .I5(i__carry_i_41_n_0),
        .O(i__carry_i_12__0_n_0));
  LUT5 #(
    .INIT(32'h5551AAAE)) 
    i__carry_i_13
       (.I0(i__carry_i_14_n_0),
        .I1(i__carry_i_15_n_0),
        .I2(i__carry_i_16_n_0),
        .I3(i__carry_i_17_n_0),
        .I4(b1_carry_i_17_n_6),
        .O(i__carry_i_13_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA2AA)) 
    i__carry_i_13__0
       (.I0(i__carry_i_17_n_0),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .I3(\^Q [2]),
        .I4(g2_carry_i_9_n_3),
        .I5(y3__33_carry__0_n_7),
        .O(i__carry_i_13__0_n_0));
  LUT6 #(
    .INIT(64'h0000EEEEFFF0EEEE)) 
    i__carry_i_14
       (.I0(g2_carry_i_9_n_3),
        .I1(y3__33_carry__0_n_6),
        .I2(increase_brightness22_carry__1_n_7),
        .I3(increase_brightness22_carry_n_6),
        .I4(i__carry_i_6_n_0),
        .I5(\^Q [0]),
        .O(i__carry_i_14_n_0));
  LUT6 #(
    .INIT(64'h33330313CCCCFCEC)) 
    i__carry_i_14__0
       (.I0(i__carry_i_18_n_0),
        .I1(i__carry_i_19_n_0),
        .I2(i__carry_i_20_n_0),
        .I3(i__carry_i_21_n_0),
        .I4(i__carry_i_17_n_0),
        .I5(b1_carry_i_17_n_7),
        .O(i__carry_i_14__0_n_0));
  LUT6 #(
    .INIT(64'hFFF5FFF5777F7D75)) 
    i__carry_i_15
       (.I0(i__carry_i_18_n_0),
        .I1(i__carry_i_29_n_0),
        .I2(g2_carry_i_9_n_3),
        .I3(y3__33_carry__0_n_7),
        .I4(y3__33_carry__0_n_6),
        .I5(i__carry_i_11__0_n_0),
        .O(i__carry_i_15_n_0));
  LUT6 #(
    .INIT(64'h00000000FC0F0AA8)) 
    i__carry_i_16
       (.I0(i__carry_i_42_n_0),
        .I1(i__carry_i_25_n_0),
        .I2(i__carry_i_23_n_0),
        .I3(i__carry_i_33_n_0),
        .I4(i__carry_i_43_n_0),
        .I5(i__carry_i_18_n_0),
        .O(i__carry_i_16_n_0));
  LUT6 #(
    .INIT(64'h0400FFFFFFFFFFFF)) 
    i__carry_i_17
       (.I0(y3__33_carry__1_n_6),
        .I1(i__carry_i_31_n_0),
        .I2(y3__33_carry__1_n_5),
        .I3(i__carry_i_32_n_0),
        .I4(i__carry_i_6_n_0),
        .I5(\^Q [0]),
        .O(i__carry_i_17_n_0));
  LUT5 #(
    .INIT(32'h00005557)) 
    i__carry_i_18
       (.I0(y3__33_carry__1_n_4),
        .I1(i__carry_i_44_n_0),
        .I2(y3__33_carry__1_n_6),
        .I3(y3__33_carry__1_n_5),
        .I4(g2_carry_i_9_n_3),
        .O(i__carry_i_18_n_0));
  LUT6 #(
    .INIT(64'h0000EEEEFFF0EEEE)) 
    i__carry_i_19
       (.I0(g2_carry_i_9_n_3),
        .I1(y3__33_carry__0_n_7),
        .I2(increase_brightness22_carry_n_7),
        .I3(increase_brightness22_carry__1_n_7),
        .I4(i__carry_i_6_n_0),
        .I5(\^Q [0]),
        .O(i__carry_i_19_n_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 i__carry_i_1__0
       (.CI(i__carry_i_5__1_n_0),
        .CO({NLW_i__carry_i_1__0_CO_UNCONNECTED[3],b2[10],NLW_i__carry_i_1__0_CO_UNCONNECTED[1:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_i__carry_i_1__0_O_UNCONNECTED[3:2],b2[9:8]}),
        .S({1'b0,1'b1,b1_carry_i_6_n_2,b1_carry_i_6_n_7}));
  LUT6 #(
    .INIT(64'h55555515AAAAAAEA)) 
    i__carry_i_1__1
       (.I0(i__carry_i_5_n_0),
        .I1(i__carry_i_6_n_0),
        .I2(\^Q [0]),
        .I3(i__carry_i_7__0_n_0),
        .I4(i__carry_i_8__0_n_0),
        .I5(g4__34_carry__1_n_7),
        .O(i__carry_i_1__1_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    i__carry_i_2
       (.I0(g2[10]),
        .I1(\g2_inferred__0/i__carry__1_n_0 ),
        .O(i__carry_i_2_n_0));
  LUT5 #(
    .INIT(32'hFF56FFFF)) 
    i__carry_i_20
       (.I0(i__carry_i_29_n_0),
        .I1(g2_carry_i_9_n_3),
        .I2(y3__33_carry__0_n_7),
        .I3(i__carry_i_11__0_n_0),
        .I4(i__carry_i_18_n_0),
        .O(i__carry_i_20_n_0));
  LUT6 #(
    .INIT(64'h05F905F505F505F5)) 
    i__carry_i_21
       (.I0(y3__33_carry__0_n_6),
        .I1(y3__33_carry__1_n_6),
        .I2(g2_carry_i_9_n_3),
        .I3(i__carry_i_32_n_0),
        .I4(y3__33_carry__1_n_5),
        .I5(y3__33_carry__1_n_4),
        .O(i__carry_i_21_n_0));
  LUT5 #(
    .INIT(32'hEDDDDDDD)) 
    i__carry_i_22
       (.I0(y3__33_carry__1_n_7),
        .I1(g2_carry_i_9_n_3),
        .I2(y3__33_carry__0_n_4),
        .I3(y3__33_carry__0_n_5),
        .I4(y3__33_carry__0_n_6),
        .O(i__carry_i_22_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAAAFFFFFFEF)) 
    i__carry_i_23
       (.I0(i__carry_i_31_n_0),
        .I1(i__carry_i_43_n_0),
        .I2(i__carry_i_35_n_0),
        .I3(i__carry__0_i_9_n_0),
        .I4(i__carry_i_37_n_0),
        .I5(i__carry__0_i_8_n_0),
        .O(i__carry_i_23_n_0));
  LUT6 #(
    .INIT(64'h0000080008000000)) 
    i__carry_i_24
       (.I0(y3__33_carry__1_n_5),
        .I1(y3__33_carry__1_n_4),
        .I2(g2_carry_i_9_n_3),
        .I3(y3__33_carry__1_n_6),
        .I4(y3__33_carry__1_n_7),
        .I5(y3__33_carry__0_n_4),
        .O(i__carry_i_24_n_0));
  LUT5 #(
    .INIT(32'h0F080F00)) 
    i__carry_i_25
       (.I0(y3__33_carry__1_n_4),
        .I1(y3__33_carry__1_n_5),
        .I2(i__carry_i_32_n_0),
        .I3(g2_carry_i_9_n_3),
        .I4(y3__33_carry__1_n_6),
        .O(i__carry_i_25_n_0));
  LUT5 #(
    .INIT(32'h005600AA)) 
    i__carry_i_26
       (.I0(y3__33_carry__1_n_7),
        .I1(y3__33_carry__0_n_5),
        .I2(y3__33_carry__0_n_6),
        .I3(g2_carry_i_9_n_3),
        .I4(y3__33_carry__0_n_4),
        .O(i__carry_i_26_n_0));
  LUT3 #(
    .INIT(8'h06)) 
    i__carry_i_27
       (.I0(y3__33_carry__0_n_5),
        .I1(y3__33_carry__0_n_6),
        .I2(g2_carry_i_9_n_3),
        .O(i__carry_i_27_n_0));
  LUT5 #(
    .INIT(32'h0055006A)) 
    i__carry_i_28
       (.I0(y3__33_carry__0_n_4),
        .I1(y3__33_carry__0_n_6),
        .I2(y3__33_carry__0_n_7),
        .I3(g2_carry_i_9_n_3),
        .I4(y3__33_carry__0_n_5),
        .O(i__carry_i_28_n_0));
  LUT6 #(
    .INIT(64'h000000000000002F)) 
    i__carry_i_29
       (.I0(i__carry_i_32_n_0),
        .I1(y3__33_carry__0_n_6),
        .I2(y3__33_carry__1_n_6),
        .I3(g2_carry_i_9_n_3),
        .I4(y3__33_carry__1_n_5),
        .I5(y3__33_carry__1_n_4),
        .O(i__carry_i_29_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    i__carry_i_2__0
       (.I0(b2[9]),
        .I1(b2[8]),
        .O(i__carry_i_2__0_n_0));
  LUT6 #(
    .INIT(64'hAAAAEEEF55551110)) 
    i__carry_i_2__1
       (.I0(i__carry_i_9__0_n_0),
        .I1(i__carry_i_10__0_n_0),
        .I2(i__carry_i_11__0_n_0),
        .I3(i__carry_i_12__0_n_0),
        .I4(i__carry_i_13__0_n_0),
        .I5(g4__34_carry__0_n_4),
        .O(i__carry_i_2__1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    i__carry_i_3
       (.I0(g2[9]),
        .I1(g2[8]),
        .O(i__carry_i_3_n_0));
  LUT3 #(
    .INIT(8'hF9)) 
    i__carry_i_30
       (.I0(y3__33_carry__0_n_5),
        .I1(y3__33_carry__0_n_4),
        .I2(g2_carry_i_9_n_3),
        .O(i__carry_i_30_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry_i_31
       (.I0(g2_carry_i_9_n_3),
        .I1(y3__33_carry__1_n_4),
        .O(i__carry_i_31_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    i__carry_i_32
       (.I0(y3__33_carry__0_n_5),
        .I1(g2_carry_i_9_n_3),
        .I2(y3__33_carry__1_n_7),
        .I3(y3__33_carry__0_n_4),
        .O(i__carry_i_32_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry_i_33
       (.I0(g2_carry_i_9_n_3),
        .I1(y3__33_carry__0_n_6),
        .O(i__carry_i_33_n_0));
  LUT3 #(
    .INIT(8'hFE)) 
    i__carry_i_34
       (.I0(y3__33_carry__1_n_5),
        .I1(y3__33_carry__1_n_4),
        .I2(g2_carry_i_9_n_3),
        .O(i__carry_i_34_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    i__carry_i_35
       (.I0(g2_carry_i_9_n_3),
        .I1(y3__33_carry__0_n_4),
        .O(i__carry_i_35_n_0));
  LUT3 #(
    .INIT(8'hF8)) 
    i__carry_i_36
       (.I0(y3__33_carry__0_n_6),
        .I1(y3__33_carry__0_n_7),
        .I2(g2_carry_i_9_n_3),
        .O(i__carry_i_36_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry_i_37
       (.I0(g2_carry_i_9_n_3),
        .I1(y3__33_carry__1_n_7),
        .O(i__carry_i_37_n_0));
  LUT4 #(
    .INIT(16'hEDDD)) 
    i__carry_i_38
       (.I0(y3__33_carry__0_n_4),
        .I1(g2_carry_i_9_n_3),
        .I2(y3__33_carry__0_n_6),
        .I3(y3__33_carry__0_n_5),
        .O(i__carry_i_38_n_0));
  LUT6 #(
    .INIT(64'h04FFFFFFFF040404)) 
    i__carry_i_39
       (.I0(i__carry_i_45_n_0),
        .I1(i__carry__0_i_8_n_0),
        .I2(i__carry_i_31_n_0),
        .I3(i__carry_i_43_n_0),
        .I4(i__carry_i_33_n_0),
        .I5(i__carry_i_35_n_0),
        .O(i__carry_i_39_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    i__carry_i_3__0
       (.I0(b2[10]),
        .O(i__carry_i_3__0_n_0));
  LUT5 #(
    .INIT(32'h5551AAAE)) 
    i__carry_i_3__1
       (.I0(i__carry_i_14_n_0),
        .I1(i__carry_i_15_n_0),
        .I2(i__carry_i_16_n_0),
        .I3(i__carry_i_17_n_0),
        .I4(g4__34_carry__0_n_5),
        .O(i__carry_i_3__1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry_i_4
       (.I0(\g2_inferred__0/i__carry__1_n_0 ),
        .I1(g2[10]),
        .O(i__carry_i_4_n_0));
  LUT6 #(
    .INIT(64'h0000000004000000)) 
    i__carry_i_40
       (.I0(y3__33_carry__0_n_4),
        .I1(y3__33_carry__1_n_6),
        .I2(g2_carry_i_9_n_3),
        .I3(y3__33_carry__1_n_4),
        .I4(y3__33_carry__1_n_5),
        .I5(i__carry_i_32_n_0),
        .O(i__carry_i_40_n_0));
  LUT6 #(
    .INIT(64'h0000AA08FFFF55F7)) 
    i__carry_i_41
       (.I0(i__carry_i_36_n_0),
        .I1(i__carry_i_32_n_0),
        .I2(y3__33_carry__0_n_6),
        .I3(i__carry__0_i_9_n_0),
        .I4(i__carry_i_34_n_0),
        .I5(i__carry_i_43_n_0),
        .O(i__carry_i_41_n_0));
  LUT5 #(
    .INIT(32'hAABFAAFF)) 
    i__carry_i_42
       (.I0(i__carry_i_32_n_0),
        .I1(y3__33_carry__1_n_5),
        .I2(y3__33_carry__1_n_4),
        .I3(g2_carry_i_9_n_3),
        .I4(y3__33_carry__1_n_6),
        .O(i__carry_i_42_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry_i_43
       (.I0(g2_carry_i_9_n_3),
        .I1(y3__33_carry__0_n_5),
        .O(i__carry_i_43_n_0));
  LUT5 #(
    .INIT(32'hF8F8F8F0)) 
    i__carry_i_44
       (.I0(y3__33_carry__1_n_7),
        .I1(y3__33_carry__0_n_4),
        .I2(g2_carry_i_9_n_3),
        .I3(y3__33_carry__0_n_6),
        .I4(y3__33_carry__0_n_5),
        .O(i__carry_i_44_n_0));
  LUT5 #(
    .INIT(32'h00550057)) 
    i__carry_i_45
       (.I0(y3__33_carry__1_n_6),
        .I1(y3__33_carry__0_n_4),
        .I2(y3__33_carry__1_n_7),
        .I3(g2_carry_i_9_n_3),
        .I4(y3__33_carry__0_n_5),
        .O(i__carry_i_45_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry_i_4__0
       (.I0(b2[8]),
        .I1(b2[9]),
        .O(i__carry_i_4__0_n_0));
  LUT6 #(
    .INIT(64'h33330313CCCCFCEC)) 
    i__carry_i_4__1
       (.I0(i__carry_i_18_n_0),
        .I1(i__carry_i_19_n_0),
        .I2(i__carry_i_20_n_0),
        .I3(i__carry_i_21_n_0),
        .I4(i__carry_i_17_n_0),
        .I5(g4__34_carry__0_n_6),
        .O(i__carry_i_4__1_n_0));
  LUT6 #(
    .INIT(64'h0000EEEEFFF0EEEE)) 
    i__carry_i_5
       (.I0(g2_carry_i_9_n_3),
        .I1(y3__33_carry__0_n_4),
        .I2(increase_brightness22_carry__1_n_7),
        .I3(increase_brightness22_carry_n_4),
        .I4(i__carry_i_6_n_0),
        .I5(\^Q [0]),
        .O(i__carry_i_5_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry_i_5__0
       (.I0(g2[8]),
        .I1(g2[9]),
        .O(i__carry_i_5__0_n_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 i__carry_i_5__1
       (.CI(i__carry_i_6__0_n_0),
        .CO({i__carry_i_5__1_n_0,NLW_i__carry_i_5__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({b1_carry_i_15_n_4,b1_carry_i_15_n_5,b1_carry_i_15_n_6,b1_carry_i_15_n_7}),
        .O(b2[7:4]),
        .S({i__carry_i_7_n_0,i__carry_i_8_n_0,i__carry_i_9_n_0,i__carry_i_10_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry_i_6
       (.I0(\^Q [2]),
        .I1(\^Q [1]),
        .O(i__carry_i_6_n_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 i__carry_i_6__0
       (.CI(1'b0),
        .CO({i__carry_i_6__0_n_0,NLW_i__carry_i_6__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({b1_carry_i_17_n_4,b1_carry_i_17_n_5,b1_carry_i_17_n_6,b1_carry_i_17_n_7}),
        .O(b2[3:0]),
        .S({i__carry_i_11_n_0,i__carry_i_12_n_0,i__carry_i_13_n_0,i__carry_i_14__0_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    i__carry_i_7
       (.I0(p_0_in),
        .I1(b1_carry_i_15_n_4),
        .O(i__carry_i_7_n_0));
  LUT6 #(
    .INIT(64'h5510551055105515)) 
    i__carry_i_7__0
       (.I0(i__carry_i_18_n_0),
        .I1(i__carry_i_22_n_0),
        .I2(i__carry_i_23_n_0),
        .I3(i__carry_i_24_n_0),
        .I4(i__carry_i_25_n_0),
        .I5(i__carry_i_26_n_0),
        .O(i__carry_i_7__0_n_0));
  LUT6 #(
    .INIT(64'hA808FD5D57F702A2)) 
    i__carry_i_8
       (.I0(i__carry_i_6_n_0),
        .I1(i__carry__0_i_6_n_0),
        .I2(\^Q [0]),
        .I3(i__carry__0_i_7_n_0),
        .I4(i__carry__0_i_8_n_0),
        .I5(b1_carry_i_15_n_5),
        .O(i__carry_i_8_n_0));
  LUT6 #(
    .INIT(64'h55555555303F0000)) 
    i__carry_i_8__0
       (.I0(i__carry_i_27_n_0),
        .I1(i__carry_i_28_n_0),
        .I2(i__carry_i_29_n_0),
        .I3(i__carry_i_30_n_0),
        .I4(i__carry_i_18_n_0),
        .I5(i__carry_i_11__0_n_0),
        .O(i__carry_i_8__0_n_0));
  LUT6 #(
    .INIT(64'h222EEE2EDDD111D1)) 
    i__carry_i_9
       (.I0(i__carry__0_i_9_n_0),
        .I1(i__carry_i_6_n_0),
        .I2(i__carry__0_i_10_n_0),
        .I3(\^Q [0]),
        .I4(i__carry__0_i_11_n_0),
        .I5(b1_carry_i_15_n_6),
        .O(i__carry_i_9_n_0));
  LUT6 #(
    .INIT(64'h00001111000F1111)) 
    i__carry_i_9__0
       (.I0(g2_carry_i_9_n_3),
        .I1(y3__33_carry__0_n_5),
        .I2(increase_brightness22_carry__1_n_7),
        .I3(\^Q [0]),
        .I4(i__carry_i_6_n_0),
        .I5(increase_brightness22_carry_n_5),
        .O(i__carry_i_9__0_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 increase_brightness02_carry
       (.CI(1'b0),
        .CO({increase_brightness02_carry_n_0,NLW_increase_brightness02_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({increase_brightness02_carry_i_1_n_0,increase_brightness02_carry_i_2_n_0,rgb_data_in[0],increase_brightness02_carry_i_3_n_0}),
        .O({increase_brightness02_carry_n_4,increase_brightness02_carry_n_5,increase_brightness02_carry_n_6,increase_brightness02_carry_n_7}),
        .S({increase_brightness02_carry_i_4_n_0,increase_brightness02_carry_i_5_n_0,increase_brightness02_carry_i_6_n_0,increase_brightness02_carry_i_7_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 increase_brightness02_carry__0
       (.CI(increase_brightness02_carry_n_0),
        .CO({increase_brightness02_carry__0_n_0,NLW_increase_brightness02_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rgb_data_in[6],increase_brightness02_carry__0_i_1_n_0,increase_brightness02_carry__0_i_2_n_0,increase_brightness02_carry__0_i_3_n_0}),
        .O({increase_brightness02_carry__0_n_4,increase_brightness02_carry__0_n_5,increase_brightness02_carry__0_n_6,increase_brightness02_carry__0_n_7}),
        .S({increase_brightness02_carry__0_i_4_n_0,increase_brightness02_carry__0_i_5_n_0,increase_brightness02_carry__0_i_6_n_0,increase_brightness02_carry__0_i_7_n_0}));
  LUT3 #(
    .INIT(8'h2B)) 
    increase_brightness02_carry__0_i_1
       (.I0(rgb_data_in[4]),
        .I1(rgb_data_in[7]),
        .I2(rgb_data_in[6]),
        .O(increase_brightness02_carry__0_i_1_n_0));
  (* HLUTNM = "lutpair19" *) 
  LUT3 #(
    .INIT(8'h2B)) 
    increase_brightness02_carry__0_i_2
       (.I0(rgb_data_in[3]),
        .I1(rgb_data_in[5]),
        .I2(rgb_data_in[6]),
        .O(increase_brightness02_carry__0_i_2_n_0));
  (* HLUTNM = "lutpair18" *) 
  LUT3 #(
    .INIT(8'h2B)) 
    increase_brightness02_carry__0_i_3
       (.I0(rgb_data_in[2]),
        .I1(rgb_data_in[5]),
        .I2(rgb_data_in[4]),
        .O(increase_brightness02_carry__0_i_3_n_0));
  LUT3 #(
    .INIT(8'h2D)) 
    increase_brightness02_carry__0_i_4
       (.I0(rgb_data_in[7]),
        .I1(rgb_data_in[5]),
        .I2(rgb_data_in[6]),
        .O(increase_brightness02_carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'h42BD)) 
    increase_brightness02_carry__0_i_5
       (.I0(rgb_data_in[6]),
        .I1(rgb_data_in[4]),
        .I2(rgb_data_in[7]),
        .I3(rgb_data_in[5]),
        .O(increase_brightness02_carry__0_i_5_n_0));
  LUT4 #(
    .INIT(16'h6996)) 
    increase_brightness02_carry__0_i_6
       (.I0(increase_brightness02_carry__0_i_2_n_0),
        .I1(rgb_data_in[4]),
        .I2(rgb_data_in[7]),
        .I3(rgb_data_in[6]),
        .O(increase_brightness02_carry__0_i_6_n_0));
  (* HLUTNM = "lutpair19" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    increase_brightness02_carry__0_i_7
       (.I0(rgb_data_in[3]),
        .I1(rgb_data_in[5]),
        .I2(rgb_data_in[6]),
        .I3(increase_brightness02_carry__0_i_3_n_0),
        .O(increase_brightness02_carry__0_i_7_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 increase_brightness02_carry__1
       (.CI(increase_brightness02_carry__0_n_0),
        .CO(NLW_increase_brightness02_carry__1_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_increase_brightness02_carry__1_O_UNCONNECTED[3:1],increase_brightness02_carry__1_n_7}),
        .S({1'b0,1'b0,1'b0,increase_brightness02_carry__1_i_1_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    increase_brightness02_carry__1_i_1
       (.I0(rgb_data_in[7]),
        .O(increase_brightness02_carry__1_i_1_n_0));
  (* HLUTNM = "lutpair17" *) 
  LUT3 #(
    .INIT(8'h2B)) 
    increase_brightness02_carry_i_1
       (.I0(rgb_data_in[1]),
        .I1(rgb_data_in[4]),
        .I2(rgb_data_in[3]),
        .O(increase_brightness02_carry_i_1_n_0));
  (* HLUTNM = "lutpair29" *) 
  LUT2 #(
    .INIT(4'h7)) 
    increase_brightness02_carry_i_2
       (.I0(rgb_data_in[2]),
        .I1(rgb_data_in[3]),
        .O(increase_brightness02_carry_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    increase_brightness02_carry_i_3
       (.I0(rgb_data_in[2]),
        .O(increase_brightness02_carry_i_3_n_0));
  (* HLUTNM = "lutpair18" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    increase_brightness02_carry_i_4
       (.I0(rgb_data_in[2]),
        .I1(rgb_data_in[5]),
        .I2(rgb_data_in[4]),
        .I3(increase_brightness02_carry_i_1_n_0),
        .O(increase_brightness02_carry_i_4_n_0));
  (* HLUTNM = "lutpair17" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    increase_brightness02_carry_i_5
       (.I0(rgb_data_in[1]),
        .I1(rgb_data_in[4]),
        .I2(rgb_data_in[3]),
        .I3(increase_brightness02_carry_i_2_n_0),
        .O(increase_brightness02_carry_i_5_n_0));
  (* HLUTNM = "lutpair29" *) 
  LUT3 #(
    .INIT(8'h69)) 
    increase_brightness02_carry_i_6
       (.I0(rgb_data_in[2]),
        .I1(rgb_data_in[3]),
        .I2(rgb_data_in[0]),
        .O(increase_brightness02_carry_i_6_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    increase_brightness02_carry_i_7
       (.I0(rgb_data_in[2]),
        .I1(rgb_data_in[1]),
        .O(increase_brightness02_carry_i_7_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 increase_brightness12_carry
       (.CI(1'b0),
        .CO({increase_brightness12_carry_n_0,NLW_increase_brightness12_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({increase_brightness12_carry_i_1_n_0,increase_brightness12_carry_i_2_n_0,rgb_data_in[8],increase_brightness12_carry_i_3_n_0}),
        .O({increase_brightness12_carry_n_4,increase_brightness12_carry_n_5,increase_brightness12_carry_n_6,increase_brightness12_carry_n_7}),
        .S({increase_brightness12_carry_i_4_n_0,increase_brightness12_carry_i_5_n_0,increase_brightness12_carry_i_6_n_0,increase_brightness12_carry_i_7_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 increase_brightness12_carry__0
       (.CI(increase_brightness12_carry_n_0),
        .CO({increase_brightness12_carry__0_n_0,NLW_increase_brightness12_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rgb_data_in[14],increase_brightness12_carry__0_i_1_n_0,increase_brightness12_carry__0_i_2_n_0,increase_brightness12_carry__0_i_3_n_0}),
        .O({increase_brightness12_carry__0_n_4,increase_brightness12_carry__0_n_5,increase_brightness12_carry__0_n_6,increase_brightness12_carry__0_n_7}),
        .S({increase_brightness12_carry__0_i_4_n_0,increase_brightness12_carry__0_i_5_n_0,increase_brightness12_carry__0_i_6_n_0,increase_brightness12_carry__0_i_7_n_0}));
  LUT3 #(
    .INIT(8'h2B)) 
    increase_brightness12_carry__0_i_1
       (.I0(rgb_data_in[12]),
        .I1(rgb_data_in[15]),
        .I2(rgb_data_in[14]),
        .O(increase_brightness12_carry__0_i_1_n_0));
  (* HLUTNM = "lutpair16" *) 
  LUT3 #(
    .INIT(8'h2B)) 
    increase_brightness12_carry__0_i_2
       (.I0(rgb_data_in[11]),
        .I1(rgb_data_in[13]),
        .I2(rgb_data_in[14]),
        .O(increase_brightness12_carry__0_i_2_n_0));
  (* HLUTNM = "lutpair15" *) 
  LUT3 #(
    .INIT(8'h71)) 
    increase_brightness12_carry__0_i_3
       (.I0(rgb_data_in[12]),
        .I1(rgb_data_in[13]),
        .I2(rgb_data_in[10]),
        .O(increase_brightness12_carry__0_i_3_n_0));
  LUT3 #(
    .INIT(8'h2D)) 
    increase_brightness12_carry__0_i_4
       (.I0(rgb_data_in[15]),
        .I1(rgb_data_in[13]),
        .I2(rgb_data_in[14]),
        .O(increase_brightness12_carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'h42BD)) 
    increase_brightness12_carry__0_i_5
       (.I0(rgb_data_in[14]),
        .I1(rgb_data_in[12]),
        .I2(rgb_data_in[15]),
        .I3(rgb_data_in[13]),
        .O(increase_brightness12_carry__0_i_5_n_0));
  LUT4 #(
    .INIT(16'h6996)) 
    increase_brightness12_carry__0_i_6
       (.I0(increase_brightness12_carry__0_i_2_n_0),
        .I1(rgb_data_in[14]),
        .I2(rgb_data_in[15]),
        .I3(rgb_data_in[12]),
        .O(increase_brightness12_carry__0_i_6_n_0));
  (* HLUTNM = "lutpair16" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    increase_brightness12_carry__0_i_7
       (.I0(rgb_data_in[11]),
        .I1(rgb_data_in[13]),
        .I2(rgb_data_in[14]),
        .I3(increase_brightness12_carry__0_i_3_n_0),
        .O(increase_brightness12_carry__0_i_7_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 increase_brightness12_carry__1
       (.CI(increase_brightness12_carry__0_n_0),
        .CO(NLW_increase_brightness12_carry__1_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_increase_brightness12_carry__1_O_UNCONNECTED[3:1],increase_brightness12_carry__1_n_7}),
        .S({1'b0,1'b0,1'b0,increase_brightness12_carry__1_i_1_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    increase_brightness12_carry__1_i_1
       (.I0(rgb_data_in[15]),
        .O(increase_brightness12_carry__1_i_1_n_0));
  (* HLUTNM = "lutpair14" *) 
  LUT3 #(
    .INIT(8'h2B)) 
    increase_brightness12_carry_i_1
       (.I0(rgb_data_in[9]),
        .I1(rgb_data_in[12]),
        .I2(rgb_data_in[11]),
        .O(increase_brightness12_carry_i_1_n_0));
  (* HLUTNM = "lutpair28" *) 
  LUT2 #(
    .INIT(4'h7)) 
    increase_brightness12_carry_i_2
       (.I0(rgb_data_in[10]),
        .I1(rgb_data_in[11]),
        .O(increase_brightness12_carry_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    increase_brightness12_carry_i_3
       (.I0(rgb_data_in[10]),
        .O(increase_brightness12_carry_i_3_n_0));
  (* HLUTNM = "lutpair15" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    increase_brightness12_carry_i_4
       (.I0(rgb_data_in[12]),
        .I1(rgb_data_in[13]),
        .I2(rgb_data_in[10]),
        .I3(increase_brightness12_carry_i_1_n_0),
        .O(increase_brightness12_carry_i_4_n_0));
  (* HLUTNM = "lutpair14" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    increase_brightness12_carry_i_5
       (.I0(rgb_data_in[9]),
        .I1(rgb_data_in[12]),
        .I2(rgb_data_in[11]),
        .I3(increase_brightness12_carry_i_2_n_0),
        .O(increase_brightness12_carry_i_5_n_0));
  (* HLUTNM = "lutpair28" *) 
  LUT3 #(
    .INIT(8'h69)) 
    increase_brightness12_carry_i_6
       (.I0(rgb_data_in[10]),
        .I1(rgb_data_in[11]),
        .I2(rgb_data_in[8]),
        .O(increase_brightness12_carry_i_6_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    increase_brightness12_carry_i_7
       (.I0(rgb_data_in[10]),
        .I1(rgb_data_in[9]),
        .O(increase_brightness12_carry_i_7_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 increase_brightness22_carry
       (.CI(1'b0),
        .CO({increase_brightness22_carry_n_0,NLW_increase_brightness22_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({increase_brightness22_carry_i_1_n_0,increase_brightness22_carry_i_2_n_0,increase_brightness22_carry_i_3_n_0,increase_brightness22_carry_i_4_n_0}),
        .O({increase_brightness22_carry_n_4,increase_brightness22_carry_n_5,increase_brightness22_carry_n_6,increase_brightness22_carry_n_7}),
        .S({increase_brightness22_carry_i_5_n_0,increase_brightness22_carry_i_6_n_0,increase_brightness22_carry_i_7_n_0,increase_brightness22_carry_i_8_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 increase_brightness22_carry__0
       (.CI(increase_brightness22_carry_n_0),
        .CO({increase_brightness22_carry__0_n_0,NLW_increase_brightness22_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({increase_brightness22_carry__0_i_1_n_0,increase_brightness22_carry__0_i_2_n_0,increase_brightness22_carry__0_i_3_n_0,increase_brightness22_carry__0_i_4_n_0}),
        .O({increase_brightness22_carry__0_n_4,increase_brightness22_carry__0_n_5,increase_brightness22_carry__0_n_6,increase_brightness22_carry__0_n_7}),
        .S({increase_brightness22_carry__0_i_5_n_0,increase_brightness22_carry__0_i_6_n_0,increase_brightness22_carry__0_i_7_n_0,increase_brightness22_carry__0_i_8_n_0}));
  LUT2 #(
    .INIT(4'hE)) 
    increase_brightness22_carry__0_i_1
       (.I0(g2_carry_i_9_n_3),
        .I1(y3__33_carry__1_n_5),
        .O(increase_brightness22_carry__0_i_1_n_0));
  LUT4 #(
    .INIT(16'h0701)) 
    increase_brightness22_carry__0_i_2
       (.I0(y3__33_carry__1_n_5),
        .I1(y3__33_carry__1_n_4),
        .I2(g2_carry_i_9_n_3),
        .I3(y3__33_carry__1_n_7),
        .O(increase_brightness22_carry__0_i_2_n_0));
  (* HLUTNM = "lutpair13" *) 
  LUT4 #(
    .INIT(16'h040D)) 
    increase_brightness22_carry__0_i_3
       (.I0(y3__33_carry__1_n_5),
        .I1(y3__33_carry__0_n_4),
        .I2(g2_carry_i_9_n_3),
        .I3(y3__33_carry__1_n_6),
        .O(increase_brightness22_carry__0_i_3_n_0));
  (* HLUTNM = "lutpair12" *) 
  LUT4 #(
    .INIT(16'h1301)) 
    increase_brightness22_carry__0_i_4
       (.I0(y3__33_carry__1_n_6),
        .I1(g2_carry_i_9_n_3),
        .I2(y3__33_carry__1_n_7),
        .I3(y3__33_carry__0_n_5),
        .O(increase_brightness22_carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'h004B)) 
    increase_brightness22_carry__0_i_5
       (.I0(y3__33_carry__1_n_6),
        .I1(y3__33_carry__1_n_4),
        .I2(y3__33_carry__1_n_5),
        .I3(g2_carry_i_9_n_3),
        .O(increase_brightness22_carry__0_i_5_n_0));
  LUT5 #(
    .INIT(32'h02040D0B)) 
    increase_brightness22_carry__0_i_6
       (.I0(y3__33_carry__1_n_7),
        .I1(y3__33_carry__1_n_5),
        .I2(g2_carry_i_9_n_3),
        .I3(y3__33_carry__1_n_4),
        .I4(y3__33_carry__1_n_6),
        .O(increase_brightness22_carry__0_i_6_n_0));
  LUT5 #(
    .INIT(32'h55695596)) 
    increase_brightness22_carry__0_i_7
       (.I0(increase_brightness22_carry__0_i_3_n_0),
        .I1(y3__33_carry__1_n_5),
        .I2(y3__33_carry__1_n_4),
        .I3(g2_carry_i_9_n_3),
        .I4(y3__33_carry__1_n_7),
        .O(increase_brightness22_carry__0_i_7_n_0));
  (* HLUTNM = "lutpair13" *) 
  LUT5 #(
    .INIT(32'h0609F9F6)) 
    increase_brightness22_carry__0_i_8
       (.I0(y3__33_carry__1_n_5),
        .I1(y3__33_carry__0_n_4),
        .I2(g2_carry_i_9_n_3),
        .I3(y3__33_carry__1_n_6),
        .I4(increase_brightness22_carry__0_i_4_n_0),
        .O(increase_brightness22_carry__0_i_8_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 increase_brightness22_carry__1
       (.CI(increase_brightness22_carry__0_n_0),
        .CO(NLW_increase_brightness22_carry__1_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_increase_brightness22_carry__1_O_UNCONNECTED[3:1],increase_brightness22_carry__1_n_7}),
        .S({1'b0,1'b0,1'b0,increase_brightness22_carry__1_i_1_n_0}));
  LUT2 #(
    .INIT(4'h1)) 
    increase_brightness22_carry__1_i_1
       (.I0(g2_carry_i_9_n_3),
        .I1(y3__33_carry__1_n_4),
        .O(increase_brightness22_carry__1_i_1_n_0));
  (* HLUTNM = "lutpair11" *) 
  LUT4 #(
    .INIT(16'h0223)) 
    increase_brightness22_carry_i_1
       (.I0(y3__33_carry__0_n_6),
        .I1(g2_carry_i_9_n_3),
        .I2(y3__33_carry__1_n_7),
        .I3(y3__33_carry__0_n_4),
        .O(increase_brightness22_carry_i_1_n_0));
  (* HLUTNM = "lutpair27" *) 
  LUT3 #(
    .INIT(8'h15)) 
    increase_brightness22_carry_i_2
       (.I0(g2_carry_i_9_n_3),
        .I1(y3__33_carry__0_n_5),
        .I2(y3__33_carry__0_n_4),
        .O(increase_brightness22_carry_i_2_n_0));
  LUT3 #(
    .INIT(8'hF9)) 
    increase_brightness22_carry_i_3
       (.I0(y3__33_carry__0_n_5),
        .I1(y3__33_carry__0_n_4),
        .I2(g2_carry_i_9_n_3),
        .O(increase_brightness22_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    increase_brightness22_carry_i_4
       (.I0(g2_carry_i_9_n_3),
        .I1(y3__33_carry__0_n_5),
        .O(increase_brightness22_carry_i_4_n_0));
  (* HLUTNM = "lutpair12" *) 
  LUT5 #(
    .INIT(32'h1221EDDE)) 
    increase_brightness22_carry_i_5
       (.I0(y3__33_carry__1_n_6),
        .I1(g2_carry_i_9_n_3),
        .I2(y3__33_carry__1_n_7),
        .I3(y3__33_carry__0_n_5),
        .I4(increase_brightness22_carry_i_1_n_0),
        .O(increase_brightness22_carry_i_5_n_0));
  (* HLUTNM = "lutpair11" *) 
  LUT5 #(
    .INIT(32'h1221EDDE)) 
    increase_brightness22_carry_i_6
       (.I0(y3__33_carry__0_n_6),
        .I1(g2_carry_i_9_n_3),
        .I2(y3__33_carry__1_n_7),
        .I3(y3__33_carry__0_n_4),
        .I4(increase_brightness22_carry_i_2_n_0),
        .O(increase_brightness22_carry_i_6_n_0));
  (* HLUTNM = "lutpair27" *) 
  LUT4 #(
    .INIT(16'h1441)) 
    increase_brightness22_carry_i_7
       (.I0(g2_carry_i_9_n_3),
        .I1(y3__33_carry__0_n_5),
        .I2(y3__33_carry__0_n_4),
        .I3(y3__33_carry__0_n_7),
        .O(increase_brightness22_carry_i_7_n_0));
  LUT3 #(
    .INIT(8'h06)) 
    increase_brightness22_carry_i_8
       (.I0(y3__33_carry__0_n_5),
        .I1(y3__33_carry__0_n_6),
        .I2(g2_carry_i_9_n_3),
        .O(increase_brightness22_carry_i_8_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 increase_brightness2_carry
       (.CI(1'b0),
        .CO({increase_brightness2_carry_n_0,NLW_increase_brightness2_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({increase_brightness2_carry_i_1_n_0,increase_brightness2_carry_i_2_n_0,increase_brightness2_carry_i_3_n_0,increase_brightness2_carry_i_4_n_0}),
        .O({increase_brightness2_carry_n_4,increase_brightness2_carry_n_5,increase_brightness2_carry_n_6,increase_brightness2_carry_n_7}),
        .S({increase_brightness2_carry_i_5_n_0,increase_brightness2_carry_i_6_n_0,increase_brightness2_carry_i_7_n_0,increase_brightness2_carry_i_8_n_0}));
  (* ADDER_THRESHOLD = "35" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 increase_brightness2_carry__0
       (.CI(increase_brightness2_carry_n_0),
        .CO({increase_brightness2_carry__0_n_0,NLW_increase_brightness2_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rgb_data_in[22],increase_brightness2_carry__0_i_1_n_0,increase_brightness2_carry__0_i_2_n_0,increase_brightness2_carry__0_i_3_n_0}),
        .O({increase_brightness2_carry__0_n_4,increase_brightness2_carry__0_n_5,increase_brightness2_carry__0_n_6,increase_brightness2_carry__0_n_7}),
        .S({increase_brightness2_carry__0_i_4_n_0,increase_brightness2_carry__0_i_5_n_0,increase_brightness2_carry__0_i_6_n_0,increase_brightness2_carry__0_i_7_n_0}));
  LUT3 #(
    .INIT(8'h2B)) 
    increase_brightness2_carry__0_i_1
       (.I0(rgb_data_in[20]),
        .I1(rgb_data_in[23]),
        .I2(rgb_data_in[22]),
        .O(increase_brightness2_carry__0_i_1_n_0));
  (* HLUTNM = "lutpair23" *) 
  LUT3 #(
    .INIT(8'h2B)) 
    increase_brightness2_carry__0_i_2
       (.I0(rgb_data_in[19]),
        .I1(rgb_data_in[21]),
        .I2(rgb_data_in[22]),
        .O(increase_brightness2_carry__0_i_2_n_0));
  (* HLUTNM = "lutpair22" *) 
  LUT3 #(
    .INIT(8'h2B)) 
    increase_brightness2_carry__0_i_3
       (.I0(rgb_data_in[18]),
        .I1(rgb_data_in[21]),
        .I2(rgb_data_in[20]),
        .O(increase_brightness2_carry__0_i_3_n_0));
  LUT3 #(
    .INIT(8'h2D)) 
    increase_brightness2_carry__0_i_4
       (.I0(rgb_data_in[23]),
        .I1(rgb_data_in[21]),
        .I2(rgb_data_in[22]),
        .O(increase_brightness2_carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'h42BD)) 
    increase_brightness2_carry__0_i_5
       (.I0(rgb_data_in[22]),
        .I1(rgb_data_in[20]),
        .I2(rgb_data_in[23]),
        .I3(rgb_data_in[21]),
        .O(increase_brightness2_carry__0_i_5_n_0));
  LUT4 #(
    .INIT(16'h6996)) 
    increase_brightness2_carry__0_i_6
       (.I0(increase_brightness2_carry__0_i_2_n_0),
        .I1(rgb_data_in[20]),
        .I2(rgb_data_in[23]),
        .I3(rgb_data_in[22]),
        .O(increase_brightness2_carry__0_i_6_n_0));
  (* HLUTNM = "lutpair23" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    increase_brightness2_carry__0_i_7
       (.I0(rgb_data_in[19]),
        .I1(rgb_data_in[21]),
        .I2(rgb_data_in[22]),
        .I3(increase_brightness2_carry__0_i_3_n_0),
        .O(increase_brightness2_carry__0_i_7_n_0));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY4 increase_brightness2_carry__1
       (.CI(increase_brightness2_carry__0_n_0),
        .CO(NLW_increase_brightness2_carry__1_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_increase_brightness2_carry__1_O_UNCONNECTED[3:1],increase_brightness2_carry__1_n_7}),
        .S({1'b0,1'b0,1'b0,increase_brightness2_carry__1_i_1_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    increase_brightness2_carry__1_i_1
       (.I0(rgb_data_in[23]),
        .O(increase_brightness2_carry__1_i_1_n_0));
  (* HLUTNM = "lutpair21" *) 
  LUT3 #(
    .INIT(8'h2B)) 
    increase_brightness2_carry_i_1
       (.I0(rgb_data_in[17]),
        .I1(rgb_data_in[20]),
        .I2(rgb_data_in[19]),
        .O(increase_brightness2_carry_i_1_n_0));
  (* HLUTNM = "lutpair20" *) 
  LUT2 #(
    .INIT(4'h7)) 
    increase_brightness2_carry_i_2
       (.I0(rgb_data_in[19]),
        .I1(rgb_data_in[18]),
        .O(increase_brightness2_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    increase_brightness2_carry_i_3
       (.I0(rgb_data_in[18]),
        .I1(rgb_data_in[19]),
        .O(increase_brightness2_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    increase_brightness2_carry_i_4
       (.I0(rgb_data_in[18]),
        .O(increase_brightness2_carry_i_4_n_0));
  (* HLUTNM = "lutpair22" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    increase_brightness2_carry_i_5
       (.I0(rgb_data_in[18]),
        .I1(rgb_data_in[21]),
        .I2(rgb_data_in[20]),
        .I3(increase_brightness2_carry_i_1_n_0),
        .O(increase_brightness2_carry_i_5_n_0));
  (* HLUTNM = "lutpair21" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    increase_brightness2_carry_i_6
       (.I0(rgb_data_in[17]),
        .I1(rgb_data_in[20]),
        .I2(rgb_data_in[19]),
        .I3(increase_brightness2_carry_i_2_n_0),
        .O(increase_brightness2_carry_i_6_n_0));
  (* HLUTNM = "lutpair20" *) 
  LUT3 #(
    .INIT(8'h69)) 
    increase_brightness2_carry_i_7
       (.I0(rgb_data_in[19]),
        .I1(rgb_data_in[18]),
        .I2(rgb_data_in[16]),
        .O(increase_brightness2_carry_i_7_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    increase_brightness2_carry_i_8
       (.I0(rgb_data_in[18]),
        .I1(rgb_data_in[17]),
        .O(increase_brightness2_carry_i_8_n_0));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[0] 
       (.CLR(\rgb_data_out_reg[7]_i_2_n_0 ),
        .D(\rgb_data_out_reg[0]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[0]));
  LUT6 #(
    .INIT(64'h31313111FDFDFDDD)) 
    \rgb_data_out_reg[0]_i_1 
       (.I0(\rgb_data_out_reg[0]_i_2_n_0 ),
        .I1(\^Q [2]),
        .I2(\rgb_data_out_reg[23]_i_4_n_0 ),
        .I3(increase_brightness12_carry__1_n_7),
        .I4(increase_brightness12_carry_n_7),
        .I5(\rgb_data_out_reg[0]_i_3_n_0 ),
        .O(\rgb_data_out_reg[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF3AAFFFFF3AA00)) 
    \rgb_data_out_reg[0]_i_2 
       (.I0(\rgb_data_out_reg[0]_i_4_n_0 ),
        .I1(\rgb_data_out_reg[0]_i_5_n_0 ),
        .I2(\rgb_data_out_reg[5]_i_7_n_0 ),
        .I3(\^Q [0]),
        .I4(\^Q [1]),
        .I5(\rgb_data_out_reg[0]_i_3_n_0 ),
        .O(\rgb_data_out_reg[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF15FF00001500)) 
    \rgb_data_out_reg[0]_i_3 
       (.I0(g1),
        .I1(g2[0]),
        .I2(\g2_inferred__0/i__carry__1_n_0 ),
        .I3(\^Q [2]),
        .I4(\^Q [1]),
        .I5(\rgb_data_out_reg[0]_i_6_n_0 ),
        .O(\rgb_data_out_reg[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB88BB88BB888BB8B)) 
    \rgb_data_out_reg[0]_i_4 
       (.I0(\rgb_data_out_reg[6]_i_6_n_0 ),
        .I1(\rgb_data_out_reg[5]_i_11_n_0 ),
        .I2(\rgb_data_out_reg[5]_i_15_n_0 ),
        .I3(rgb_data_in[8]),
        .I4(\rgb_data_out_reg[7]_i_14_n_7 ),
        .I5(\rgb_data_out_reg[7]_i_10_n_0 ),
        .O(\rgb_data_out_reg[0]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hD1FF)) 
    \rgb_data_out_reg[0]_i_5 
       (.I0(rgb_data_in[9]),
        .I1(\rgb_data_out_reg[7]_i_13_n_0 ),
        .I2(rgb_data_in[8]),
        .I3(\rgb_data_out_reg[3]_i_7_n_0 ),
        .O(\rgb_data_out_reg[0]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h150015FF)) 
    \rgb_data_out_reg[0]_i_6 
       (.I0(g1_carry_n_0),
        .I1(g2_carry_n_7),
        .I2(g2_carry__1_n_0),
        .I3(\rgb_data_out_reg[21]_i_15_n_0 ),
        .I4(rgb_data_in[0]),
        .O(\rgb_data_out_reg[0]_i_6_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[10] 
       (.CLR(\rgb_data_out_reg[15]_i_2_n_0 ),
        .D(\rgb_data_out_reg[10]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[10]));
  LUT6 #(
    .INIT(64'h5454FFFC5555FFFF)) 
    \rgb_data_out_reg[10]_i_1 
       (.I0(\^Q [2]),
        .I1(\rgb_data_out_reg[10]_i_2_n_0 ),
        .I2(\rgb_data_out_reg[10]_i_3_n_0 ),
        .I3(\rgb_data_out_reg[22]_i_4_n_0 ),
        .I4(\rgb_data_out_reg[10]_i_4_n_0 ),
        .I5(\rgb_data_out_reg[10]_i_5_n_0 ),
        .O(\rgb_data_out_reg[10]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00022202)) 
    \rgb_data_out_reg[10]_i_2 
       (.I0(\^Q [1]),
        .I1(\^Q [0]),
        .I2(\rgb_data_out_reg[10]_i_6_n_0 ),
        .I3(\rgb_data_out_reg[14]_i_6_n_0 ),
        .I4(rgb_data_in[0]),
        .O(\rgb_data_out_reg[10]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFEAAAAAA)) 
    \rgb_data_out_reg[10]_i_3 
       (.I0(\^Q [2]),
        .I1(increase_brightness02_carry__1_n_7),
        .I2(increase_brightness02_carry_n_5),
        .I3(\^Q [1]),
        .I4(\^Q [0]),
        .O(\rgb_data_out_reg[10]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFF1FFF)) 
    \rgb_data_out_reg[10]_i_4 
       (.I0(b1_carry_n_2),
        .I1(\rgb_data_out_reg[11]_i_9_n_5 ),
        .I2(\^Q [2]),
        .I3(\^Q [1]),
        .I4(\^Q [0]),
        .I5(\rgb_data_out_reg[10]_i_7_n_0 ),
        .O(\rgb_data_out_reg[10]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hD0DF0000FFFFFFFF)) 
    \rgb_data_out_reg[10]_i_5 
       (.I0(\rgb_data_out_reg[13]_i_10_n_0 ),
        .I1(rgb_data_in[1]),
        .I2(\rgb_data_out_reg[10]_i_8_n_0 ),
        .I3(rgb_data_in[0]),
        .I4(\rgb_data_out_reg[10]_i_9_n_0 ),
        .I5(\rgb_data_out_reg[22]_i_15_n_0 ),
        .O(\rgb_data_out_reg[10]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h8B887477B8BB7444)) 
    \rgb_data_out_reg[10]_i_6 
       (.I0(rgb_data_in[0]),
        .I1(\rgb_data_out_reg[14]_i_10_n_0 ),
        .I2(rgb_data_in[3]),
        .I3(\rgb_data_out_reg[8]_i_6_n_0 ),
        .I4(rgb_data_in[1]),
        .I5(rgb_data_in[2]),
        .O(\rgb_data_out_reg[10]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFF0FEFEF0000E0E0)) 
    \rgb_data_out_reg[10]_i_7 
       (.I0(b1),
        .I1(b2[2]),
        .I2(\^Q [2]),
        .I3(\^Q [0]),
        .I4(\^Q [1]),
        .I5(rgb_data_in[10]),
        .O(\rgb_data_out_reg[10]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \rgb_data_out_reg[10]_i_8 
       (.I0(rgb_data_in[6]),
        .I1(rgb_data_in[7]),
        .I2(rgb_data_in[5]),
        .I3(rgb_data_in[3]),
        .I4(rgb_data_in[2]),
        .I5(rgb_data_in[4]),
        .O(\rgb_data_out_reg[10]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF004EFF4E)) 
    \rgb_data_out_reg[10]_i_9 
       (.I0(\rgb_data_out_reg[15]_i_5_n_0 ),
        .I1(rgb_data_in[2]),
        .I2(\rgb_data_out_reg[15]_i_13_n_5 ),
        .I3(\rgb_data_out_reg[8]_i_9_n_0 ),
        .I4(\rgb_data_out_reg[11]_i_7_n_0 ),
        .I5(\rgb_data_out_reg[13]_i_10_n_0 ),
        .O(\rgb_data_out_reg[10]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[11] 
       (.CLR(\rgb_data_out_reg[15]_i_2_n_0 ),
        .D(\rgb_data_out_reg[11]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[11]));
  LUT6 #(
    .INIT(64'h5454FFFC5555FFFF)) 
    \rgb_data_out_reg[11]_i_1 
       (.I0(\^Q [2]),
        .I1(\rgb_data_out_reg[11]_i_2_n_0 ),
        .I2(\rgb_data_out_reg[11]_i_3_n_0 ),
        .I3(\rgb_data_out_reg[22]_i_4_n_0 ),
        .I4(\rgb_data_out_reg[11]_i_4_n_0 ),
        .I5(\rgb_data_out_reg[11]_i_5_n_0 ),
        .O(\rgb_data_out_reg[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF0FEFEF0000E0E0)) 
    \rgb_data_out_reg[11]_i_10 
       (.I0(b1),
        .I1(b2[3]),
        .I2(\^Q [2]),
        .I3(\^Q [0]),
        .I4(\^Q [1]),
        .I5(rgb_data_in[11]),
        .O(\rgb_data_out_reg[11]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h080A0A08A8AAAAA8)) 
    \rgb_data_out_reg[11]_i_11 
       (.I0(\rgb_data_out_reg[12]_i_10_n_0 ),
        .I1(\rgb_data_out_reg[8]_i_9_n_0 ),
        .I2(\rgb_data_out_reg[15]_i_5_n_0 ),
        .I3(rgb_data_in[3]),
        .I4(rgb_data_in[2]),
        .I5(\rgb_data_out_reg[15]_i_13_n_4 ),
        .O(\rgb_data_out_reg[11]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rgb_data_out_reg[11]_i_12 
       (.I0(g2_carry_i_9_n_3),
        .I1(y3__33_carry__0_n_4),
        .O(\rgb_data_out_reg[11]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rgb_data_out_reg[11]_i_13 
       (.I0(y3__33_carry__0_n_5),
        .I1(g2_carry_i_9_n_3),
        .O(\rgb_data_out_reg[11]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rgb_data_out_reg[11]_i_14 
       (.I0(y3__33_carry__0_n_6),
        .I1(g2_carry_i_9_n_3),
        .O(\rgb_data_out_reg[11]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rgb_data_out_reg[11]_i_15 
       (.I0(y3__33_carry__0_n_7),
        .I1(g2_carry_i_9_n_3),
        .O(\rgb_data_out_reg[11]_i_15_n_0 ));
  LUT3 #(
    .INIT(8'h1E)) 
    \rgb_data_out_reg[11]_i_16 
       (.I0(y3__33_carry__0_n_4),
        .I1(g2_carry_i_9_n_3),
        .I2(b1_carry_i_17_n_4),
        .O(\rgb_data_out_reg[11]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h1E)) 
    \rgb_data_out_reg[11]_i_17 
       (.I0(y3__33_carry__0_n_5),
        .I1(g2_carry_i_9_n_3),
        .I2(b1_carry_i_17_n_5),
        .O(\rgb_data_out_reg[11]_i_17_n_0 ));
  LUT3 #(
    .INIT(8'h1E)) 
    \rgb_data_out_reg[11]_i_18 
       (.I0(y3__33_carry__0_n_6),
        .I1(g2_carry_i_9_n_3),
        .I2(b1_carry_i_17_n_6),
        .O(\rgb_data_out_reg[11]_i_18_n_0 ));
  LUT3 #(
    .INIT(8'h1E)) 
    \rgb_data_out_reg[11]_i_19 
       (.I0(y3__33_carry__0_n_7),
        .I1(g2_carry_i_9_n_3),
        .I2(b1_carry_i_17_n_7),
        .O(\rgb_data_out_reg[11]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h5555015100000151)) 
    \rgb_data_out_reg[11]_i_2 
       (.I0(\rgb_data_out_reg[23]_i_6_n_0 ),
        .I1(\rgb_data_out_reg[11]_i_6_n_0 ),
        .I2(\rgb_data_out_reg[14]_i_10_n_0 ),
        .I3(\rgb_data_out_reg[11]_i_7_n_0 ),
        .I4(\rgb_data_out_reg[14]_i_6_n_0 ),
        .I5(\rgb_data_out_reg[11]_i_8_n_0 ),
        .O(\rgb_data_out_reg[11]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFEAAAAAA)) 
    \rgb_data_out_reg[11]_i_3 
       (.I0(\^Q [2]),
        .I1(increase_brightness02_carry__1_n_7),
        .I2(increase_brightness02_carry_n_4),
        .I3(\^Q [1]),
        .I4(\^Q [0]),
        .O(\rgb_data_out_reg[11]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFF1FFF)) 
    \rgb_data_out_reg[11]_i_4 
       (.I0(b1_carry_n_2),
        .I1(\rgb_data_out_reg[11]_i_9_n_4 ),
        .I2(\^Q [2]),
        .I3(\^Q [1]),
        .I4(\^Q [0]),
        .I5(\rgb_data_out_reg[11]_i_10_n_0 ),
        .O(\rgb_data_out_reg[11]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFBFBFBFBFBFFFB)) 
    \rgb_data_out_reg[11]_i_5 
       (.I0(\rgb_data_out_reg[11]_i_11_n_0 ),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .I3(\rgb_data_out_reg[13]_i_10_n_0 ),
        .I4(rgb_data_in[2]),
        .I5(rgb_data_in[1]),
        .O(\rgb_data_out_reg[11]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h7478784B)) 
    \rgb_data_out_reg[11]_i_6 
       (.I0(rgb_data_in[4]),
        .I1(\rgb_data_out_reg[8]_i_6_n_0 ),
        .I2(rgb_data_in[3]),
        .I3(rgb_data_in[2]),
        .I4(rgb_data_in[1]),
        .O(\rgb_data_out_reg[11]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h95)) 
    \rgb_data_out_reg[11]_i_7 
       (.I0(rgb_data_in[2]),
        .I1(rgb_data_in[1]),
        .I2(rgb_data_in[0]),
        .O(\rgb_data_out_reg[11]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \rgb_data_out_reg[11]_i_8 
       (.I0(rgb_data_in[0]),
        .I1(rgb_data_in[1]),
        .O(\rgb_data_out_reg[11]_i_8_n_0 ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \rgb_data_out_reg[11]_i_9 
       (.CI(1'b0),
        .CO({\rgb_data_out_reg[11]_i_9_n_0 ,\NLW_rgb_data_out_reg[11]_i_9_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\rgb_data_out_reg[11]_i_12_n_0 ,\rgb_data_out_reg[11]_i_13_n_0 ,\rgb_data_out_reg[11]_i_14_n_0 ,\rgb_data_out_reg[11]_i_15_n_0 }),
        .O({\rgb_data_out_reg[11]_i_9_n_4 ,\rgb_data_out_reg[11]_i_9_n_5 ,\rgb_data_out_reg[11]_i_9_n_6 ,\rgb_data_out_reg[11]_i_9_n_7 }),
        .S({\rgb_data_out_reg[11]_i_16_n_0 ,\rgb_data_out_reg[11]_i_17_n_0 ,\rgb_data_out_reg[11]_i_18_n_0 ,\rgb_data_out_reg[11]_i_19_n_0 }));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[12] 
       (.CLR(\rgb_data_out_reg[15]_i_2_n_0 ),
        .D(\rgb_data_out_reg[12]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[12]));
  LUT6 #(
    .INIT(64'h5454FFFC5555FFFF)) 
    \rgb_data_out_reg[12]_i_1 
       (.I0(\^Q [2]),
        .I1(\rgb_data_out_reg[12]_i_2_n_0 ),
        .I2(\rgb_data_out_reg[12]_i_3_n_0 ),
        .I3(\rgb_data_out_reg[22]_i_4_n_0 ),
        .I4(\rgb_data_out_reg[12]_i_4_n_0 ),
        .I5(\rgb_data_out_reg[12]_i_5_n_0 ),
        .O(\rgb_data_out_reg[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h4444411155555555)) 
    \rgb_data_out_reg[12]_i_10 
       (.I0(\rgb_data_out_reg[13]_i_10_n_0 ),
        .I1(rgb_data_in[3]),
        .I2(rgb_data_in[0]),
        .I3(rgb_data_in[1]),
        .I4(rgb_data_in[2]),
        .I5(\rgb_data_out_reg[8]_i_9_n_0 ),
        .O(\rgb_data_out_reg[12]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h00000000E2222EEE)) 
    \rgb_data_out_reg[12]_i_2 
       (.I0(\rgb_data_out_reg[12]_i_6_n_0 ),
        .I1(\rgb_data_out_reg[14]_i_6_n_0 ),
        .I2(rgb_data_in[0]),
        .I3(rgb_data_in[1]),
        .I4(rgb_data_in[2]),
        .I5(\rgb_data_out_reg[23]_i_6_n_0 ),
        .O(\rgb_data_out_reg[12]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFEAAAAAA)) 
    \rgb_data_out_reg[12]_i_3 
       (.I0(\^Q [2]),
        .I1(increase_brightness02_carry__1_n_7),
        .I2(increase_brightness02_carry__0_n_7),
        .I3(\^Q [1]),
        .I4(\^Q [0]),
        .O(\rgb_data_out_reg[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFF1FFF)) 
    \rgb_data_out_reg[12]_i_4 
       (.I0(b1_carry_n_2),
        .I1(b1_carry_i_5_n_7),
        .I2(\^Q [2]),
        .I3(\^Q [1]),
        .I4(\^Q [0]),
        .I5(\rgb_data_out_reg[12]_i_7_n_0 ),
        .O(\rgb_data_out_reg[12]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h51111555FFFFFFFF)) 
    \rgb_data_out_reg[12]_i_5 
       (.I0(\rgb_data_out_reg[12]_i_8_n_0 ),
        .I1(\rgb_data_out_reg[13]_i_10_n_0 ),
        .I2(rgb_data_in[1]),
        .I3(rgb_data_in[2]),
        .I4(rgb_data_in[3]),
        .I5(\rgb_data_out_reg[22]_i_15_n_0 ),
        .O(\rgb_data_out_reg[12]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h3CCCCCCC55555555)) 
    \rgb_data_out_reg[12]_i_6 
       (.I0(\rgb_data_out_reg[12]_i_9_n_0 ),
        .I1(rgb_data_in[3]),
        .I2(rgb_data_in[1]),
        .I3(rgb_data_in[2]),
        .I4(rgb_data_in[0]),
        .I5(\rgb_data_out_reg[14]_i_10_n_0 ),
        .O(\rgb_data_out_reg[12]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFF0FEFEF0000E0E0)) 
    \rgb_data_out_reg[12]_i_7 
       (.I0(b1),
        .I1(b2[4]),
        .I2(\^Q [2]),
        .I3(\^Q [0]),
        .I4(\^Q [1]),
        .I5(rgb_data_in[12]),
        .O(\rgb_data_out_reg[12]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hCCC4C8C0C8C0CCC4)) 
    \rgb_data_out_reg[12]_i_8 
       (.I0(\rgb_data_out_reg[15]_i_5_n_0 ),
        .I1(\rgb_data_out_reg[12]_i_10_n_0 ),
        .I2(\rgb_data_out_reg[8]_i_9_n_0 ),
        .I3(\rgb_data_out_reg[15]_i_6_n_7 ),
        .I4(\rgb_data_out_reg[15]_i_9_n_0 ),
        .I5(rgb_data_in[4]),
        .O(\rgb_data_out_reg[12]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h74747447474B4B4B)) 
    \rgb_data_out_reg[12]_i_9 
       (.I0(rgb_data_in[5]),
        .I1(\rgb_data_out_reg[8]_i_6_n_0 ),
        .I2(rgb_data_in[4]),
        .I3(rgb_data_in[1]),
        .I4(rgb_data_in[2]),
        .I5(rgb_data_in[3]),
        .O(\rgb_data_out_reg[12]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[13] 
       (.CLR(\rgb_data_out_reg[15]_i_2_n_0 ),
        .D(\rgb_data_out_reg[13]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[13]));
  LUT6 #(
    .INIT(64'h0000FFEEFFFEFFFE)) 
    \rgb_data_out_reg[13]_i_1 
       (.I0(\rgb_data_out_reg[13]_i_2_n_0 ),
        .I1(\rgb_data_out_reg[13]_i_3_n_0 ),
        .I2(\rgb_data_out_reg[22]_i_4_n_0 ),
        .I3(\rgb_data_out_reg[13]_i_4_n_0 ),
        .I4(\^Q [2]),
        .I5(\rgb_data_out_reg[13]_i_5_n_0 ),
        .O(\rgb_data_out_reg[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0001010155555555)) 
    \rgb_data_out_reg[13]_i_10 
       (.I0(\rgb_data_out_reg[13]_i_13_n_0 ),
        .I1(rgb_data_in[2]),
        .I2(rgb_data_in[3]),
        .I3(rgb_data_in[1]),
        .I4(rgb_data_in[0]),
        .I5(rgb_data_in[4]),
        .O(\rgb_data_out_reg[13]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \rgb_data_out_reg[13]_i_11 
       (.I0(rgb_data_in[1]),
        .I1(rgb_data_in[2]),
        .O(\rgb_data_out_reg[13]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hFF0FEFEF0000E0E0)) 
    \rgb_data_out_reg[13]_i_12 
       (.I0(b1),
        .I1(b2[5]),
        .I2(\^Q [2]),
        .I3(\^Q [0]),
        .I4(\^Q [1]),
        .I5(rgb_data_in[13]),
        .O(\rgb_data_out_reg[13]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \rgb_data_out_reg[13]_i_13 
       (.I0(rgb_data_in[5]),
        .I1(rgb_data_in[7]),
        .I2(rgb_data_in[6]),
        .O(\rgb_data_out_reg[13]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h0000000011111555)) 
    \rgb_data_out_reg[13]_i_14 
       (.I0(rgb_data_in[5]),
        .I1(rgb_data_in[3]),
        .I2(rgb_data_in[0]),
        .I3(rgb_data_in[1]),
        .I4(rgb_data_in[2]),
        .I5(rgb_data_in[4]),
        .O(\rgb_data_out_reg[13]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h1101000100011101)) 
    \rgb_data_out_reg[13]_i_2 
       (.I0(\rgb_data_out_reg[14]_i_6_n_0 ),
        .I1(\rgb_data_out_reg[23]_i_6_n_0 ),
        .I2(\rgb_data_out_reg[13]_i_6_n_0 ),
        .I3(\rgb_data_out_reg[14]_i_10_n_0 ),
        .I4(\rgb_data_out_reg[13]_i_7_n_0 ),
        .I5(rgb_data_in[4]),
        .O(\rgb_data_out_reg[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFD0D0D010)) 
    \rgb_data_out_reg[13]_i_3 
       (.I0(\rgb_data_out_reg[13]_i_8_n_0 ),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .I3(increase_brightness02_carry__0_n_6),
        .I4(increase_brightness02_carry__1_n_7),
        .I5(\^Q [2]),
        .O(\rgb_data_out_reg[13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hA2A202A20202A202)) 
    \rgb_data_out_reg[13]_i_4 
       (.I0(\rgb_data_out_reg[22]_i_15_n_0 ),
        .I1(\rgb_data_out_reg[13]_i_9_n_0 ),
        .I2(\rgb_data_out_reg[13]_i_10_n_0 ),
        .I3(rgb_data_in[3]),
        .I4(\rgb_data_out_reg[13]_i_11_n_0 ),
        .I5(rgb_data_in[4]),
        .O(\rgb_data_out_reg[13]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFF1FFF)) 
    \rgb_data_out_reg[13]_i_5 
       (.I0(b1_carry_n_2),
        .I1(b1_carry_i_5_n_6),
        .I2(\^Q [2]),
        .I3(\^Q [1]),
        .I4(\^Q [0]),
        .I5(\rgb_data_out_reg[13]_i_12_n_0 ),
        .O(\rgb_data_out_reg[13]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h506F5F60)) 
    \rgb_data_out_reg[13]_i_6 
       (.I0(rgb_data_in[6]),
        .I1(\rgb_data_out_reg[14]_i_12_n_0 ),
        .I2(\rgb_data_out_reg[8]_i_6_n_0 ),
        .I3(rgb_data_in[5]),
        .I4(\rgb_data_out_reg[15]_i_12_n_0 ),
        .O(\rgb_data_out_reg[13]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \rgb_data_out_reg[13]_i_7 
       (.I0(rgb_data_in[1]),
        .I1(rgb_data_in[2]),
        .I2(rgb_data_in[0]),
        .I3(rgb_data_in[3]),
        .O(\rgb_data_out_reg[13]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFEFEFEEEEFEFEF)) 
    \rgb_data_out_reg[13]_i_8 
       (.I0(\rgb_data_out_reg[13]_i_13_n_0 ),
        .I1(rgb_data_in[4]),
        .I2(rgb_data_in[2]),
        .I3(rgb_data_in[1]),
        .I4(rgb_data_in[0]),
        .I5(rgb_data_in[3]),
        .O(\rgb_data_out_reg[13]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF000047744774)) 
    \rgb_data_out_reg[13]_i_9 
       (.I0(\rgb_data_out_reg[15]_i_6_n_6 ),
        .I1(\rgb_data_out_reg[15]_i_5_n_0 ),
        .I2(\rgb_data_out_reg[15]_i_11_n_0 ),
        .I3(rgb_data_in[5]),
        .I4(\rgb_data_out_reg[13]_i_14_n_0 ),
        .I5(\rgb_data_out_reg[8]_i_9_n_0 ),
        .O(\rgb_data_out_reg[13]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[14] 
       (.CLR(\rgb_data_out_reg[15]_i_2_n_0 ),
        .D(\rgb_data_out_reg[14]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[14]));
  LUT6 #(
    .INIT(64'h5454FFFC5555FFFF)) 
    \rgb_data_out_reg[14]_i_1 
       (.I0(\^Q [2]),
        .I1(\rgb_data_out_reg[14]_i_2_n_0 ),
        .I2(\rgb_data_out_reg[14]_i_3_n_0 ),
        .I3(\rgb_data_out_reg[22]_i_4_n_0 ),
        .I4(\rgb_data_out_reg[14]_i_4_n_0 ),
        .I5(\rgb_data_out_reg[14]_i_5_n_0 ),
        .O(\rgb_data_out_reg[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000007030000FFFF)) 
    \rgb_data_out_reg[14]_i_10 
       (.I0(rgb_data_in[2]),
        .I1(rgb_data_in[3]),
        .I2(rgb_data_in[4]),
        .I3(\rgb_data_out_reg[14]_i_13_n_0 ),
        .I4(\rgb_data_out_reg[15]_i_22_n_0 ),
        .I5(rgb_data_in[5]),
        .O(\rgb_data_out_reg[14]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFF0FEFEF0000E0E0)) 
    \rgb_data_out_reg[14]_i_11 
       (.I0(b1),
        .I1(b2[6]),
        .I2(\^Q [2]),
        .I3(\^Q [0]),
        .I4(\^Q [1]),
        .I5(rgb_data_in[14]),
        .O(\rgb_data_out_reg[14]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hFFEA)) 
    \rgb_data_out_reg[14]_i_12 
       (.I0(rgb_data_in[4]),
        .I1(rgb_data_in[1]),
        .I2(rgb_data_in[2]),
        .I3(rgb_data_in[3]),
        .O(\rgb_data_out_reg[14]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \rgb_data_out_reg[14]_i_13 
       (.I0(rgb_data_in[0]),
        .I1(rgb_data_in[1]),
        .O(\rgb_data_out_reg[14]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h4055404040554055)) 
    \rgb_data_out_reg[14]_i_2 
       (.I0(\rgb_data_out_reg[23]_i_6_n_0 ),
        .I1(\rgb_data_out_reg[14]_i_6_n_0 ),
        .I2(\rgb_data_out_reg[14]_i_7_n_0 ),
        .I3(\rgb_data_out_reg[14]_i_8_n_0 ),
        .I4(\rgb_data_out_reg[14]_i_9_n_0 ),
        .I5(\rgb_data_out_reg[14]_i_10_n_0 ),
        .O(\rgb_data_out_reg[14]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFEAAAAAA)) 
    \rgb_data_out_reg[14]_i_3 
       (.I0(\^Q [2]),
        .I1(increase_brightness02_carry__1_n_7),
        .I2(increase_brightness02_carry__0_n_5),
        .I3(\^Q [1]),
        .I4(\^Q [0]),
        .O(\rgb_data_out_reg[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFF1FFF)) 
    \rgb_data_out_reg[14]_i_4 
       (.I0(b1_carry_n_2),
        .I1(b1_carry_i_5_n_5),
        .I2(\^Q [2]),
        .I3(\^Q [1]),
        .I4(\^Q [0]),
        .I5(\rgb_data_out_reg[14]_i_11_n_0 ),
        .O(\rgb_data_out_reg[14]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h47447477FFFFFFFF)) 
    \rgb_data_out_reg[14]_i_5 
       (.I0(\rgb_data_out_reg[15]_i_6_n_5 ),
        .I1(\rgb_data_out_reg[15]_i_5_n_0 ),
        .I2(\rgb_data_out_reg[15]_i_11_n_0 ),
        .I3(rgb_data_in[5]),
        .I4(rgb_data_in[6]),
        .I5(\rgb_data_out_reg[22]_i_15_n_0 ),
        .O(\rgb_data_out_reg[14]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000007)) 
    \rgb_data_out_reg[14]_i_6 
       (.I0(rgb_data_in[2]),
        .I1(rgb_data_in[3]),
        .I2(rgb_data_in[5]),
        .I3(rgb_data_in[7]),
        .I4(rgb_data_in[6]),
        .I5(rgb_data_in[4]),
        .O(\rgb_data_out_reg[14]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hAA80)) 
    \rgb_data_out_reg[14]_i_7 
       (.I0(rgb_data_in[3]),
        .I1(rgb_data_in[0]),
        .I2(rgb_data_in[1]),
        .I3(rgb_data_in[2]),
        .O(\rgb_data_out_reg[14]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h0003DCDC)) 
    \rgb_data_out_reg[14]_i_8 
       (.I0(\rgb_data_out_reg[15]_i_12_n_0 ),
        .I1(rgb_data_in[6]),
        .I2(rgb_data_in[5]),
        .I3(\rgb_data_out_reg[14]_i_12_n_0 ),
        .I4(rgb_data_in[7]),
        .O(\rgb_data_out_reg[14]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h555555556AAAAAAA)) 
    \rgb_data_out_reg[14]_i_9 
       (.I0(rgb_data_in[5]),
        .I1(rgb_data_in[1]),
        .I2(rgb_data_in[2]),
        .I3(rgb_data_in[0]),
        .I4(rgb_data_in[3]),
        .I5(rgb_data_in[4]),
        .O(\rgb_data_out_reg[14]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[15] 
       (.CLR(\rgb_data_out_reg[15]_i_2_n_0 ),
        .D(\rgb_data_out_reg[15]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[15]));
  LUT6 #(
    .INIT(64'hAAAAAAAAFFFFBBAB)) 
    \rgb_data_out_reg[15]_i_1 
       (.I0(\rgb_data_out_reg[15]_i_3_n_0 ),
        .I1(\rgb_data_out_reg[15]_i_4_n_0 ),
        .I2(\rgb_data_out_reg[15]_i_5_n_0 ),
        .I3(\rgb_data_out_reg[15]_i_6_n_0 ),
        .I4(\rgb_data_out_reg[15]_i_7_n_0 ),
        .I5(\^Q [2]),
        .O(\rgb_data_out_reg[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00001000FFFF1FFF)) 
    \rgb_data_out_reg[15]_i_10 
       (.I0(b1_carry_n_2),
        .I1(b1_carry_i_5_n_4),
        .I2(\^Q [2]),
        .I3(\^Q [1]),
        .I4(\^Q [0]),
        .I5(rgb_data_in[15]),
        .O(\rgb_data_out_reg[15]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \rgb_data_out_reg[15]_i_11 
       (.I0(rgb_data_in[4]),
        .I1(rgb_data_in[2]),
        .I2(rgb_data_in[3]),
        .O(\rgb_data_out_reg[15]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h1FFF)) 
    \rgb_data_out_reg[15]_i_12 
       (.I0(rgb_data_in[2]),
        .I1(rgb_data_in[1]),
        .I2(rgb_data_in[4]),
        .I3(rgb_data_in[3]),
        .O(\rgb_data_out_reg[15]_i_12_n_0 ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \rgb_data_out_reg[15]_i_13 
       (.CI(1'b0),
        .CO({\rgb_data_out_reg[15]_i_13_n_0 ,\NLW_rgb_data_out_reg[15]_i_13_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(rgb_data_in[4:1]),
        .O({\rgb_data_out_reg[15]_i_13_n_4 ,\rgb_data_out_reg[15]_i_13_n_5 ,\rgb_data_out_reg[15]_i_13_n_6 ,\rgb_data_out_reg[15]_i_13_n_7 }),
        .S({\rgb_data_out_reg[15]_i_18_n_0 ,\rgb_data_out_reg[15]_i_19_n_0 ,\rgb_data_out_reg[15]_i_20_n_0 ,\rgb_data_out_reg[15]_i_21_n_0 }));
  LUT1 #(
    .INIT(2'h1)) 
    \rgb_data_out_reg[15]_i_14 
       (.I0(rgb_data_in[7]),
        .O(\rgb_data_out_reg[15]_i_14_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \rgb_data_out_reg[15]_i_15 
       (.I0(rgb_data_in[6]),
        .O(\rgb_data_out_reg[15]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h1A5A5A5AF0F0F0F0)) 
    \rgb_data_out_reg[15]_i_16 
       (.I0(rgb_data_in[6]),
        .I1(rgb_data_in[4]),
        .I2(rgb_data_in[5]),
        .I3(rgb_data_in[3]),
        .I4(rgb_data_in[2]),
        .I5(rgb_data_in[7]),
        .O(\rgb_data_out_reg[15]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hFEAAAAAAAAAAAAAA)) 
    \rgb_data_out_reg[15]_i_17 
       (.I0(\rgb_data_out_reg[15]_i_22_n_0 ),
        .I1(rgb_data_in[2]),
        .I2(rgb_data_in[1]),
        .I3(rgb_data_in[4]),
        .I4(rgb_data_in[3]),
        .I5(rgb_data_in[5]),
        .O(\rgb_data_out_reg[15]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'h6D2D2D250F0F0F0F)) 
    \rgb_data_out_reg[15]_i_18 
       (.I0(rgb_data_in[6]),
        .I1(rgb_data_in[5]),
        .I2(rgb_data_in[4]),
        .I3(rgb_data_in[2]),
        .I4(rgb_data_in[3]),
        .I5(rgb_data_in[7]),
        .O(\rgb_data_out_reg[15]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h7F7F7F7F80808000)) 
    \rgb_data_out_reg[15]_i_19 
       (.I0(rgb_data_in[7]),
        .I1(rgb_data_in[6]),
        .I2(rgb_data_in[5]),
        .I3(rgb_data_in[4]),
        .I4(rgb_data_in[2]),
        .I5(rgb_data_in[3]),
        .O(\rgb_data_out_reg[15]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \rgb_data_out_reg[15]_i_2 
       (.I0(\rgb_data_out_reg[15]_i_8_n_0 ),
        .I1(\rgb_data_out_reg[15]_i_9_n_0 ),
        .I2(rgb_data_in[1]),
        .I3(rgb_data_in[0]),
        .I4(\^Q [2]),
        .I5(\rgb_data_out_reg[23]_i_6_n_0 ),
        .O(\rgb_data_out_reg[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9D22DD2AFF00FF00)) 
    \rgb_data_out_reg[15]_i_20 
       (.I0(rgb_data_in[6]),
        .I1(rgb_data_in[5]),
        .I2(rgb_data_in[4]),
        .I3(rgb_data_in[2]),
        .I4(rgb_data_in[3]),
        .I5(rgb_data_in[7]),
        .O(\rgb_data_out_reg[15]_i_20_n_0 ));
  LUT5 #(
    .INIT(32'h55559555)) 
    \rgb_data_out_reg[15]_i_21 
       (.I0(rgb_data_in[1]),
        .I1(rgb_data_in[7]),
        .I2(rgb_data_in[6]),
        .I3(rgb_data_in[5]),
        .I4(\rgb_data_out_reg[15]_i_11_n_0 ),
        .O(\rgb_data_out_reg[15]_i_21_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rgb_data_out_reg[15]_i_22 
       (.I0(rgb_data_in[6]),
        .I1(rgb_data_in[7]),
        .O(\rgb_data_out_reg[15]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h3F013F013F013001)) 
    \rgb_data_out_reg[15]_i_3 
       (.I0(\^Q [0]),
        .I1(\rgb_data_out_reg[15]_i_10_n_0 ),
        .I2(\^Q [1]),
        .I3(\^Q [2]),
        .I4(b2[7]),
        .I5(b1),
        .O(\rgb_data_out_reg[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF00F7FFFFFFFF)) 
    \rgb_data_out_reg[15]_i_4 
       (.I0(rgb_data_in[6]),
        .I1(rgb_data_in[5]),
        .I2(\rgb_data_out_reg[15]_i_11_n_0 ),
        .I3(rgb_data_in[7]),
        .I4(\^Q [1]),
        .I5(\^Q [0]),
        .O(\rgb_data_out_reg[15]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hAAA2)) 
    \rgb_data_out_reg[15]_i_5 
       (.I0(rgb_data_in[7]),
        .I1(\rgb_data_out_reg[15]_i_12_n_0 ),
        .I2(rgb_data_in[5]),
        .I3(rgb_data_in[6]),
        .O(\rgb_data_out_reg[15]_i_5_n_0 ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \rgb_data_out_reg[15]_i_6 
       (.CI(\rgb_data_out_reg[15]_i_13_n_0 ),
        .CO({\rgb_data_out_reg[15]_i_6_n_0 ,\NLW_rgb_data_out_reg[15]_i_6_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,rgb_data_in[7:5]}),
        .O({\NLW_rgb_data_out_reg[15]_i_6_O_UNCONNECTED [3],\rgb_data_out_reg[15]_i_6_n_5 ,\rgb_data_out_reg[15]_i_6_n_6 ,\rgb_data_out_reg[15]_i_6_n_7 }),
        .S({1'b1,\rgb_data_out_reg[15]_i_14_n_0 ,\rgb_data_out_reg[15]_i_15_n_0 ,\rgb_data_out_reg[15]_i_16_n_0 }));
  LUT5 #(
    .INIT(32'hFC00AA00)) 
    \rgb_data_out_reg[15]_i_7 
       (.I0(\rgb_data_out_reg[15]_i_17_n_0 ),
        .I1(increase_brightness02_carry__1_n_7),
        .I2(increase_brightness02_carry__0_n_4),
        .I3(\^Q [1]),
        .I4(\^Q [0]),
        .O(\rgb_data_out_reg[15]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \rgb_data_out_reg[15]_i_8 
       (.I0(rgb_data_in[4]),
        .I1(rgb_data_in[6]),
        .I2(rgb_data_in[7]),
        .I3(rgb_data_in[5]),
        .O(\rgb_data_out_reg[15]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rgb_data_out_reg[15]_i_9 
       (.I0(rgb_data_in[3]),
        .I1(rgb_data_in[2]),
        .O(\rgb_data_out_reg[15]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[16] 
       (.CLR(\rgb_data_out_reg[23]_i_2_n_0 ),
        .D(\rgb_data_out_reg[16]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[16]));
  LUT6 #(
    .INIT(64'h5454FFFC5555FFFF)) 
    \rgb_data_out_reg[16]_i_1 
       (.I0(\^Q [2]),
        .I1(\rgb_data_out_reg[16]_i_2_n_0 ),
        .I2(\rgb_data_out_reg[16]_i_3_n_0 ),
        .I3(\rgb_data_out_reg[22]_i_4_n_0 ),
        .I4(\rgb_data_out_reg[16]_i_4_n_0 ),
        .I5(\rgb_data_out_reg[16]_i_5_n_0 ),
        .O(\rgb_data_out_reg[16]_i_1_n_0 ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \rgb_data_out_reg[16]_i_10 
       (.CI(1'b0),
        .CO({\rgb_data_out_reg[16]_i_10_n_0 ,\NLW_rgb_data_out_reg[16]_i_10_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(rgb_data_in[20:17]),
        .O(data4[3:0]),
        .S({\rgb_data_out_reg[16]_i_19_n_0 ,\rgb_data_out_reg[16]_i_20_n_0 ,\rgb_data_out_reg[16]_i_21_n_0 ,\rgb_data_out_reg[16]_i_22_n_0 }));
  LUT2 #(
    .INIT(4'hE)) 
    \rgb_data_out_reg[16]_i_11 
       (.I0(g2_carry_i_9_n_3),
        .I1(y3__33_carry__0_n_4),
        .O(\rgb_data_out_reg[16]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rgb_data_out_reg[16]_i_12 
       (.I0(y3__33_carry__0_n_5),
        .I1(g2_carry_i_9_n_3),
        .O(\rgb_data_out_reg[16]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rgb_data_out_reg[16]_i_13 
       (.I0(y3__33_carry__0_n_6),
        .I1(g2_carry_i_9_n_3),
        .O(\rgb_data_out_reg[16]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rgb_data_out_reg[16]_i_14 
       (.I0(y3__33_carry__0_n_7),
        .I1(g2_carry_i_9_n_3),
        .O(\rgb_data_out_reg[16]_i_14_n_0 ));
  LUT3 #(
    .INIT(8'h1E)) 
    \rgb_data_out_reg[16]_i_15 
       (.I0(y3__33_carry__0_n_4),
        .I1(g2_carry_i_9_n_3),
        .I2(\rgb_data_out_reg[22]_i_19_n_7 ),
        .O(\rgb_data_out_reg[16]_i_15_n_0 ));
  LUT3 #(
    .INIT(8'h1E)) 
    \rgb_data_out_reg[16]_i_16 
       (.I0(y3__33_carry__0_n_5),
        .I1(g2_carry_i_9_n_3),
        .I2(\rgb_data_out_reg[19]_i_15_n_4 ),
        .O(\rgb_data_out_reg[16]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h1E)) 
    \rgb_data_out_reg[16]_i_17 
       (.I0(y3__33_carry__0_n_6),
        .I1(g2_carry_i_9_n_3),
        .I2(\rgb_data_out_reg[19]_i_15_n_5 ),
        .O(\rgb_data_out_reg[16]_i_17_n_0 ));
  LUT3 #(
    .INIT(8'h1E)) 
    \rgb_data_out_reg[16]_i_18 
       (.I0(y3__33_carry__0_n_7),
        .I1(g2_carry_i_9_n_3),
        .I2(\rgb_data_out_reg[19]_i_15_n_6 ),
        .O(\rgb_data_out_reg[16]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h6D2D2D250F0F0F0F)) 
    \rgb_data_out_reg[16]_i_19 
       (.I0(rgb_data_in[22]),
        .I1(rgb_data_in[21]),
        .I2(rgb_data_in[20]),
        .I3(rgb_data_in[19]),
        .I4(rgb_data_in[18]),
        .I5(rgb_data_in[23]),
        .O(\rgb_data_out_reg[16]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h1111111111010001)) 
    \rgb_data_out_reg[16]_i_2 
       (.I0(\rgb_data_out_reg[22]_i_7_n_0 ),
        .I1(\rgb_data_out_reg[23]_i_6_n_0 ),
        .I2(rgb_data_in[17]),
        .I3(\rgb_data_out_reg[16]_i_6_n_0 ),
        .I4(rgb_data_in[16]),
        .I5(\rgb_data_out_reg[22]_i_11_n_0 ),
        .O(\rgb_data_out_reg[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7F7F80807F7F8000)) 
    \rgb_data_out_reg[16]_i_20 
       (.I0(rgb_data_in[23]),
        .I1(rgb_data_in[22]),
        .I2(rgb_data_in[21]),
        .I3(rgb_data_in[20]),
        .I4(rgb_data_in[19]),
        .I5(rgb_data_in[18]),
        .O(\rgb_data_out_reg[16]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'h9DDD222AFFFF0000)) 
    \rgb_data_out_reg[16]_i_21 
       (.I0(rgb_data_in[22]),
        .I1(rgb_data_in[21]),
        .I2(rgb_data_in[20]),
        .I3(rgb_data_in[19]),
        .I4(rgb_data_in[18]),
        .I5(rgb_data_in[23]),
        .O(\rgb_data_out_reg[16]_i_21_n_0 ));
  LUT5 #(
    .INIT(32'h55559555)) 
    \rgb_data_out_reg[16]_i_22 
       (.I0(rgb_data_in[17]),
        .I1(rgb_data_in[23]),
        .I2(rgb_data_in[22]),
        .I3(rgb_data_in[21]),
        .I4(\rgb_data_out_reg[23]_i_7_n_0 ),
        .O(\rgb_data_out_reg[16]_i_22_n_0 ));
  LUT5 #(
    .INIT(32'hFEAAAAAA)) 
    \rgb_data_out_reg[16]_i_3 
       (.I0(\^Q [2]),
        .I1(increase_brightness2_carry_n_7),
        .I2(increase_brightness2_carry__1_n_7),
        .I3(\^Q [1]),
        .I4(\^Q [0]),
        .O(\rgb_data_out_reg[16]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h000001FF)) 
    \rgb_data_out_reg[16]_i_4 
       (.I0(\rgb_data_out_reg[21]_i_14_n_7 ),
        .I1(\rgb_data_out_reg[21]_i_14_n_2 ),
        .I2(\rgb_data_out_reg[16]_i_7_n_7 ),
        .I3(\rgb_data_out_reg[21]_i_15_n_0 ),
        .I4(\rgb_data_out_reg[16]_i_8_n_0 ),
        .O(\rgb_data_out_reg[16]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h33330123FFFFFFFF)) 
    \rgb_data_out_reg[16]_i_5 
       (.I0(\rgb_data_out_reg[23]_i_12_n_0 ),
        .I1(\rgb_data_out_reg[16]_i_9_n_0 ),
        .I2(data4[0]),
        .I3(rgb_data_in[16]),
        .I4(\rgb_data_out_reg[19]_i_7_n_0 ),
        .I5(\rgb_data_out_reg[22]_i_15_n_0 ),
        .O(\rgb_data_out_reg[16]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h1555155515555555)) 
    \rgb_data_out_reg[16]_i_6 
       (.I0(rgb_data_in[23]),
        .I1(rgb_data_in[22]),
        .I2(rgb_data_in[21]),
        .I3(rgb_data_in[20]),
        .I4(rgb_data_in[17]),
        .I5(\rgb_data_out_reg[20]_i_10_n_0 ),
        .O(\rgb_data_out_reg[16]_i_6_n_0 ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \rgb_data_out_reg[16]_i_7 
       (.CI(1'b0),
        .CO({\rgb_data_out_reg[16]_i_7_n_0 ,\NLW_rgb_data_out_reg[16]_i_7_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\rgb_data_out_reg[16]_i_11_n_0 ,\rgb_data_out_reg[16]_i_12_n_0 ,\rgb_data_out_reg[16]_i_13_n_0 ,\rgb_data_out_reg[16]_i_14_n_0 }),
        .O({\rgb_data_out_reg[16]_i_7_n_4 ,\rgb_data_out_reg[16]_i_7_n_5 ,\rgb_data_out_reg[16]_i_7_n_6 ,\rgb_data_out_reg[16]_i_7_n_7 }),
        .S({\rgb_data_out_reg[16]_i_15_n_0 ,\rgb_data_out_reg[16]_i_16_n_0 ,\rgb_data_out_reg[16]_i_17_n_0 ,\rgb_data_out_reg[16]_i_18_n_0 }));
  LUT6 #(
    .INIT(64'hFE00FFFFFE00FE00)) 
    \rgb_data_out_reg[16]_i_8 
       (.I0(r2[8]),
        .I1(r2[9]),
        .I2(r2[0]),
        .I3(i__carry_i_6_n_0),
        .I4(\rgb_data_out_reg[17]_i_5_n_0 ),
        .I5(rgb_data_in[16]),
        .O(\rgb_data_out_reg[16]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFE00FE00FEFFFE00)) 
    \rgb_data_out_reg[16]_i_9 
       (.I0(rgb_data_in[18]),
        .I1(rgb_data_in[19]),
        .I2(rgb_data_in[20]),
        .I3(\rgb_data_out_reg[21]_i_12_n_0 ),
        .I4(\rgb_data_out_reg[19]_i_7_n_0 ),
        .I5(rgb_data_in[16]),
        .O(\rgb_data_out_reg[16]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[17] 
       (.CLR(\rgb_data_out_reg[23]_i_2_n_0 ),
        .D(\rgb_data_out_reg[17]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[17]));
  LUT6 #(
    .INIT(64'hFF55FF55FF55AB00)) 
    \rgb_data_out_reg[17]_i_1 
       (.I0(\^Q [2]),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .I3(\rgb_data_out_reg[17]_i_2_n_0 ),
        .I4(\rgb_data_out_reg[17]_i_3_n_0 ),
        .I5(\rgb_data_out_reg[17]_i_4_n_0 ),
        .O(\rgb_data_out_reg[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF4FFF4FFF4F4F4)) 
    \rgb_data_out_reg[17]_i_2 
       (.I0(\rgb_data_out_reg[17]_i_5_n_0 ),
        .I1(rgb_data_in[17]),
        .I2(\rgb_data_out_reg[17]_i_6_n_0 ),
        .I3(i__carry_i_6_n_0),
        .I4(r2[1]),
        .I5(\rgb_data_out_reg[17]_i_7_n_0 ),
        .O(\rgb_data_out_reg[17]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h8880)) 
    \rgb_data_out_reg[17]_i_3 
       (.I0(\^Q [0]),
        .I1(\^Q [1]),
        .I2(increase_brightness2_carry_n_6),
        .I3(increase_brightness2_carry__1_n_7),
        .O(\rgb_data_out_reg[17]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hEEEEEEEEAAEAAAAA)) 
    \rgb_data_out_reg[17]_i_4 
       (.I0(\rgb_data_out_reg[17]_i_8_n_0 ),
        .I1(\rgb_data_out_reg[22]_i_15_n_0 ),
        .I2(rgb_data_in[16]),
        .I3(\rgb_data_out_reg[23]_i_7_n_0 ),
        .I4(\rgb_data_out_reg[21]_i_12_n_0 ),
        .I5(\rgb_data_out_reg[17]_i_9_n_0 ),
        .O(\rgb_data_out_reg[17]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h2A)) 
    \rgb_data_out_reg[17]_i_5 
       (.I0(\^Q [2]),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .O(\rgb_data_out_reg[17]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h4040404040404000)) 
    \rgb_data_out_reg[17]_i_6 
       (.I0(\^Q [0]),
        .I1(\^Q [1]),
        .I2(\^Q [2]),
        .I3(\rgb_data_out_reg[16]_i_7_n_6 ),
        .I4(\rgb_data_out_reg[21]_i_14_n_2 ),
        .I5(\rgb_data_out_reg[21]_i_14_n_7 ),
        .O(\rgb_data_out_reg[17]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rgb_data_out_reg[17]_i_7 
       (.I0(r2[9]),
        .I1(r2[8]),
        .O(\rgb_data_out_reg[17]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00002228AAAA2228)) 
    \rgb_data_out_reg[17]_i_8 
       (.I0(\rgb_data_out_reg[21]_i_6_n_0 ),
        .I1(rgb_data_in[17]),
        .I2(rgb_data_in[18]),
        .I3(\rgb_data_out_reg[16]_i_6_n_0 ),
        .I4(\rgb_data_out_reg[22]_i_11_n_0 ),
        .I5(rgb_data_in[16]),
        .O(\rgb_data_out_reg[17]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h000000000EFEF404)) 
    \rgb_data_out_reg[17]_i_9 
       (.I0(\rgb_data_out_reg[23]_i_12_n_0 ),
        .I1(data4[1]),
        .I2(\rgb_data_out_reg[19]_i_7_n_0 ),
        .I3(rgb_data_in[16]),
        .I4(rgb_data_in[17]),
        .I5(\rgb_data_out_reg[21]_i_12_n_0 ),
        .O(\rgb_data_out_reg[17]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[18] 
       (.CLR(\rgb_data_out_reg[23]_i_2_n_0 ),
        .D(\rgb_data_out_reg[18]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[18]));
  LUT6 #(
    .INIT(64'hFF00FFDDFFFFFFFD)) 
    \rgb_data_out_reg[18]_i_1 
       (.I0(\rgb_data_out_reg[18]_i_2_n_0 ),
        .I1(\rgb_data_out_reg[18]_i_3_n_0 ),
        .I2(\rgb_data_out_reg[22]_i_4_n_0 ),
        .I3(\rgb_data_out_reg[18]_i_4_n_0 ),
        .I4(\^Q [2]),
        .I5(\rgb_data_out_reg[18]_i_5_n_0 ),
        .O(\rgb_data_out_reg[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hD0DF0000FFFFFFFF)) 
    \rgb_data_out_reg[18]_i_2 
       (.I0(\rgb_data_out_reg[21]_i_12_n_0 ),
        .I1(rgb_data_in[17]),
        .I2(\rgb_data_out_reg[18]_i_6_n_0 ),
        .I3(rgb_data_in[16]),
        .I4(\rgb_data_out_reg[18]_i_7_n_0 ),
        .I5(\rgb_data_out_reg[22]_i_15_n_0 ),
        .O(\rgb_data_out_reg[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000000000027FF8D)) 
    \rgb_data_out_reg[18]_i_3 
       (.I0(\rgb_data_out_reg[22]_i_11_n_0 ),
        .I1(rgb_data_in[17]),
        .I2(\rgb_data_out_reg[18]_i_8_n_0 ),
        .I3(\rgb_data_out_reg[22]_i_7_n_0 ),
        .I4(rgb_data_in[16]),
        .I5(\rgb_data_out_reg[23]_i_6_n_0 ),
        .O(\rgb_data_out_reg[18]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h40404000)) 
    \rgb_data_out_reg[18]_i_4 
       (.I0(\^Q [2]),
        .I1(\^Q [1]),
        .I2(\^Q [0]),
        .I3(increase_brightness2_carry_n_5),
        .I4(increase_brightness2_carry__1_n_7),
        .O(\rgb_data_out_reg[18]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF01FF00000100)) 
    \rgb_data_out_reg[18]_i_5 
       (.I0(r2[8]),
        .I1(r2[9]),
        .I2(r2[2]),
        .I3(\^Q [2]),
        .I4(\^Q [1]),
        .I5(\rgb_data_out_reg[18]_i_9_n_0 ),
        .O(\rgb_data_out_reg[18]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \rgb_data_out_reg[18]_i_6 
       (.I0(rgb_data_in[22]),
        .I1(rgb_data_in[23]),
        .I2(rgb_data_in[21]),
        .I3(rgb_data_in[18]),
        .I4(rgb_data_in[19]),
        .I5(rgb_data_in[20]),
        .O(\rgb_data_out_reg[18]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0BFBF101)) 
    \rgb_data_out_reg[18]_i_7 
       (.I0(\rgb_data_out_reg[23]_i_12_n_0 ),
        .I1(data4[2]),
        .I2(\rgb_data_out_reg[19]_i_7_n_0 ),
        .I3(\rgb_data_out_reg[21]_i_9_n_0 ),
        .I4(rgb_data_in[18]),
        .I5(\rgb_data_out_reg[21]_i_12_n_0 ),
        .O(\rgb_data_out_reg[18]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h1EE2)) 
    \rgb_data_out_reg[18]_i_8 
       (.I0(rgb_data_in[19]),
        .I1(\rgb_data_out_reg[16]_i_6_n_0 ),
        .I2(rgb_data_in[17]),
        .I3(rgb_data_in[18]),
        .O(\rgb_data_out_reg[18]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h010001FF)) 
    \rgb_data_out_reg[18]_i_9 
       (.I0(\rgb_data_out_reg[21]_i_14_n_7 ),
        .I1(\rgb_data_out_reg[21]_i_14_n_2 ),
        .I2(\rgb_data_out_reg[16]_i_7_n_5 ),
        .I3(\rgb_data_out_reg[21]_i_15_n_0 ),
        .I4(rgb_data_in[18]),
        .O(\rgb_data_out_reg[18]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[19] 
       (.CLR(\rgb_data_out_reg[23]_i_2_n_0 ),
        .D(\rgb_data_out_reg[19]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[19]));
  LUT6 #(
    .INIT(64'hFF00FFDDFFFFFFFD)) 
    \rgb_data_out_reg[19]_i_1 
       (.I0(\rgb_data_out_reg[19]_i_2_n_0 ),
        .I1(\rgb_data_out_reg[19]_i_3_n_0 ),
        .I2(\rgb_data_out_reg[22]_i_4_n_0 ),
        .I3(\rgb_data_out_reg[19]_i_4_n_0 ),
        .I4(\^Q [2]),
        .I5(\rgb_data_out_reg[19]_i_5_n_0 ),
        .O(\rgb_data_out_reg[19]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h95)) 
    \rgb_data_out_reg[19]_i_10 
       (.I0(rgb_data_in[18]),
        .I1(rgb_data_in[16]),
        .I2(rgb_data_in[17]),
        .O(\rgb_data_out_reg[19]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hBBB1144E)) 
    \rgb_data_out_reg[19]_i_11 
       (.I0(\rgb_data_out_reg[16]_i_6_n_0 ),
        .I1(rgb_data_in[20]),
        .I2(rgb_data_in[17]),
        .I3(rgb_data_in[18]),
        .I4(rgb_data_in[19]),
        .O(\rgb_data_out_reg[19]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \rgb_data_out_reg[19]_i_12 
       (.I0(rgb_data_in[17]),
        .I1(rgb_data_in[16]),
        .O(\rgb_data_out_reg[19]_i_12_n_0 ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \rgb_data_out_reg[19]_i_13 
       (.CI(1'b0),
        .CO({\rgb_data_out_reg[19]_i_13_n_0 ,\NLW_rgb_data_out_reg[19]_i_13_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\rgb_data_out_reg[22]_i_19_n_7 ,\rgb_data_out_reg[19]_i_15_n_4 ,\rgb_data_out_reg[19]_i_15_n_5 ,\rgb_data_out_reg[19]_i_15_n_6 }),
        .O(r2[3:0]),
        .S({\rgb_data_out_reg[19]_i_16_n_0 ,\rgb_data_out_reg[19]_i_17_n_0 ,\rgb_data_out_reg[19]_i_18_n_0 ,\rgb_data_out_reg[19]_i_19_n_0 }));
  LUT5 #(
    .INIT(32'h010001FF)) 
    \rgb_data_out_reg[19]_i_14 
       (.I0(\rgb_data_out_reg[21]_i_14_n_7 ),
        .I1(\rgb_data_out_reg[21]_i_14_n_2 ),
        .I2(\rgb_data_out_reg[16]_i_7_n_4 ),
        .I3(\rgb_data_out_reg[21]_i_15_n_0 ),
        .I4(rgb_data_in[19]),
        .O(\rgb_data_out_reg[19]_i_14_n_0 ));
  (* OPT_MODIFIED = "PROPCONST SWEEP" *) 
  CARRY4 \rgb_data_out_reg[19]_i_15 
       (.CI(1'b0),
        .CO({\rgb_data_out_reg[19]_i_15_n_0 ,\NLW_rgb_data_out_reg[19]_i_15_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\rgb_data_out_reg[19]_i_20_n_0 ,\rgb_data_out_reg[19]_i_21_n_0 ,v0_out[0],1'b0}),
        .O({\rgb_data_out_reg[19]_i_15_n_4 ,\rgb_data_out_reg[19]_i_15_n_5 ,\rgb_data_out_reg[19]_i_15_n_6 ,\NLW_rgb_data_out_reg[19]_i_15_O_UNCONNECTED [0]}),
        .S({\rgb_data_out_reg[19]_i_23_n_0 ,\rgb_data_out_reg[19]_i_24_n_0 ,\rgb_data_out_reg[19]_i_25_n_0 ,\rgb_data_out_reg[19]_i_26_n_0 }));
  LUT6 #(
    .INIT(64'h55555515AAAAAAEA)) 
    \rgb_data_out_reg[19]_i_16 
       (.I0(i__carry_i_5_n_0),
        .I1(i__carry_i_6_n_0),
        .I2(\^Q [0]),
        .I3(i__carry_i_7__0_n_0),
        .I4(i__carry_i_8__0_n_0),
        .I5(\rgb_data_out_reg[22]_i_19_n_7 ),
        .O(\rgb_data_out_reg[19]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAEEEF55551110)) 
    \rgb_data_out_reg[19]_i_17 
       (.I0(i__carry_i_9__0_n_0),
        .I1(i__carry_i_10__0_n_0),
        .I2(i__carry_i_11__0_n_0),
        .I3(i__carry_i_12__0_n_0),
        .I4(i__carry_i_13__0_n_0),
        .I5(\rgb_data_out_reg[19]_i_15_n_4 ),
        .O(\rgb_data_out_reg[19]_i_17_n_0 ));
  LUT5 #(
    .INIT(32'h5551AAAE)) 
    \rgb_data_out_reg[19]_i_18 
       (.I0(i__carry_i_14_n_0),
        .I1(i__carry_i_15_n_0),
        .I2(i__carry_i_16_n_0),
        .I3(i__carry_i_17_n_0),
        .I4(\rgb_data_out_reg[19]_i_15_n_5 ),
        .O(\rgb_data_out_reg[19]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h33330313CCCCFCEC)) 
    \rgb_data_out_reg[19]_i_19 
       (.I0(i__carry_i_18_n_0),
        .I1(i__carry_i_19_n_0),
        .I2(i__carry_i_20_n_0),
        .I3(i__carry_i_21_n_0),
        .I4(i__carry_i_17_n_0),
        .I5(\rgb_data_out_reg[19]_i_15_n_6 ),
        .O(\rgb_data_out_reg[19]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h001DFF1DFFFFFFFF)) 
    \rgb_data_out_reg[19]_i_2 
       (.I0(\rgb_data_out_reg[19]_i_6_n_0 ),
        .I1(\rgb_data_out_reg[19]_i_7_n_0 ),
        .I2(\rgb_data_out_reg[19]_i_8_n_0 ),
        .I3(\rgb_data_out_reg[21]_i_12_n_0 ),
        .I4(\rgb_data_out_reg[19]_i_9_n_0 ),
        .I5(\rgb_data_out_reg[22]_i_15_n_0 ),
        .O(\rgb_data_out_reg[19]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rgb_data_out_reg[19]_i_20 
       (.I0(v3__29_carry__2_n_2),
        .I1(v3__29_carry__0_n_4),
        .O(\rgb_data_out_reg[19]_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rgb_data_out_reg[19]_i_21 
       (.I0(v3__29_carry__2_n_2),
        .I1(v3__29_carry__0_n_5),
        .O(\rgb_data_out_reg[19]_i_21_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rgb_data_out_reg[19]_i_22 
       (.I0(v3__29_carry__2_n_2),
        .I1(v3__29_carry__0_n_6),
        .O(v0_out[0]));
  LUT3 #(
    .INIT(8'h60)) 
    \rgb_data_out_reg[19]_i_23 
       (.I0(v3__29_carry__0_n_4),
        .I1(v3__29_carry__1_n_5),
        .I2(v3__29_carry__2_n_2),
        .O(\rgb_data_out_reg[19]_i_23_n_0 ));
  LUT3 #(
    .INIT(8'h60)) 
    \rgb_data_out_reg[19]_i_24 
       (.I0(v3__29_carry__0_n_5),
        .I1(v3__29_carry__1_n_6),
        .I2(v3__29_carry__2_n_2),
        .O(\rgb_data_out_reg[19]_i_24_n_0 ));
  LUT3 #(
    .INIT(8'h60)) 
    \rgb_data_out_reg[19]_i_25 
       (.I0(v3__29_carry__0_n_6),
        .I1(v3__29_carry__1_n_7),
        .I2(v3__29_carry__2_n_2),
        .O(\rgb_data_out_reg[19]_i_25_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rgb_data_out_reg[19]_i_26 
       (.I0(v3__29_carry__2_n_2),
        .I1(v3__29_carry__0_n_4),
        .O(\rgb_data_out_reg[19]_i_26_n_0 ));
  LUT6 #(
    .INIT(64'h00FF004700000047)) 
    \rgb_data_out_reg[19]_i_3 
       (.I0(\rgb_data_out_reg[19]_i_10_n_0 ),
        .I1(\rgb_data_out_reg[22]_i_11_n_0 ),
        .I2(\rgb_data_out_reg[19]_i_11_n_0 ),
        .I3(\rgb_data_out_reg[23]_i_6_n_0 ),
        .I4(\rgb_data_out_reg[22]_i_7_n_0 ),
        .I5(\rgb_data_out_reg[19]_i_12_n_0 ),
        .O(\rgb_data_out_reg[19]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h40404000)) 
    \rgb_data_out_reg[19]_i_4 
       (.I0(\^Q [2]),
        .I1(\^Q [1]),
        .I2(\^Q [0]),
        .I3(increase_brightness2_carry_n_4),
        .I4(increase_brightness2_carry__1_n_7),
        .O(\rgb_data_out_reg[19]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF01FF00000100)) 
    \rgb_data_out_reg[19]_i_5 
       (.I0(r2[8]),
        .I1(r2[9]),
        .I2(r2[3]),
        .I3(\^Q [2]),
        .I4(\^Q [1]),
        .I5(\rgb_data_out_reg[19]_i_14_n_0 ),
        .O(\rgb_data_out_reg[19]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hE44E)) 
    \rgb_data_out_reg[19]_i_6 
       (.I0(\rgb_data_out_reg[23]_i_12_n_0 ),
        .I1(data4[3]),
        .I2(rgb_data_in[18]),
        .I3(rgb_data_in[19]),
        .O(\rgb_data_out_reg[19]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h0000002F)) 
    \rgb_data_out_reg[19]_i_7 
       (.I0(\rgb_data_out_reg[23]_i_7_n_0 ),
        .I1(rgb_data_in[17]),
        .I2(rgb_data_in[21]),
        .I3(rgb_data_in[22]),
        .I4(rgb_data_in[23]),
        .O(\rgb_data_out_reg[19]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h556A)) 
    \rgb_data_out_reg[19]_i_8 
       (.I0(rgb_data_in[19]),
        .I1(rgb_data_in[17]),
        .I2(rgb_data_in[16]),
        .I3(rgb_data_in[18]),
        .O(\rgb_data_out_reg[19]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \rgb_data_out_reg[19]_i_9 
       (.I0(rgb_data_in[17]),
        .I1(rgb_data_in[18]),
        .O(\rgb_data_out_reg[19]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[1] 
       (.CLR(\rgb_data_out_reg[7]_i_2_n_0 ),
        .D(\rgb_data_out_reg[1]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[1]));
  LUT6 #(
    .INIT(64'h0000FFEEFFFEFFFE)) 
    \rgb_data_out_reg[1]_i_1 
       (.I0(\rgb_data_out_reg[1]_i_2_n_0 ),
        .I1(\rgb_data_out_reg[1]_i_3_n_0 ),
        .I2(\rgb_data_out_reg[22]_i_4_n_0 ),
        .I3(\rgb_data_out_reg[1]_i_4_n_0 ),
        .I4(\^Q [2]),
        .I5(\rgb_data_out_reg[1]_i_5_n_0 ),
        .O(\rgb_data_out_reg[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000565600FF)) 
    \rgb_data_out_reg[1]_i_2 
       (.I0(rgb_data_in[9]),
        .I1(rgb_data_in[10]),
        .I2(\rgb_data_out_reg[7]_i_13_n_0 ),
        .I3(rgb_data_in[8]),
        .I4(\rgb_data_out_reg[3]_i_7_n_0 ),
        .I5(\rgb_data_out_reg[1]_i_6_n_0 ),
        .O(\rgb_data_out_reg[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFEAAAAAA)) 
    \rgb_data_out_reg[1]_i_3 
       (.I0(\^Q [2]),
        .I1(increase_brightness12_carry__1_n_7),
        .I2(increase_brightness12_carry_n_6),
        .I3(\^Q [1]),
        .I4(\^Q [0]),
        .O(\rgb_data_out_reg[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h4040444040404040)) 
    \rgb_data_out_reg[1]_i_4 
       (.I0(\^Q [1]),
        .I1(\^Q [0]),
        .I2(\rgb_data_out_reg[1]_i_7_n_0 ),
        .I3(\rgb_data_out_reg[5]_i_11_n_0 ),
        .I4(\rgb_data_out_reg[6]_i_6_n_0 ),
        .I5(rgb_data_in[8]),
        .O(\rgb_data_out_reg[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF15FF00001500)) 
    \rgb_data_out_reg[1]_i_5 
       (.I0(g1),
        .I1(g2[1]),
        .I2(\g2_inferred__0/i__carry__1_n_0 ),
        .I3(\^Q [2]),
        .I4(\^Q [1]),
        .I5(\rgb_data_out_reg[1]_i_8_n_0 ),
        .O(\rgb_data_out_reg[1]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'hFD)) 
    \rgb_data_out_reg[1]_i_6 
       (.I0(\^Q [1]),
        .I1(\^Q [0]),
        .I2(\rgb_data_out_reg[5]_i_7_n_0 ),
        .O(\rgb_data_out_reg[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h000000000EF4FE04)) 
    \rgb_data_out_reg[1]_i_7 
       (.I0(\rgb_data_out_reg[7]_i_10_n_0 ),
        .I1(\rgb_data_out_reg[7]_i_14_n_6 ),
        .I2(\rgb_data_out_reg[5]_i_15_n_0 ),
        .I3(rgb_data_in[9]),
        .I4(rgb_data_in[8]),
        .I5(\rgb_data_out_reg[5]_i_11_n_0 ),
        .O(\rgb_data_out_reg[1]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h150015FF)) 
    \rgb_data_out_reg[1]_i_8 
       (.I0(g1_carry_n_0),
        .I1(g2_carry_n_6),
        .I2(g2_carry__1_n_0),
        .I3(\rgb_data_out_reg[21]_i_15_n_0 ),
        .I4(rgb_data_in[1]),
        .O(\rgb_data_out_reg[1]_i_8_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[20] 
       (.CLR(\rgb_data_out_reg[23]_i_2_n_0 ),
        .D(\rgb_data_out_reg[20]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[20]));
  LUT6 #(
    .INIT(64'h0000FFEEFFFEFFFE)) 
    \rgb_data_out_reg[20]_i_1 
       (.I0(\rgb_data_out_reg[20]_i_2_n_0 ),
        .I1(\rgb_data_out_reg[20]_i_3_n_0 ),
        .I2(\rgb_data_out_reg[22]_i_4_n_0 ),
        .I3(\rgb_data_out_reg[20]_i_4_n_0 ),
        .I4(\^Q [2]),
        .I5(\rgb_data_out_reg[20]_i_5_n_0 ),
        .O(\rgb_data_out_reg[20]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rgb_data_out_reg[20]_i_10 
       (.I0(rgb_data_in[18]),
        .I1(rgb_data_in[19]),
        .O(\rgb_data_out_reg[20]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h00000000E2222EEE)) 
    \rgb_data_out_reg[20]_i_2 
       (.I0(\rgb_data_out_reg[20]_i_6_n_0 ),
        .I1(\rgb_data_out_reg[22]_i_7_n_0 ),
        .I2(rgb_data_in[17]),
        .I3(rgb_data_in[16]),
        .I4(rgb_data_in[18]),
        .I5(\rgb_data_out_reg[23]_i_6_n_0 ),
        .O(\rgb_data_out_reg[20]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFEAAAAAA)) 
    \rgb_data_out_reg[20]_i_3 
       (.I0(\^Q [2]),
        .I1(increase_brightness2_carry__1_n_7),
        .I2(increase_brightness2_carry__0_n_7),
        .I3(\^Q [1]),
        .I4(\^Q [0]),
        .O(\rgb_data_out_reg[20]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h2EEEE22200000000)) 
    \rgb_data_out_reg[20]_i_4 
       (.I0(\rgb_data_out_reg[20]_i_7_n_0 ),
        .I1(\rgb_data_out_reg[21]_i_12_n_0 ),
        .I2(rgb_data_in[17]),
        .I3(rgb_data_in[18]),
        .I4(rgb_data_in[19]),
        .I5(\rgb_data_out_reg[22]_i_15_n_0 ),
        .O(\rgb_data_out_reg[20]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF01FF00000100)) 
    \rgb_data_out_reg[20]_i_5 
       (.I0(r2[8]),
        .I1(r2[9]),
        .I2(r2[4]),
        .I3(\^Q [2]),
        .I4(\^Q [1]),
        .I5(\rgb_data_out_reg[20]_i_8_n_0 ),
        .O(\rgb_data_out_reg[20]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h6AAAFFFF6AAA0000)) 
    \rgb_data_out_reg[20]_i_6 
       (.I0(rgb_data_in[19]),
        .I1(rgb_data_in[18]),
        .I2(rgb_data_in[17]),
        .I3(rgb_data_in[16]),
        .I4(\rgb_data_out_reg[22]_i_11_n_0 ),
        .I5(\rgb_data_out_reg[20]_i_9_n_0 ),
        .O(\rgb_data_out_reg[20]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFF0000FFE44EE44E)) 
    \rgb_data_out_reg[20]_i_7 
       (.I0(\rgb_data_out_reg[23]_i_12_n_0 ),
        .I1(data4[4]),
        .I2(\rgb_data_out_reg[20]_i_10_n_0 ),
        .I3(rgb_data_in[20]),
        .I4(\rgb_data_out_reg[22]_i_8_n_0 ),
        .I5(\rgb_data_out_reg[19]_i_7_n_0 ),
        .O(\rgb_data_out_reg[20]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h010001FF)) 
    \rgb_data_out_reg[20]_i_8 
       (.I0(\rgb_data_out_reg[21]_i_14_n_7 ),
        .I1(\rgb_data_out_reg[21]_i_14_n_2 ),
        .I2(\rgb_data_out_reg[23]_i_14_n_7 ),
        .I3(\rgb_data_out_reg[21]_i_15_n_0 ),
        .I4(rgb_data_in[20]),
        .O(\rgb_data_out_reg[20]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h2E2E2EE2E2E1E1E1)) 
    \rgb_data_out_reg[20]_i_9 
       (.I0(rgb_data_in[21]),
        .I1(\rgb_data_out_reg[16]_i_6_n_0 ),
        .I2(rgb_data_in[20]),
        .I3(rgb_data_in[17]),
        .I4(rgb_data_in[18]),
        .I5(rgb_data_in[19]),
        .O(\rgb_data_out_reg[20]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[21] 
       (.CLR(\rgb_data_out_reg[23]_i_2_n_0 ),
        .D(\rgb_data_out_reg[21]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[21]));
  LUT6 #(
    .INIT(64'h0000FFEEFFFEFFFE)) 
    \rgb_data_out_reg[21]_i_1 
       (.I0(\rgb_data_out_reg[21]_i_2_n_0 ),
        .I1(\rgb_data_out_reg[21]_i_3_n_0 ),
        .I2(\rgb_data_out_reg[22]_i_4_n_0 ),
        .I3(\rgb_data_out_reg[21]_i_4_n_0 ),
        .I4(\^Q [2]),
        .I5(\rgb_data_out_reg[21]_i_5_n_0 ),
        .O(\rgb_data_out_reg[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000001E)) 
    \rgb_data_out_reg[21]_i_10 
       (.I0(rgb_data_in[18]),
        .I1(\rgb_data_out_reg[21]_i_9_n_0 ),
        .I2(rgb_data_in[19]),
        .I3(rgb_data_in[20]),
        .I4(\rgb_data_out_reg[23]_i_8_n_0 ),
        .I5(\rgb_data_out_reg[23]_i_6_n_0 ),
        .O(\rgb_data_out_reg[21]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hC0C5CACFCACFC0C5)) 
    \rgb_data_out_reg[21]_i_11 
       (.I0(\rgb_data_out_reg[23]_i_12_n_0 ),
        .I1(\rgb_data_out_reg[21]_i_17_n_0 ),
        .I2(\rgb_data_out_reg[19]_i_7_n_0 ),
        .I3(data4[5]),
        .I4(\rgb_data_out_reg[23]_i_7_n_0 ),
        .I5(rgb_data_in[21]),
        .O(\rgb_data_out_reg[21]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h0001010155555555)) 
    \rgb_data_out_reg[21]_i_12 
       (.I0(\rgb_data_out_reg[23]_i_8_n_0 ),
        .I1(rgb_data_in[19]),
        .I2(rgb_data_in[18]),
        .I3(rgb_data_in[16]),
        .I4(rgb_data_in[17]),
        .I5(rgb_data_in[20]),
        .O(\rgb_data_out_reg[21]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rgb_data_out_reg[21]_i_13 
       (.I0(rgb_data_in[17]),
        .I1(rgb_data_in[18]),
        .O(\rgb_data_out_reg[21]_i_13_n_0 ));
  CARRY4 \rgb_data_out_reg[21]_i_14 
       (.CI(\rgb_data_out_reg[23]_i_14_n_0 ),
        .CO({\NLW_rgb_data_out_reg[21]_i_14_CO_UNCONNECTED [3:2],\rgb_data_out_reg[21]_i_14_n_2 ,\NLW_rgb_data_out_reg[21]_i_14_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_rgb_data_out_reg[21]_i_14_O_UNCONNECTED [3:1],\rgb_data_out_reg[21]_i_14_n_7 }),
        .S({1'b0,1'b0,1'b1,\rgb_data_out_reg[22]_i_18_n_2 }));
  LUT3 #(
    .INIT(8'h08)) 
    \rgb_data_out_reg[21]_i_15 
       (.I0(\^Q [2]),
        .I1(\^Q [1]),
        .I2(\^Q [0]),
        .O(\rgb_data_out_reg[21]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hFE00FFFFFE00FE00)) 
    \rgb_data_out_reg[21]_i_16 
       (.I0(r2[8]),
        .I1(r2[9]),
        .I2(r2[5]),
        .I3(i__carry_i_6_n_0),
        .I4(\rgb_data_out_reg[17]_i_5_n_0 ),
        .I5(rgb_data_in[21]),
        .O(\rgb_data_out_reg[21]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'h0000000011111555)) 
    \rgb_data_out_reg[21]_i_17 
       (.I0(rgb_data_in[21]),
        .I1(rgb_data_in[19]),
        .I2(rgb_data_in[17]),
        .I3(rgb_data_in[16]),
        .I4(rgb_data_in[18]),
        .I5(rgb_data_in[20]),
        .O(\rgb_data_out_reg[21]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hA202020202A2A2A2)) 
    \rgb_data_out_reg[21]_i_2 
       (.I0(\rgb_data_out_reg[21]_i_6_n_0 ),
        .I1(\rgb_data_out_reg[21]_i_7_n_0 ),
        .I2(\rgb_data_out_reg[22]_i_11_n_0 ),
        .I3(\rgb_data_out_reg[21]_i_8_n_0 ),
        .I4(\rgb_data_out_reg[21]_i_9_n_0 ),
        .I5(rgb_data_in[20]),
        .O(\rgb_data_out_reg[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFEAEAEAAA)) 
    \rgb_data_out_reg[21]_i_3 
       (.I0(\rgb_data_out_reg[21]_i_10_n_0 ),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .I3(increase_brightness2_carry__0_n_6),
        .I4(increase_brightness2_carry__1_n_7),
        .I5(\^Q [2]),
        .O(\rgb_data_out_reg[21]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h02A2A2A2A2020202)) 
    \rgb_data_out_reg[21]_i_4 
       (.I0(\rgb_data_out_reg[22]_i_15_n_0 ),
        .I1(\rgb_data_out_reg[21]_i_11_n_0 ),
        .I2(\rgb_data_out_reg[21]_i_12_n_0 ),
        .I3(\rgb_data_out_reg[21]_i_13_n_0 ),
        .I4(rgb_data_in[19]),
        .I5(rgb_data_in[20]),
        .O(\rgb_data_out_reg[21]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h000001FF)) 
    \rgb_data_out_reg[21]_i_5 
       (.I0(\rgb_data_out_reg[21]_i_14_n_7 ),
        .I1(\rgb_data_out_reg[21]_i_14_n_2 ),
        .I2(\rgb_data_out_reg[23]_i_14_n_6 ),
        .I3(\rgb_data_out_reg[21]_i_15_n_0 ),
        .I4(\rgb_data_out_reg[21]_i_16_n_0 ),
        .O(\rgb_data_out_reg[21]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \rgb_data_out_reg[21]_i_6 
       (.I0(\^Q [1]),
        .I1(\^Q [0]),
        .I2(\rgb_data_out_reg[22]_i_7_n_0 ),
        .O(\rgb_data_out_reg[21]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h47478BB8)) 
    \rgb_data_out_reg[21]_i_7 
       (.I0(\rgb_data_out_reg[23]_i_20_n_0 ),
        .I1(\rgb_data_out_reg[16]_i_6_n_0 ),
        .I2(rgb_data_in[22]),
        .I3(\rgb_data_out_reg[22]_i_16_n_0 ),
        .I4(rgb_data_in[21]),
        .O(\rgb_data_out_reg[21]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rgb_data_out_reg[21]_i_8 
       (.I0(rgb_data_in[18]),
        .I1(rgb_data_in[19]),
        .O(\rgb_data_out_reg[21]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rgb_data_out_reg[21]_i_9 
       (.I0(rgb_data_in[17]),
        .I1(rgb_data_in[16]),
        .O(\rgb_data_out_reg[21]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[22] 
       (.CLR(\rgb_data_out_reg[23]_i_2_n_0 ),
        .D(\rgb_data_out_reg[22]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[22]));
  LUT6 #(
    .INIT(64'h5454FFFC5555FFFF)) 
    \rgb_data_out_reg[22]_i_1 
       (.I0(\^Q [2]),
        .I1(\rgb_data_out_reg[22]_i_2_n_0 ),
        .I2(\rgb_data_out_reg[22]_i_3_n_0 ),
        .I3(\rgb_data_out_reg[22]_i_4_n_0 ),
        .I4(\rgb_data_out_reg[22]_i_5_n_0 ),
        .I5(\rgb_data_out_reg[22]_i_6_n_0 ),
        .O(\rgb_data_out_reg[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h555555556AAAAAAA)) 
    \rgb_data_out_reg[22]_i_10 
       (.I0(rgb_data_in[21]),
        .I1(rgb_data_in[19]),
        .I2(rgb_data_in[18]),
        .I3(rgb_data_in[16]),
        .I4(rgb_data_in[17]),
        .I5(rgb_data_in[20]),
        .O(\rgb_data_out_reg[22]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h000007050000FFFF)) 
    \rgb_data_out_reg[22]_i_11 
       (.I0(rgb_data_in[19]),
        .I1(rgb_data_in[18]),
        .I2(rgb_data_in[20]),
        .I3(\rgb_data_out_reg[22]_i_17_n_0 ),
        .I4(\rgb_data_out_reg[23]_i_16_n_0 ),
        .I5(rgb_data_in[21]),
        .O(\rgb_data_out_reg[22]_i_11_n_0 ));
  CARRY4 \rgb_data_out_reg[22]_i_12 
       (.CI(\rgb_data_out_reg[22]_i_13_n_0 ),
        .CO({\NLW_rgb_data_out_reg[22]_i_12_CO_UNCONNECTED [3:2],r2[9],\NLW_rgb_data_out_reg[22]_i_12_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_rgb_data_out_reg[22]_i_12_O_UNCONNECTED [3:1],r2[8]}),
        .S({1'b0,1'b0,1'b1,\rgb_data_out_reg[22]_i_18_n_2 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \rgb_data_out_reg[22]_i_13 
       (.CI(\rgb_data_out_reg[19]_i_13_n_0 ),
        .CO({\rgb_data_out_reg[22]_i_13_n_0 ,\NLW_rgb_data_out_reg[22]_i_13_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\rgb_data_out_reg[22]_i_18_n_7 ,\rgb_data_out_reg[22]_i_19_n_4 ,\rgb_data_out_reg[22]_i_19_n_5 ,\rgb_data_out_reg[22]_i_19_n_6 }),
        .O(r2[7:4]),
        .S({\rgb_data_out_reg[22]_i_20_n_0 ,\rgb_data_out_reg[22]_i_21_n_0 ,\rgb_data_out_reg[22]_i_22_n_0 ,\rgb_data_out_reg[22]_i_23_n_0 }));
  LUT5 #(
    .INIT(32'h010001FF)) 
    \rgb_data_out_reg[22]_i_14 
       (.I0(\rgb_data_out_reg[21]_i_14_n_7 ),
        .I1(\rgb_data_out_reg[21]_i_14_n_2 ),
        .I2(\rgb_data_out_reg[23]_i_14_n_5 ),
        .I3(\rgb_data_out_reg[21]_i_15_n_0 ),
        .I4(rgb_data_in[22]),
        .O(\rgb_data_out_reg[22]_i_14_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \rgb_data_out_reg[22]_i_15 
       (.I0(\^Q [0]),
        .I1(\^Q [1]),
        .O(\rgb_data_out_reg[22]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'hFFEA)) 
    \rgb_data_out_reg[22]_i_16 
       (.I0(rgb_data_in[20]),
        .I1(rgb_data_in[17]),
        .I2(rgb_data_in[18]),
        .I3(rgb_data_in[19]),
        .O(\rgb_data_out_reg[22]_i_16_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \rgb_data_out_reg[22]_i_17 
       (.I0(rgb_data_in[17]),
        .I1(rgb_data_in[16]),
        .O(\rgb_data_out_reg[22]_i_17_n_0 ));
  CARRY4 \rgb_data_out_reg[22]_i_18 
       (.CI(\rgb_data_out_reg[22]_i_19_n_0 ),
        .CO({\NLW_rgb_data_out_reg[22]_i_18_CO_UNCONNECTED [3:2],\rgb_data_out_reg[22]_i_18_n_2 ,\NLW_rgb_data_out_reg[22]_i_18_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_rgb_data_out_reg[22]_i_18_O_UNCONNECTED [3:1],\rgb_data_out_reg[22]_i_18_n_7 }),
        .S({1'b0,1'b0,1'b1,\rgb_data_out_reg[22]_i_24_n_0 }));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \rgb_data_out_reg[22]_i_19 
       (.CI(\rgb_data_out_reg[19]_i_15_n_0 ),
        .CO({\rgb_data_out_reg[22]_i_19_n_0 ,\NLW_rgb_data_out_reg[22]_i_19_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\rgb_data_out_reg[22]_i_25_n_0 ,\rgb_data_out_reg[22]_i_26_n_0 }),
        .O({\rgb_data_out_reg[22]_i_19_n_4 ,\rgb_data_out_reg[22]_i_19_n_5 ,\rgb_data_out_reg[22]_i_19_n_6 ,\rgb_data_out_reg[22]_i_19_n_7 }),
        .S({\rgb_data_out_reg[22]_i_27_n_0 ,\rgb_data_out_reg[22]_i_28_n_0 ,\rgb_data_out_reg[22]_i_29_n_0 ,\rgb_data_out_reg[22]_i_30_n_0 }));
  LUT6 #(
    .INIT(64'h4055404040554055)) 
    \rgb_data_out_reg[22]_i_2 
       (.I0(\rgb_data_out_reg[23]_i_6_n_0 ),
        .I1(\rgb_data_out_reg[22]_i_7_n_0 ),
        .I2(\rgb_data_out_reg[22]_i_8_n_0 ),
        .I3(\rgb_data_out_reg[22]_i_9_n_0 ),
        .I4(\rgb_data_out_reg[22]_i_10_n_0 ),
        .I5(\rgb_data_out_reg[22]_i_11_n_0 ),
        .O(\rgb_data_out_reg[22]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \rgb_data_out_reg[22]_i_20 
       (.I0(p_0_in),
        .I1(\rgb_data_out_reg[22]_i_18_n_7 ),
        .O(\rgb_data_out_reg[22]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hA808FD5D57F702A2)) 
    \rgb_data_out_reg[22]_i_21 
       (.I0(i__carry_i_6_n_0),
        .I1(i__carry__0_i_6_n_0),
        .I2(\^Q [0]),
        .I3(i__carry__0_i_7_n_0),
        .I4(i__carry__0_i_8_n_0),
        .I5(\rgb_data_out_reg[22]_i_19_n_4 ),
        .O(\rgb_data_out_reg[22]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h222EEE2EDDD111D1)) 
    \rgb_data_out_reg[22]_i_22 
       (.I0(i__carry__0_i_9_n_0),
        .I1(i__carry_i_6_n_0),
        .I2(i__carry__0_i_10_n_0),
        .I3(\^Q [0]),
        .I4(i__carry__0_i_11_n_0),
        .I5(\rgb_data_out_reg[22]_i_19_n_5 ),
        .O(\rgb_data_out_reg[22]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h55555501AAAAAAFE)) 
    \rgb_data_out_reg[22]_i_23 
       (.I0(i__carry__0_i_12_n_0),
        .I1(i__carry__0_i_13_n_0),
        .I2(i__carry_i_18_n_0),
        .I3(i__carry__0_i_14_n_0),
        .I4(i__carry__0_i_15_n_0),
        .I5(\rgb_data_out_reg[22]_i_19_n_6 ),
        .O(\rgb_data_out_reg[22]_i_23_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rgb_data_out_reg[22]_i_24 
       (.I0(v3__29_carry__2_n_2),
        .I1(v3__29_carry__2_n_7),
        .O(\rgb_data_out_reg[22]_i_24_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rgb_data_out_reg[22]_i_25 
       (.I0(v3__29_carry__2_n_2),
        .I1(v3__29_carry__1_n_6),
        .O(\rgb_data_out_reg[22]_i_25_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rgb_data_out_reg[22]_i_26 
       (.I0(v3__29_carry__2_n_2),
        .I1(v3__29_carry__1_n_7),
        .O(\rgb_data_out_reg[22]_i_26_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rgb_data_out_reg[22]_i_27 
       (.I0(v3__29_carry__2_n_2),
        .I1(v3__29_carry__1_n_4),
        .O(\rgb_data_out_reg[22]_i_27_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rgb_data_out_reg[22]_i_28 
       (.I0(v3__29_carry__2_n_2),
        .I1(v3__29_carry__1_n_5),
        .O(\rgb_data_out_reg[22]_i_28_n_0 ));
  LUT3 #(
    .INIT(8'h60)) 
    \rgb_data_out_reg[22]_i_29 
       (.I0(v3__29_carry__1_n_6),
        .I1(v3__29_carry__2_n_7),
        .I2(v3__29_carry__2_n_2),
        .O(\rgb_data_out_reg[22]_i_29_n_0 ));
  LUT5 #(
    .INIT(32'hFEAAAAAA)) 
    \rgb_data_out_reg[22]_i_3 
       (.I0(\^Q [2]),
        .I1(increase_brightness2_carry__1_n_7),
        .I2(increase_brightness2_carry__0_n_5),
        .I3(\^Q [1]),
        .I4(\^Q [0]),
        .O(\rgb_data_out_reg[22]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h60)) 
    \rgb_data_out_reg[22]_i_30 
       (.I0(v3__29_carry__1_n_7),
        .I1(v3__29_carry__1_n_4),
        .I2(v3__29_carry__2_n_2),
        .O(\rgb_data_out_reg[22]_i_30_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \rgb_data_out_reg[22]_i_4 
       (.I0(\^Q [1]),
        .I1(\^Q [0]),
        .O(\rgb_data_out_reg[22]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF01FF00000100)) 
    \rgb_data_out_reg[22]_i_5 
       (.I0(r2[8]),
        .I1(r2[9]),
        .I2(r2[6]),
        .I3(\^Q [2]),
        .I4(\^Q [1]),
        .I5(\rgb_data_out_reg[22]_i_14_n_0 ),
        .O(\rgb_data_out_reg[22]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h1D11D1DDFFFFFFFF)) 
    \rgb_data_out_reg[22]_i_6 
       (.I0(data4[6]),
        .I1(\rgb_data_out_reg[23]_i_12_n_0 ),
        .I2(\rgb_data_out_reg[23]_i_7_n_0 ),
        .I3(rgb_data_in[21]),
        .I4(rgb_data_in[22]),
        .I5(\rgb_data_out_reg[22]_i_15_n_0 ),
        .O(\rgb_data_out_reg[22]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000007)) 
    \rgb_data_out_reg[22]_i_7 
       (.I0(rgb_data_in[19]),
        .I1(rgb_data_in[18]),
        .I2(rgb_data_in[21]),
        .I3(rgb_data_in[23]),
        .I4(rgb_data_in[22]),
        .I5(rgb_data_in[20]),
        .O(\rgb_data_out_reg[22]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hAA80)) 
    \rgb_data_out_reg[22]_i_8 
       (.I0(rgb_data_in[19]),
        .I1(rgb_data_in[17]),
        .I2(rgb_data_in[16]),
        .I3(rgb_data_in[18]),
        .O(\rgb_data_out_reg[22]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h0003DCDC)) 
    \rgb_data_out_reg[22]_i_9 
       (.I0(\rgb_data_out_reg[23]_i_20_n_0 ),
        .I1(rgb_data_in[22]),
        .I2(rgb_data_in[21]),
        .I3(\rgb_data_out_reg[22]_i_16_n_0 ),
        .I4(rgb_data_in[23]),
        .O(\rgb_data_out_reg[22]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[23] 
       (.CLR(\rgb_data_out_reg[23]_i_2_n_0 ),
        .D(\rgb_data_out_reg[23]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[23]));
  LUT6 #(
    .INIT(64'hFFFFFFFF31313111)) 
    \rgb_data_out_reg[23]_i_1 
       (.I0(\rgb_data_out_reg[23]_i_3_n_0 ),
        .I1(\^Q [2]),
        .I2(\rgb_data_out_reg[23]_i_4_n_0 ),
        .I3(increase_brightness2_carry__0_n_4),
        .I4(increase_brightness2_carry__1_n_7),
        .I5(\rgb_data_out_reg[23]_i_5_n_0 ),
        .O(\rgb_data_out_reg[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0001555555555555)) 
    \rgb_data_out_reg[23]_i_10 
       (.I0(rgb_data_in[23]),
        .I1(rgb_data_in[18]),
        .I2(rgb_data_in[19]),
        .I3(rgb_data_in[20]),
        .I4(rgb_data_in[21]),
        .I5(rgb_data_in[22]),
        .O(\rgb_data_out_reg[23]_i_10_n_0 ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \rgb_data_out_reg[23]_i_11 
       (.CI(\rgb_data_out_reg[16]_i_10_n_0 ),
        .CO({data4[7],\NLW_rgb_data_out_reg[23]_i_11_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,rgb_data_in[23:21]}),
        .O({\NLW_rgb_data_out_reg[23]_i_11_O_UNCONNECTED [3],data4[6:4]}),
        .S({1'b1,\rgb_data_out_reg[23]_i_17_n_0 ,\rgb_data_out_reg[23]_i_18_n_0 ,\rgb_data_out_reg[23]_i_19_n_0 }));
  LUT4 #(
    .INIT(16'h02FF)) 
    \rgb_data_out_reg[23]_i_12 
       (.I0(\rgb_data_out_reg[23]_i_20_n_0 ),
        .I1(rgb_data_in[21]),
        .I2(rgb_data_in[22]),
        .I3(rgb_data_in[23]),
        .O(\rgb_data_out_reg[23]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hFE00FFFFFE00FE00)) 
    \rgb_data_out_reg[23]_i_13 
       (.I0(r2[8]),
        .I1(r2[9]),
        .I2(r2[7]),
        .I3(i__carry_i_6_n_0),
        .I4(\rgb_data_out_reg[17]_i_5_n_0 ),
        .I5(rgb_data_in[23]),
        .O(\rgb_data_out_reg[23]_i_13_n_0 ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \rgb_data_out_reg[23]_i_14 
       (.CI(\rgb_data_out_reg[16]_i_7_n_0 ),
        .CO({\rgb_data_out_reg[23]_i_14_n_0 ,\NLW_rgb_data_out_reg[23]_i_14_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\rgb_data_out_reg[23]_i_21_n_0 ,\rgb_data_out_reg[23]_i_22_n_0 ,\rgb_data_out_reg[23]_i_23_n_0 ,\rgb_data_out_reg[23]_i_24_n_0 }),
        .O({\rgb_data_out_reg[23]_i_14_n_4 ,\rgb_data_out_reg[23]_i_14_n_5 ,\rgb_data_out_reg[23]_i_14_n_6 ,\rgb_data_out_reg[23]_i_14_n_7 }),
        .S({\rgb_data_out_reg[23]_i_25_n_0 ,\rgb_data_out_reg[23]_i_26_n_0 ,\rgb_data_out_reg[23]_i_27_n_0 ,\rgb_data_out_reg[23]_i_28_n_0 }));
  LUT2 #(
    .INIT(4'hE)) 
    \rgb_data_out_reg[23]_i_15 
       (.I0(\rgb_data_out_reg[21]_i_14_n_2 ),
        .I1(\rgb_data_out_reg[21]_i_14_n_7 ),
        .O(\rgb_data_out_reg[23]_i_15_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rgb_data_out_reg[23]_i_16 
       (.I0(rgb_data_in[22]),
        .I1(rgb_data_in[23]),
        .O(\rgb_data_out_reg[23]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \rgb_data_out_reg[23]_i_17 
       (.I0(rgb_data_in[23]),
        .O(\rgb_data_out_reg[23]_i_17_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \rgb_data_out_reg[23]_i_18 
       (.I0(rgb_data_in[22]),
        .O(\rgb_data_out_reg[23]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h1A5A5A5AF0F0F0F0)) 
    \rgb_data_out_reg[23]_i_19 
       (.I0(rgb_data_in[22]),
        .I1(rgb_data_in[20]),
        .I2(rgb_data_in[21]),
        .I3(rgb_data_in[18]),
        .I4(rgb_data_in[19]),
        .I5(rgb_data_in[23]),
        .O(\rgb_data_out_reg[23]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \rgb_data_out_reg[23]_i_2 
       (.I0(\^Q [2]),
        .I1(\rgb_data_out_reg[23]_i_6_n_0 ),
        .I2(rgb_data_in[17]),
        .I3(rgb_data_in[16]),
        .I4(\rgb_data_out_reg[23]_i_7_n_0 ),
        .I5(\rgb_data_out_reg[23]_i_8_n_0 ),
        .O(\rgb_data_out_reg[23]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h1FFF)) 
    \rgb_data_out_reg[23]_i_20 
       (.I0(rgb_data_in[18]),
        .I1(rgb_data_in[17]),
        .I2(rgb_data_in[20]),
        .I3(rgb_data_in[19]),
        .O(\rgb_data_out_reg[23]_i_20_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rgb_data_out_reg[23]_i_21 
       (.I0(y3__33_carry__1_n_4),
        .I1(g2_carry_i_9_n_3),
        .O(\rgb_data_out_reg[23]_i_21_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rgb_data_out_reg[23]_i_22 
       (.I0(g2_carry_i_9_n_3),
        .I1(y3__33_carry__1_n_5),
        .O(\rgb_data_out_reg[23]_i_22_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rgb_data_out_reg[23]_i_23 
       (.I0(y3__33_carry__1_n_6),
        .I1(g2_carry_i_9_n_3),
        .O(\rgb_data_out_reg[23]_i_23_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rgb_data_out_reg[23]_i_24 
       (.I0(y3__33_carry__1_n_7),
        .I1(g2_carry_i_9_n_3),
        .O(\rgb_data_out_reg[23]_i_24_n_0 ));
  LUT3 #(
    .INIT(8'h1E)) 
    \rgb_data_out_reg[23]_i_25 
       (.I0(y3__33_carry__1_n_4),
        .I1(g2_carry_i_9_n_3),
        .I2(\rgb_data_out_reg[22]_i_18_n_7 ),
        .O(\rgb_data_out_reg[23]_i_25_n_0 ));
  LUT3 #(
    .INIT(8'h1E)) 
    \rgb_data_out_reg[23]_i_26 
       (.I0(y3__33_carry__1_n_5),
        .I1(g2_carry_i_9_n_3),
        .I2(\rgb_data_out_reg[22]_i_19_n_4 ),
        .O(\rgb_data_out_reg[23]_i_26_n_0 ));
  LUT3 #(
    .INIT(8'h1E)) 
    \rgb_data_out_reg[23]_i_27 
       (.I0(y3__33_carry__1_n_6),
        .I1(g2_carry_i_9_n_3),
        .I2(\rgb_data_out_reg[22]_i_19_n_5 ),
        .O(\rgb_data_out_reg[23]_i_27_n_0 ));
  LUT3 #(
    .INIT(8'h1E)) 
    \rgb_data_out_reg[23]_i_28 
       (.I0(y3__33_carry__1_n_7),
        .I1(g2_carry_i_9_n_3),
        .I2(\rgb_data_out_reg[22]_i_19_n_6 ),
        .O(\rgb_data_out_reg[23]_i_28_n_0 ));
  LUT6 #(
    .INIT(64'hFC5FFC5FFC5FFF5F)) 
    \rgb_data_out_reg[23]_i_3 
       (.I0(\rgb_data_out_reg[23]_i_9_n_0 ),
        .I1(\rgb_data_out_reg[23]_i_10_n_0 ),
        .I2(\^Q [1]),
        .I3(\^Q [0]),
        .I4(data4[7]),
        .I5(\rgb_data_out_reg[23]_i_12_n_0 ),
        .O(\rgb_data_out_reg[23]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rgb_data_out_reg[23]_i_4 
       (.I0(\^Q [1]),
        .I1(\^Q [0]),
        .O(\rgb_data_out_reg[23]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAFEAA000000AA)) 
    \rgb_data_out_reg[23]_i_5 
       (.I0(\rgb_data_out_reg[23]_i_13_n_0 ),
        .I1(\rgb_data_out_reg[23]_i_14_n_4 ),
        .I2(\rgb_data_out_reg[23]_i_15_n_0 ),
        .I3(\^Q [1]),
        .I4(\^Q [0]),
        .I5(\^Q [2]),
        .O(\rgb_data_out_reg[23]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \rgb_data_out_reg[23]_i_6 
       (.I0(\^Q [0]),
        .I1(\^Q [1]),
        .O(\rgb_data_out_reg[23]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \rgb_data_out_reg[23]_i_7 
       (.I0(rgb_data_in[20]),
        .I1(rgb_data_in[19]),
        .I2(rgb_data_in[18]),
        .O(\rgb_data_out_reg[23]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \rgb_data_out_reg[23]_i_8 
       (.I0(rgb_data_in[21]),
        .I1(rgb_data_in[23]),
        .I2(rgb_data_in[22]),
        .O(\rgb_data_out_reg[23]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFEAAAAAAAAAAAAAA)) 
    \rgb_data_out_reg[23]_i_9 
       (.I0(\rgb_data_out_reg[23]_i_16_n_0 ),
        .I1(rgb_data_in[18]),
        .I2(rgb_data_in[17]),
        .I3(rgb_data_in[20]),
        .I4(rgb_data_in[19]),
        .I5(rgb_data_in[21]),
        .O(\rgb_data_out_reg[23]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[2] 
       (.CLR(\rgb_data_out_reg[7]_i_2_n_0 ),
        .D(\rgb_data_out_reg[2]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[2]));
  LUT6 #(
    .INIT(64'h0000FFEEFFFEFFFE)) 
    \rgb_data_out_reg[2]_i_1 
       (.I0(\rgb_data_out_reg[2]_i_2_n_0 ),
        .I1(\rgb_data_out_reg[2]_i_3_n_0 ),
        .I2(\rgb_data_out_reg[22]_i_4_n_0 ),
        .I3(\rgb_data_out_reg[2]_i_4_n_0 ),
        .I4(\^Q [2]),
        .I5(\rgb_data_out_reg[2]_i_5_n_0 ),
        .O(\rgb_data_out_reg[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000C2FF97FF)) 
    \rgb_data_out_reg[2]_i_2 
       (.I0(\rgb_data_out_reg[7]_i_13_n_0 ),
        .I1(rgb_data_in[9]),
        .I2(rgb_data_in[10]),
        .I3(\rgb_data_out_reg[3]_i_7_n_0 ),
        .I4(rgb_data_in[11]),
        .I5(\rgb_data_out_reg[2]_i_6_n_0 ),
        .O(\rgb_data_out_reg[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFEAEAEAAA)) 
    \rgb_data_out_reg[2]_i_3 
       (.I0(\rgb_data_out_reg[2]_i_7_n_0 ),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .I3(increase_brightness12_carry_n_5),
        .I4(increase_brightness12_carry__1_n_7),
        .I5(\^Q [2]),
        .O(\rgb_data_out_reg[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h80808A8080AA8AAA)) 
    \rgb_data_out_reg[2]_i_4 
       (.I0(\rgb_data_out_reg[22]_i_15_n_0 ),
        .I1(rgb_data_in[8]),
        .I2(\rgb_data_out_reg[7]_i_7_n_0 ),
        .I3(\rgb_data_out_reg[5]_i_11_n_0 ),
        .I4(rgb_data_in[9]),
        .I5(\rgb_data_out_reg[2]_i_8_n_0 ),
        .O(\rgb_data_out_reg[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF15FF00001500)) 
    \rgb_data_out_reg[2]_i_5 
       (.I0(g1),
        .I1(g2[2]),
        .I2(\g2_inferred__0/i__carry__1_n_0 ),
        .I3(\^Q [2]),
        .I4(\^Q [1]),
        .I5(\rgb_data_out_reg[2]_i_9_n_0 ),
        .O(\rgb_data_out_reg[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hEFEFEFEFFFEFEFFF)) 
    \rgb_data_out_reg[2]_i_6 
       (.I0(\rgb_data_out_reg[5]_i_7_n_0 ),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .I3(rgb_data_in[8]),
        .I4(rgb_data_in[9]),
        .I5(\rgb_data_out_reg[3]_i_7_n_0 ),
        .O(\rgb_data_out_reg[2]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h0400)) 
    \rgb_data_out_reg[2]_i_7 
       (.I0(rgb_data_in[8]),
        .I1(\rgb_data_out_reg[5]_i_7_n_0 ),
        .I2(\^Q [0]),
        .I3(\^Q [1]),
        .O(\rgb_data_out_reg[2]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0FF0F0F0D1D1D1D1)) 
    \rgb_data_out_reg[2]_i_8 
       (.I0(\rgb_data_out_reg[7]_i_14_n_5 ),
        .I1(\rgb_data_out_reg[7]_i_10_n_0 ),
        .I2(rgb_data_in[10]),
        .I3(rgb_data_in[9]),
        .I4(rgb_data_in[8]),
        .I5(\rgb_data_out_reg[5]_i_15_n_0 ),
        .O(\rgb_data_out_reg[2]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h150015FF)) 
    \rgb_data_out_reg[2]_i_9 
       (.I0(g1_carry_n_0),
        .I1(g2_carry_n_5),
        .I2(g2_carry__1_n_0),
        .I3(\rgb_data_out_reg[21]_i_15_n_0 ),
        .I4(rgb_data_in[2]),
        .O(\rgb_data_out_reg[2]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[3] 
       (.CLR(\rgb_data_out_reg[7]_i_2_n_0 ),
        .D(\rgb_data_out_reg[3]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[3]));
  LUT6 #(
    .INIT(64'h0000FFEEFFFEFFFE)) 
    \rgb_data_out_reg[3]_i_1 
       (.I0(\rgb_data_out_reg[3]_i_2_n_0 ),
        .I1(\rgb_data_out_reg[3]_i_3_n_0 ),
        .I2(\rgb_data_out_reg[22]_i_4_n_0 ),
        .I3(\rgb_data_out_reg[3]_i_4_n_0 ),
        .I4(\^Q [2]),
        .I5(\rgb_data_out_reg[3]_i_5_n_0 ),
        .O(\rgb_data_out_reg[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0F00F1B1BB1B1)) 
    \rgb_data_out_reg[3]_i_10 
       (.I0(\rgb_data_out_reg[7]_i_10_n_0 ),
        .I1(\rgb_data_out_reg[7]_i_14_n_4 ),
        .I2(rgb_data_in[11]),
        .I3(\rgb_data_out_reg[5]_i_8_n_0 ),
        .I4(rgb_data_in[10]),
        .I5(\rgb_data_out_reg[5]_i_15_n_0 ),
        .O(\rgb_data_out_reg[3]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h150015FF)) 
    \rgb_data_out_reg[3]_i_11 
       (.I0(g1_carry_n_0),
        .I1(g2_carry_n_4),
        .I2(g2_carry__1_n_0),
        .I3(\rgb_data_out_reg[21]_i_15_n_0 ),
        .I4(rgb_data_in[3]),
        .O(\rgb_data_out_reg[3]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rgb_data_out_reg[3]_i_12 
       (.I0(rgb_data_in[14]),
        .I1(rgb_data_in[15]),
        .O(\rgb_data_out_reg[3]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FF2E002E)) 
    \rgb_data_out_reg[3]_i_2 
       (.I0(\rgb_data_out_reg[3]_i_6_n_0 ),
        .I1(\rgb_data_out_reg[3]_i_7_n_0 ),
        .I2(\rgb_data_out_reg[3]_i_8_n_0 ),
        .I3(\rgb_data_out_reg[5]_i_7_n_0 ),
        .I4(\rgb_data_out_reg[3]_i_9_n_0 ),
        .I5(\rgb_data_out_reg[23]_i_6_n_0 ),
        .O(\rgb_data_out_reg[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFEAAAAAA)) 
    \rgb_data_out_reg[3]_i_3 
       (.I0(\^Q [2]),
        .I1(increase_brightness12_carry__1_n_7),
        .I2(increase_brightness12_carry_n_4),
        .I3(\^Q [1]),
        .I4(\^Q [0]),
        .O(\rgb_data_out_reg[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0004440444040004)) 
    \rgb_data_out_reg[3]_i_4 
       (.I0(\^Q [1]),
        .I1(\^Q [0]),
        .I2(\rgb_data_out_reg[3]_i_10_n_0 ),
        .I3(\rgb_data_out_reg[5]_i_11_n_0 ),
        .I4(rgb_data_in[10]),
        .I5(rgb_data_in[9]),
        .O(\rgb_data_out_reg[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF15FF00001500)) 
    \rgb_data_out_reg[3]_i_5 
       (.I0(g1),
        .I1(g2[3]),
        .I2(\g2_inferred__0/i__carry__1_n_0 ),
        .I3(\^Q [2]),
        .I4(\^Q [1]),
        .I5(\rgb_data_out_reg[3]_i_11_n_0 ),
        .O(\rgb_data_out_reg[3]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h6A)) 
    \rgb_data_out_reg[3]_i_6 
       (.I0(rgb_data_in[10]),
        .I1(rgb_data_in[9]),
        .I2(rgb_data_in[8]),
        .O(\rgb_data_out_reg[3]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFAAFF80FFAAFF88)) 
    \rgb_data_out_reg[3]_i_7 
       (.I0(rgb_data_in[13]),
        .I1(rgb_data_in[11]),
        .I2(rgb_data_in[8]),
        .I3(\rgb_data_out_reg[3]_i_12_n_0 ),
        .I4(rgb_data_in[12]),
        .I5(\rgb_data_out_reg[7]_i_18_n_0 ),
        .O(\rgb_data_out_reg[3]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hBBB1144E)) 
    \rgb_data_out_reg[3]_i_8 
       (.I0(\rgb_data_out_reg[7]_i_13_n_0 ),
        .I1(rgb_data_in[12]),
        .I2(rgb_data_in[9]),
        .I3(rgb_data_in[10]),
        .I4(rgb_data_in[11]),
        .O(\rgb_data_out_reg[3]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \rgb_data_out_reg[3]_i_9 
       (.I0(rgb_data_in[8]),
        .I1(rgb_data_in[9]),
        .O(\rgb_data_out_reg[3]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[4] 
       (.CLR(\rgb_data_out_reg[7]_i_2_n_0 ),
        .D(\rgb_data_out_reg[4]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[4]));
  LUT6 #(
    .INIT(64'h5454FFFC5555FFFF)) 
    \rgb_data_out_reg[4]_i_1 
       (.I0(\^Q [2]),
        .I1(\rgb_data_out_reg[4]_i_2_n_0 ),
        .I2(\rgb_data_out_reg[4]_i_3_n_0 ),
        .I3(\rgb_data_out_reg[22]_i_4_n_0 ),
        .I4(\rgb_data_out_reg[4]_i_4_n_0 ),
        .I5(\rgb_data_out_reg[4]_i_5_n_0 ),
        .O(\rgb_data_out_reg[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rgb_data_out_reg[4]_i_10 
       (.I0(rgb_data_in[10]),
        .I1(rgb_data_in[11]),
        .O(\rgb_data_out_reg[4]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h666A6A6A)) 
    \rgb_data_out_reg[4]_i_11 
       (.I0(rgb_data_in[12]),
        .I1(rgb_data_in[11]),
        .I2(rgb_data_in[10]),
        .I3(rgb_data_in[9]),
        .I4(rgb_data_in[8]),
        .O(\rgb_data_out_reg[4]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h5101010101515151)) 
    \rgb_data_out_reg[4]_i_2 
       (.I0(\rgb_data_out_reg[23]_i_6_n_0 ),
        .I1(\rgb_data_out_reg[4]_i_6_n_0 ),
        .I2(\rgb_data_out_reg[5]_i_7_n_0 ),
        .I3(rgb_data_in[8]),
        .I4(rgb_data_in[9]),
        .I5(rgb_data_in[10]),
        .O(\rgb_data_out_reg[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFEAAAAAA)) 
    \rgb_data_out_reg[4]_i_3 
       (.I0(\^Q [2]),
        .I1(increase_brightness12_carry__1_n_7),
        .I2(increase_brightness12_carry__0_n_7),
        .I3(\^Q [1]),
        .I4(\^Q [0]),
        .O(\rgb_data_out_reg[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF15FF00001500)) 
    \rgb_data_out_reg[4]_i_4 
       (.I0(g1),
        .I1(g2[4]),
        .I2(\g2_inferred__0/i__carry__1_n_0 ),
        .I3(\^Q [2]),
        .I4(\^Q [1]),
        .I5(\rgb_data_out_reg[4]_i_7_n_0 ),
        .O(\rgb_data_out_reg[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hF757575757F7F7F7)) 
    \rgb_data_out_reg[4]_i_5 
       (.I0(\rgb_data_out_reg[22]_i_15_n_0 ),
        .I1(\rgb_data_out_reg[4]_i_8_n_0 ),
        .I2(\rgb_data_out_reg[5]_i_11_n_0 ),
        .I3(rgb_data_in[9]),
        .I4(rgb_data_in[10]),
        .I5(rgb_data_in[11]),
        .O(\rgb_data_out_reg[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hB88B8B8B8B8B8B8B)) 
    \rgb_data_out_reg[4]_i_6 
       (.I0(\rgb_data_out_reg[4]_i_9_n_0 ),
        .I1(\rgb_data_out_reg[3]_i_7_n_0 ),
        .I2(rgb_data_in[11]),
        .I3(rgb_data_in[10]),
        .I4(rgb_data_in[8]),
        .I5(rgb_data_in[9]),
        .O(\rgb_data_out_reg[4]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h150015FF)) 
    \rgb_data_out_reg[4]_i_7 
       (.I0(g1_carry_n_0),
        .I1(g2_carry__0_n_7),
        .I2(g2_carry__1_n_0),
        .I3(\rgb_data_out_reg[21]_i_15_n_0 ),
        .I4(rgb_data_in[4]),
        .O(\rgb_data_out_reg[4]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00009F90FFFF9F90)) 
    \rgb_data_out_reg[4]_i_8 
       (.I0(rgb_data_in[12]),
        .I1(\rgb_data_out_reg[4]_i_10_n_0 ),
        .I2(\rgb_data_out_reg[7]_i_10_n_0 ),
        .I3(\rgb_data_out_reg[7]_i_9_n_7 ),
        .I4(\rgb_data_out_reg[5]_i_15_n_0 ),
        .I5(\rgb_data_out_reg[4]_i_11_n_0 ),
        .O(\rgb_data_out_reg[4]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hBBB11111111BBEEE)) 
    \rgb_data_out_reg[4]_i_9 
       (.I0(\rgb_data_out_reg[7]_i_13_n_0 ),
        .I1(rgb_data_in[13]),
        .I2(rgb_data_in[9]),
        .I3(rgb_data_in[10]),
        .I4(rgb_data_in[11]),
        .I5(rgb_data_in[12]),
        .O(\rgb_data_out_reg[4]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[5] 
       (.CLR(\rgb_data_out_reg[7]_i_2_n_0 ),
        .D(\rgb_data_out_reg[5]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[5]));
  LUT6 #(
    .INIT(64'h5454FFFC5555FFFF)) 
    \rgb_data_out_reg[5]_i_1 
       (.I0(\^Q [2]),
        .I1(\rgb_data_out_reg[5]_i_2_n_0 ),
        .I2(\rgb_data_out_reg[5]_i_3_n_0 ),
        .I3(\rgb_data_out_reg[22]_i_4_n_0 ),
        .I4(\rgb_data_out_reg[5]_i_4_n_0 ),
        .I5(\rgb_data_out_reg[5]_i_5_n_0 ),
        .O(\rgb_data_out_reg[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h14001455)) 
    \rgb_data_out_reg[5]_i_10 
       (.I0(\rgb_data_out_reg[5]_i_15_n_0 ),
        .I1(\rgb_data_out_reg[6]_i_6_n_0 ),
        .I2(rgb_data_in[13]),
        .I3(\rgb_data_out_reg[7]_i_10_n_0 ),
        .I4(\rgb_data_out_reg[7]_i_9_n_6 ),
        .O(\rgb_data_out_reg[5]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0001010155555555)) 
    \rgb_data_out_reg[5]_i_11 
       (.I0(\rgb_data_out_reg[5]_i_16_n_0 ),
        .I1(rgb_data_in[11]),
        .I2(rgb_data_in[10]),
        .I3(rgb_data_in[9]),
        .I4(rgb_data_in[8]),
        .I5(rgb_data_in[12]),
        .O(\rgb_data_out_reg[5]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rgb_data_out_reg[5]_i_12 
       (.I0(rgb_data_in[9]),
        .I1(rgb_data_in[10]),
        .O(\rgb_data_out_reg[5]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'h95555555)) 
    \rgb_data_out_reg[5]_i_13 
       (.I0(rgb_data_in[12]),
        .I1(rgb_data_in[9]),
        .I2(rgb_data_in[10]),
        .I3(rgb_data_in[8]),
        .I4(rgb_data_in[11]),
        .O(\rgb_data_out_reg[5]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h74747474B8B8B88B)) 
    \rgb_data_out_reg[5]_i_14 
       (.I0(\rgb_data_out_reg[5]_i_17_n_0 ),
        .I1(\rgb_data_out_reg[7]_i_13_n_0 ),
        .I2(rgb_data_in[14]),
        .I3(\rgb_data_out_reg[5]_i_18_n_0 ),
        .I4(rgb_data_in[12]),
        .I5(rgb_data_in[13]),
        .O(\rgb_data_out_reg[5]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h0000000155555555)) 
    \rgb_data_out_reg[5]_i_15 
       (.I0(\rgb_data_out_reg[3]_i_12_n_0 ),
        .I1(rgb_data_in[12]),
        .I2(rgb_data_in[11]),
        .I3(rgb_data_in[10]),
        .I4(rgb_data_in[9]),
        .I5(rgb_data_in[13]),
        .O(\rgb_data_out_reg[5]_i_15_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \rgb_data_out_reg[5]_i_16 
       (.I0(rgb_data_in[13]),
        .I1(rgb_data_in[15]),
        .I2(rgb_data_in[14]),
        .O(\rgb_data_out_reg[5]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h8880)) 
    \rgb_data_out_reg[5]_i_17 
       (.I0(rgb_data_in[12]),
        .I1(rgb_data_in[11]),
        .I2(rgb_data_in[10]),
        .I3(rgb_data_in[9]),
        .O(\rgb_data_out_reg[5]_i_17_n_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \rgb_data_out_reg[5]_i_18 
       (.I0(rgb_data_in[11]),
        .I1(rgb_data_in[10]),
        .I2(rgb_data_in[9]),
        .O(\rgb_data_out_reg[5]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h00000000222AAAA2)) 
    \rgb_data_out_reg[5]_i_2 
       (.I0(\rgb_data_out_reg[5]_i_6_n_0 ),
        .I1(\rgb_data_out_reg[5]_i_7_n_0 ),
        .I2(rgb_data_in[10]),
        .I3(\rgb_data_out_reg[5]_i_8_n_0 ),
        .I4(rgb_data_in[11]),
        .I5(\rgb_data_out_reg[23]_i_6_n_0 ),
        .O(\rgb_data_out_reg[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFEAAAAAA)) 
    \rgb_data_out_reg[5]_i_3 
       (.I0(\^Q [2]),
        .I1(increase_brightness12_carry__1_n_7),
        .I2(increase_brightness12_carry__0_n_6),
        .I3(\^Q [1]),
        .I4(\^Q [0]),
        .O(\rgb_data_out_reg[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF15FF00001500)) 
    \rgb_data_out_reg[5]_i_4 
       (.I0(g1),
        .I1(g2[5]),
        .I2(\g2_inferred__0/i__carry__1_n_0 ),
        .I3(\^Q [2]),
        .I4(\^Q [1]),
        .I5(\rgb_data_out_reg[5]_i_9_n_0 ),
        .O(\rgb_data_out_reg[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hE2222EEEFFFFFFFF)) 
    \rgb_data_out_reg[5]_i_5 
       (.I0(\rgb_data_out_reg[5]_i_10_n_0 ),
        .I1(\rgb_data_out_reg[5]_i_11_n_0 ),
        .I2(\rgb_data_out_reg[5]_i_12_n_0 ),
        .I3(rgb_data_in[11]),
        .I4(rgb_data_in[12]),
        .I5(\rgb_data_out_reg[22]_i_15_n_0 ),
        .O(\rgb_data_out_reg[5]_i_5_n_0 ));
  MUXF7 \rgb_data_out_reg[5]_i_6 
       (.I0(\rgb_data_out_reg[5]_i_13_n_0 ),
        .I1(\rgb_data_out_reg[5]_i_14_n_0 ),
        .O(\rgb_data_out_reg[5]_i_6_n_0 ),
        .S(\rgb_data_out_reg[3]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000007)) 
    \rgb_data_out_reg[5]_i_7 
       (.I0(rgb_data_in[11]),
        .I1(rgb_data_in[10]),
        .I2(rgb_data_in[12]),
        .I3(rgb_data_in[13]),
        .I4(rgb_data_in[14]),
        .I5(rgb_data_in[15]),
        .O(\rgb_data_out_reg[5]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \rgb_data_out_reg[5]_i_8 
       (.I0(rgb_data_in[8]),
        .I1(rgb_data_in[9]),
        .O(\rgb_data_out_reg[5]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h150015FF)) 
    \rgb_data_out_reg[5]_i_9 
       (.I0(g1_carry_n_0),
        .I1(g2_carry__0_n_6),
        .I2(g2_carry__1_n_0),
        .I3(\rgb_data_out_reg[21]_i_15_n_0 ),
        .I4(rgb_data_in[5]),
        .O(\rgb_data_out_reg[5]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[6] 
       (.CLR(\rgb_data_out_reg[7]_i_2_n_0 ),
        .D(\rgb_data_out_reg[6]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[6]));
  LUT6 #(
    .INIT(64'h00005D555F575F57)) 
    \rgb_data_out_reg[6]_i_1 
       (.I0(\rgb_data_out_reg[6]_i_2_n_0 ),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .I3(\rgb_data_out_reg[6]_i_3_n_0 ),
        .I4(\^Q [2]),
        .I5(\rgb_data_out_reg[6]_i_4_n_0 ),
        .O(\rgb_data_out_reg[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h01010F000F0F0F0F)) 
    \rgb_data_out_reg[6]_i_2 
       (.I0(increase_brightness12_carry__0_n_5),
        .I1(increase_brightness12_carry__1_n_7),
        .I2(\^Q [2]),
        .I3(\rgb_data_out_reg[6]_i_5_n_0 ),
        .I4(\^Q [0]),
        .I5(\^Q [1]),
        .O(\rgb_data_out_reg[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hE22EE2E2)) 
    \rgb_data_out_reg[6]_i_3 
       (.I0(\rgb_data_out_reg[7]_i_9_n_5 ),
        .I1(\rgb_data_out_reg[7]_i_10_n_0 ),
        .I2(rgb_data_in[14]),
        .I3(\rgb_data_out_reg[6]_i_6_n_0 ),
        .I4(rgb_data_in[13]),
        .O(\rgb_data_out_reg[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF15FF00001500)) 
    \rgb_data_out_reg[6]_i_4 
       (.I0(g1),
        .I1(g2[6]),
        .I2(\g2_inferred__0/i__carry__1_n_0 ),
        .I3(\^Q [2]),
        .I4(\^Q [1]),
        .I5(\rgb_data_out_reg[6]_i_7_n_0 ),
        .O(\rgb_data_out_reg[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h00000222AAAAAAAA)) 
    \rgb_data_out_reg[6]_i_5 
       (.I0(\rgb_data_out_reg[6]_i_8_n_0 ),
        .I1(rgb_data_in[14]),
        .I2(rgb_data_in[9]),
        .I3(rgb_data_in[10]),
        .I4(rgb_data_in[11]),
        .I5(rgb_data_in[15]),
        .O(\rgb_data_out_reg[6]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \rgb_data_out_reg[6]_i_6 
       (.I0(rgb_data_in[12]),
        .I1(rgb_data_in[11]),
        .I2(rgb_data_in[10]),
        .O(\rgb_data_out_reg[6]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h150015FF)) 
    \rgb_data_out_reg[6]_i_7 
       (.I0(g1_carry_n_0),
        .I1(g2_carry__0_n_5),
        .I2(g2_carry__1_n_0),
        .I3(\rgb_data_out_reg[21]_i_15_n_0 ),
        .I4(rgb_data_in[6]),
        .O(\rgb_data_out_reg[6]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF40034303)) 
    \rgb_data_out_reg[6]_i_8 
       (.I0(\rgb_data_out_reg[7]_i_18_n_0 ),
        .I1(rgb_data_in[13]),
        .I2(rgb_data_in[12]),
        .I3(rgb_data_in[11]),
        .I4(\rgb_data_out_reg[5]_i_8_n_0 ),
        .I5(rgb_data_in[14]),
        .O(\rgb_data_out_reg[6]_i_8_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[7] 
       (.CLR(\rgb_data_out_reg[7]_i_2_n_0 ),
        .D(\rgb_data_out_reg[7]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[7]));
  LUT6 #(
    .INIT(64'h55FF55FF44FC55FF)) 
    \rgb_data_out_reg[7]_i_1 
       (.I0(\^Q [2]),
        .I1(\rgb_data_out_reg[7]_i_3_n_0 ),
        .I2(\rgb_data_out_reg[22]_i_4_n_0 ),
        .I3(\rgb_data_out_reg[7]_i_4_n_0 ),
        .I4(\rgb_data_out_reg[7]_i_5_n_0 ),
        .I5(\rgb_data_out_reg[7]_i_6_n_0 ),
        .O(\rgb_data_out_reg[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000F7FFFFFFFF)) 
    \rgb_data_out_reg[7]_i_10 
       (.I0(rgb_data_in[12]),
        .I1(rgb_data_in[11]),
        .I2(\rgb_data_out_reg[7]_i_18_n_0 ),
        .I3(rgb_data_in[13]),
        .I4(rgb_data_in[14]),
        .I5(rgb_data_in[15]),
        .O(\rgb_data_out_reg[7]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h150015FF)) 
    \rgb_data_out_reg[7]_i_11 
       (.I0(g1_carry_n_0),
        .I1(g2_carry__0_n_4),
        .I2(g2_carry__1_n_0),
        .I3(\rgb_data_out_reg[21]_i_15_n_0 ),
        .I4(rgb_data_in[7]),
        .O(\rgb_data_out_reg[7]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'hA8)) 
    \rgb_data_out_reg[7]_i_12 
       (.I0(rgb_data_in[11]),
        .I1(rgb_data_in[10]),
        .I2(rgb_data_in[9]),
        .O(\rgb_data_out_reg[7]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h4545454545454555)) 
    \rgb_data_out_reg[7]_i_13 
       (.I0(rgb_data_in[15]),
        .I1(\rgb_data_out_reg[7]_i_19_n_0 ),
        .I2(rgb_data_in[12]),
        .I3(rgb_data_in[9]),
        .I4(rgb_data_in[11]),
        .I5(rgb_data_in[10]),
        .O(\rgb_data_out_reg[7]_i_13_n_0 ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \rgb_data_out_reg[7]_i_14 
       (.CI(1'b0),
        .CO({\rgb_data_out_reg[7]_i_14_n_0 ,\NLW_rgb_data_out_reg[7]_i_14_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(rgb_data_in[12:9]),
        .O({\rgb_data_out_reg[7]_i_14_n_4 ,\rgb_data_out_reg[7]_i_14_n_5 ,\rgb_data_out_reg[7]_i_14_n_6 ,\rgb_data_out_reg[7]_i_14_n_7 }),
        .S({\rgb_data_out_reg[7]_i_20_n_0 ,\rgb_data_out_reg[7]_i_21_n_0 ,\rgb_data_out_reg[7]_i_22_n_0 ,\rgb_data_out_reg[7]_i_23_n_0 }));
  LUT1 #(
    .INIT(2'h1)) 
    \rgb_data_out_reg[7]_i_15 
       (.I0(rgb_data_in[15]),
        .O(\rgb_data_out_reg[7]_i_15_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \rgb_data_out_reg[7]_i_16 
       (.I0(rgb_data_in[14]),
        .O(\rgb_data_out_reg[7]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'h1555AAAAFFFF0000)) 
    \rgb_data_out_reg[7]_i_17 
       (.I0(rgb_data_in[14]),
        .I1(rgb_data_in[10]),
        .I2(rgb_data_in[11]),
        .I3(rgb_data_in[12]),
        .I4(rgb_data_in[13]),
        .I5(rgb_data_in[15]),
        .O(\rgb_data_out_reg[7]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \rgb_data_out_reg[7]_i_18 
       (.I0(rgb_data_in[9]),
        .I1(rgb_data_in[10]),
        .O(\rgb_data_out_reg[7]_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \rgb_data_out_reg[7]_i_19 
       (.I0(rgb_data_in[13]),
        .I1(rgb_data_in[14]),
        .O(\rgb_data_out_reg[7]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    \rgb_data_out_reg[7]_i_2 
       (.I0(\rgb_data_out_reg[7]_i_7_n_0 ),
        .I1(\^Q [2]),
        .I2(\^Q [1]),
        .I3(\^Q [0]),
        .I4(rgb_data_in[8]),
        .I5(rgb_data_in[9]),
        .O(\rgb_data_out_reg[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h6222DDD50000FFFF)) 
    \rgb_data_out_reg[7]_i_20 
       (.I0(rgb_data_in[14]),
        .I1(rgb_data_in[13]),
        .I2(rgb_data_in[10]),
        .I3(rgb_data_in[11]),
        .I4(rgb_data_in[12]),
        .I5(rgb_data_in[15]),
        .O(\rgb_data_out_reg[7]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'h7F7F80807F7F8000)) 
    \rgb_data_out_reg[7]_i_21 
       (.I0(rgb_data_in[15]),
        .I1(rgb_data_in[14]),
        .I2(rgb_data_in[13]),
        .I3(rgb_data_in[10]),
        .I4(rgb_data_in[11]),
        .I5(rgb_data_in[12]),
        .O(\rgb_data_out_reg[7]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h92D2D2DAF0F0F0F0)) 
    \rgb_data_out_reg[7]_i_22 
       (.I0(rgb_data_in[14]),
        .I1(rgb_data_in[13]),
        .I2(rgb_data_in[10]),
        .I3(rgb_data_in[11]),
        .I4(rgb_data_in[12]),
        .I5(rgb_data_in[15]),
        .O(\rgb_data_out_reg[7]_i_22_n_0 ));
  LUT5 #(
    .INIT(32'h55559555)) 
    \rgb_data_out_reg[7]_i_23 
       (.I0(rgb_data_in[9]),
        .I1(rgb_data_in[15]),
        .I2(rgb_data_in[14]),
        .I3(rgb_data_in[13]),
        .I4(\rgb_data_out_reg[6]_i_6_n_0 ),
        .O(\rgb_data_out_reg[7]_i_23_n_0 ));
  LUT6 #(
    .INIT(64'h4440444044400000)) 
    \rgb_data_out_reg[7]_i_3 
       (.I0(\^Q [1]),
        .I1(\^Q [0]),
        .I2(rgb_data_in[15]),
        .I3(\rgb_data_out_reg[7]_i_8_n_0 ),
        .I4(\rgb_data_out_reg[7]_i_9_n_0 ),
        .I5(\rgb_data_out_reg[7]_i_10_n_0 ),
        .O(\rgb_data_out_reg[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF15FF00001500)) 
    \rgb_data_out_reg[7]_i_4 
       (.I0(g1),
        .I1(g2[7]),
        .I2(\g2_inferred__0/i__carry__1_n_0 ),
        .I3(\^Q [2]),
        .I4(\^Q [1]),
        .I5(\rgb_data_out_reg[7]_i_11_n_0 ),
        .O(\rgb_data_out_reg[7]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h01555555)) 
    \rgb_data_out_reg[7]_i_5 
       (.I0(\^Q [2]),
        .I1(increase_brightness12_carry__1_n_7),
        .I2(increase_brightness12_carry__0_n_4),
        .I3(\^Q [1]),
        .I4(\^Q [0]),
        .O(\rgb_data_out_reg[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h1444444455555555)) 
    \rgb_data_out_reg[7]_i_6 
       (.I0(\rgb_data_out_reg[23]_i_6_n_0 ),
        .I1(rgb_data_in[14]),
        .I2(\rgb_data_out_reg[7]_i_12_n_0 ),
        .I3(rgb_data_in[12]),
        .I4(rgb_data_in[13]),
        .I5(\rgb_data_out_reg[7]_i_13_n_0 ),
        .O(\rgb_data_out_reg[7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \rgb_data_out_reg[7]_i_7 
       (.I0(rgb_data_in[10]),
        .I1(rgb_data_in[11]),
        .I2(rgb_data_in[12]),
        .I3(rgb_data_in[14]),
        .I4(rgb_data_in[15]),
        .I5(rgb_data_in[13]),
        .O(\rgb_data_out_reg[7]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h88888880)) 
    \rgb_data_out_reg[7]_i_8 
       (.I0(rgb_data_in[14]),
        .I1(rgb_data_in[13]),
        .I2(rgb_data_in[10]),
        .I3(rgb_data_in[11]),
        .I4(rgb_data_in[12]),
        .O(\rgb_data_out_reg[7]_i_8_n_0 ));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 \rgb_data_out_reg[7]_i_9 
       (.CI(\rgb_data_out_reg[7]_i_14_n_0 ),
        .CO({\rgb_data_out_reg[7]_i_9_n_0 ,\NLW_rgb_data_out_reg[7]_i_9_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,rgb_data_in[15:13]}),
        .O({\NLW_rgb_data_out_reg[7]_i_9_O_UNCONNECTED [3],\rgb_data_out_reg[7]_i_9_n_5 ,\rgb_data_out_reg[7]_i_9_n_6 ,\rgb_data_out_reg[7]_i_9_n_7 }),
        .S({1'b1,\rgb_data_out_reg[7]_i_15_n_0 ,\rgb_data_out_reg[7]_i_16_n_0 ,\rgb_data_out_reg[7]_i_17_n_0 }));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[8] 
       (.CLR(\rgb_data_out_reg[15]_i_2_n_0 ),
        .D(\rgb_data_out_reg[8]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[8]));
  LUT6 #(
    .INIT(64'h5454FFFC5555FFFF)) 
    \rgb_data_out_reg[8]_i_1 
       (.I0(\^Q [2]),
        .I1(\rgb_data_out_reg[8]_i_2_n_0 ),
        .I2(\rgb_data_out_reg[8]_i_3_n_0 ),
        .I3(\rgb_data_out_reg[22]_i_4_n_0 ),
        .I4(\rgb_data_out_reg[8]_i_4_n_0 ),
        .I5(\rgb_data_out_reg[8]_i_5_n_0 ),
        .O(\rgb_data_out_reg[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1111111101110100)) 
    \rgb_data_out_reg[8]_i_2 
       (.I0(\rgb_data_out_reg[14]_i_6_n_0 ),
        .I1(\rgb_data_out_reg[23]_i_6_n_0 ),
        .I2(rgb_data_in[1]),
        .I3(\rgb_data_out_reg[8]_i_6_n_0 ),
        .I4(rgb_data_in[0]),
        .I5(\rgb_data_out_reg[14]_i_10_n_0 ),
        .O(\rgb_data_out_reg[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFEAAAAAA)) 
    \rgb_data_out_reg[8]_i_3 
       (.I0(\^Q [2]),
        .I1(increase_brightness02_carry_n_7),
        .I2(increase_brightness02_carry__1_n_7),
        .I3(\^Q [1]),
        .I4(\^Q [0]),
        .O(\rgb_data_out_reg[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFF1FFF)) 
    \rgb_data_out_reg[8]_i_4 
       (.I0(b1_carry_n_2),
        .I1(\rgb_data_out_reg[11]_i_9_n_7 ),
        .I2(\^Q [2]),
        .I3(\^Q [1]),
        .I4(\^Q [0]),
        .I5(\rgb_data_out_reg[8]_i_7_n_0 ),
        .O(\rgb_data_out_reg[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h55551105FFFFFFFF)) 
    \rgb_data_out_reg[8]_i_5 
       (.I0(\rgb_data_out_reg[8]_i_8_n_0 ),
        .I1(\rgb_data_out_reg[15]_i_13_n_7 ),
        .I2(rgb_data_in[0]),
        .I3(\rgb_data_out_reg[15]_i_5_n_0 ),
        .I4(\rgb_data_out_reg[8]_i_9_n_0 ),
        .I5(\rgb_data_out_reg[22]_i_15_n_0 ),
        .O(\rgb_data_out_reg[8]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hEAAAEAAAEAAAAAAA)) 
    \rgb_data_out_reg[8]_i_6 
       (.I0(rgb_data_in[7]),
        .I1(rgb_data_in[6]),
        .I2(rgb_data_in[5]),
        .I3(rgb_data_in[4]),
        .I4(rgb_data_in[1]),
        .I5(\rgb_data_out_reg[15]_i_9_n_0 ),
        .O(\rgb_data_out_reg[8]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFF0FEFEF0000E0E0)) 
    \rgb_data_out_reg[8]_i_7 
       (.I0(b1),
        .I1(b2[0]),
        .I2(\^Q [2]),
        .I3(\^Q [0]),
        .I4(\^Q [1]),
        .I5(rgb_data_in[8]),
        .O(\rgb_data_out_reg[8]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFE00FE00FEFFFE00)) 
    \rgb_data_out_reg[8]_i_8 
       (.I0(rgb_data_in[3]),
        .I1(rgb_data_in[2]),
        .I2(rgb_data_in[4]),
        .I3(\rgb_data_out_reg[13]_i_10_n_0 ),
        .I4(\rgb_data_out_reg[8]_i_9_n_0 ),
        .I5(rgb_data_in[0]),
        .O(\rgb_data_out_reg[8]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h0000003B)) 
    \rgb_data_out_reg[8]_i_9 
       (.I0(\rgb_data_out_reg[15]_i_11_n_0 ),
        .I1(rgb_data_in[5]),
        .I2(rgb_data_in[1]),
        .I3(rgb_data_in[6]),
        .I4(rgb_data_in[7]),
        .O(\rgb_data_out_reg[8]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \rgb_data_out_reg[9] 
       (.CLR(\rgb_data_out_reg[15]_i_2_n_0 ),
        .D(\rgb_data_out_reg[9]_i_1_n_0 ),
        .G(1'b1),
        .GE(1'b1),
        .Q(rgb_data_out[9]));
  LUT6 #(
    .INIT(64'hFF55FF55FF55AB00)) 
    \rgb_data_out_reg[9]_i_1 
       (.I0(\^Q [2]),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .I3(\rgb_data_out_reg[9]_i_2_n_0 ),
        .I4(\rgb_data_out_reg[9]_i_3_n_0 ),
        .I5(\rgb_data_out_reg[9]_i_4_n_0 ),
        .O(\rgb_data_out_reg[9]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFD500)) 
    \rgb_data_out_reg[9]_i_2 
       (.I0(\^Q [2]),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .I3(rgb_data_in[9]),
        .I4(\rgb_data_out_reg[9]_i_5_n_0 ),
        .O(\rgb_data_out_reg[9]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h8880)) 
    \rgb_data_out_reg[9]_i_3 
       (.I0(\^Q [0]),
        .I1(\^Q [1]),
        .I2(increase_brightness02_carry_n_6),
        .I3(increase_brightness02_carry__1_n_7),
        .O(\rgb_data_out_reg[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFF200000)) 
    \rgb_data_out_reg[9]_i_4 
       (.I0(rgb_data_in[0]),
        .I1(\rgb_data_out_reg[15]_i_11_n_0 ),
        .I2(\rgb_data_out_reg[13]_i_10_n_0 ),
        .I3(\rgb_data_out_reg[9]_i_6_n_0 ),
        .I4(\rgb_data_out_reg[22]_i_15_n_0 ),
        .I5(\rgb_data_out_reg[9]_i_7_n_0 ),
        .O(\rgb_data_out_reg[9]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFE0E0E0E0E0)) 
    \rgb_data_out_reg[9]_i_5 
       (.I0(b1),
        .I1(b2[1]),
        .I2(i__carry_i_6_n_0),
        .I3(b1_carry_n_2),
        .I4(\rgb_data_out_reg[11]_i_9_n_6 ),
        .I5(\rgb_data_out_reg[21]_i_15_n_0 ),
        .O(\rgb_data_out_reg[9]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h000000000DF8FD08)) 
    \rgb_data_out_reg[9]_i_6 
       (.I0(\rgb_data_out_reg[15]_i_5_n_0 ),
        .I1(\rgb_data_out_reg[15]_i_13_n_6 ),
        .I2(\rgb_data_out_reg[8]_i_9_n_0 ),
        .I3(rgb_data_in[1]),
        .I4(rgb_data_in[0]),
        .I5(\rgb_data_out_reg[13]_i_10_n_0 ),
        .O(\rgb_data_out_reg[9]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h00002282AAAA2282)) 
    \rgb_data_out_reg[9]_i_7 
       (.I0(\rgb_data_out_reg[9]_i_8_n_0 ),
        .I1(rgb_data_in[1]),
        .I2(\rgb_data_out_reg[8]_i_6_n_0 ),
        .I3(rgb_data_in[2]),
        .I4(\rgb_data_out_reg[14]_i_10_n_0 ),
        .I5(rgb_data_in[0]),
        .O(\rgb_data_out_reg[9]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \rgb_data_out_reg[9]_i_8 
       (.I0(\^Q [1]),
        .I1(\^Q [0]),
        .I2(\rgb_data_out_reg[14]_i_6_n_0 ),
        .O(\rgb_data_out_reg[9]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \state[0]_i_1 
       (.I0(\^Q [0]),
        .O(\state[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \state[1]_i_1 
       (.I0(\^Q [1]),
        .I1(\^Q [0]),
        .O(\state[1]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \state[2]_i_1 
       (.I0(key[0]),
        .O(\state[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h6A)) 
    \state[2]_i_2 
       (.I0(\^Q [2]),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .O(\state[2]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \state[2]_i_3 
       (.I0(key[1]),
        .O(\state[2]_i_3_n_0 ));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \state_reg[0] 
       (.C(key[0]),
        .CE(\state[2]_i_1_n_0 ),
        .CLR(\state[2]_i_3_n_0 ),
        .D(\state[0]_i_1_n_0 ),
        .Q(\^Q [0]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \state_reg[1] 
       (.C(key[0]),
        .CE(\state[2]_i_1_n_0 ),
        .CLR(\state[2]_i_3_n_0 ),
        .D(\state[1]_i_1_n_0 ),
        .Q(\^Q [1]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \state_reg[2] 
       (.C(key[0]),
        .CE(\state[2]_i_1_n_0 ),
        .CLR(\state[2]_i_3_n_0 ),
        .D(\state[2]_i_2_n_0 ),
        .Q(\^Q [2]));
  (* OPT_MODIFIED = "PROPCONST SWEEP" *) 
  CARRY4 u3__0_carry
       (.CI(1'b0),
        .CO({u3__0_carry_n_0,NLW_u3__0_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({u3__0_carry_i_1_n_0,u3__0_carry_i_2_n_0,u3__0_carry_i_3_n_0,1'b0}),
        .O({u3__0_carry_n_4,u3__0_carry_n_5,u3__0_carry_n_6,u3__0_carry_n_7}),
        .S({u3__0_carry_i_4_n_0,u3__0_carry_i_5_n_0,u3__0_carry_i_6_n_0,u3__0_carry_i_7_n_0}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 u3__0_carry__0
       (.CI(u3__0_carry_n_0),
        .CO({u3__0_carry__0_n_0,NLW_u3__0_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({u3__0_carry__0_i_1_n_0,u3__0_carry__0_i_2_n_0,u3__0_carry__0_i_3_n_0,u3__0_carry__0_i_4_n_0}),
        .O({u3__0_carry__0_n_4,u3__0_carry__0_n_5,u3__0_carry__0_n_6,u3__0_carry__0_n_7}),
        .S({u3__0_carry__0_i_5_n_0,u3__0_carry__0_i_6_n_0,u3__0_carry__0_i_7_n_0,u3__0_carry__0_i_8_n_0}));
  LUT3 #(
    .INIT(8'h2B)) 
    u3__0_carry__0_i_1
       (.I0(rgb_data_in[12]),
        .I1(rgb_data_in[15]),
        .I2(rgb_data_in[22]),
        .O(u3__0_carry__0_i_1_n_0));
  LUT3 #(
    .INIT(8'h2B)) 
    u3__0_carry__0_i_2
       (.I0(rgb_data_in[11]),
        .I1(rgb_data_in[14]),
        .I2(rgb_data_in[21]),
        .O(u3__0_carry__0_i_2_n_0));
  LUT3 #(
    .INIT(8'h2B)) 
    u3__0_carry__0_i_3
       (.I0(rgb_data_in[10]),
        .I1(rgb_data_in[20]),
        .I2(rgb_data_in[13]),
        .O(u3__0_carry__0_i_3_n_0));
  LUT3 #(
    .INIT(8'h2B)) 
    u3__0_carry__0_i_4
       (.I0(rgb_data_in[9]),
        .I1(rgb_data_in[19]),
        .I2(rgb_data_in[12]),
        .O(u3__0_carry__0_i_4_n_0));
  LUT5 #(
    .INIT(32'h718E8E71)) 
    u3__0_carry__0_i_5
       (.I0(rgb_data_in[22]),
        .I1(rgb_data_in[15]),
        .I2(rgb_data_in[12]),
        .I3(rgb_data_in[23]),
        .I4(rgb_data_in[13]),
        .O(u3__0_carry__0_i_5_n_0));
  LUT4 #(
    .INIT(16'h6996)) 
    u3__0_carry__0_i_6
       (.I0(u3__0_carry__0_i_2_n_0),
        .I1(rgb_data_in[12]),
        .I2(rgb_data_in[15]),
        .I3(rgb_data_in[22]),
        .O(u3__0_carry__0_i_6_n_0));
  LUT4 #(
    .INIT(16'h6996)) 
    u3__0_carry__0_i_7
       (.I0(rgb_data_in[11]),
        .I1(rgb_data_in[14]),
        .I2(rgb_data_in[21]),
        .I3(u3__0_carry__0_i_3_n_0),
        .O(u3__0_carry__0_i_7_n_0));
  LUT4 #(
    .INIT(16'h6996)) 
    u3__0_carry__0_i_8
       (.I0(rgb_data_in[10]),
        .I1(rgb_data_in[20]),
        .I2(rgb_data_in[13]),
        .I3(u3__0_carry__0_i_4_n_0),
        .O(u3__0_carry__0_i_8_n_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 u3__0_carry__1
       (.CI(u3__0_carry__0_n_0),
        .CO({NLW_u3__0_carry__1_CO_UNCONNECTED[3],u3__0_carry__1_n_1,NLW_u3__0_carry__1_CO_UNCONNECTED[1:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,rgb_data_in[15:14]}),
        .O({NLW_u3__0_carry__1_O_UNCONNECTED[3:2],u3__0_carry__1_n_6,u3__0_carry__1_n_7}),
        .S({1'b0,1'b1,u3__0_carry__1_i_1_n_0,u3__0_carry__1_i_2_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    u3__0_carry__1_i_1
       (.I0(rgb_data_in[15]),
        .O(u3__0_carry__1_i_1_n_0));
  LUT3 #(
    .INIT(8'h2D)) 
    u3__0_carry__1_i_2
       (.I0(rgb_data_in[23]),
        .I1(rgb_data_in[13]),
        .I2(rgb_data_in[14]),
        .O(u3__0_carry__1_i_2_n_0));
  LUT3 #(
    .INIT(8'h2B)) 
    u3__0_carry_i_1
       (.I0(rgb_data_in[8]),
        .I1(rgb_data_in[18]),
        .I2(rgb_data_in[11]),
        .O(u3__0_carry_i_1_n_0));
  LUT3 #(
    .INIT(8'h96)) 
    u3__0_carry_i_2
       (.I0(rgb_data_in[18]),
        .I1(rgb_data_in[11]),
        .I2(rgb_data_in[8]),
        .O(u3__0_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    u3__0_carry_i_3
       (.I0(rgb_data_in[9]),
        .I1(rgb_data_in[16]),
        .O(u3__0_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'h6996)) 
    u3__0_carry_i_4
       (.I0(rgb_data_in[9]),
        .I1(rgb_data_in[19]),
        .I2(rgb_data_in[12]),
        .I3(u3__0_carry_i_1_n_0),
        .O(u3__0_carry_i_4_n_0));
  LUT5 #(
    .INIT(32'h96969669)) 
    u3__0_carry_i_5
       (.I0(rgb_data_in[8]),
        .I1(rgb_data_in[18]),
        .I2(rgb_data_in[11]),
        .I3(rgb_data_in[17]),
        .I4(rgb_data_in[10]),
        .O(u3__0_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h7887)) 
    u3__0_carry_i_6
       (.I0(rgb_data_in[16]),
        .I1(rgb_data_in[9]),
        .I2(rgb_data_in[17]),
        .I3(rgb_data_in[10]),
        .O(u3__0_carry_i_6_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    u3__0_carry_i_7
       (.I0(rgb_data_in[9]),
        .I1(rgb_data_in[16]),
        .O(u3__0_carry_i_7_n_0));
  (* OPT_MODIFIED = "PROPCONST SWEEP" *) 
  CARRY4 u3__32_carry
       (.CI(1'b0),
        .CO({u3__32_carry_n_0,NLW_u3__32_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({u3__32_carry_i_1_n_0,u3__32_carry_i_2_n_0,u3__32_carry_i_3_n_0,1'b0}),
        .O(NLW_u3__32_carry_O_UNCONNECTED[3:0]),
        .S({u3__32_carry_i_4_n_0,u3__32_carry_i_5_n_0,u3__32_carry_i_6_n_0,u3__32_carry_i_7_n_0}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 u3__32_carry__0
       (.CI(u3__32_carry_n_0),
        .CO({u3__32_carry__0_n_0,NLW_u3__32_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({u3__32_carry__0_i_1_n_0,u3__32_carry__0_i_2_n_0,u3__32_carry__0_i_3_n_0,u3__32_carry__0_i_4_n_0}),
        .O({u3[7:5],NLW_u3__32_carry__0_O_UNCONNECTED[0]}),
        .S({u3__32_carry__0_i_5_n_0,u3__32_carry__0_i_6_n_0,u3__32_carry__0_i_7_n_0,u3__32_carry__0_i_8_n_0}));
  LUT6 #(
    .INIT(64'h00000000D42B2BD4)) 
    u3__32_carry__0_i_1
       (.I0(u3__0_carry_n_4),
        .I1(rgb_data_in[2]),
        .I2(rgb_data_in[21]),
        .I3(rgb_data_in[6]),
        .I4(u3__32_carry__0_i_9_n_0),
        .I5(u3__32_carry__0_i_10_n_0),
        .O(u3__32_carry__0_i_1_n_0));
  LUT5 #(
    .INIT(32'hBB2B2B22)) 
    u3__32_carry__0_i_10
       (.I0(rgb_data_in[5]),
        .I1(u3__32_carry__0_i_12_n_0),
        .I2(u3__0_carry_n_5),
        .I3(rgb_data_in[1]),
        .I4(rgb_data_in[20]),
        .O(u3__32_carry__0_i_10_n_0));
  LUT3 #(
    .INIT(8'h0B)) 
    u3__32_carry__0_i_11
       (.I0(u3__0_carry_n_6),
        .I1(rgb_data_in[19]),
        .I2(u3__32_carry__0_i_17_n_0),
        .O(u3__32_carry__0_i_11_n_0));
  LUT3 #(
    .INIT(8'h96)) 
    u3__32_carry__0_i_12
       (.I0(rgb_data_in[21]),
        .I1(rgb_data_in[2]),
        .I2(u3__0_carry_n_4),
        .O(u3__32_carry__0_i_12_n_0));
  LUT3 #(
    .INIT(8'h2B)) 
    u3__32_carry__0_i_13
       (.I0(u3__0_carry_n_4),
        .I1(rgb_data_in[2]),
        .I2(rgb_data_in[21]),
        .O(u3__32_carry__0_i_13_n_0));
  LUT5 #(
    .INIT(32'h96669996)) 
    u3__32_carry__0_i_14
       (.I0(u3__32_carry__1_i_10_n_0),
        .I1(rgb_data_in[7]),
        .I2(rgb_data_in[22]),
        .I3(rgb_data_in[3]),
        .I4(u3__0_carry__0_n_7),
        .O(u3__32_carry__0_i_14_n_0));
  LUT5 #(
    .INIT(32'h69996669)) 
    u3__32_carry__0_i_15
       (.I0(u3__32_carry__0_i_9_n_0),
        .I1(rgb_data_in[6]),
        .I2(rgb_data_in[21]),
        .I3(rgb_data_in[2]),
        .I4(u3__0_carry_n_4),
        .O(u3__32_carry__0_i_15_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    u3__32_carry__0_i_16
       (.I0(rgb_data_in[3]),
        .I1(rgb_data_in[0]),
        .O(u3__32_carry__0_i_16_n_0));
  LUT6 #(
    .INIT(64'h6969699696969669)) 
    u3__32_carry__0_i_17
       (.I0(u3__0_carry_n_5),
        .I1(rgb_data_in[1]),
        .I2(rgb_data_in[20]),
        .I3(rgb_data_in[3]),
        .I4(rgb_data_in[0]),
        .I5(rgb_data_in[4]),
        .O(u3__32_carry__0_i_17_n_0));
  LUT6 #(
    .INIT(64'hA220088A088AA220)) 
    u3__32_carry__0_i_2
       (.I0(u3__32_carry__0_i_11_n_0),
        .I1(u3__0_carry_n_5),
        .I2(rgb_data_in[1]),
        .I3(rgb_data_in[20]),
        .I4(rgb_data_in[5]),
        .I5(u3__32_carry__0_i_12_n_0),
        .O(u3__32_carry__0_i_2_n_0));
  LUT6 #(
    .INIT(64'h599AA665A665599A)) 
    u3__32_carry__0_i_3
       (.I0(u3__32_carry__0_i_11_n_0),
        .I1(u3__0_carry_n_5),
        .I2(rgb_data_in[1]),
        .I3(rgb_data_in[20]),
        .I4(rgb_data_in[5]),
        .I5(u3__32_carry__0_i_12_n_0),
        .O(u3__32_carry__0_i_3_n_0));
  LUT6 #(
    .INIT(64'h6FF66FF606606FF6)) 
    u3__32_carry__0_i_4
       (.I0(rgb_data_in[0]),
        .I1(rgb_data_in[3]),
        .I2(rgb_data_in[19]),
        .I3(u3__0_carry_n_6),
        .I4(rgb_data_in[18]),
        .I5(u3__0_carry_n_7),
        .O(u3__32_carry__0_i_4_n_0));
  LUT5 #(
    .INIT(32'h2B42D4BD)) 
    u3__32_carry__0_i_5
       (.I0(u3__32_carry__0_i_10_n_0),
        .I1(u3__32_carry__0_i_13_n_0),
        .I2(u3__32_carry__0_i_9_n_0),
        .I3(rgb_data_in[6]),
        .I4(u3__32_carry__0_i_14_n_0),
        .O(u3__32_carry__0_i_5_n_0));
  LUT3 #(
    .INIT(8'h96)) 
    u3__32_carry__0_i_6
       (.I0(u3__32_carry__0_i_2_n_0),
        .I1(u3__32_carry__0_i_10_n_0),
        .I2(u3__32_carry__0_i_15_n_0),
        .O(u3__32_carry__0_i_6_n_0));
  LUT6 #(
    .INIT(64'h599A9A599A59599A)) 
    u3__32_carry__0_i_7
       (.I0(u3__32_carry__0_i_3_n_0),
        .I1(rgb_data_in[4]),
        .I2(u3__32_carry__0_i_16_n_0),
        .I3(u3__0_carry_n_5),
        .I4(rgb_data_in[1]),
        .I5(rgb_data_in[20]),
        .O(u3__32_carry__0_i_7_n_0));
  LUT4 #(
    .INIT(16'h6696)) 
    u3__32_carry__0_i_8
       (.I0(u3__32_carry__0_i_4_n_0),
        .I1(u3__32_carry__0_i_17_n_0),
        .I2(rgb_data_in[19]),
        .I3(u3__0_carry_n_6),
        .O(u3__32_carry__0_i_8_n_0));
  LUT3 #(
    .INIT(8'h96)) 
    u3__32_carry__0_i_9
       (.I0(rgb_data_in[22]),
        .I1(rgb_data_in[3]),
        .I2(u3__0_carry__0_n_7),
        .O(u3__32_carry__0_i_9_n_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 u3__32_carry__1
       (.CI(u3__32_carry__0_n_0),
        .CO({u3__32_carry__1_n_0,NLW_u3__32_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({u3__32_carry__1_i_1_n_0,u3__32_carry__1_i_2_n_0,u3__32_carry__1_i_3_n_0,u3__32_carry__1_i_4_n_0}),
        .O(u3[11:8]),
        .S({u3__32_carry__1_i_5_n_0,u3__32_carry__1_i_6_n_0,u3__32_carry__1_i_7_n_0,u3__32_carry__1_i_8_n_0}));
  LUT4 #(
    .INIT(16'h0BB0)) 
    u3__32_carry__1_i_1
       (.I0(u3__0_carry__0_n_4),
        .I1(rgb_data_in[6]),
        .I2(rgb_data_in[7]),
        .I3(u3__0_carry__1_n_7),
        .O(u3__32_carry__1_i_1_n_0));
  LUT3 #(
    .INIT(8'h96)) 
    u3__32_carry__1_i_10
       (.I0(rgb_data_in[23]),
        .I1(rgb_data_in[4]),
        .I2(u3__0_carry__0_n_6),
        .O(u3__32_carry__1_i_10_n_0));
  LUT5 #(
    .INIT(32'hBB2B2B22)) 
    u3__32_carry__1_i_11
       (.I0(rgb_data_in[6]),
        .I1(u3__32_carry__0_i_9_n_0),
        .I2(u3__0_carry_n_4),
        .I3(rgb_data_in[2]),
        .I4(rgb_data_in[21]),
        .O(u3__32_carry__1_i_11_n_0));
  LUT3 #(
    .INIT(8'h2B)) 
    u3__32_carry__1_i_12
       (.I0(u3__0_carry__0_n_6),
        .I1(rgb_data_in[4]),
        .I2(rgb_data_in[23]),
        .O(u3__32_carry__1_i_12_n_0));
  LUT4 #(
    .INIT(16'h0440)) 
    u3__32_carry__1_i_2
       (.I0(rgb_data_in[5]),
        .I1(u3__0_carry__0_n_5),
        .I2(rgb_data_in[6]),
        .I3(u3__0_carry__0_n_4),
        .O(u3__32_carry__1_i_2_n_0));
  LUT6 #(
    .INIT(64'h82EBEBEB828282EB)) 
    u3__32_carry__1_i_3
       (.I0(u3__32_carry__1_i_9_n_0),
        .I1(rgb_data_in[5]),
        .I2(u3__0_carry__0_n_5),
        .I3(rgb_data_in[23]),
        .I4(rgb_data_in[4]),
        .I5(u3__0_carry__0_n_6),
        .O(u3__32_carry__1_i_3_n_0));
  LUT6 #(
    .INIT(64'h00000000D42B2BD4)) 
    u3__32_carry__1_i_4
       (.I0(u3__0_carry__0_n_7),
        .I1(rgb_data_in[3]),
        .I2(rgb_data_in[22]),
        .I3(rgb_data_in[7]),
        .I4(u3__32_carry__1_i_10_n_0),
        .I5(u3__32_carry__1_i_11_n_0),
        .O(u3__32_carry__1_i_4_n_0));
  LUT5 #(
    .INIT(32'h02D0FD2F)) 
    u3__32_carry__1_i_5
       (.I0(rgb_data_in[6]),
        .I1(u3__0_carry__0_n_4),
        .I2(u3__0_carry__1_n_7),
        .I3(rgb_data_in[7]),
        .I4(u3__0_carry__1_n_6),
        .O(u3__32_carry__1_i_5_n_0));
  LUT5 #(
    .INIT(32'h69699669)) 
    u3__32_carry__1_i_6
       (.I0(u3__32_carry__1_i_2_n_0),
        .I1(u3__0_carry__1_n_7),
        .I2(rgb_data_in[7]),
        .I3(rgb_data_in[6]),
        .I4(u3__0_carry__0_n_4),
        .O(u3__32_carry__1_i_6_n_0));
  LUT5 #(
    .INIT(32'hB44B4BB4)) 
    u3__32_carry__1_i_7
       (.I0(rgb_data_in[5]),
        .I1(u3__0_carry__0_n_5),
        .I2(rgb_data_in[6]),
        .I3(u3__0_carry__0_n_4),
        .I4(u3__32_carry__1_i_3_n_0),
        .O(u3__32_carry__1_i_7_n_0));
  LUT5 #(
    .INIT(32'h69969669)) 
    u3__32_carry__1_i_8
       (.I0(u3__32_carry__1_i_4_n_0),
        .I1(u3__32_carry__1_i_9_n_0),
        .I2(rgb_data_in[5]),
        .I3(u3__0_carry__0_n_5),
        .I4(u3__32_carry__1_i_12_n_0),
        .O(u3__32_carry__1_i_8_n_0));
  LUT5 #(
    .INIT(32'h2BFF002B)) 
    u3__32_carry__1_i_9
       (.I0(u3__0_carry__0_n_7),
        .I1(rgb_data_in[3]),
        .I2(rgb_data_in[22]),
        .I3(rgb_data_in[7]),
        .I4(u3__32_carry__1_i_10_n_0),
        .O(u3__32_carry__1_i_9_n_0));
  CARRY4 u3__32_carry__2
       (.CI(u3__32_carry__1_n_0),
        .CO({NLW_u3__32_carry__2_CO_UNCONNECTED[3:2],u3__32_carry__2_n_2,NLW_u3__32_carry__2_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,u3__32_carry__2_i_1_n_0}),
        .O({NLW_u3__32_carry__2_O_UNCONNECTED[3:1],u3[12]}),
        .S({1'b0,1'b0,1'b1,u3__32_carry__2_i_2_n_0}));
  LUT3 #(
    .INIT(8'h8A)) 
    u3__32_carry__2_i_1
       (.I0(u3__0_carry__1_n_6),
        .I1(u3__0_carry__1_n_7),
        .I2(rgb_data_in[7]),
        .O(u3__32_carry__2_i_1_n_0));
  LUT4 #(
    .INIT(16'h2FD0)) 
    u3__32_carry__2_i_2
       (.I0(rgb_data_in[7]),
        .I1(u3__0_carry__1_n_7),
        .I2(u3__0_carry__1_n_6),
        .I3(u3__0_carry__1_n_1),
        .O(u3__32_carry__2_i_2_n_0));
  LUT6 #(
    .INIT(64'hB44B4BB44BB4B44B)) 
    u3__32_carry_i_1
       (.I0(u3__0_carry_n_7),
        .I1(rgb_data_in[18]),
        .I2(u3__0_carry_n_6),
        .I3(rgb_data_in[19]),
        .I4(rgb_data_in[3]),
        .I5(rgb_data_in[0]),
        .O(u3__32_carry_i_1_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    u3__32_carry_i_2
       (.I0(rgb_data_in[18]),
        .I1(u3__0_carry_n_7),
        .I2(rgb_data_in[2]),
        .O(u3__32_carry_i_2_n_0));
  (* HLUTNM = "lutpair24" *) 
  LUT2 #(
    .INIT(4'h1)) 
    u3__32_carry_i_3
       (.I0(rgb_data_in[16]),
        .I1(rgb_data_in[0]),
        .O(u3__32_carry_i_3_n_0));
  LUT6 #(
    .INIT(64'h6969966969966969)) 
    u3__32_carry_i_4
       (.I0(u3__32_carry_i_8_n_0),
        .I1(rgb_data_in[19]),
        .I2(u3__0_carry_n_6),
        .I3(rgb_data_in[2]),
        .I4(u3__0_carry_n_7),
        .I5(rgb_data_in[18]),
        .O(u3__32_carry_i_4_n_0));
  LUT6 #(
    .INIT(64'h6969699669969696)) 
    u3__32_carry_i_5
       (.I0(rgb_data_in[2]),
        .I1(u3__0_carry_n_7),
        .I2(rgb_data_in[18]),
        .I3(rgb_data_in[8]),
        .I4(rgb_data_in[1]),
        .I5(rgb_data_in[17]),
        .O(u3__32_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    u3__32_carry_i_6
       (.I0(u3__32_carry_i_3_n_0),
        .I1(rgb_data_in[17]),
        .I2(rgb_data_in[1]),
        .I3(rgb_data_in[8]),
        .O(u3__32_carry_i_6_n_0));
  (* HLUTNM = "lutpair24" *) 
  LUT2 #(
    .INIT(4'h6)) 
    u3__32_carry_i_7
       (.I0(rgb_data_in[16]),
        .I1(rgb_data_in[0]),
        .O(u3__32_carry_i_7_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    u3__32_carry_i_8
       (.I0(rgb_data_in[3]),
        .I1(rgb_data_in[0]),
        .O(u3__32_carry_i_8_n_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 v3__0_carry
       (.CI(1'b0),
        .CO({v3__0_carry_n_0,NLW_v3__0_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(v3__0_carry_i_1_n_0),
        .DI({rgb_data_in[16],v3__0_carry_i_2_n_0,v3__0_carry_i_3_n_0,v3__0_carry_i_4_n_0}),
        .O({v3__0_carry_n_4,v3__0_carry_n_5,v3__0_carry_n_6,v3__0_carry_n_7}),
        .S({v3__0_carry_i_5_n_0,v3__0_carry_i_6_n_0,v3__0_carry_i_7_n_0,v3__0_carry_i_8_n_0}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 v3__0_carry__0
       (.CI(v3__0_carry_n_0),
        .CO({v3__0_carry__0_n_0,NLW_v3__0_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({v3__0_carry__0_i_1_n_0,v3__0_carry__0_i_2_n_0,v3__0_carry__0_i_3_n_0,v3__0_carry__0_i_4_n_0}),
        .O({v3__0_carry__0_n_4,v3__0_carry__0_n_5,v3__0_carry__0_n_6,v3__0_carry__0_n_7}),
        .S({v3__0_carry__0_i_5_n_0,v3__0_carry__0_i_6_n_0,v3__0_carry__0_i_7_n_0,v3__0_carry__0_i_8_n_0}));
  LUT3 #(
    .INIT(8'h2B)) 
    v3__0_carry__0_i_1
       (.I0(rgb_data_in[19]),
        .I1(rgb_data_in[15]),
        .I2(rgb_data_in[14]),
        .O(v3__0_carry__0_i_1_n_0));
  (* HLUTNM = "lutpair1" *) 
  LUT3 #(
    .INIT(8'h71)) 
    v3__0_carry__0_i_2
       (.I0(rgb_data_in[13]),
        .I1(rgb_data_in[14]),
        .I2(rgb_data_in[18]),
        .O(v3__0_carry__0_i_2_n_0));
  (* HLUTNM = "lutpair0" *) 
  LUT3 #(
    .INIT(8'h2B)) 
    v3__0_carry__0_i_3
       (.I0(rgb_data_in[17]),
        .I1(rgb_data_in[13]),
        .I2(rgb_data_in[12]),
        .O(v3__0_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    v3__0_carry__0_i_4
       (.I0(rgb_data_in[11]),
        .I1(rgb_data_in[12]),
        .O(v3__0_carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'h42BD)) 
    v3__0_carry__0_i_5
       (.I0(rgb_data_in[14]),
        .I1(rgb_data_in[19]),
        .I2(rgb_data_in[15]),
        .I3(rgb_data_in[20]),
        .O(v3__0_carry__0_i_5_n_0));
  LUT4 #(
    .INIT(16'h6996)) 
    v3__0_carry__0_i_6
       (.I0(v3__0_carry__0_i_2_n_0),
        .I1(rgb_data_in[14]),
        .I2(rgb_data_in[15]),
        .I3(rgb_data_in[19]),
        .O(v3__0_carry__0_i_6_n_0));
  (* HLUTNM = "lutpair1" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    v3__0_carry__0_i_7
       (.I0(rgb_data_in[13]),
        .I1(rgb_data_in[14]),
        .I2(rgb_data_in[18]),
        .I3(v3__0_carry__0_i_3_n_0),
        .O(v3__0_carry__0_i_7_n_0));
  (* HLUTNM = "lutpair0" *) 
  LUT4 #(
    .INIT(16'h9699)) 
    v3__0_carry__0_i_8
       (.I0(rgb_data_in[17]),
        .I1(rgb_data_in[13]),
        .I2(rgb_data_in[12]),
        .I3(rgb_data_in[11]),
        .O(v3__0_carry__0_i_8_n_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 v3__0_carry__1
       (.CI(v3__0_carry__0_n_0),
        .CO({v3__0_carry__1_n_0,NLW_v3__0_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,rgb_data_in[23:21]}),
        .O({NLW_v3__0_carry__1_O_UNCONNECTED[3],v3__0_carry__1_n_5,v3__0_carry__1_n_6,v3__0_carry__1_n_7}),
        .S({1'b1,v3__0_carry__1_i_1_n_0,v3__0_carry__1_i_2_n_0,v3__0_carry__1_i_3_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    v3__0_carry__1_i_1
       (.I0(rgb_data_in[23]),
        .O(v3__0_carry__1_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    v3__0_carry__1_i_2
       (.I0(rgb_data_in[22]),
        .O(v3__0_carry__1_i_2_n_0));
  LUT3 #(
    .INIT(8'h2D)) 
    v3__0_carry__1_i_3
       (.I0(rgb_data_in[15]),
        .I1(rgb_data_in[20]),
        .I2(rgb_data_in[21]),
        .O(v3__0_carry__1_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    v3__0_carry_i_1
       (.I0(rgb_data_in[8]),
        .O(v3__0_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    v3__0_carry_i_2
       (.I0(rgb_data_in[11]),
        .O(v3__0_carry_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    v3__0_carry_i_3
       (.I0(rgb_data_in[10]),
        .O(v3__0_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    v3__0_carry_i_4
       (.I0(rgb_data_in[9]),
        .O(v3__0_carry_i_4_n_0));
  LUT3 #(
    .INIT(8'h96)) 
    v3__0_carry_i_5
       (.I0(rgb_data_in[11]),
        .I1(rgb_data_in[12]),
        .I2(rgb_data_in[16]),
        .O(v3__0_carry_i_5_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    v3__0_carry_i_6
       (.I0(rgb_data_in[11]),
        .I1(rgb_data_in[10]),
        .O(v3__0_carry_i_6_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    v3__0_carry_i_7
       (.I0(rgb_data_in[10]),
        .I1(rgb_data_in[9]),
        .O(v3__0_carry_i_7_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    v3__0_carry_i_8
       (.I0(rgb_data_in[9]),
        .I1(rgb_data_in[8]),
        .O(v3__0_carry_i_8_n_0));
  (* OPT_MODIFIED = "PROPCONST SWEEP" *) 
  CARRY4 v3__29_carry
       (.CI(1'b0),
        .CO({v3__29_carry_n_0,NLW_v3__29_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({rgb_data_in[17:16],v3__0_carry_n_7,1'b0}),
        .O(NLW_v3__29_carry_O_UNCONNECTED[3:0]),
        .S({v3__29_carry_i_1_n_0,v3__29_carry_i_2_n_0,v3__29_carry_i_3_n_0,rgb_data_in[8]}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 v3__29_carry__0
       (.CI(v3__29_carry_n_0),
        .CO({v3__29_carry__0_n_0,NLW_v3__29_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({v3__29_carry__0_i_1_n_0,v3__29_carry__0_i_2_n_0,v3__29_carry__0_i_3_n_0,v3__29_carry__0_i_4_n_0}),
        .O({v3__29_carry__0_n_4,v3__29_carry__0_n_5,v3__29_carry__0_n_6,NLW_v3__29_carry__0_O_UNCONNECTED[0]}),
        .S({v3__29_carry__0_i_5_n_0,v3__29_carry__0_i_6_n_0,v3__29_carry__0_i_7_n_0,v3__29_carry__0_i_8_n_0}));
  (* HLUTNM = "lutpair3" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    v3__29_carry__0_i_1
       (.I0(rgb_data_in[2]),
        .I1(v3__0_carry__0_n_6),
        .I2(rgb_data_in[20]),
        .O(v3__29_carry__0_i_1_n_0));
  (* HLUTNM = "lutpair2" *) 
  LUT3 #(
    .INIT(8'hD4)) 
    v3__29_carry__0_i_2
       (.I0(rgb_data_in[1]),
        .I1(v3__0_carry__0_n_7),
        .I2(rgb_data_in[19]),
        .O(v3__29_carry__0_i_2_n_0));
  (* HLUTNM = "lutpair25" *) 
  LUT2 #(
    .INIT(4'hE)) 
    v3__29_carry__0_i_3
       (.I0(rgb_data_in[18]),
        .I1(v3__0_carry_n_4),
        .O(v3__29_carry__0_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    v3__29_carry__0_i_4
       (.I0(rgb_data_in[0]),
        .O(v3__29_carry__0_i_4_n_0));
  (* HLUTNM = "lutpair4" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    v3__29_carry__0_i_5
       (.I0(rgb_data_in[21]),
        .I1(rgb_data_in[3]),
        .I2(v3__0_carry__0_n_5),
        .I3(v3__29_carry__0_i_1_n_0),
        .O(v3__29_carry__0_i_5_n_0));
  (* HLUTNM = "lutpair3" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    v3__29_carry__0_i_6
       (.I0(rgb_data_in[2]),
        .I1(v3__0_carry__0_n_6),
        .I2(rgb_data_in[20]),
        .I3(v3__29_carry__0_i_2_n_0),
        .O(v3__29_carry__0_i_6_n_0));
  (* HLUTNM = "lutpair2" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    v3__29_carry__0_i_7
       (.I0(rgb_data_in[1]),
        .I1(v3__0_carry__0_n_7),
        .I2(rgb_data_in[19]),
        .I3(v3__29_carry__0_i_3_n_0),
        .O(v3__29_carry__0_i_7_n_0));
  (* HLUTNM = "lutpair25" *) 
  LUT3 #(
    .INIT(8'h96)) 
    v3__29_carry__0_i_8
       (.I0(rgb_data_in[18]),
        .I1(v3__0_carry_n_4),
        .I2(rgb_data_in[0]),
        .O(v3__29_carry__0_i_8_n_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 v3__29_carry__1
       (.CI(v3__29_carry__0_n_0),
        .CO({v3__29_carry__1_n_0,NLW_v3__29_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({v3__29_carry__1_i_1_n_0,v3__29_carry__1_i_2_n_0,v3__29_carry__1_i_3_n_0,v3__29_carry__1_i_4_n_0}),
        .O({v3__29_carry__1_n_4,v3__29_carry__1_n_5,v3__29_carry__1_n_6,v3__29_carry__1_n_7}),
        .S({v3__29_carry__1_i_5_n_0,v3__29_carry__1_i_6_n_0,v3__29_carry__1_i_7_n_0,v3__29_carry__1_i_8_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    v3__29_carry__1_i_1
       (.I0(v3__0_carry__1_n_6),
        .I1(rgb_data_in[6]),
        .O(v3__29_carry__1_i_1_n_0));
  LUT3 #(
    .INIT(8'hB2)) 
    v3__29_carry__1_i_2
       (.I0(rgb_data_in[23]),
        .I1(rgb_data_in[5]),
        .I2(v3__0_carry__1_n_7),
        .O(v3__29_carry__1_i_2_n_0));
  (* HLUTNM = "lutpair5" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    v3__29_carry__1_i_3
       (.I0(rgb_data_in[22]),
        .I1(rgb_data_in[4]),
        .I2(v3__0_carry__0_n_4),
        .O(v3__29_carry__1_i_3_n_0));
  (* HLUTNM = "lutpair4" *) 
  LUT3 #(
    .INIT(8'hB2)) 
    v3__29_carry__1_i_4
       (.I0(rgb_data_in[21]),
        .I1(rgb_data_in[3]),
        .I2(v3__0_carry__0_n_5),
        .O(v3__29_carry__1_i_4_n_0));
  LUT4 #(
    .INIT(16'hB44B)) 
    v3__29_carry__1_i_5
       (.I0(rgb_data_in[6]),
        .I1(v3__0_carry__1_n_6),
        .I2(rgb_data_in[7]),
        .I3(v3__0_carry__1_n_5),
        .O(v3__29_carry__1_i_5_n_0));
  LUT5 #(
    .INIT(32'h4DB2B24D)) 
    v3__29_carry__1_i_6
       (.I0(v3__0_carry__1_n_7),
        .I1(rgb_data_in[5]),
        .I2(rgb_data_in[23]),
        .I3(rgb_data_in[6]),
        .I4(v3__0_carry__1_n_6),
        .O(v3__29_carry__1_i_6_n_0));
  LUT4 #(
    .INIT(16'h9669)) 
    v3__29_carry__1_i_7
       (.I0(v3__29_carry__1_i_3_n_0),
        .I1(rgb_data_in[23]),
        .I2(rgb_data_in[5]),
        .I3(v3__0_carry__1_n_7),
        .O(v3__29_carry__1_i_7_n_0));
  (* HLUTNM = "lutpair5" *) 
  LUT4 #(
    .INIT(16'h9669)) 
    v3__29_carry__1_i_8
       (.I0(rgb_data_in[22]),
        .I1(rgb_data_in[4]),
        .I2(v3__0_carry__0_n_4),
        .I3(v3__29_carry__1_i_4_n_0),
        .O(v3__29_carry__1_i_8_n_0));
  CARRY4 v3__29_carry__2
       (.CI(v3__29_carry__1_n_0),
        .CO({NLW_v3__29_carry__2_CO_UNCONNECTED[3:2],v3__29_carry__2_n_2,NLW_v3__29_carry__2_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,v3__0_carry__1_n_0}),
        .O({NLW_v3__29_carry__2_O_UNCONNECTED[3:1],v3__29_carry__2_n_7}),
        .S({1'b0,1'b0,1'b1,v3__29_carry__2_i_1_n_0}));
  LUT3 #(
    .INIT(8'hB4)) 
    v3__29_carry__2_i_1
       (.I0(rgb_data_in[7]),
        .I1(v3__0_carry__1_n_5),
        .I2(v3__0_carry__1_n_0),
        .O(v3__29_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    v3__29_carry_i_1
       (.I0(rgb_data_in[17]),
        .I1(v3__0_carry_n_5),
        .O(v3__29_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    v3__29_carry_i_2
       (.I0(rgb_data_in[16]),
        .I1(v3__0_carry_n_6),
        .O(v3__29_carry_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    v3__29_carry_i_3
       (.I0(v3__0_carry_n_7),
        .O(v3__29_carry_i_3_n_0));
  (* OPT_MODIFIED = "PROPCONST SWEEP" *) 
  CARRY4 y3__1_carry
       (.CI(1'b0),
        .CO({y3__1_carry_n_0,NLW_y3__1_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({y3__1_carry_i_1_n_0,rgb_data_in[16],rgb_data_in[8],1'b0}),
        .O({y3__1_carry_n_4,y3__1_carry_n_5,y3__1_carry_n_6,y3__1_carry_n_7}),
        .S({y3__1_carry_i_2_n_0,y3__1_carry_i_3_n_0,y3__1_carry_i_4_n_0,rgb_data_in[1]}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 y3__1_carry__0
       (.CI(y3__1_carry_n_0),
        .CO({y3__1_carry__0_n_0,NLW_y3__1_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({y3__1_carry__0_i_1_n_0,y3__1_carry__0_i_2_n_0,y3__1_carry__0_i_3_n_0,y3__1_carry__0_i_4_n_0}),
        .O({y3__1_carry__0_n_4,y3__1_carry__0_n_5,y3__1_carry__0_n_6,y3__1_carry__0_n_7}),
        .S({y3__1_carry__0_i_5_n_0,y3__1_carry__0_i_6_n_0,y3__1_carry__0_i_7_n_0,y3__1_carry__0_i_8_n_0}));
  LUT3 #(
    .INIT(8'hE8)) 
    y3__1_carry__0_i_1
       (.I0(rgb_data_in[13]),
        .I1(rgb_data_in[7]),
        .I2(rgb_data_in[20]),
        .O(y3__1_carry__0_i_1_n_0));
  (* HLUTNM = "lutpair8" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    y3__1_carry__0_i_2
       (.I0(rgb_data_in[12]),
        .I1(rgb_data_in[6]),
        .I2(rgb_data_in[19]),
        .O(y3__1_carry__0_i_2_n_0));
  (* HLUTNM = "lutpair7" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    y3__1_carry__0_i_3
       (.I0(rgb_data_in[5]),
        .I1(rgb_data_in[18]),
        .I2(rgb_data_in[11]),
        .O(y3__1_carry__0_i_3_n_0));
  (* HLUTNM = "lutpair6" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    y3__1_carry__0_i_4
       (.I0(rgb_data_in[10]),
        .I1(rgb_data_in[4]),
        .I2(rgb_data_in[17]),
        .O(y3__1_carry__0_i_4_n_0));
  LUT5 #(
    .INIT(32'hE81717E8)) 
    y3__1_carry__0_i_5
       (.I0(rgb_data_in[20]),
        .I1(rgb_data_in[7]),
        .I2(rgb_data_in[13]),
        .I3(rgb_data_in[14]),
        .I4(rgb_data_in[21]),
        .O(y3__1_carry__0_i_5_n_0));
  LUT4 #(
    .INIT(16'h6996)) 
    y3__1_carry__0_i_6
       (.I0(y3__1_carry__0_i_2_n_0),
        .I1(rgb_data_in[13]),
        .I2(rgb_data_in[7]),
        .I3(rgb_data_in[20]),
        .O(y3__1_carry__0_i_6_n_0));
  (* HLUTNM = "lutpair8" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    y3__1_carry__0_i_7
       (.I0(rgb_data_in[12]),
        .I1(rgb_data_in[6]),
        .I2(rgb_data_in[19]),
        .I3(y3__1_carry__0_i_3_n_0),
        .O(y3__1_carry__0_i_7_n_0));
  (* HLUTNM = "lutpair7" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    y3__1_carry__0_i_8
       (.I0(rgb_data_in[5]),
        .I1(rgb_data_in[18]),
        .I2(rgb_data_in[11]),
        .I3(y3__1_carry__0_i_4_n_0),
        .O(y3__1_carry__0_i_8_n_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 y3__1_carry__1
       (.CI(y3__1_carry__0_n_0),
        .CO({NLW_y3__1_carry__1_CO_UNCONNECTED[3],y3__1_carry__1_n_1,NLW_y3__1_carry__1_CO_UNCONNECTED[1:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,y3__1_carry__1_i_1_n_0,y3__1_carry__1_i_2_n_0}),
        .O({NLW_y3__1_carry__1_O_UNCONNECTED[3:2],y3__1_carry__1_n_6,y3__1_carry__1_n_7}),
        .S({1'b0,1'b1,y3__1_carry__1_i_3_n_0,y3__1_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'h8)) 
    y3__1_carry__1_i_1
       (.I0(rgb_data_in[22]),
        .I1(rgb_data_in[15]),
        .O(y3__1_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    y3__1_carry__1_i_2
       (.I0(rgb_data_in[21]),
        .I1(rgb_data_in[14]),
        .O(y3__1_carry__1_i_2_n_0));
  LUT3 #(
    .INIT(8'h78)) 
    y3__1_carry__1_i_3
       (.I0(rgb_data_in[15]),
        .I1(rgb_data_in[22]),
        .I2(rgb_data_in[23]),
        .O(y3__1_carry__1_i_3_n_0));
  LUT4 #(
    .INIT(16'h8778)) 
    y3__1_carry__1_i_4
       (.I0(rgb_data_in[14]),
        .I1(rgb_data_in[21]),
        .I2(rgb_data_in[15]),
        .I3(rgb_data_in[22]),
        .O(y3__1_carry__1_i_4_n_0));
  LUT3 #(
    .INIT(8'h96)) 
    y3__1_carry_i_1
       (.I0(rgb_data_in[17]),
        .I1(rgb_data_in[4]),
        .I2(rgb_data_in[10]),
        .O(y3__1_carry_i_1_n_0));
  (* HLUTNM = "lutpair6" *) 
  LUT5 #(
    .INIT(32'h69969696)) 
    y3__1_carry_i_2
       (.I0(rgb_data_in[10]),
        .I1(rgb_data_in[4]),
        .I2(rgb_data_in[17]),
        .I3(rgb_data_in[3]),
        .I4(rgb_data_in[9]),
        .O(y3__1_carry_i_2_n_0));
  LUT3 #(
    .INIT(8'h96)) 
    y3__1_carry_i_3
       (.I0(rgb_data_in[3]),
        .I1(rgb_data_in[9]),
        .I2(rgb_data_in[16]),
        .O(y3__1_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    y3__1_carry_i_4
       (.I0(rgb_data_in[8]),
        .I1(rgb_data_in[2]),
        .O(y3__1_carry_i_4_n_0));
  (* OPT_MODIFIED = "PROPCONST SWEEP" *) 
  CARRY4 y3__33_carry
       (.CI(1'b0),
        .CO({y3__33_carry_n_0,NLW_y3__33_carry_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({y3__33_carry_i_1_n_0,y3__33_carry_i_2_n_0,y3__33_carry_i_3_n_0,1'b0}),
        .O(NLW_y3__33_carry_O_UNCONNECTED[3:0]),
        .S({y3__33_carry_i_4_n_0,y3__33_carry_i_5_n_0,y3__33_carry_i_6_n_0,y3__33_carry_i_7_n_0}));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 y3__33_carry__0
       (.CI(y3__33_carry_n_0),
        .CO({y3__33_carry__0_n_0,NLW_y3__33_carry__0_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({y3__33_carry__0_i_1_n_0,y3__33_carry__0_i_2_n_0,y3__33_carry__0_i_3_n_0,y3__33_carry__0_i_4_n_0}),
        .O({y3__33_carry__0_n_4,y3__33_carry__0_n_5,y3__33_carry__0_n_6,y3__33_carry__0_n_7}),
        .S({y3__33_carry__0_i_5_n_0,y3__33_carry__0_i_6_n_0,y3__33_carry__0_i_7_n_0,y3__33_carry__0_i_8_n_0}));
  LUT5 #(
    .INIT(32'hBBB2B222)) 
    y3__33_carry__0_i_1
       (.I0(rgb_data_in[6]),
        .I1(y3__33_carry__0_i_9_n_0),
        .I2(rgb_data_in[21]),
        .I3(y3__1_carry__0_n_6),
        .I4(rgb_data_in[2]),
        .O(y3__33_carry__0_i_1_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    y3__33_carry__0_i_10
       (.I0(rgb_data_in[2]),
        .I1(y3__1_carry__0_n_6),
        .I2(rgb_data_in[21]),
        .O(y3__33_carry__0_i_10_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    y3__33_carry__0_i_11
       (.I0(rgb_data_in[1]),
        .I1(y3__1_carry__0_n_7),
        .I2(rgb_data_in[20]),
        .O(y3__33_carry__0_i_11_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    y3__33_carry__0_i_12
       (.I0(rgb_data_in[4]),
        .I1(y3__1_carry__0_n_4),
        .I2(rgb_data_in[23]),
        .O(y3__33_carry__0_i_12_n_0));
  LUT5 #(
    .INIT(32'hBBB2B222)) 
    y3__33_carry__0_i_2
       (.I0(rgb_data_in[5]),
        .I1(y3__33_carry__0_i_10_n_0),
        .I2(rgb_data_in[20]),
        .I3(y3__1_carry__0_n_7),
        .I4(rgb_data_in[1]),
        .O(y3__33_carry__0_i_2_n_0));
  LUT5 #(
    .INIT(32'hDDD4D444)) 
    y3__33_carry__0_i_3
       (.I0(y3__33_carry__0_i_11_n_0),
        .I1(rgb_data_in[4]),
        .I2(rgb_data_in[19]),
        .I3(y3__1_carry_n_4),
        .I4(rgb_data_in[0]),
        .O(y3__33_carry__0_i_3_n_0));
  LUT5 #(
    .INIT(32'h17E8E817)) 
    y3__33_carry__0_i_4
       (.I0(rgb_data_in[0]),
        .I1(y3__1_carry_n_4),
        .I2(rgb_data_in[19]),
        .I3(y3__33_carry__0_i_11_n_0),
        .I4(rgb_data_in[4]),
        .O(y3__33_carry__0_i_4_n_0));
  LUT6 #(
    .INIT(64'hA995566A566AA995)) 
    y3__33_carry__0_i_5
       (.I0(y3__33_carry__0_i_1_n_0),
        .I1(rgb_data_in[22]),
        .I2(y3__1_carry__0_n_5),
        .I3(rgb_data_in[3]),
        .I4(rgb_data_in[7]),
        .I5(y3__33_carry__0_i_12_n_0),
        .O(y3__33_carry__0_i_5_n_0));
  LUT6 #(
    .INIT(64'hA995566A566AA995)) 
    y3__33_carry__0_i_6
       (.I0(y3__33_carry__0_i_2_n_0),
        .I1(rgb_data_in[21]),
        .I2(y3__1_carry__0_n_6),
        .I3(rgb_data_in[2]),
        .I4(rgb_data_in[6]),
        .I5(y3__33_carry__0_i_9_n_0),
        .O(y3__33_carry__0_i_6_n_0));
  LUT6 #(
    .INIT(64'hA995566A566AA995)) 
    y3__33_carry__0_i_7
       (.I0(y3__33_carry__0_i_3_n_0),
        .I1(rgb_data_in[20]),
        .I2(y3__1_carry__0_n_7),
        .I3(rgb_data_in[1]),
        .I4(rgb_data_in[5]),
        .I5(y3__33_carry__0_i_10_n_0),
        .O(y3__33_carry__0_i_7_n_0));
  LUT6 #(
    .INIT(64'h9666666966696999)) 
    y3__33_carry__0_i_8
       (.I0(rgb_data_in[4]),
        .I1(y3__33_carry__0_i_11_n_0),
        .I2(rgb_data_in[0]),
        .I3(y3__1_carry_n_4),
        .I4(rgb_data_in[19]),
        .I5(rgb_data_in[3]),
        .O(y3__33_carry__0_i_8_n_0));
  LUT3 #(
    .INIT(8'h69)) 
    y3__33_carry__0_i_9
       (.I0(rgb_data_in[3]),
        .I1(y3__1_carry__0_n_5),
        .I2(rgb_data_in[22]),
        .O(y3__33_carry__0_i_9_n_0));
  (* OPT_MODIFIED = "SWEEP" *) 
  CARRY4 y3__33_carry__1
       (.CI(y3__33_carry__0_n_0),
        .CO({y3__33_carry__1_n_0,NLW_y3__33_carry__1_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({y3__33_carry__1_i_1_n_0,y3__33_carry__1_i_2_n_0,y3__33_carry__1_i_3_n_0,y3__33_carry__1_i_4_n_0}),
        .O({y3__33_carry__1_n_4,y3__33_carry__1_n_5,y3__33_carry__1_n_6,y3__33_carry__1_n_7}),
        .S({y3__33_carry__1_i_5_n_0,y3__33_carry__1_i_6_n_0,y3__33_carry__1_i_7_n_0,y3__33_carry__1_i_8_n_0}));
  LUT2 #(
    .INIT(4'h8)) 
    y3__33_carry__1_i_1
       (.I0(rgb_data_in[7]),
        .I1(y3__1_carry__1_n_1),
        .O(y3__33_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    y3__33_carry__1_i_2
       (.I0(rgb_data_in[6]),
        .I1(y3__1_carry__1_n_6),
        .O(y3__33_carry__1_i_2_n_0));
  LUT5 #(
    .INIT(32'hFFE8E800)) 
    y3__33_carry__1_i_3
       (.I0(rgb_data_in[23]),
        .I1(y3__1_carry__0_n_4),
        .I2(rgb_data_in[4]),
        .I3(rgb_data_in[5]),
        .I4(y3__1_carry__1_n_7),
        .O(y3__33_carry__1_i_3_n_0));
  LUT5 #(
    .INIT(32'hE800FFE8)) 
    y3__33_carry__1_i_4
       (.I0(rgb_data_in[22]),
        .I1(y3__1_carry__0_n_5),
        .I2(rgb_data_in[3]),
        .I3(rgb_data_in[7]),
        .I4(y3__33_carry__0_i_12_n_0),
        .O(y3__33_carry__1_i_4_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    y3__33_carry__1_i_5
       (.I0(rgb_data_in[7]),
        .I1(y3__1_carry__1_n_1),
        .O(y3__33_carry__1_i_5_n_0));
  LUT4 #(
    .INIT(16'h8778)) 
    y3__33_carry__1_i_6
       (.I0(y3__1_carry__1_n_6),
        .I1(rgb_data_in[6]),
        .I2(y3__1_carry__1_n_1),
        .I3(rgb_data_in[7]),
        .O(y3__33_carry__1_i_6_n_0));
  LUT3 #(
    .INIT(8'h96)) 
    y3__33_carry__1_i_7
       (.I0(y3__33_carry__1_i_3_n_0),
        .I1(y3__1_carry__1_n_6),
        .I2(rgb_data_in[6]),
        .O(y3__33_carry__1_i_7_n_0));
  LUT6 #(
    .INIT(64'h566AA995A995566A)) 
    y3__33_carry__1_i_8
       (.I0(y3__33_carry__1_i_4_n_0),
        .I1(rgb_data_in[23]),
        .I2(y3__1_carry__0_n_4),
        .I3(rgb_data_in[4]),
        .I4(rgb_data_in[5]),
        .I5(y3__1_carry__1_n_7),
        .O(y3__33_carry__1_i_8_n_0));
  LUT4 #(
    .INIT(16'h6996)) 
    y3__33_carry_i_1
       (.I0(rgb_data_in[19]),
        .I1(y3__1_carry_n_4),
        .I2(rgb_data_in[0]),
        .I3(rgb_data_in[3]),
        .O(y3__33_carry_i_1_n_0));
  (* HLUTNM = "lutpair10" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    y3__33_carry_i_2
       (.I0(y3__1_carry_n_6),
        .I1(rgb_data_in[1]),
        .I2(rgb_data_in[17]),
        .O(y3__33_carry_i_2_n_0));
  (* HLUTNM = "lutpair9" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    y3__33_carry_i_3
       (.I0(y3__1_carry_n_7),
        .I1(rgb_data_in[16]),
        .I2(rgb_data_in[0]),
        .O(y3__33_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'h566A)) 
    y3__33_carry_i_4
       (.I0(y3__33_carry_i_1_n_0),
        .I1(rgb_data_in[2]),
        .I2(rgb_data_in[18]),
        .I3(y3__1_carry_n_5),
        .O(y3__33_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'h6996)) 
    y3__33_carry_i_5
       (.I0(y3__33_carry_i_2_n_0),
        .I1(rgb_data_in[18]),
        .I2(y3__1_carry_n_5),
        .I3(rgb_data_in[2]),
        .O(y3__33_carry_i_5_n_0));
  (* HLUTNM = "lutpair10" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    y3__33_carry_i_6
       (.I0(y3__1_carry_n_6),
        .I1(rgb_data_in[1]),
        .I2(rgb_data_in[17]),
        .I3(y3__33_carry_i_3_n_0),
        .O(y3__33_carry_i_6_n_0));
  (* HLUTNM = "lutpair9" *) 
  LUT3 #(
    .INIT(8'h96)) 
    y3__33_carry_i_7
       (.I0(y3__1_carry_n_7),
        .I1(rgb_data_in[16]),
        .I2(rgb_data_in[0]),
        .O(y3__33_carry_i_7_n_0));
endmodule

(* CHECK_LICENSE_TYPE = "system_ilmb_bram_if_cntlr_0,lmb_bram_if_cntlr,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "lmb_bram_if_cntlr,Vivado 2020.1" *) 
module system_ilmb_bram_if_cntlr_0
   (LMB_Clk,
    LMB_Rst,
    LMB_ABus,
    LMB_WriteDBus,
    LMB_AddrStrobe,
    LMB_ReadStrobe,
    LMB_WriteStrobe,
    LMB_BE,
    Sl_DBus,
    Sl_Ready,
    Sl_Wait,
    Sl_UE,
    Sl_CE,
    BRAM_Rst_A,
    BRAM_Clk_A,
    BRAM_Addr_A,
    BRAM_EN_A,
    BRAM_WEN_A,
    BRAM_Dout_A,
    BRAM_Din_A);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLK.LMB_Clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME CLK.LMB_Clk, ASSOCIATED_BUSIF SLMB:SLMB1:SLMB2:SLMB3, ASSOCIATED_RESET LMB_Rst, FREQ_HZ 200000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1, INSERT_VIP 0" *) input LMB_Clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 RST.LMB_Rst RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME RST.LMB_Rst, POLARITY ACTIVE_HIGH, TYPE INTERCONNECT, INSERT_VIP 0" *) input LMB_Rst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB ABUS" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME SLMB, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_WRITE, PROTOCOL STANDARD" *) input [0:31]LMB_ABus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB WRITEDBUS" *) input [0:31]LMB_WriteDBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB ADDRSTROBE" *) input LMB_AddrStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB READSTROBE" *) input LMB_ReadStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB WRITESTROBE" *) input LMB_WriteStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB BE" *) input [0:3]LMB_BE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB READDBUS" *) output [0:31]Sl_DBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB READY" *) output Sl_Ready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB WAIT" *) output Sl_Wait;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB UE" *) output Sl_UE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 SLMB CE" *) output Sl_CE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME BRAM_PORT, MEM_SIZE 8192, MASTER_TYPE BRAM_CTRL, MEM_WIDTH 32, MEM_ECC NONE, READ_LATENCY 1" *) output BRAM_Rst_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT CLK" *) output BRAM_Clk_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT ADDR" *) output [0:31]BRAM_Addr_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT EN" *) output BRAM_EN_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT WE" *) output [0:3]BRAM_WEN_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT DIN" *) output [0:31]BRAM_Dout_A;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORT DOUT" *) input [0:31]BRAM_Din_A;

  wire [0:31]BRAM_Addr_A;
  wire BRAM_Clk_A;
  wire [0:31]BRAM_Din_A;
  wire [0:31]BRAM_Dout_A;
  wire BRAM_EN_A;
  wire [0:3]BRAM_WEN_A;
  wire [0:31]LMB_ABus;
  wire LMB_AddrStrobe;
  wire LMB_Clk;
  wire LMB_Rst;
  wire [0:31]LMB_WriteDBus;
  wire [0:31]Sl_DBus;
  wire Sl_Ready;
  wire NLW_U0_BRAM_Rst_A_UNCONNECTED;
  wire NLW_U0_CE_UNCONNECTED;
  wire NLW_U0_Interrupt_UNCONNECTED;
  wire NLW_U0_LMB1_AddrStrobe_UNCONNECTED;
  wire NLW_U0_LMB1_ReadStrobe_UNCONNECTED;
  wire NLW_U0_LMB1_WriteStrobe_UNCONNECTED;
  wire NLW_U0_LMB2_AddrStrobe_UNCONNECTED;
  wire NLW_U0_LMB2_ReadStrobe_UNCONNECTED;
  wire NLW_U0_LMB2_WriteStrobe_UNCONNECTED;
  wire NLW_U0_LMB3_AddrStrobe_UNCONNECTED;
  wire NLW_U0_LMB3_ReadStrobe_UNCONNECTED;
  wire NLW_U0_LMB3_WriteStrobe_UNCONNECTED;
  wire NLW_U0_LMB_ReadStrobe_UNCONNECTED;
  wire NLW_U0_LMB_WriteStrobe_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_ACLK_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_ARESETN_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_ARREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_ARVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_AWREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_AWVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_BREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_BVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_RREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_RVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_WREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_CTRL_WVALID_UNCONNECTED;
  wire NLW_U0_Sl1_CE_UNCONNECTED;
  wire NLW_U0_Sl1_Ready_UNCONNECTED;
  wire NLW_U0_Sl1_UE_UNCONNECTED;
  wire NLW_U0_Sl1_Wait_UNCONNECTED;
  wire NLW_U0_Sl2_CE_UNCONNECTED;
  wire NLW_U0_Sl2_Ready_UNCONNECTED;
  wire NLW_U0_Sl2_UE_UNCONNECTED;
  wire NLW_U0_Sl2_Wait_UNCONNECTED;
  wire NLW_U0_Sl3_CE_UNCONNECTED;
  wire NLW_U0_Sl3_Ready_UNCONNECTED;
  wire NLW_U0_Sl3_UE_UNCONNECTED;
  wire NLW_U0_Sl3_Wait_UNCONNECTED;
  wire NLW_U0_Sl_CE_UNCONNECTED;
  wire NLW_U0_Sl_UE_UNCONNECTED;
  wire NLW_U0_Sl_Wait_UNCONNECTED;
  wire NLW_U0_UE_UNCONNECTED;
  wire [0:31]NLW_U0_BRAM_Addr_A_UNCONNECTED;
  wire [0:31]NLW_U0_LMB1_ABus_UNCONNECTED;
  wire [0:3]NLW_U0_LMB1_BE_UNCONNECTED;
  wire [0:31]NLW_U0_LMB1_WriteDBus_UNCONNECTED;
  wire [0:31]NLW_U0_LMB2_ABus_UNCONNECTED;
  wire [0:3]NLW_U0_LMB2_BE_UNCONNECTED;
  wire [0:31]NLW_U0_LMB2_WriteDBus_UNCONNECTED;
  wire [0:31]NLW_U0_LMB3_ABus_UNCONNECTED;
  wire [0:3]NLW_U0_LMB3_BE_UNCONNECTED;
  wire [0:31]NLW_U0_LMB3_WriteDBus_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_ABus_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_BE_UNCONNECTED;
  wire [31:0]NLW_U0_S_AXI_CTRL_ARADDR_UNCONNECTED;
  wire [31:0]NLW_U0_S_AXI_CTRL_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_S_AXI_CTRL_BRESP_UNCONNECTED;
  wire [31:0]NLW_U0_S_AXI_CTRL_RDATA_UNCONNECTED;
  wire [1:0]NLW_U0_S_AXI_CTRL_RRESP_UNCONNECTED;
  wire [31:0]NLW_U0_S_AXI_CTRL_WDATA_UNCONNECTED;
  wire [3:0]NLW_U0_S_AXI_CTRL_WSTRB_UNCONNECTED;
  wire [0:31]NLW_U0_Sl1_DBus_UNCONNECTED;
  wire [0:31]NLW_U0_Sl2_DBus_UNCONNECTED;
  wire [0:31]NLW_U0_Sl3_DBus_UNCONNECTED;

  (* C_BASEADDR = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_BRAM_AWIDTH = "32" *) 
  (* C_CE_COUNTER_WIDTH = "0" *) 
  (* C_CE_FAILING_REGISTERS = "0" *) 
  (* C_ECC = "0" *) 
  (* C_ECC_ONOFF_REGISTER = "0" *) 
  (* C_ECC_ONOFF_RESET_VALUE = "1" *) 
  (* C_ECC_STATUS_REGISTERS = "0" *) 
  (* C_FAMILY = "spartan7" *) 
  (* C_FAULT_INJECT = "0" *) 
  (* C_HIGHADDR = "64'b0000000000000000000000000000000000000000000000000001111111111111" *) 
  (* C_INTERCONNECT = "0" *) 
  (* C_LMB_AWIDTH = "32" *) 
  (* C_LMB_DWIDTH = "32" *) 
  (* C_LMB_PROTOCOL = "0" *) 
  (* C_MASK = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_MASK1 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) 
  (* C_MASK2 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) 
  (* C_MASK3 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) 
  (* C_NUM_LMB = "1" *) 
  (* C_S_AXI_CTRL_ADDR_WIDTH = "32" *) 
  (* C_S_AXI_CTRL_BASEADDR = "32'b11111111111111111111111111111111" *) 
  (* C_S_AXI_CTRL_DATA_WIDTH = "32" *) 
  (* C_S_AXI_CTRL_HIGHADDR = "32'b00000000000000000000000000000000" *) 
  (* C_UE_FAILING_REGISTERS = "0" *) 
  (* C_WRITE_ACCESS = "2" *) 
  system_ilmb_bram_if_cntlr_0__lmb_bram_if_cntlr U0
       (.BRAM_Addr_A({NLW_U0_BRAM_Addr_A_UNCONNECTED[0:18],BRAM_Addr_A[19:29],NLW_U0_BRAM_Addr_A_UNCONNECTED[30:31]}),
        .BRAM_Clk_A(BRAM_Clk_A),
        .BRAM_Din_A(BRAM_Din_A),
        .BRAM_Dout_A(BRAM_Dout_A),
        .BRAM_EN_A(BRAM_EN_A),
        .BRAM_Rst_A(NLW_U0_BRAM_Rst_A_UNCONNECTED),
        .BRAM_WEN_A(BRAM_WEN_A),
        .CE(NLW_U0_CE_UNCONNECTED),
        .Interrupt(NLW_U0_Interrupt_UNCONNECTED),
        .LMB1_ABus(NLW_U0_LMB1_ABus_UNCONNECTED[0:31]),
        .LMB1_AddrStrobe(NLW_U0_LMB1_AddrStrobe_UNCONNECTED),
        .LMB1_BE(NLW_U0_LMB1_BE_UNCONNECTED[0:3]),
        .LMB1_ReadStrobe(NLW_U0_LMB1_ReadStrobe_UNCONNECTED),
        .LMB1_WriteDBus(NLW_U0_LMB1_WriteDBus_UNCONNECTED[0:31]),
        .LMB1_WriteStrobe(NLW_U0_LMB1_WriteStrobe_UNCONNECTED),
        .LMB2_ABus(NLW_U0_LMB2_ABus_UNCONNECTED[0:31]),
        .LMB2_AddrStrobe(NLW_U0_LMB2_AddrStrobe_UNCONNECTED),
        .LMB2_BE(NLW_U0_LMB2_BE_UNCONNECTED[0:3]),
        .LMB2_ReadStrobe(NLW_U0_LMB2_ReadStrobe_UNCONNECTED),
        .LMB2_WriteDBus(NLW_U0_LMB2_WriteDBus_UNCONNECTED[0:31]),
        .LMB2_WriteStrobe(NLW_U0_LMB2_WriteStrobe_UNCONNECTED),
        .LMB3_ABus(NLW_U0_LMB3_ABus_UNCONNECTED[0:31]),
        .LMB3_AddrStrobe(NLW_U0_LMB3_AddrStrobe_UNCONNECTED),
        .LMB3_BE(NLW_U0_LMB3_BE_UNCONNECTED[0:3]),
        .LMB3_ReadStrobe(NLW_U0_LMB3_ReadStrobe_UNCONNECTED),
        .LMB3_WriteDBus(NLW_U0_LMB3_WriteDBus_UNCONNECTED[0:31]),
        .LMB3_WriteStrobe(NLW_U0_LMB3_WriteStrobe_UNCONNECTED),
        .LMB_ABus({NLW_U0_LMB_ABus_UNCONNECTED[0:18],LMB_ABus[19:29],NLW_U0_LMB_ABus_UNCONNECTED[30:31]}),
        .LMB_AddrStrobe(LMB_AddrStrobe),
        .LMB_BE(NLW_U0_LMB_BE_UNCONNECTED[0:3]),
        .LMB_Clk(LMB_Clk),
        .LMB_ReadStrobe(NLW_U0_LMB_ReadStrobe_UNCONNECTED),
        .LMB_Rst(LMB_Rst),
        .LMB_WriteDBus(LMB_WriteDBus),
        .LMB_WriteStrobe(NLW_U0_LMB_WriteStrobe_UNCONNECTED),
        .S_AXI_CTRL_ACLK(NLW_U0_S_AXI_CTRL_ACLK_UNCONNECTED),
        .S_AXI_CTRL_ARADDR(NLW_U0_S_AXI_CTRL_ARADDR_UNCONNECTED[31:0]),
        .S_AXI_CTRL_ARESETN(NLW_U0_S_AXI_CTRL_ARESETN_UNCONNECTED),
        .S_AXI_CTRL_ARREADY(NLW_U0_S_AXI_CTRL_ARREADY_UNCONNECTED),
        .S_AXI_CTRL_ARVALID(NLW_U0_S_AXI_CTRL_ARVALID_UNCONNECTED),
        .S_AXI_CTRL_AWADDR(NLW_U0_S_AXI_CTRL_AWADDR_UNCONNECTED[31:0]),
        .S_AXI_CTRL_AWREADY(NLW_U0_S_AXI_CTRL_AWREADY_UNCONNECTED),
        .S_AXI_CTRL_AWVALID(NLW_U0_S_AXI_CTRL_AWVALID_UNCONNECTED),
        .S_AXI_CTRL_BREADY(NLW_U0_S_AXI_CTRL_BREADY_UNCONNECTED),
        .S_AXI_CTRL_BRESP(NLW_U0_S_AXI_CTRL_BRESP_UNCONNECTED[1:0]),
        .S_AXI_CTRL_BVALID(NLW_U0_S_AXI_CTRL_BVALID_UNCONNECTED),
        .S_AXI_CTRL_RDATA(NLW_U0_S_AXI_CTRL_RDATA_UNCONNECTED[31:0]),
        .S_AXI_CTRL_RREADY(NLW_U0_S_AXI_CTRL_RREADY_UNCONNECTED),
        .S_AXI_CTRL_RRESP(NLW_U0_S_AXI_CTRL_RRESP_UNCONNECTED[1:0]),
        .S_AXI_CTRL_RVALID(NLW_U0_S_AXI_CTRL_RVALID_UNCONNECTED),
        .S_AXI_CTRL_WDATA(NLW_U0_S_AXI_CTRL_WDATA_UNCONNECTED[31:0]),
        .S_AXI_CTRL_WREADY(NLW_U0_S_AXI_CTRL_WREADY_UNCONNECTED),
        .S_AXI_CTRL_WSTRB(NLW_U0_S_AXI_CTRL_WSTRB_UNCONNECTED[3:0]),
        .S_AXI_CTRL_WVALID(NLW_U0_S_AXI_CTRL_WVALID_UNCONNECTED),
        .Sl1_CE(NLW_U0_Sl1_CE_UNCONNECTED),
        .Sl1_DBus(NLW_U0_Sl1_DBus_UNCONNECTED[0:31]),
        .Sl1_Ready(NLW_U0_Sl1_Ready_UNCONNECTED),
        .Sl1_UE(NLW_U0_Sl1_UE_UNCONNECTED),
        .Sl1_Wait(NLW_U0_Sl1_Wait_UNCONNECTED),
        .Sl2_CE(NLW_U0_Sl2_CE_UNCONNECTED),
        .Sl2_DBus(NLW_U0_Sl2_DBus_UNCONNECTED[0:31]),
        .Sl2_Ready(NLW_U0_Sl2_Ready_UNCONNECTED),
        .Sl2_UE(NLW_U0_Sl2_UE_UNCONNECTED),
        .Sl2_Wait(NLW_U0_Sl2_Wait_UNCONNECTED),
        .Sl3_CE(NLW_U0_Sl3_CE_UNCONNECTED),
        .Sl3_DBus(NLW_U0_Sl3_DBus_UNCONNECTED[0:31]),
        .Sl3_Ready(NLW_U0_Sl3_Ready_UNCONNECTED),
        .Sl3_UE(NLW_U0_Sl3_UE_UNCONNECTED),
        .Sl3_Wait(NLW_U0_Sl3_Wait_UNCONNECTED),
        .Sl_CE(NLW_U0_Sl_CE_UNCONNECTED),
        .Sl_DBus(Sl_DBus),
        .Sl_Ready(Sl_Ready),
        .Sl_UE(NLW_U0_Sl_UE_UNCONNECTED),
        .Sl_Wait(NLW_U0_Sl_Wait_UNCONNECTED),
        .UE(NLW_U0_UE_UNCONNECTED));
endmodule

(* C_BASEADDR = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) (* C_BRAM_AWIDTH = "32" *) (* C_CE_COUNTER_WIDTH = "0" *) 
(* C_CE_FAILING_REGISTERS = "0" *) (* C_ECC = "0" *) (* C_ECC_ONOFF_REGISTER = "0" *) 
(* C_ECC_ONOFF_RESET_VALUE = "1" *) (* C_ECC_STATUS_REGISTERS = "0" *) (* C_FAMILY = "spartan7" *) 
(* C_FAULT_INJECT = "0" *) (* C_HIGHADDR = "64'b0000000000000000000000000000000000000000000000000001111111111111" *) (* C_INTERCONNECT = "0" *) 
(* C_LMB_AWIDTH = "32" *) (* C_LMB_DWIDTH = "32" *) (* C_LMB_PROTOCOL = "0" *) 
(* C_MASK = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) (* C_MASK1 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) (* C_MASK2 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) 
(* C_MASK3 = "64'b0000000000000000000000000000000000000000100000000000000000000000" *) (* C_NUM_LMB = "1" *) (* C_S_AXI_CTRL_ADDR_WIDTH = "32" *) 
(* C_S_AXI_CTRL_BASEADDR = "32'b11111111111111111111111111111111" *) (* C_S_AXI_CTRL_DATA_WIDTH = "32" *) (* C_S_AXI_CTRL_HIGHADDR = "32'b00000000000000000000000000000000" *) 
(* C_UE_FAILING_REGISTERS = "0" *) (* C_WRITE_ACCESS = "2" *) (* ORIG_REF_NAME = "lmb_bram_if_cntlr" *) 
module system_ilmb_bram_if_cntlr_0__lmb_bram_if_cntlr
   (LMB_Clk,
    LMB_Rst,
    LMB_ABus,
    LMB_WriteDBus,
    LMB_AddrStrobe,
    LMB_ReadStrobe,
    LMB_WriteStrobe,
    LMB_BE,
    Sl_DBus,
    Sl_Ready,
    Sl_Wait,
    Sl_UE,
    Sl_CE,
    LMB1_ABus,
    LMB1_WriteDBus,
    LMB1_AddrStrobe,
    LMB1_ReadStrobe,
    LMB1_WriteStrobe,
    LMB1_BE,
    Sl1_DBus,
    Sl1_Ready,
    Sl1_Wait,
    Sl1_UE,
    Sl1_CE,
    LMB2_ABus,
    LMB2_WriteDBus,
    LMB2_AddrStrobe,
    LMB2_ReadStrobe,
    LMB2_WriteStrobe,
    LMB2_BE,
    Sl2_DBus,
    Sl2_Ready,
    Sl2_Wait,
    Sl2_UE,
    Sl2_CE,
    LMB3_ABus,
    LMB3_WriteDBus,
    LMB3_AddrStrobe,
    LMB3_ReadStrobe,
    LMB3_WriteStrobe,
    LMB3_BE,
    Sl3_DBus,
    Sl3_Ready,
    Sl3_Wait,
    Sl3_UE,
    Sl3_CE,
    BRAM_Rst_A,
    BRAM_Clk_A,
    BRAM_Addr_A,
    BRAM_EN_A,
    BRAM_WEN_A,
    BRAM_Dout_A,
    BRAM_Din_A,
    S_AXI_CTRL_ACLK,
    S_AXI_CTRL_ARESETN,
    S_AXI_CTRL_AWADDR,
    S_AXI_CTRL_AWVALID,
    S_AXI_CTRL_AWREADY,
    S_AXI_CTRL_WDATA,
    S_AXI_CTRL_WSTRB,
    S_AXI_CTRL_WVALID,
    S_AXI_CTRL_WREADY,
    S_AXI_CTRL_BRESP,
    S_AXI_CTRL_BVALID,
    S_AXI_CTRL_BREADY,
    S_AXI_CTRL_ARADDR,
    S_AXI_CTRL_ARVALID,
    S_AXI_CTRL_ARREADY,
    S_AXI_CTRL_RDATA,
    S_AXI_CTRL_RRESP,
    S_AXI_CTRL_RVALID,
    S_AXI_CTRL_RREADY,
    UE,
    CE,
    Interrupt);
  input LMB_Clk;
  input LMB_Rst;
  input [0:31]LMB_ABus;
  input [0:31]LMB_WriteDBus;
  input LMB_AddrStrobe;
  input LMB_ReadStrobe;
  input LMB_WriteStrobe;
  input [0:3]LMB_BE;
  output [0:31]Sl_DBus;
  output Sl_Ready;
  output Sl_Wait;
  output Sl_UE;
  output Sl_CE;
  input [0:31]LMB1_ABus;
  input [0:31]LMB1_WriteDBus;
  input LMB1_AddrStrobe;
  input LMB1_ReadStrobe;
  input LMB1_WriteStrobe;
  input [0:3]LMB1_BE;
  output [0:31]Sl1_DBus;
  output Sl1_Ready;
  output Sl1_Wait;
  output Sl1_UE;
  output Sl1_CE;
  input [0:31]LMB2_ABus;
  input [0:31]LMB2_WriteDBus;
  input LMB2_AddrStrobe;
  input LMB2_ReadStrobe;
  input LMB2_WriteStrobe;
  input [0:3]LMB2_BE;
  output [0:31]Sl2_DBus;
  output Sl2_Ready;
  output Sl2_Wait;
  output Sl2_UE;
  output Sl2_CE;
  input [0:31]LMB3_ABus;
  input [0:31]LMB3_WriteDBus;
  input LMB3_AddrStrobe;
  input LMB3_ReadStrobe;
  input LMB3_WriteStrobe;
  input [0:3]LMB3_BE;
  output [0:31]Sl3_DBus;
  output Sl3_Ready;
  output Sl3_Wait;
  output Sl3_UE;
  output Sl3_CE;
  output BRAM_Rst_A;
  output BRAM_Clk_A;
  output [0:31]BRAM_Addr_A;
  output BRAM_EN_A;
  output [0:3]BRAM_WEN_A;
  output [0:31]BRAM_Dout_A;
  input [0:31]BRAM_Din_A;
  input S_AXI_CTRL_ACLK;
  input S_AXI_CTRL_ARESETN;
  input [31:0]S_AXI_CTRL_AWADDR;
  input S_AXI_CTRL_AWVALID;
  output S_AXI_CTRL_AWREADY;
  input [31:0]S_AXI_CTRL_WDATA;
  input [3:0]S_AXI_CTRL_WSTRB;
  input S_AXI_CTRL_WVALID;
  output S_AXI_CTRL_WREADY;
  output [1:0]S_AXI_CTRL_BRESP;
  output S_AXI_CTRL_BVALID;
  input S_AXI_CTRL_BREADY;
  input [31:0]S_AXI_CTRL_ARADDR;
  input S_AXI_CTRL_ARVALID;
  output S_AXI_CTRL_ARREADY;
  output [31:0]S_AXI_CTRL_RDATA;
  output [1:0]S_AXI_CTRL_RRESP;
  output S_AXI_CTRL_RVALID;
  input S_AXI_CTRL_RREADY;
  output UE;
  output CE;
  output Interrupt;

  wire [0:31]BRAM_Din_A;
  wire [0:31]LMB_ABus;
  wire LMB_AddrStrobe;
  wire LMB_Clk;
  wire LMB_Rst;
  wire [0:31]LMB_WriteDBus;
  wire \No_ECC.Sl_Rdy_i_1_n_0 ;
  wire \No_ECC.lmb_as_i_1_n_0 ;
  wire Sl_Rdy;
  wire Sl_Ready;
  wire ZERO;
  wire lmb_as;

  assign BRAM_Addr_A[19:29] = LMB_ABus[19:29];
  assign BRAM_Clk_A = LMB_Clk;
  assign BRAM_Dout_A[0:31] = LMB_WriteDBus;
  assign BRAM_EN_A = LMB_AddrStrobe;
  assign BRAM_WEN_A[0] = ZERO;
  assign BRAM_WEN_A[1] = ZERO;
  assign BRAM_WEN_A[2] = ZERO;
  assign BRAM_WEN_A[3] = ZERO;
  assign Sl_DBus[0:31] = BRAM_Din_A;
  (* OPT_MODIFIED = "PROPCONST" *) 
  GND GND_1
       (.G(ZERO));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \No_ECC.Sl_Rdy_i_1 
       (.I0(LMB_Rst),
        .O(\No_ECC.Sl_Rdy_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \No_ECC.Sl_Rdy_reg 
       (.C(LMB_Clk),
        .CE(1'b1),
        .D(\No_ECC.Sl_Rdy_i_1_n_0 ),
        .Q(Sl_Rdy),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \No_ECC.lmb_as_i_1 
       (.I0(LMB_AddrStrobe),
        .I1(LMB_Rst),
        .O(\No_ECC.lmb_as_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \No_ECC.lmb_as_reg 
       (.C(LMB_Clk),
        .CE(1'b1),
        .D(\No_ECC.lmb_as_i_1_n_0 ),
        .Q(lmb_as),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    Sl_Ready_INST_0
       (.I0(lmb_as),
        .I1(Sl_Rdy),
        .O(Sl_Ready));
endmodule

(* CHECK_LICENSE_TYPE = "system_dlmb_v10_0,lmb_v10,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "lmb_v10,Vivado 2020.1" *) 
module system_ilmb_v10_0
   (LMB_Clk,
    SYS_Rst,
    LMB_Rst,
    M_ABus,
    M_ReadStrobe,
    M_WriteStrobe,
    M_AddrStrobe,
    M_DBus,
    M_BE,
    Sl_DBus,
    Sl_Ready,
    Sl_Wait,
    Sl_UE,
    Sl_CE,
    LMB_ABus,
    LMB_ReadStrobe,
    LMB_WriteStrobe,
    LMB_AddrStrobe,
    LMB_ReadDBus,
    LMB_WriteDBus,
    LMB_Ready,
    LMB_Wait,
    LMB_UE,
    LMB_CE,
    LMB_BE);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLK.LMB_Clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME CLK.LMB_Clk, ASSOCIATED_BUSIF LMB_Sl_0:LMB_Sl_1:LMB_Sl_2:LMB_Sl_3:LMB_Sl_4:LMB_Sl_5:LMB_Sl_6:LMB_Sl_7:LMB_Sl_8:LMB_Sl_9:LMB_Sl_10:LMB_Sl_11:LMB_Sl_12:LMB_Sl_13:LMB_Sl_14:LMB_Sl_15:LMB_M, ASSOCIATED_RESET SYS_Rst, FREQ_HZ 200000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1, INSERT_VIP 0" *) input LMB_Clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 RST.SYS_Rst RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME RST.SYS_Rst, POLARITY ACTIVE_HIGH, TYPE INTERCONNECT, INSERT_VIP 0" *) input SYS_Rst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 RST, xilinx.com:interface:lmb:1.0 LMB_M RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME LMB_Sl_0, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_WRITE, PROTOCOL STANDARD, XIL_INTERFACENAME LMB_M, ADDR_WIDTH 32, DATA_WIDTH 32, READ_WRITE_MODE READ_WRITE, PROTOCOL STANDARD" *) output LMB_Rst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M ABUS" *) input [0:31]M_ABus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M READSTROBE" *) input M_ReadStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M WRITESTROBE" *) input M_WriteStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M ADDRSTROBE" *) input M_AddrStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M WRITEDBUS" *) input [0:31]M_DBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M BE" *) input [0:3]M_BE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READDBUS" *) input [0:31]Sl_DBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READY" *) input [0:0]Sl_Ready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WAIT" *) input [0:0]Sl_Wait;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 UE" *) input [0:0]Sl_UE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 CE" *) input [0:0]Sl_CE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 ABUS" *) output [0:31]LMB_ABus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 READSTROBE" *) output LMB_ReadStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WRITESTROBE" *) output LMB_WriteStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 ADDRSTROBE" *) output LMB_AddrStrobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M READDBUS" *) output [0:31]LMB_ReadDBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 WRITEDBUS" *) output [0:31]LMB_WriteDBus;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M READY" *) output LMB_Ready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M WAIT" *) output LMB_Wait;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M UE" *) output LMB_UE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_M CE" *) output LMB_CE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 LMB_Sl_0 BE" *) output [0:3]LMB_BE;

  wire [0:31]LMB_ABus;
  wire LMB_AddrStrobe;
  wire [0:31]LMB_ReadDBus;
  wire LMB_Ready;
  wire [0:31]LMB_WriteDBus;
  wire [0:31]M_ABus;
  wire M_AddrStrobe;
  wire [0:31]M_DBus;
  wire [0:31]Sl_DBus;
  wire [0:0]Sl_Ready;
  wire NLW_U0_LMB_CE_UNCONNECTED;
  wire NLW_U0_LMB_Clk_UNCONNECTED;
  wire NLW_U0_LMB_ReadStrobe_UNCONNECTED;
  wire NLW_U0_LMB_Rst_UNCONNECTED;
  wire NLW_U0_LMB_UE_UNCONNECTED;
  wire NLW_U0_LMB_Wait_UNCONNECTED;
  wire NLW_U0_LMB_WriteStrobe_UNCONNECTED;
  wire NLW_U0_M_ReadStrobe_UNCONNECTED;
  wire NLW_U0_M_WriteStrobe_UNCONNECTED;
  wire NLW_U0_SYS_Rst_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_ABus_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_BE_UNCONNECTED;
  wire [0:31]NLW_U0_M_ABus_UNCONNECTED;
  wire [0:3]NLW_U0_M_BE_UNCONNECTED;
  wire [0:0]NLW_U0_Sl_CE_UNCONNECTED;
  wire [0:0]NLW_U0_Sl_UE_UNCONNECTED;
  wire [0:0]NLW_U0_Sl_Wait_UNCONNECTED;

  (* C_EXT_RESET_HIGH = "1" *) 
  (* C_LMB_AWIDTH = "32" *) 
  (* C_LMB_DWIDTH = "32" *) 
  (* C_LMB_NUM_SLAVES = "1" *) 
  (* C_LMB_PROTOCOL = "0" *) 
  system_ilmb_v10_0__lmb_v10 U0
       (.LMB_ABus({NLW_U0_LMB_ABus_UNCONNECTED[0:18],LMB_ABus[19:29],NLW_U0_LMB_ABus_UNCONNECTED[30:31]}),
        .LMB_AddrStrobe(LMB_AddrStrobe),
        .LMB_BE(NLW_U0_LMB_BE_UNCONNECTED[0:3]),
        .LMB_CE(NLW_U0_LMB_CE_UNCONNECTED),
        .LMB_Clk(NLW_U0_LMB_Clk_UNCONNECTED),
        .LMB_ReadDBus(LMB_ReadDBus),
        .LMB_ReadStrobe(NLW_U0_LMB_ReadStrobe_UNCONNECTED),
        .LMB_Ready(LMB_Ready),
        .LMB_Rst(NLW_U0_LMB_Rst_UNCONNECTED),
        .LMB_UE(NLW_U0_LMB_UE_UNCONNECTED),
        .LMB_Wait(NLW_U0_LMB_Wait_UNCONNECTED),
        .LMB_WriteDBus(LMB_WriteDBus),
        .LMB_WriteStrobe(NLW_U0_LMB_WriteStrobe_UNCONNECTED),
        .M_ABus({NLW_U0_M_ABus_UNCONNECTED[0:18],M_ABus[19:29],NLW_U0_M_ABus_UNCONNECTED[30:31]}),
        .M_AddrStrobe(M_AddrStrobe),
        .M_BE(NLW_U0_M_BE_UNCONNECTED[0:3]),
        .M_DBus(M_DBus),
        .M_ReadStrobe(NLW_U0_M_ReadStrobe_UNCONNECTED),
        .M_WriteStrobe(NLW_U0_M_WriteStrobe_UNCONNECTED),
        .SYS_Rst(NLW_U0_SYS_Rst_UNCONNECTED),
        .Sl_CE(NLW_U0_Sl_CE_UNCONNECTED[0]),
        .Sl_DBus(Sl_DBus),
        .Sl_Ready(Sl_Ready),
        .Sl_UE(NLW_U0_Sl_UE_UNCONNECTED[0]),
        .Sl_Wait(NLW_U0_Sl_Wait_UNCONNECTED[0]));
endmodule

(* C_EXT_RESET_HIGH = "1" *) (* C_LMB_AWIDTH = "32" *) (* C_LMB_DWIDTH = "32" *) 
(* C_LMB_NUM_SLAVES = "1" *) (* C_LMB_PROTOCOL = "0" *) (* ORIG_REF_NAME = "lmb_v10" *) 
module system_ilmb_v10_0__lmb_v10
   (LMB_Clk,
    SYS_Rst,
    LMB_Rst,
    M_ABus,
    M_ReadStrobe,
    M_WriteStrobe,
    M_AddrStrobe,
    M_DBus,
    M_BE,
    Sl_DBus,
    Sl_Ready,
    Sl_Wait,
    Sl_UE,
    Sl_CE,
    LMB_ABus,
    LMB_ReadStrobe,
    LMB_WriteStrobe,
    LMB_AddrStrobe,
    LMB_ReadDBus,
    LMB_WriteDBus,
    LMB_Ready,
    LMB_Wait,
    LMB_UE,
    LMB_CE,
    LMB_BE);
  input LMB_Clk;
  input SYS_Rst;
  output LMB_Rst;
  input [0:31]M_ABus;
  input M_ReadStrobe;
  input M_WriteStrobe;
  input M_AddrStrobe;
  input [0:31]M_DBus;
  input [0:3]M_BE;
  input [0:31]Sl_DBus;
  input [0:0]Sl_Ready;
  input [0:0]Sl_Wait;
  input [0:0]Sl_UE;
  input [0:0]Sl_CE;
  output [0:31]LMB_ABus;
  output LMB_ReadStrobe;
  output LMB_WriteStrobe;
  output LMB_AddrStrobe;
  output [0:31]LMB_ReadDBus;
  output [0:31]LMB_WriteDBus;
  output LMB_Ready;
  output LMB_Wait;
  output LMB_UE;
  output LMB_CE;
  output [0:3]LMB_BE;

  wire [0:31]M_ABus;
  wire M_AddrStrobe;
  wire [0:31]M_DBus;
  wire [0:31]Sl_DBus;
  wire [0:0]Sl_Ready;

  assign LMB_ABus[19:29] = M_ABus[19:29];
  assign LMB_AddrStrobe = M_AddrStrobe;
  assign LMB_ReadDBus[0:31] = Sl_DBus;
  assign LMB_Ready = Sl_Ready;
  assign LMB_WriteDBus[0:31] = M_DBus;
endmodule

(* CHECK_LICENSE_TYPE = "system_lmb_bram_0,blk_mem_gen_v8_4_4,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "blk_mem_gen_v8_4_4,Vivado 2020.1" *) 
module system_lmb_bram_0
   (clka,
    rsta,
    ena,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    web,
    addrb,
    dinb,
    doutb,
    rsta_busy,
    rstb_busy);
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME BRAM_PORTA, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE BRAM_CTRL, READ_WRITE_MODE READ_WRITE, READ_LATENCY 1" *) input clka;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA RST" *) input rsta;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA EN" *) input ena;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA WE" *) input [3:0]wea;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA ADDR" *) input [31:0]addra;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA DIN" *) input [31:0]dina;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTA DOUT" *) output [31:0]douta;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME BRAM_PORTB, MEM_SIZE 8192, MEM_WIDTH 32, MEM_ECC NONE, MASTER_TYPE BRAM_CTRL, READ_WRITE_MODE READ_WRITE, READ_LATENCY 1" *) input clkb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB RST" *) input rstb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB EN" *) input enb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB WE" *) input [3:0]web;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB ADDR" *) input [31:0]addrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB DIN" *) input [31:0]dinb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:bram:1.0 BRAM_PORTB DOUT" *) output [31:0]doutb;
  output rsta_busy;
  output rstb_busy;

  wire [31:0]addra;
  wire [31:0]addrb;
  wire clka;
  wire clkb;
  wire [31:0]dina;
  wire [31:0]dinb;
  wire [31:0]douta;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire [3:0]wea;
  wire [3:0]web;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_deepsleep_UNCONNECTED;
  wire NLW_U0_eccpipece_UNCONNECTED;
  wire NLW_U0_injectdbiterr_UNCONNECTED;
  wire NLW_U0_injectsbiterr_UNCONNECTED;
  wire NLW_U0_regcea_UNCONNECTED;
  wire NLW_U0_regceb_UNCONNECTED;
  wire NLW_U0_rsta_UNCONNECTED;
  wire NLW_U0_rsta_busy_UNCONNECTED;
  wire NLW_U0_rstb_UNCONNECTED;
  wire NLW_U0_rstb_busy_UNCONNECTED;
  wire NLW_U0_s_aclk_UNCONNECTED;
  wire NLW_U0_s_aresetn_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_arvalid_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_awvalid_UNCONNECTED;
  wire NLW_U0_s_axi_bready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_dbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectdbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_injectsbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rready_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_sbiterr_UNCONNECTED;
  wire NLW_U0_s_axi_wlast_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axi_wvalid_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_shutdown_UNCONNECTED;
  wire NLW_U0_sleep_UNCONNECTED;
  wire [31:0]NLW_U0_addra_UNCONNECTED;
  wire [31:0]NLW_U0_addrb_UNCONNECTED;
  wire [31:0]NLW_U0_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_arsize_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_s_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_U0_s_axi_awsize_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_rdaddrecc_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [31:0]NLW_U0_s_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_U0_s_axi_wstrb_UNCONNECTED;

  (* C_ADDRA_WIDTH = "32" *) 
  (* C_ADDRB_WIDTH = "32" *) 
  (* C_ALGORITHM = "1" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_SLAVE_TYPE = "0" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_BYTE_SIZE = "8" *) 
  (* C_COMMON_CLK = "0" *) 
  (* C_COUNT_18K_BRAM = "0" *) 
  (* C_COUNT_36K_BRAM = "2" *) 
  (* C_CTRL_ECC_ALGO = "NONE" *) 
  (* C_DEFAULT_DATA = "0" *) 
  (* C_DISABLE_WARN_BHV_COLL = "0" *) 
  (* C_DISABLE_WARN_BHV_RANGE = "0" *) 
  (* C_ELABORATION_DIR = "./" *) 
  (* C_ENABLE_32BIT_ADDRESS = "1" *) 
  (* C_EN_DEEPSLEEP_PIN = "0" *) 
  (* C_EN_ECC_PIPE = "0" *) 
  (* C_EN_RDADDRA_CHG = "0" *) 
  (* C_EN_RDADDRB_CHG = "0" *) 
  (* C_EN_SAFETY_CKT = "1" *) 
  (* C_EN_SHUTDOWN_PIN = "0" *) 
  (* C_EN_SLEEP_PIN = "0" *) 
  (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     10.7492 mW" *) 
  (* C_FAMILY = "spartan7" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_ENA = "1" *) 
  (* C_HAS_ENB = "1" *) 
  (* C_HAS_INJECTERR = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MEM_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) 
  (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
  (* C_HAS_REGCEA = "0" *) 
  (* C_HAS_REGCEB = "0" *) 
  (* C_HAS_RSTA = "1" *) 
  (* C_HAS_RSTB = "1" *) 
  (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) 
  (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
  (* C_INITA_VAL = "0" *) 
  (* C_INITB_VAL = "0" *) 
  (* C_INIT_FILE = "system_lmb_bram_0.mem" *) 
  (* C_INIT_FILE_NAME = "no_coe_file_loaded" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_LOAD_INIT_FILE = "0" *) 
  (* C_MEM_TYPE = "2" *) 
  (* C_MUX_PIPELINE_STAGES = "0" *) 
  (* C_PRIM_TYPE = "1" *) 
  (* C_READ_DEPTH_A = "2048" *) 
  (* C_READ_DEPTH_B = "2048" *) 
  (* C_READ_LATENCY_A = "1" *) 
  (* C_READ_LATENCY_B = "1" *) 
  (* C_READ_WIDTH_A = "32" *) 
  (* C_READ_WIDTH_B = "32" *) 
  (* C_RSTRAM_A = "0" *) 
  (* C_RSTRAM_B = "0" *) 
  (* C_RST_PRIORITY_A = "CE" *) 
  (* C_RST_PRIORITY_B = "CE" *) 
  (* C_SIM_COLLISION_CHECK = "ALL" *) 
  (* C_USE_BRAM_BLOCK = "1" *) 
  (* C_USE_BYTE_WEA = "1" *) 
  (* C_USE_BYTE_WEB = "1" *) 
  (* C_USE_DEFAULT_DATA = "0" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_SOFTECC = "0" *) 
  (* C_USE_URAM = "0" *) 
  (* C_WEA_WIDTH = "4" *) 
  (* C_WEB_WIDTH = "4" *) 
  (* C_WRITE_DEPTH_A = "2048" *) 
  (* C_WRITE_DEPTH_B = "2048" *) 
  (* C_WRITE_MODE_A = "WRITE_FIRST" *) 
  (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
  (* C_WRITE_WIDTH_A = "32" *) 
  (* C_WRITE_WIDTH_B = "32" *) 
  (* C_XDEVICEFAMILY = "spartan7" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  system_lmb_bram_0__blk_mem_gen_v8_4_4 U0
       (.addra({NLW_U0_addra_UNCONNECTED[31:13],addra[12:2],NLW_U0_addra_UNCONNECTED[1:0]}),
        .addrb({NLW_U0_addrb_UNCONNECTED[31:13],addrb[12:2],NLW_U0_addrb_UNCONNECTED[1:0]}),
        .clka(clka),
        .clkb(clkb),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .deepsleep(NLW_U0_deepsleep_UNCONNECTED),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .eccpipece(NLW_U0_eccpipece_UNCONNECTED),
        .ena(ena),
        .enb(enb),
        .injectdbiterr(NLW_U0_injectdbiterr_UNCONNECTED),
        .injectsbiterr(NLW_U0_injectsbiterr_UNCONNECTED),
        .rdaddrecc(NLW_U0_rdaddrecc_UNCONNECTED[31:0]),
        .regcea(NLW_U0_regcea_UNCONNECTED),
        .regceb(NLW_U0_regceb_UNCONNECTED),
        .rsta(NLW_U0_rsta_UNCONNECTED),
        .rsta_busy(NLW_U0_rsta_busy_UNCONNECTED),
        .rstb(NLW_U0_rstb_UNCONNECTED),
        .rstb_busy(NLW_U0_rstb_busy_UNCONNECTED),
        .s_aclk(NLW_U0_s_aclk_UNCONNECTED),
        .s_aresetn(NLW_U0_s_aresetn_UNCONNECTED),
        .s_axi_araddr(NLW_U0_s_axi_araddr_UNCONNECTED[31:0]),
        .s_axi_arburst(NLW_U0_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arid(NLW_U0_s_axi_arid_UNCONNECTED[3:0]),
        .s_axi_arlen(NLW_U0_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arsize(NLW_U0_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_arvalid(NLW_U0_s_axi_arvalid_UNCONNECTED),
        .s_axi_awaddr(NLW_U0_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_U0_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awid(NLW_U0_s_axi_awid_UNCONNECTED[3:0]),
        .s_axi_awlen(NLW_U0_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awsize(NLW_U0_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awvalid(NLW_U0_s_axi_awvalid_UNCONNECTED),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(NLW_U0_s_axi_bready_UNCONNECTED),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_dbiterr(NLW_U0_s_axi_dbiterr_UNCONNECTED),
        .s_axi_injectdbiterr(NLW_U0_s_axi_injectdbiterr_UNCONNECTED),
        .s_axi_injectsbiterr(NLW_U0_s_axi_injectsbiterr_UNCONNECTED),
        .s_axi_rdaddrecc(NLW_U0_s_axi_rdaddrecc_UNCONNECTED[31:0]),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[31:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(NLW_U0_s_axi_rready_UNCONNECTED),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_sbiterr(NLW_U0_s_axi_sbiterr_UNCONNECTED),
        .s_axi_wdata(NLW_U0_s_axi_wdata_UNCONNECTED[31:0]),
        .s_axi_wlast(NLW_U0_s_axi_wlast_UNCONNECTED),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb(NLW_U0_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wvalid(NLW_U0_s_axi_wvalid_UNCONNECTED),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .shutdown(NLW_U0_shutdown_UNCONNECTED),
        .sleep(NLW_U0_sleep_UNCONNECTED),
        .wea(wea),
        .web(web));
endmodule

(* CHECK_LICENSE_TYPE = "system_mdm_1_0,MDM,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "MDM,Vivado 2020.1" *) 
module system_mdm_1_0
   (Debug_SYS_Rst,
    Dbg_Clk_0,
    Dbg_TDI_0,
    Dbg_TDO_0,
    Dbg_Reg_En_0,
    Dbg_Capture_0,
    Dbg_Shift_0,
    Dbg_Update_0,
    Dbg_Rst_0,
    Dbg_Disable_0);
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 RST.Debug_SYS_Rst RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME RST.Debug_SYS_Rst, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) output Debug_SYS_Rst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 CLK" *) output Dbg_Clk_0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 TDI" *) output Dbg_TDI_0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 TDO" *) input Dbg_TDO_0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 REG_EN" *) output [0:7]Dbg_Reg_En_0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 CAPTURE" *) output Dbg_Capture_0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 SHIFT" *) output Dbg_Shift_0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 UPDATE" *) output Dbg_Update_0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 RST" *) output Dbg_Rst_0;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 MBDEBUG_0 DISABLE" *) output Dbg_Disable_0;

  wire Dbg_Capture_0;
  wire Dbg_Clk_0;
  wire [0:7]Dbg_Reg_En_0;
  wire Dbg_Rst_0;
  wire Dbg_Shift_0;
  wire Dbg_TDI_0;
  wire Dbg_TDO_0;
  wire Dbg_Update_0;
  wire Debug_SYS_Rst;
  wire NLW_U0_Config_Reset_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_0_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_1_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_10_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_11_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_12_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_13_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_14_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_15_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_16_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_17_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_18_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_19_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_2_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_20_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_21_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_22_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_23_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_24_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_25_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_26_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_27_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_28_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_29_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_3_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_30_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_31_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_4_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_5_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_6_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_7_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_8_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_9_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_0_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_1_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_10_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_11_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_12_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_13_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_14_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_15_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_16_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_17_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_18_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_19_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_2_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_20_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_21_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_22_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_23_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_24_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_25_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_26_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_27_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_28_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_29_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_3_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_30_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_31_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_4_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_5_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_6_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_7_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_8_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_9_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_0_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_1_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_10_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_11_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_12_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_13_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_14_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_15_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_16_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_17_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_18_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_19_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_2_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_20_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_21_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_22_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_23_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_24_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_25_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_26_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_27_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_28_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_29_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_3_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_30_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_31_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_4_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_5_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_6_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_7_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_8_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_9_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_0_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_1_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_10_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_11_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_12_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_13_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_14_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_15_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_16_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_17_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_18_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_19_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_2_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_20_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_21_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_22_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_23_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_24_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_25_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_26_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_27_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_28_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_29_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_3_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_30_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_31_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_4_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_5_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_6_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_7_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_8_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_9_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_0_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_1_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_10_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_11_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_12_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_13_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_14_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_15_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_16_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_17_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_18_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_19_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_2_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_20_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_21_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_22_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_23_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_24_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_25_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_26_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_27_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_28_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_29_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_3_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_30_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_31_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_4_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_5_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_6_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_7_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_8_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_9_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_0_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_1_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_10_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_11_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_12_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_13_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_14_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_15_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_16_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_17_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_18_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_19_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_2_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_20_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_21_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_22_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_23_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_24_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_25_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_26_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_27_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_28_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_29_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_3_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_30_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_31_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_4_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_5_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_6_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_7_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_8_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_9_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_1_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_10_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_11_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_12_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_13_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_14_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_15_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_16_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_17_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_18_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_19_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_2_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_20_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_21_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_22_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_23_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_24_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_25_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_26_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_27_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_28_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_29_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_3_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_30_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_31_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_4_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_5_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_6_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_7_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_8_UNCONNECTED;
  wire NLW_U0_Dbg_Capture_9_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_1_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_10_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_11_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_12_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_13_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_14_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_15_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_16_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_17_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_18_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_19_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_2_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_20_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_21_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_22_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_23_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_24_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_25_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_26_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_27_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_28_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_29_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_3_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_30_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_31_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_4_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_5_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_6_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_7_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_8_UNCONNECTED;
  wire NLW_U0_Dbg_Clk_9_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_0_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_1_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_10_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_11_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_12_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_13_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_14_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_15_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_16_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_17_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_18_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_19_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_2_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_20_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_21_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_22_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_23_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_24_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_25_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_26_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_27_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_28_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_29_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_3_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_30_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_31_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_4_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_5_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_6_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_7_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_8_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_9_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_0_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_1_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_10_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_11_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_12_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_13_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_14_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_15_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_16_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_17_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_18_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_19_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_2_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_20_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_21_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_22_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_23_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_24_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_25_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_26_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_27_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_28_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_29_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_3_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_30_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_31_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_4_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_5_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_6_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_7_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_8_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_9_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_0_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_1_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_10_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_11_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_12_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_13_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_14_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_15_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_16_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_17_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_18_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_19_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_2_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_20_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_21_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_22_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_23_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_24_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_25_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_26_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_27_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_28_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_29_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_3_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_30_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_31_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_4_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_5_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_6_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_7_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_8_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_9_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_1_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_10_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_11_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_12_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_13_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_14_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_15_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_16_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_17_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_18_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_19_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_2_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_20_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_21_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_22_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_23_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_24_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_25_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_26_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_27_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_28_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_29_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_3_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_30_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_31_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_4_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_5_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_6_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_7_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_8_UNCONNECTED;
  wire NLW_U0_Dbg_Rst_9_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_1_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_10_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_11_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_12_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_13_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_14_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_15_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_16_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_17_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_18_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_19_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_2_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_20_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_21_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_22_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_23_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_24_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_25_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_26_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_27_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_28_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_29_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_3_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_30_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_31_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_4_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_5_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_6_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_7_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_8_UNCONNECTED;
  wire NLW_U0_Dbg_Shift_9_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_1_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_10_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_11_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_12_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_13_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_14_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_15_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_16_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_17_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_18_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_19_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_2_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_20_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_21_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_22_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_23_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_24_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_25_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_26_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_27_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_28_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_29_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_3_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_30_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_31_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_4_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_5_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_6_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_7_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_8_UNCONNECTED;
  wire NLW_U0_Dbg_TDI_9_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_1_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_10_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_11_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_12_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_13_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_14_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_15_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_16_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_17_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_18_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_19_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_2_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_20_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_21_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_22_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_23_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_24_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_25_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_26_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_27_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_28_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_29_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_3_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_30_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_31_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_4_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_5_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_6_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_7_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_8_UNCONNECTED;
  wire NLW_U0_Dbg_TDO_9_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_0_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_1_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_10_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_11_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_12_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_13_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_14_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_15_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_16_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_17_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_18_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_19_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_2_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_20_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_21_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_22_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_23_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_24_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_25_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_26_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_27_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_28_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_29_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_3_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_30_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_31_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_4_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_5_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_6_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_7_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_8_UNCONNECTED;
  wire NLW_U0_Dbg_TrClk_9_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_0_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_1_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_10_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_11_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_12_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_13_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_14_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_15_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_16_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_17_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_18_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_19_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_2_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_20_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_21_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_22_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_23_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_24_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_25_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_26_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_27_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_28_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_29_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_3_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_30_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_31_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_4_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_5_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_6_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_7_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_8_UNCONNECTED;
  wire NLW_U0_Dbg_TrReady_9_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_0_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_1_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_10_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_11_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_12_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_13_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_14_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_15_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_16_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_17_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_18_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_19_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_2_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_20_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_21_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_22_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_23_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_24_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_25_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_26_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_27_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_28_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_29_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_3_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_30_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_31_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_4_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_5_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_6_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_7_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_8_UNCONNECTED;
  wire NLW_U0_Dbg_TrValid_9_UNCONNECTED;
  wire NLW_U0_Dbg_Update_1_UNCONNECTED;
  wire NLW_U0_Dbg_Update_10_UNCONNECTED;
  wire NLW_U0_Dbg_Update_11_UNCONNECTED;
  wire NLW_U0_Dbg_Update_12_UNCONNECTED;
  wire NLW_U0_Dbg_Update_13_UNCONNECTED;
  wire NLW_U0_Dbg_Update_14_UNCONNECTED;
  wire NLW_U0_Dbg_Update_15_UNCONNECTED;
  wire NLW_U0_Dbg_Update_16_UNCONNECTED;
  wire NLW_U0_Dbg_Update_17_UNCONNECTED;
  wire NLW_U0_Dbg_Update_18_UNCONNECTED;
  wire NLW_U0_Dbg_Update_19_UNCONNECTED;
  wire NLW_U0_Dbg_Update_2_UNCONNECTED;
  wire NLW_U0_Dbg_Update_20_UNCONNECTED;
  wire NLW_U0_Dbg_Update_21_UNCONNECTED;
  wire NLW_U0_Dbg_Update_22_UNCONNECTED;
  wire NLW_U0_Dbg_Update_23_UNCONNECTED;
  wire NLW_U0_Dbg_Update_24_UNCONNECTED;
  wire NLW_U0_Dbg_Update_25_UNCONNECTED;
  wire NLW_U0_Dbg_Update_26_UNCONNECTED;
  wire NLW_U0_Dbg_Update_27_UNCONNECTED;
  wire NLW_U0_Dbg_Update_28_UNCONNECTED;
  wire NLW_U0_Dbg_Update_29_UNCONNECTED;
  wire NLW_U0_Dbg_Update_3_UNCONNECTED;
  wire NLW_U0_Dbg_Update_30_UNCONNECTED;
  wire NLW_U0_Dbg_Update_31_UNCONNECTED;
  wire NLW_U0_Dbg_Update_4_UNCONNECTED;
  wire NLW_U0_Dbg_Update_5_UNCONNECTED;
  wire NLW_U0_Dbg_Update_6_UNCONNECTED;
  wire NLW_U0_Dbg_Update_7_UNCONNECTED;
  wire NLW_U0_Dbg_Update_8_UNCONNECTED;
  wire NLW_U0_Dbg_Update_9_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_0_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_1_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_10_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_11_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_12_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_13_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_14_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_15_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_16_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_17_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_18_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_19_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_2_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_20_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_21_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_22_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_23_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_24_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_25_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_26_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_27_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_28_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_29_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_3_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_30_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_31_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_4_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_5_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_6_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_7_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_8_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_9_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_0_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_1_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_10_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_11_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_12_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_13_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_14_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_15_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_16_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_17_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_18_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_19_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_2_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_20_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_21_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_22_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_23_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_24_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_25_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_26_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_27_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_28_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_29_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_3_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_30_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_31_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_4_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_5_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_6_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_7_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_8_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_9_UNCONNECTED;
  wire NLW_U0_Ext_BRK_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_CAPTURE_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_DRCK_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_RESET_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_SEL_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_SHIFT_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_TDI_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_TDO_UNCONNECTED;
  wire NLW_U0_Ext_JTAG_UPDATE_UNCONNECTED;
  wire NLW_U0_Ext_NM_BRK_UNCONNECTED;
  wire NLW_U0_Interrupt_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_0_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_1_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_10_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_11_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_12_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_13_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_14_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_15_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_16_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_17_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_18_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_19_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_2_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_20_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_21_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_22_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_23_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_24_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_25_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_26_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_27_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_28_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_29_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_3_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_30_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_31_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_4_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_5_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_6_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_7_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_8_UNCONNECTED;
  wire NLW_U0_LMB_Addr_Strobe_9_UNCONNECTED;
  wire NLW_U0_LMB_CE_0_UNCONNECTED;
  wire NLW_U0_LMB_CE_1_UNCONNECTED;
  wire NLW_U0_LMB_CE_10_UNCONNECTED;
  wire NLW_U0_LMB_CE_11_UNCONNECTED;
  wire NLW_U0_LMB_CE_12_UNCONNECTED;
  wire NLW_U0_LMB_CE_13_UNCONNECTED;
  wire NLW_U0_LMB_CE_14_UNCONNECTED;
  wire NLW_U0_LMB_CE_15_UNCONNECTED;
  wire NLW_U0_LMB_CE_16_UNCONNECTED;
  wire NLW_U0_LMB_CE_17_UNCONNECTED;
  wire NLW_U0_LMB_CE_18_UNCONNECTED;
  wire NLW_U0_LMB_CE_19_UNCONNECTED;
  wire NLW_U0_LMB_CE_2_UNCONNECTED;
  wire NLW_U0_LMB_CE_20_UNCONNECTED;
  wire NLW_U0_LMB_CE_21_UNCONNECTED;
  wire NLW_U0_LMB_CE_22_UNCONNECTED;
  wire NLW_U0_LMB_CE_23_UNCONNECTED;
  wire NLW_U0_LMB_CE_24_UNCONNECTED;
  wire NLW_U0_LMB_CE_25_UNCONNECTED;
  wire NLW_U0_LMB_CE_26_UNCONNECTED;
  wire NLW_U0_LMB_CE_27_UNCONNECTED;
  wire NLW_U0_LMB_CE_28_UNCONNECTED;
  wire NLW_U0_LMB_CE_29_UNCONNECTED;
  wire NLW_U0_LMB_CE_3_UNCONNECTED;
  wire NLW_U0_LMB_CE_30_UNCONNECTED;
  wire NLW_U0_LMB_CE_31_UNCONNECTED;
  wire NLW_U0_LMB_CE_4_UNCONNECTED;
  wire NLW_U0_LMB_CE_5_UNCONNECTED;
  wire NLW_U0_LMB_CE_6_UNCONNECTED;
  wire NLW_U0_LMB_CE_7_UNCONNECTED;
  wire NLW_U0_LMB_CE_8_UNCONNECTED;
  wire NLW_U0_LMB_CE_9_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_0_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_1_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_10_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_11_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_12_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_13_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_14_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_15_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_16_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_17_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_18_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_19_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_2_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_20_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_21_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_22_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_23_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_24_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_25_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_26_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_27_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_28_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_29_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_3_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_30_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_31_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_4_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_5_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_6_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_7_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_8_UNCONNECTED;
  wire NLW_U0_LMB_Read_Strobe_9_UNCONNECTED;
  wire NLW_U0_LMB_Ready_0_UNCONNECTED;
  wire NLW_U0_LMB_Ready_1_UNCONNECTED;
  wire NLW_U0_LMB_Ready_10_UNCONNECTED;
  wire NLW_U0_LMB_Ready_11_UNCONNECTED;
  wire NLW_U0_LMB_Ready_12_UNCONNECTED;
  wire NLW_U0_LMB_Ready_13_UNCONNECTED;
  wire NLW_U0_LMB_Ready_14_UNCONNECTED;
  wire NLW_U0_LMB_Ready_15_UNCONNECTED;
  wire NLW_U0_LMB_Ready_16_UNCONNECTED;
  wire NLW_U0_LMB_Ready_17_UNCONNECTED;
  wire NLW_U0_LMB_Ready_18_UNCONNECTED;
  wire NLW_U0_LMB_Ready_19_UNCONNECTED;
  wire NLW_U0_LMB_Ready_2_UNCONNECTED;
  wire NLW_U0_LMB_Ready_20_UNCONNECTED;
  wire NLW_U0_LMB_Ready_21_UNCONNECTED;
  wire NLW_U0_LMB_Ready_22_UNCONNECTED;
  wire NLW_U0_LMB_Ready_23_UNCONNECTED;
  wire NLW_U0_LMB_Ready_24_UNCONNECTED;
  wire NLW_U0_LMB_Ready_25_UNCONNECTED;
  wire NLW_U0_LMB_Ready_26_UNCONNECTED;
  wire NLW_U0_LMB_Ready_27_UNCONNECTED;
  wire NLW_U0_LMB_Ready_28_UNCONNECTED;
  wire NLW_U0_LMB_Ready_29_UNCONNECTED;
  wire NLW_U0_LMB_Ready_3_UNCONNECTED;
  wire NLW_U0_LMB_Ready_30_UNCONNECTED;
  wire NLW_U0_LMB_Ready_31_UNCONNECTED;
  wire NLW_U0_LMB_Ready_4_UNCONNECTED;
  wire NLW_U0_LMB_Ready_5_UNCONNECTED;
  wire NLW_U0_LMB_Ready_6_UNCONNECTED;
  wire NLW_U0_LMB_Ready_7_UNCONNECTED;
  wire NLW_U0_LMB_Ready_8_UNCONNECTED;
  wire NLW_U0_LMB_Ready_9_UNCONNECTED;
  wire NLW_U0_LMB_UE_0_UNCONNECTED;
  wire NLW_U0_LMB_UE_1_UNCONNECTED;
  wire NLW_U0_LMB_UE_10_UNCONNECTED;
  wire NLW_U0_LMB_UE_11_UNCONNECTED;
  wire NLW_U0_LMB_UE_12_UNCONNECTED;
  wire NLW_U0_LMB_UE_13_UNCONNECTED;
  wire NLW_U0_LMB_UE_14_UNCONNECTED;
  wire NLW_U0_LMB_UE_15_UNCONNECTED;
  wire NLW_U0_LMB_UE_16_UNCONNECTED;
  wire NLW_U0_LMB_UE_17_UNCONNECTED;
  wire NLW_U0_LMB_UE_18_UNCONNECTED;
  wire NLW_U0_LMB_UE_19_UNCONNECTED;
  wire NLW_U0_LMB_UE_2_UNCONNECTED;
  wire NLW_U0_LMB_UE_20_UNCONNECTED;
  wire NLW_U0_LMB_UE_21_UNCONNECTED;
  wire NLW_U0_LMB_UE_22_UNCONNECTED;
  wire NLW_U0_LMB_UE_23_UNCONNECTED;
  wire NLW_U0_LMB_UE_24_UNCONNECTED;
  wire NLW_U0_LMB_UE_25_UNCONNECTED;
  wire NLW_U0_LMB_UE_26_UNCONNECTED;
  wire NLW_U0_LMB_UE_27_UNCONNECTED;
  wire NLW_U0_LMB_UE_28_UNCONNECTED;
  wire NLW_U0_LMB_UE_29_UNCONNECTED;
  wire NLW_U0_LMB_UE_3_UNCONNECTED;
  wire NLW_U0_LMB_UE_30_UNCONNECTED;
  wire NLW_U0_LMB_UE_31_UNCONNECTED;
  wire NLW_U0_LMB_UE_4_UNCONNECTED;
  wire NLW_U0_LMB_UE_5_UNCONNECTED;
  wire NLW_U0_LMB_UE_6_UNCONNECTED;
  wire NLW_U0_LMB_UE_7_UNCONNECTED;
  wire NLW_U0_LMB_UE_8_UNCONNECTED;
  wire NLW_U0_LMB_UE_9_UNCONNECTED;
  wire NLW_U0_LMB_Wait_0_UNCONNECTED;
  wire NLW_U0_LMB_Wait_1_UNCONNECTED;
  wire NLW_U0_LMB_Wait_10_UNCONNECTED;
  wire NLW_U0_LMB_Wait_11_UNCONNECTED;
  wire NLW_U0_LMB_Wait_12_UNCONNECTED;
  wire NLW_U0_LMB_Wait_13_UNCONNECTED;
  wire NLW_U0_LMB_Wait_14_UNCONNECTED;
  wire NLW_U0_LMB_Wait_15_UNCONNECTED;
  wire NLW_U0_LMB_Wait_16_UNCONNECTED;
  wire NLW_U0_LMB_Wait_17_UNCONNECTED;
  wire NLW_U0_LMB_Wait_18_UNCONNECTED;
  wire NLW_U0_LMB_Wait_19_UNCONNECTED;
  wire NLW_U0_LMB_Wait_2_UNCONNECTED;
  wire NLW_U0_LMB_Wait_20_UNCONNECTED;
  wire NLW_U0_LMB_Wait_21_UNCONNECTED;
  wire NLW_U0_LMB_Wait_22_UNCONNECTED;
  wire NLW_U0_LMB_Wait_23_UNCONNECTED;
  wire NLW_U0_LMB_Wait_24_UNCONNECTED;
  wire NLW_U0_LMB_Wait_25_UNCONNECTED;
  wire NLW_U0_LMB_Wait_26_UNCONNECTED;
  wire NLW_U0_LMB_Wait_27_UNCONNECTED;
  wire NLW_U0_LMB_Wait_28_UNCONNECTED;
  wire NLW_U0_LMB_Wait_29_UNCONNECTED;
  wire NLW_U0_LMB_Wait_3_UNCONNECTED;
  wire NLW_U0_LMB_Wait_30_UNCONNECTED;
  wire NLW_U0_LMB_Wait_31_UNCONNECTED;
  wire NLW_U0_LMB_Wait_4_UNCONNECTED;
  wire NLW_U0_LMB_Wait_5_UNCONNECTED;
  wire NLW_U0_LMB_Wait_6_UNCONNECTED;
  wire NLW_U0_LMB_Wait_7_UNCONNECTED;
  wire NLW_U0_LMB_Wait_8_UNCONNECTED;
  wire NLW_U0_LMB_Wait_9_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_0_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_1_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_10_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_11_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_12_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_13_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_14_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_15_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_16_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_17_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_18_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_19_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_2_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_20_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_21_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_22_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_23_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_24_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_25_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_26_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_27_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_28_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_29_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_3_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_30_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_31_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_4_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_5_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_6_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_7_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_8_UNCONNECTED;
  wire NLW_U0_LMB_Write_Strobe_9_UNCONNECTED;
  wire NLW_U0_M_AXIS_ACLK_UNCONNECTED;
  wire NLW_U0_M_AXIS_ARESETN_UNCONNECTED;
  wire NLW_U0_M_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_ACLK_UNCONNECTED;
  wire NLW_U0_M_AXI_ARESETN_UNCONNECTED;
  wire NLW_U0_M_AXI_ARLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_ARREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_ARVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_AWLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_AWREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_AWVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_BREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_BVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_RLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_RREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_RVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_WLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_WREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_WVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_ACLK_UNCONNECTED;
  wire NLW_U0_S_AXI_ARESETN_UNCONNECTED;
  wire NLW_U0_S_AXI_ARREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_ARVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_AWREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_AWVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_BREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_BVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_RREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_RVALID_UNCONNECTED;
  wire NLW_U0_S_AXI_WREADY_UNCONNECTED;
  wire NLW_U0_S_AXI_WVALID_UNCONNECTED;
  wire NLW_U0_Scan_En_UNCONNECTED;
  wire NLW_U0_Scan_Reset_UNCONNECTED;
  wire NLW_U0_Scan_Reset_Sel_UNCONNECTED;
  wire NLW_U0_TRACE_CLK_UNCONNECTED;
  wire NLW_U0_TRACE_CLK_OUT_UNCONNECTED;
  wire NLW_U0_TRACE_CTL_UNCONNECTED;
  wire NLW_U0_Trig_Ack_In_0_UNCONNECTED;
  wire NLW_U0_Trig_Ack_In_1_UNCONNECTED;
  wire NLW_U0_Trig_Ack_In_2_UNCONNECTED;
  wire NLW_U0_Trig_Ack_In_3_UNCONNECTED;
  wire NLW_U0_Trig_Ack_Out_0_UNCONNECTED;
  wire NLW_U0_Trig_Ack_Out_1_UNCONNECTED;
  wire NLW_U0_Trig_Ack_Out_2_UNCONNECTED;
  wire NLW_U0_Trig_Ack_Out_3_UNCONNECTED;
  wire NLW_U0_Trig_In_0_UNCONNECTED;
  wire NLW_U0_Trig_In_1_UNCONNECTED;
  wire NLW_U0_Trig_In_2_UNCONNECTED;
  wire NLW_U0_Trig_In_3_UNCONNECTED;
  wire NLW_U0_Trig_Out_0_UNCONNECTED;
  wire NLW_U0_Trig_Out_1_UNCONNECTED;
  wire NLW_U0_Trig_Out_2_UNCONNECTED;
  wire NLW_U0_Trig_Out_3_UNCONNECTED;
  wire NLW_U0_bscan_ext_bscanid_en_UNCONNECTED;
  wire NLW_U0_bscan_ext_capture_UNCONNECTED;
  wire NLW_U0_bscan_ext_drck_UNCONNECTED;
  wire NLW_U0_bscan_ext_reset_UNCONNECTED;
  wire NLW_U0_bscan_ext_sel_UNCONNECTED;
  wire NLW_U0_bscan_ext_shift_UNCONNECTED;
  wire NLW_U0_bscan_ext_tck_UNCONNECTED;
  wire NLW_U0_bscan_ext_tdi_UNCONNECTED;
  wire NLW_U0_bscan_ext_tdo_UNCONNECTED;
  wire NLW_U0_bscan_ext_tms_UNCONNECTED;
  wire NLW_U0_bscan_ext_update_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_0_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_1_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_10_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_11_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_12_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_13_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_14_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_15_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_16_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_17_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_18_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_19_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_2_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_20_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_21_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_22_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_23_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_24_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_25_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_26_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_27_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_28_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_29_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_3_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_30_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_31_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_4_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_5_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_6_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_7_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_8_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_9_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_0_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_1_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_10_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_11_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_12_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_13_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_14_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_15_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_16_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_17_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_18_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_19_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_2_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_20_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_21_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_22_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_23_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_24_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_25_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_26_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_27_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_28_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_29_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_3_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_30_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_31_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_4_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_5_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_6_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_7_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_8_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_9_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_0_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_1_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_10_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_11_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_12_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_13_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_14_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_15_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_16_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_17_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_18_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_19_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_2_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_20_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_21_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_22_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_23_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_24_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_25_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_26_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_27_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_28_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_29_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_3_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_30_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_31_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_4_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_5_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_6_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_7_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_8_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_9_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_0_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_1_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_10_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_11_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_12_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_13_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_14_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_15_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_16_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_17_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_18_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_19_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_2_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_20_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_21_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_22_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_23_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_24_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_25_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_26_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_27_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_28_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_29_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_3_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_30_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_31_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_4_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_5_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_6_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_7_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_8_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_9_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_0_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_1_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_10_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_11_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_12_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_13_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_14_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_15_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_16_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_17_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_18_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_19_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_2_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_20_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_21_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_22_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_23_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_24_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_25_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_26_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_27_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_28_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_29_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_3_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_30_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_31_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_4_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_5_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_6_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_7_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_8_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_9_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_1_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_10_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_11_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_12_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_13_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_14_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_15_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_16_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_17_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_18_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_19_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_2_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_20_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_21_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_22_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_23_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_24_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_25_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_26_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_27_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_28_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_29_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_3_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_30_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_31_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_4_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_5_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_6_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_7_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_8_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Reg_En_9_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_0_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_1_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_10_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_11_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_12_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_13_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_14_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_15_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_16_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_17_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_18_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_19_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_2_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_20_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_21_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_22_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_23_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_24_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_25_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_26_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_27_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_28_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_29_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_3_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_30_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_31_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_4_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_5_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_6_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_7_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_8_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_TrData_9_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_0_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_1_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_10_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_11_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_12_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_13_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_14_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_15_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_16_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_17_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_18_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_19_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_2_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_20_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_21_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_22_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_23_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_24_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_25_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_26_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_27_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_28_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_29_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_3_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_30_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_31_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_4_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_5_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_6_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_7_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_8_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_9_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_0_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_1_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_10_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_11_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_12_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_13_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_14_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_15_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_16_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_17_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_18_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_19_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_2_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_20_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_21_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_22_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_23_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_24_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_25_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_26_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_27_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_28_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_29_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_3_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_30_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_31_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_4_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_5_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_6_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_7_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_8_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_9_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_0_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_1_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_10_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_11_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_12_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_13_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_14_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_15_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_16_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_17_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_18_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_19_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_2_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_20_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_21_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_22_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_23_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_24_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_25_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_26_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_27_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_28_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_29_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_3_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_30_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_31_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_4_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_5_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_6_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_7_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_8_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_9_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_0_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_1_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_10_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_11_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_12_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_13_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_14_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_15_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_16_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_17_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_18_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_19_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_2_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_20_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_21_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_22_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_23_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_24_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_25_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_26_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_27_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_28_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_29_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_3_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_30_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_31_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_4_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_5_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_6_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_7_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_8_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_9_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_0_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_1_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_10_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_11_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_12_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_13_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_14_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_15_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_16_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_17_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_18_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_19_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_2_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_20_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_21_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_22_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_23_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_24_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_25_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_26_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_27_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_28_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_29_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_3_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_30_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_31_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_4_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_5_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_6_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_7_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_8_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_9_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_0_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_1_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_10_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_11_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_12_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_13_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_14_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_15_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_16_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_17_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_18_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_19_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_2_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_20_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_21_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_22_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_23_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_24_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_25_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_26_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_27_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_28_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_29_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_3_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_30_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_31_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_4_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_5_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_6_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_7_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_8_UNCONNECTED;
  wire [0:3]NLW_U0_LMB_Byte_Enable_9_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_0_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_1_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_10_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_11_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_12_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_13_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_14_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_15_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_16_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_17_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_18_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_19_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_2_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_20_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_21_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_22_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_23_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_24_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_25_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_26_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_27_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_28_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_29_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_3_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_30_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_31_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_4_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_5_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_6_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_7_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_8_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Addr_9_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_0_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_1_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_10_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_11_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_12_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_13_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_14_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_15_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_16_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_17_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_18_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_19_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_2_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_20_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_21_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_22_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_23_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_24_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_25_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_26_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_27_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_28_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_29_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_3_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_30_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_31_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_4_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_5_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_6_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_7_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_8_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Read_9_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_0_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_1_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_10_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_11_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_12_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_13_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_14_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_15_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_16_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_17_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_18_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_19_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_2_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_20_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_21_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_22_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_23_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_24_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_25_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_26_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_27_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_28_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_29_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_3_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_30_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_31_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_4_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_5_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_6_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_7_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_8_UNCONNECTED;
  wire [0:31]NLW_U0_LMB_Data_Write_9_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXIS_TDATA_UNCONNECTED;
  wire [6:0]NLW_U0_M_AXIS_TID_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_ARADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_ARBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_ARCACHE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_ARID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_ARLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_ARPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_ARQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_ARSIZE_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_AWBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_AWCACHE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_AWID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_AWLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_AWPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_AWQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_AWSIZE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_BID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_BRESP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_RDATA_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_RID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_RRESP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_WDATA_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_WSTRB_UNCONNECTED;
  wire [3:0]NLW_U0_S_AXI_ARADDR_UNCONNECTED;
  wire [3:0]NLW_U0_S_AXI_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_S_AXI_BRESP_UNCONNECTED;
  wire [31:0]NLW_U0_S_AXI_RDATA_UNCONNECTED;
  wire [1:0]NLW_U0_S_AXI_RRESP_UNCONNECTED;
  wire [31:0]NLW_U0_S_AXI_WDATA_UNCONNECTED;
  wire [3:0]NLW_U0_S_AXI_WSTRB_UNCONNECTED;
  wire [31:0]NLW_U0_TRACE_DATA_UNCONNECTED;

  (* C_ADDR_SIZE = "32" *) 
  (* C_AVOID_PRIMITIVES = "0" *) 
  (* C_BSCANID = "76547328" *) 
  (* C_DATA_SIZE = "32" *) 
  (* C_DBG_MEM_ACCESS = "0" *) 
  (* C_DBG_REG_ACCESS = "0" *) 
  (* C_DEBUG_INTERFACE = "0" *) 
  (* C_EXT_TRIG_RESET_VALUE = "20'b11110001001000110100" *) 
  (* C_FAMILY = "spartan7" *) 
  (* C_INTERCONNECT = "2" *) 
  (* C_JTAG_CHAIN = "2" *) 
  (* C_LMB_PROTOCOL = "0" *) 
  (* C_MB_DBG_PORTS = "1" *) 
  (* C_M_AXIS_DATA_WIDTH = "32" *) 
  (* C_M_AXIS_ID_WIDTH = "7" *) 
  (* C_M_AXI_ADDR_WIDTH = "32" *) 
  (* C_M_AXI_DATA_WIDTH = "32" *) 
  (* C_M_AXI_THREAD_ID_WIDTH = "1" *) 
  (* C_S_AXI_ACLK_FREQ_HZ = "100000000" *) 
  (* C_S_AXI_ADDR_WIDTH = "4" *) 
  (* C_S_AXI_DATA_WIDTH = "32" *) 
  (* C_TRACE_ASYNC_RESET = "0" *) 
  (* C_TRACE_CLK_FREQ_HZ = "200000000" *) 
  (* C_TRACE_CLK_OUT_PHASE = "90" *) 
  (* C_TRACE_DATA_WIDTH = "32" *) 
  (* C_TRACE_ID = "110" *) 
  (* C_TRACE_OUTPUT = "0" *) 
  (* C_TRACE_PROTOCOL = "1" *) 
  (* C_USE_BSCAN = "0" *) 
  (* C_USE_CONFIG_RESET = "0" *) 
  (* C_USE_CROSS_TRIGGER = "0" *) 
  (* C_USE_UART = "0" *) 
  system_mdm_1_0__MDM U0
       (.Config_Reset(NLW_U0_Config_Reset_UNCONNECTED),
        .Dbg_ARADDR_0(NLW_U0_Dbg_ARADDR_0_UNCONNECTED[14:2]),
        .Dbg_ARADDR_1(NLW_U0_Dbg_ARADDR_1_UNCONNECTED[14:2]),
        .Dbg_ARADDR_10(NLW_U0_Dbg_ARADDR_10_UNCONNECTED[14:2]),
        .Dbg_ARADDR_11(NLW_U0_Dbg_ARADDR_11_UNCONNECTED[14:2]),
        .Dbg_ARADDR_12(NLW_U0_Dbg_ARADDR_12_UNCONNECTED[14:2]),
        .Dbg_ARADDR_13(NLW_U0_Dbg_ARADDR_13_UNCONNECTED[14:2]),
        .Dbg_ARADDR_14(NLW_U0_Dbg_ARADDR_14_UNCONNECTED[14:2]),
        .Dbg_ARADDR_15(NLW_U0_Dbg_ARADDR_15_UNCONNECTED[14:2]),
        .Dbg_ARADDR_16(NLW_U0_Dbg_ARADDR_16_UNCONNECTED[14:2]),
        .Dbg_ARADDR_17(NLW_U0_Dbg_ARADDR_17_UNCONNECTED[14:2]),
        .Dbg_ARADDR_18(NLW_U0_Dbg_ARADDR_18_UNCONNECTED[14:2]),
        .Dbg_ARADDR_19(NLW_U0_Dbg_ARADDR_19_UNCONNECTED[14:2]),
        .Dbg_ARADDR_2(NLW_U0_Dbg_ARADDR_2_UNCONNECTED[14:2]),
        .Dbg_ARADDR_20(NLW_U0_Dbg_ARADDR_20_UNCONNECTED[14:2]),
        .Dbg_ARADDR_21(NLW_U0_Dbg_ARADDR_21_UNCONNECTED[14:2]),
        .Dbg_ARADDR_22(NLW_U0_Dbg_ARADDR_22_UNCONNECTED[14:2]),
        .Dbg_ARADDR_23(NLW_U0_Dbg_ARADDR_23_UNCONNECTED[14:2]),
        .Dbg_ARADDR_24(NLW_U0_Dbg_ARADDR_24_UNCONNECTED[14:2]),
        .Dbg_ARADDR_25(NLW_U0_Dbg_ARADDR_25_UNCONNECTED[14:2]),
        .Dbg_ARADDR_26(NLW_U0_Dbg_ARADDR_26_UNCONNECTED[14:2]),
        .Dbg_ARADDR_27(NLW_U0_Dbg_ARADDR_27_UNCONNECTED[14:2]),
        .Dbg_ARADDR_28(NLW_U0_Dbg_ARADDR_28_UNCONNECTED[14:2]),
        .Dbg_ARADDR_29(NLW_U0_Dbg_ARADDR_29_UNCONNECTED[14:2]),
        .Dbg_ARADDR_3(NLW_U0_Dbg_ARADDR_3_UNCONNECTED[14:2]),
        .Dbg_ARADDR_30(NLW_U0_Dbg_ARADDR_30_UNCONNECTED[14:2]),
        .Dbg_ARADDR_31(NLW_U0_Dbg_ARADDR_31_UNCONNECTED[14:2]),
        .Dbg_ARADDR_4(NLW_U0_Dbg_ARADDR_4_UNCONNECTED[14:2]),
        .Dbg_ARADDR_5(NLW_U0_Dbg_ARADDR_5_UNCONNECTED[14:2]),
        .Dbg_ARADDR_6(NLW_U0_Dbg_ARADDR_6_UNCONNECTED[14:2]),
        .Dbg_ARADDR_7(NLW_U0_Dbg_ARADDR_7_UNCONNECTED[14:2]),
        .Dbg_ARADDR_8(NLW_U0_Dbg_ARADDR_8_UNCONNECTED[14:2]),
        .Dbg_ARADDR_9(NLW_U0_Dbg_ARADDR_9_UNCONNECTED[14:2]),
        .Dbg_ARREADY_0(NLW_U0_Dbg_ARREADY_0_UNCONNECTED),
        .Dbg_ARREADY_1(NLW_U0_Dbg_ARREADY_1_UNCONNECTED),
        .Dbg_ARREADY_10(NLW_U0_Dbg_ARREADY_10_UNCONNECTED),
        .Dbg_ARREADY_11(NLW_U0_Dbg_ARREADY_11_UNCONNECTED),
        .Dbg_ARREADY_12(NLW_U0_Dbg_ARREADY_12_UNCONNECTED),
        .Dbg_ARREADY_13(NLW_U0_Dbg_ARREADY_13_UNCONNECTED),
        .Dbg_ARREADY_14(NLW_U0_Dbg_ARREADY_14_UNCONNECTED),
        .Dbg_ARREADY_15(NLW_U0_Dbg_ARREADY_15_UNCONNECTED),
        .Dbg_ARREADY_16(NLW_U0_Dbg_ARREADY_16_UNCONNECTED),
        .Dbg_ARREADY_17(NLW_U0_Dbg_ARREADY_17_UNCONNECTED),
        .Dbg_ARREADY_18(NLW_U0_Dbg_ARREADY_18_UNCONNECTED),
        .Dbg_ARREADY_19(NLW_U0_Dbg_ARREADY_19_UNCONNECTED),
        .Dbg_ARREADY_2(NLW_U0_Dbg_ARREADY_2_UNCONNECTED),
        .Dbg_ARREADY_20(NLW_U0_Dbg_ARREADY_20_UNCONNECTED),
        .Dbg_ARREADY_21(NLW_U0_Dbg_ARREADY_21_UNCONNECTED),
        .Dbg_ARREADY_22(NLW_U0_Dbg_ARREADY_22_UNCONNECTED),
        .Dbg_ARREADY_23(NLW_U0_Dbg_ARREADY_23_UNCONNECTED),
        .Dbg_ARREADY_24(NLW_U0_Dbg_ARREADY_24_UNCONNECTED),
        .Dbg_ARREADY_25(NLW_U0_Dbg_ARREADY_25_UNCONNECTED),
        .Dbg_ARREADY_26(NLW_U0_Dbg_ARREADY_26_UNCONNECTED),
        .Dbg_ARREADY_27(NLW_U0_Dbg_ARREADY_27_UNCONNECTED),
        .Dbg_ARREADY_28(NLW_U0_Dbg_ARREADY_28_UNCONNECTED),
        .Dbg_ARREADY_29(NLW_U0_Dbg_ARREADY_29_UNCONNECTED),
        .Dbg_ARREADY_3(NLW_U0_Dbg_ARREADY_3_UNCONNECTED),
        .Dbg_ARREADY_30(NLW_U0_Dbg_ARREADY_30_UNCONNECTED),
        .Dbg_ARREADY_31(NLW_U0_Dbg_ARREADY_31_UNCONNECTED),
        .Dbg_ARREADY_4(NLW_U0_Dbg_ARREADY_4_UNCONNECTED),
        .Dbg_ARREADY_5(NLW_U0_Dbg_ARREADY_5_UNCONNECTED),
        .Dbg_ARREADY_6(NLW_U0_Dbg_ARREADY_6_UNCONNECTED),
        .Dbg_ARREADY_7(NLW_U0_Dbg_ARREADY_7_UNCONNECTED),
        .Dbg_ARREADY_8(NLW_U0_Dbg_ARREADY_8_UNCONNECTED),
        .Dbg_ARREADY_9(NLW_U0_Dbg_ARREADY_9_UNCONNECTED),
        .Dbg_ARVALID_0(NLW_U0_Dbg_ARVALID_0_UNCONNECTED),
        .Dbg_ARVALID_1(NLW_U0_Dbg_ARVALID_1_UNCONNECTED),
        .Dbg_ARVALID_10(NLW_U0_Dbg_ARVALID_10_UNCONNECTED),
        .Dbg_ARVALID_11(NLW_U0_Dbg_ARVALID_11_UNCONNECTED),
        .Dbg_ARVALID_12(NLW_U0_Dbg_ARVALID_12_UNCONNECTED),
        .Dbg_ARVALID_13(NLW_U0_Dbg_ARVALID_13_UNCONNECTED),
        .Dbg_ARVALID_14(NLW_U0_Dbg_ARVALID_14_UNCONNECTED),
        .Dbg_ARVALID_15(NLW_U0_Dbg_ARVALID_15_UNCONNECTED),
        .Dbg_ARVALID_16(NLW_U0_Dbg_ARVALID_16_UNCONNECTED),
        .Dbg_ARVALID_17(NLW_U0_Dbg_ARVALID_17_UNCONNECTED),
        .Dbg_ARVALID_18(NLW_U0_Dbg_ARVALID_18_UNCONNECTED),
        .Dbg_ARVALID_19(NLW_U0_Dbg_ARVALID_19_UNCONNECTED),
        .Dbg_ARVALID_2(NLW_U0_Dbg_ARVALID_2_UNCONNECTED),
        .Dbg_ARVALID_20(NLW_U0_Dbg_ARVALID_20_UNCONNECTED),
        .Dbg_ARVALID_21(NLW_U0_Dbg_ARVALID_21_UNCONNECTED),
        .Dbg_ARVALID_22(NLW_U0_Dbg_ARVALID_22_UNCONNECTED),
        .Dbg_ARVALID_23(NLW_U0_Dbg_ARVALID_23_UNCONNECTED),
        .Dbg_ARVALID_24(NLW_U0_Dbg_ARVALID_24_UNCONNECTED),
        .Dbg_ARVALID_25(NLW_U0_Dbg_ARVALID_25_UNCONNECTED),
        .Dbg_ARVALID_26(NLW_U0_Dbg_ARVALID_26_UNCONNECTED),
        .Dbg_ARVALID_27(NLW_U0_Dbg_ARVALID_27_UNCONNECTED),
        .Dbg_ARVALID_28(NLW_U0_Dbg_ARVALID_28_UNCONNECTED),
        .Dbg_ARVALID_29(NLW_U0_Dbg_ARVALID_29_UNCONNECTED),
        .Dbg_ARVALID_3(NLW_U0_Dbg_ARVALID_3_UNCONNECTED),
        .Dbg_ARVALID_30(NLW_U0_Dbg_ARVALID_30_UNCONNECTED),
        .Dbg_ARVALID_31(NLW_U0_Dbg_ARVALID_31_UNCONNECTED),
        .Dbg_ARVALID_4(NLW_U0_Dbg_ARVALID_4_UNCONNECTED),
        .Dbg_ARVALID_5(NLW_U0_Dbg_ARVALID_5_UNCONNECTED),
        .Dbg_ARVALID_6(NLW_U0_Dbg_ARVALID_6_UNCONNECTED),
        .Dbg_ARVALID_7(NLW_U0_Dbg_ARVALID_7_UNCONNECTED),
        .Dbg_ARVALID_8(NLW_U0_Dbg_ARVALID_8_UNCONNECTED),
        .Dbg_ARVALID_9(NLW_U0_Dbg_ARVALID_9_UNCONNECTED),
        .Dbg_AWADDR_0(NLW_U0_Dbg_AWADDR_0_UNCONNECTED[14:2]),
        .Dbg_AWADDR_1(NLW_U0_Dbg_AWADDR_1_UNCONNECTED[14:2]),
        .Dbg_AWADDR_10(NLW_U0_Dbg_AWADDR_10_UNCONNECTED[14:2]),
        .Dbg_AWADDR_11(NLW_U0_Dbg_AWADDR_11_UNCONNECTED[14:2]),
        .Dbg_AWADDR_12(NLW_U0_Dbg_AWADDR_12_UNCONNECTED[14:2]),
        .Dbg_AWADDR_13(NLW_U0_Dbg_AWADDR_13_UNCONNECTED[14:2]),
        .Dbg_AWADDR_14(NLW_U0_Dbg_AWADDR_14_UNCONNECTED[14:2]),
        .Dbg_AWADDR_15(NLW_U0_Dbg_AWADDR_15_UNCONNECTED[14:2]),
        .Dbg_AWADDR_16(NLW_U0_Dbg_AWADDR_16_UNCONNECTED[14:2]),
        .Dbg_AWADDR_17(NLW_U0_Dbg_AWADDR_17_UNCONNECTED[14:2]),
        .Dbg_AWADDR_18(NLW_U0_Dbg_AWADDR_18_UNCONNECTED[14:2]),
        .Dbg_AWADDR_19(NLW_U0_Dbg_AWADDR_19_UNCONNECTED[14:2]),
        .Dbg_AWADDR_2(NLW_U0_Dbg_AWADDR_2_UNCONNECTED[14:2]),
        .Dbg_AWADDR_20(NLW_U0_Dbg_AWADDR_20_UNCONNECTED[14:2]),
        .Dbg_AWADDR_21(NLW_U0_Dbg_AWADDR_21_UNCONNECTED[14:2]),
        .Dbg_AWADDR_22(NLW_U0_Dbg_AWADDR_22_UNCONNECTED[14:2]),
        .Dbg_AWADDR_23(NLW_U0_Dbg_AWADDR_23_UNCONNECTED[14:2]),
        .Dbg_AWADDR_24(NLW_U0_Dbg_AWADDR_24_UNCONNECTED[14:2]),
        .Dbg_AWADDR_25(NLW_U0_Dbg_AWADDR_25_UNCONNECTED[14:2]),
        .Dbg_AWADDR_26(NLW_U0_Dbg_AWADDR_26_UNCONNECTED[14:2]),
        .Dbg_AWADDR_27(NLW_U0_Dbg_AWADDR_27_UNCONNECTED[14:2]),
        .Dbg_AWADDR_28(NLW_U0_Dbg_AWADDR_28_UNCONNECTED[14:2]),
        .Dbg_AWADDR_29(NLW_U0_Dbg_AWADDR_29_UNCONNECTED[14:2]),
        .Dbg_AWADDR_3(NLW_U0_Dbg_AWADDR_3_UNCONNECTED[14:2]),
        .Dbg_AWADDR_30(NLW_U0_Dbg_AWADDR_30_UNCONNECTED[14:2]),
        .Dbg_AWADDR_31(NLW_U0_Dbg_AWADDR_31_UNCONNECTED[14:2]),
        .Dbg_AWADDR_4(NLW_U0_Dbg_AWADDR_4_UNCONNECTED[14:2]),
        .Dbg_AWADDR_5(NLW_U0_Dbg_AWADDR_5_UNCONNECTED[14:2]),
        .Dbg_AWADDR_6(NLW_U0_Dbg_AWADDR_6_UNCONNECTED[14:2]),
        .Dbg_AWADDR_7(NLW_U0_Dbg_AWADDR_7_UNCONNECTED[14:2]),
        .Dbg_AWADDR_8(NLW_U0_Dbg_AWADDR_8_UNCONNECTED[14:2]),
        .Dbg_AWADDR_9(NLW_U0_Dbg_AWADDR_9_UNCONNECTED[14:2]),
        .Dbg_AWREADY_0(NLW_U0_Dbg_AWREADY_0_UNCONNECTED),
        .Dbg_AWREADY_1(NLW_U0_Dbg_AWREADY_1_UNCONNECTED),
        .Dbg_AWREADY_10(NLW_U0_Dbg_AWREADY_10_UNCONNECTED),
        .Dbg_AWREADY_11(NLW_U0_Dbg_AWREADY_11_UNCONNECTED),
        .Dbg_AWREADY_12(NLW_U0_Dbg_AWREADY_12_UNCONNECTED),
        .Dbg_AWREADY_13(NLW_U0_Dbg_AWREADY_13_UNCONNECTED),
        .Dbg_AWREADY_14(NLW_U0_Dbg_AWREADY_14_UNCONNECTED),
        .Dbg_AWREADY_15(NLW_U0_Dbg_AWREADY_15_UNCONNECTED),
        .Dbg_AWREADY_16(NLW_U0_Dbg_AWREADY_16_UNCONNECTED),
        .Dbg_AWREADY_17(NLW_U0_Dbg_AWREADY_17_UNCONNECTED),
        .Dbg_AWREADY_18(NLW_U0_Dbg_AWREADY_18_UNCONNECTED),
        .Dbg_AWREADY_19(NLW_U0_Dbg_AWREADY_19_UNCONNECTED),
        .Dbg_AWREADY_2(NLW_U0_Dbg_AWREADY_2_UNCONNECTED),
        .Dbg_AWREADY_20(NLW_U0_Dbg_AWREADY_20_UNCONNECTED),
        .Dbg_AWREADY_21(NLW_U0_Dbg_AWREADY_21_UNCONNECTED),
        .Dbg_AWREADY_22(NLW_U0_Dbg_AWREADY_22_UNCONNECTED),
        .Dbg_AWREADY_23(NLW_U0_Dbg_AWREADY_23_UNCONNECTED),
        .Dbg_AWREADY_24(NLW_U0_Dbg_AWREADY_24_UNCONNECTED),
        .Dbg_AWREADY_25(NLW_U0_Dbg_AWREADY_25_UNCONNECTED),
        .Dbg_AWREADY_26(NLW_U0_Dbg_AWREADY_26_UNCONNECTED),
        .Dbg_AWREADY_27(NLW_U0_Dbg_AWREADY_27_UNCONNECTED),
        .Dbg_AWREADY_28(NLW_U0_Dbg_AWREADY_28_UNCONNECTED),
        .Dbg_AWREADY_29(NLW_U0_Dbg_AWREADY_29_UNCONNECTED),
        .Dbg_AWREADY_3(NLW_U0_Dbg_AWREADY_3_UNCONNECTED),
        .Dbg_AWREADY_30(NLW_U0_Dbg_AWREADY_30_UNCONNECTED),
        .Dbg_AWREADY_31(NLW_U0_Dbg_AWREADY_31_UNCONNECTED),
        .Dbg_AWREADY_4(NLW_U0_Dbg_AWREADY_4_UNCONNECTED),
        .Dbg_AWREADY_5(NLW_U0_Dbg_AWREADY_5_UNCONNECTED),
        .Dbg_AWREADY_6(NLW_U0_Dbg_AWREADY_6_UNCONNECTED),
        .Dbg_AWREADY_7(NLW_U0_Dbg_AWREADY_7_UNCONNECTED),
        .Dbg_AWREADY_8(NLW_U0_Dbg_AWREADY_8_UNCONNECTED),
        .Dbg_AWREADY_9(NLW_U0_Dbg_AWREADY_9_UNCONNECTED),
        .Dbg_AWVALID_0(NLW_U0_Dbg_AWVALID_0_UNCONNECTED),
        .Dbg_AWVALID_1(NLW_U0_Dbg_AWVALID_1_UNCONNECTED),
        .Dbg_AWVALID_10(NLW_U0_Dbg_AWVALID_10_UNCONNECTED),
        .Dbg_AWVALID_11(NLW_U0_Dbg_AWVALID_11_UNCONNECTED),
        .Dbg_AWVALID_12(NLW_U0_Dbg_AWVALID_12_UNCONNECTED),
        .Dbg_AWVALID_13(NLW_U0_Dbg_AWVALID_13_UNCONNECTED),
        .Dbg_AWVALID_14(NLW_U0_Dbg_AWVALID_14_UNCONNECTED),
        .Dbg_AWVALID_15(NLW_U0_Dbg_AWVALID_15_UNCONNECTED),
        .Dbg_AWVALID_16(NLW_U0_Dbg_AWVALID_16_UNCONNECTED),
        .Dbg_AWVALID_17(NLW_U0_Dbg_AWVALID_17_UNCONNECTED),
        .Dbg_AWVALID_18(NLW_U0_Dbg_AWVALID_18_UNCONNECTED),
        .Dbg_AWVALID_19(NLW_U0_Dbg_AWVALID_19_UNCONNECTED),
        .Dbg_AWVALID_2(NLW_U0_Dbg_AWVALID_2_UNCONNECTED),
        .Dbg_AWVALID_20(NLW_U0_Dbg_AWVALID_20_UNCONNECTED),
        .Dbg_AWVALID_21(NLW_U0_Dbg_AWVALID_21_UNCONNECTED),
        .Dbg_AWVALID_22(NLW_U0_Dbg_AWVALID_22_UNCONNECTED),
        .Dbg_AWVALID_23(NLW_U0_Dbg_AWVALID_23_UNCONNECTED),
        .Dbg_AWVALID_24(NLW_U0_Dbg_AWVALID_24_UNCONNECTED),
        .Dbg_AWVALID_25(NLW_U0_Dbg_AWVALID_25_UNCONNECTED),
        .Dbg_AWVALID_26(NLW_U0_Dbg_AWVALID_26_UNCONNECTED),
        .Dbg_AWVALID_27(NLW_U0_Dbg_AWVALID_27_UNCONNECTED),
        .Dbg_AWVALID_28(NLW_U0_Dbg_AWVALID_28_UNCONNECTED),
        .Dbg_AWVALID_29(NLW_U0_Dbg_AWVALID_29_UNCONNECTED),
        .Dbg_AWVALID_3(NLW_U0_Dbg_AWVALID_3_UNCONNECTED),
        .Dbg_AWVALID_30(NLW_U0_Dbg_AWVALID_30_UNCONNECTED),
        .Dbg_AWVALID_31(NLW_U0_Dbg_AWVALID_31_UNCONNECTED),
        .Dbg_AWVALID_4(NLW_U0_Dbg_AWVALID_4_UNCONNECTED),
        .Dbg_AWVALID_5(NLW_U0_Dbg_AWVALID_5_UNCONNECTED),
        .Dbg_AWVALID_6(NLW_U0_Dbg_AWVALID_6_UNCONNECTED),
        .Dbg_AWVALID_7(NLW_U0_Dbg_AWVALID_7_UNCONNECTED),
        .Dbg_AWVALID_8(NLW_U0_Dbg_AWVALID_8_UNCONNECTED),
        .Dbg_AWVALID_9(NLW_U0_Dbg_AWVALID_9_UNCONNECTED),
        .Dbg_BREADY_0(NLW_U0_Dbg_BREADY_0_UNCONNECTED),
        .Dbg_BREADY_1(NLW_U0_Dbg_BREADY_1_UNCONNECTED),
        .Dbg_BREADY_10(NLW_U0_Dbg_BREADY_10_UNCONNECTED),
        .Dbg_BREADY_11(NLW_U0_Dbg_BREADY_11_UNCONNECTED),
        .Dbg_BREADY_12(NLW_U0_Dbg_BREADY_12_UNCONNECTED),
        .Dbg_BREADY_13(NLW_U0_Dbg_BREADY_13_UNCONNECTED),
        .Dbg_BREADY_14(NLW_U0_Dbg_BREADY_14_UNCONNECTED),
        .Dbg_BREADY_15(NLW_U0_Dbg_BREADY_15_UNCONNECTED),
        .Dbg_BREADY_16(NLW_U0_Dbg_BREADY_16_UNCONNECTED),
        .Dbg_BREADY_17(NLW_U0_Dbg_BREADY_17_UNCONNECTED),
        .Dbg_BREADY_18(NLW_U0_Dbg_BREADY_18_UNCONNECTED),
        .Dbg_BREADY_19(NLW_U0_Dbg_BREADY_19_UNCONNECTED),
        .Dbg_BREADY_2(NLW_U0_Dbg_BREADY_2_UNCONNECTED),
        .Dbg_BREADY_20(NLW_U0_Dbg_BREADY_20_UNCONNECTED),
        .Dbg_BREADY_21(NLW_U0_Dbg_BREADY_21_UNCONNECTED),
        .Dbg_BREADY_22(NLW_U0_Dbg_BREADY_22_UNCONNECTED),
        .Dbg_BREADY_23(NLW_U0_Dbg_BREADY_23_UNCONNECTED),
        .Dbg_BREADY_24(NLW_U0_Dbg_BREADY_24_UNCONNECTED),
        .Dbg_BREADY_25(NLW_U0_Dbg_BREADY_25_UNCONNECTED),
        .Dbg_BREADY_26(NLW_U0_Dbg_BREADY_26_UNCONNECTED),
        .Dbg_BREADY_27(NLW_U0_Dbg_BREADY_27_UNCONNECTED),
        .Dbg_BREADY_28(NLW_U0_Dbg_BREADY_28_UNCONNECTED),
        .Dbg_BREADY_29(NLW_U0_Dbg_BREADY_29_UNCONNECTED),
        .Dbg_BREADY_3(NLW_U0_Dbg_BREADY_3_UNCONNECTED),
        .Dbg_BREADY_30(NLW_U0_Dbg_BREADY_30_UNCONNECTED),
        .Dbg_BREADY_31(NLW_U0_Dbg_BREADY_31_UNCONNECTED),
        .Dbg_BREADY_4(NLW_U0_Dbg_BREADY_4_UNCONNECTED),
        .Dbg_BREADY_5(NLW_U0_Dbg_BREADY_5_UNCONNECTED),
        .Dbg_BREADY_6(NLW_U0_Dbg_BREADY_6_UNCONNECTED),
        .Dbg_BREADY_7(NLW_U0_Dbg_BREADY_7_UNCONNECTED),
        .Dbg_BREADY_8(NLW_U0_Dbg_BREADY_8_UNCONNECTED),
        .Dbg_BREADY_9(NLW_U0_Dbg_BREADY_9_UNCONNECTED),
        .Dbg_BRESP_0(NLW_U0_Dbg_BRESP_0_UNCONNECTED[1:0]),
        .Dbg_BRESP_1(NLW_U0_Dbg_BRESP_1_UNCONNECTED[1:0]),
        .Dbg_BRESP_10(NLW_U0_Dbg_BRESP_10_UNCONNECTED[1:0]),
        .Dbg_BRESP_11(NLW_U0_Dbg_BRESP_11_UNCONNECTED[1:0]),
        .Dbg_BRESP_12(NLW_U0_Dbg_BRESP_12_UNCONNECTED[1:0]),
        .Dbg_BRESP_13(NLW_U0_Dbg_BRESP_13_UNCONNECTED[1:0]),
        .Dbg_BRESP_14(NLW_U0_Dbg_BRESP_14_UNCONNECTED[1:0]),
        .Dbg_BRESP_15(NLW_U0_Dbg_BRESP_15_UNCONNECTED[1:0]),
        .Dbg_BRESP_16(NLW_U0_Dbg_BRESP_16_UNCONNECTED[1:0]),
        .Dbg_BRESP_17(NLW_U0_Dbg_BRESP_17_UNCONNECTED[1:0]),
        .Dbg_BRESP_18(NLW_U0_Dbg_BRESP_18_UNCONNECTED[1:0]),
        .Dbg_BRESP_19(NLW_U0_Dbg_BRESP_19_UNCONNECTED[1:0]),
        .Dbg_BRESP_2(NLW_U0_Dbg_BRESP_2_UNCONNECTED[1:0]),
        .Dbg_BRESP_20(NLW_U0_Dbg_BRESP_20_UNCONNECTED[1:0]),
        .Dbg_BRESP_21(NLW_U0_Dbg_BRESP_21_UNCONNECTED[1:0]),
        .Dbg_BRESP_22(NLW_U0_Dbg_BRESP_22_UNCONNECTED[1:0]),
        .Dbg_BRESP_23(NLW_U0_Dbg_BRESP_23_UNCONNECTED[1:0]),
        .Dbg_BRESP_24(NLW_U0_Dbg_BRESP_24_UNCONNECTED[1:0]),
        .Dbg_BRESP_25(NLW_U0_Dbg_BRESP_25_UNCONNECTED[1:0]),
        .Dbg_BRESP_26(NLW_U0_Dbg_BRESP_26_UNCONNECTED[1:0]),
        .Dbg_BRESP_27(NLW_U0_Dbg_BRESP_27_UNCONNECTED[1:0]),
        .Dbg_BRESP_28(NLW_U0_Dbg_BRESP_28_UNCONNECTED[1:0]),
        .Dbg_BRESP_29(NLW_U0_Dbg_BRESP_29_UNCONNECTED[1:0]),
        .Dbg_BRESP_3(NLW_U0_Dbg_BRESP_3_UNCONNECTED[1:0]),
        .Dbg_BRESP_30(NLW_U0_Dbg_BRESP_30_UNCONNECTED[1:0]),
        .Dbg_BRESP_31(NLW_U0_Dbg_BRESP_31_UNCONNECTED[1:0]),
        .Dbg_BRESP_4(NLW_U0_Dbg_BRESP_4_UNCONNECTED[1:0]),
        .Dbg_BRESP_5(NLW_U0_Dbg_BRESP_5_UNCONNECTED[1:0]),
        .Dbg_BRESP_6(NLW_U0_Dbg_BRESP_6_UNCONNECTED[1:0]),
        .Dbg_BRESP_7(NLW_U0_Dbg_BRESP_7_UNCONNECTED[1:0]),
        .Dbg_BRESP_8(NLW_U0_Dbg_BRESP_8_UNCONNECTED[1:0]),
        .Dbg_BRESP_9(NLW_U0_Dbg_BRESP_9_UNCONNECTED[1:0]),
        .Dbg_BVALID_0(NLW_U0_Dbg_BVALID_0_UNCONNECTED),
        .Dbg_BVALID_1(NLW_U0_Dbg_BVALID_1_UNCONNECTED),
        .Dbg_BVALID_10(NLW_U0_Dbg_BVALID_10_UNCONNECTED),
        .Dbg_BVALID_11(NLW_U0_Dbg_BVALID_11_UNCONNECTED),
        .Dbg_BVALID_12(NLW_U0_Dbg_BVALID_12_UNCONNECTED),
        .Dbg_BVALID_13(NLW_U0_Dbg_BVALID_13_UNCONNECTED),
        .Dbg_BVALID_14(NLW_U0_Dbg_BVALID_14_UNCONNECTED),
        .Dbg_BVALID_15(NLW_U0_Dbg_BVALID_15_UNCONNECTED),
        .Dbg_BVALID_16(NLW_U0_Dbg_BVALID_16_UNCONNECTED),
        .Dbg_BVALID_17(NLW_U0_Dbg_BVALID_17_UNCONNECTED),
        .Dbg_BVALID_18(NLW_U0_Dbg_BVALID_18_UNCONNECTED),
        .Dbg_BVALID_19(NLW_U0_Dbg_BVALID_19_UNCONNECTED),
        .Dbg_BVALID_2(NLW_U0_Dbg_BVALID_2_UNCONNECTED),
        .Dbg_BVALID_20(NLW_U0_Dbg_BVALID_20_UNCONNECTED),
        .Dbg_BVALID_21(NLW_U0_Dbg_BVALID_21_UNCONNECTED),
        .Dbg_BVALID_22(NLW_U0_Dbg_BVALID_22_UNCONNECTED),
        .Dbg_BVALID_23(NLW_U0_Dbg_BVALID_23_UNCONNECTED),
        .Dbg_BVALID_24(NLW_U0_Dbg_BVALID_24_UNCONNECTED),
        .Dbg_BVALID_25(NLW_U0_Dbg_BVALID_25_UNCONNECTED),
        .Dbg_BVALID_26(NLW_U0_Dbg_BVALID_26_UNCONNECTED),
        .Dbg_BVALID_27(NLW_U0_Dbg_BVALID_27_UNCONNECTED),
        .Dbg_BVALID_28(NLW_U0_Dbg_BVALID_28_UNCONNECTED),
        .Dbg_BVALID_29(NLW_U0_Dbg_BVALID_29_UNCONNECTED),
        .Dbg_BVALID_3(NLW_U0_Dbg_BVALID_3_UNCONNECTED),
        .Dbg_BVALID_30(NLW_U0_Dbg_BVALID_30_UNCONNECTED),
        .Dbg_BVALID_31(NLW_U0_Dbg_BVALID_31_UNCONNECTED),
        .Dbg_BVALID_4(NLW_U0_Dbg_BVALID_4_UNCONNECTED),
        .Dbg_BVALID_5(NLW_U0_Dbg_BVALID_5_UNCONNECTED),
        .Dbg_BVALID_6(NLW_U0_Dbg_BVALID_6_UNCONNECTED),
        .Dbg_BVALID_7(NLW_U0_Dbg_BVALID_7_UNCONNECTED),
        .Dbg_BVALID_8(NLW_U0_Dbg_BVALID_8_UNCONNECTED),
        .Dbg_BVALID_9(NLW_U0_Dbg_BVALID_9_UNCONNECTED),
        .Dbg_Capture_0(Dbg_Capture_0),
        .Dbg_Capture_1(NLW_U0_Dbg_Capture_1_UNCONNECTED),
        .Dbg_Capture_10(NLW_U0_Dbg_Capture_10_UNCONNECTED),
        .Dbg_Capture_11(NLW_U0_Dbg_Capture_11_UNCONNECTED),
        .Dbg_Capture_12(NLW_U0_Dbg_Capture_12_UNCONNECTED),
        .Dbg_Capture_13(NLW_U0_Dbg_Capture_13_UNCONNECTED),
        .Dbg_Capture_14(NLW_U0_Dbg_Capture_14_UNCONNECTED),
        .Dbg_Capture_15(NLW_U0_Dbg_Capture_15_UNCONNECTED),
        .Dbg_Capture_16(NLW_U0_Dbg_Capture_16_UNCONNECTED),
        .Dbg_Capture_17(NLW_U0_Dbg_Capture_17_UNCONNECTED),
        .Dbg_Capture_18(NLW_U0_Dbg_Capture_18_UNCONNECTED),
        .Dbg_Capture_19(NLW_U0_Dbg_Capture_19_UNCONNECTED),
        .Dbg_Capture_2(NLW_U0_Dbg_Capture_2_UNCONNECTED),
        .Dbg_Capture_20(NLW_U0_Dbg_Capture_20_UNCONNECTED),
        .Dbg_Capture_21(NLW_U0_Dbg_Capture_21_UNCONNECTED),
        .Dbg_Capture_22(NLW_U0_Dbg_Capture_22_UNCONNECTED),
        .Dbg_Capture_23(NLW_U0_Dbg_Capture_23_UNCONNECTED),
        .Dbg_Capture_24(NLW_U0_Dbg_Capture_24_UNCONNECTED),
        .Dbg_Capture_25(NLW_U0_Dbg_Capture_25_UNCONNECTED),
        .Dbg_Capture_26(NLW_U0_Dbg_Capture_26_UNCONNECTED),
        .Dbg_Capture_27(NLW_U0_Dbg_Capture_27_UNCONNECTED),
        .Dbg_Capture_28(NLW_U0_Dbg_Capture_28_UNCONNECTED),
        .Dbg_Capture_29(NLW_U0_Dbg_Capture_29_UNCONNECTED),
        .Dbg_Capture_3(NLW_U0_Dbg_Capture_3_UNCONNECTED),
        .Dbg_Capture_30(NLW_U0_Dbg_Capture_30_UNCONNECTED),
        .Dbg_Capture_31(NLW_U0_Dbg_Capture_31_UNCONNECTED),
        .Dbg_Capture_4(NLW_U0_Dbg_Capture_4_UNCONNECTED),
        .Dbg_Capture_5(NLW_U0_Dbg_Capture_5_UNCONNECTED),
        .Dbg_Capture_6(NLW_U0_Dbg_Capture_6_UNCONNECTED),
        .Dbg_Capture_7(NLW_U0_Dbg_Capture_7_UNCONNECTED),
        .Dbg_Capture_8(NLW_U0_Dbg_Capture_8_UNCONNECTED),
        .Dbg_Capture_9(NLW_U0_Dbg_Capture_9_UNCONNECTED),
        .Dbg_Clk_0(Dbg_Clk_0),
        .Dbg_Clk_1(NLW_U0_Dbg_Clk_1_UNCONNECTED),
        .Dbg_Clk_10(NLW_U0_Dbg_Clk_10_UNCONNECTED),
        .Dbg_Clk_11(NLW_U0_Dbg_Clk_11_UNCONNECTED),
        .Dbg_Clk_12(NLW_U0_Dbg_Clk_12_UNCONNECTED),
        .Dbg_Clk_13(NLW_U0_Dbg_Clk_13_UNCONNECTED),
        .Dbg_Clk_14(NLW_U0_Dbg_Clk_14_UNCONNECTED),
        .Dbg_Clk_15(NLW_U0_Dbg_Clk_15_UNCONNECTED),
        .Dbg_Clk_16(NLW_U0_Dbg_Clk_16_UNCONNECTED),
        .Dbg_Clk_17(NLW_U0_Dbg_Clk_17_UNCONNECTED),
        .Dbg_Clk_18(NLW_U0_Dbg_Clk_18_UNCONNECTED),
        .Dbg_Clk_19(NLW_U0_Dbg_Clk_19_UNCONNECTED),
        .Dbg_Clk_2(NLW_U0_Dbg_Clk_2_UNCONNECTED),
        .Dbg_Clk_20(NLW_U0_Dbg_Clk_20_UNCONNECTED),
        .Dbg_Clk_21(NLW_U0_Dbg_Clk_21_UNCONNECTED),
        .Dbg_Clk_22(NLW_U0_Dbg_Clk_22_UNCONNECTED),
        .Dbg_Clk_23(NLW_U0_Dbg_Clk_23_UNCONNECTED),
        .Dbg_Clk_24(NLW_U0_Dbg_Clk_24_UNCONNECTED),
        .Dbg_Clk_25(NLW_U0_Dbg_Clk_25_UNCONNECTED),
        .Dbg_Clk_26(NLW_U0_Dbg_Clk_26_UNCONNECTED),
        .Dbg_Clk_27(NLW_U0_Dbg_Clk_27_UNCONNECTED),
        .Dbg_Clk_28(NLW_U0_Dbg_Clk_28_UNCONNECTED),
        .Dbg_Clk_29(NLW_U0_Dbg_Clk_29_UNCONNECTED),
        .Dbg_Clk_3(NLW_U0_Dbg_Clk_3_UNCONNECTED),
        .Dbg_Clk_30(NLW_U0_Dbg_Clk_30_UNCONNECTED),
        .Dbg_Clk_31(NLW_U0_Dbg_Clk_31_UNCONNECTED),
        .Dbg_Clk_4(NLW_U0_Dbg_Clk_4_UNCONNECTED),
        .Dbg_Clk_5(NLW_U0_Dbg_Clk_5_UNCONNECTED),
        .Dbg_Clk_6(NLW_U0_Dbg_Clk_6_UNCONNECTED),
        .Dbg_Clk_7(NLW_U0_Dbg_Clk_7_UNCONNECTED),
        .Dbg_Clk_8(NLW_U0_Dbg_Clk_8_UNCONNECTED),
        .Dbg_Clk_9(NLW_U0_Dbg_Clk_9_UNCONNECTED),
        .Dbg_Disable_0(NLW_U0_Dbg_Disable_0_UNCONNECTED),
        .Dbg_Disable_1(NLW_U0_Dbg_Disable_1_UNCONNECTED),
        .Dbg_Disable_10(NLW_U0_Dbg_Disable_10_UNCONNECTED),
        .Dbg_Disable_11(NLW_U0_Dbg_Disable_11_UNCONNECTED),
        .Dbg_Disable_12(NLW_U0_Dbg_Disable_12_UNCONNECTED),
        .Dbg_Disable_13(NLW_U0_Dbg_Disable_13_UNCONNECTED),
        .Dbg_Disable_14(NLW_U0_Dbg_Disable_14_UNCONNECTED),
        .Dbg_Disable_15(NLW_U0_Dbg_Disable_15_UNCONNECTED),
        .Dbg_Disable_16(NLW_U0_Dbg_Disable_16_UNCONNECTED),
        .Dbg_Disable_17(NLW_U0_Dbg_Disable_17_UNCONNECTED),
        .Dbg_Disable_18(NLW_U0_Dbg_Disable_18_UNCONNECTED),
        .Dbg_Disable_19(NLW_U0_Dbg_Disable_19_UNCONNECTED),
        .Dbg_Disable_2(NLW_U0_Dbg_Disable_2_UNCONNECTED),
        .Dbg_Disable_20(NLW_U0_Dbg_Disable_20_UNCONNECTED),
        .Dbg_Disable_21(NLW_U0_Dbg_Disable_21_UNCONNECTED),
        .Dbg_Disable_22(NLW_U0_Dbg_Disable_22_UNCONNECTED),
        .Dbg_Disable_23(NLW_U0_Dbg_Disable_23_UNCONNECTED),
        .Dbg_Disable_24(NLW_U0_Dbg_Disable_24_UNCONNECTED),
        .Dbg_Disable_25(NLW_U0_Dbg_Disable_25_UNCONNECTED),
        .Dbg_Disable_26(NLW_U0_Dbg_Disable_26_UNCONNECTED),
        .Dbg_Disable_27(NLW_U0_Dbg_Disable_27_UNCONNECTED),
        .Dbg_Disable_28(NLW_U0_Dbg_Disable_28_UNCONNECTED),
        .Dbg_Disable_29(NLW_U0_Dbg_Disable_29_UNCONNECTED),
        .Dbg_Disable_3(NLW_U0_Dbg_Disable_3_UNCONNECTED),
        .Dbg_Disable_30(NLW_U0_Dbg_Disable_30_UNCONNECTED),
        .Dbg_Disable_31(NLW_U0_Dbg_Disable_31_UNCONNECTED),
        .Dbg_Disable_4(NLW_U0_Dbg_Disable_4_UNCONNECTED),
        .Dbg_Disable_5(NLW_U0_Dbg_Disable_5_UNCONNECTED),
        .Dbg_Disable_6(NLW_U0_Dbg_Disable_6_UNCONNECTED),
        .Dbg_Disable_7(NLW_U0_Dbg_Disable_7_UNCONNECTED),
        .Dbg_Disable_8(NLW_U0_Dbg_Disable_8_UNCONNECTED),
        .Dbg_Disable_9(NLW_U0_Dbg_Disable_9_UNCONNECTED),
        .Dbg_RDATA_0(NLW_U0_Dbg_RDATA_0_UNCONNECTED[31:0]),
        .Dbg_RDATA_1(NLW_U0_Dbg_RDATA_1_UNCONNECTED[31:0]),
        .Dbg_RDATA_10(NLW_U0_Dbg_RDATA_10_UNCONNECTED[31:0]),
        .Dbg_RDATA_11(NLW_U0_Dbg_RDATA_11_UNCONNECTED[31:0]),
        .Dbg_RDATA_12(NLW_U0_Dbg_RDATA_12_UNCONNECTED[31:0]),
        .Dbg_RDATA_13(NLW_U0_Dbg_RDATA_13_UNCONNECTED[31:0]),
        .Dbg_RDATA_14(NLW_U0_Dbg_RDATA_14_UNCONNECTED[31:0]),
        .Dbg_RDATA_15(NLW_U0_Dbg_RDATA_15_UNCONNECTED[31:0]),
        .Dbg_RDATA_16(NLW_U0_Dbg_RDATA_16_UNCONNECTED[31:0]),
        .Dbg_RDATA_17(NLW_U0_Dbg_RDATA_17_UNCONNECTED[31:0]),
        .Dbg_RDATA_18(NLW_U0_Dbg_RDATA_18_UNCONNECTED[31:0]),
        .Dbg_RDATA_19(NLW_U0_Dbg_RDATA_19_UNCONNECTED[31:0]),
        .Dbg_RDATA_2(NLW_U0_Dbg_RDATA_2_UNCONNECTED[31:0]),
        .Dbg_RDATA_20(NLW_U0_Dbg_RDATA_20_UNCONNECTED[31:0]),
        .Dbg_RDATA_21(NLW_U0_Dbg_RDATA_21_UNCONNECTED[31:0]),
        .Dbg_RDATA_22(NLW_U0_Dbg_RDATA_22_UNCONNECTED[31:0]),
        .Dbg_RDATA_23(NLW_U0_Dbg_RDATA_23_UNCONNECTED[31:0]),
        .Dbg_RDATA_24(NLW_U0_Dbg_RDATA_24_UNCONNECTED[31:0]),
        .Dbg_RDATA_25(NLW_U0_Dbg_RDATA_25_UNCONNECTED[31:0]),
        .Dbg_RDATA_26(NLW_U0_Dbg_RDATA_26_UNCONNECTED[31:0]),
        .Dbg_RDATA_27(NLW_U0_Dbg_RDATA_27_UNCONNECTED[31:0]),
        .Dbg_RDATA_28(NLW_U0_Dbg_RDATA_28_UNCONNECTED[31:0]),
        .Dbg_RDATA_29(NLW_U0_Dbg_RDATA_29_UNCONNECTED[31:0]),
        .Dbg_RDATA_3(NLW_U0_Dbg_RDATA_3_UNCONNECTED[31:0]),
        .Dbg_RDATA_30(NLW_U0_Dbg_RDATA_30_UNCONNECTED[31:0]),
        .Dbg_RDATA_31(NLW_U0_Dbg_RDATA_31_UNCONNECTED[31:0]),
        .Dbg_RDATA_4(NLW_U0_Dbg_RDATA_4_UNCONNECTED[31:0]),
        .Dbg_RDATA_5(NLW_U0_Dbg_RDATA_5_UNCONNECTED[31:0]),
        .Dbg_RDATA_6(NLW_U0_Dbg_RDATA_6_UNCONNECTED[31:0]),
        .Dbg_RDATA_7(NLW_U0_Dbg_RDATA_7_UNCONNECTED[31:0]),
        .Dbg_RDATA_8(NLW_U0_Dbg_RDATA_8_UNCONNECTED[31:0]),
        .Dbg_RDATA_9(NLW_U0_Dbg_RDATA_9_UNCONNECTED[31:0]),
        .Dbg_RREADY_0(NLW_U0_Dbg_RREADY_0_UNCONNECTED),
        .Dbg_RREADY_1(NLW_U0_Dbg_RREADY_1_UNCONNECTED),
        .Dbg_RREADY_10(NLW_U0_Dbg_RREADY_10_UNCONNECTED),
        .Dbg_RREADY_11(NLW_U0_Dbg_RREADY_11_UNCONNECTED),
        .Dbg_RREADY_12(NLW_U0_Dbg_RREADY_12_UNCONNECTED),
        .Dbg_RREADY_13(NLW_U0_Dbg_RREADY_13_UNCONNECTED),
        .Dbg_RREADY_14(NLW_U0_Dbg_RREADY_14_UNCONNECTED),
        .Dbg_RREADY_15(NLW_U0_Dbg_RREADY_15_UNCONNECTED),
        .Dbg_RREADY_16(NLW_U0_Dbg_RREADY_16_UNCONNECTED),
        .Dbg_RREADY_17(NLW_U0_Dbg_RREADY_17_UNCONNECTED),
        .Dbg_RREADY_18(NLW_U0_Dbg_RREADY_18_UNCONNECTED),
        .Dbg_RREADY_19(NLW_U0_Dbg_RREADY_19_UNCONNECTED),
        .Dbg_RREADY_2(NLW_U0_Dbg_RREADY_2_UNCONNECTED),
        .Dbg_RREADY_20(NLW_U0_Dbg_RREADY_20_UNCONNECTED),
        .Dbg_RREADY_21(NLW_U0_Dbg_RREADY_21_UNCONNECTED),
        .Dbg_RREADY_22(NLW_U0_Dbg_RREADY_22_UNCONNECTED),
        .Dbg_RREADY_23(NLW_U0_Dbg_RREADY_23_UNCONNECTED),
        .Dbg_RREADY_24(NLW_U0_Dbg_RREADY_24_UNCONNECTED),
        .Dbg_RREADY_25(NLW_U0_Dbg_RREADY_25_UNCONNECTED),
        .Dbg_RREADY_26(NLW_U0_Dbg_RREADY_26_UNCONNECTED),
        .Dbg_RREADY_27(NLW_U0_Dbg_RREADY_27_UNCONNECTED),
        .Dbg_RREADY_28(NLW_U0_Dbg_RREADY_28_UNCONNECTED),
        .Dbg_RREADY_29(NLW_U0_Dbg_RREADY_29_UNCONNECTED),
        .Dbg_RREADY_3(NLW_U0_Dbg_RREADY_3_UNCONNECTED),
        .Dbg_RREADY_30(NLW_U0_Dbg_RREADY_30_UNCONNECTED),
        .Dbg_RREADY_31(NLW_U0_Dbg_RREADY_31_UNCONNECTED),
        .Dbg_RREADY_4(NLW_U0_Dbg_RREADY_4_UNCONNECTED),
        .Dbg_RREADY_5(NLW_U0_Dbg_RREADY_5_UNCONNECTED),
        .Dbg_RREADY_6(NLW_U0_Dbg_RREADY_6_UNCONNECTED),
        .Dbg_RREADY_7(NLW_U0_Dbg_RREADY_7_UNCONNECTED),
        .Dbg_RREADY_8(NLW_U0_Dbg_RREADY_8_UNCONNECTED),
        .Dbg_RREADY_9(NLW_U0_Dbg_RREADY_9_UNCONNECTED),
        .Dbg_RRESP_0(NLW_U0_Dbg_RRESP_0_UNCONNECTED[1:0]),
        .Dbg_RRESP_1(NLW_U0_Dbg_RRESP_1_UNCONNECTED[1:0]),
        .Dbg_RRESP_10(NLW_U0_Dbg_RRESP_10_UNCONNECTED[1:0]),
        .Dbg_RRESP_11(NLW_U0_Dbg_RRESP_11_UNCONNECTED[1:0]),
        .Dbg_RRESP_12(NLW_U0_Dbg_RRESP_12_UNCONNECTED[1:0]),
        .Dbg_RRESP_13(NLW_U0_Dbg_RRESP_13_UNCONNECTED[1:0]),
        .Dbg_RRESP_14(NLW_U0_Dbg_RRESP_14_UNCONNECTED[1:0]),
        .Dbg_RRESP_15(NLW_U0_Dbg_RRESP_15_UNCONNECTED[1:0]),
        .Dbg_RRESP_16(NLW_U0_Dbg_RRESP_16_UNCONNECTED[1:0]),
        .Dbg_RRESP_17(NLW_U0_Dbg_RRESP_17_UNCONNECTED[1:0]),
        .Dbg_RRESP_18(NLW_U0_Dbg_RRESP_18_UNCONNECTED[1:0]),
        .Dbg_RRESP_19(NLW_U0_Dbg_RRESP_19_UNCONNECTED[1:0]),
        .Dbg_RRESP_2(NLW_U0_Dbg_RRESP_2_UNCONNECTED[1:0]),
        .Dbg_RRESP_20(NLW_U0_Dbg_RRESP_20_UNCONNECTED[1:0]),
        .Dbg_RRESP_21(NLW_U0_Dbg_RRESP_21_UNCONNECTED[1:0]),
        .Dbg_RRESP_22(NLW_U0_Dbg_RRESP_22_UNCONNECTED[1:0]),
        .Dbg_RRESP_23(NLW_U0_Dbg_RRESP_23_UNCONNECTED[1:0]),
        .Dbg_RRESP_24(NLW_U0_Dbg_RRESP_24_UNCONNECTED[1:0]),
        .Dbg_RRESP_25(NLW_U0_Dbg_RRESP_25_UNCONNECTED[1:0]),
        .Dbg_RRESP_26(NLW_U0_Dbg_RRESP_26_UNCONNECTED[1:0]),
        .Dbg_RRESP_27(NLW_U0_Dbg_RRESP_27_UNCONNECTED[1:0]),
        .Dbg_RRESP_28(NLW_U0_Dbg_RRESP_28_UNCONNECTED[1:0]),
        .Dbg_RRESP_29(NLW_U0_Dbg_RRESP_29_UNCONNECTED[1:0]),
        .Dbg_RRESP_3(NLW_U0_Dbg_RRESP_3_UNCONNECTED[1:0]),
        .Dbg_RRESP_30(NLW_U0_Dbg_RRESP_30_UNCONNECTED[1:0]),
        .Dbg_RRESP_31(NLW_U0_Dbg_RRESP_31_UNCONNECTED[1:0]),
        .Dbg_RRESP_4(NLW_U0_Dbg_RRESP_4_UNCONNECTED[1:0]),
        .Dbg_RRESP_5(NLW_U0_Dbg_RRESP_5_UNCONNECTED[1:0]),
        .Dbg_RRESP_6(NLW_U0_Dbg_RRESP_6_UNCONNECTED[1:0]),
        .Dbg_RRESP_7(NLW_U0_Dbg_RRESP_7_UNCONNECTED[1:0]),
        .Dbg_RRESP_8(NLW_U0_Dbg_RRESP_8_UNCONNECTED[1:0]),
        .Dbg_RRESP_9(NLW_U0_Dbg_RRESP_9_UNCONNECTED[1:0]),
        .Dbg_RVALID_0(NLW_U0_Dbg_RVALID_0_UNCONNECTED),
        .Dbg_RVALID_1(NLW_U0_Dbg_RVALID_1_UNCONNECTED),
        .Dbg_RVALID_10(NLW_U0_Dbg_RVALID_10_UNCONNECTED),
        .Dbg_RVALID_11(NLW_U0_Dbg_RVALID_11_UNCONNECTED),
        .Dbg_RVALID_12(NLW_U0_Dbg_RVALID_12_UNCONNECTED),
        .Dbg_RVALID_13(NLW_U0_Dbg_RVALID_13_UNCONNECTED),
        .Dbg_RVALID_14(NLW_U0_Dbg_RVALID_14_UNCONNECTED),
        .Dbg_RVALID_15(NLW_U0_Dbg_RVALID_15_UNCONNECTED),
        .Dbg_RVALID_16(NLW_U0_Dbg_RVALID_16_UNCONNECTED),
        .Dbg_RVALID_17(NLW_U0_Dbg_RVALID_17_UNCONNECTED),
        .Dbg_RVALID_18(NLW_U0_Dbg_RVALID_18_UNCONNECTED),
        .Dbg_RVALID_19(NLW_U0_Dbg_RVALID_19_UNCONNECTED),
        .Dbg_RVALID_2(NLW_U0_Dbg_RVALID_2_UNCONNECTED),
        .Dbg_RVALID_20(NLW_U0_Dbg_RVALID_20_UNCONNECTED),
        .Dbg_RVALID_21(NLW_U0_Dbg_RVALID_21_UNCONNECTED),
        .Dbg_RVALID_22(NLW_U0_Dbg_RVALID_22_UNCONNECTED),
        .Dbg_RVALID_23(NLW_U0_Dbg_RVALID_23_UNCONNECTED),
        .Dbg_RVALID_24(NLW_U0_Dbg_RVALID_24_UNCONNECTED),
        .Dbg_RVALID_25(NLW_U0_Dbg_RVALID_25_UNCONNECTED),
        .Dbg_RVALID_26(NLW_U0_Dbg_RVALID_26_UNCONNECTED),
        .Dbg_RVALID_27(NLW_U0_Dbg_RVALID_27_UNCONNECTED),
        .Dbg_RVALID_28(NLW_U0_Dbg_RVALID_28_UNCONNECTED),
        .Dbg_RVALID_29(NLW_U0_Dbg_RVALID_29_UNCONNECTED),
        .Dbg_RVALID_3(NLW_U0_Dbg_RVALID_3_UNCONNECTED),
        .Dbg_RVALID_30(NLW_U0_Dbg_RVALID_30_UNCONNECTED),
        .Dbg_RVALID_31(NLW_U0_Dbg_RVALID_31_UNCONNECTED),
        .Dbg_RVALID_4(NLW_U0_Dbg_RVALID_4_UNCONNECTED),
        .Dbg_RVALID_5(NLW_U0_Dbg_RVALID_5_UNCONNECTED),
        .Dbg_RVALID_6(NLW_U0_Dbg_RVALID_6_UNCONNECTED),
        .Dbg_RVALID_7(NLW_U0_Dbg_RVALID_7_UNCONNECTED),
        .Dbg_RVALID_8(NLW_U0_Dbg_RVALID_8_UNCONNECTED),
        .Dbg_RVALID_9(NLW_U0_Dbg_RVALID_9_UNCONNECTED),
        .Dbg_Reg_En_0(Dbg_Reg_En_0),
        .Dbg_Reg_En_1(NLW_U0_Dbg_Reg_En_1_UNCONNECTED[0:7]),
        .Dbg_Reg_En_10(NLW_U0_Dbg_Reg_En_10_UNCONNECTED[0:7]),
        .Dbg_Reg_En_11(NLW_U0_Dbg_Reg_En_11_UNCONNECTED[0:7]),
        .Dbg_Reg_En_12(NLW_U0_Dbg_Reg_En_12_UNCONNECTED[0:7]),
        .Dbg_Reg_En_13(NLW_U0_Dbg_Reg_En_13_UNCONNECTED[0:7]),
        .Dbg_Reg_En_14(NLW_U0_Dbg_Reg_En_14_UNCONNECTED[0:7]),
        .Dbg_Reg_En_15(NLW_U0_Dbg_Reg_En_15_UNCONNECTED[0:7]),
        .Dbg_Reg_En_16(NLW_U0_Dbg_Reg_En_16_UNCONNECTED[0:7]),
        .Dbg_Reg_En_17(NLW_U0_Dbg_Reg_En_17_UNCONNECTED[0:7]),
        .Dbg_Reg_En_18(NLW_U0_Dbg_Reg_En_18_UNCONNECTED[0:7]),
        .Dbg_Reg_En_19(NLW_U0_Dbg_Reg_En_19_UNCONNECTED[0:7]),
        .Dbg_Reg_En_2(NLW_U0_Dbg_Reg_En_2_UNCONNECTED[0:7]),
        .Dbg_Reg_En_20(NLW_U0_Dbg_Reg_En_20_UNCONNECTED[0:7]),
        .Dbg_Reg_En_21(NLW_U0_Dbg_Reg_En_21_UNCONNECTED[0:7]),
        .Dbg_Reg_En_22(NLW_U0_Dbg_Reg_En_22_UNCONNECTED[0:7]),
        .Dbg_Reg_En_23(NLW_U0_Dbg_Reg_En_23_UNCONNECTED[0:7]),
        .Dbg_Reg_En_24(NLW_U0_Dbg_Reg_En_24_UNCONNECTED[0:7]),
        .Dbg_Reg_En_25(NLW_U0_Dbg_Reg_En_25_UNCONNECTED[0:7]),
        .Dbg_Reg_En_26(NLW_U0_Dbg_Reg_En_26_UNCONNECTED[0:7]),
        .Dbg_Reg_En_27(NLW_U0_Dbg_Reg_En_27_UNCONNECTED[0:7]),
        .Dbg_Reg_En_28(NLW_U0_Dbg_Reg_En_28_UNCONNECTED[0:7]),
        .Dbg_Reg_En_29(NLW_U0_Dbg_Reg_En_29_UNCONNECTED[0:7]),
        .Dbg_Reg_En_3(NLW_U0_Dbg_Reg_En_3_UNCONNECTED[0:7]),
        .Dbg_Reg_En_30(NLW_U0_Dbg_Reg_En_30_UNCONNECTED[0:7]),
        .Dbg_Reg_En_31(NLW_U0_Dbg_Reg_En_31_UNCONNECTED[0:7]),
        .Dbg_Reg_En_4(NLW_U0_Dbg_Reg_En_4_UNCONNECTED[0:7]),
        .Dbg_Reg_En_5(NLW_U0_Dbg_Reg_En_5_UNCONNECTED[0:7]),
        .Dbg_Reg_En_6(NLW_U0_Dbg_Reg_En_6_UNCONNECTED[0:7]),
        .Dbg_Reg_En_7(NLW_U0_Dbg_Reg_En_7_UNCONNECTED[0:7]),
        .Dbg_Reg_En_8(NLW_U0_Dbg_Reg_En_8_UNCONNECTED[0:7]),
        .Dbg_Reg_En_9(NLW_U0_Dbg_Reg_En_9_UNCONNECTED[0:7]),
        .Dbg_Rst_0(Dbg_Rst_0),
        .Dbg_Rst_1(NLW_U0_Dbg_Rst_1_UNCONNECTED),
        .Dbg_Rst_10(NLW_U0_Dbg_Rst_10_UNCONNECTED),
        .Dbg_Rst_11(NLW_U0_Dbg_Rst_11_UNCONNECTED),
        .Dbg_Rst_12(NLW_U0_Dbg_Rst_12_UNCONNECTED),
        .Dbg_Rst_13(NLW_U0_Dbg_Rst_13_UNCONNECTED),
        .Dbg_Rst_14(NLW_U0_Dbg_Rst_14_UNCONNECTED),
        .Dbg_Rst_15(NLW_U0_Dbg_Rst_15_UNCONNECTED),
        .Dbg_Rst_16(NLW_U0_Dbg_Rst_16_UNCONNECTED),
        .Dbg_Rst_17(NLW_U0_Dbg_Rst_17_UNCONNECTED),
        .Dbg_Rst_18(NLW_U0_Dbg_Rst_18_UNCONNECTED),
        .Dbg_Rst_19(NLW_U0_Dbg_Rst_19_UNCONNECTED),
        .Dbg_Rst_2(NLW_U0_Dbg_Rst_2_UNCONNECTED),
        .Dbg_Rst_20(NLW_U0_Dbg_Rst_20_UNCONNECTED),
        .Dbg_Rst_21(NLW_U0_Dbg_Rst_21_UNCONNECTED),
        .Dbg_Rst_22(NLW_U0_Dbg_Rst_22_UNCONNECTED),
        .Dbg_Rst_23(NLW_U0_Dbg_Rst_23_UNCONNECTED),
        .Dbg_Rst_24(NLW_U0_Dbg_Rst_24_UNCONNECTED),
        .Dbg_Rst_25(NLW_U0_Dbg_Rst_25_UNCONNECTED),
        .Dbg_Rst_26(NLW_U0_Dbg_Rst_26_UNCONNECTED),
        .Dbg_Rst_27(NLW_U0_Dbg_Rst_27_UNCONNECTED),
        .Dbg_Rst_28(NLW_U0_Dbg_Rst_28_UNCONNECTED),
        .Dbg_Rst_29(NLW_U0_Dbg_Rst_29_UNCONNECTED),
        .Dbg_Rst_3(NLW_U0_Dbg_Rst_3_UNCONNECTED),
        .Dbg_Rst_30(NLW_U0_Dbg_Rst_30_UNCONNECTED),
        .Dbg_Rst_31(NLW_U0_Dbg_Rst_31_UNCONNECTED),
        .Dbg_Rst_4(NLW_U0_Dbg_Rst_4_UNCONNECTED),
        .Dbg_Rst_5(NLW_U0_Dbg_Rst_5_UNCONNECTED),
        .Dbg_Rst_6(NLW_U0_Dbg_Rst_6_UNCONNECTED),
        .Dbg_Rst_7(NLW_U0_Dbg_Rst_7_UNCONNECTED),
        .Dbg_Rst_8(NLW_U0_Dbg_Rst_8_UNCONNECTED),
        .Dbg_Rst_9(NLW_U0_Dbg_Rst_9_UNCONNECTED),
        .Dbg_Shift_0(Dbg_Shift_0),
        .Dbg_Shift_1(NLW_U0_Dbg_Shift_1_UNCONNECTED),
        .Dbg_Shift_10(NLW_U0_Dbg_Shift_10_UNCONNECTED),
        .Dbg_Shift_11(NLW_U0_Dbg_Shift_11_UNCONNECTED),
        .Dbg_Shift_12(NLW_U0_Dbg_Shift_12_UNCONNECTED),
        .Dbg_Shift_13(NLW_U0_Dbg_Shift_13_UNCONNECTED),
        .Dbg_Shift_14(NLW_U0_Dbg_Shift_14_UNCONNECTED),
        .Dbg_Shift_15(NLW_U0_Dbg_Shift_15_UNCONNECTED),
        .Dbg_Shift_16(NLW_U0_Dbg_Shift_16_UNCONNECTED),
        .Dbg_Shift_17(NLW_U0_Dbg_Shift_17_UNCONNECTED),
        .Dbg_Shift_18(NLW_U0_Dbg_Shift_18_UNCONNECTED),
        .Dbg_Shift_19(NLW_U0_Dbg_Shift_19_UNCONNECTED),
        .Dbg_Shift_2(NLW_U0_Dbg_Shift_2_UNCONNECTED),
        .Dbg_Shift_20(NLW_U0_Dbg_Shift_20_UNCONNECTED),
        .Dbg_Shift_21(NLW_U0_Dbg_Shift_21_UNCONNECTED),
        .Dbg_Shift_22(NLW_U0_Dbg_Shift_22_UNCONNECTED),
        .Dbg_Shift_23(NLW_U0_Dbg_Shift_23_UNCONNECTED),
        .Dbg_Shift_24(NLW_U0_Dbg_Shift_24_UNCONNECTED),
        .Dbg_Shift_25(NLW_U0_Dbg_Shift_25_UNCONNECTED),
        .Dbg_Shift_26(NLW_U0_Dbg_Shift_26_UNCONNECTED),
        .Dbg_Shift_27(NLW_U0_Dbg_Shift_27_UNCONNECTED),
        .Dbg_Shift_28(NLW_U0_Dbg_Shift_28_UNCONNECTED),
        .Dbg_Shift_29(NLW_U0_Dbg_Shift_29_UNCONNECTED),
        .Dbg_Shift_3(NLW_U0_Dbg_Shift_3_UNCONNECTED),
        .Dbg_Shift_30(NLW_U0_Dbg_Shift_30_UNCONNECTED),
        .Dbg_Shift_31(NLW_U0_Dbg_Shift_31_UNCONNECTED),
        .Dbg_Shift_4(NLW_U0_Dbg_Shift_4_UNCONNECTED),
        .Dbg_Shift_5(NLW_U0_Dbg_Shift_5_UNCONNECTED),
        .Dbg_Shift_6(NLW_U0_Dbg_Shift_6_UNCONNECTED),
        .Dbg_Shift_7(NLW_U0_Dbg_Shift_7_UNCONNECTED),
        .Dbg_Shift_8(NLW_U0_Dbg_Shift_8_UNCONNECTED),
        .Dbg_Shift_9(NLW_U0_Dbg_Shift_9_UNCONNECTED),
        .Dbg_TDI_0(Dbg_TDI_0),
        .Dbg_TDI_1(NLW_U0_Dbg_TDI_1_UNCONNECTED),
        .Dbg_TDI_10(NLW_U0_Dbg_TDI_10_UNCONNECTED),
        .Dbg_TDI_11(NLW_U0_Dbg_TDI_11_UNCONNECTED),
        .Dbg_TDI_12(NLW_U0_Dbg_TDI_12_UNCONNECTED),
        .Dbg_TDI_13(NLW_U0_Dbg_TDI_13_UNCONNECTED),
        .Dbg_TDI_14(NLW_U0_Dbg_TDI_14_UNCONNECTED),
        .Dbg_TDI_15(NLW_U0_Dbg_TDI_15_UNCONNECTED),
        .Dbg_TDI_16(NLW_U0_Dbg_TDI_16_UNCONNECTED),
        .Dbg_TDI_17(NLW_U0_Dbg_TDI_17_UNCONNECTED),
        .Dbg_TDI_18(NLW_U0_Dbg_TDI_18_UNCONNECTED),
        .Dbg_TDI_19(NLW_U0_Dbg_TDI_19_UNCONNECTED),
        .Dbg_TDI_2(NLW_U0_Dbg_TDI_2_UNCONNECTED),
        .Dbg_TDI_20(NLW_U0_Dbg_TDI_20_UNCONNECTED),
        .Dbg_TDI_21(NLW_U0_Dbg_TDI_21_UNCONNECTED),
        .Dbg_TDI_22(NLW_U0_Dbg_TDI_22_UNCONNECTED),
        .Dbg_TDI_23(NLW_U0_Dbg_TDI_23_UNCONNECTED),
        .Dbg_TDI_24(NLW_U0_Dbg_TDI_24_UNCONNECTED),
        .Dbg_TDI_25(NLW_U0_Dbg_TDI_25_UNCONNECTED),
        .Dbg_TDI_26(NLW_U0_Dbg_TDI_26_UNCONNECTED),
        .Dbg_TDI_27(NLW_U0_Dbg_TDI_27_UNCONNECTED),
        .Dbg_TDI_28(NLW_U0_Dbg_TDI_28_UNCONNECTED),
        .Dbg_TDI_29(NLW_U0_Dbg_TDI_29_UNCONNECTED),
        .Dbg_TDI_3(NLW_U0_Dbg_TDI_3_UNCONNECTED),
        .Dbg_TDI_30(NLW_U0_Dbg_TDI_30_UNCONNECTED),
        .Dbg_TDI_31(NLW_U0_Dbg_TDI_31_UNCONNECTED),
        .Dbg_TDI_4(NLW_U0_Dbg_TDI_4_UNCONNECTED),
        .Dbg_TDI_5(NLW_U0_Dbg_TDI_5_UNCONNECTED),
        .Dbg_TDI_6(NLW_U0_Dbg_TDI_6_UNCONNECTED),
        .Dbg_TDI_7(NLW_U0_Dbg_TDI_7_UNCONNECTED),
        .Dbg_TDI_8(NLW_U0_Dbg_TDI_8_UNCONNECTED),
        .Dbg_TDI_9(NLW_U0_Dbg_TDI_9_UNCONNECTED),
        .Dbg_TDO_0(Dbg_TDO_0),
        .Dbg_TDO_1(NLW_U0_Dbg_TDO_1_UNCONNECTED),
        .Dbg_TDO_10(NLW_U0_Dbg_TDO_10_UNCONNECTED),
        .Dbg_TDO_11(NLW_U0_Dbg_TDO_11_UNCONNECTED),
        .Dbg_TDO_12(NLW_U0_Dbg_TDO_12_UNCONNECTED),
        .Dbg_TDO_13(NLW_U0_Dbg_TDO_13_UNCONNECTED),
        .Dbg_TDO_14(NLW_U0_Dbg_TDO_14_UNCONNECTED),
        .Dbg_TDO_15(NLW_U0_Dbg_TDO_15_UNCONNECTED),
        .Dbg_TDO_16(NLW_U0_Dbg_TDO_16_UNCONNECTED),
        .Dbg_TDO_17(NLW_U0_Dbg_TDO_17_UNCONNECTED),
        .Dbg_TDO_18(NLW_U0_Dbg_TDO_18_UNCONNECTED),
        .Dbg_TDO_19(NLW_U0_Dbg_TDO_19_UNCONNECTED),
        .Dbg_TDO_2(NLW_U0_Dbg_TDO_2_UNCONNECTED),
        .Dbg_TDO_20(NLW_U0_Dbg_TDO_20_UNCONNECTED),
        .Dbg_TDO_21(NLW_U0_Dbg_TDO_21_UNCONNECTED),
        .Dbg_TDO_22(NLW_U0_Dbg_TDO_22_UNCONNECTED),
        .Dbg_TDO_23(NLW_U0_Dbg_TDO_23_UNCONNECTED),
        .Dbg_TDO_24(NLW_U0_Dbg_TDO_24_UNCONNECTED),
        .Dbg_TDO_25(NLW_U0_Dbg_TDO_25_UNCONNECTED),
        .Dbg_TDO_26(NLW_U0_Dbg_TDO_26_UNCONNECTED),
        .Dbg_TDO_27(NLW_U0_Dbg_TDO_27_UNCONNECTED),
        .Dbg_TDO_28(NLW_U0_Dbg_TDO_28_UNCONNECTED),
        .Dbg_TDO_29(NLW_U0_Dbg_TDO_29_UNCONNECTED),
        .Dbg_TDO_3(NLW_U0_Dbg_TDO_3_UNCONNECTED),
        .Dbg_TDO_30(NLW_U0_Dbg_TDO_30_UNCONNECTED),
        .Dbg_TDO_31(NLW_U0_Dbg_TDO_31_UNCONNECTED),
        .Dbg_TDO_4(NLW_U0_Dbg_TDO_4_UNCONNECTED),
        .Dbg_TDO_5(NLW_U0_Dbg_TDO_5_UNCONNECTED),
        .Dbg_TDO_6(NLW_U0_Dbg_TDO_6_UNCONNECTED),
        .Dbg_TDO_7(NLW_U0_Dbg_TDO_7_UNCONNECTED),
        .Dbg_TDO_8(NLW_U0_Dbg_TDO_8_UNCONNECTED),
        .Dbg_TDO_9(NLW_U0_Dbg_TDO_9_UNCONNECTED),
        .Dbg_TrClk_0(NLW_U0_Dbg_TrClk_0_UNCONNECTED),
        .Dbg_TrClk_1(NLW_U0_Dbg_TrClk_1_UNCONNECTED),
        .Dbg_TrClk_10(NLW_U0_Dbg_TrClk_10_UNCONNECTED),
        .Dbg_TrClk_11(NLW_U0_Dbg_TrClk_11_UNCONNECTED),
        .Dbg_TrClk_12(NLW_U0_Dbg_TrClk_12_UNCONNECTED),
        .Dbg_TrClk_13(NLW_U0_Dbg_TrClk_13_UNCONNECTED),
        .Dbg_TrClk_14(NLW_U0_Dbg_TrClk_14_UNCONNECTED),
        .Dbg_TrClk_15(NLW_U0_Dbg_TrClk_15_UNCONNECTED),
        .Dbg_TrClk_16(NLW_U0_Dbg_TrClk_16_UNCONNECTED),
        .Dbg_TrClk_17(NLW_U0_Dbg_TrClk_17_UNCONNECTED),
        .Dbg_TrClk_18(NLW_U0_Dbg_TrClk_18_UNCONNECTED),
        .Dbg_TrClk_19(NLW_U0_Dbg_TrClk_19_UNCONNECTED),
        .Dbg_TrClk_2(NLW_U0_Dbg_TrClk_2_UNCONNECTED),
        .Dbg_TrClk_20(NLW_U0_Dbg_TrClk_20_UNCONNECTED),
        .Dbg_TrClk_21(NLW_U0_Dbg_TrClk_21_UNCONNECTED),
        .Dbg_TrClk_22(NLW_U0_Dbg_TrClk_22_UNCONNECTED),
        .Dbg_TrClk_23(NLW_U0_Dbg_TrClk_23_UNCONNECTED),
        .Dbg_TrClk_24(NLW_U0_Dbg_TrClk_24_UNCONNECTED),
        .Dbg_TrClk_25(NLW_U0_Dbg_TrClk_25_UNCONNECTED),
        .Dbg_TrClk_26(NLW_U0_Dbg_TrClk_26_UNCONNECTED),
        .Dbg_TrClk_27(NLW_U0_Dbg_TrClk_27_UNCONNECTED),
        .Dbg_TrClk_28(NLW_U0_Dbg_TrClk_28_UNCONNECTED),
        .Dbg_TrClk_29(NLW_U0_Dbg_TrClk_29_UNCONNECTED),
        .Dbg_TrClk_3(NLW_U0_Dbg_TrClk_3_UNCONNECTED),
        .Dbg_TrClk_30(NLW_U0_Dbg_TrClk_30_UNCONNECTED),
        .Dbg_TrClk_31(NLW_U0_Dbg_TrClk_31_UNCONNECTED),
        .Dbg_TrClk_4(NLW_U0_Dbg_TrClk_4_UNCONNECTED),
        .Dbg_TrClk_5(NLW_U0_Dbg_TrClk_5_UNCONNECTED),
        .Dbg_TrClk_6(NLW_U0_Dbg_TrClk_6_UNCONNECTED),
        .Dbg_TrClk_7(NLW_U0_Dbg_TrClk_7_UNCONNECTED),
        .Dbg_TrClk_8(NLW_U0_Dbg_TrClk_8_UNCONNECTED),
        .Dbg_TrClk_9(NLW_U0_Dbg_TrClk_9_UNCONNECTED),
        .Dbg_TrData_0(NLW_U0_Dbg_TrData_0_UNCONNECTED[0:35]),
        .Dbg_TrData_1(NLW_U0_Dbg_TrData_1_UNCONNECTED[0:35]),
        .Dbg_TrData_10(NLW_U0_Dbg_TrData_10_UNCONNECTED[0:35]),
        .Dbg_TrData_11(NLW_U0_Dbg_TrData_11_UNCONNECTED[0:35]),
        .Dbg_TrData_12(NLW_U0_Dbg_TrData_12_UNCONNECTED[0:35]),
        .Dbg_TrData_13(NLW_U0_Dbg_TrData_13_UNCONNECTED[0:35]),
        .Dbg_TrData_14(NLW_U0_Dbg_TrData_14_UNCONNECTED[0:35]),
        .Dbg_TrData_15(NLW_U0_Dbg_TrData_15_UNCONNECTED[0:35]),
        .Dbg_TrData_16(NLW_U0_Dbg_TrData_16_UNCONNECTED[0:35]),
        .Dbg_TrData_17(NLW_U0_Dbg_TrData_17_UNCONNECTED[0:35]),
        .Dbg_TrData_18(NLW_U0_Dbg_TrData_18_UNCONNECTED[0:35]),
        .Dbg_TrData_19(NLW_U0_Dbg_TrData_19_UNCONNECTED[0:35]),
        .Dbg_TrData_2(NLW_U0_Dbg_TrData_2_UNCONNECTED[0:35]),
        .Dbg_TrData_20(NLW_U0_Dbg_TrData_20_UNCONNECTED[0:35]),
        .Dbg_TrData_21(NLW_U0_Dbg_TrData_21_UNCONNECTED[0:35]),
        .Dbg_TrData_22(NLW_U0_Dbg_TrData_22_UNCONNECTED[0:35]),
        .Dbg_TrData_23(NLW_U0_Dbg_TrData_23_UNCONNECTED[0:35]),
        .Dbg_TrData_24(NLW_U0_Dbg_TrData_24_UNCONNECTED[0:35]),
        .Dbg_TrData_25(NLW_U0_Dbg_TrData_25_UNCONNECTED[0:35]),
        .Dbg_TrData_26(NLW_U0_Dbg_TrData_26_UNCONNECTED[0:35]),
        .Dbg_TrData_27(NLW_U0_Dbg_TrData_27_UNCONNECTED[0:35]),
        .Dbg_TrData_28(NLW_U0_Dbg_TrData_28_UNCONNECTED[0:35]),
        .Dbg_TrData_29(NLW_U0_Dbg_TrData_29_UNCONNECTED[0:35]),
        .Dbg_TrData_3(NLW_U0_Dbg_TrData_3_UNCONNECTED[0:35]),
        .Dbg_TrData_30(NLW_U0_Dbg_TrData_30_UNCONNECTED[0:35]),
        .Dbg_TrData_31(NLW_U0_Dbg_TrData_31_UNCONNECTED[0:35]),
        .Dbg_TrData_4(NLW_U0_Dbg_TrData_4_UNCONNECTED[0:35]),
        .Dbg_TrData_5(NLW_U0_Dbg_TrData_5_UNCONNECTED[0:35]),
        .Dbg_TrData_6(NLW_U0_Dbg_TrData_6_UNCONNECTED[0:35]),
        .Dbg_TrData_7(NLW_U0_Dbg_TrData_7_UNCONNECTED[0:35]),
        .Dbg_TrData_8(NLW_U0_Dbg_TrData_8_UNCONNECTED[0:35]),
        .Dbg_TrData_9(NLW_U0_Dbg_TrData_9_UNCONNECTED[0:35]),
        .Dbg_TrReady_0(NLW_U0_Dbg_TrReady_0_UNCONNECTED),
        .Dbg_TrReady_1(NLW_U0_Dbg_TrReady_1_UNCONNECTED),
        .Dbg_TrReady_10(NLW_U0_Dbg_TrReady_10_UNCONNECTED),
        .Dbg_TrReady_11(NLW_U0_Dbg_TrReady_11_UNCONNECTED),
        .Dbg_TrReady_12(NLW_U0_Dbg_TrReady_12_UNCONNECTED),
        .Dbg_TrReady_13(NLW_U0_Dbg_TrReady_13_UNCONNECTED),
        .Dbg_TrReady_14(NLW_U0_Dbg_TrReady_14_UNCONNECTED),
        .Dbg_TrReady_15(NLW_U0_Dbg_TrReady_15_UNCONNECTED),
        .Dbg_TrReady_16(NLW_U0_Dbg_TrReady_16_UNCONNECTED),
        .Dbg_TrReady_17(NLW_U0_Dbg_TrReady_17_UNCONNECTED),
        .Dbg_TrReady_18(NLW_U0_Dbg_TrReady_18_UNCONNECTED),
        .Dbg_TrReady_19(NLW_U0_Dbg_TrReady_19_UNCONNECTED),
        .Dbg_TrReady_2(NLW_U0_Dbg_TrReady_2_UNCONNECTED),
        .Dbg_TrReady_20(NLW_U0_Dbg_TrReady_20_UNCONNECTED),
        .Dbg_TrReady_21(NLW_U0_Dbg_TrReady_21_UNCONNECTED),
        .Dbg_TrReady_22(NLW_U0_Dbg_TrReady_22_UNCONNECTED),
        .Dbg_TrReady_23(NLW_U0_Dbg_TrReady_23_UNCONNECTED),
        .Dbg_TrReady_24(NLW_U0_Dbg_TrReady_24_UNCONNECTED),
        .Dbg_TrReady_25(NLW_U0_Dbg_TrReady_25_UNCONNECTED),
        .Dbg_TrReady_26(NLW_U0_Dbg_TrReady_26_UNCONNECTED),
        .Dbg_TrReady_27(NLW_U0_Dbg_TrReady_27_UNCONNECTED),
        .Dbg_TrReady_28(NLW_U0_Dbg_TrReady_28_UNCONNECTED),
        .Dbg_TrReady_29(NLW_U0_Dbg_TrReady_29_UNCONNECTED),
        .Dbg_TrReady_3(NLW_U0_Dbg_TrReady_3_UNCONNECTED),
        .Dbg_TrReady_30(NLW_U0_Dbg_TrReady_30_UNCONNECTED),
        .Dbg_TrReady_31(NLW_U0_Dbg_TrReady_31_UNCONNECTED),
        .Dbg_TrReady_4(NLW_U0_Dbg_TrReady_4_UNCONNECTED),
        .Dbg_TrReady_5(NLW_U0_Dbg_TrReady_5_UNCONNECTED),
        .Dbg_TrReady_6(NLW_U0_Dbg_TrReady_6_UNCONNECTED),
        .Dbg_TrReady_7(NLW_U0_Dbg_TrReady_7_UNCONNECTED),
        .Dbg_TrReady_8(NLW_U0_Dbg_TrReady_8_UNCONNECTED),
        .Dbg_TrReady_9(NLW_U0_Dbg_TrReady_9_UNCONNECTED),
        .Dbg_TrValid_0(NLW_U0_Dbg_TrValid_0_UNCONNECTED),
        .Dbg_TrValid_1(NLW_U0_Dbg_TrValid_1_UNCONNECTED),
        .Dbg_TrValid_10(NLW_U0_Dbg_TrValid_10_UNCONNECTED),
        .Dbg_TrValid_11(NLW_U0_Dbg_TrValid_11_UNCONNECTED),
        .Dbg_TrValid_12(NLW_U0_Dbg_TrValid_12_UNCONNECTED),
        .Dbg_TrValid_13(NLW_U0_Dbg_TrValid_13_UNCONNECTED),
        .Dbg_TrValid_14(NLW_U0_Dbg_TrValid_14_UNCONNECTED),
        .Dbg_TrValid_15(NLW_U0_Dbg_TrValid_15_UNCONNECTED),
        .Dbg_TrValid_16(NLW_U0_Dbg_TrValid_16_UNCONNECTED),
        .Dbg_TrValid_17(NLW_U0_Dbg_TrValid_17_UNCONNECTED),
        .Dbg_TrValid_18(NLW_U0_Dbg_TrValid_18_UNCONNECTED),
        .Dbg_TrValid_19(NLW_U0_Dbg_TrValid_19_UNCONNECTED),
        .Dbg_TrValid_2(NLW_U0_Dbg_TrValid_2_UNCONNECTED),
        .Dbg_TrValid_20(NLW_U0_Dbg_TrValid_20_UNCONNECTED),
        .Dbg_TrValid_21(NLW_U0_Dbg_TrValid_21_UNCONNECTED),
        .Dbg_TrValid_22(NLW_U0_Dbg_TrValid_22_UNCONNECTED),
        .Dbg_TrValid_23(NLW_U0_Dbg_TrValid_23_UNCONNECTED),
        .Dbg_TrValid_24(NLW_U0_Dbg_TrValid_24_UNCONNECTED),
        .Dbg_TrValid_25(NLW_U0_Dbg_TrValid_25_UNCONNECTED),
        .Dbg_TrValid_26(NLW_U0_Dbg_TrValid_26_UNCONNECTED),
        .Dbg_TrValid_27(NLW_U0_Dbg_TrValid_27_UNCONNECTED),
        .Dbg_TrValid_28(NLW_U0_Dbg_TrValid_28_UNCONNECTED),
        .Dbg_TrValid_29(NLW_U0_Dbg_TrValid_29_UNCONNECTED),
        .Dbg_TrValid_3(NLW_U0_Dbg_TrValid_3_UNCONNECTED),
        .Dbg_TrValid_30(NLW_U0_Dbg_TrValid_30_UNCONNECTED),
        .Dbg_TrValid_31(NLW_U0_Dbg_TrValid_31_UNCONNECTED),
        .Dbg_TrValid_4(NLW_U0_Dbg_TrValid_4_UNCONNECTED),
        .Dbg_TrValid_5(NLW_U0_Dbg_TrValid_5_UNCONNECTED),
        .Dbg_TrValid_6(NLW_U0_Dbg_TrValid_6_UNCONNECTED),
        .Dbg_TrValid_7(NLW_U0_Dbg_TrValid_7_UNCONNECTED),
        .Dbg_TrValid_8(NLW_U0_Dbg_TrValid_8_UNCONNECTED),
        .Dbg_TrValid_9(NLW_U0_Dbg_TrValid_9_UNCONNECTED),
        .Dbg_Trig_Ack_In_0(NLW_U0_Dbg_Trig_Ack_In_0_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_1(NLW_U0_Dbg_Trig_Ack_In_1_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_10(NLW_U0_Dbg_Trig_Ack_In_10_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_11(NLW_U0_Dbg_Trig_Ack_In_11_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_12(NLW_U0_Dbg_Trig_Ack_In_12_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_13(NLW_U0_Dbg_Trig_Ack_In_13_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_14(NLW_U0_Dbg_Trig_Ack_In_14_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_15(NLW_U0_Dbg_Trig_Ack_In_15_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_16(NLW_U0_Dbg_Trig_Ack_In_16_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_17(NLW_U0_Dbg_Trig_Ack_In_17_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_18(NLW_U0_Dbg_Trig_Ack_In_18_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_19(NLW_U0_Dbg_Trig_Ack_In_19_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_2(NLW_U0_Dbg_Trig_Ack_In_2_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_20(NLW_U0_Dbg_Trig_Ack_In_20_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_21(NLW_U0_Dbg_Trig_Ack_In_21_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_22(NLW_U0_Dbg_Trig_Ack_In_22_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_23(NLW_U0_Dbg_Trig_Ack_In_23_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_24(NLW_U0_Dbg_Trig_Ack_In_24_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_25(NLW_U0_Dbg_Trig_Ack_In_25_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_26(NLW_U0_Dbg_Trig_Ack_In_26_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_27(NLW_U0_Dbg_Trig_Ack_In_27_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_28(NLW_U0_Dbg_Trig_Ack_In_28_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_29(NLW_U0_Dbg_Trig_Ack_In_29_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_3(NLW_U0_Dbg_Trig_Ack_In_3_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_30(NLW_U0_Dbg_Trig_Ack_In_30_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_31(NLW_U0_Dbg_Trig_Ack_In_31_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_4(NLW_U0_Dbg_Trig_Ack_In_4_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_5(NLW_U0_Dbg_Trig_Ack_In_5_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_6(NLW_U0_Dbg_Trig_Ack_In_6_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_7(NLW_U0_Dbg_Trig_Ack_In_7_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_8(NLW_U0_Dbg_Trig_Ack_In_8_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_In_9(NLW_U0_Dbg_Trig_Ack_In_9_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_0(NLW_U0_Dbg_Trig_Ack_Out_0_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_1(NLW_U0_Dbg_Trig_Ack_Out_1_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_10(NLW_U0_Dbg_Trig_Ack_Out_10_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_11(NLW_U0_Dbg_Trig_Ack_Out_11_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_12(NLW_U0_Dbg_Trig_Ack_Out_12_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_13(NLW_U0_Dbg_Trig_Ack_Out_13_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_14(NLW_U0_Dbg_Trig_Ack_Out_14_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_15(NLW_U0_Dbg_Trig_Ack_Out_15_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_16(NLW_U0_Dbg_Trig_Ack_Out_16_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_17(NLW_U0_Dbg_Trig_Ack_Out_17_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_18(NLW_U0_Dbg_Trig_Ack_Out_18_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_19(NLW_U0_Dbg_Trig_Ack_Out_19_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_2(NLW_U0_Dbg_Trig_Ack_Out_2_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_20(NLW_U0_Dbg_Trig_Ack_Out_20_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_21(NLW_U0_Dbg_Trig_Ack_Out_21_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_22(NLW_U0_Dbg_Trig_Ack_Out_22_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_23(NLW_U0_Dbg_Trig_Ack_Out_23_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_24(NLW_U0_Dbg_Trig_Ack_Out_24_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_25(NLW_U0_Dbg_Trig_Ack_Out_25_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_26(NLW_U0_Dbg_Trig_Ack_Out_26_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_27(NLW_U0_Dbg_Trig_Ack_Out_27_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_28(NLW_U0_Dbg_Trig_Ack_Out_28_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_29(NLW_U0_Dbg_Trig_Ack_Out_29_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_3(NLW_U0_Dbg_Trig_Ack_Out_3_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_30(NLW_U0_Dbg_Trig_Ack_Out_30_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_31(NLW_U0_Dbg_Trig_Ack_Out_31_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_4(NLW_U0_Dbg_Trig_Ack_Out_4_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_5(NLW_U0_Dbg_Trig_Ack_Out_5_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_6(NLW_U0_Dbg_Trig_Ack_Out_6_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_7(NLW_U0_Dbg_Trig_Ack_Out_7_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_8(NLW_U0_Dbg_Trig_Ack_Out_8_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out_9(NLW_U0_Dbg_Trig_Ack_Out_9_UNCONNECTED[0:7]),
        .Dbg_Trig_In_0(NLW_U0_Dbg_Trig_In_0_UNCONNECTED[0:7]),
        .Dbg_Trig_In_1(NLW_U0_Dbg_Trig_In_1_UNCONNECTED[0:7]),
        .Dbg_Trig_In_10(NLW_U0_Dbg_Trig_In_10_UNCONNECTED[0:7]),
        .Dbg_Trig_In_11(NLW_U0_Dbg_Trig_In_11_UNCONNECTED[0:7]),
        .Dbg_Trig_In_12(NLW_U0_Dbg_Trig_In_12_UNCONNECTED[0:7]),
        .Dbg_Trig_In_13(NLW_U0_Dbg_Trig_In_13_UNCONNECTED[0:7]),
        .Dbg_Trig_In_14(NLW_U0_Dbg_Trig_In_14_UNCONNECTED[0:7]),
        .Dbg_Trig_In_15(NLW_U0_Dbg_Trig_In_15_UNCONNECTED[0:7]),
        .Dbg_Trig_In_16(NLW_U0_Dbg_Trig_In_16_UNCONNECTED[0:7]),
        .Dbg_Trig_In_17(NLW_U0_Dbg_Trig_In_17_UNCONNECTED[0:7]),
        .Dbg_Trig_In_18(NLW_U0_Dbg_Trig_In_18_UNCONNECTED[0:7]),
        .Dbg_Trig_In_19(NLW_U0_Dbg_Trig_In_19_UNCONNECTED[0:7]),
        .Dbg_Trig_In_2(NLW_U0_Dbg_Trig_In_2_UNCONNECTED[0:7]),
        .Dbg_Trig_In_20(NLW_U0_Dbg_Trig_In_20_UNCONNECTED[0:7]),
        .Dbg_Trig_In_21(NLW_U0_Dbg_Trig_In_21_UNCONNECTED[0:7]),
        .Dbg_Trig_In_22(NLW_U0_Dbg_Trig_In_22_UNCONNECTED[0:7]),
        .Dbg_Trig_In_23(NLW_U0_Dbg_Trig_In_23_UNCONNECTED[0:7]),
        .Dbg_Trig_In_24(NLW_U0_Dbg_Trig_In_24_UNCONNECTED[0:7]),
        .Dbg_Trig_In_25(NLW_U0_Dbg_Trig_In_25_UNCONNECTED[0:7]),
        .Dbg_Trig_In_26(NLW_U0_Dbg_Trig_In_26_UNCONNECTED[0:7]),
        .Dbg_Trig_In_27(NLW_U0_Dbg_Trig_In_27_UNCONNECTED[0:7]),
        .Dbg_Trig_In_28(NLW_U0_Dbg_Trig_In_28_UNCONNECTED[0:7]),
        .Dbg_Trig_In_29(NLW_U0_Dbg_Trig_In_29_UNCONNECTED[0:7]),
        .Dbg_Trig_In_3(NLW_U0_Dbg_Trig_In_3_UNCONNECTED[0:7]),
        .Dbg_Trig_In_30(NLW_U0_Dbg_Trig_In_30_UNCONNECTED[0:7]),
        .Dbg_Trig_In_31(NLW_U0_Dbg_Trig_In_31_UNCONNECTED[0:7]),
        .Dbg_Trig_In_4(NLW_U0_Dbg_Trig_In_4_UNCONNECTED[0:7]),
        .Dbg_Trig_In_5(NLW_U0_Dbg_Trig_In_5_UNCONNECTED[0:7]),
        .Dbg_Trig_In_6(NLW_U0_Dbg_Trig_In_6_UNCONNECTED[0:7]),
        .Dbg_Trig_In_7(NLW_U0_Dbg_Trig_In_7_UNCONNECTED[0:7]),
        .Dbg_Trig_In_8(NLW_U0_Dbg_Trig_In_8_UNCONNECTED[0:7]),
        .Dbg_Trig_In_9(NLW_U0_Dbg_Trig_In_9_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_0(NLW_U0_Dbg_Trig_Out_0_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_1(NLW_U0_Dbg_Trig_Out_1_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_10(NLW_U0_Dbg_Trig_Out_10_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_11(NLW_U0_Dbg_Trig_Out_11_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_12(NLW_U0_Dbg_Trig_Out_12_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_13(NLW_U0_Dbg_Trig_Out_13_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_14(NLW_U0_Dbg_Trig_Out_14_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_15(NLW_U0_Dbg_Trig_Out_15_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_16(NLW_U0_Dbg_Trig_Out_16_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_17(NLW_U0_Dbg_Trig_Out_17_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_18(NLW_U0_Dbg_Trig_Out_18_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_19(NLW_U0_Dbg_Trig_Out_19_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_2(NLW_U0_Dbg_Trig_Out_2_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_20(NLW_U0_Dbg_Trig_Out_20_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_21(NLW_U0_Dbg_Trig_Out_21_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_22(NLW_U0_Dbg_Trig_Out_22_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_23(NLW_U0_Dbg_Trig_Out_23_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_24(NLW_U0_Dbg_Trig_Out_24_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_25(NLW_U0_Dbg_Trig_Out_25_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_26(NLW_U0_Dbg_Trig_Out_26_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_27(NLW_U0_Dbg_Trig_Out_27_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_28(NLW_U0_Dbg_Trig_Out_28_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_29(NLW_U0_Dbg_Trig_Out_29_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_3(NLW_U0_Dbg_Trig_Out_3_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_30(NLW_U0_Dbg_Trig_Out_30_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_31(NLW_U0_Dbg_Trig_Out_31_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_4(NLW_U0_Dbg_Trig_Out_4_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_5(NLW_U0_Dbg_Trig_Out_5_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_6(NLW_U0_Dbg_Trig_Out_6_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_7(NLW_U0_Dbg_Trig_Out_7_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_8(NLW_U0_Dbg_Trig_Out_8_UNCONNECTED[0:7]),
        .Dbg_Trig_Out_9(NLW_U0_Dbg_Trig_Out_9_UNCONNECTED[0:7]),
        .Dbg_Update_0(Dbg_Update_0),
        .Dbg_Update_1(NLW_U0_Dbg_Update_1_UNCONNECTED),
        .Dbg_Update_10(NLW_U0_Dbg_Update_10_UNCONNECTED),
        .Dbg_Update_11(NLW_U0_Dbg_Update_11_UNCONNECTED),
        .Dbg_Update_12(NLW_U0_Dbg_Update_12_UNCONNECTED),
        .Dbg_Update_13(NLW_U0_Dbg_Update_13_UNCONNECTED),
        .Dbg_Update_14(NLW_U0_Dbg_Update_14_UNCONNECTED),
        .Dbg_Update_15(NLW_U0_Dbg_Update_15_UNCONNECTED),
        .Dbg_Update_16(NLW_U0_Dbg_Update_16_UNCONNECTED),
        .Dbg_Update_17(NLW_U0_Dbg_Update_17_UNCONNECTED),
        .Dbg_Update_18(NLW_U0_Dbg_Update_18_UNCONNECTED),
        .Dbg_Update_19(NLW_U0_Dbg_Update_19_UNCONNECTED),
        .Dbg_Update_2(NLW_U0_Dbg_Update_2_UNCONNECTED),
        .Dbg_Update_20(NLW_U0_Dbg_Update_20_UNCONNECTED),
        .Dbg_Update_21(NLW_U0_Dbg_Update_21_UNCONNECTED),
        .Dbg_Update_22(NLW_U0_Dbg_Update_22_UNCONNECTED),
        .Dbg_Update_23(NLW_U0_Dbg_Update_23_UNCONNECTED),
        .Dbg_Update_24(NLW_U0_Dbg_Update_24_UNCONNECTED),
        .Dbg_Update_25(NLW_U0_Dbg_Update_25_UNCONNECTED),
        .Dbg_Update_26(NLW_U0_Dbg_Update_26_UNCONNECTED),
        .Dbg_Update_27(NLW_U0_Dbg_Update_27_UNCONNECTED),
        .Dbg_Update_28(NLW_U0_Dbg_Update_28_UNCONNECTED),
        .Dbg_Update_29(NLW_U0_Dbg_Update_29_UNCONNECTED),
        .Dbg_Update_3(NLW_U0_Dbg_Update_3_UNCONNECTED),
        .Dbg_Update_30(NLW_U0_Dbg_Update_30_UNCONNECTED),
        .Dbg_Update_31(NLW_U0_Dbg_Update_31_UNCONNECTED),
        .Dbg_Update_4(NLW_U0_Dbg_Update_4_UNCONNECTED),
        .Dbg_Update_5(NLW_U0_Dbg_Update_5_UNCONNECTED),
        .Dbg_Update_6(NLW_U0_Dbg_Update_6_UNCONNECTED),
        .Dbg_Update_7(NLW_U0_Dbg_Update_7_UNCONNECTED),
        .Dbg_Update_8(NLW_U0_Dbg_Update_8_UNCONNECTED),
        .Dbg_Update_9(NLW_U0_Dbg_Update_9_UNCONNECTED),
        .Dbg_WDATA_0(NLW_U0_Dbg_WDATA_0_UNCONNECTED[31:0]),
        .Dbg_WDATA_1(NLW_U0_Dbg_WDATA_1_UNCONNECTED[31:0]),
        .Dbg_WDATA_10(NLW_U0_Dbg_WDATA_10_UNCONNECTED[31:0]),
        .Dbg_WDATA_11(NLW_U0_Dbg_WDATA_11_UNCONNECTED[31:0]),
        .Dbg_WDATA_12(NLW_U0_Dbg_WDATA_12_UNCONNECTED[31:0]),
        .Dbg_WDATA_13(NLW_U0_Dbg_WDATA_13_UNCONNECTED[31:0]),
        .Dbg_WDATA_14(NLW_U0_Dbg_WDATA_14_UNCONNECTED[31:0]),
        .Dbg_WDATA_15(NLW_U0_Dbg_WDATA_15_UNCONNECTED[31:0]),
        .Dbg_WDATA_16(NLW_U0_Dbg_WDATA_16_UNCONNECTED[31:0]),
        .Dbg_WDATA_17(NLW_U0_Dbg_WDATA_17_UNCONNECTED[31:0]),
        .Dbg_WDATA_18(NLW_U0_Dbg_WDATA_18_UNCONNECTED[31:0]),
        .Dbg_WDATA_19(NLW_U0_Dbg_WDATA_19_UNCONNECTED[31:0]),
        .Dbg_WDATA_2(NLW_U0_Dbg_WDATA_2_UNCONNECTED[31:0]),
        .Dbg_WDATA_20(NLW_U0_Dbg_WDATA_20_UNCONNECTED[31:0]),
        .Dbg_WDATA_21(NLW_U0_Dbg_WDATA_21_UNCONNECTED[31:0]),
        .Dbg_WDATA_22(NLW_U0_Dbg_WDATA_22_UNCONNECTED[31:0]),
        .Dbg_WDATA_23(NLW_U0_Dbg_WDATA_23_UNCONNECTED[31:0]),
        .Dbg_WDATA_24(NLW_U0_Dbg_WDATA_24_UNCONNECTED[31:0]),
        .Dbg_WDATA_25(NLW_U0_Dbg_WDATA_25_UNCONNECTED[31:0]),
        .Dbg_WDATA_26(NLW_U0_Dbg_WDATA_26_UNCONNECTED[31:0]),
        .Dbg_WDATA_27(NLW_U0_Dbg_WDATA_27_UNCONNECTED[31:0]),
        .Dbg_WDATA_28(NLW_U0_Dbg_WDATA_28_UNCONNECTED[31:0]),
        .Dbg_WDATA_29(NLW_U0_Dbg_WDATA_29_UNCONNECTED[31:0]),
        .Dbg_WDATA_3(NLW_U0_Dbg_WDATA_3_UNCONNECTED[31:0]),
        .Dbg_WDATA_30(NLW_U0_Dbg_WDATA_30_UNCONNECTED[31:0]),
        .Dbg_WDATA_31(NLW_U0_Dbg_WDATA_31_UNCONNECTED[31:0]),
        .Dbg_WDATA_4(NLW_U0_Dbg_WDATA_4_UNCONNECTED[31:0]),
        .Dbg_WDATA_5(NLW_U0_Dbg_WDATA_5_UNCONNECTED[31:0]),
        .Dbg_WDATA_6(NLW_U0_Dbg_WDATA_6_UNCONNECTED[31:0]),
        .Dbg_WDATA_7(NLW_U0_Dbg_WDATA_7_UNCONNECTED[31:0]),
        .Dbg_WDATA_8(NLW_U0_Dbg_WDATA_8_UNCONNECTED[31:0]),
        .Dbg_WDATA_9(NLW_U0_Dbg_WDATA_9_UNCONNECTED[31:0]),
        .Dbg_WREADY_0(NLW_U0_Dbg_WREADY_0_UNCONNECTED),
        .Dbg_WREADY_1(NLW_U0_Dbg_WREADY_1_UNCONNECTED),
        .Dbg_WREADY_10(NLW_U0_Dbg_WREADY_10_UNCONNECTED),
        .Dbg_WREADY_11(NLW_U0_Dbg_WREADY_11_UNCONNECTED),
        .Dbg_WREADY_12(NLW_U0_Dbg_WREADY_12_UNCONNECTED),
        .Dbg_WREADY_13(NLW_U0_Dbg_WREADY_13_UNCONNECTED),
        .Dbg_WREADY_14(NLW_U0_Dbg_WREADY_14_UNCONNECTED),
        .Dbg_WREADY_15(NLW_U0_Dbg_WREADY_15_UNCONNECTED),
        .Dbg_WREADY_16(NLW_U0_Dbg_WREADY_16_UNCONNECTED),
        .Dbg_WREADY_17(NLW_U0_Dbg_WREADY_17_UNCONNECTED),
        .Dbg_WREADY_18(NLW_U0_Dbg_WREADY_18_UNCONNECTED),
        .Dbg_WREADY_19(NLW_U0_Dbg_WREADY_19_UNCONNECTED),
        .Dbg_WREADY_2(NLW_U0_Dbg_WREADY_2_UNCONNECTED),
        .Dbg_WREADY_20(NLW_U0_Dbg_WREADY_20_UNCONNECTED),
        .Dbg_WREADY_21(NLW_U0_Dbg_WREADY_21_UNCONNECTED),
        .Dbg_WREADY_22(NLW_U0_Dbg_WREADY_22_UNCONNECTED),
        .Dbg_WREADY_23(NLW_U0_Dbg_WREADY_23_UNCONNECTED),
        .Dbg_WREADY_24(NLW_U0_Dbg_WREADY_24_UNCONNECTED),
        .Dbg_WREADY_25(NLW_U0_Dbg_WREADY_25_UNCONNECTED),
        .Dbg_WREADY_26(NLW_U0_Dbg_WREADY_26_UNCONNECTED),
        .Dbg_WREADY_27(NLW_U0_Dbg_WREADY_27_UNCONNECTED),
        .Dbg_WREADY_28(NLW_U0_Dbg_WREADY_28_UNCONNECTED),
        .Dbg_WREADY_29(NLW_U0_Dbg_WREADY_29_UNCONNECTED),
        .Dbg_WREADY_3(NLW_U0_Dbg_WREADY_3_UNCONNECTED),
        .Dbg_WREADY_30(NLW_U0_Dbg_WREADY_30_UNCONNECTED),
        .Dbg_WREADY_31(NLW_U0_Dbg_WREADY_31_UNCONNECTED),
        .Dbg_WREADY_4(NLW_U0_Dbg_WREADY_4_UNCONNECTED),
        .Dbg_WREADY_5(NLW_U0_Dbg_WREADY_5_UNCONNECTED),
        .Dbg_WREADY_6(NLW_U0_Dbg_WREADY_6_UNCONNECTED),
        .Dbg_WREADY_7(NLW_U0_Dbg_WREADY_7_UNCONNECTED),
        .Dbg_WREADY_8(NLW_U0_Dbg_WREADY_8_UNCONNECTED),
        .Dbg_WREADY_9(NLW_U0_Dbg_WREADY_9_UNCONNECTED),
        .Dbg_WVALID_0(NLW_U0_Dbg_WVALID_0_UNCONNECTED),
        .Dbg_WVALID_1(NLW_U0_Dbg_WVALID_1_UNCONNECTED),
        .Dbg_WVALID_10(NLW_U0_Dbg_WVALID_10_UNCONNECTED),
        .Dbg_WVALID_11(NLW_U0_Dbg_WVALID_11_UNCONNECTED),
        .Dbg_WVALID_12(NLW_U0_Dbg_WVALID_12_UNCONNECTED),
        .Dbg_WVALID_13(NLW_U0_Dbg_WVALID_13_UNCONNECTED),
        .Dbg_WVALID_14(NLW_U0_Dbg_WVALID_14_UNCONNECTED),
        .Dbg_WVALID_15(NLW_U0_Dbg_WVALID_15_UNCONNECTED),
        .Dbg_WVALID_16(NLW_U0_Dbg_WVALID_16_UNCONNECTED),
        .Dbg_WVALID_17(NLW_U0_Dbg_WVALID_17_UNCONNECTED),
        .Dbg_WVALID_18(NLW_U0_Dbg_WVALID_18_UNCONNECTED),
        .Dbg_WVALID_19(NLW_U0_Dbg_WVALID_19_UNCONNECTED),
        .Dbg_WVALID_2(NLW_U0_Dbg_WVALID_2_UNCONNECTED),
        .Dbg_WVALID_20(NLW_U0_Dbg_WVALID_20_UNCONNECTED),
        .Dbg_WVALID_21(NLW_U0_Dbg_WVALID_21_UNCONNECTED),
        .Dbg_WVALID_22(NLW_U0_Dbg_WVALID_22_UNCONNECTED),
        .Dbg_WVALID_23(NLW_U0_Dbg_WVALID_23_UNCONNECTED),
        .Dbg_WVALID_24(NLW_U0_Dbg_WVALID_24_UNCONNECTED),
        .Dbg_WVALID_25(NLW_U0_Dbg_WVALID_25_UNCONNECTED),
        .Dbg_WVALID_26(NLW_U0_Dbg_WVALID_26_UNCONNECTED),
        .Dbg_WVALID_27(NLW_U0_Dbg_WVALID_27_UNCONNECTED),
        .Dbg_WVALID_28(NLW_U0_Dbg_WVALID_28_UNCONNECTED),
        .Dbg_WVALID_29(NLW_U0_Dbg_WVALID_29_UNCONNECTED),
        .Dbg_WVALID_3(NLW_U0_Dbg_WVALID_3_UNCONNECTED),
        .Dbg_WVALID_30(NLW_U0_Dbg_WVALID_30_UNCONNECTED),
        .Dbg_WVALID_31(NLW_U0_Dbg_WVALID_31_UNCONNECTED),
        .Dbg_WVALID_4(NLW_U0_Dbg_WVALID_4_UNCONNECTED),
        .Dbg_WVALID_5(NLW_U0_Dbg_WVALID_5_UNCONNECTED),
        .Dbg_WVALID_6(NLW_U0_Dbg_WVALID_6_UNCONNECTED),
        .Dbg_WVALID_7(NLW_U0_Dbg_WVALID_7_UNCONNECTED),
        .Dbg_WVALID_8(NLW_U0_Dbg_WVALID_8_UNCONNECTED),
        .Dbg_WVALID_9(NLW_U0_Dbg_WVALID_9_UNCONNECTED),
        .Debug_SYS_Rst(Debug_SYS_Rst),
        .Ext_BRK(NLW_U0_Ext_BRK_UNCONNECTED),
        .Ext_JTAG_CAPTURE(NLW_U0_Ext_JTAG_CAPTURE_UNCONNECTED),
        .Ext_JTAG_DRCK(NLW_U0_Ext_JTAG_DRCK_UNCONNECTED),
        .Ext_JTAG_RESET(NLW_U0_Ext_JTAG_RESET_UNCONNECTED),
        .Ext_JTAG_SEL(NLW_U0_Ext_JTAG_SEL_UNCONNECTED),
        .Ext_JTAG_SHIFT(NLW_U0_Ext_JTAG_SHIFT_UNCONNECTED),
        .Ext_JTAG_TDI(NLW_U0_Ext_JTAG_TDI_UNCONNECTED),
        .Ext_JTAG_TDO(NLW_U0_Ext_JTAG_TDO_UNCONNECTED),
        .Ext_JTAG_UPDATE(NLW_U0_Ext_JTAG_UPDATE_UNCONNECTED),
        .Ext_NM_BRK(NLW_U0_Ext_NM_BRK_UNCONNECTED),
        .Interrupt(NLW_U0_Interrupt_UNCONNECTED),
        .LMB_Addr_Strobe_0(NLW_U0_LMB_Addr_Strobe_0_UNCONNECTED),
        .LMB_Addr_Strobe_1(NLW_U0_LMB_Addr_Strobe_1_UNCONNECTED),
        .LMB_Addr_Strobe_10(NLW_U0_LMB_Addr_Strobe_10_UNCONNECTED),
        .LMB_Addr_Strobe_11(NLW_U0_LMB_Addr_Strobe_11_UNCONNECTED),
        .LMB_Addr_Strobe_12(NLW_U0_LMB_Addr_Strobe_12_UNCONNECTED),
        .LMB_Addr_Strobe_13(NLW_U0_LMB_Addr_Strobe_13_UNCONNECTED),
        .LMB_Addr_Strobe_14(NLW_U0_LMB_Addr_Strobe_14_UNCONNECTED),
        .LMB_Addr_Strobe_15(NLW_U0_LMB_Addr_Strobe_15_UNCONNECTED),
        .LMB_Addr_Strobe_16(NLW_U0_LMB_Addr_Strobe_16_UNCONNECTED),
        .LMB_Addr_Strobe_17(NLW_U0_LMB_Addr_Strobe_17_UNCONNECTED),
        .LMB_Addr_Strobe_18(NLW_U0_LMB_Addr_Strobe_18_UNCONNECTED),
        .LMB_Addr_Strobe_19(NLW_U0_LMB_Addr_Strobe_19_UNCONNECTED),
        .LMB_Addr_Strobe_2(NLW_U0_LMB_Addr_Strobe_2_UNCONNECTED),
        .LMB_Addr_Strobe_20(NLW_U0_LMB_Addr_Strobe_20_UNCONNECTED),
        .LMB_Addr_Strobe_21(NLW_U0_LMB_Addr_Strobe_21_UNCONNECTED),
        .LMB_Addr_Strobe_22(NLW_U0_LMB_Addr_Strobe_22_UNCONNECTED),
        .LMB_Addr_Strobe_23(NLW_U0_LMB_Addr_Strobe_23_UNCONNECTED),
        .LMB_Addr_Strobe_24(NLW_U0_LMB_Addr_Strobe_24_UNCONNECTED),
        .LMB_Addr_Strobe_25(NLW_U0_LMB_Addr_Strobe_25_UNCONNECTED),
        .LMB_Addr_Strobe_26(NLW_U0_LMB_Addr_Strobe_26_UNCONNECTED),
        .LMB_Addr_Strobe_27(NLW_U0_LMB_Addr_Strobe_27_UNCONNECTED),
        .LMB_Addr_Strobe_28(NLW_U0_LMB_Addr_Strobe_28_UNCONNECTED),
        .LMB_Addr_Strobe_29(NLW_U0_LMB_Addr_Strobe_29_UNCONNECTED),
        .LMB_Addr_Strobe_3(NLW_U0_LMB_Addr_Strobe_3_UNCONNECTED),
        .LMB_Addr_Strobe_30(NLW_U0_LMB_Addr_Strobe_30_UNCONNECTED),
        .LMB_Addr_Strobe_31(NLW_U0_LMB_Addr_Strobe_31_UNCONNECTED),
        .LMB_Addr_Strobe_4(NLW_U0_LMB_Addr_Strobe_4_UNCONNECTED),
        .LMB_Addr_Strobe_5(NLW_U0_LMB_Addr_Strobe_5_UNCONNECTED),
        .LMB_Addr_Strobe_6(NLW_U0_LMB_Addr_Strobe_6_UNCONNECTED),
        .LMB_Addr_Strobe_7(NLW_U0_LMB_Addr_Strobe_7_UNCONNECTED),
        .LMB_Addr_Strobe_8(NLW_U0_LMB_Addr_Strobe_8_UNCONNECTED),
        .LMB_Addr_Strobe_9(NLW_U0_LMB_Addr_Strobe_9_UNCONNECTED),
        .LMB_Byte_Enable_0(NLW_U0_LMB_Byte_Enable_0_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_1(NLW_U0_LMB_Byte_Enable_1_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_10(NLW_U0_LMB_Byte_Enable_10_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_11(NLW_U0_LMB_Byte_Enable_11_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_12(NLW_U0_LMB_Byte_Enable_12_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_13(NLW_U0_LMB_Byte_Enable_13_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_14(NLW_U0_LMB_Byte_Enable_14_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_15(NLW_U0_LMB_Byte_Enable_15_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_16(NLW_U0_LMB_Byte_Enable_16_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_17(NLW_U0_LMB_Byte_Enable_17_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_18(NLW_U0_LMB_Byte_Enable_18_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_19(NLW_U0_LMB_Byte_Enable_19_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_2(NLW_U0_LMB_Byte_Enable_2_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_20(NLW_U0_LMB_Byte_Enable_20_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_21(NLW_U0_LMB_Byte_Enable_21_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_22(NLW_U0_LMB_Byte_Enable_22_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_23(NLW_U0_LMB_Byte_Enable_23_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_24(NLW_U0_LMB_Byte_Enable_24_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_25(NLW_U0_LMB_Byte_Enable_25_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_26(NLW_U0_LMB_Byte_Enable_26_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_27(NLW_U0_LMB_Byte_Enable_27_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_28(NLW_U0_LMB_Byte_Enable_28_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_29(NLW_U0_LMB_Byte_Enable_29_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_3(NLW_U0_LMB_Byte_Enable_3_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_30(NLW_U0_LMB_Byte_Enable_30_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_31(NLW_U0_LMB_Byte_Enable_31_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_4(NLW_U0_LMB_Byte_Enable_4_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_5(NLW_U0_LMB_Byte_Enable_5_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_6(NLW_U0_LMB_Byte_Enable_6_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_7(NLW_U0_LMB_Byte_Enable_7_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_8(NLW_U0_LMB_Byte_Enable_8_UNCONNECTED[0:3]),
        .LMB_Byte_Enable_9(NLW_U0_LMB_Byte_Enable_9_UNCONNECTED[0:3]),
        .LMB_CE_0(NLW_U0_LMB_CE_0_UNCONNECTED),
        .LMB_CE_1(NLW_U0_LMB_CE_1_UNCONNECTED),
        .LMB_CE_10(NLW_U0_LMB_CE_10_UNCONNECTED),
        .LMB_CE_11(NLW_U0_LMB_CE_11_UNCONNECTED),
        .LMB_CE_12(NLW_U0_LMB_CE_12_UNCONNECTED),
        .LMB_CE_13(NLW_U0_LMB_CE_13_UNCONNECTED),
        .LMB_CE_14(NLW_U0_LMB_CE_14_UNCONNECTED),
        .LMB_CE_15(NLW_U0_LMB_CE_15_UNCONNECTED),
        .LMB_CE_16(NLW_U0_LMB_CE_16_UNCONNECTED),
        .LMB_CE_17(NLW_U0_LMB_CE_17_UNCONNECTED),
        .LMB_CE_18(NLW_U0_LMB_CE_18_UNCONNECTED),
        .LMB_CE_19(NLW_U0_LMB_CE_19_UNCONNECTED),
        .LMB_CE_2(NLW_U0_LMB_CE_2_UNCONNECTED),
        .LMB_CE_20(NLW_U0_LMB_CE_20_UNCONNECTED),
        .LMB_CE_21(NLW_U0_LMB_CE_21_UNCONNECTED),
        .LMB_CE_22(NLW_U0_LMB_CE_22_UNCONNECTED),
        .LMB_CE_23(NLW_U0_LMB_CE_23_UNCONNECTED),
        .LMB_CE_24(NLW_U0_LMB_CE_24_UNCONNECTED),
        .LMB_CE_25(NLW_U0_LMB_CE_25_UNCONNECTED),
        .LMB_CE_26(NLW_U0_LMB_CE_26_UNCONNECTED),
        .LMB_CE_27(NLW_U0_LMB_CE_27_UNCONNECTED),
        .LMB_CE_28(NLW_U0_LMB_CE_28_UNCONNECTED),
        .LMB_CE_29(NLW_U0_LMB_CE_29_UNCONNECTED),
        .LMB_CE_3(NLW_U0_LMB_CE_3_UNCONNECTED),
        .LMB_CE_30(NLW_U0_LMB_CE_30_UNCONNECTED),
        .LMB_CE_31(NLW_U0_LMB_CE_31_UNCONNECTED),
        .LMB_CE_4(NLW_U0_LMB_CE_4_UNCONNECTED),
        .LMB_CE_5(NLW_U0_LMB_CE_5_UNCONNECTED),
        .LMB_CE_6(NLW_U0_LMB_CE_6_UNCONNECTED),
        .LMB_CE_7(NLW_U0_LMB_CE_7_UNCONNECTED),
        .LMB_CE_8(NLW_U0_LMB_CE_8_UNCONNECTED),
        .LMB_CE_9(NLW_U0_LMB_CE_9_UNCONNECTED),
        .LMB_Data_Addr_0(NLW_U0_LMB_Data_Addr_0_UNCONNECTED[0:31]),
        .LMB_Data_Addr_1(NLW_U0_LMB_Data_Addr_1_UNCONNECTED[0:31]),
        .LMB_Data_Addr_10(NLW_U0_LMB_Data_Addr_10_UNCONNECTED[0:31]),
        .LMB_Data_Addr_11(NLW_U0_LMB_Data_Addr_11_UNCONNECTED[0:31]),
        .LMB_Data_Addr_12(NLW_U0_LMB_Data_Addr_12_UNCONNECTED[0:31]),
        .LMB_Data_Addr_13(NLW_U0_LMB_Data_Addr_13_UNCONNECTED[0:31]),
        .LMB_Data_Addr_14(NLW_U0_LMB_Data_Addr_14_UNCONNECTED[0:31]),
        .LMB_Data_Addr_15(NLW_U0_LMB_Data_Addr_15_UNCONNECTED[0:31]),
        .LMB_Data_Addr_16(NLW_U0_LMB_Data_Addr_16_UNCONNECTED[0:31]),
        .LMB_Data_Addr_17(NLW_U0_LMB_Data_Addr_17_UNCONNECTED[0:31]),
        .LMB_Data_Addr_18(NLW_U0_LMB_Data_Addr_18_UNCONNECTED[0:31]),
        .LMB_Data_Addr_19(NLW_U0_LMB_Data_Addr_19_UNCONNECTED[0:31]),
        .LMB_Data_Addr_2(NLW_U0_LMB_Data_Addr_2_UNCONNECTED[0:31]),
        .LMB_Data_Addr_20(NLW_U0_LMB_Data_Addr_20_UNCONNECTED[0:31]),
        .LMB_Data_Addr_21(NLW_U0_LMB_Data_Addr_21_UNCONNECTED[0:31]),
        .LMB_Data_Addr_22(NLW_U0_LMB_Data_Addr_22_UNCONNECTED[0:31]),
        .LMB_Data_Addr_23(NLW_U0_LMB_Data_Addr_23_UNCONNECTED[0:31]),
        .LMB_Data_Addr_24(NLW_U0_LMB_Data_Addr_24_UNCONNECTED[0:31]),
        .LMB_Data_Addr_25(NLW_U0_LMB_Data_Addr_25_UNCONNECTED[0:31]),
        .LMB_Data_Addr_26(NLW_U0_LMB_Data_Addr_26_UNCONNECTED[0:31]),
        .LMB_Data_Addr_27(NLW_U0_LMB_Data_Addr_27_UNCONNECTED[0:31]),
        .LMB_Data_Addr_28(NLW_U0_LMB_Data_Addr_28_UNCONNECTED[0:31]),
        .LMB_Data_Addr_29(NLW_U0_LMB_Data_Addr_29_UNCONNECTED[0:31]),
        .LMB_Data_Addr_3(NLW_U0_LMB_Data_Addr_3_UNCONNECTED[0:31]),
        .LMB_Data_Addr_30(NLW_U0_LMB_Data_Addr_30_UNCONNECTED[0:31]),
        .LMB_Data_Addr_31(NLW_U0_LMB_Data_Addr_31_UNCONNECTED[0:31]),
        .LMB_Data_Addr_4(NLW_U0_LMB_Data_Addr_4_UNCONNECTED[0:31]),
        .LMB_Data_Addr_5(NLW_U0_LMB_Data_Addr_5_UNCONNECTED[0:31]),
        .LMB_Data_Addr_6(NLW_U0_LMB_Data_Addr_6_UNCONNECTED[0:31]),
        .LMB_Data_Addr_7(NLW_U0_LMB_Data_Addr_7_UNCONNECTED[0:31]),
        .LMB_Data_Addr_8(NLW_U0_LMB_Data_Addr_8_UNCONNECTED[0:31]),
        .LMB_Data_Addr_9(NLW_U0_LMB_Data_Addr_9_UNCONNECTED[0:31]),
        .LMB_Data_Read_0(NLW_U0_LMB_Data_Read_0_UNCONNECTED[0:31]),
        .LMB_Data_Read_1(NLW_U0_LMB_Data_Read_1_UNCONNECTED[0:31]),
        .LMB_Data_Read_10(NLW_U0_LMB_Data_Read_10_UNCONNECTED[0:31]),
        .LMB_Data_Read_11(NLW_U0_LMB_Data_Read_11_UNCONNECTED[0:31]),
        .LMB_Data_Read_12(NLW_U0_LMB_Data_Read_12_UNCONNECTED[0:31]),
        .LMB_Data_Read_13(NLW_U0_LMB_Data_Read_13_UNCONNECTED[0:31]),
        .LMB_Data_Read_14(NLW_U0_LMB_Data_Read_14_UNCONNECTED[0:31]),
        .LMB_Data_Read_15(NLW_U0_LMB_Data_Read_15_UNCONNECTED[0:31]),
        .LMB_Data_Read_16(NLW_U0_LMB_Data_Read_16_UNCONNECTED[0:31]),
        .LMB_Data_Read_17(NLW_U0_LMB_Data_Read_17_UNCONNECTED[0:31]),
        .LMB_Data_Read_18(NLW_U0_LMB_Data_Read_18_UNCONNECTED[0:31]),
        .LMB_Data_Read_19(NLW_U0_LMB_Data_Read_19_UNCONNECTED[0:31]),
        .LMB_Data_Read_2(NLW_U0_LMB_Data_Read_2_UNCONNECTED[0:31]),
        .LMB_Data_Read_20(NLW_U0_LMB_Data_Read_20_UNCONNECTED[0:31]),
        .LMB_Data_Read_21(NLW_U0_LMB_Data_Read_21_UNCONNECTED[0:31]),
        .LMB_Data_Read_22(NLW_U0_LMB_Data_Read_22_UNCONNECTED[0:31]),
        .LMB_Data_Read_23(NLW_U0_LMB_Data_Read_23_UNCONNECTED[0:31]),
        .LMB_Data_Read_24(NLW_U0_LMB_Data_Read_24_UNCONNECTED[0:31]),
        .LMB_Data_Read_25(NLW_U0_LMB_Data_Read_25_UNCONNECTED[0:31]),
        .LMB_Data_Read_26(NLW_U0_LMB_Data_Read_26_UNCONNECTED[0:31]),
        .LMB_Data_Read_27(NLW_U0_LMB_Data_Read_27_UNCONNECTED[0:31]),
        .LMB_Data_Read_28(NLW_U0_LMB_Data_Read_28_UNCONNECTED[0:31]),
        .LMB_Data_Read_29(NLW_U0_LMB_Data_Read_29_UNCONNECTED[0:31]),
        .LMB_Data_Read_3(NLW_U0_LMB_Data_Read_3_UNCONNECTED[0:31]),
        .LMB_Data_Read_30(NLW_U0_LMB_Data_Read_30_UNCONNECTED[0:31]),
        .LMB_Data_Read_31(NLW_U0_LMB_Data_Read_31_UNCONNECTED[0:31]),
        .LMB_Data_Read_4(NLW_U0_LMB_Data_Read_4_UNCONNECTED[0:31]),
        .LMB_Data_Read_5(NLW_U0_LMB_Data_Read_5_UNCONNECTED[0:31]),
        .LMB_Data_Read_6(NLW_U0_LMB_Data_Read_6_UNCONNECTED[0:31]),
        .LMB_Data_Read_7(NLW_U0_LMB_Data_Read_7_UNCONNECTED[0:31]),
        .LMB_Data_Read_8(NLW_U0_LMB_Data_Read_8_UNCONNECTED[0:31]),
        .LMB_Data_Read_9(NLW_U0_LMB_Data_Read_9_UNCONNECTED[0:31]),
        .LMB_Data_Write_0(NLW_U0_LMB_Data_Write_0_UNCONNECTED[0:31]),
        .LMB_Data_Write_1(NLW_U0_LMB_Data_Write_1_UNCONNECTED[0:31]),
        .LMB_Data_Write_10(NLW_U0_LMB_Data_Write_10_UNCONNECTED[0:31]),
        .LMB_Data_Write_11(NLW_U0_LMB_Data_Write_11_UNCONNECTED[0:31]),
        .LMB_Data_Write_12(NLW_U0_LMB_Data_Write_12_UNCONNECTED[0:31]),
        .LMB_Data_Write_13(NLW_U0_LMB_Data_Write_13_UNCONNECTED[0:31]),
        .LMB_Data_Write_14(NLW_U0_LMB_Data_Write_14_UNCONNECTED[0:31]),
        .LMB_Data_Write_15(NLW_U0_LMB_Data_Write_15_UNCONNECTED[0:31]),
        .LMB_Data_Write_16(NLW_U0_LMB_Data_Write_16_UNCONNECTED[0:31]),
        .LMB_Data_Write_17(NLW_U0_LMB_Data_Write_17_UNCONNECTED[0:31]),
        .LMB_Data_Write_18(NLW_U0_LMB_Data_Write_18_UNCONNECTED[0:31]),
        .LMB_Data_Write_19(NLW_U0_LMB_Data_Write_19_UNCONNECTED[0:31]),
        .LMB_Data_Write_2(NLW_U0_LMB_Data_Write_2_UNCONNECTED[0:31]),
        .LMB_Data_Write_20(NLW_U0_LMB_Data_Write_20_UNCONNECTED[0:31]),
        .LMB_Data_Write_21(NLW_U0_LMB_Data_Write_21_UNCONNECTED[0:31]),
        .LMB_Data_Write_22(NLW_U0_LMB_Data_Write_22_UNCONNECTED[0:31]),
        .LMB_Data_Write_23(NLW_U0_LMB_Data_Write_23_UNCONNECTED[0:31]),
        .LMB_Data_Write_24(NLW_U0_LMB_Data_Write_24_UNCONNECTED[0:31]),
        .LMB_Data_Write_25(NLW_U0_LMB_Data_Write_25_UNCONNECTED[0:31]),
        .LMB_Data_Write_26(NLW_U0_LMB_Data_Write_26_UNCONNECTED[0:31]),
        .LMB_Data_Write_27(NLW_U0_LMB_Data_Write_27_UNCONNECTED[0:31]),
        .LMB_Data_Write_28(NLW_U0_LMB_Data_Write_28_UNCONNECTED[0:31]),
        .LMB_Data_Write_29(NLW_U0_LMB_Data_Write_29_UNCONNECTED[0:31]),
        .LMB_Data_Write_3(NLW_U0_LMB_Data_Write_3_UNCONNECTED[0:31]),
        .LMB_Data_Write_30(NLW_U0_LMB_Data_Write_30_UNCONNECTED[0:31]),
        .LMB_Data_Write_31(NLW_U0_LMB_Data_Write_31_UNCONNECTED[0:31]),
        .LMB_Data_Write_4(NLW_U0_LMB_Data_Write_4_UNCONNECTED[0:31]),
        .LMB_Data_Write_5(NLW_U0_LMB_Data_Write_5_UNCONNECTED[0:31]),
        .LMB_Data_Write_6(NLW_U0_LMB_Data_Write_6_UNCONNECTED[0:31]),
        .LMB_Data_Write_7(NLW_U0_LMB_Data_Write_7_UNCONNECTED[0:31]),
        .LMB_Data_Write_8(NLW_U0_LMB_Data_Write_8_UNCONNECTED[0:31]),
        .LMB_Data_Write_9(NLW_U0_LMB_Data_Write_9_UNCONNECTED[0:31]),
        .LMB_Read_Strobe_0(NLW_U0_LMB_Read_Strobe_0_UNCONNECTED),
        .LMB_Read_Strobe_1(NLW_U0_LMB_Read_Strobe_1_UNCONNECTED),
        .LMB_Read_Strobe_10(NLW_U0_LMB_Read_Strobe_10_UNCONNECTED),
        .LMB_Read_Strobe_11(NLW_U0_LMB_Read_Strobe_11_UNCONNECTED),
        .LMB_Read_Strobe_12(NLW_U0_LMB_Read_Strobe_12_UNCONNECTED),
        .LMB_Read_Strobe_13(NLW_U0_LMB_Read_Strobe_13_UNCONNECTED),
        .LMB_Read_Strobe_14(NLW_U0_LMB_Read_Strobe_14_UNCONNECTED),
        .LMB_Read_Strobe_15(NLW_U0_LMB_Read_Strobe_15_UNCONNECTED),
        .LMB_Read_Strobe_16(NLW_U0_LMB_Read_Strobe_16_UNCONNECTED),
        .LMB_Read_Strobe_17(NLW_U0_LMB_Read_Strobe_17_UNCONNECTED),
        .LMB_Read_Strobe_18(NLW_U0_LMB_Read_Strobe_18_UNCONNECTED),
        .LMB_Read_Strobe_19(NLW_U0_LMB_Read_Strobe_19_UNCONNECTED),
        .LMB_Read_Strobe_2(NLW_U0_LMB_Read_Strobe_2_UNCONNECTED),
        .LMB_Read_Strobe_20(NLW_U0_LMB_Read_Strobe_20_UNCONNECTED),
        .LMB_Read_Strobe_21(NLW_U0_LMB_Read_Strobe_21_UNCONNECTED),
        .LMB_Read_Strobe_22(NLW_U0_LMB_Read_Strobe_22_UNCONNECTED),
        .LMB_Read_Strobe_23(NLW_U0_LMB_Read_Strobe_23_UNCONNECTED),
        .LMB_Read_Strobe_24(NLW_U0_LMB_Read_Strobe_24_UNCONNECTED),
        .LMB_Read_Strobe_25(NLW_U0_LMB_Read_Strobe_25_UNCONNECTED),
        .LMB_Read_Strobe_26(NLW_U0_LMB_Read_Strobe_26_UNCONNECTED),
        .LMB_Read_Strobe_27(NLW_U0_LMB_Read_Strobe_27_UNCONNECTED),
        .LMB_Read_Strobe_28(NLW_U0_LMB_Read_Strobe_28_UNCONNECTED),
        .LMB_Read_Strobe_29(NLW_U0_LMB_Read_Strobe_29_UNCONNECTED),
        .LMB_Read_Strobe_3(NLW_U0_LMB_Read_Strobe_3_UNCONNECTED),
        .LMB_Read_Strobe_30(NLW_U0_LMB_Read_Strobe_30_UNCONNECTED),
        .LMB_Read_Strobe_31(NLW_U0_LMB_Read_Strobe_31_UNCONNECTED),
        .LMB_Read_Strobe_4(NLW_U0_LMB_Read_Strobe_4_UNCONNECTED),
        .LMB_Read_Strobe_5(NLW_U0_LMB_Read_Strobe_5_UNCONNECTED),
        .LMB_Read_Strobe_6(NLW_U0_LMB_Read_Strobe_6_UNCONNECTED),
        .LMB_Read_Strobe_7(NLW_U0_LMB_Read_Strobe_7_UNCONNECTED),
        .LMB_Read_Strobe_8(NLW_U0_LMB_Read_Strobe_8_UNCONNECTED),
        .LMB_Read_Strobe_9(NLW_U0_LMB_Read_Strobe_9_UNCONNECTED),
        .LMB_Ready_0(NLW_U0_LMB_Ready_0_UNCONNECTED),
        .LMB_Ready_1(NLW_U0_LMB_Ready_1_UNCONNECTED),
        .LMB_Ready_10(NLW_U0_LMB_Ready_10_UNCONNECTED),
        .LMB_Ready_11(NLW_U0_LMB_Ready_11_UNCONNECTED),
        .LMB_Ready_12(NLW_U0_LMB_Ready_12_UNCONNECTED),
        .LMB_Ready_13(NLW_U0_LMB_Ready_13_UNCONNECTED),
        .LMB_Ready_14(NLW_U0_LMB_Ready_14_UNCONNECTED),
        .LMB_Ready_15(NLW_U0_LMB_Ready_15_UNCONNECTED),
        .LMB_Ready_16(NLW_U0_LMB_Ready_16_UNCONNECTED),
        .LMB_Ready_17(NLW_U0_LMB_Ready_17_UNCONNECTED),
        .LMB_Ready_18(NLW_U0_LMB_Ready_18_UNCONNECTED),
        .LMB_Ready_19(NLW_U0_LMB_Ready_19_UNCONNECTED),
        .LMB_Ready_2(NLW_U0_LMB_Ready_2_UNCONNECTED),
        .LMB_Ready_20(NLW_U0_LMB_Ready_20_UNCONNECTED),
        .LMB_Ready_21(NLW_U0_LMB_Ready_21_UNCONNECTED),
        .LMB_Ready_22(NLW_U0_LMB_Ready_22_UNCONNECTED),
        .LMB_Ready_23(NLW_U0_LMB_Ready_23_UNCONNECTED),
        .LMB_Ready_24(NLW_U0_LMB_Ready_24_UNCONNECTED),
        .LMB_Ready_25(NLW_U0_LMB_Ready_25_UNCONNECTED),
        .LMB_Ready_26(NLW_U0_LMB_Ready_26_UNCONNECTED),
        .LMB_Ready_27(NLW_U0_LMB_Ready_27_UNCONNECTED),
        .LMB_Ready_28(NLW_U0_LMB_Ready_28_UNCONNECTED),
        .LMB_Ready_29(NLW_U0_LMB_Ready_29_UNCONNECTED),
        .LMB_Ready_3(NLW_U0_LMB_Ready_3_UNCONNECTED),
        .LMB_Ready_30(NLW_U0_LMB_Ready_30_UNCONNECTED),
        .LMB_Ready_31(NLW_U0_LMB_Ready_31_UNCONNECTED),
        .LMB_Ready_4(NLW_U0_LMB_Ready_4_UNCONNECTED),
        .LMB_Ready_5(NLW_U0_LMB_Ready_5_UNCONNECTED),
        .LMB_Ready_6(NLW_U0_LMB_Ready_6_UNCONNECTED),
        .LMB_Ready_7(NLW_U0_LMB_Ready_7_UNCONNECTED),
        .LMB_Ready_8(NLW_U0_LMB_Ready_8_UNCONNECTED),
        .LMB_Ready_9(NLW_U0_LMB_Ready_9_UNCONNECTED),
        .LMB_UE_0(NLW_U0_LMB_UE_0_UNCONNECTED),
        .LMB_UE_1(NLW_U0_LMB_UE_1_UNCONNECTED),
        .LMB_UE_10(NLW_U0_LMB_UE_10_UNCONNECTED),
        .LMB_UE_11(NLW_U0_LMB_UE_11_UNCONNECTED),
        .LMB_UE_12(NLW_U0_LMB_UE_12_UNCONNECTED),
        .LMB_UE_13(NLW_U0_LMB_UE_13_UNCONNECTED),
        .LMB_UE_14(NLW_U0_LMB_UE_14_UNCONNECTED),
        .LMB_UE_15(NLW_U0_LMB_UE_15_UNCONNECTED),
        .LMB_UE_16(NLW_U0_LMB_UE_16_UNCONNECTED),
        .LMB_UE_17(NLW_U0_LMB_UE_17_UNCONNECTED),
        .LMB_UE_18(NLW_U0_LMB_UE_18_UNCONNECTED),
        .LMB_UE_19(NLW_U0_LMB_UE_19_UNCONNECTED),
        .LMB_UE_2(NLW_U0_LMB_UE_2_UNCONNECTED),
        .LMB_UE_20(NLW_U0_LMB_UE_20_UNCONNECTED),
        .LMB_UE_21(NLW_U0_LMB_UE_21_UNCONNECTED),
        .LMB_UE_22(NLW_U0_LMB_UE_22_UNCONNECTED),
        .LMB_UE_23(NLW_U0_LMB_UE_23_UNCONNECTED),
        .LMB_UE_24(NLW_U0_LMB_UE_24_UNCONNECTED),
        .LMB_UE_25(NLW_U0_LMB_UE_25_UNCONNECTED),
        .LMB_UE_26(NLW_U0_LMB_UE_26_UNCONNECTED),
        .LMB_UE_27(NLW_U0_LMB_UE_27_UNCONNECTED),
        .LMB_UE_28(NLW_U0_LMB_UE_28_UNCONNECTED),
        .LMB_UE_29(NLW_U0_LMB_UE_29_UNCONNECTED),
        .LMB_UE_3(NLW_U0_LMB_UE_3_UNCONNECTED),
        .LMB_UE_30(NLW_U0_LMB_UE_30_UNCONNECTED),
        .LMB_UE_31(NLW_U0_LMB_UE_31_UNCONNECTED),
        .LMB_UE_4(NLW_U0_LMB_UE_4_UNCONNECTED),
        .LMB_UE_5(NLW_U0_LMB_UE_5_UNCONNECTED),
        .LMB_UE_6(NLW_U0_LMB_UE_6_UNCONNECTED),
        .LMB_UE_7(NLW_U0_LMB_UE_7_UNCONNECTED),
        .LMB_UE_8(NLW_U0_LMB_UE_8_UNCONNECTED),
        .LMB_UE_9(NLW_U0_LMB_UE_9_UNCONNECTED),
        .LMB_Wait_0(NLW_U0_LMB_Wait_0_UNCONNECTED),
        .LMB_Wait_1(NLW_U0_LMB_Wait_1_UNCONNECTED),
        .LMB_Wait_10(NLW_U0_LMB_Wait_10_UNCONNECTED),
        .LMB_Wait_11(NLW_U0_LMB_Wait_11_UNCONNECTED),
        .LMB_Wait_12(NLW_U0_LMB_Wait_12_UNCONNECTED),
        .LMB_Wait_13(NLW_U0_LMB_Wait_13_UNCONNECTED),
        .LMB_Wait_14(NLW_U0_LMB_Wait_14_UNCONNECTED),
        .LMB_Wait_15(NLW_U0_LMB_Wait_15_UNCONNECTED),
        .LMB_Wait_16(NLW_U0_LMB_Wait_16_UNCONNECTED),
        .LMB_Wait_17(NLW_U0_LMB_Wait_17_UNCONNECTED),
        .LMB_Wait_18(NLW_U0_LMB_Wait_18_UNCONNECTED),
        .LMB_Wait_19(NLW_U0_LMB_Wait_19_UNCONNECTED),
        .LMB_Wait_2(NLW_U0_LMB_Wait_2_UNCONNECTED),
        .LMB_Wait_20(NLW_U0_LMB_Wait_20_UNCONNECTED),
        .LMB_Wait_21(NLW_U0_LMB_Wait_21_UNCONNECTED),
        .LMB_Wait_22(NLW_U0_LMB_Wait_22_UNCONNECTED),
        .LMB_Wait_23(NLW_U0_LMB_Wait_23_UNCONNECTED),
        .LMB_Wait_24(NLW_U0_LMB_Wait_24_UNCONNECTED),
        .LMB_Wait_25(NLW_U0_LMB_Wait_25_UNCONNECTED),
        .LMB_Wait_26(NLW_U0_LMB_Wait_26_UNCONNECTED),
        .LMB_Wait_27(NLW_U0_LMB_Wait_27_UNCONNECTED),
        .LMB_Wait_28(NLW_U0_LMB_Wait_28_UNCONNECTED),
        .LMB_Wait_29(NLW_U0_LMB_Wait_29_UNCONNECTED),
        .LMB_Wait_3(NLW_U0_LMB_Wait_3_UNCONNECTED),
        .LMB_Wait_30(NLW_U0_LMB_Wait_30_UNCONNECTED),
        .LMB_Wait_31(NLW_U0_LMB_Wait_31_UNCONNECTED),
        .LMB_Wait_4(NLW_U0_LMB_Wait_4_UNCONNECTED),
        .LMB_Wait_5(NLW_U0_LMB_Wait_5_UNCONNECTED),
        .LMB_Wait_6(NLW_U0_LMB_Wait_6_UNCONNECTED),
        .LMB_Wait_7(NLW_U0_LMB_Wait_7_UNCONNECTED),
        .LMB_Wait_8(NLW_U0_LMB_Wait_8_UNCONNECTED),
        .LMB_Wait_9(NLW_U0_LMB_Wait_9_UNCONNECTED),
        .LMB_Write_Strobe_0(NLW_U0_LMB_Write_Strobe_0_UNCONNECTED),
        .LMB_Write_Strobe_1(NLW_U0_LMB_Write_Strobe_1_UNCONNECTED),
        .LMB_Write_Strobe_10(NLW_U0_LMB_Write_Strobe_10_UNCONNECTED),
        .LMB_Write_Strobe_11(NLW_U0_LMB_Write_Strobe_11_UNCONNECTED),
        .LMB_Write_Strobe_12(NLW_U0_LMB_Write_Strobe_12_UNCONNECTED),
        .LMB_Write_Strobe_13(NLW_U0_LMB_Write_Strobe_13_UNCONNECTED),
        .LMB_Write_Strobe_14(NLW_U0_LMB_Write_Strobe_14_UNCONNECTED),
        .LMB_Write_Strobe_15(NLW_U0_LMB_Write_Strobe_15_UNCONNECTED),
        .LMB_Write_Strobe_16(NLW_U0_LMB_Write_Strobe_16_UNCONNECTED),
        .LMB_Write_Strobe_17(NLW_U0_LMB_Write_Strobe_17_UNCONNECTED),
        .LMB_Write_Strobe_18(NLW_U0_LMB_Write_Strobe_18_UNCONNECTED),
        .LMB_Write_Strobe_19(NLW_U0_LMB_Write_Strobe_19_UNCONNECTED),
        .LMB_Write_Strobe_2(NLW_U0_LMB_Write_Strobe_2_UNCONNECTED),
        .LMB_Write_Strobe_20(NLW_U0_LMB_Write_Strobe_20_UNCONNECTED),
        .LMB_Write_Strobe_21(NLW_U0_LMB_Write_Strobe_21_UNCONNECTED),
        .LMB_Write_Strobe_22(NLW_U0_LMB_Write_Strobe_22_UNCONNECTED),
        .LMB_Write_Strobe_23(NLW_U0_LMB_Write_Strobe_23_UNCONNECTED),
        .LMB_Write_Strobe_24(NLW_U0_LMB_Write_Strobe_24_UNCONNECTED),
        .LMB_Write_Strobe_25(NLW_U0_LMB_Write_Strobe_25_UNCONNECTED),
        .LMB_Write_Strobe_26(NLW_U0_LMB_Write_Strobe_26_UNCONNECTED),
        .LMB_Write_Strobe_27(NLW_U0_LMB_Write_Strobe_27_UNCONNECTED),
        .LMB_Write_Strobe_28(NLW_U0_LMB_Write_Strobe_28_UNCONNECTED),
        .LMB_Write_Strobe_29(NLW_U0_LMB_Write_Strobe_29_UNCONNECTED),
        .LMB_Write_Strobe_3(NLW_U0_LMB_Write_Strobe_3_UNCONNECTED),
        .LMB_Write_Strobe_30(NLW_U0_LMB_Write_Strobe_30_UNCONNECTED),
        .LMB_Write_Strobe_31(NLW_U0_LMB_Write_Strobe_31_UNCONNECTED),
        .LMB_Write_Strobe_4(NLW_U0_LMB_Write_Strobe_4_UNCONNECTED),
        .LMB_Write_Strobe_5(NLW_U0_LMB_Write_Strobe_5_UNCONNECTED),
        .LMB_Write_Strobe_6(NLW_U0_LMB_Write_Strobe_6_UNCONNECTED),
        .LMB_Write_Strobe_7(NLW_U0_LMB_Write_Strobe_7_UNCONNECTED),
        .LMB_Write_Strobe_8(NLW_U0_LMB_Write_Strobe_8_UNCONNECTED),
        .LMB_Write_Strobe_9(NLW_U0_LMB_Write_Strobe_9_UNCONNECTED),
        .M_AXIS_ACLK(NLW_U0_M_AXIS_ACLK_UNCONNECTED),
        .M_AXIS_ARESETN(NLW_U0_M_AXIS_ARESETN_UNCONNECTED),
        .M_AXIS_TDATA(NLW_U0_M_AXIS_TDATA_UNCONNECTED[31:0]),
        .M_AXIS_TID(NLW_U0_M_AXIS_TID_UNCONNECTED[6:0]),
        .M_AXIS_TREADY(NLW_U0_M_AXIS_TREADY_UNCONNECTED),
        .M_AXIS_TVALID(NLW_U0_M_AXIS_TVALID_UNCONNECTED),
        .M_AXI_ACLK(NLW_U0_M_AXI_ACLK_UNCONNECTED),
        .M_AXI_ARADDR(NLW_U0_M_AXI_ARADDR_UNCONNECTED[31:0]),
        .M_AXI_ARBURST(NLW_U0_M_AXI_ARBURST_UNCONNECTED[1:0]),
        .M_AXI_ARCACHE(NLW_U0_M_AXI_ARCACHE_UNCONNECTED[3:0]),
        .M_AXI_ARESETN(NLW_U0_M_AXI_ARESETN_UNCONNECTED),
        .M_AXI_ARID(NLW_U0_M_AXI_ARID_UNCONNECTED[0]),
        .M_AXI_ARLEN(NLW_U0_M_AXI_ARLEN_UNCONNECTED[7:0]),
        .M_AXI_ARLOCK(NLW_U0_M_AXI_ARLOCK_UNCONNECTED),
        .M_AXI_ARPROT(NLW_U0_M_AXI_ARPROT_UNCONNECTED[2:0]),
        .M_AXI_ARQOS(NLW_U0_M_AXI_ARQOS_UNCONNECTED[3:0]),
        .M_AXI_ARREADY(NLW_U0_M_AXI_ARREADY_UNCONNECTED),
        .M_AXI_ARSIZE(NLW_U0_M_AXI_ARSIZE_UNCONNECTED[2:0]),
        .M_AXI_ARVALID(NLW_U0_M_AXI_ARVALID_UNCONNECTED),
        .M_AXI_AWADDR(NLW_U0_M_AXI_AWADDR_UNCONNECTED[31:0]),
        .M_AXI_AWBURST(NLW_U0_M_AXI_AWBURST_UNCONNECTED[1:0]),
        .M_AXI_AWCACHE(NLW_U0_M_AXI_AWCACHE_UNCONNECTED[3:0]),
        .M_AXI_AWID(NLW_U0_M_AXI_AWID_UNCONNECTED[0]),
        .M_AXI_AWLEN(NLW_U0_M_AXI_AWLEN_UNCONNECTED[7:0]),
        .M_AXI_AWLOCK(NLW_U0_M_AXI_AWLOCK_UNCONNECTED),
        .M_AXI_AWPROT(NLW_U0_M_AXI_AWPROT_UNCONNECTED[2:0]),
        .M_AXI_AWQOS(NLW_U0_M_AXI_AWQOS_UNCONNECTED[3:0]),
        .M_AXI_AWREADY(NLW_U0_M_AXI_AWREADY_UNCONNECTED),
        .M_AXI_AWSIZE(NLW_U0_M_AXI_AWSIZE_UNCONNECTED[2:0]),
        .M_AXI_AWVALID(NLW_U0_M_AXI_AWVALID_UNCONNECTED),
        .M_AXI_BID(NLW_U0_M_AXI_BID_UNCONNECTED[0]),
        .M_AXI_BREADY(NLW_U0_M_AXI_BREADY_UNCONNECTED),
        .M_AXI_BRESP(NLW_U0_M_AXI_BRESP_UNCONNECTED[1:0]),
        .M_AXI_BVALID(NLW_U0_M_AXI_BVALID_UNCONNECTED),
        .M_AXI_RDATA(NLW_U0_M_AXI_RDATA_UNCONNECTED[31:0]),
        .M_AXI_RID(NLW_U0_M_AXI_RID_UNCONNECTED[0]),
        .M_AXI_RLAST(NLW_U0_M_AXI_RLAST_UNCONNECTED),
        .M_AXI_RREADY(NLW_U0_M_AXI_RREADY_UNCONNECTED),
        .M_AXI_RRESP(NLW_U0_M_AXI_RRESP_UNCONNECTED[1:0]),
        .M_AXI_RVALID(NLW_U0_M_AXI_RVALID_UNCONNECTED),
        .M_AXI_WDATA(NLW_U0_M_AXI_WDATA_UNCONNECTED[31:0]),
        .M_AXI_WLAST(NLW_U0_M_AXI_WLAST_UNCONNECTED),
        .M_AXI_WREADY(NLW_U0_M_AXI_WREADY_UNCONNECTED),
        .M_AXI_WSTRB(NLW_U0_M_AXI_WSTRB_UNCONNECTED[3:0]),
        .M_AXI_WVALID(NLW_U0_M_AXI_WVALID_UNCONNECTED),
        .S_AXI_ACLK(NLW_U0_S_AXI_ACLK_UNCONNECTED),
        .S_AXI_ARADDR(NLW_U0_S_AXI_ARADDR_UNCONNECTED[3:0]),
        .S_AXI_ARESETN(NLW_U0_S_AXI_ARESETN_UNCONNECTED),
        .S_AXI_ARREADY(NLW_U0_S_AXI_ARREADY_UNCONNECTED),
        .S_AXI_ARVALID(NLW_U0_S_AXI_ARVALID_UNCONNECTED),
        .S_AXI_AWADDR(NLW_U0_S_AXI_AWADDR_UNCONNECTED[3:0]),
        .S_AXI_AWREADY(NLW_U0_S_AXI_AWREADY_UNCONNECTED),
        .S_AXI_AWVALID(NLW_U0_S_AXI_AWVALID_UNCONNECTED),
        .S_AXI_BREADY(NLW_U0_S_AXI_BREADY_UNCONNECTED),
        .S_AXI_BRESP(NLW_U0_S_AXI_BRESP_UNCONNECTED[1:0]),
        .S_AXI_BVALID(NLW_U0_S_AXI_BVALID_UNCONNECTED),
        .S_AXI_RDATA(NLW_U0_S_AXI_RDATA_UNCONNECTED[31:0]),
        .S_AXI_RREADY(NLW_U0_S_AXI_RREADY_UNCONNECTED),
        .S_AXI_RRESP(NLW_U0_S_AXI_RRESP_UNCONNECTED[1:0]),
        .S_AXI_RVALID(NLW_U0_S_AXI_RVALID_UNCONNECTED),
        .S_AXI_WDATA(NLW_U0_S_AXI_WDATA_UNCONNECTED[31:0]),
        .S_AXI_WREADY(NLW_U0_S_AXI_WREADY_UNCONNECTED),
        .S_AXI_WSTRB(NLW_U0_S_AXI_WSTRB_UNCONNECTED[3:0]),
        .S_AXI_WVALID(NLW_U0_S_AXI_WVALID_UNCONNECTED),
        .Scan_En(NLW_U0_Scan_En_UNCONNECTED),
        .Scan_Reset(NLW_U0_Scan_Reset_UNCONNECTED),
        .Scan_Reset_Sel(NLW_U0_Scan_Reset_Sel_UNCONNECTED),
        .TRACE_CLK(NLW_U0_TRACE_CLK_UNCONNECTED),
        .TRACE_CLK_OUT(NLW_U0_TRACE_CLK_OUT_UNCONNECTED),
        .TRACE_CTL(NLW_U0_TRACE_CTL_UNCONNECTED),
        .TRACE_DATA(NLW_U0_TRACE_DATA_UNCONNECTED[31:0]),
        .Trig_Ack_In_0(NLW_U0_Trig_Ack_In_0_UNCONNECTED),
        .Trig_Ack_In_1(NLW_U0_Trig_Ack_In_1_UNCONNECTED),
        .Trig_Ack_In_2(NLW_U0_Trig_Ack_In_2_UNCONNECTED),
        .Trig_Ack_In_3(NLW_U0_Trig_Ack_In_3_UNCONNECTED),
        .Trig_Ack_Out_0(NLW_U0_Trig_Ack_Out_0_UNCONNECTED),
        .Trig_Ack_Out_1(NLW_U0_Trig_Ack_Out_1_UNCONNECTED),
        .Trig_Ack_Out_2(NLW_U0_Trig_Ack_Out_2_UNCONNECTED),
        .Trig_Ack_Out_3(NLW_U0_Trig_Ack_Out_3_UNCONNECTED),
        .Trig_In_0(NLW_U0_Trig_In_0_UNCONNECTED),
        .Trig_In_1(NLW_U0_Trig_In_1_UNCONNECTED),
        .Trig_In_2(NLW_U0_Trig_In_2_UNCONNECTED),
        .Trig_In_3(NLW_U0_Trig_In_3_UNCONNECTED),
        .Trig_Out_0(NLW_U0_Trig_Out_0_UNCONNECTED),
        .Trig_Out_1(NLW_U0_Trig_Out_1_UNCONNECTED),
        .Trig_Out_2(NLW_U0_Trig_Out_2_UNCONNECTED),
        .Trig_Out_3(NLW_U0_Trig_Out_3_UNCONNECTED),
        .bscan_ext_bscanid_en(NLW_U0_bscan_ext_bscanid_en_UNCONNECTED),
        .bscan_ext_capture(NLW_U0_bscan_ext_capture_UNCONNECTED),
        .bscan_ext_drck(NLW_U0_bscan_ext_drck_UNCONNECTED),
        .bscan_ext_reset(NLW_U0_bscan_ext_reset_UNCONNECTED),
        .bscan_ext_sel(NLW_U0_bscan_ext_sel_UNCONNECTED),
        .bscan_ext_shift(NLW_U0_bscan_ext_shift_UNCONNECTED),
        .bscan_ext_tck(NLW_U0_bscan_ext_tck_UNCONNECTED),
        .bscan_ext_tdi(NLW_U0_bscan_ext_tdi_UNCONNECTED),
        .bscan_ext_tdo(NLW_U0_bscan_ext_tdo_UNCONNECTED),
        .bscan_ext_tms(NLW_U0_bscan_ext_tms_UNCONNECTED),
        .bscan_ext_update(NLW_U0_bscan_ext_update_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "JTAG_CONTROL" *) 
module system_mdm_1_0__JTAG_CONTROL
   (Q,
    AR,
    Ext_NM_BRK,
    Debug_SYS_Rst,
    Dbg_Rst_0,
    Dbg_Reg_En_0,
    \Use_BSCAN.command_reg[6]_0 ,
    mb_data_overrun1__0,
    Dbg_Shift_0,
    tdo,
    \Use_Serial_Unified_Completion.sample_1_reg[15]_0 ,
    \Use_Serial_Unified_Completion.count_reg[5]_0 ,
    CLK,
    \Using_FPGA.Native ,
    sel_n_reg_0,
    Dbg_Shift_0_0,
    \command_1_reg[7]_0 ,
    SEL,
    sel_n_reg_1,
    Scan_Reset,
    Scan_Reset_Sel,
    Scan_En,
    Dbg_TDO_0,
    \Use_Serial_Unified_Completion.mb_instr_overrun_reg_0 ,
    Ext_JTAG_TDI,
    E,
    D,
    \Use_Serial_Unified_Completion.count_reg[5]_1 ,
    \Use_Serial_Unified_Completion.count_reg[5]_2 ,
    \shift_Count_reg[0]_0 );
  output [0:0]Q;
  output [0:0]AR;
  output Ext_NM_BRK;
  output Debug_SYS_Rst;
  output Dbg_Rst_0;
  output [0:7]Dbg_Reg_En_0;
  output \Use_BSCAN.command_reg[6]_0 ;
  output mb_data_overrun1__0;
  output Dbg_Shift_0;
  output tdo;
  output [0:0]\Use_Serial_Unified_Completion.sample_1_reg[15]_0 ;
  output [0:0]\Use_Serial_Unified_Completion.count_reg[5]_0 ;
  input CLK;
  input \Using_FPGA.Native ;
  input sel_n_reg_0;
  input Dbg_Shift_0_0;
  input [3:0]\command_1_reg[7]_0 ;
  input SEL;
  input sel_n_reg_1;
  input Scan_Reset;
  input Scan_Reset_Sel;
  input Scan_En;
  input Dbg_TDO_0;
  input \Use_Serial_Unified_Completion.mb_instr_overrun_reg_0 ;
  input Ext_JTAG_TDI;
  input [0:0]E;
  input [0:0]D;
  input [0:0]\Use_Serial_Unified_Completion.count_reg[5]_1 ;
  input [0:0]\Use_Serial_Unified_Completion.count_reg[5]_2 ;
  input [0:0]\shift_Count_reg[0]_0 ;

  wire A1;
  wire A2;
  wire A3;
  wire [0:0]\^AR ;
  wire CE;
  wire CLK;
  wire [0:0]D;
  wire D_1;
  wire [0:7]Dbg_Reg_En_0;
  wire Dbg_Rst_0;
  wire Dbg_Shift_0;
  wire Dbg_Shift_0_0;
  wire Dbg_Shift_31_INST_0_i_1_n_0;
  wire Dbg_Shift_31_INST_0_i_3_n_0;
  wire Dbg_Shift_31_INST_0_i_4_n_0;
  wire Dbg_TDO_0;
  wire Debug_SYS_Rst;
  wire [0:0]E;
  wire Ext_JTAG_TDI;
  wire Ext_NM_BRK_i_i_4_n_0;
  wire ID_TDO_2;
  wire [0:0]Q;
  wire SEL;
  wire \Use_BSCAN.FDC_I_n_13 ;
  wire \Use_BSCAN.FDC_I_n_26 ;
  wire \Use_BSCAN.FDC_I_n_27 ;
  wire \Use_BSCAN.FDC_I_n_28 ;
  wire \Use_BSCAN.FDC_I_n_30 ;
  wire \Use_BSCAN.FDC_I_n_31 ;
  wire \Use_BSCAN.FDC_I_n_32 ;
  wire \Use_BSCAN.FDC_I_n_33 ;
  wire \Use_BSCAN.FDC_I_n_34 ;
  wire \Use_BSCAN.FDC_I_n_35 ;
  wire \Use_BSCAN.FDC_I_n_37 ;
  wire \Use_BSCAN.FDC_I_n_9 ;
  wire \Use_BSCAN.command[0]_i_1_n_0 ;
  wire \Use_BSCAN.command_reg[6]_0 ;
  wire \Use_E2.BSCANE2_I_i_10_n_0 ;
  wire \Use_E2.BSCANE2_I_i_11_n_0 ;
  wire \Use_E2.BSCANE2_I_i_3_n_0 ;
  wire \Use_E2.BSCANE2_I_i_6_n_0 ;
  wire \Use_E2.BSCANE2_I_i_7_n_0 ;
  wire \Use_ID_SRL16E.SRL16E_ID_1_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_block_i_3_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_block_i_4_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_block_reg_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_status[3]_i_2_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_status[4]_i_2_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_status[5]_i_2_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_status[7]_i_2_n_0 ;
  wire \Use_Serial_Unified_Completion.completion_status[9]_i_4_n_0 ;
  wire \Use_Serial_Unified_Completion.count[0]__0_i_4_n_0 ;
  wire \Use_Serial_Unified_Completion.count[0]_i_1_n_0 ;
  wire \Use_Serial_Unified_Completion.count[1]_i_1_n_0 ;
  wire [0:4]\Use_Serial_Unified_Completion.count_reg ;
  wire [0:0]\Use_Serial_Unified_Completion.count_reg[5]_0 ;
  wire [0:0]\Use_Serial_Unified_Completion.count_reg[5]_1 ;
  wire [0:0]\Use_Serial_Unified_Completion.count_reg[5]_2 ;
  wire \Use_Serial_Unified_Completion.count_reg_n_0_[0] ;
  wire \Use_Serial_Unified_Completion.count_reg_n_0_[1] ;
  wire \Use_Serial_Unified_Completion.mb_data_overrun_i_2_n_0 ;
  wire \Use_Serial_Unified_Completion.mb_data_overrun_i_3_n_0 ;
  wire \Use_Serial_Unified_Completion.mb_data_overrun_reg_n_0 ;
  wire \Use_Serial_Unified_Completion.mb_instr_error_reg_n_0 ;
  wire \Use_Serial_Unified_Completion.mb_instr_overrun_reg_0 ;
  wire [0:0]\Use_Serial_Unified_Completion.sample_1_reg[15]_0 ;
  wire \Use_Serial_Unified_Completion.sample_1_reg_n_0_[10] ;
  wire \Use_Serial_Unified_Completion.sample_1_reg_n_0_[11] ;
  wire \Use_Serial_Unified_Completion.sample_1_reg_n_0_[12] ;
  wire \Use_Serial_Unified_Completion.sample_1_reg_n_0_[13] ;
  wire \Use_Serial_Unified_Completion.sample_1_reg_n_0_[14] ;
  wire \Using_FPGA.Native ;
  wire [0:7]command;
  wire [0:7]command_1;
  wire command_10;
  wire [3:0]\command_1_reg[7]_0 ;
  wire completion_block0__10;
  wire completion_ctrl;
  wire [15:0]completion_status;
  wire config_TDO_2;
  wire mb_data_overrun1__0;
  wire mb_instr_overrun;
  wire mb_instr_overrun137_out;
  wire [5:1]p_0_in;
  wire p_0_in_2;
  wire [4:1]p_0_in__0;
  wire [14:0]p_1_in;
  (* async_reg = "true" *) wire [15:13]sample;
  wire sample_1;
  wire sel_n;
  wire sel_n0;
  wire sel_n_reg_0;
  wire sel_n_reg_1;
  wire sel_with_scan_reset;
  wire [4:4]shift_Count_reg;
  wire [0:0]\shift_Count_reg[0]_0 ;
  wire sync;
  wire tdi_shifter0;
  wire \tdi_shifter_reg_n_0_[1] ;
  wire \tdi_shifter_reg_n_0_[2] ;
  wire \tdi_shifter_reg_n_0_[3] ;
  wire \tdi_shifter_reg_n_0_[4] ;
  wire \tdi_shifter_reg_n_0_[5] ;
  wire \tdi_shifter_reg_n_0_[6] ;
  wire \tdi_shifter_reg_n_0_[7] ;
  wire tdo;
  wire \NLW_Use_BSCAN.FDC_I_Ext_NM_BRK_UNCONNECTED ;
  wire \NLW_Use_BSCAN.FDC_I_tdi_shifter_reg[3]_UNCONNECTED ;

  LUT3 #(
    .INIT(8'h04)) 
    Dbg_Shift_31_INST_0_i_1
       (.I0(command[6]),
        .I1(command[5]),
        .I2(command[7]),
        .O(Dbg_Shift_31_INST_0_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    Dbg_Shift_31_INST_0_i_3
       (.I0(command[2]),
        .I1(command[4]),
        .O(Dbg_Shift_31_INST_0_i_3_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    Dbg_Shift_31_INST_0_i_4
       (.I0(command[0]),
        .I1(command[1]),
        .I2(command[3]),
        .O(Dbg_Shift_31_INST_0_i_4_n_0));
  FDCE #(
    .INIT(1'b0)) 
    Debug_Rst_i_reg
       (.C(CLK),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_34 ),
        .Q(Dbg_Rst_0));
  FDCE #(
    .INIT(1'b0)) 
    Debug_SYS_Rst_i_reg
       (.C(CLK),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_35 ),
        .Q(Debug_SYS_Rst));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    Ext_NM_BRK_i_i_4
       (.I0(command[7]),
        .I1(command[4]),
        .I2(command[5]),
        .I3(command[3]),
        .I4(command[1]),
        .I5(command[0]),
        .O(Ext_NM_BRK_i_i_4_n_0));
  (* OPT_MODIFIED = "PROPCONST" *) 
  GND GND
       (.G(\^AR ));
  system_mdm_1_0__MB_FDC_1 \Use_BSCAN.FDC_I 
       (.CE(CE),
        .CLK(CLK),
        .D(p_1_in[9:0]),
        .D_1(D_1),
        .Dbg_Reg_En_0(Dbg_Reg_En_0),
        .Dbg_Rst_0(Dbg_Rst_0),
        .Dbg_TDO_0(Dbg_TDO_0),
        .Dbg_TDO_0_0(\Use_BSCAN.FDC_I_n_32 ),
        .Debug_Rst_i_reg({p_0_in_2,\tdi_shifter_reg_n_0_[1] ,\tdi_shifter_reg_n_0_[2] ,\tdi_shifter_reg_n_0_[3] ,\tdi_shifter_reg_n_0_[4] ,\tdi_shifter_reg_n_0_[5] ,\tdi_shifter_reg_n_0_[6] ,\tdi_shifter_reg_n_0_[7] }),
        .Debug_SYS_Rst(Debug_SYS_Rst),
        .E(\Use_BSCAN.FDC_I_n_9 ),
        .Ext_NM_BRK(\NLW_Use_BSCAN.FDC_I_Ext_NM_BRK_UNCONNECTED ),
        .Ext_NM_BRK_i_reg(Ext_NM_BRK_i_i_4_n_0),
        .Q({command[0],command[1],command[2],command[3],command[4],command[5],command[6],command[7]}),
        .SEL(SEL),
        .\Use_BSCAN.PORT_Selector_reg[2] (command_10),
        .\Use_BSCAN.command_reg[5] (sample_1),
        .\Use_BSCAN.command_reg[6] (\Use_BSCAN.command_reg[6]_0 ),
        .\Use_Serial_Unified_Completion.completion_block_reg (\Use_Serial_Unified_Completion.completion_block_reg_n_0 ),
        .\Use_Serial_Unified_Completion.completion_status_reg[0] (Dbg_Shift_0_0),
        .\Use_Serial_Unified_Completion.completion_status_reg[3] (\Use_Serial_Unified_Completion.completion_status[3]_i_2_n_0 ),
        .\Use_Serial_Unified_Completion.completion_status_reg[4] (\Use_Serial_Unified_Completion.completion_status[4]_i_2_n_0 ),
        .\Use_Serial_Unified_Completion.completion_status_reg[5] (\Use_Serial_Unified_Completion.completion_status[5]_i_2_n_0 ),
        .\Use_Serial_Unified_Completion.completion_status_reg[6] (\Use_Serial_Unified_Completion.completion_status[7]_i_2_n_0 ),
        .\Use_Serial_Unified_Completion.completion_status_reg[8] (\Use_Serial_Unified_Completion.completion_status[9]_i_4_n_0 ),
        .\Use_Serial_Unified_Completion.completion_status_reg[9] (completion_status[10:0]),
        .\Use_Serial_Unified_Completion.count_reg[1] (\Use_BSCAN.FDC_I_n_30 ),
        .\Use_Serial_Unified_Completion.count_reg[1]_0 (\Use_BSCAN.FDC_I_n_31 ),
        .\Use_Serial_Unified_Completion.mb_data_overrun_reg (sel_n_reg_0),
        .\Use_Serial_Unified_Completion.mb_data_overrun_reg_0 (Dbg_Shift_31_INST_0_i_3_n_0),
        .\Use_Serial_Unified_Completion.mb_data_overrun_reg_1 (Dbg_Shift_31_INST_0_i_4_n_0),
        .\Use_Serial_Unified_Completion.mb_data_overrun_reg_2 (\Use_Serial_Unified_Completion.mb_data_overrun_i_2_n_0 ),
        .\Use_Serial_Unified_Completion.mb_instr_error_reg (Dbg_Shift_31_INST_0_i_1_n_0),
        .\Use_Serial_Unified_Completion.mb_instr_error_reg_0 (\Use_Serial_Unified_Completion.count_reg_n_0_[0] ),
        .\Use_Serial_Unified_Completion.mb_instr_overrun_reg (\Use_Serial_Unified_Completion.mb_instr_overrun_reg_0 ),
        .\Use_Serial_Unified_Completion.mb_instr_overrun_reg_0 (\Use_Serial_Unified_Completion.count_reg_n_0_[1] ),
        .\Use_Serial_Unified_Completion.sample_reg[15] ({\Use_BSCAN.FDC_I_n_26 ,\Use_BSCAN.FDC_I_n_27 ,\Use_BSCAN.FDC_I_n_28 }),
        .\Use_Serial_Unified_Completion.sample_reg[15]_0 ({sample,\Use_Serial_Unified_Completion.mb_data_overrun_reg_n_0 ,\Use_Serial_Unified_Completion.mb_instr_error_reg_n_0 ,mb_instr_overrun}),
        .\Using_FPGA.Native_0 (\Use_BSCAN.FDC_I_n_13 ),
        .\command_1_reg[7] (\command_1_reg[7]_0 ),
        .completion_block0__10(completion_block0__10),
        .completion_ctrl(completion_ctrl),
        .\completion_ctrl_reg[0] (\Use_BSCAN.FDC_I_n_33 ),
        .mb_data_overrun1__0(mb_data_overrun1__0),
        .mb_instr_overrun137_out(mb_instr_overrun137_out),
        .sel_n(sel_n),
        .sync(sync),
        .\tdi_shifter_reg[0] (\Use_BSCAN.FDC_I_n_34 ),
        .\tdi_shifter_reg[0]_0 (\Use_BSCAN.FDC_I_n_37 ),
        .\tdi_shifter_reg[1] (\Use_BSCAN.FDC_I_n_35 ),
        .\tdi_shifter_reg[3] (\NLW_Use_BSCAN.FDC_I_tdi_shifter_reg[3]_UNCONNECTED ));
  system_mdm_1_0__MB_FDRE_1 \Use_BSCAN.SYNC_FDRE 
       (.CE(CE),
        .D_1(D_1),
        .Dbg_Shift_0(Dbg_Shift_0),
        .Dbg_Shift_0_0(Dbg_Shift_31_INST_0_i_1_n_0),
        .Dbg_Shift_0_1(\Use_BSCAN.FDC_I_n_13 ),
        .Dbg_Shift_0_2(Dbg_Shift_31_INST_0_i_3_n_0),
        .Dbg_Shift_0_3(Dbg_Shift_31_INST_0_i_4_n_0),
        .Dbg_Shift_0_4(Dbg_Shift_0_0),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .sync(sync));
  LUT5 #(
    .INIT(32'h00000008)) 
    \Use_BSCAN.command[0]_i_1 
       (.I0(SEL),
        .I1(\command_1_reg[7]_0 [0]),
        .I2(\command_1_reg[7]_0 [1]),
        .I3(\command_1_reg[7]_0 [3]),
        .I4(\command_1_reg[7]_0 [2]),
        .O(\Use_BSCAN.command[0]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[0] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(\^AR ),
        .D(command_1[0]),
        .Q(command[0]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[1] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(\^AR ),
        .D(command_1[1]),
        .Q(command[1]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[2] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(\^AR ),
        .D(command_1[2]),
        .Q(command[2]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[3] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(\^AR ),
        .D(command_1[3]),
        .Q(command[3]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[4] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(\^AR ),
        .D(command_1[4]),
        .Q(command[4]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[5] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(\^AR ),
        .D(command_1[5]),
        .Q(command[5]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[6] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(\^AR ),
        .D(command_1[6]),
        .Q(command[6]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.command_reg[7] 
       (.C(CLK),
        .CE(\Use_BSCAN.command[0]_i_1_n_0 ),
        .CLR(\^AR ),
        .D(command_1[7]),
        .Q(command[7]));
  system_mdm_1_0__MB_SRL16E \Use_Config_SRL16E.SRL16E_1 
       (.Dbg_TDO_0(Dbg_TDO_0),
        .Q({shift_Count_reg,A3,A2,A1,Q}),
        .\Use_E2.BSCANE2_I_i_1_0 (\Use_E2.BSCANE2_I_i_7_n_0 ),
        .\Use_E2.BSCANE2_I_i_1_1 ({command[4],command[5],command[7]}),
        .\Use_E2.BSCANE2_I_i_4_0 (completion_status[0]),
        .\Use_E2.BSCANE2_I_i_8_0 (\Using_FPGA.Native ),
        .config_TDO_2(config_TDO_2),
        .sel_n_reg(sel_n_reg_1),
        .sel_n_reg_0(\command_1_reg[7]_0 [0]),
        .sel_n_reg_1(\Use_E2.BSCANE2_I_i_3_n_0 ),
        .sel_n_reg_2(\Use_ID_SRL16E.SRL16E_ID_1_n_0 ),
        .sel_n_reg_3(\Use_E2.BSCANE2_I_i_6_n_0 ),
        .tdo(tdo));
  system_mdm_1_0__MB_SRL16E__parameterized1 \Use_Config_SRL16E.SRL16E_2 
       (.Q({A3,A2,A1,Q}),
        .\Use_E2.BSCANE2_I_i_8 (\Using_FPGA.Native ),
        .config_TDO_2(config_TDO_2));
  LUT6 #(
    .INIT(64'hFEFCFEFFFFFFFFFF)) 
    \Use_E2.BSCANE2_I_i_10 
       (.I0(command[1]),
        .I1(command[3]),
        .I2(command[5]),
        .I3(command[2]),
        .I4(command[4]),
        .I5(command[6]),
        .O(\Use_E2.BSCANE2_I_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h0001000010000001)) 
    \Use_E2.BSCANE2_I_i_11 
       (.I0(command[1]),
        .I1(command[3]),
        .I2(command[2]),
        .I3(command[6]),
        .I4(command[4]),
        .I5(command[5]),
        .O(\Use_E2.BSCANE2_I_i_11_n_0 ));
  LUT3 #(
    .INIT(8'hF8)) 
    \Use_E2.BSCANE2_I_i_3 
       (.I0(command[0]),
        .I1(Dbg_TDO_0),
        .I2(\command_1_reg[7]_0 [1]),
        .O(\Use_E2.BSCANE2_I_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h00F8)) 
    \Use_E2.BSCANE2_I_i_6 
       (.I0(\Use_E2.BSCANE2_I_i_10_n_0 ),
        .I1(Dbg_TDO_0),
        .I2(\Use_E2.BSCANE2_I_i_11_n_0 ),
        .I3(command[0]),
        .O(\Use_E2.BSCANE2_I_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h88BC88FFAABEAABE)) 
    \Use_E2.BSCANE2_I_i_7 
       (.I0(command[3]),
        .I1(command[4]),
        .I2(command[5]),
        .I3(command[6]),
        .I4(command[1]),
        .I5(command[2]),
        .O(\Use_E2.BSCANE2_I_i_7_n_0 ));
  system_mdm_1_0__MB_SRL16E__parameterized3 \Use_ID_SRL16E.SRL16E_ID_1 
       (.ID_TDO_2(ID_TDO_2),
        .Q({shift_Count_reg,A3,A2,A1,Q}),
        .\Use_BSCAN.command_reg[5] (\Use_ID_SRL16E.SRL16E_ID_1_n_0 ),
        .\Use_E2.BSCANE2_I_i_1 ({command[1],command[2],command[4],command[5],command[6],command[7]}),
        .\Use_E2.BSCANE2_I_i_9_0 (\Using_FPGA.Native ));
  system_mdm_1_0__MB_SRL16E__parameterized5 \Use_ID_SRL16E.SRL16E_ID_2 
       (.ID_TDO_2(ID_TDO_2),
        .Q({A3,A2,A1,Q}),
        .\Use_E2.BSCANE2_I_i_9 (\Using_FPGA.Native ));
  LUT6 #(
    .INIT(64'hFFFFFFFFBAFFBABA)) 
    \Use_Serial_Unified_Completion.completion_block_i_2 
       (.I0(\Use_Serial_Unified_Completion.completion_block_i_3_n_0 ),
        .I1(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[13] ),
        .I2(sample[13]),
        .I3(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[14] ),
        .I4(sample[14]),
        .I5(\Use_Serial_Unified_Completion.completion_block_i_4_n_0 ),
        .O(completion_block0__10));
  LUT4 #(
    .INIT(16'h4F44)) 
    \Use_Serial_Unified_Completion.completion_block_i_3 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg[15]_0 ),
        .I1(sample[15]),
        .I2(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[10] ),
        .I3(mb_instr_overrun),
        .O(\Use_Serial_Unified_Completion.completion_block_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h4F44)) 
    \Use_Serial_Unified_Completion.completion_block_i_4 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[11] ),
        .I1(\Use_Serial_Unified_Completion.mb_instr_error_reg_n_0 ),
        .I2(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[12] ),
        .I3(\Use_Serial_Unified_Completion.mb_data_overrun_reg_n_0 ),
        .O(\Use_Serial_Unified_Completion.completion_block_i_4_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_block_reg 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_33 ),
        .Q(\Use_Serial_Unified_Completion.completion_block_reg_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \Use_Serial_Unified_Completion.completion_status[10]_i_1 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[10] ),
        .I1(sel_n_reg_0),
        .I2(completion_status[11]),
        .O(p_1_in[10]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Use_Serial_Unified_Completion.completion_status[11]_i_1 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[11] ),
        .I1(sel_n_reg_0),
        .I2(completion_status[12]),
        .O(p_1_in[11]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Use_Serial_Unified_Completion.completion_status[12]_i_1 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[12] ),
        .I1(sel_n_reg_0),
        .I2(completion_status[13]),
        .O(p_1_in[12]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Use_Serial_Unified_Completion.completion_status[13]_i_1 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[13] ),
        .I1(sel_n_reg_0),
        .I2(completion_status[14]),
        .O(p_1_in[13]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Use_Serial_Unified_Completion.completion_status[14]_i_1 
       (.I0(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[14] ),
        .I1(sel_n_reg_0),
        .I2(completion_status[15]),
        .O(p_1_in[14]));
  LUT3 #(
    .INIT(8'h80)) 
    \Use_Serial_Unified_Completion.completion_status[3]_i_2 
       (.I0(completion_status[2]),
        .I1(completion_status[0]),
        .I2(completion_status[1]),
        .O(\Use_Serial_Unified_Completion.completion_status[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \Use_Serial_Unified_Completion.completion_status[4]_i_2 
       (.I0(completion_status[3]),
        .I1(completion_status[1]),
        .I2(completion_status[0]),
        .I3(completion_status[2]),
        .O(\Use_Serial_Unified_Completion.completion_status[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \Use_Serial_Unified_Completion.completion_status[5]_i_2 
       (.I0(completion_status[4]),
        .I1(completion_status[2]),
        .I2(completion_status[0]),
        .I3(completion_status[1]),
        .I4(completion_status[3]),
        .O(\Use_Serial_Unified_Completion.completion_status[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \Use_Serial_Unified_Completion.completion_status[7]_i_2 
       (.I0(completion_status[5]),
        .I1(completion_status[3]),
        .I2(completion_status[1]),
        .I3(completion_status[0]),
        .I4(completion_status[2]),
        .I5(completion_status[4]),
        .O(\Use_Serial_Unified_Completion.completion_status[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \Use_Serial_Unified_Completion.completion_status[9]_i_4 
       (.I0(completion_status[7]),
        .I1(\Use_Serial_Unified_Completion.completion_status[7]_i_2_n_0 ),
        .I2(completion_status[6]),
        .O(\Use_Serial_Unified_Completion.completion_status[9]_i_4_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[0] 
       (.C(\Using_FPGA.Native ),
        .CE(\Use_BSCAN.FDC_I_n_9 ),
        .CLR(\^AR ),
        .D(p_1_in[0]),
        .Q(completion_status[0]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[10] 
       (.C(\Using_FPGA.Native ),
        .CE(E),
        .CLR(\^AR ),
        .D(p_1_in[10]),
        .Q(completion_status[10]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[11] 
       (.C(\Using_FPGA.Native ),
        .CE(E),
        .CLR(\^AR ),
        .D(p_1_in[11]),
        .Q(completion_status[11]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[12] 
       (.C(\Using_FPGA.Native ),
        .CE(E),
        .CLR(\^AR ),
        .D(p_1_in[12]),
        .Q(completion_status[12]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[13] 
       (.C(\Using_FPGA.Native ),
        .CE(E),
        .CLR(\^AR ),
        .D(p_1_in[13]),
        .Q(completion_status[13]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[14] 
       (.C(\Using_FPGA.Native ),
        .CE(E),
        .CLR(\^AR ),
        .D(p_1_in[14]),
        .Q(completion_status[14]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[15] 
       (.C(\Using_FPGA.Native ),
        .CE(E),
        .CLR(\^AR ),
        .D(D),
        .Q(completion_status[15]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[1] 
       (.C(\Using_FPGA.Native ),
        .CE(\Use_BSCAN.FDC_I_n_9 ),
        .CLR(\^AR ),
        .D(p_1_in[1]),
        .Q(completion_status[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[2] 
       (.C(\Using_FPGA.Native ),
        .CE(\Use_BSCAN.FDC_I_n_9 ),
        .CLR(\^AR ),
        .D(p_1_in[2]),
        .Q(completion_status[2]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[3] 
       (.C(\Using_FPGA.Native ),
        .CE(\Use_BSCAN.FDC_I_n_9 ),
        .CLR(\^AR ),
        .D(p_1_in[3]),
        .Q(completion_status[3]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[4] 
       (.C(\Using_FPGA.Native ),
        .CE(\Use_BSCAN.FDC_I_n_9 ),
        .CLR(\^AR ),
        .D(p_1_in[4]),
        .Q(completion_status[4]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[5] 
       (.C(\Using_FPGA.Native ),
        .CE(\Use_BSCAN.FDC_I_n_9 ),
        .CLR(\^AR ),
        .D(p_1_in[5]),
        .Q(completion_status[5]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[6] 
       (.C(\Using_FPGA.Native ),
        .CE(\Use_BSCAN.FDC_I_n_9 ),
        .CLR(\^AR ),
        .D(p_1_in[6]),
        .Q(completion_status[6]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[7] 
       (.C(\Using_FPGA.Native ),
        .CE(\Use_BSCAN.FDC_I_n_9 ),
        .CLR(\^AR ),
        .D(p_1_in[7]),
        .Q(completion_status[7]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[8] 
       (.C(\Using_FPGA.Native ),
        .CE(\Use_BSCAN.FDC_I_n_9 ),
        .CLR(\^AR ),
        .D(p_1_in[8]),
        .Q(completion_status[8]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.completion_status_reg[9] 
       (.C(\Using_FPGA.Native ),
        .CE(\Use_BSCAN.FDC_I_n_9 ),
        .CLR(\^AR ),
        .D(p_1_in[9]),
        .Q(completion_status[9]));
  LUT4 #(
    .INIT(16'h0078)) 
    \Use_Serial_Unified_Completion.count[0]__0_i_2 
       (.I0(\Use_Serial_Unified_Completion.count_reg [1]),
        .I1(\Use_Serial_Unified_Completion.count[0]__0_i_4_n_0 ),
        .I2(\Use_Serial_Unified_Completion.count_reg [0]),
        .I3(sel_n_reg_0),
        .O(p_0_in[5]));
  (* \PinAttr:I1:HOLD_DETOUR  = "196" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \Use_Serial_Unified_Completion.count[0]__0_i_4 
       (.I0(\Use_Serial_Unified_Completion.count_reg [2]),
        .I1(\Use_Serial_Unified_Completion.count_reg [4]),
        .I2(\Use_Serial_Unified_Completion.count_reg[5]_0 ),
        .I3(\Use_Serial_Unified_Completion.count_reg [3]),
        .O(\Use_Serial_Unified_Completion.count[0]__0_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF80FF00FF00)) 
    \Use_Serial_Unified_Completion.count[0]_i_1 
       (.I0(\Use_Serial_Unified_Completion.count_reg_n_0_[1] ),
        .I1(Dbg_Shift_0_0),
        .I2(sync),
        .I3(\Use_Serial_Unified_Completion.count_reg_n_0_[0] ),
        .I4(sel_n_reg_0),
        .I5(mb_instr_overrun137_out),
        .O(\Use_Serial_Unified_Completion.count[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000007FFF8000)) 
    \Use_Serial_Unified_Completion.count[1]__0_i_1 
       (.I0(\Use_Serial_Unified_Completion.count_reg [2]),
        .I1(\Use_Serial_Unified_Completion.count_reg [4]),
        .I2(\Use_Serial_Unified_Completion.count_reg[5]_0 ),
        .I3(\Use_Serial_Unified_Completion.count_reg [3]),
        .I4(\Use_Serial_Unified_Completion.count_reg [1]),
        .I5(sel_n_reg_0),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h00F7FFFF00080000)) 
    \Use_Serial_Unified_Completion.count[1]_i_1 
       (.I0(Dbg_Shift_0_0),
        .I1(sync),
        .I2(\Use_Serial_Unified_Completion.count_reg_n_0_[0] ),
        .I3(sel_n_reg_0),
        .I4(mb_instr_overrun137_out),
        .I5(\Use_Serial_Unified_Completion.count_reg_n_0_[1] ),
        .O(\Use_Serial_Unified_Completion.count[1]_i_1_n_0 ));
  (* \PinAttr:I2:HOLD_DETOUR  = "196" *) 
  LUT5 #(
    .INIT(32'h00007F80)) 
    \Use_Serial_Unified_Completion.count[2]_i_1 
       (.I0(\Use_Serial_Unified_Completion.count_reg [3]),
        .I1(\Use_Serial_Unified_Completion.count_reg[5]_0 ),
        .I2(\Use_Serial_Unified_Completion.count_reg [4]),
        .I3(\Use_Serial_Unified_Completion.count_reg [2]),
        .I4(sel_n_reg_0),
        .O(p_0_in[3]));
  LUT4 #(
    .INIT(16'h0078)) 
    \Use_Serial_Unified_Completion.count[3]_i_1 
       (.I0(\Use_Serial_Unified_Completion.count_reg [4]),
        .I1(\Use_Serial_Unified_Completion.count_reg[5]_0 ),
        .I2(\Use_Serial_Unified_Completion.count_reg [3]),
        .I3(sel_n_reg_0),
        .O(p_0_in[2]));
  LUT3 #(
    .INIT(8'h06)) 
    \Use_Serial_Unified_Completion.count[4]_i_1 
       (.I0(\Use_Serial_Unified_Completion.count_reg[5]_0 ),
        .I1(\Use_Serial_Unified_Completion.count_reg [4]),
        .I2(sel_n_reg_0),
        .O(p_0_in[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[0] 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\Use_Serial_Unified_Completion.count[0]_i_1_n_0 ),
        .Q(\Use_Serial_Unified_Completion.count_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[0]__0 
       (.C(\Using_FPGA.Native ),
        .CE(\Use_Serial_Unified_Completion.count_reg[5]_1 ),
        .CLR(\^AR ),
        .D(p_0_in[5]),
        .Q(\Use_Serial_Unified_Completion.count_reg [0]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[1] 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\Use_Serial_Unified_Completion.count[1]_i_1_n_0 ),
        .Q(\Use_Serial_Unified_Completion.count_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[1]__0 
       (.C(\Using_FPGA.Native ),
        .CE(\Use_Serial_Unified_Completion.count_reg[5]_1 ),
        .CLR(\^AR ),
        .D(p_0_in[4]),
        .Q(\Use_Serial_Unified_Completion.count_reg [1]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[2] 
       (.C(\Using_FPGA.Native ),
        .CE(\Use_Serial_Unified_Completion.count_reg[5]_1 ),
        .CLR(\^AR ),
        .D(p_0_in[3]),
        .Q(\Use_Serial_Unified_Completion.count_reg [2]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[3] 
       (.C(\Using_FPGA.Native ),
        .CE(\Use_Serial_Unified_Completion.count_reg[5]_1 ),
        .CLR(\^AR ),
        .D(p_0_in[2]),
        .Q(\Use_Serial_Unified_Completion.count_reg [3]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[4] 
       (.C(\Using_FPGA.Native ),
        .CE(\Use_Serial_Unified_Completion.count_reg[5]_1 ),
        .CLR(\^AR ),
        .D(p_0_in[1]),
        .Q(\Use_Serial_Unified_Completion.count_reg [4]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.count_reg[5] 
       (.C(\Using_FPGA.Native ),
        .CE(\Use_Serial_Unified_Completion.count_reg[5]_1 ),
        .CLR(\^AR ),
        .D(\Use_Serial_Unified_Completion.count_reg[5]_2 ),
        .Q(\Use_Serial_Unified_Completion.count_reg[5]_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \Use_Serial_Unified_Completion.mb_data_overrun_i_2 
       (.I0(\Use_Serial_Unified_Completion.mb_data_overrun_i_3_n_0 ),
        .I1(\Use_Serial_Unified_Completion.count_reg[5]_0 ),
        .I2(\Use_Serial_Unified_Completion.count_reg [4]),
        .I3(\Use_Serial_Unified_Completion.count_reg [3]),
        .O(\Use_Serial_Unified_Completion.mb_data_overrun_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h0008)) 
    \Use_Serial_Unified_Completion.mb_data_overrun_i_3 
       (.I0(Dbg_Shift_0_0),
        .I1(\Use_Serial_Unified_Completion.count_reg [0]),
        .I2(\Use_Serial_Unified_Completion.count_reg [1]),
        .I3(\Use_Serial_Unified_Completion.count_reg [2]),
        .O(\Use_Serial_Unified_Completion.mb_data_overrun_i_3_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.mb_data_overrun_reg 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_32 ),
        .Q(\Use_Serial_Unified_Completion.mb_data_overrun_reg_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.mb_instr_error_reg 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_31 ),
        .Q(\Use_Serial_Unified_Completion.mb_instr_error_reg_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.mb_instr_overrun_reg 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_30 ),
        .Q(mb_instr_overrun));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.sample_1_reg[10] 
       (.C(\Using_FPGA.Native ),
        .CE(sample_1),
        .CLR(\^AR ),
        .D(mb_instr_overrun),
        .Q(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[10] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.sample_1_reg[11] 
       (.C(\Using_FPGA.Native ),
        .CE(sample_1),
        .CLR(\^AR ),
        .D(\Use_Serial_Unified_Completion.mb_instr_error_reg_n_0 ),
        .Q(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[11] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.sample_1_reg[12] 
       (.C(\Using_FPGA.Native ),
        .CE(sample_1),
        .CLR(\^AR ),
        .D(\Use_Serial_Unified_Completion.mb_data_overrun_reg_n_0 ),
        .Q(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[12] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.sample_1_reg[13] 
       (.C(\Using_FPGA.Native ),
        .CE(sample_1),
        .CLR(\^AR ),
        .D(sample[13]),
        .Q(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[13] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.sample_1_reg[14] 
       (.C(\Using_FPGA.Native ),
        .CE(sample_1),
        .CLR(\^AR ),
        .D(sample[14]),
        .Q(\Use_Serial_Unified_Completion.sample_1_reg_n_0_[14] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.sample_1_reg[15] 
       (.C(\Using_FPGA.Native ),
        .CE(sample_1),
        .CLR(\^AR ),
        .D(sample[15]),
        .Q(\Use_Serial_Unified_Completion.sample_1_reg[15]_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.sample_reg[13] 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_28 ),
        .Q(sample[13]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.sample_reg[14] 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_27 ),
        .Q(sample[14]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Use_Serial_Unified_Completion.sample_reg[15] 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_26 ),
        .Q(sample[15]));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[0] 
       (.C(CLK),
        .CE(command_10),
        .CLR(\^AR ),
        .D(p_0_in_2),
        .Q(command_1[0]));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[1] 
       (.C(CLK),
        .CE(command_10),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[1] ),
        .Q(command_1[1]));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[2] 
       (.C(CLK),
        .CE(command_10),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[2] ),
        .Q(command_1[2]));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[3] 
       (.C(CLK),
        .CE(command_10),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[3] ),
        .Q(command_1[3]));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[4] 
       (.C(CLK),
        .CE(command_10),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[4] ),
        .Q(command_1[4]));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[5] 
       (.C(CLK),
        .CE(command_10),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[5] ),
        .Q(command_1[5]));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[6] 
       (.C(CLK),
        .CE(command_10),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[6] ),
        .Q(command_1[6]));
  FDCE #(
    .INIT(1'b0)) 
    \command_1_reg[7] 
       (.C(CLK),
        .CE(command_10),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[7] ),
        .Q(command_1[7]));
  FDCE #(
    .INIT(1'b0)) 
    \completion_ctrl_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\Use_BSCAN.FDC_I_n_37 ),
        .Q(completion_ctrl));
  LUT5 #(
    .INIT(32'hFEFFFFFF)) 
    sel_n_i_1
       (.I0(\command_1_reg[7]_0 [2]),
        .I1(\command_1_reg[7]_0 [3]),
        .I2(\command_1_reg[7]_0 [1]),
        .I3(\command_1_reg[7]_0 [0]),
        .I4(SEL),
        .O(sel_n0));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT2 #(
    .INIT(4'h4)) 
    sel_n_i_2
       (.I0(\Use_BSCAN.command[0]_i_1_n_0 ),
        .I1(CLK),
        .O(sel_with_scan_reset));
  FDPE #(
    .INIT(1'b1)) 
    sel_n_reg
       (.C(\Using_FPGA.Native ),
        .CE(sel_n_reg_0),
        .D(sel_n0),
        .PRE(sel_with_scan_reset),
        .Q(sel_n));
  LUT3 #(
    .INIT(8'h48)) 
    \shift_Count[1]_i_1 
       (.I0(Q),
        .I1(Dbg_Shift_0_0),
        .I2(A1),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT4 #(
    .INIT(16'h7080)) 
    \shift_Count[2]_i_1 
       (.I0(A1),
        .I1(Q),
        .I2(Dbg_Shift_0_0),
        .I3(A2),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT5 #(
    .INIT(32'h7F008000)) 
    \shift_Count[3]_i_1 
       (.I0(A2),
        .I1(Q),
        .I2(A1),
        .I3(Dbg_Shift_0_0),
        .I4(A3),
        .O(p_0_in__0[3]));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \shift_Count[4]_i_1 
       (.I0(A3),
        .I1(A1),
        .I2(Q),
        .I3(A2),
        .I4(Dbg_Shift_0_0),
        .I5(shift_Count_reg),
        .O(p_0_in__0[4]));
  FDCE #(
    .INIT(1'b0)) 
    \shift_Count_reg[0] 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(\shift_Count_reg[0]_0 ),
        .Q(Q));
  FDCE #(
    .INIT(1'b0)) 
    \shift_Count_reg[1] 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(p_0_in__0[1]),
        .Q(A1));
  FDCE #(
    .INIT(1'b0)) 
    \shift_Count_reg[2] 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(p_0_in__0[2]),
        .Q(A2));
  FDCE #(
    .INIT(1'b0)) 
    \shift_Count_reg[3] 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(p_0_in__0[3]),
        .Q(A3));
  FDCE #(
    .INIT(1'b0)) 
    \shift_Count_reg[4] 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(\^AR ),
        .D(p_0_in__0[4]),
        .Q(shift_Count_reg));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    \tdi_shifter[0]_i_1 
       (.I0(\command_1_reg[7]_0 [2]),
        .I1(\command_1_reg[7]_0 [3]),
        .I2(\command_1_reg[7]_0 [1]),
        .I3(\command_1_reg[7]_0 [0]),
        .I4(SEL),
        .I5(Dbg_Shift_0_0),
        .O(tdi_shifter0));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[0] 
       (.C(\Using_FPGA.Native ),
        .CE(tdi_shifter0),
        .CLR(\^AR ),
        .D(Ext_JTAG_TDI),
        .Q(p_0_in_2));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[1] 
       (.C(\Using_FPGA.Native ),
        .CE(tdi_shifter0),
        .CLR(\^AR ),
        .D(p_0_in_2),
        .Q(\tdi_shifter_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[2] 
       (.C(\Using_FPGA.Native ),
        .CE(tdi_shifter0),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[1] ),
        .Q(\tdi_shifter_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[3] 
       (.C(\Using_FPGA.Native ),
        .CE(tdi_shifter0),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[2] ),
        .Q(\tdi_shifter_reg_n_0_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[4] 
       (.C(\Using_FPGA.Native ),
        .CE(tdi_shifter0),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[3] ),
        .Q(\tdi_shifter_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[5] 
       (.C(\Using_FPGA.Native ),
        .CE(tdi_shifter0),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[4] ),
        .Q(\tdi_shifter_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[6] 
       (.C(\Using_FPGA.Native ),
        .CE(tdi_shifter0),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[5] ),
        .Q(\tdi_shifter_reg_n_0_[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \tdi_shifter_reg[7] 
       (.C(\Using_FPGA.Native ),
        .CE(tdi_shifter0),
        .CLR(\^AR ),
        .D(\tdi_shifter_reg_n_0_[6] ),
        .Q(\tdi_shifter_reg_n_0_[7] ));
endmodule

(* ORIG_REF_NAME = "MB_BSCANE2" *) 
module system_mdm_1_0__MB_BSCANE2
   (\Use_BSCAN.PORT_Selector_reg[0] ,
    DRCK,
    Ext_JTAG_RESET,
    SEL,
    \Use_BSCAN.PORT_Selector_reg[0]_0 ,
    I0,
    Ext_JTAG_UPDATE,
    \Use_BSCAN.command_reg[5] ,
    E,
    \Use_Serial_Unified_Completion.count_reg[5] ,
    \shift_Count_reg[0] ,
    AR,
    shift_n_reset,
    Dbg_TDO_0_0,
    D,
    tdo,
    mb_data_overrun1__0,
    completion_status131_out,
    \Use_Serial_Unified_Completion.count_reg[5]_0 ,
    Q,
    Scan_Reset,
    Scan_Reset_Sel,
    Scan_En,
    Dbg_TDO_0,
    \Use_Serial_Unified_Completion.completion_status_reg[15] );
  output \Use_BSCAN.PORT_Selector_reg[0] ;
  output DRCK;
  output Ext_JTAG_RESET;
  output SEL;
  output \Use_BSCAN.PORT_Selector_reg[0]_0 ;
  output I0;
  output Ext_JTAG_UPDATE;
  output [0:0]\Use_BSCAN.command_reg[5] ;
  output [0:0]E;
  output [0:0]\Use_Serial_Unified_Completion.count_reg[5] ;
  output [0:0]\shift_Count_reg[0] ;
  output [0:0]AR;
  output shift_n_reset;
  output Dbg_TDO_0_0;
  output [0:0]D;
  input tdo;
  input mb_data_overrun1__0;
  input completion_status131_out;
  input [0:0]\Use_Serial_Unified_Completion.count_reg[5]_0 ;
  input [0:0]Q;
  input Scan_Reset;
  input Scan_Reset_Sel;
  input Scan_En;
  input Dbg_TDO_0;
  input [0:0]\Use_Serial_Unified_Completion.completion_status_reg[15] ;

  wire [0:0]AR;
  wire [0:0]D;
  wire DRCK;
  wire Dbg_TDO_0;
  wire Dbg_TDO_0_0;
  wire [0:0]E;
  wire \^Ext_JTAG_UPDATE ;
  wire Ext_JTAG_UPDATE_BUFG;
  wire I0;
  wire [0:0]Q;
  wire SEL;
  wire \Use_BSCAN.PORT_Selector_reg[0] ;
  wire \Use_BSCAN.PORT_Selector_reg[0]_0 ;
  wire [0:0]\Use_BSCAN.command_reg[5] ;
  wire [0:0]\Use_Serial_Unified_Completion.completion_status_reg[15] ;
  wire [0:0]\Use_Serial_Unified_Completion.count_reg[5] ;
  wire [0:0]\Use_Serial_Unified_Completion.count_reg[5]_0 ;
  wire completion_status131_out;
  wire mb_data_overrun1__0;
  wire [0:0]\shift_Count_reg[0] ;
  wire shift_n_reset;
  wire tdo;
  wire \NLW_Use_E2.BSCANE2_I_RESET_UNCONNECTED ;
  wire \NLW_Use_E2.BSCANE2_I_RUNTEST_UNCONNECTED ;
  wire \NLW_Use_E2.BSCANE2_I_TCK_UNCONNECTED ;
  wire \NLW_Use_E2.BSCANE2_I_TMS_UNCONNECTED ;

  assign Ext_JTAG_UPDATE = Ext_JTAG_UPDATE_BUFG;
  (* LOPT_BUFG_CLOCK *) 
  (* OPT_MODIFIED = "BUFG_OPT" *) 
  BUFG Ext_JTAG_UPDATE_BUFG_inst
       (.I(\^Ext_JTAG_UPDATE ),
        .O(Ext_JTAG_UPDATE_BUFG));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \Use_BSCAN.Config_Reg[30]_i_1 
       (.I0(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .O(shift_n_reset));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \Use_BSCAN.TDI_Shifter[3]_i_2 
       (.I0(SEL),
        .O(AR));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "SWEEP BUFG_OPT" *) 
  BSCANE2 #(
    .DISABLE_JTAG("FALSE"),
    .JTAG_CHAIN(2)) 
    \Use_E2.BSCANE2_I 
       (.CAPTURE(\Use_BSCAN.PORT_Selector_reg[0] ),
        .DRCK(DRCK),
        .RESET(\NLW_Use_E2.BSCANE2_I_RESET_UNCONNECTED ),
        .RUNTEST(\NLW_Use_E2.BSCANE2_I_RUNTEST_UNCONNECTED ),
        .SEL(SEL),
        .SHIFT(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .TCK(\NLW_Use_E2.BSCANE2_I_TCK_UNCONNECTED ),
        .TDI(I0),
        .TDO(tdo),
        .TMS(\NLW_Use_E2.BSCANE2_I_TMS_UNCONNECTED ),
        .UPDATE(\^Ext_JTAG_UPDATE ));
  LUT3 #(
    .INIT(8'hE0)) 
    \Use_Serial_Unified_Completion.completion_status[15]_i_1 
       (.I0(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I1(\Use_BSCAN.PORT_Selector_reg[0] ),
        .I2(completion_status131_out),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Use_Serial_Unified_Completion.completion_status[15]_i_2 
       (.I0(\Use_BSCAN.PORT_Selector_reg[0] ),
        .I1(\Use_Serial_Unified_Completion.completion_status_reg[15] ),
        .O(D));
  LUT3 #(
    .INIT(8'hE0)) 
    \Use_Serial_Unified_Completion.count[0]__0_i_1 
       (.I0(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I1(\Use_BSCAN.PORT_Selector_reg[0] ),
        .I2(mb_data_overrun1__0),
        .O(\Use_BSCAN.command_reg[5] ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \Use_Serial_Unified_Completion.count[5]_i_1 
       (.I0(\Use_BSCAN.PORT_Selector_reg[0] ),
        .I1(\Use_Serial_Unified_Completion.count_reg[5]_0 ),
        .O(\Use_Serial_Unified_Completion.count_reg[5] ));
  LUT2 #(
    .INIT(4'h2)) 
    \Use_Serial_Unified_Completion.mb_instr_overrun_i_2 
       (.I0(Dbg_TDO_0),
        .I1(\Use_BSCAN.PORT_Selector_reg[0] ),
        .O(Dbg_TDO_0_0));
  LUT2 #(
    .INIT(4'h2)) 
    \shift_Count[0]_i_1 
       (.I0(\Use_BSCAN.PORT_Selector_reg[0]_0 ),
        .I1(Q),
        .O(\shift_Count_reg[0] ));
endmodule

(* ORIG_REF_NAME = "MB_BUFG" *) 
module system_mdm_1_0__MB_BUFG
   (Dbg_Clk_0,
    DRCK);
  output Dbg_Clk_0;
  input DRCK;

  wire DRCK;
  wire Dbg_Clk_0;

  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFG \Using_FPGA.Native 
       (.I(DRCK),
        .O(Dbg_Clk_0));
endmodule

(* ORIG_REF_NAME = "MB_FDC_1" *) 
module system_mdm_1_0__MB_FDC_1
   (D_1,
    Dbg_Reg_En_0,
    E,
    \Use_BSCAN.command_reg[6] ,
    CE,
    mb_data_overrun1__0,
    \Using_FPGA.Native_0 ,
    mb_instr_overrun137_out,
    \Use_BSCAN.PORT_Selector_reg[2] ,
    D,
    \Use_Serial_Unified_Completion.sample_reg[15] ,
    \Use_BSCAN.command_reg[5] ,
    \Use_Serial_Unified_Completion.count_reg[1] ,
    \Use_Serial_Unified_Completion.count_reg[1]_0 ,
    Dbg_TDO_0_0,
    \completion_ctrl_reg[0] ,
    \tdi_shifter_reg[0] ,
    \tdi_shifter_reg[1] ,
    \tdi_shifter_reg[3] ,
    \tdi_shifter_reg[0]_0 ,
    CLK,
    sel_n,
    \Use_Serial_Unified_Completion.completion_block_reg ,
    Q,
    \Use_Serial_Unified_Completion.completion_status_reg[0] ,
    \Use_Serial_Unified_Completion.mb_data_overrun_reg ,
    Debug_Rst_i_reg,
    Ext_NM_BRK_i_reg,
    \Use_Serial_Unified_Completion.mb_data_overrun_reg_0 ,
    \Use_Serial_Unified_Completion.mb_data_overrun_reg_1 ,
    \Use_Serial_Unified_Completion.mb_instr_error_reg ,
    sync,
    \Use_Serial_Unified_Completion.mb_instr_error_reg_0 ,
    \command_1_reg[7] ,
    SEL,
    \Use_Serial_Unified_Completion.completion_status_reg[9] ,
    \Use_Serial_Unified_Completion.completion_status_reg[3] ,
    \Use_Serial_Unified_Completion.completion_status_reg[4] ,
    \Use_Serial_Unified_Completion.completion_status_reg[5] ,
    \Use_Serial_Unified_Completion.completion_status_reg[6] ,
    \Use_Serial_Unified_Completion.completion_status_reg[8] ,
    \Use_Serial_Unified_Completion.sample_reg[15]_0 ,
    \Use_Serial_Unified_Completion.mb_instr_overrun_reg ,
    \Use_Serial_Unified_Completion.mb_instr_overrun_reg_0 ,
    Dbg_TDO_0,
    \Use_Serial_Unified_Completion.mb_data_overrun_reg_2 ,
    completion_block0__10,
    completion_ctrl,
    Dbg_Rst_0,
    Debug_SYS_Rst,
    Ext_NM_BRK);
  output D_1;
  output [0:7]Dbg_Reg_En_0;
  output [0:0]E;
  output \Use_BSCAN.command_reg[6] ;
  output CE;
  output mb_data_overrun1__0;
  output \Using_FPGA.Native_0 ;
  output mb_instr_overrun137_out;
  output [0:0]\Use_BSCAN.PORT_Selector_reg[2] ;
  output [9:0]D;
  output [2:0]\Use_Serial_Unified_Completion.sample_reg[15] ;
  output [0:0]\Use_BSCAN.command_reg[5] ;
  output \Use_Serial_Unified_Completion.count_reg[1] ;
  output \Use_Serial_Unified_Completion.count_reg[1]_0 ;
  output Dbg_TDO_0_0;
  output \completion_ctrl_reg[0] ;
  output \tdi_shifter_reg[0] ;
  output \tdi_shifter_reg[1] ;
  output \tdi_shifter_reg[3] ;
  output \tdi_shifter_reg[0]_0 ;
  input CLK;
  input sel_n;
  input \Use_Serial_Unified_Completion.completion_block_reg ;
  input [7:0]Q;
  input \Use_Serial_Unified_Completion.completion_status_reg[0] ;
  input \Use_Serial_Unified_Completion.mb_data_overrun_reg ;
  input [7:0]Debug_Rst_i_reg;
  input Ext_NM_BRK_i_reg;
  input \Use_Serial_Unified_Completion.mb_data_overrun_reg_0 ;
  input \Use_Serial_Unified_Completion.mb_data_overrun_reg_1 ;
  input \Use_Serial_Unified_Completion.mb_instr_error_reg ;
  input sync;
  input \Use_Serial_Unified_Completion.mb_instr_error_reg_0 ;
  input [3:0]\command_1_reg[7] ;
  input SEL;
  input [10:0]\Use_Serial_Unified_Completion.completion_status_reg[9] ;
  input \Use_Serial_Unified_Completion.completion_status_reg[3] ;
  input \Use_Serial_Unified_Completion.completion_status_reg[4] ;
  input \Use_Serial_Unified_Completion.completion_status_reg[5] ;
  input \Use_Serial_Unified_Completion.completion_status_reg[6] ;
  input \Use_Serial_Unified_Completion.completion_status_reg[8] ;
  input [5:0]\Use_Serial_Unified_Completion.sample_reg[15]_0 ;
  input \Use_Serial_Unified_Completion.mb_instr_overrun_reg ;
  input \Use_Serial_Unified_Completion.mb_instr_overrun_reg_0 ;
  input Dbg_TDO_0;
  input \Use_Serial_Unified_Completion.mb_data_overrun_reg_2 ;
  input completion_block0__10;
  input completion_ctrl;
  input Dbg_Rst_0;
  input Debug_SYS_Rst;
  input Ext_NM_BRK;

  wire CE;
  wire CLK;
  wire [9:0]D;
  wire D_1;
  wire [0:7]Dbg_Reg_En_0;
  wire Dbg_Rst_0;
  wire Dbg_TDO_0;
  wire Dbg_TDO_0_0;
  wire Debug_Rst_i0;
  wire [7:0]Debug_Rst_i_reg;
  wire Debug_SYS_Rst;
  wire [0:0]E;
  wire Ext_NM_BRK_i_reg;
  wire [7:0]Q;
  wire Q_0;
  wire SEL;
  wire [0:0]\Use_BSCAN.PORT_Selector_reg[2] ;
  wire [0:0]\Use_BSCAN.command_reg[5] ;
  wire \Use_BSCAN.command_reg[6] ;
  wire \Use_Serial_Unified_Completion.completion_block_reg ;
  wire \Use_Serial_Unified_Completion.completion_status_reg[0] ;
  wire \Use_Serial_Unified_Completion.completion_status_reg[3] ;
  wire \Use_Serial_Unified_Completion.completion_status_reg[4] ;
  wire \Use_Serial_Unified_Completion.completion_status_reg[5] ;
  wire \Use_Serial_Unified_Completion.completion_status_reg[6] ;
  wire \Use_Serial_Unified_Completion.completion_status_reg[8] ;
  wire [10:0]\Use_Serial_Unified_Completion.completion_status_reg[9] ;
  wire \Use_Serial_Unified_Completion.count_reg[1] ;
  wire \Use_Serial_Unified_Completion.count_reg[1]_0 ;
  wire \Use_Serial_Unified_Completion.mb_data_overrun_reg ;
  wire \Use_Serial_Unified_Completion.mb_data_overrun_reg_0 ;
  wire \Use_Serial_Unified_Completion.mb_data_overrun_reg_1 ;
  wire \Use_Serial_Unified_Completion.mb_data_overrun_reg_2 ;
  wire \Use_Serial_Unified_Completion.mb_instr_error_reg ;
  wire \Use_Serial_Unified_Completion.mb_instr_error_reg_0 ;
  wire \Use_Serial_Unified_Completion.mb_instr_overrun_i_4_n_0 ;
  wire \Use_Serial_Unified_Completion.mb_instr_overrun_i_5_n_0 ;
  wire \Use_Serial_Unified_Completion.mb_instr_overrun_i_6_n_0 ;
  wire \Use_Serial_Unified_Completion.mb_instr_overrun_reg ;
  wire \Use_Serial_Unified_Completion.mb_instr_overrun_reg_0 ;
  wire \Use_Serial_Unified_Completion.sample_1[15]_i_3_n_0 ;
  wire [2:0]\Use_Serial_Unified_Completion.sample_reg[15] ;
  wire [5:0]\Use_Serial_Unified_Completion.sample_reg[15]_0 ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_i_2_n_0 ;
  wire [3:0]\command_1_reg[7] ;
  wire completion_block0__10;
  wire completion_ctrl;
  wire completion_ctrl0;
  wire \completion_ctrl_reg[0] ;
  wire mb_data_overrun1__0;
  wire mb_instr_overrun137_out;
  wire mb_instr_overrun1__0;
  wire sel_n;
  wire sync;
  wire \tdi_shifter_reg[0] ;
  wire \tdi_shifter_reg[0]_0 ;
  wire \tdi_shifter_reg[1] ;

  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[0]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I1(Q_0),
        .I2(Q[7]),
        .O(Dbg_Reg_En_0[0]));
  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[1]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I1(Q_0),
        .I2(Q[6]),
        .O(Dbg_Reg_En_0[1]));
  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[2]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I1(Q_0),
        .I2(Q[5]),
        .O(Dbg_Reg_En_0[2]));
  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[3]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I1(Q_0),
        .I2(Q[4]),
        .O(Dbg_Reg_En_0[3]));
  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[4]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I1(Q_0),
        .I2(Q[3]),
        .O(Dbg_Reg_En_0[4]));
  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[5]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I1(Q_0),
        .I2(Q[2]),
        .O(Dbg_Reg_En_0[5]));
  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[6]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I1(Q_0),
        .I2(Q[1]),
        .O(Dbg_Reg_En_0[6]));
  LUT3 #(
    .INIT(8'h40)) 
    \Dbg_Reg_En_0[7]_INST_0 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I1(Q_0),
        .I2(Q[0]),
        .O(Dbg_Reg_En_0[7]));
  LUT2 #(
    .INIT(4'h2)) 
    Dbg_Shift_31_INST_0_i_2
       (.I0(Q_0),
        .I1(\Use_Serial_Unified_Completion.completion_block_reg ),
        .O(\Using_FPGA.Native_0 ));
  (* \PinAttr:I2:HOLD_DETOUR  = "184" *) 
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    Debug_Rst_i_i_1
       (.I0(Debug_Rst_i_reg[7]),
        .I1(Debug_Rst_i0),
        .I2(Dbg_Rst_0),
        .O(\tdi_shifter_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    Debug_SYS_Rst_i_i_1
       (.I0(Debug_Rst_i_reg[6]),
        .I1(Debug_Rst_i0),
        .I2(Debug_SYS_Rst),
        .O(\tdi_shifter_reg[1] ));
  LUT5 #(
    .INIT(32'h00020000)) 
    Ext_NM_BRK_i_i_3
       (.I0(Q_0),
        .I1(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I2(Q[1]),
        .I3(Q[5]),
        .I4(Ext_NM_BRK_i_reg),
        .O(Debug_Rst_i0));
  LUT6 #(
    .INIT(64'hFFFF55FF000000C0)) 
    \Use_Serial_Unified_Completion.completion_block_i_1 
       (.I0(\Use_Serial_Unified_Completion.mb_data_overrun_reg ),
        .I1(completion_block0__10),
        .I2(completion_ctrl),
        .I3(completion_ctrl0),
        .I4(\Use_BSCAN.command_reg[6] ),
        .I5(\Use_Serial_Unified_Completion.completion_block_reg ),
        .O(\completion_ctrl_reg[0] ));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h8F88)) 
    \Use_Serial_Unified_Completion.completion_status[0]_i_1 
       (.I0(\Use_BSCAN.command_reg[6] ),
        .I1(\Use_Serial_Unified_Completion.completion_status_reg[9] [1]),
        .I2(\Use_Serial_Unified_Completion.completion_status_reg[9] [0]),
        .I3(\Use_BSCAN.command_reg[5] ),
        .O(D[0]));
  LUT4 #(
    .INIT(16'h8000)) 
    \Use_Serial_Unified_Completion.completion_status[15]_i_3 
       (.I0(Q[1]),
        .I1(Q[5]),
        .I2(Q_0),
        .I3(Ext_NM_BRK_i_reg),
        .O(\Use_BSCAN.command_reg[6] ));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'hFF606060)) 
    \Use_Serial_Unified_Completion.completion_status[1]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[9] [1]),
        .I1(\Use_Serial_Unified_Completion.completion_status_reg[9] [0]),
        .I2(\Use_BSCAN.command_reg[5] ),
        .I3(\Use_BSCAN.command_reg[6] ),
        .I4(\Use_Serial_Unified_Completion.completion_status_reg[9] [2]),
        .O(D[1]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT6 #(
    .INIT(64'hFFFF6A006A006A00)) 
    \Use_Serial_Unified_Completion.completion_status[2]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[9] [2]),
        .I1(\Use_Serial_Unified_Completion.completion_status_reg[9] [1]),
        .I2(\Use_Serial_Unified_Completion.completion_status_reg[9] [0]),
        .I3(\Use_BSCAN.command_reg[5] ),
        .I4(\Use_BSCAN.command_reg[6] ),
        .I5(\Use_Serial_Unified_Completion.completion_status_reg[9] [3]),
        .O(D[2]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT5 #(
    .INIT(32'hFF606060)) 
    \Use_Serial_Unified_Completion.completion_status[3]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[9] [3]),
        .I1(\Use_Serial_Unified_Completion.completion_status_reg[3] ),
        .I2(\Use_BSCAN.command_reg[5] ),
        .I3(\Use_BSCAN.command_reg[6] ),
        .I4(\Use_Serial_Unified_Completion.completion_status_reg[9] [4]),
        .O(D[3]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT5 #(
    .INIT(32'hFF606060)) 
    \Use_Serial_Unified_Completion.completion_status[4]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[9] [4]),
        .I1(\Use_Serial_Unified_Completion.completion_status_reg[4] ),
        .I2(\Use_BSCAN.command_reg[5] ),
        .I3(\Use_BSCAN.command_reg[6] ),
        .I4(\Use_Serial_Unified_Completion.completion_status_reg[9] [5]),
        .O(D[4]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT5 #(
    .INIT(32'hFF484848)) 
    \Use_Serial_Unified_Completion.completion_status[5]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[9] [5]),
        .I1(\Use_BSCAN.command_reg[5] ),
        .I2(\Use_Serial_Unified_Completion.completion_status_reg[5] ),
        .I3(\Use_BSCAN.command_reg[6] ),
        .I4(\Use_Serial_Unified_Completion.completion_status_reg[9] [6]),
        .O(D[5]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT5 #(
    .INIT(32'hFF484848)) 
    \Use_Serial_Unified_Completion.completion_status[6]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[9] [6]),
        .I1(\Use_BSCAN.command_reg[5] ),
        .I2(\Use_Serial_Unified_Completion.completion_status_reg[6] ),
        .I3(\Use_BSCAN.command_reg[6] ),
        .I4(\Use_Serial_Unified_Completion.completion_status_reg[9] [7]),
        .O(D[6]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT6 #(
    .INIT(64'hFFFF488848884888)) 
    \Use_Serial_Unified_Completion.completion_status[7]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[9] [7]),
        .I1(\Use_BSCAN.command_reg[5] ),
        .I2(\Use_Serial_Unified_Completion.completion_status_reg[6] ),
        .I3(\Use_Serial_Unified_Completion.completion_status_reg[9] [6]),
        .I4(\Use_BSCAN.command_reg[6] ),
        .I5(\Use_Serial_Unified_Completion.completion_status_reg[9] [8]),
        .O(D[7]));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'hFF484848)) 
    \Use_Serial_Unified_Completion.completion_status[8]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[9] [8]),
        .I1(\Use_BSCAN.command_reg[5] ),
        .I2(\Use_Serial_Unified_Completion.completion_status_reg[8] ),
        .I3(\Use_BSCAN.command_reg[6] ),
        .I4(\Use_Serial_Unified_Completion.completion_status_reg[9] [9]),
        .O(D[8]));
  LUT6 #(
    .INIT(64'h00F100F1FF000000)) 
    \Use_Serial_Unified_Completion.completion_status[9]_i_1 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I1(Q_0),
        .I2(completion_ctrl0),
        .I3(\Use_BSCAN.command_reg[6] ),
        .I4(\Use_Serial_Unified_Completion.completion_status_reg[0] ),
        .I5(\Use_Serial_Unified_Completion.mb_data_overrun_reg ),
        .O(E));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT6 #(
    .INIT(64'hFFFF488848884888)) 
    \Use_Serial_Unified_Completion.completion_status[9]_i_2 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[9] [9]),
        .I1(\Use_BSCAN.command_reg[5] ),
        .I2(\Use_Serial_Unified_Completion.completion_status_reg[8] ),
        .I3(\Use_Serial_Unified_Completion.completion_status_reg[9] [8]),
        .I4(\Use_BSCAN.command_reg[6] ),
        .I5(\Use_Serial_Unified_Completion.completion_status_reg[9] [10]),
        .O(D[9]));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \Use_Serial_Unified_Completion.completion_status[9]_i_3 
       (.I0(\Use_Serial_Unified_Completion.sample_1[15]_i_3_n_0 ),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(\Use_Serial_Unified_Completion.mb_data_overrun_reg_1 ),
        .O(completion_ctrl0));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    \Use_Serial_Unified_Completion.count[0]__0_i_3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Use_Serial_Unified_Completion.mb_data_overrun_reg_0 ),
        .I5(\Use_Serial_Unified_Completion.mb_data_overrun_reg_1 ),
        .O(mb_data_overrun1__0));
  LUT6 #(
    .INIT(64'h0000040000000000)) 
    \Use_Serial_Unified_Completion.count[0]_i_2 
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Use_Serial_Unified_Completion.mb_data_overrun_reg_0 ),
        .I5(\Use_Serial_Unified_Completion.mb_data_overrun_reg_1 ),
        .O(mb_instr_overrun137_out));
  LUT6 #(
    .INIT(64'h053F0F3F05000000)) 
    \Use_Serial_Unified_Completion.mb_data_overrun_i_1 
       (.I0(Dbg_TDO_0),
        .I1(completion_ctrl0),
        .I2(\Use_Serial_Unified_Completion.mb_data_overrun_reg ),
        .I3(mb_data_overrun1__0),
        .I4(\Use_Serial_Unified_Completion.mb_data_overrun_reg_2 ),
        .I5(\Use_Serial_Unified_Completion.sample_reg[15]_0 [2]),
        .O(Dbg_TDO_0_0));
  LUT6 #(
    .INIT(64'hA0A0BFFFA0A08000)) 
    \Use_Serial_Unified_Completion.mb_instr_error_i_1 
       (.I0(\Use_Serial_Unified_Completion.mb_instr_overrun_reg ),
        .I1(mb_instr_overrun1__0),
        .I2(mb_instr_overrun137_out),
        .I3(\Use_Serial_Unified_Completion.mb_instr_overrun_reg_0 ),
        .I4(\Use_Serial_Unified_Completion.mb_instr_overrun_i_4_n_0 ),
        .I5(\Use_Serial_Unified_Completion.sample_reg[15]_0 [1]),
        .O(\Use_Serial_Unified_Completion.count_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hA0A0FFBFA0A00080)) 
    \Use_Serial_Unified_Completion.mb_instr_overrun_i_1 
       (.I0(\Use_Serial_Unified_Completion.mb_instr_overrun_reg ),
        .I1(mb_instr_overrun1__0),
        .I2(mb_instr_overrun137_out),
        .I3(\Use_Serial_Unified_Completion.mb_instr_overrun_reg_0 ),
        .I4(\Use_Serial_Unified_Completion.mb_instr_overrun_i_4_n_0 ),
        .I5(\Use_Serial_Unified_Completion.sample_reg[15]_0 [0]),
        .O(\Use_Serial_Unified_Completion.count_reg[1] ));
  LUT6 #(
    .INIT(64'h00000000AAAA2AAA)) 
    \Use_Serial_Unified_Completion.mb_instr_overrun_i_3 
       (.I0(\Use_Serial_Unified_Completion.completion_status_reg[0] ),
        .I1(\Use_Serial_Unified_Completion.mb_data_overrun_reg_1 ),
        .I2(\Use_Serial_Unified_Completion.mb_instr_overrun_i_5_n_0 ),
        .I3(\Use_Serial_Unified_Completion.mb_instr_error_reg ),
        .I4(sync),
        .I5(\Use_Serial_Unified_Completion.mb_instr_error_reg_0 ),
        .O(mb_instr_overrun1__0));
  LUT6 #(
    .INIT(64'hFF00000008000000)) 
    \Use_Serial_Unified_Completion.mb_instr_overrun_i_4 
       (.I0(\Use_Serial_Unified_Completion.mb_instr_error_reg ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Use_Serial_Unified_Completion.mb_data_overrun_reg_0 ),
        .I3(\Use_Serial_Unified_Completion.mb_data_overrun_reg_1 ),
        .I4(\Use_Serial_Unified_Completion.mb_data_overrun_reg ),
        .I5(\Use_Serial_Unified_Completion.mb_instr_overrun_i_6_n_0 ),
        .O(\Use_Serial_Unified_Completion.mb_instr_overrun_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \Use_Serial_Unified_Completion.mb_instr_overrun_i_5 
       (.I0(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I1(Q_0),
        .I2(Q[3]),
        .I3(Q[5]),
        .O(\Use_Serial_Unified_Completion.mb_instr_overrun_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \Use_Serial_Unified_Completion.mb_instr_overrun_i_6 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q_0),
        .I5(Q[5]),
        .O(\Use_Serial_Unified_Completion.mb_instr_overrun_i_6_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* \PinAttr:I1:HOLD_DETOUR  = "179" *) 
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \Use_Serial_Unified_Completion.sample[13]_i_1 
       (.I0(\Use_BSCAN.command_reg[5] ),
        .I1(\Use_Serial_Unified_Completion.sample_reg[15]_0 [3]),
        .O(\Use_Serial_Unified_Completion.sample_reg[15] [0]));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \Use_Serial_Unified_Completion.sample[14]_i_1 
       (.I0(\Use_BSCAN.command_reg[5] ),
        .I1(\Use_Serial_Unified_Completion.sample_reg[15]_0 [4]),
        .O(\Use_Serial_Unified_Completion.sample_reg[15] [1]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT2 #(
    .INIT(4'h4)) 
    \Use_Serial_Unified_Completion.sample[15]_i_1 
       (.I0(\Use_BSCAN.command_reg[5] ),
        .I1(\Use_Serial_Unified_Completion.sample_reg[15]_0 [5]),
        .O(\Use_Serial_Unified_Completion.sample_reg[15] [2]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT6 #(
    .INIT(64'hFFDF7FFFFFFFFFFF)) 
    \Use_Serial_Unified_Completion.sample_1[15]_i_2 
       (.I0(\Use_Serial_Unified_Completion.mb_data_overrun_reg_1 ),
        .I1(Q[2]),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(\Use_Serial_Unified_Completion.sample_1[15]_i_3_n_0 ),
        .O(\Use_BSCAN.command_reg[5] ));
  LUT2 #(
    .INIT(4'h8)) 
    \Use_Serial_Unified_Completion.sample_1[15]_i_3 
       (.I0(Q[5]),
        .I1(Q_0),
        .O(\Use_Serial_Unified_Completion.sample_1[15]_i_3_n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDC_1" *) 
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Using_FPGA.Native 
       (.C(CLK),
        .CE(1'b1),
        .CLR(sel_n),
        .D(D_1),
        .Q(Q_0));
  LUT5 #(
    .INIT(32'h00000800)) 
    \Using_FPGA.Native_i_1 
       (.I0(\Using_FPGA.Native_i_2_n_0 ),
        .I1(Debug_Rst_i_reg[3]),
        .I2(Debug_Rst_i_reg[2]),
        .I3(Debug_Rst_i_reg[0]),
        .I4(Debug_Rst_i_reg[1]),
        .O(CE));
  LUT1 #(
    .INIT(2'h1)) 
    \Using_FPGA.Native_i_1__0 
       (.I0(Q_0),
        .O(D_1));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \Using_FPGA.Native_i_2 
       (.I0(Debug_Rst_i_reg[5]),
        .I1(Debug_Rst_i_reg[4]),
        .I2(Debug_Rst_i_reg[6]),
        .I3(Debug_Rst_i_reg[7]),
        .I4(\Use_Serial_Unified_Completion.completion_block_reg ),
        .I5(Q_0),
        .O(\Using_FPGA.Native_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000001000000)) 
    \command_1[0]_i_1 
       (.I0(\command_1_reg[7] [2]),
        .I1(\command_1_reg[7] [3]),
        .I2(\command_1_reg[7] [1]),
        .I3(\command_1_reg[7] [0]),
        .I4(SEL),
        .I5(\Using_FPGA.Native_0 ),
        .O(\Use_BSCAN.PORT_Selector_reg[2] ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \completion_ctrl[0]_i_1 
       (.I0(Debug_Rst_i_reg[7]),
        .I1(completion_ctrl0),
        .I2(completion_ctrl),
        .O(\tdi_shifter_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDRE_1" *) 
module system_mdm_1_0__MB_FDRE_1
   (sync,
    Dbg_Shift_0,
    D_1,
    CE,
    \Using_FPGA.Native_0 ,
    Dbg_Shift_0_0,
    Dbg_Shift_0_1,
    Dbg_Shift_0_2,
    Dbg_Shift_0_3,
    Dbg_Shift_0_4);
  output sync;
  output Dbg_Shift_0;
  input D_1;
  input CE;
  input \Using_FPGA.Native_0 ;
  input Dbg_Shift_0_0;
  input Dbg_Shift_0_1;
  input Dbg_Shift_0_2;
  input Dbg_Shift_0_3;
  input Dbg_Shift_0_4;

  wire CE;
  wire D_1;
  wire Dbg_Shift_0;
  wire Dbg_Shift_0_0;
  wire Dbg_Shift_0_1;
  wire Dbg_Shift_0_2;
  wire Dbg_Shift_0_3;
  wire Dbg_Shift_0_4;
  wire \Using_FPGA.Native_0 ;
  wire sync;

  LUT6 #(
    .INIT(64'hFFBFFFFF00000000)) 
    Dbg_Shift_31_INST_0
       (.I0(sync),
        .I1(Dbg_Shift_0_0),
        .I2(Dbg_Shift_0_1),
        .I3(Dbg_Shift_0_2),
        .I4(Dbg_Shift_0_3),
        .I5(Dbg_Shift_0_4),
        .O(Dbg_Shift_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDRE_1" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Using_FPGA.Native 
       (.C(\Using_FPGA.Native_0 ),
        .CE(CE),
        .D(1'b1),
        .Q(sync),
        .R(D_1));
endmodule

(* ORIG_REF_NAME = "MB_LUT1" *) 
module system_mdm_1_0__MB_LUT1
   (Ext_JTAG_TDI,
    I0);
  output Ext_JTAG_TDI;
  input I0;

  wire I0;
  (* DONT_TOUCH *) wire lut1_o;

  assign Ext_JTAG_TDI = lut1_o;
  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT1 #(
    .INIT(2'h2)) 
    \Using_FPGA.Native 
       (.I0(I0),
        .O(lut1_o));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module system_mdm_1_0__MB_SRL16E
   (tdo,
    Q,
    \Use_E2.BSCANE2_I_i_8_0 ,
    sel_n_reg,
    sel_n_reg_0,
    sel_n_reg_1,
    sel_n_reg_2,
    sel_n_reg_3,
    \Use_E2.BSCANE2_I_i_1_0 ,
    \Use_E2.BSCANE2_I_i_1_1 ,
    Dbg_TDO_0,
    \Use_E2.BSCANE2_I_i_4_0 ,
    config_TDO_2);
  output tdo;
  input [4:0]Q;
  input \Use_E2.BSCANE2_I_i_8_0 ;
  input sel_n_reg;
  input [0:0]sel_n_reg_0;
  input sel_n_reg_1;
  input sel_n_reg_2;
  input sel_n_reg_3;
  input \Use_E2.BSCANE2_I_i_1_0 ;
  input [2:0]\Use_E2.BSCANE2_I_i_1_1 ;
  input Dbg_TDO_0;
  input [0:0]\Use_E2.BSCANE2_I_i_4_0 ;
  input config_TDO_2;

  wire Dbg_TDO_0;
  wire [4:0]Q;
  wire \Use_E2.BSCANE2_I_i_1_0 ;
  wire [2:0]\Use_E2.BSCANE2_I_i_1_1 ;
  wire [0:0]\Use_E2.BSCANE2_I_i_4_0 ;
  wire \Use_E2.BSCANE2_I_i_4_n_0 ;
  wire \Use_E2.BSCANE2_I_i_8_0 ;
  wire \Use_E2.BSCANE2_I_i_8_n_0 ;
  wire config_TDO_1;
  wire config_TDO_2;
  wire sel_n_reg;
  wire [0:0]sel_n_reg_0;
  wire sel_n_reg_1;
  wire sel_n_reg_2;
  wire sel_n_reg_3;
  wire tdo;

  LUT6 #(
    .INIT(64'hEEEEEEEAEAEAEAEA)) 
    \Use_E2.BSCANE2_I_i_1 
       (.I0(sel_n_reg),
        .I1(sel_n_reg_0),
        .I2(sel_n_reg_1),
        .I3(\Use_E2.BSCANE2_I_i_4_n_0 ),
        .I4(sel_n_reg_2),
        .I5(sel_n_reg_3),
        .O(tdo));
  LUT5 #(
    .INIT(32'hFEEEBAAA)) 
    \Use_E2.BSCANE2_I_i_4 
       (.I0(\Use_E2.BSCANE2_I_i_1_0 ),
        .I1(\Use_E2.BSCANE2_I_i_1_1 [0]),
        .I2(\Use_E2.BSCANE2_I_i_1_1 [2]),
        .I3(\Use_E2.BSCANE2_I_i_8_n_0 ),
        .I4(Dbg_TDO_0),
        .O(\Use_E2.BSCANE2_I_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFACA0ACA)) 
    \Use_E2.BSCANE2_I_i_8 
       (.I0(\Use_E2.BSCANE2_I_i_4_0 ),
        .I1(config_TDO_1),
        .I2(\Use_E2.BSCANE2_I_i_1_1 [1]),
        .I3(Q[4]),
        .I4(config_TDO_2),
        .O(\Use_E2.BSCANE2_I_i_8_n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_Config_SRL16E.SRL16E_1/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0167),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(\Use_E2.BSCANE2_I_i_8_0 ),
        .D(1'b0),
        .Q(config_TDO_1));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module system_mdm_1_0__MB_SRL16E__parameterized1
   (config_TDO_2,
    Q,
    \Use_E2.BSCANE2_I_i_8 );
  output config_TDO_2;
  input [3:0]Q;
  input \Use_E2.BSCANE2_I_i_8 ;

  wire [3:0]Q;
  wire \Use_E2.BSCANE2_I_i_8 ;
  wire config_TDO_2;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_Config_SRL16E.SRL16E_2/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h4287),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(\Use_E2.BSCANE2_I_i_8 ),
        .D(1'b0),
        .Q(config_TDO_2));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module system_mdm_1_0__MB_SRL16E__parameterized3
   (\Use_BSCAN.command_reg[5] ,
    Q,
    \Use_E2.BSCANE2_I_i_9_0 ,
    \Use_E2.BSCANE2_I_i_1 ,
    ID_TDO_2);
  output \Use_BSCAN.command_reg[5] ;
  input [4:0]Q;
  input \Use_E2.BSCANE2_I_i_9_0 ;
  input [5:0]\Use_E2.BSCANE2_I_i_1 ;
  input ID_TDO_2;

  wire ID_TDO_1;
  wire ID_TDO_2;
  wire [4:0]Q;
  wire \Use_BSCAN.command_reg[5] ;
  wire [5:0]\Use_E2.BSCANE2_I_i_1 ;
  wire \Use_E2.BSCANE2_I_i_9_0 ;
  wire \Use_E2.BSCANE2_I_i_9_n_0 ;

  LUT6 #(
    .INIT(64'hFFFFFFFFFFFB8C8C)) 
    \Use_E2.BSCANE2_I_i_5 
       (.I0(\Use_E2.BSCANE2_I_i_1 [2]),
        .I1(\Use_E2.BSCANE2_I_i_1 [1]),
        .I2(\Use_E2.BSCANE2_I_i_1 [4]),
        .I3(\Use_E2.BSCANE2_I_i_1 [3]),
        .I4(\Use_E2.BSCANE2_I_i_1 [5]),
        .I5(\Use_E2.BSCANE2_I_i_9_n_0 ),
        .O(\Use_BSCAN.command_reg[5] ));
  LUT6 #(
    .INIT(64'h0101010000000100)) 
    \Use_E2.BSCANE2_I_i_9 
       (.I0(\Use_E2.BSCANE2_I_i_1 [1]),
        .I1(\Use_E2.BSCANE2_I_i_1 [0]),
        .I2(\Use_E2.BSCANE2_I_i_1 [2]),
        .I3(ID_TDO_1),
        .I4(Q[4]),
        .I5(ID_TDO_2),
        .O(\Use_E2.BSCANE2_I_i_9_n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_ID_SRL16E.SRL16E_ID_1/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h4443),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(\Use_E2.BSCANE2_I_i_9_0 ),
        .D(1'b0),
        .Q(ID_TDO_1));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module system_mdm_1_0__MB_SRL16E__parameterized5
   (ID_TDO_2,
    Q,
    \Use_E2.BSCANE2_I_i_9 );
  output ID_TDO_2;
  input [3:0]Q;
  input \Use_E2.BSCANE2_I_i_9 ;

  wire ID_TDO_2;
  wire [3:0]Q;
  wire \Use_E2.BSCANE2_I_i_9 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "U0/\MDM_Core_I1/JTAG_CONTROL_I/Use_ID_SRL16E.SRL16E_ID_2/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h584D),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(\Use_E2.BSCANE2_I_i_9 ),
        .D(1'b0),
        .Q(ID_TDO_2));
endmodule

(* C_ADDR_SIZE = "32" *) (* C_AVOID_PRIMITIVES = "0" *) (* C_BSCANID = "76547328" *) 
(* C_DATA_SIZE = "32" *) (* C_DBG_MEM_ACCESS = "0" *) (* C_DBG_REG_ACCESS = "0" *) 
(* C_DEBUG_INTERFACE = "0" *) (* C_EXT_TRIG_RESET_VALUE = "20'b11110001001000110100" *) (* C_FAMILY = "spartan7" *) 
(* C_INTERCONNECT = "2" *) (* C_JTAG_CHAIN = "2" *) (* C_LMB_PROTOCOL = "0" *) 
(* C_MB_DBG_PORTS = "1" *) (* C_M_AXIS_DATA_WIDTH = "32" *) (* C_M_AXIS_ID_WIDTH = "7" *) 
(* C_M_AXI_ADDR_WIDTH = "32" *) (* C_M_AXI_DATA_WIDTH = "32" *) (* C_M_AXI_THREAD_ID_WIDTH = "1" *) 
(* C_S_AXI_ACLK_FREQ_HZ = "100000000" *) (* C_S_AXI_ADDR_WIDTH = "4" *) (* C_S_AXI_DATA_WIDTH = "32" *) 
(* C_TRACE_ASYNC_RESET = "0" *) (* C_TRACE_CLK_FREQ_HZ = "200000000" *) (* C_TRACE_CLK_OUT_PHASE = "90" *) 
(* C_TRACE_DATA_WIDTH = "32" *) (* C_TRACE_ID = "110" *) (* C_TRACE_OUTPUT = "0" *) 
(* C_TRACE_PROTOCOL = "1" *) (* C_USE_BSCAN = "0" *) (* C_USE_CONFIG_RESET = "0" *) 
(* C_USE_CROSS_TRIGGER = "0" *) (* C_USE_UART = "0" *) (* ORIG_REF_NAME = "MDM" *) 
module system_mdm_1_0__MDM
   (Config_Reset,
    Scan_Reset_Sel,
    Scan_Reset,
    Scan_En,
    S_AXI_ACLK,
    S_AXI_ARESETN,
    M_AXI_ACLK,
    M_AXI_ARESETN,
    M_AXIS_ACLK,
    M_AXIS_ARESETN,
    Interrupt,
    Ext_BRK,
    Ext_NM_BRK,
    Debug_SYS_Rst,
    Trig_In_0,
    Trig_Ack_In_0,
    Trig_Out_0,
    Trig_Ack_Out_0,
    Trig_In_1,
    Trig_Ack_In_1,
    Trig_Out_1,
    Trig_Ack_Out_1,
    Trig_In_2,
    Trig_Ack_In_2,
    Trig_Out_2,
    Trig_Ack_Out_2,
    Trig_In_3,
    Trig_Ack_In_3,
    Trig_Out_3,
    Trig_Ack_Out_3,
    S_AXI_AWADDR,
    S_AXI_AWVALID,
    S_AXI_AWREADY,
    S_AXI_WDATA,
    S_AXI_WSTRB,
    S_AXI_WVALID,
    S_AXI_WREADY,
    S_AXI_BRESP,
    S_AXI_BVALID,
    S_AXI_BREADY,
    S_AXI_ARADDR,
    S_AXI_ARVALID,
    S_AXI_ARREADY,
    S_AXI_RDATA,
    S_AXI_RRESP,
    S_AXI_RVALID,
    S_AXI_RREADY,
    M_AXI_AWID,
    M_AXI_AWADDR,
    M_AXI_AWLEN,
    M_AXI_AWSIZE,
    M_AXI_AWBURST,
    M_AXI_AWLOCK,
    M_AXI_AWCACHE,
    M_AXI_AWPROT,
    M_AXI_AWQOS,
    M_AXI_AWVALID,
    M_AXI_AWREADY,
    M_AXI_WDATA,
    M_AXI_WSTRB,
    M_AXI_WLAST,
    M_AXI_WVALID,
    M_AXI_WREADY,
    M_AXI_BRESP,
    M_AXI_BID,
    M_AXI_BVALID,
    M_AXI_BREADY,
    M_AXI_ARID,
    M_AXI_ARADDR,
    M_AXI_ARLEN,
    M_AXI_ARSIZE,
    M_AXI_ARBURST,
    M_AXI_ARLOCK,
    M_AXI_ARCACHE,
    M_AXI_ARPROT,
    M_AXI_ARQOS,
    M_AXI_ARVALID,
    M_AXI_ARREADY,
    M_AXI_RID,
    M_AXI_RDATA,
    M_AXI_RRESP,
    M_AXI_RLAST,
    M_AXI_RVALID,
    M_AXI_RREADY,
    LMB_Data_Addr_0,
    LMB_Data_Read_0,
    LMB_Data_Write_0,
    LMB_Addr_Strobe_0,
    LMB_Read_Strobe_0,
    LMB_Write_Strobe_0,
    LMB_Ready_0,
    LMB_Wait_0,
    LMB_CE_0,
    LMB_UE_0,
    LMB_Byte_Enable_0,
    LMB_Data_Addr_1,
    LMB_Data_Read_1,
    LMB_Data_Write_1,
    LMB_Addr_Strobe_1,
    LMB_Read_Strobe_1,
    LMB_Write_Strobe_1,
    LMB_Ready_1,
    LMB_Wait_1,
    LMB_CE_1,
    LMB_UE_1,
    LMB_Byte_Enable_1,
    LMB_Data_Addr_2,
    LMB_Data_Read_2,
    LMB_Data_Write_2,
    LMB_Addr_Strobe_2,
    LMB_Read_Strobe_2,
    LMB_Write_Strobe_2,
    LMB_Ready_2,
    LMB_Wait_2,
    LMB_CE_2,
    LMB_UE_2,
    LMB_Byte_Enable_2,
    LMB_Data_Addr_3,
    LMB_Data_Read_3,
    LMB_Data_Write_3,
    LMB_Addr_Strobe_3,
    LMB_Read_Strobe_3,
    LMB_Write_Strobe_3,
    LMB_Ready_3,
    LMB_Wait_3,
    LMB_CE_3,
    LMB_UE_3,
    LMB_Byte_Enable_3,
    LMB_Data_Addr_4,
    LMB_Data_Read_4,
    LMB_Data_Write_4,
    LMB_Addr_Strobe_4,
    LMB_Read_Strobe_4,
    LMB_Write_Strobe_4,
    LMB_Ready_4,
    LMB_Wait_4,
    LMB_CE_4,
    LMB_UE_4,
    LMB_Byte_Enable_4,
    LMB_Data_Addr_5,
    LMB_Data_Read_5,
    LMB_Data_Write_5,
    LMB_Addr_Strobe_5,
    LMB_Read_Strobe_5,
    LMB_Write_Strobe_5,
    LMB_Ready_5,
    LMB_Wait_5,
    LMB_CE_5,
    LMB_UE_5,
    LMB_Byte_Enable_5,
    LMB_Data_Addr_6,
    LMB_Data_Read_6,
    LMB_Data_Write_6,
    LMB_Addr_Strobe_6,
    LMB_Read_Strobe_6,
    LMB_Write_Strobe_6,
    LMB_Ready_6,
    LMB_Wait_6,
    LMB_CE_6,
    LMB_UE_6,
    LMB_Byte_Enable_6,
    LMB_Data_Addr_7,
    LMB_Data_Read_7,
    LMB_Data_Write_7,
    LMB_Addr_Strobe_7,
    LMB_Read_Strobe_7,
    LMB_Write_Strobe_7,
    LMB_Ready_7,
    LMB_Wait_7,
    LMB_CE_7,
    LMB_UE_7,
    LMB_Byte_Enable_7,
    LMB_Data_Addr_8,
    LMB_Data_Read_8,
    LMB_Data_Write_8,
    LMB_Addr_Strobe_8,
    LMB_Read_Strobe_8,
    LMB_Write_Strobe_8,
    LMB_Ready_8,
    LMB_Wait_8,
    LMB_CE_8,
    LMB_UE_8,
    LMB_Byte_Enable_8,
    LMB_Data_Addr_9,
    LMB_Data_Read_9,
    LMB_Data_Write_9,
    LMB_Addr_Strobe_9,
    LMB_Read_Strobe_9,
    LMB_Write_Strobe_9,
    LMB_Ready_9,
    LMB_Wait_9,
    LMB_CE_9,
    LMB_UE_9,
    LMB_Byte_Enable_9,
    LMB_Data_Addr_10,
    LMB_Data_Read_10,
    LMB_Data_Write_10,
    LMB_Addr_Strobe_10,
    LMB_Read_Strobe_10,
    LMB_Write_Strobe_10,
    LMB_Ready_10,
    LMB_Wait_10,
    LMB_CE_10,
    LMB_UE_10,
    LMB_Byte_Enable_10,
    LMB_Data_Addr_11,
    LMB_Data_Read_11,
    LMB_Data_Write_11,
    LMB_Addr_Strobe_11,
    LMB_Read_Strobe_11,
    LMB_Write_Strobe_11,
    LMB_Ready_11,
    LMB_Wait_11,
    LMB_CE_11,
    LMB_UE_11,
    LMB_Byte_Enable_11,
    LMB_Data_Addr_12,
    LMB_Data_Read_12,
    LMB_Data_Write_12,
    LMB_Addr_Strobe_12,
    LMB_Read_Strobe_12,
    LMB_Write_Strobe_12,
    LMB_Ready_12,
    LMB_Wait_12,
    LMB_CE_12,
    LMB_UE_12,
    LMB_Byte_Enable_12,
    LMB_Data_Addr_13,
    LMB_Data_Read_13,
    LMB_Data_Write_13,
    LMB_Addr_Strobe_13,
    LMB_Read_Strobe_13,
    LMB_Write_Strobe_13,
    LMB_Ready_13,
    LMB_Wait_13,
    LMB_CE_13,
    LMB_UE_13,
    LMB_Byte_Enable_13,
    LMB_Data_Addr_14,
    LMB_Data_Read_14,
    LMB_Data_Write_14,
    LMB_Addr_Strobe_14,
    LMB_Read_Strobe_14,
    LMB_Write_Strobe_14,
    LMB_Ready_14,
    LMB_Wait_14,
    LMB_CE_14,
    LMB_UE_14,
    LMB_Byte_Enable_14,
    LMB_Data_Addr_15,
    LMB_Data_Read_15,
    LMB_Data_Write_15,
    LMB_Addr_Strobe_15,
    LMB_Read_Strobe_15,
    LMB_Write_Strobe_15,
    LMB_Ready_15,
    LMB_Wait_15,
    LMB_CE_15,
    LMB_UE_15,
    LMB_Byte_Enable_15,
    LMB_Data_Addr_16,
    LMB_Data_Read_16,
    LMB_Data_Write_16,
    LMB_Addr_Strobe_16,
    LMB_Read_Strobe_16,
    LMB_Write_Strobe_16,
    LMB_Ready_16,
    LMB_Wait_16,
    LMB_CE_16,
    LMB_UE_16,
    LMB_Byte_Enable_16,
    LMB_Data_Addr_17,
    LMB_Data_Read_17,
    LMB_Data_Write_17,
    LMB_Addr_Strobe_17,
    LMB_Read_Strobe_17,
    LMB_Write_Strobe_17,
    LMB_Ready_17,
    LMB_Wait_17,
    LMB_CE_17,
    LMB_UE_17,
    LMB_Byte_Enable_17,
    LMB_Data_Addr_18,
    LMB_Data_Read_18,
    LMB_Data_Write_18,
    LMB_Addr_Strobe_18,
    LMB_Read_Strobe_18,
    LMB_Write_Strobe_18,
    LMB_Ready_18,
    LMB_Wait_18,
    LMB_CE_18,
    LMB_UE_18,
    LMB_Byte_Enable_18,
    LMB_Data_Addr_19,
    LMB_Data_Read_19,
    LMB_Data_Write_19,
    LMB_Addr_Strobe_19,
    LMB_Read_Strobe_19,
    LMB_Write_Strobe_19,
    LMB_Ready_19,
    LMB_Wait_19,
    LMB_CE_19,
    LMB_UE_19,
    LMB_Byte_Enable_19,
    LMB_Data_Addr_20,
    LMB_Data_Read_20,
    LMB_Data_Write_20,
    LMB_Addr_Strobe_20,
    LMB_Read_Strobe_20,
    LMB_Write_Strobe_20,
    LMB_Ready_20,
    LMB_Wait_20,
    LMB_CE_20,
    LMB_UE_20,
    LMB_Byte_Enable_20,
    LMB_Data_Addr_21,
    LMB_Data_Read_21,
    LMB_Data_Write_21,
    LMB_Addr_Strobe_21,
    LMB_Read_Strobe_21,
    LMB_Write_Strobe_21,
    LMB_Ready_21,
    LMB_Wait_21,
    LMB_CE_21,
    LMB_UE_21,
    LMB_Byte_Enable_21,
    LMB_Data_Addr_22,
    LMB_Data_Read_22,
    LMB_Data_Write_22,
    LMB_Addr_Strobe_22,
    LMB_Read_Strobe_22,
    LMB_Write_Strobe_22,
    LMB_Ready_22,
    LMB_Wait_22,
    LMB_CE_22,
    LMB_UE_22,
    LMB_Byte_Enable_22,
    LMB_Data_Addr_23,
    LMB_Data_Read_23,
    LMB_Data_Write_23,
    LMB_Addr_Strobe_23,
    LMB_Read_Strobe_23,
    LMB_Write_Strobe_23,
    LMB_Ready_23,
    LMB_Wait_23,
    LMB_CE_23,
    LMB_UE_23,
    LMB_Byte_Enable_23,
    LMB_Data_Addr_24,
    LMB_Data_Read_24,
    LMB_Data_Write_24,
    LMB_Addr_Strobe_24,
    LMB_Read_Strobe_24,
    LMB_Write_Strobe_24,
    LMB_Ready_24,
    LMB_Wait_24,
    LMB_CE_24,
    LMB_UE_24,
    LMB_Byte_Enable_24,
    LMB_Data_Addr_25,
    LMB_Data_Read_25,
    LMB_Data_Write_25,
    LMB_Addr_Strobe_25,
    LMB_Read_Strobe_25,
    LMB_Write_Strobe_25,
    LMB_Ready_25,
    LMB_Wait_25,
    LMB_CE_25,
    LMB_UE_25,
    LMB_Byte_Enable_25,
    LMB_Data_Addr_26,
    LMB_Data_Read_26,
    LMB_Data_Write_26,
    LMB_Addr_Strobe_26,
    LMB_Read_Strobe_26,
    LMB_Write_Strobe_26,
    LMB_Ready_26,
    LMB_Wait_26,
    LMB_CE_26,
    LMB_UE_26,
    LMB_Byte_Enable_26,
    LMB_Data_Addr_27,
    LMB_Data_Read_27,
    LMB_Data_Write_27,
    LMB_Addr_Strobe_27,
    LMB_Read_Strobe_27,
    LMB_Write_Strobe_27,
    LMB_Ready_27,
    LMB_Wait_27,
    LMB_CE_27,
    LMB_UE_27,
    LMB_Byte_Enable_27,
    LMB_Data_Addr_28,
    LMB_Data_Read_28,
    LMB_Data_Write_28,
    LMB_Addr_Strobe_28,
    LMB_Read_Strobe_28,
    LMB_Write_Strobe_28,
    LMB_Ready_28,
    LMB_Wait_28,
    LMB_CE_28,
    LMB_UE_28,
    LMB_Byte_Enable_28,
    LMB_Data_Addr_29,
    LMB_Data_Read_29,
    LMB_Data_Write_29,
    LMB_Addr_Strobe_29,
    LMB_Read_Strobe_29,
    LMB_Write_Strobe_29,
    LMB_Ready_29,
    LMB_Wait_29,
    LMB_CE_29,
    LMB_UE_29,
    LMB_Byte_Enable_29,
    LMB_Data_Addr_30,
    LMB_Data_Read_30,
    LMB_Data_Write_30,
    LMB_Addr_Strobe_30,
    LMB_Read_Strobe_30,
    LMB_Write_Strobe_30,
    LMB_Ready_30,
    LMB_Wait_30,
    LMB_CE_30,
    LMB_UE_30,
    LMB_Byte_Enable_30,
    LMB_Data_Addr_31,
    LMB_Data_Read_31,
    LMB_Data_Write_31,
    LMB_Addr_Strobe_31,
    LMB_Read_Strobe_31,
    LMB_Write_Strobe_31,
    LMB_Ready_31,
    LMB_Wait_31,
    LMB_CE_31,
    LMB_UE_31,
    LMB_Byte_Enable_31,
    M_AXIS_TDATA,
    M_AXIS_TID,
    M_AXIS_TREADY,
    M_AXIS_TVALID,
    TRACE_CLK_OUT,
    TRACE_CLK,
    TRACE_CTL,
    TRACE_DATA,
    Dbg_Disable_0,
    Dbg_Clk_0,
    Dbg_TDI_0,
    Dbg_TDO_0,
    Dbg_Reg_En_0,
    Dbg_Capture_0,
    Dbg_Shift_0,
    Dbg_Update_0,
    Dbg_Rst_0,
    Dbg_Trig_In_0,
    Dbg_Trig_Ack_In_0,
    Dbg_Trig_Out_0,
    Dbg_Trig_Ack_Out_0,
    Dbg_TrClk_0,
    Dbg_TrData_0,
    Dbg_TrReady_0,
    Dbg_TrValid_0,
    Dbg_AWADDR_0,
    Dbg_AWVALID_0,
    Dbg_AWREADY_0,
    Dbg_WDATA_0,
    Dbg_WVALID_0,
    Dbg_WREADY_0,
    Dbg_BRESP_0,
    Dbg_BVALID_0,
    Dbg_BREADY_0,
    Dbg_ARADDR_0,
    Dbg_ARVALID_0,
    Dbg_ARREADY_0,
    Dbg_RDATA_0,
    Dbg_RRESP_0,
    Dbg_RVALID_0,
    Dbg_RREADY_0,
    Dbg_Disable_1,
    Dbg_Clk_1,
    Dbg_TDI_1,
    Dbg_TDO_1,
    Dbg_Reg_En_1,
    Dbg_Capture_1,
    Dbg_Shift_1,
    Dbg_Update_1,
    Dbg_Rst_1,
    Dbg_Trig_In_1,
    Dbg_Trig_Ack_In_1,
    Dbg_Trig_Out_1,
    Dbg_Trig_Ack_Out_1,
    Dbg_TrClk_1,
    Dbg_TrData_1,
    Dbg_TrReady_1,
    Dbg_TrValid_1,
    Dbg_AWADDR_1,
    Dbg_AWVALID_1,
    Dbg_AWREADY_1,
    Dbg_WDATA_1,
    Dbg_WVALID_1,
    Dbg_WREADY_1,
    Dbg_BRESP_1,
    Dbg_BVALID_1,
    Dbg_BREADY_1,
    Dbg_ARADDR_1,
    Dbg_ARVALID_1,
    Dbg_ARREADY_1,
    Dbg_RDATA_1,
    Dbg_RRESP_1,
    Dbg_RVALID_1,
    Dbg_RREADY_1,
    Dbg_Disable_2,
    Dbg_Clk_2,
    Dbg_TDI_2,
    Dbg_TDO_2,
    Dbg_Reg_En_2,
    Dbg_Capture_2,
    Dbg_Shift_2,
    Dbg_Update_2,
    Dbg_Rst_2,
    Dbg_Trig_In_2,
    Dbg_Trig_Ack_In_2,
    Dbg_Trig_Out_2,
    Dbg_Trig_Ack_Out_2,
    Dbg_TrClk_2,
    Dbg_TrData_2,
    Dbg_TrReady_2,
    Dbg_TrValid_2,
    Dbg_AWADDR_2,
    Dbg_AWVALID_2,
    Dbg_AWREADY_2,
    Dbg_WDATA_2,
    Dbg_WVALID_2,
    Dbg_WREADY_2,
    Dbg_BRESP_2,
    Dbg_BVALID_2,
    Dbg_BREADY_2,
    Dbg_ARADDR_2,
    Dbg_ARVALID_2,
    Dbg_ARREADY_2,
    Dbg_RDATA_2,
    Dbg_RRESP_2,
    Dbg_RVALID_2,
    Dbg_RREADY_2,
    Dbg_Disable_3,
    Dbg_Clk_3,
    Dbg_TDI_3,
    Dbg_TDO_3,
    Dbg_Reg_En_3,
    Dbg_Capture_3,
    Dbg_Shift_3,
    Dbg_Update_3,
    Dbg_Rst_3,
    Dbg_Trig_In_3,
    Dbg_Trig_Ack_In_3,
    Dbg_Trig_Out_3,
    Dbg_Trig_Ack_Out_3,
    Dbg_TrClk_3,
    Dbg_TrData_3,
    Dbg_TrReady_3,
    Dbg_TrValid_3,
    Dbg_AWADDR_3,
    Dbg_AWVALID_3,
    Dbg_AWREADY_3,
    Dbg_WDATA_3,
    Dbg_WVALID_3,
    Dbg_WREADY_3,
    Dbg_BRESP_3,
    Dbg_BVALID_3,
    Dbg_BREADY_3,
    Dbg_ARADDR_3,
    Dbg_ARVALID_3,
    Dbg_ARREADY_3,
    Dbg_RDATA_3,
    Dbg_RRESP_3,
    Dbg_RVALID_3,
    Dbg_RREADY_3,
    Dbg_Disable_4,
    Dbg_Clk_4,
    Dbg_TDI_4,
    Dbg_TDO_4,
    Dbg_Reg_En_4,
    Dbg_Capture_4,
    Dbg_Shift_4,
    Dbg_Update_4,
    Dbg_Rst_4,
    Dbg_Trig_In_4,
    Dbg_Trig_Ack_In_4,
    Dbg_Trig_Out_4,
    Dbg_Trig_Ack_Out_4,
    Dbg_TrClk_4,
    Dbg_TrData_4,
    Dbg_TrReady_4,
    Dbg_TrValid_4,
    Dbg_AWADDR_4,
    Dbg_AWVALID_4,
    Dbg_AWREADY_4,
    Dbg_WDATA_4,
    Dbg_WVALID_4,
    Dbg_WREADY_4,
    Dbg_BRESP_4,
    Dbg_BVALID_4,
    Dbg_BREADY_4,
    Dbg_ARADDR_4,
    Dbg_ARVALID_4,
    Dbg_ARREADY_4,
    Dbg_RDATA_4,
    Dbg_RRESP_4,
    Dbg_RVALID_4,
    Dbg_RREADY_4,
    Dbg_Disable_5,
    Dbg_Clk_5,
    Dbg_TDI_5,
    Dbg_TDO_5,
    Dbg_Reg_En_5,
    Dbg_Capture_5,
    Dbg_Shift_5,
    Dbg_Update_5,
    Dbg_Rst_5,
    Dbg_Trig_In_5,
    Dbg_Trig_Ack_In_5,
    Dbg_Trig_Out_5,
    Dbg_Trig_Ack_Out_5,
    Dbg_TrClk_5,
    Dbg_TrData_5,
    Dbg_TrReady_5,
    Dbg_TrValid_5,
    Dbg_AWADDR_5,
    Dbg_AWVALID_5,
    Dbg_AWREADY_5,
    Dbg_WDATA_5,
    Dbg_WVALID_5,
    Dbg_WREADY_5,
    Dbg_BRESP_5,
    Dbg_BVALID_5,
    Dbg_BREADY_5,
    Dbg_ARADDR_5,
    Dbg_ARVALID_5,
    Dbg_ARREADY_5,
    Dbg_RDATA_5,
    Dbg_RRESP_5,
    Dbg_RVALID_5,
    Dbg_RREADY_5,
    Dbg_Disable_6,
    Dbg_Clk_6,
    Dbg_TDI_6,
    Dbg_TDO_6,
    Dbg_Reg_En_6,
    Dbg_Capture_6,
    Dbg_Shift_6,
    Dbg_Update_6,
    Dbg_Rst_6,
    Dbg_Trig_In_6,
    Dbg_Trig_Ack_In_6,
    Dbg_Trig_Out_6,
    Dbg_Trig_Ack_Out_6,
    Dbg_TrClk_6,
    Dbg_TrData_6,
    Dbg_TrReady_6,
    Dbg_TrValid_6,
    Dbg_AWADDR_6,
    Dbg_AWVALID_6,
    Dbg_AWREADY_6,
    Dbg_WDATA_6,
    Dbg_WVALID_6,
    Dbg_WREADY_6,
    Dbg_BRESP_6,
    Dbg_BVALID_6,
    Dbg_BREADY_6,
    Dbg_ARADDR_6,
    Dbg_ARVALID_6,
    Dbg_ARREADY_6,
    Dbg_RDATA_6,
    Dbg_RRESP_6,
    Dbg_RVALID_6,
    Dbg_RREADY_6,
    Dbg_Disable_7,
    Dbg_Clk_7,
    Dbg_TDI_7,
    Dbg_TDO_7,
    Dbg_Reg_En_7,
    Dbg_Capture_7,
    Dbg_Shift_7,
    Dbg_Update_7,
    Dbg_Rst_7,
    Dbg_Trig_In_7,
    Dbg_Trig_Ack_In_7,
    Dbg_Trig_Out_7,
    Dbg_Trig_Ack_Out_7,
    Dbg_TrClk_7,
    Dbg_TrData_7,
    Dbg_TrReady_7,
    Dbg_TrValid_7,
    Dbg_AWADDR_7,
    Dbg_AWVALID_7,
    Dbg_AWREADY_7,
    Dbg_WDATA_7,
    Dbg_WVALID_7,
    Dbg_WREADY_7,
    Dbg_BRESP_7,
    Dbg_BVALID_7,
    Dbg_BREADY_7,
    Dbg_ARADDR_7,
    Dbg_ARVALID_7,
    Dbg_ARREADY_7,
    Dbg_RDATA_7,
    Dbg_RRESP_7,
    Dbg_RVALID_7,
    Dbg_RREADY_7,
    Dbg_Disable_8,
    Dbg_Clk_8,
    Dbg_TDI_8,
    Dbg_TDO_8,
    Dbg_Reg_En_8,
    Dbg_Capture_8,
    Dbg_Shift_8,
    Dbg_Update_8,
    Dbg_Rst_8,
    Dbg_Trig_In_8,
    Dbg_Trig_Ack_In_8,
    Dbg_Trig_Out_8,
    Dbg_Trig_Ack_Out_8,
    Dbg_TrClk_8,
    Dbg_TrData_8,
    Dbg_TrReady_8,
    Dbg_TrValid_8,
    Dbg_AWADDR_8,
    Dbg_AWVALID_8,
    Dbg_AWREADY_8,
    Dbg_WDATA_8,
    Dbg_WVALID_8,
    Dbg_WREADY_8,
    Dbg_BRESP_8,
    Dbg_BVALID_8,
    Dbg_BREADY_8,
    Dbg_ARADDR_8,
    Dbg_ARVALID_8,
    Dbg_ARREADY_8,
    Dbg_RDATA_8,
    Dbg_RRESP_8,
    Dbg_RVALID_8,
    Dbg_RREADY_8,
    Dbg_Disable_9,
    Dbg_Clk_9,
    Dbg_TDI_9,
    Dbg_TDO_9,
    Dbg_Reg_En_9,
    Dbg_Capture_9,
    Dbg_Shift_9,
    Dbg_Update_9,
    Dbg_Rst_9,
    Dbg_Trig_In_9,
    Dbg_Trig_Ack_In_9,
    Dbg_Trig_Out_9,
    Dbg_Trig_Ack_Out_9,
    Dbg_TrClk_9,
    Dbg_TrData_9,
    Dbg_TrReady_9,
    Dbg_TrValid_9,
    Dbg_AWADDR_9,
    Dbg_AWVALID_9,
    Dbg_AWREADY_9,
    Dbg_WDATA_9,
    Dbg_WVALID_9,
    Dbg_WREADY_9,
    Dbg_BRESP_9,
    Dbg_BVALID_9,
    Dbg_BREADY_9,
    Dbg_ARADDR_9,
    Dbg_ARVALID_9,
    Dbg_ARREADY_9,
    Dbg_RDATA_9,
    Dbg_RRESP_9,
    Dbg_RVALID_9,
    Dbg_RREADY_9,
    Dbg_Disable_10,
    Dbg_Clk_10,
    Dbg_TDI_10,
    Dbg_TDO_10,
    Dbg_Reg_En_10,
    Dbg_Capture_10,
    Dbg_Shift_10,
    Dbg_Update_10,
    Dbg_Rst_10,
    Dbg_Trig_In_10,
    Dbg_Trig_Ack_In_10,
    Dbg_Trig_Out_10,
    Dbg_Trig_Ack_Out_10,
    Dbg_TrClk_10,
    Dbg_TrData_10,
    Dbg_TrReady_10,
    Dbg_TrValid_10,
    Dbg_AWADDR_10,
    Dbg_AWVALID_10,
    Dbg_AWREADY_10,
    Dbg_WDATA_10,
    Dbg_WVALID_10,
    Dbg_WREADY_10,
    Dbg_BRESP_10,
    Dbg_BVALID_10,
    Dbg_BREADY_10,
    Dbg_ARADDR_10,
    Dbg_ARVALID_10,
    Dbg_ARREADY_10,
    Dbg_RDATA_10,
    Dbg_RRESP_10,
    Dbg_RVALID_10,
    Dbg_RREADY_10,
    Dbg_Disable_11,
    Dbg_Clk_11,
    Dbg_TDI_11,
    Dbg_TDO_11,
    Dbg_Reg_En_11,
    Dbg_Capture_11,
    Dbg_Shift_11,
    Dbg_Update_11,
    Dbg_Rst_11,
    Dbg_Trig_In_11,
    Dbg_Trig_Ack_In_11,
    Dbg_Trig_Out_11,
    Dbg_Trig_Ack_Out_11,
    Dbg_TrClk_11,
    Dbg_TrData_11,
    Dbg_TrReady_11,
    Dbg_TrValid_11,
    Dbg_AWADDR_11,
    Dbg_AWVALID_11,
    Dbg_AWREADY_11,
    Dbg_WDATA_11,
    Dbg_WVALID_11,
    Dbg_WREADY_11,
    Dbg_BRESP_11,
    Dbg_BVALID_11,
    Dbg_BREADY_11,
    Dbg_ARADDR_11,
    Dbg_ARVALID_11,
    Dbg_ARREADY_11,
    Dbg_RDATA_11,
    Dbg_RRESP_11,
    Dbg_RVALID_11,
    Dbg_RREADY_11,
    Dbg_Disable_12,
    Dbg_Clk_12,
    Dbg_TDI_12,
    Dbg_TDO_12,
    Dbg_Reg_En_12,
    Dbg_Capture_12,
    Dbg_Shift_12,
    Dbg_Update_12,
    Dbg_Rst_12,
    Dbg_Trig_In_12,
    Dbg_Trig_Ack_In_12,
    Dbg_Trig_Out_12,
    Dbg_Trig_Ack_Out_12,
    Dbg_TrClk_12,
    Dbg_TrData_12,
    Dbg_TrReady_12,
    Dbg_TrValid_12,
    Dbg_AWADDR_12,
    Dbg_AWVALID_12,
    Dbg_AWREADY_12,
    Dbg_WDATA_12,
    Dbg_WVALID_12,
    Dbg_WREADY_12,
    Dbg_BRESP_12,
    Dbg_BVALID_12,
    Dbg_BREADY_12,
    Dbg_ARADDR_12,
    Dbg_ARVALID_12,
    Dbg_ARREADY_12,
    Dbg_RDATA_12,
    Dbg_RRESP_12,
    Dbg_RVALID_12,
    Dbg_RREADY_12,
    Dbg_Disable_13,
    Dbg_Clk_13,
    Dbg_TDI_13,
    Dbg_TDO_13,
    Dbg_Reg_En_13,
    Dbg_Capture_13,
    Dbg_Shift_13,
    Dbg_Update_13,
    Dbg_Rst_13,
    Dbg_Trig_In_13,
    Dbg_Trig_Ack_In_13,
    Dbg_Trig_Out_13,
    Dbg_Trig_Ack_Out_13,
    Dbg_TrClk_13,
    Dbg_TrData_13,
    Dbg_TrReady_13,
    Dbg_TrValid_13,
    Dbg_AWADDR_13,
    Dbg_AWVALID_13,
    Dbg_AWREADY_13,
    Dbg_WDATA_13,
    Dbg_WVALID_13,
    Dbg_WREADY_13,
    Dbg_BRESP_13,
    Dbg_BVALID_13,
    Dbg_BREADY_13,
    Dbg_ARADDR_13,
    Dbg_ARVALID_13,
    Dbg_ARREADY_13,
    Dbg_RDATA_13,
    Dbg_RRESP_13,
    Dbg_RVALID_13,
    Dbg_RREADY_13,
    Dbg_Disable_14,
    Dbg_Clk_14,
    Dbg_TDI_14,
    Dbg_TDO_14,
    Dbg_Reg_En_14,
    Dbg_Capture_14,
    Dbg_Shift_14,
    Dbg_Update_14,
    Dbg_Rst_14,
    Dbg_Trig_In_14,
    Dbg_Trig_Ack_In_14,
    Dbg_Trig_Out_14,
    Dbg_Trig_Ack_Out_14,
    Dbg_TrClk_14,
    Dbg_TrData_14,
    Dbg_TrReady_14,
    Dbg_TrValid_14,
    Dbg_AWADDR_14,
    Dbg_AWVALID_14,
    Dbg_AWREADY_14,
    Dbg_WDATA_14,
    Dbg_WVALID_14,
    Dbg_WREADY_14,
    Dbg_BRESP_14,
    Dbg_BVALID_14,
    Dbg_BREADY_14,
    Dbg_ARADDR_14,
    Dbg_ARVALID_14,
    Dbg_ARREADY_14,
    Dbg_RDATA_14,
    Dbg_RRESP_14,
    Dbg_RVALID_14,
    Dbg_RREADY_14,
    Dbg_Disable_15,
    Dbg_Clk_15,
    Dbg_TDI_15,
    Dbg_TDO_15,
    Dbg_Reg_En_15,
    Dbg_Capture_15,
    Dbg_Shift_15,
    Dbg_Update_15,
    Dbg_Rst_15,
    Dbg_Trig_In_15,
    Dbg_Trig_Ack_In_15,
    Dbg_Trig_Out_15,
    Dbg_Trig_Ack_Out_15,
    Dbg_TrClk_15,
    Dbg_TrData_15,
    Dbg_TrReady_15,
    Dbg_TrValid_15,
    Dbg_AWADDR_15,
    Dbg_AWVALID_15,
    Dbg_AWREADY_15,
    Dbg_WDATA_15,
    Dbg_WVALID_15,
    Dbg_WREADY_15,
    Dbg_BRESP_15,
    Dbg_BVALID_15,
    Dbg_BREADY_15,
    Dbg_ARADDR_15,
    Dbg_ARVALID_15,
    Dbg_ARREADY_15,
    Dbg_RDATA_15,
    Dbg_RRESP_15,
    Dbg_RVALID_15,
    Dbg_RREADY_15,
    Dbg_Disable_16,
    Dbg_Clk_16,
    Dbg_TDI_16,
    Dbg_TDO_16,
    Dbg_Reg_En_16,
    Dbg_Capture_16,
    Dbg_Shift_16,
    Dbg_Update_16,
    Dbg_Rst_16,
    Dbg_Trig_In_16,
    Dbg_Trig_Ack_In_16,
    Dbg_Trig_Out_16,
    Dbg_Trig_Ack_Out_16,
    Dbg_TrClk_16,
    Dbg_TrData_16,
    Dbg_TrReady_16,
    Dbg_TrValid_16,
    Dbg_AWADDR_16,
    Dbg_AWVALID_16,
    Dbg_AWREADY_16,
    Dbg_WDATA_16,
    Dbg_WVALID_16,
    Dbg_WREADY_16,
    Dbg_BRESP_16,
    Dbg_BVALID_16,
    Dbg_BREADY_16,
    Dbg_ARADDR_16,
    Dbg_ARVALID_16,
    Dbg_ARREADY_16,
    Dbg_RDATA_16,
    Dbg_RRESP_16,
    Dbg_RVALID_16,
    Dbg_RREADY_16,
    Dbg_Disable_17,
    Dbg_Clk_17,
    Dbg_TDI_17,
    Dbg_TDO_17,
    Dbg_Reg_En_17,
    Dbg_Capture_17,
    Dbg_Shift_17,
    Dbg_Update_17,
    Dbg_Rst_17,
    Dbg_Trig_In_17,
    Dbg_Trig_Ack_In_17,
    Dbg_Trig_Out_17,
    Dbg_Trig_Ack_Out_17,
    Dbg_TrClk_17,
    Dbg_TrData_17,
    Dbg_TrReady_17,
    Dbg_TrValid_17,
    Dbg_AWADDR_17,
    Dbg_AWVALID_17,
    Dbg_AWREADY_17,
    Dbg_WDATA_17,
    Dbg_WVALID_17,
    Dbg_WREADY_17,
    Dbg_BRESP_17,
    Dbg_BVALID_17,
    Dbg_BREADY_17,
    Dbg_ARADDR_17,
    Dbg_ARVALID_17,
    Dbg_ARREADY_17,
    Dbg_RDATA_17,
    Dbg_RRESP_17,
    Dbg_RVALID_17,
    Dbg_RREADY_17,
    Dbg_Disable_18,
    Dbg_Clk_18,
    Dbg_TDI_18,
    Dbg_TDO_18,
    Dbg_Reg_En_18,
    Dbg_Capture_18,
    Dbg_Shift_18,
    Dbg_Update_18,
    Dbg_Rst_18,
    Dbg_Trig_In_18,
    Dbg_Trig_Ack_In_18,
    Dbg_Trig_Out_18,
    Dbg_Trig_Ack_Out_18,
    Dbg_TrClk_18,
    Dbg_TrData_18,
    Dbg_TrReady_18,
    Dbg_TrValid_18,
    Dbg_AWADDR_18,
    Dbg_AWVALID_18,
    Dbg_AWREADY_18,
    Dbg_WDATA_18,
    Dbg_WVALID_18,
    Dbg_WREADY_18,
    Dbg_BRESP_18,
    Dbg_BVALID_18,
    Dbg_BREADY_18,
    Dbg_ARADDR_18,
    Dbg_ARVALID_18,
    Dbg_ARREADY_18,
    Dbg_RDATA_18,
    Dbg_RRESP_18,
    Dbg_RVALID_18,
    Dbg_RREADY_18,
    Dbg_Disable_19,
    Dbg_Clk_19,
    Dbg_TDI_19,
    Dbg_TDO_19,
    Dbg_Reg_En_19,
    Dbg_Capture_19,
    Dbg_Shift_19,
    Dbg_Update_19,
    Dbg_Rst_19,
    Dbg_Trig_In_19,
    Dbg_Trig_Ack_In_19,
    Dbg_Trig_Out_19,
    Dbg_Trig_Ack_Out_19,
    Dbg_TrClk_19,
    Dbg_TrData_19,
    Dbg_TrReady_19,
    Dbg_TrValid_19,
    Dbg_AWADDR_19,
    Dbg_AWVALID_19,
    Dbg_AWREADY_19,
    Dbg_WDATA_19,
    Dbg_WVALID_19,
    Dbg_WREADY_19,
    Dbg_BRESP_19,
    Dbg_BVALID_19,
    Dbg_BREADY_19,
    Dbg_ARADDR_19,
    Dbg_ARVALID_19,
    Dbg_ARREADY_19,
    Dbg_RDATA_19,
    Dbg_RRESP_19,
    Dbg_RVALID_19,
    Dbg_RREADY_19,
    Dbg_Disable_20,
    Dbg_Clk_20,
    Dbg_TDI_20,
    Dbg_TDO_20,
    Dbg_Reg_En_20,
    Dbg_Capture_20,
    Dbg_Shift_20,
    Dbg_Update_20,
    Dbg_Rst_20,
    Dbg_Trig_In_20,
    Dbg_Trig_Ack_In_20,
    Dbg_Trig_Out_20,
    Dbg_Trig_Ack_Out_20,
    Dbg_TrClk_20,
    Dbg_TrData_20,
    Dbg_TrReady_20,
    Dbg_TrValid_20,
    Dbg_AWADDR_20,
    Dbg_AWVALID_20,
    Dbg_AWREADY_20,
    Dbg_WDATA_20,
    Dbg_WVALID_20,
    Dbg_WREADY_20,
    Dbg_BRESP_20,
    Dbg_BVALID_20,
    Dbg_BREADY_20,
    Dbg_ARADDR_20,
    Dbg_ARVALID_20,
    Dbg_ARREADY_20,
    Dbg_RDATA_20,
    Dbg_RRESP_20,
    Dbg_RVALID_20,
    Dbg_RREADY_20,
    Dbg_Disable_21,
    Dbg_Clk_21,
    Dbg_TDI_21,
    Dbg_TDO_21,
    Dbg_Reg_En_21,
    Dbg_Capture_21,
    Dbg_Shift_21,
    Dbg_Update_21,
    Dbg_Rst_21,
    Dbg_Trig_In_21,
    Dbg_Trig_Ack_In_21,
    Dbg_Trig_Out_21,
    Dbg_Trig_Ack_Out_21,
    Dbg_TrClk_21,
    Dbg_TrData_21,
    Dbg_TrReady_21,
    Dbg_TrValid_21,
    Dbg_AWADDR_21,
    Dbg_AWVALID_21,
    Dbg_AWREADY_21,
    Dbg_WDATA_21,
    Dbg_WVALID_21,
    Dbg_WREADY_21,
    Dbg_BRESP_21,
    Dbg_BVALID_21,
    Dbg_BREADY_21,
    Dbg_ARADDR_21,
    Dbg_ARVALID_21,
    Dbg_ARREADY_21,
    Dbg_RDATA_21,
    Dbg_RRESP_21,
    Dbg_RVALID_21,
    Dbg_RREADY_21,
    Dbg_Disable_22,
    Dbg_Clk_22,
    Dbg_TDI_22,
    Dbg_TDO_22,
    Dbg_Reg_En_22,
    Dbg_Capture_22,
    Dbg_Shift_22,
    Dbg_Update_22,
    Dbg_Rst_22,
    Dbg_Trig_In_22,
    Dbg_Trig_Ack_In_22,
    Dbg_Trig_Out_22,
    Dbg_Trig_Ack_Out_22,
    Dbg_TrClk_22,
    Dbg_TrData_22,
    Dbg_TrReady_22,
    Dbg_TrValid_22,
    Dbg_AWADDR_22,
    Dbg_AWVALID_22,
    Dbg_AWREADY_22,
    Dbg_WDATA_22,
    Dbg_WVALID_22,
    Dbg_WREADY_22,
    Dbg_BRESP_22,
    Dbg_BVALID_22,
    Dbg_BREADY_22,
    Dbg_ARADDR_22,
    Dbg_ARVALID_22,
    Dbg_ARREADY_22,
    Dbg_RDATA_22,
    Dbg_RRESP_22,
    Dbg_RVALID_22,
    Dbg_RREADY_22,
    Dbg_Disable_23,
    Dbg_Clk_23,
    Dbg_TDI_23,
    Dbg_TDO_23,
    Dbg_Reg_En_23,
    Dbg_Capture_23,
    Dbg_Shift_23,
    Dbg_Update_23,
    Dbg_Rst_23,
    Dbg_Trig_In_23,
    Dbg_Trig_Ack_In_23,
    Dbg_Trig_Out_23,
    Dbg_Trig_Ack_Out_23,
    Dbg_TrClk_23,
    Dbg_TrData_23,
    Dbg_TrReady_23,
    Dbg_TrValid_23,
    Dbg_AWADDR_23,
    Dbg_AWVALID_23,
    Dbg_AWREADY_23,
    Dbg_WDATA_23,
    Dbg_WVALID_23,
    Dbg_WREADY_23,
    Dbg_BRESP_23,
    Dbg_BVALID_23,
    Dbg_BREADY_23,
    Dbg_ARADDR_23,
    Dbg_ARVALID_23,
    Dbg_ARREADY_23,
    Dbg_RDATA_23,
    Dbg_RRESP_23,
    Dbg_RVALID_23,
    Dbg_RREADY_23,
    Dbg_Disable_24,
    Dbg_Clk_24,
    Dbg_TDI_24,
    Dbg_TDO_24,
    Dbg_Reg_En_24,
    Dbg_Capture_24,
    Dbg_Shift_24,
    Dbg_Update_24,
    Dbg_Rst_24,
    Dbg_Trig_In_24,
    Dbg_Trig_Ack_In_24,
    Dbg_Trig_Out_24,
    Dbg_Trig_Ack_Out_24,
    Dbg_TrClk_24,
    Dbg_TrData_24,
    Dbg_TrReady_24,
    Dbg_TrValid_24,
    Dbg_AWADDR_24,
    Dbg_AWVALID_24,
    Dbg_AWREADY_24,
    Dbg_WDATA_24,
    Dbg_WVALID_24,
    Dbg_WREADY_24,
    Dbg_BRESP_24,
    Dbg_BVALID_24,
    Dbg_BREADY_24,
    Dbg_ARADDR_24,
    Dbg_ARVALID_24,
    Dbg_ARREADY_24,
    Dbg_RDATA_24,
    Dbg_RRESP_24,
    Dbg_RVALID_24,
    Dbg_RREADY_24,
    Dbg_Disable_25,
    Dbg_Clk_25,
    Dbg_TDI_25,
    Dbg_TDO_25,
    Dbg_Reg_En_25,
    Dbg_Capture_25,
    Dbg_Shift_25,
    Dbg_Update_25,
    Dbg_Rst_25,
    Dbg_Trig_In_25,
    Dbg_Trig_Ack_In_25,
    Dbg_Trig_Out_25,
    Dbg_Trig_Ack_Out_25,
    Dbg_TrClk_25,
    Dbg_TrData_25,
    Dbg_TrReady_25,
    Dbg_TrValid_25,
    Dbg_AWADDR_25,
    Dbg_AWVALID_25,
    Dbg_AWREADY_25,
    Dbg_WDATA_25,
    Dbg_WVALID_25,
    Dbg_WREADY_25,
    Dbg_BRESP_25,
    Dbg_BVALID_25,
    Dbg_BREADY_25,
    Dbg_ARADDR_25,
    Dbg_ARVALID_25,
    Dbg_ARREADY_25,
    Dbg_RDATA_25,
    Dbg_RRESP_25,
    Dbg_RVALID_25,
    Dbg_RREADY_25,
    Dbg_Disable_26,
    Dbg_Clk_26,
    Dbg_TDI_26,
    Dbg_TDO_26,
    Dbg_Reg_En_26,
    Dbg_Capture_26,
    Dbg_Shift_26,
    Dbg_Update_26,
    Dbg_Rst_26,
    Dbg_Trig_In_26,
    Dbg_Trig_Ack_In_26,
    Dbg_Trig_Out_26,
    Dbg_Trig_Ack_Out_26,
    Dbg_TrClk_26,
    Dbg_TrData_26,
    Dbg_TrReady_26,
    Dbg_TrValid_26,
    Dbg_AWADDR_26,
    Dbg_AWVALID_26,
    Dbg_AWREADY_26,
    Dbg_WDATA_26,
    Dbg_WVALID_26,
    Dbg_WREADY_26,
    Dbg_BRESP_26,
    Dbg_BVALID_26,
    Dbg_BREADY_26,
    Dbg_ARADDR_26,
    Dbg_ARVALID_26,
    Dbg_ARREADY_26,
    Dbg_RDATA_26,
    Dbg_RRESP_26,
    Dbg_RVALID_26,
    Dbg_RREADY_26,
    Dbg_Disable_27,
    Dbg_Clk_27,
    Dbg_TDI_27,
    Dbg_TDO_27,
    Dbg_Reg_En_27,
    Dbg_Capture_27,
    Dbg_Shift_27,
    Dbg_Update_27,
    Dbg_Rst_27,
    Dbg_Trig_In_27,
    Dbg_Trig_Ack_In_27,
    Dbg_Trig_Out_27,
    Dbg_Trig_Ack_Out_27,
    Dbg_TrClk_27,
    Dbg_TrData_27,
    Dbg_TrReady_27,
    Dbg_TrValid_27,
    Dbg_AWADDR_27,
    Dbg_AWVALID_27,
    Dbg_AWREADY_27,
    Dbg_WDATA_27,
    Dbg_WVALID_27,
    Dbg_WREADY_27,
    Dbg_BRESP_27,
    Dbg_BVALID_27,
    Dbg_BREADY_27,
    Dbg_ARADDR_27,
    Dbg_ARVALID_27,
    Dbg_ARREADY_27,
    Dbg_RDATA_27,
    Dbg_RRESP_27,
    Dbg_RVALID_27,
    Dbg_RREADY_27,
    Dbg_Disable_28,
    Dbg_Clk_28,
    Dbg_TDI_28,
    Dbg_TDO_28,
    Dbg_Reg_En_28,
    Dbg_Capture_28,
    Dbg_Shift_28,
    Dbg_Update_28,
    Dbg_Rst_28,
    Dbg_Trig_In_28,
    Dbg_Trig_Ack_In_28,
    Dbg_Trig_Out_28,
    Dbg_Trig_Ack_Out_28,
    Dbg_TrClk_28,
    Dbg_TrData_28,
    Dbg_TrReady_28,
    Dbg_TrValid_28,
    Dbg_AWADDR_28,
    Dbg_AWVALID_28,
    Dbg_AWREADY_28,
    Dbg_WDATA_28,
    Dbg_WVALID_28,
    Dbg_WREADY_28,
    Dbg_BRESP_28,
    Dbg_BVALID_28,
    Dbg_BREADY_28,
    Dbg_ARADDR_28,
    Dbg_ARVALID_28,
    Dbg_ARREADY_28,
    Dbg_RDATA_28,
    Dbg_RRESP_28,
    Dbg_RVALID_28,
    Dbg_RREADY_28,
    Dbg_Disable_29,
    Dbg_Clk_29,
    Dbg_TDI_29,
    Dbg_TDO_29,
    Dbg_Reg_En_29,
    Dbg_Capture_29,
    Dbg_Shift_29,
    Dbg_Update_29,
    Dbg_Rst_29,
    Dbg_Trig_In_29,
    Dbg_Trig_Ack_In_29,
    Dbg_Trig_Out_29,
    Dbg_Trig_Ack_Out_29,
    Dbg_TrClk_29,
    Dbg_TrData_29,
    Dbg_TrReady_29,
    Dbg_TrValid_29,
    Dbg_AWADDR_29,
    Dbg_AWVALID_29,
    Dbg_AWREADY_29,
    Dbg_WDATA_29,
    Dbg_WVALID_29,
    Dbg_WREADY_29,
    Dbg_BRESP_29,
    Dbg_BVALID_29,
    Dbg_BREADY_29,
    Dbg_ARADDR_29,
    Dbg_ARVALID_29,
    Dbg_ARREADY_29,
    Dbg_RDATA_29,
    Dbg_RRESP_29,
    Dbg_RVALID_29,
    Dbg_RREADY_29,
    Dbg_Disable_30,
    Dbg_Clk_30,
    Dbg_TDI_30,
    Dbg_TDO_30,
    Dbg_Reg_En_30,
    Dbg_Capture_30,
    Dbg_Shift_30,
    Dbg_Update_30,
    Dbg_Rst_30,
    Dbg_Trig_In_30,
    Dbg_Trig_Ack_In_30,
    Dbg_Trig_Out_30,
    Dbg_Trig_Ack_Out_30,
    Dbg_TrClk_30,
    Dbg_TrData_30,
    Dbg_TrReady_30,
    Dbg_TrValid_30,
    Dbg_AWADDR_30,
    Dbg_AWVALID_30,
    Dbg_AWREADY_30,
    Dbg_WDATA_30,
    Dbg_WVALID_30,
    Dbg_WREADY_30,
    Dbg_BRESP_30,
    Dbg_BVALID_30,
    Dbg_BREADY_30,
    Dbg_ARADDR_30,
    Dbg_ARVALID_30,
    Dbg_ARREADY_30,
    Dbg_RDATA_30,
    Dbg_RRESP_30,
    Dbg_RVALID_30,
    Dbg_RREADY_30,
    Dbg_Disable_31,
    Dbg_Clk_31,
    Dbg_TDI_31,
    Dbg_TDO_31,
    Dbg_Reg_En_31,
    Dbg_Capture_31,
    Dbg_Shift_31,
    Dbg_Update_31,
    Dbg_Rst_31,
    Dbg_Trig_In_31,
    Dbg_Trig_Ack_In_31,
    Dbg_Trig_Out_31,
    Dbg_Trig_Ack_Out_31,
    Dbg_TrClk_31,
    Dbg_TrData_31,
    Dbg_TrReady_31,
    Dbg_TrValid_31,
    Dbg_AWADDR_31,
    Dbg_AWVALID_31,
    Dbg_AWREADY_31,
    Dbg_WDATA_31,
    Dbg_WVALID_31,
    Dbg_WREADY_31,
    Dbg_BRESP_31,
    Dbg_BVALID_31,
    Dbg_BREADY_31,
    Dbg_ARADDR_31,
    Dbg_ARVALID_31,
    Dbg_ARREADY_31,
    Dbg_RDATA_31,
    Dbg_RRESP_31,
    Dbg_RVALID_31,
    Dbg_RREADY_31,
    bscan_ext_tdi,
    bscan_ext_reset,
    bscan_ext_shift,
    bscan_ext_update,
    bscan_ext_capture,
    bscan_ext_sel,
    bscan_ext_drck,
    bscan_ext_tdo,
    bscan_ext_tck,
    bscan_ext_tms,
    bscan_ext_bscanid_en,
    Ext_JTAG_DRCK,
    Ext_JTAG_RESET,
    Ext_JTAG_SEL,
    Ext_JTAG_CAPTURE,
    Ext_JTAG_SHIFT,
    Ext_JTAG_UPDATE,
    Ext_JTAG_TDI,
    Ext_JTAG_TDO);
  input Config_Reset;
  input Scan_Reset_Sel;
  input Scan_Reset;
  input Scan_En;
  input S_AXI_ACLK;
  input S_AXI_ARESETN;
  input M_AXI_ACLK;
  input M_AXI_ARESETN;
  input M_AXIS_ACLK;
  input M_AXIS_ARESETN;
  output Interrupt;
  output Ext_BRK;
  output Ext_NM_BRK;
  output Debug_SYS_Rst;
  input Trig_In_0;
  output Trig_Ack_In_0;
  output Trig_Out_0;
  input Trig_Ack_Out_0;
  input Trig_In_1;
  output Trig_Ack_In_1;
  output Trig_Out_1;
  input Trig_Ack_Out_1;
  input Trig_In_2;
  output Trig_Ack_In_2;
  output Trig_Out_2;
  input Trig_Ack_Out_2;
  input Trig_In_3;
  output Trig_Ack_In_3;
  output Trig_Out_3;
  input Trig_Ack_Out_3;
  input [3:0]S_AXI_AWADDR;
  input S_AXI_AWVALID;
  output S_AXI_AWREADY;
  input [31:0]S_AXI_WDATA;
  input [3:0]S_AXI_WSTRB;
  input S_AXI_WVALID;
  output S_AXI_WREADY;
  output [1:0]S_AXI_BRESP;
  output S_AXI_BVALID;
  input S_AXI_BREADY;
  input [3:0]S_AXI_ARADDR;
  input S_AXI_ARVALID;
  output S_AXI_ARREADY;
  output [31:0]S_AXI_RDATA;
  output [1:0]S_AXI_RRESP;
  output S_AXI_RVALID;
  input S_AXI_RREADY;
  output [0:0]M_AXI_AWID;
  output [31:0]M_AXI_AWADDR;
  output [7:0]M_AXI_AWLEN;
  output [2:0]M_AXI_AWSIZE;
  output [1:0]M_AXI_AWBURST;
  output M_AXI_AWLOCK;
  output [3:0]M_AXI_AWCACHE;
  output [2:0]M_AXI_AWPROT;
  output [3:0]M_AXI_AWQOS;
  output M_AXI_AWVALID;
  input M_AXI_AWREADY;
  output [31:0]M_AXI_WDATA;
  output [3:0]M_AXI_WSTRB;
  output M_AXI_WLAST;
  output M_AXI_WVALID;
  input M_AXI_WREADY;
  input [1:0]M_AXI_BRESP;
  input [0:0]M_AXI_BID;
  input M_AXI_BVALID;
  output M_AXI_BREADY;
  output [0:0]M_AXI_ARID;
  output [31:0]M_AXI_ARADDR;
  output [7:0]M_AXI_ARLEN;
  output [2:0]M_AXI_ARSIZE;
  output [1:0]M_AXI_ARBURST;
  output M_AXI_ARLOCK;
  output [3:0]M_AXI_ARCACHE;
  output [2:0]M_AXI_ARPROT;
  output [3:0]M_AXI_ARQOS;
  output M_AXI_ARVALID;
  input M_AXI_ARREADY;
  input [0:0]M_AXI_RID;
  input [31:0]M_AXI_RDATA;
  input [1:0]M_AXI_RRESP;
  input M_AXI_RLAST;
  input M_AXI_RVALID;
  output M_AXI_RREADY;
  output [0:31]LMB_Data_Addr_0;
  input [0:31]LMB_Data_Read_0;
  output [0:31]LMB_Data_Write_0;
  output LMB_Addr_Strobe_0;
  output LMB_Read_Strobe_0;
  output LMB_Write_Strobe_0;
  input LMB_Ready_0;
  input LMB_Wait_0;
  input LMB_CE_0;
  input LMB_UE_0;
  output [0:3]LMB_Byte_Enable_0;
  output [0:31]LMB_Data_Addr_1;
  input [0:31]LMB_Data_Read_1;
  output [0:31]LMB_Data_Write_1;
  output LMB_Addr_Strobe_1;
  output LMB_Read_Strobe_1;
  output LMB_Write_Strobe_1;
  input LMB_Ready_1;
  input LMB_Wait_1;
  input LMB_CE_1;
  input LMB_UE_1;
  output [0:3]LMB_Byte_Enable_1;
  output [0:31]LMB_Data_Addr_2;
  input [0:31]LMB_Data_Read_2;
  output [0:31]LMB_Data_Write_2;
  output LMB_Addr_Strobe_2;
  output LMB_Read_Strobe_2;
  output LMB_Write_Strobe_2;
  input LMB_Ready_2;
  input LMB_Wait_2;
  input LMB_CE_2;
  input LMB_UE_2;
  output [0:3]LMB_Byte_Enable_2;
  output [0:31]LMB_Data_Addr_3;
  input [0:31]LMB_Data_Read_3;
  output [0:31]LMB_Data_Write_3;
  output LMB_Addr_Strobe_3;
  output LMB_Read_Strobe_3;
  output LMB_Write_Strobe_3;
  input LMB_Ready_3;
  input LMB_Wait_3;
  input LMB_CE_3;
  input LMB_UE_3;
  output [0:3]LMB_Byte_Enable_3;
  output [0:31]LMB_Data_Addr_4;
  input [0:31]LMB_Data_Read_4;
  output [0:31]LMB_Data_Write_4;
  output LMB_Addr_Strobe_4;
  output LMB_Read_Strobe_4;
  output LMB_Write_Strobe_4;
  input LMB_Ready_4;
  input LMB_Wait_4;
  input LMB_CE_4;
  input LMB_UE_4;
  output [0:3]LMB_Byte_Enable_4;
  output [0:31]LMB_Data_Addr_5;
  input [0:31]LMB_Data_Read_5;
  output [0:31]LMB_Data_Write_5;
  output LMB_Addr_Strobe_5;
  output LMB_Read_Strobe_5;
  output LMB_Write_Strobe_5;
  input LMB_Ready_5;
  input LMB_Wait_5;
  input LMB_CE_5;
  input LMB_UE_5;
  output [0:3]LMB_Byte_Enable_5;
  output [0:31]LMB_Data_Addr_6;
  input [0:31]LMB_Data_Read_6;
  output [0:31]LMB_Data_Write_6;
  output LMB_Addr_Strobe_6;
  output LMB_Read_Strobe_6;
  output LMB_Write_Strobe_6;
  input LMB_Ready_6;
  input LMB_Wait_6;
  input LMB_CE_6;
  input LMB_UE_6;
  output [0:3]LMB_Byte_Enable_6;
  output [0:31]LMB_Data_Addr_7;
  input [0:31]LMB_Data_Read_7;
  output [0:31]LMB_Data_Write_7;
  output LMB_Addr_Strobe_7;
  output LMB_Read_Strobe_7;
  output LMB_Write_Strobe_7;
  input LMB_Ready_7;
  input LMB_Wait_7;
  input LMB_CE_7;
  input LMB_UE_7;
  output [0:3]LMB_Byte_Enable_7;
  output [0:31]LMB_Data_Addr_8;
  input [0:31]LMB_Data_Read_8;
  output [0:31]LMB_Data_Write_8;
  output LMB_Addr_Strobe_8;
  output LMB_Read_Strobe_8;
  output LMB_Write_Strobe_8;
  input LMB_Ready_8;
  input LMB_Wait_8;
  input LMB_CE_8;
  input LMB_UE_8;
  output [0:3]LMB_Byte_Enable_8;
  output [0:31]LMB_Data_Addr_9;
  input [0:31]LMB_Data_Read_9;
  output [0:31]LMB_Data_Write_9;
  output LMB_Addr_Strobe_9;
  output LMB_Read_Strobe_9;
  output LMB_Write_Strobe_9;
  input LMB_Ready_9;
  input LMB_Wait_9;
  input LMB_CE_9;
  input LMB_UE_9;
  output [0:3]LMB_Byte_Enable_9;
  output [0:31]LMB_Data_Addr_10;
  input [0:31]LMB_Data_Read_10;
  output [0:31]LMB_Data_Write_10;
  output LMB_Addr_Strobe_10;
  output LMB_Read_Strobe_10;
  output LMB_Write_Strobe_10;
  input LMB_Ready_10;
  input LMB_Wait_10;
  input LMB_CE_10;
  input LMB_UE_10;
  output [0:3]LMB_Byte_Enable_10;
  output [0:31]LMB_Data_Addr_11;
  input [0:31]LMB_Data_Read_11;
  output [0:31]LMB_Data_Write_11;
  output LMB_Addr_Strobe_11;
  output LMB_Read_Strobe_11;
  output LMB_Write_Strobe_11;
  input LMB_Ready_11;
  input LMB_Wait_11;
  input LMB_CE_11;
  input LMB_UE_11;
  output [0:3]LMB_Byte_Enable_11;
  output [0:31]LMB_Data_Addr_12;
  input [0:31]LMB_Data_Read_12;
  output [0:31]LMB_Data_Write_12;
  output LMB_Addr_Strobe_12;
  output LMB_Read_Strobe_12;
  output LMB_Write_Strobe_12;
  input LMB_Ready_12;
  input LMB_Wait_12;
  input LMB_CE_12;
  input LMB_UE_12;
  output [0:3]LMB_Byte_Enable_12;
  output [0:31]LMB_Data_Addr_13;
  input [0:31]LMB_Data_Read_13;
  output [0:31]LMB_Data_Write_13;
  output LMB_Addr_Strobe_13;
  output LMB_Read_Strobe_13;
  output LMB_Write_Strobe_13;
  input LMB_Ready_13;
  input LMB_Wait_13;
  input LMB_CE_13;
  input LMB_UE_13;
  output [0:3]LMB_Byte_Enable_13;
  output [0:31]LMB_Data_Addr_14;
  input [0:31]LMB_Data_Read_14;
  output [0:31]LMB_Data_Write_14;
  output LMB_Addr_Strobe_14;
  output LMB_Read_Strobe_14;
  output LMB_Write_Strobe_14;
  input LMB_Ready_14;
  input LMB_Wait_14;
  input LMB_CE_14;
  input LMB_UE_14;
  output [0:3]LMB_Byte_Enable_14;
  output [0:31]LMB_Data_Addr_15;
  input [0:31]LMB_Data_Read_15;
  output [0:31]LMB_Data_Write_15;
  output LMB_Addr_Strobe_15;
  output LMB_Read_Strobe_15;
  output LMB_Write_Strobe_15;
  input LMB_Ready_15;
  input LMB_Wait_15;
  input LMB_CE_15;
  input LMB_UE_15;
  output [0:3]LMB_Byte_Enable_15;
  output [0:31]LMB_Data_Addr_16;
  input [0:31]LMB_Data_Read_16;
  output [0:31]LMB_Data_Write_16;
  output LMB_Addr_Strobe_16;
  output LMB_Read_Strobe_16;
  output LMB_Write_Strobe_16;
  input LMB_Ready_16;
  input LMB_Wait_16;
  input LMB_CE_16;
  input LMB_UE_16;
  output [0:3]LMB_Byte_Enable_16;
  output [0:31]LMB_Data_Addr_17;
  input [0:31]LMB_Data_Read_17;
  output [0:31]LMB_Data_Write_17;
  output LMB_Addr_Strobe_17;
  output LMB_Read_Strobe_17;
  output LMB_Write_Strobe_17;
  input LMB_Ready_17;
  input LMB_Wait_17;
  input LMB_CE_17;
  input LMB_UE_17;
  output [0:3]LMB_Byte_Enable_17;
  output [0:31]LMB_Data_Addr_18;
  input [0:31]LMB_Data_Read_18;
  output [0:31]LMB_Data_Write_18;
  output LMB_Addr_Strobe_18;
  output LMB_Read_Strobe_18;
  output LMB_Write_Strobe_18;
  input LMB_Ready_18;
  input LMB_Wait_18;
  input LMB_CE_18;
  input LMB_UE_18;
  output [0:3]LMB_Byte_Enable_18;
  output [0:31]LMB_Data_Addr_19;
  input [0:31]LMB_Data_Read_19;
  output [0:31]LMB_Data_Write_19;
  output LMB_Addr_Strobe_19;
  output LMB_Read_Strobe_19;
  output LMB_Write_Strobe_19;
  input LMB_Ready_19;
  input LMB_Wait_19;
  input LMB_CE_19;
  input LMB_UE_19;
  output [0:3]LMB_Byte_Enable_19;
  output [0:31]LMB_Data_Addr_20;
  input [0:31]LMB_Data_Read_20;
  output [0:31]LMB_Data_Write_20;
  output LMB_Addr_Strobe_20;
  output LMB_Read_Strobe_20;
  output LMB_Write_Strobe_20;
  input LMB_Ready_20;
  input LMB_Wait_20;
  input LMB_CE_20;
  input LMB_UE_20;
  output [0:3]LMB_Byte_Enable_20;
  output [0:31]LMB_Data_Addr_21;
  input [0:31]LMB_Data_Read_21;
  output [0:31]LMB_Data_Write_21;
  output LMB_Addr_Strobe_21;
  output LMB_Read_Strobe_21;
  output LMB_Write_Strobe_21;
  input LMB_Ready_21;
  input LMB_Wait_21;
  input LMB_CE_21;
  input LMB_UE_21;
  output [0:3]LMB_Byte_Enable_21;
  output [0:31]LMB_Data_Addr_22;
  input [0:31]LMB_Data_Read_22;
  output [0:31]LMB_Data_Write_22;
  output LMB_Addr_Strobe_22;
  output LMB_Read_Strobe_22;
  output LMB_Write_Strobe_22;
  input LMB_Ready_22;
  input LMB_Wait_22;
  input LMB_CE_22;
  input LMB_UE_22;
  output [0:3]LMB_Byte_Enable_22;
  output [0:31]LMB_Data_Addr_23;
  input [0:31]LMB_Data_Read_23;
  output [0:31]LMB_Data_Write_23;
  output LMB_Addr_Strobe_23;
  output LMB_Read_Strobe_23;
  output LMB_Write_Strobe_23;
  input LMB_Ready_23;
  input LMB_Wait_23;
  input LMB_CE_23;
  input LMB_UE_23;
  output [0:3]LMB_Byte_Enable_23;
  output [0:31]LMB_Data_Addr_24;
  input [0:31]LMB_Data_Read_24;
  output [0:31]LMB_Data_Write_24;
  output LMB_Addr_Strobe_24;
  output LMB_Read_Strobe_24;
  output LMB_Write_Strobe_24;
  input LMB_Ready_24;
  input LMB_Wait_24;
  input LMB_CE_24;
  input LMB_UE_24;
  output [0:3]LMB_Byte_Enable_24;
  output [0:31]LMB_Data_Addr_25;
  input [0:31]LMB_Data_Read_25;
  output [0:31]LMB_Data_Write_25;
  output LMB_Addr_Strobe_25;
  output LMB_Read_Strobe_25;
  output LMB_Write_Strobe_25;
  input LMB_Ready_25;
  input LMB_Wait_25;
  input LMB_CE_25;
  input LMB_UE_25;
  output [0:3]LMB_Byte_Enable_25;
  output [0:31]LMB_Data_Addr_26;
  input [0:31]LMB_Data_Read_26;
  output [0:31]LMB_Data_Write_26;
  output LMB_Addr_Strobe_26;
  output LMB_Read_Strobe_26;
  output LMB_Write_Strobe_26;
  input LMB_Ready_26;
  input LMB_Wait_26;
  input LMB_CE_26;
  input LMB_UE_26;
  output [0:3]LMB_Byte_Enable_26;
  output [0:31]LMB_Data_Addr_27;
  input [0:31]LMB_Data_Read_27;
  output [0:31]LMB_Data_Write_27;
  output LMB_Addr_Strobe_27;
  output LMB_Read_Strobe_27;
  output LMB_Write_Strobe_27;
  input LMB_Ready_27;
  input LMB_Wait_27;
  input LMB_CE_27;
  input LMB_UE_27;
  output [0:3]LMB_Byte_Enable_27;
  output [0:31]LMB_Data_Addr_28;
  input [0:31]LMB_Data_Read_28;
  output [0:31]LMB_Data_Write_28;
  output LMB_Addr_Strobe_28;
  output LMB_Read_Strobe_28;
  output LMB_Write_Strobe_28;
  input LMB_Ready_28;
  input LMB_Wait_28;
  input LMB_CE_28;
  input LMB_UE_28;
  output [0:3]LMB_Byte_Enable_28;
  output [0:31]LMB_Data_Addr_29;
  input [0:31]LMB_Data_Read_29;
  output [0:31]LMB_Data_Write_29;
  output LMB_Addr_Strobe_29;
  output LMB_Read_Strobe_29;
  output LMB_Write_Strobe_29;
  input LMB_Ready_29;
  input LMB_Wait_29;
  input LMB_CE_29;
  input LMB_UE_29;
  output [0:3]LMB_Byte_Enable_29;
  output [0:31]LMB_Data_Addr_30;
  input [0:31]LMB_Data_Read_30;
  output [0:31]LMB_Data_Write_30;
  output LMB_Addr_Strobe_30;
  output LMB_Read_Strobe_30;
  output LMB_Write_Strobe_30;
  input LMB_Ready_30;
  input LMB_Wait_30;
  input LMB_CE_30;
  input LMB_UE_30;
  output [0:3]LMB_Byte_Enable_30;
  output [0:31]LMB_Data_Addr_31;
  input [0:31]LMB_Data_Read_31;
  output [0:31]LMB_Data_Write_31;
  output LMB_Addr_Strobe_31;
  output LMB_Read_Strobe_31;
  output LMB_Write_Strobe_31;
  input LMB_Ready_31;
  input LMB_Wait_31;
  input LMB_CE_31;
  input LMB_UE_31;
  output [0:3]LMB_Byte_Enable_31;
  output [31:0]M_AXIS_TDATA;
  output [6:0]M_AXIS_TID;
  input M_AXIS_TREADY;
  output M_AXIS_TVALID;
  output TRACE_CLK_OUT;
  input TRACE_CLK;
  output TRACE_CTL;
  output [31:0]TRACE_DATA;
  output Dbg_Disable_0;
  output Dbg_Clk_0;
  output Dbg_TDI_0;
  input Dbg_TDO_0;
  output [0:7]Dbg_Reg_En_0;
  output Dbg_Capture_0;
  output Dbg_Shift_0;
  output Dbg_Update_0;
  output Dbg_Rst_0;
  input [0:7]Dbg_Trig_In_0;
  output [0:7]Dbg_Trig_Ack_In_0;
  output [0:7]Dbg_Trig_Out_0;
  input [0:7]Dbg_Trig_Ack_Out_0;
  output Dbg_TrClk_0;
  input [0:35]Dbg_TrData_0;
  output Dbg_TrReady_0;
  input Dbg_TrValid_0;
  output [14:2]Dbg_AWADDR_0;
  output Dbg_AWVALID_0;
  input Dbg_AWREADY_0;
  output [31:0]Dbg_WDATA_0;
  output Dbg_WVALID_0;
  input Dbg_WREADY_0;
  input [1:0]Dbg_BRESP_0;
  input Dbg_BVALID_0;
  output Dbg_BREADY_0;
  output [14:2]Dbg_ARADDR_0;
  output Dbg_ARVALID_0;
  input Dbg_ARREADY_0;
  input [31:0]Dbg_RDATA_0;
  input [1:0]Dbg_RRESP_0;
  input Dbg_RVALID_0;
  output Dbg_RREADY_0;
  output Dbg_Disable_1;
  output Dbg_Clk_1;
  output Dbg_TDI_1;
  input Dbg_TDO_1;
  output [0:7]Dbg_Reg_En_1;
  output Dbg_Capture_1;
  output Dbg_Shift_1;
  output Dbg_Update_1;
  output Dbg_Rst_1;
  input [0:7]Dbg_Trig_In_1;
  output [0:7]Dbg_Trig_Ack_In_1;
  output [0:7]Dbg_Trig_Out_1;
  input [0:7]Dbg_Trig_Ack_Out_1;
  output Dbg_TrClk_1;
  input [0:35]Dbg_TrData_1;
  output Dbg_TrReady_1;
  input Dbg_TrValid_1;
  output [14:2]Dbg_AWADDR_1;
  output Dbg_AWVALID_1;
  input Dbg_AWREADY_1;
  output [31:0]Dbg_WDATA_1;
  output Dbg_WVALID_1;
  input Dbg_WREADY_1;
  input [1:0]Dbg_BRESP_1;
  input Dbg_BVALID_1;
  output Dbg_BREADY_1;
  output [14:2]Dbg_ARADDR_1;
  output Dbg_ARVALID_1;
  input Dbg_ARREADY_1;
  input [31:0]Dbg_RDATA_1;
  input [1:0]Dbg_RRESP_1;
  input Dbg_RVALID_1;
  output Dbg_RREADY_1;
  output Dbg_Disable_2;
  output Dbg_Clk_2;
  output Dbg_TDI_2;
  input Dbg_TDO_2;
  output [0:7]Dbg_Reg_En_2;
  output Dbg_Capture_2;
  output Dbg_Shift_2;
  output Dbg_Update_2;
  output Dbg_Rst_2;
  input [0:7]Dbg_Trig_In_2;
  output [0:7]Dbg_Trig_Ack_In_2;
  output [0:7]Dbg_Trig_Out_2;
  input [0:7]Dbg_Trig_Ack_Out_2;
  output Dbg_TrClk_2;
  input [0:35]Dbg_TrData_2;
  output Dbg_TrReady_2;
  input Dbg_TrValid_2;
  output [14:2]Dbg_AWADDR_2;
  output Dbg_AWVALID_2;
  input Dbg_AWREADY_2;
  output [31:0]Dbg_WDATA_2;
  output Dbg_WVALID_2;
  input Dbg_WREADY_2;
  input [1:0]Dbg_BRESP_2;
  input Dbg_BVALID_2;
  output Dbg_BREADY_2;
  output [14:2]Dbg_ARADDR_2;
  output Dbg_ARVALID_2;
  input Dbg_ARREADY_2;
  input [31:0]Dbg_RDATA_2;
  input [1:0]Dbg_RRESP_2;
  input Dbg_RVALID_2;
  output Dbg_RREADY_2;
  output Dbg_Disable_3;
  output Dbg_Clk_3;
  output Dbg_TDI_3;
  input Dbg_TDO_3;
  output [0:7]Dbg_Reg_En_3;
  output Dbg_Capture_3;
  output Dbg_Shift_3;
  output Dbg_Update_3;
  output Dbg_Rst_3;
  input [0:7]Dbg_Trig_In_3;
  output [0:7]Dbg_Trig_Ack_In_3;
  output [0:7]Dbg_Trig_Out_3;
  input [0:7]Dbg_Trig_Ack_Out_3;
  output Dbg_TrClk_3;
  input [0:35]Dbg_TrData_3;
  output Dbg_TrReady_3;
  input Dbg_TrValid_3;
  output [14:2]Dbg_AWADDR_3;
  output Dbg_AWVALID_3;
  input Dbg_AWREADY_3;
  output [31:0]Dbg_WDATA_3;
  output Dbg_WVALID_3;
  input Dbg_WREADY_3;
  input [1:0]Dbg_BRESP_3;
  input Dbg_BVALID_3;
  output Dbg_BREADY_3;
  output [14:2]Dbg_ARADDR_3;
  output Dbg_ARVALID_3;
  input Dbg_ARREADY_3;
  input [31:0]Dbg_RDATA_3;
  input [1:0]Dbg_RRESP_3;
  input Dbg_RVALID_3;
  output Dbg_RREADY_3;
  output Dbg_Disable_4;
  output Dbg_Clk_4;
  output Dbg_TDI_4;
  input Dbg_TDO_4;
  output [0:7]Dbg_Reg_En_4;
  output Dbg_Capture_4;
  output Dbg_Shift_4;
  output Dbg_Update_4;
  output Dbg_Rst_4;
  input [0:7]Dbg_Trig_In_4;
  output [0:7]Dbg_Trig_Ack_In_4;
  output [0:7]Dbg_Trig_Out_4;
  input [0:7]Dbg_Trig_Ack_Out_4;
  output Dbg_TrClk_4;
  input [0:35]Dbg_TrData_4;
  output Dbg_TrReady_4;
  input Dbg_TrValid_4;
  output [14:2]Dbg_AWADDR_4;
  output Dbg_AWVALID_4;
  input Dbg_AWREADY_4;
  output [31:0]Dbg_WDATA_4;
  output Dbg_WVALID_4;
  input Dbg_WREADY_4;
  input [1:0]Dbg_BRESP_4;
  input Dbg_BVALID_4;
  output Dbg_BREADY_4;
  output [14:2]Dbg_ARADDR_4;
  output Dbg_ARVALID_4;
  input Dbg_ARREADY_4;
  input [31:0]Dbg_RDATA_4;
  input [1:0]Dbg_RRESP_4;
  input Dbg_RVALID_4;
  output Dbg_RREADY_4;
  output Dbg_Disable_5;
  output Dbg_Clk_5;
  output Dbg_TDI_5;
  input Dbg_TDO_5;
  output [0:7]Dbg_Reg_En_5;
  output Dbg_Capture_5;
  output Dbg_Shift_5;
  output Dbg_Update_5;
  output Dbg_Rst_5;
  input [0:7]Dbg_Trig_In_5;
  output [0:7]Dbg_Trig_Ack_In_5;
  output [0:7]Dbg_Trig_Out_5;
  input [0:7]Dbg_Trig_Ack_Out_5;
  output Dbg_TrClk_5;
  input [0:35]Dbg_TrData_5;
  output Dbg_TrReady_5;
  input Dbg_TrValid_5;
  output [14:2]Dbg_AWADDR_5;
  output Dbg_AWVALID_5;
  input Dbg_AWREADY_5;
  output [31:0]Dbg_WDATA_5;
  output Dbg_WVALID_5;
  input Dbg_WREADY_5;
  input [1:0]Dbg_BRESP_5;
  input Dbg_BVALID_5;
  output Dbg_BREADY_5;
  output [14:2]Dbg_ARADDR_5;
  output Dbg_ARVALID_5;
  input Dbg_ARREADY_5;
  input [31:0]Dbg_RDATA_5;
  input [1:0]Dbg_RRESP_5;
  input Dbg_RVALID_5;
  output Dbg_RREADY_5;
  output Dbg_Disable_6;
  output Dbg_Clk_6;
  output Dbg_TDI_6;
  input Dbg_TDO_6;
  output [0:7]Dbg_Reg_En_6;
  output Dbg_Capture_6;
  output Dbg_Shift_6;
  output Dbg_Update_6;
  output Dbg_Rst_6;
  input [0:7]Dbg_Trig_In_6;
  output [0:7]Dbg_Trig_Ack_In_6;
  output [0:7]Dbg_Trig_Out_6;
  input [0:7]Dbg_Trig_Ack_Out_6;
  output Dbg_TrClk_6;
  input [0:35]Dbg_TrData_6;
  output Dbg_TrReady_6;
  input Dbg_TrValid_6;
  output [14:2]Dbg_AWADDR_6;
  output Dbg_AWVALID_6;
  input Dbg_AWREADY_6;
  output [31:0]Dbg_WDATA_6;
  output Dbg_WVALID_6;
  input Dbg_WREADY_6;
  input [1:0]Dbg_BRESP_6;
  input Dbg_BVALID_6;
  output Dbg_BREADY_6;
  output [14:2]Dbg_ARADDR_6;
  output Dbg_ARVALID_6;
  input Dbg_ARREADY_6;
  input [31:0]Dbg_RDATA_6;
  input [1:0]Dbg_RRESP_6;
  input Dbg_RVALID_6;
  output Dbg_RREADY_6;
  output Dbg_Disable_7;
  output Dbg_Clk_7;
  output Dbg_TDI_7;
  input Dbg_TDO_7;
  output [0:7]Dbg_Reg_En_7;
  output Dbg_Capture_7;
  output Dbg_Shift_7;
  output Dbg_Update_7;
  output Dbg_Rst_7;
  input [0:7]Dbg_Trig_In_7;
  output [0:7]Dbg_Trig_Ack_In_7;
  output [0:7]Dbg_Trig_Out_7;
  input [0:7]Dbg_Trig_Ack_Out_7;
  output Dbg_TrClk_7;
  input [0:35]Dbg_TrData_7;
  output Dbg_TrReady_7;
  input Dbg_TrValid_7;
  output [14:2]Dbg_AWADDR_7;
  output Dbg_AWVALID_7;
  input Dbg_AWREADY_7;
  output [31:0]Dbg_WDATA_7;
  output Dbg_WVALID_7;
  input Dbg_WREADY_7;
  input [1:0]Dbg_BRESP_7;
  input Dbg_BVALID_7;
  output Dbg_BREADY_7;
  output [14:2]Dbg_ARADDR_7;
  output Dbg_ARVALID_7;
  input Dbg_ARREADY_7;
  input [31:0]Dbg_RDATA_7;
  input [1:0]Dbg_RRESP_7;
  input Dbg_RVALID_7;
  output Dbg_RREADY_7;
  output Dbg_Disable_8;
  output Dbg_Clk_8;
  output Dbg_TDI_8;
  input Dbg_TDO_8;
  output [0:7]Dbg_Reg_En_8;
  output Dbg_Capture_8;
  output Dbg_Shift_8;
  output Dbg_Update_8;
  output Dbg_Rst_8;
  input [0:7]Dbg_Trig_In_8;
  output [0:7]Dbg_Trig_Ack_In_8;
  output [0:7]Dbg_Trig_Out_8;
  input [0:7]Dbg_Trig_Ack_Out_8;
  output Dbg_TrClk_8;
  input [0:35]Dbg_TrData_8;
  output Dbg_TrReady_8;
  input Dbg_TrValid_8;
  output [14:2]Dbg_AWADDR_8;
  output Dbg_AWVALID_8;
  input Dbg_AWREADY_8;
  output [31:0]Dbg_WDATA_8;
  output Dbg_WVALID_8;
  input Dbg_WREADY_8;
  input [1:0]Dbg_BRESP_8;
  input Dbg_BVALID_8;
  output Dbg_BREADY_8;
  output [14:2]Dbg_ARADDR_8;
  output Dbg_ARVALID_8;
  input Dbg_ARREADY_8;
  input [31:0]Dbg_RDATA_8;
  input [1:0]Dbg_RRESP_8;
  input Dbg_RVALID_8;
  output Dbg_RREADY_8;
  output Dbg_Disable_9;
  output Dbg_Clk_9;
  output Dbg_TDI_9;
  input Dbg_TDO_9;
  output [0:7]Dbg_Reg_En_9;
  output Dbg_Capture_9;
  output Dbg_Shift_9;
  output Dbg_Update_9;
  output Dbg_Rst_9;
  input [0:7]Dbg_Trig_In_9;
  output [0:7]Dbg_Trig_Ack_In_9;
  output [0:7]Dbg_Trig_Out_9;
  input [0:7]Dbg_Trig_Ack_Out_9;
  output Dbg_TrClk_9;
  input [0:35]Dbg_TrData_9;
  output Dbg_TrReady_9;
  input Dbg_TrValid_9;
  output [14:2]Dbg_AWADDR_9;
  output Dbg_AWVALID_9;
  input Dbg_AWREADY_9;
  output [31:0]Dbg_WDATA_9;
  output Dbg_WVALID_9;
  input Dbg_WREADY_9;
  input [1:0]Dbg_BRESP_9;
  input Dbg_BVALID_9;
  output Dbg_BREADY_9;
  output [14:2]Dbg_ARADDR_9;
  output Dbg_ARVALID_9;
  input Dbg_ARREADY_9;
  input [31:0]Dbg_RDATA_9;
  input [1:0]Dbg_RRESP_9;
  input Dbg_RVALID_9;
  output Dbg_RREADY_9;
  output Dbg_Disable_10;
  output Dbg_Clk_10;
  output Dbg_TDI_10;
  input Dbg_TDO_10;
  output [0:7]Dbg_Reg_En_10;
  output Dbg_Capture_10;
  output Dbg_Shift_10;
  output Dbg_Update_10;
  output Dbg_Rst_10;
  input [0:7]Dbg_Trig_In_10;
  output [0:7]Dbg_Trig_Ack_In_10;
  output [0:7]Dbg_Trig_Out_10;
  input [0:7]Dbg_Trig_Ack_Out_10;
  output Dbg_TrClk_10;
  input [0:35]Dbg_TrData_10;
  output Dbg_TrReady_10;
  input Dbg_TrValid_10;
  output [14:2]Dbg_AWADDR_10;
  output Dbg_AWVALID_10;
  input Dbg_AWREADY_10;
  output [31:0]Dbg_WDATA_10;
  output Dbg_WVALID_10;
  input Dbg_WREADY_10;
  input [1:0]Dbg_BRESP_10;
  input Dbg_BVALID_10;
  output Dbg_BREADY_10;
  output [14:2]Dbg_ARADDR_10;
  output Dbg_ARVALID_10;
  input Dbg_ARREADY_10;
  input [31:0]Dbg_RDATA_10;
  input [1:0]Dbg_RRESP_10;
  input Dbg_RVALID_10;
  output Dbg_RREADY_10;
  output Dbg_Disable_11;
  output Dbg_Clk_11;
  output Dbg_TDI_11;
  input Dbg_TDO_11;
  output [0:7]Dbg_Reg_En_11;
  output Dbg_Capture_11;
  output Dbg_Shift_11;
  output Dbg_Update_11;
  output Dbg_Rst_11;
  input [0:7]Dbg_Trig_In_11;
  output [0:7]Dbg_Trig_Ack_In_11;
  output [0:7]Dbg_Trig_Out_11;
  input [0:7]Dbg_Trig_Ack_Out_11;
  output Dbg_TrClk_11;
  input [0:35]Dbg_TrData_11;
  output Dbg_TrReady_11;
  input Dbg_TrValid_11;
  output [14:2]Dbg_AWADDR_11;
  output Dbg_AWVALID_11;
  input Dbg_AWREADY_11;
  output [31:0]Dbg_WDATA_11;
  output Dbg_WVALID_11;
  input Dbg_WREADY_11;
  input [1:0]Dbg_BRESP_11;
  input Dbg_BVALID_11;
  output Dbg_BREADY_11;
  output [14:2]Dbg_ARADDR_11;
  output Dbg_ARVALID_11;
  input Dbg_ARREADY_11;
  input [31:0]Dbg_RDATA_11;
  input [1:0]Dbg_RRESP_11;
  input Dbg_RVALID_11;
  output Dbg_RREADY_11;
  output Dbg_Disable_12;
  output Dbg_Clk_12;
  output Dbg_TDI_12;
  input Dbg_TDO_12;
  output [0:7]Dbg_Reg_En_12;
  output Dbg_Capture_12;
  output Dbg_Shift_12;
  output Dbg_Update_12;
  output Dbg_Rst_12;
  input [0:7]Dbg_Trig_In_12;
  output [0:7]Dbg_Trig_Ack_In_12;
  output [0:7]Dbg_Trig_Out_12;
  input [0:7]Dbg_Trig_Ack_Out_12;
  output Dbg_TrClk_12;
  input [0:35]Dbg_TrData_12;
  output Dbg_TrReady_12;
  input Dbg_TrValid_12;
  output [14:2]Dbg_AWADDR_12;
  output Dbg_AWVALID_12;
  input Dbg_AWREADY_12;
  output [31:0]Dbg_WDATA_12;
  output Dbg_WVALID_12;
  input Dbg_WREADY_12;
  input [1:0]Dbg_BRESP_12;
  input Dbg_BVALID_12;
  output Dbg_BREADY_12;
  output [14:2]Dbg_ARADDR_12;
  output Dbg_ARVALID_12;
  input Dbg_ARREADY_12;
  input [31:0]Dbg_RDATA_12;
  input [1:0]Dbg_RRESP_12;
  input Dbg_RVALID_12;
  output Dbg_RREADY_12;
  output Dbg_Disable_13;
  output Dbg_Clk_13;
  output Dbg_TDI_13;
  input Dbg_TDO_13;
  output [0:7]Dbg_Reg_En_13;
  output Dbg_Capture_13;
  output Dbg_Shift_13;
  output Dbg_Update_13;
  output Dbg_Rst_13;
  input [0:7]Dbg_Trig_In_13;
  output [0:7]Dbg_Trig_Ack_In_13;
  output [0:7]Dbg_Trig_Out_13;
  input [0:7]Dbg_Trig_Ack_Out_13;
  output Dbg_TrClk_13;
  input [0:35]Dbg_TrData_13;
  output Dbg_TrReady_13;
  input Dbg_TrValid_13;
  output [14:2]Dbg_AWADDR_13;
  output Dbg_AWVALID_13;
  input Dbg_AWREADY_13;
  output [31:0]Dbg_WDATA_13;
  output Dbg_WVALID_13;
  input Dbg_WREADY_13;
  input [1:0]Dbg_BRESP_13;
  input Dbg_BVALID_13;
  output Dbg_BREADY_13;
  output [14:2]Dbg_ARADDR_13;
  output Dbg_ARVALID_13;
  input Dbg_ARREADY_13;
  input [31:0]Dbg_RDATA_13;
  input [1:0]Dbg_RRESP_13;
  input Dbg_RVALID_13;
  output Dbg_RREADY_13;
  output Dbg_Disable_14;
  output Dbg_Clk_14;
  output Dbg_TDI_14;
  input Dbg_TDO_14;
  output [0:7]Dbg_Reg_En_14;
  output Dbg_Capture_14;
  output Dbg_Shift_14;
  output Dbg_Update_14;
  output Dbg_Rst_14;
  input [0:7]Dbg_Trig_In_14;
  output [0:7]Dbg_Trig_Ack_In_14;
  output [0:7]Dbg_Trig_Out_14;
  input [0:7]Dbg_Trig_Ack_Out_14;
  output Dbg_TrClk_14;
  input [0:35]Dbg_TrData_14;
  output Dbg_TrReady_14;
  input Dbg_TrValid_14;
  output [14:2]Dbg_AWADDR_14;
  output Dbg_AWVALID_14;
  input Dbg_AWREADY_14;
  output [31:0]Dbg_WDATA_14;
  output Dbg_WVALID_14;
  input Dbg_WREADY_14;
  input [1:0]Dbg_BRESP_14;
  input Dbg_BVALID_14;
  output Dbg_BREADY_14;
  output [14:2]Dbg_ARADDR_14;
  output Dbg_ARVALID_14;
  input Dbg_ARREADY_14;
  input [31:0]Dbg_RDATA_14;
  input [1:0]Dbg_RRESP_14;
  input Dbg_RVALID_14;
  output Dbg_RREADY_14;
  output Dbg_Disable_15;
  output Dbg_Clk_15;
  output Dbg_TDI_15;
  input Dbg_TDO_15;
  output [0:7]Dbg_Reg_En_15;
  output Dbg_Capture_15;
  output Dbg_Shift_15;
  output Dbg_Update_15;
  output Dbg_Rst_15;
  input [0:7]Dbg_Trig_In_15;
  output [0:7]Dbg_Trig_Ack_In_15;
  output [0:7]Dbg_Trig_Out_15;
  input [0:7]Dbg_Trig_Ack_Out_15;
  output Dbg_TrClk_15;
  input [0:35]Dbg_TrData_15;
  output Dbg_TrReady_15;
  input Dbg_TrValid_15;
  output [14:2]Dbg_AWADDR_15;
  output Dbg_AWVALID_15;
  input Dbg_AWREADY_15;
  output [31:0]Dbg_WDATA_15;
  output Dbg_WVALID_15;
  input Dbg_WREADY_15;
  input [1:0]Dbg_BRESP_15;
  input Dbg_BVALID_15;
  output Dbg_BREADY_15;
  output [14:2]Dbg_ARADDR_15;
  output Dbg_ARVALID_15;
  input Dbg_ARREADY_15;
  input [31:0]Dbg_RDATA_15;
  input [1:0]Dbg_RRESP_15;
  input Dbg_RVALID_15;
  output Dbg_RREADY_15;
  output Dbg_Disable_16;
  output Dbg_Clk_16;
  output Dbg_TDI_16;
  input Dbg_TDO_16;
  output [0:7]Dbg_Reg_En_16;
  output Dbg_Capture_16;
  output Dbg_Shift_16;
  output Dbg_Update_16;
  output Dbg_Rst_16;
  input [0:7]Dbg_Trig_In_16;
  output [0:7]Dbg_Trig_Ack_In_16;
  output [0:7]Dbg_Trig_Out_16;
  input [0:7]Dbg_Trig_Ack_Out_16;
  output Dbg_TrClk_16;
  input [0:35]Dbg_TrData_16;
  output Dbg_TrReady_16;
  input Dbg_TrValid_16;
  output [14:2]Dbg_AWADDR_16;
  output Dbg_AWVALID_16;
  input Dbg_AWREADY_16;
  output [31:0]Dbg_WDATA_16;
  output Dbg_WVALID_16;
  input Dbg_WREADY_16;
  input [1:0]Dbg_BRESP_16;
  input Dbg_BVALID_16;
  output Dbg_BREADY_16;
  output [14:2]Dbg_ARADDR_16;
  output Dbg_ARVALID_16;
  input Dbg_ARREADY_16;
  input [31:0]Dbg_RDATA_16;
  input [1:0]Dbg_RRESP_16;
  input Dbg_RVALID_16;
  output Dbg_RREADY_16;
  output Dbg_Disable_17;
  output Dbg_Clk_17;
  output Dbg_TDI_17;
  input Dbg_TDO_17;
  output [0:7]Dbg_Reg_En_17;
  output Dbg_Capture_17;
  output Dbg_Shift_17;
  output Dbg_Update_17;
  output Dbg_Rst_17;
  input [0:7]Dbg_Trig_In_17;
  output [0:7]Dbg_Trig_Ack_In_17;
  output [0:7]Dbg_Trig_Out_17;
  input [0:7]Dbg_Trig_Ack_Out_17;
  output Dbg_TrClk_17;
  input [0:35]Dbg_TrData_17;
  output Dbg_TrReady_17;
  input Dbg_TrValid_17;
  output [14:2]Dbg_AWADDR_17;
  output Dbg_AWVALID_17;
  input Dbg_AWREADY_17;
  output [31:0]Dbg_WDATA_17;
  output Dbg_WVALID_17;
  input Dbg_WREADY_17;
  input [1:0]Dbg_BRESP_17;
  input Dbg_BVALID_17;
  output Dbg_BREADY_17;
  output [14:2]Dbg_ARADDR_17;
  output Dbg_ARVALID_17;
  input Dbg_ARREADY_17;
  input [31:0]Dbg_RDATA_17;
  input [1:0]Dbg_RRESP_17;
  input Dbg_RVALID_17;
  output Dbg_RREADY_17;
  output Dbg_Disable_18;
  output Dbg_Clk_18;
  output Dbg_TDI_18;
  input Dbg_TDO_18;
  output [0:7]Dbg_Reg_En_18;
  output Dbg_Capture_18;
  output Dbg_Shift_18;
  output Dbg_Update_18;
  output Dbg_Rst_18;
  input [0:7]Dbg_Trig_In_18;
  output [0:7]Dbg_Trig_Ack_In_18;
  output [0:7]Dbg_Trig_Out_18;
  input [0:7]Dbg_Trig_Ack_Out_18;
  output Dbg_TrClk_18;
  input [0:35]Dbg_TrData_18;
  output Dbg_TrReady_18;
  input Dbg_TrValid_18;
  output [14:2]Dbg_AWADDR_18;
  output Dbg_AWVALID_18;
  input Dbg_AWREADY_18;
  output [31:0]Dbg_WDATA_18;
  output Dbg_WVALID_18;
  input Dbg_WREADY_18;
  input [1:0]Dbg_BRESP_18;
  input Dbg_BVALID_18;
  output Dbg_BREADY_18;
  output [14:2]Dbg_ARADDR_18;
  output Dbg_ARVALID_18;
  input Dbg_ARREADY_18;
  input [31:0]Dbg_RDATA_18;
  input [1:0]Dbg_RRESP_18;
  input Dbg_RVALID_18;
  output Dbg_RREADY_18;
  output Dbg_Disable_19;
  output Dbg_Clk_19;
  output Dbg_TDI_19;
  input Dbg_TDO_19;
  output [0:7]Dbg_Reg_En_19;
  output Dbg_Capture_19;
  output Dbg_Shift_19;
  output Dbg_Update_19;
  output Dbg_Rst_19;
  input [0:7]Dbg_Trig_In_19;
  output [0:7]Dbg_Trig_Ack_In_19;
  output [0:7]Dbg_Trig_Out_19;
  input [0:7]Dbg_Trig_Ack_Out_19;
  output Dbg_TrClk_19;
  input [0:35]Dbg_TrData_19;
  output Dbg_TrReady_19;
  input Dbg_TrValid_19;
  output [14:2]Dbg_AWADDR_19;
  output Dbg_AWVALID_19;
  input Dbg_AWREADY_19;
  output [31:0]Dbg_WDATA_19;
  output Dbg_WVALID_19;
  input Dbg_WREADY_19;
  input [1:0]Dbg_BRESP_19;
  input Dbg_BVALID_19;
  output Dbg_BREADY_19;
  output [14:2]Dbg_ARADDR_19;
  output Dbg_ARVALID_19;
  input Dbg_ARREADY_19;
  input [31:0]Dbg_RDATA_19;
  input [1:0]Dbg_RRESP_19;
  input Dbg_RVALID_19;
  output Dbg_RREADY_19;
  output Dbg_Disable_20;
  output Dbg_Clk_20;
  output Dbg_TDI_20;
  input Dbg_TDO_20;
  output [0:7]Dbg_Reg_En_20;
  output Dbg_Capture_20;
  output Dbg_Shift_20;
  output Dbg_Update_20;
  output Dbg_Rst_20;
  input [0:7]Dbg_Trig_In_20;
  output [0:7]Dbg_Trig_Ack_In_20;
  output [0:7]Dbg_Trig_Out_20;
  input [0:7]Dbg_Trig_Ack_Out_20;
  output Dbg_TrClk_20;
  input [0:35]Dbg_TrData_20;
  output Dbg_TrReady_20;
  input Dbg_TrValid_20;
  output [14:2]Dbg_AWADDR_20;
  output Dbg_AWVALID_20;
  input Dbg_AWREADY_20;
  output [31:0]Dbg_WDATA_20;
  output Dbg_WVALID_20;
  input Dbg_WREADY_20;
  input [1:0]Dbg_BRESP_20;
  input Dbg_BVALID_20;
  output Dbg_BREADY_20;
  output [14:2]Dbg_ARADDR_20;
  output Dbg_ARVALID_20;
  input Dbg_ARREADY_20;
  input [31:0]Dbg_RDATA_20;
  input [1:0]Dbg_RRESP_20;
  input Dbg_RVALID_20;
  output Dbg_RREADY_20;
  output Dbg_Disable_21;
  output Dbg_Clk_21;
  output Dbg_TDI_21;
  input Dbg_TDO_21;
  output [0:7]Dbg_Reg_En_21;
  output Dbg_Capture_21;
  output Dbg_Shift_21;
  output Dbg_Update_21;
  output Dbg_Rst_21;
  input [0:7]Dbg_Trig_In_21;
  output [0:7]Dbg_Trig_Ack_In_21;
  output [0:7]Dbg_Trig_Out_21;
  input [0:7]Dbg_Trig_Ack_Out_21;
  output Dbg_TrClk_21;
  input [0:35]Dbg_TrData_21;
  output Dbg_TrReady_21;
  input Dbg_TrValid_21;
  output [14:2]Dbg_AWADDR_21;
  output Dbg_AWVALID_21;
  input Dbg_AWREADY_21;
  output [31:0]Dbg_WDATA_21;
  output Dbg_WVALID_21;
  input Dbg_WREADY_21;
  input [1:0]Dbg_BRESP_21;
  input Dbg_BVALID_21;
  output Dbg_BREADY_21;
  output [14:2]Dbg_ARADDR_21;
  output Dbg_ARVALID_21;
  input Dbg_ARREADY_21;
  input [31:0]Dbg_RDATA_21;
  input [1:0]Dbg_RRESP_21;
  input Dbg_RVALID_21;
  output Dbg_RREADY_21;
  output Dbg_Disable_22;
  output Dbg_Clk_22;
  output Dbg_TDI_22;
  input Dbg_TDO_22;
  output [0:7]Dbg_Reg_En_22;
  output Dbg_Capture_22;
  output Dbg_Shift_22;
  output Dbg_Update_22;
  output Dbg_Rst_22;
  input [0:7]Dbg_Trig_In_22;
  output [0:7]Dbg_Trig_Ack_In_22;
  output [0:7]Dbg_Trig_Out_22;
  input [0:7]Dbg_Trig_Ack_Out_22;
  output Dbg_TrClk_22;
  input [0:35]Dbg_TrData_22;
  output Dbg_TrReady_22;
  input Dbg_TrValid_22;
  output [14:2]Dbg_AWADDR_22;
  output Dbg_AWVALID_22;
  input Dbg_AWREADY_22;
  output [31:0]Dbg_WDATA_22;
  output Dbg_WVALID_22;
  input Dbg_WREADY_22;
  input [1:0]Dbg_BRESP_22;
  input Dbg_BVALID_22;
  output Dbg_BREADY_22;
  output [14:2]Dbg_ARADDR_22;
  output Dbg_ARVALID_22;
  input Dbg_ARREADY_22;
  input [31:0]Dbg_RDATA_22;
  input [1:0]Dbg_RRESP_22;
  input Dbg_RVALID_22;
  output Dbg_RREADY_22;
  output Dbg_Disable_23;
  output Dbg_Clk_23;
  output Dbg_TDI_23;
  input Dbg_TDO_23;
  output [0:7]Dbg_Reg_En_23;
  output Dbg_Capture_23;
  output Dbg_Shift_23;
  output Dbg_Update_23;
  output Dbg_Rst_23;
  input [0:7]Dbg_Trig_In_23;
  output [0:7]Dbg_Trig_Ack_In_23;
  output [0:7]Dbg_Trig_Out_23;
  input [0:7]Dbg_Trig_Ack_Out_23;
  output Dbg_TrClk_23;
  input [0:35]Dbg_TrData_23;
  output Dbg_TrReady_23;
  input Dbg_TrValid_23;
  output [14:2]Dbg_AWADDR_23;
  output Dbg_AWVALID_23;
  input Dbg_AWREADY_23;
  output [31:0]Dbg_WDATA_23;
  output Dbg_WVALID_23;
  input Dbg_WREADY_23;
  input [1:0]Dbg_BRESP_23;
  input Dbg_BVALID_23;
  output Dbg_BREADY_23;
  output [14:2]Dbg_ARADDR_23;
  output Dbg_ARVALID_23;
  input Dbg_ARREADY_23;
  input [31:0]Dbg_RDATA_23;
  input [1:0]Dbg_RRESP_23;
  input Dbg_RVALID_23;
  output Dbg_RREADY_23;
  output Dbg_Disable_24;
  output Dbg_Clk_24;
  output Dbg_TDI_24;
  input Dbg_TDO_24;
  output [0:7]Dbg_Reg_En_24;
  output Dbg_Capture_24;
  output Dbg_Shift_24;
  output Dbg_Update_24;
  output Dbg_Rst_24;
  input [0:7]Dbg_Trig_In_24;
  output [0:7]Dbg_Trig_Ack_In_24;
  output [0:7]Dbg_Trig_Out_24;
  input [0:7]Dbg_Trig_Ack_Out_24;
  output Dbg_TrClk_24;
  input [0:35]Dbg_TrData_24;
  output Dbg_TrReady_24;
  input Dbg_TrValid_24;
  output [14:2]Dbg_AWADDR_24;
  output Dbg_AWVALID_24;
  input Dbg_AWREADY_24;
  output [31:0]Dbg_WDATA_24;
  output Dbg_WVALID_24;
  input Dbg_WREADY_24;
  input [1:0]Dbg_BRESP_24;
  input Dbg_BVALID_24;
  output Dbg_BREADY_24;
  output [14:2]Dbg_ARADDR_24;
  output Dbg_ARVALID_24;
  input Dbg_ARREADY_24;
  input [31:0]Dbg_RDATA_24;
  input [1:0]Dbg_RRESP_24;
  input Dbg_RVALID_24;
  output Dbg_RREADY_24;
  output Dbg_Disable_25;
  output Dbg_Clk_25;
  output Dbg_TDI_25;
  input Dbg_TDO_25;
  output [0:7]Dbg_Reg_En_25;
  output Dbg_Capture_25;
  output Dbg_Shift_25;
  output Dbg_Update_25;
  output Dbg_Rst_25;
  input [0:7]Dbg_Trig_In_25;
  output [0:7]Dbg_Trig_Ack_In_25;
  output [0:7]Dbg_Trig_Out_25;
  input [0:7]Dbg_Trig_Ack_Out_25;
  output Dbg_TrClk_25;
  input [0:35]Dbg_TrData_25;
  output Dbg_TrReady_25;
  input Dbg_TrValid_25;
  output [14:2]Dbg_AWADDR_25;
  output Dbg_AWVALID_25;
  input Dbg_AWREADY_25;
  output [31:0]Dbg_WDATA_25;
  output Dbg_WVALID_25;
  input Dbg_WREADY_25;
  input [1:0]Dbg_BRESP_25;
  input Dbg_BVALID_25;
  output Dbg_BREADY_25;
  output [14:2]Dbg_ARADDR_25;
  output Dbg_ARVALID_25;
  input Dbg_ARREADY_25;
  input [31:0]Dbg_RDATA_25;
  input [1:0]Dbg_RRESP_25;
  input Dbg_RVALID_25;
  output Dbg_RREADY_25;
  output Dbg_Disable_26;
  output Dbg_Clk_26;
  output Dbg_TDI_26;
  input Dbg_TDO_26;
  output [0:7]Dbg_Reg_En_26;
  output Dbg_Capture_26;
  output Dbg_Shift_26;
  output Dbg_Update_26;
  output Dbg_Rst_26;
  input [0:7]Dbg_Trig_In_26;
  output [0:7]Dbg_Trig_Ack_In_26;
  output [0:7]Dbg_Trig_Out_26;
  input [0:7]Dbg_Trig_Ack_Out_26;
  output Dbg_TrClk_26;
  input [0:35]Dbg_TrData_26;
  output Dbg_TrReady_26;
  input Dbg_TrValid_26;
  output [14:2]Dbg_AWADDR_26;
  output Dbg_AWVALID_26;
  input Dbg_AWREADY_26;
  output [31:0]Dbg_WDATA_26;
  output Dbg_WVALID_26;
  input Dbg_WREADY_26;
  input [1:0]Dbg_BRESP_26;
  input Dbg_BVALID_26;
  output Dbg_BREADY_26;
  output [14:2]Dbg_ARADDR_26;
  output Dbg_ARVALID_26;
  input Dbg_ARREADY_26;
  input [31:0]Dbg_RDATA_26;
  input [1:0]Dbg_RRESP_26;
  input Dbg_RVALID_26;
  output Dbg_RREADY_26;
  output Dbg_Disable_27;
  output Dbg_Clk_27;
  output Dbg_TDI_27;
  input Dbg_TDO_27;
  output [0:7]Dbg_Reg_En_27;
  output Dbg_Capture_27;
  output Dbg_Shift_27;
  output Dbg_Update_27;
  output Dbg_Rst_27;
  input [0:7]Dbg_Trig_In_27;
  output [0:7]Dbg_Trig_Ack_In_27;
  output [0:7]Dbg_Trig_Out_27;
  input [0:7]Dbg_Trig_Ack_Out_27;
  output Dbg_TrClk_27;
  input [0:35]Dbg_TrData_27;
  output Dbg_TrReady_27;
  input Dbg_TrValid_27;
  output [14:2]Dbg_AWADDR_27;
  output Dbg_AWVALID_27;
  input Dbg_AWREADY_27;
  output [31:0]Dbg_WDATA_27;
  output Dbg_WVALID_27;
  input Dbg_WREADY_27;
  input [1:0]Dbg_BRESP_27;
  input Dbg_BVALID_27;
  output Dbg_BREADY_27;
  output [14:2]Dbg_ARADDR_27;
  output Dbg_ARVALID_27;
  input Dbg_ARREADY_27;
  input [31:0]Dbg_RDATA_27;
  input [1:0]Dbg_RRESP_27;
  input Dbg_RVALID_27;
  output Dbg_RREADY_27;
  output Dbg_Disable_28;
  output Dbg_Clk_28;
  output Dbg_TDI_28;
  input Dbg_TDO_28;
  output [0:7]Dbg_Reg_En_28;
  output Dbg_Capture_28;
  output Dbg_Shift_28;
  output Dbg_Update_28;
  output Dbg_Rst_28;
  input [0:7]Dbg_Trig_In_28;
  output [0:7]Dbg_Trig_Ack_In_28;
  output [0:7]Dbg_Trig_Out_28;
  input [0:7]Dbg_Trig_Ack_Out_28;
  output Dbg_TrClk_28;
  input [0:35]Dbg_TrData_28;
  output Dbg_TrReady_28;
  input Dbg_TrValid_28;
  output [14:2]Dbg_AWADDR_28;
  output Dbg_AWVALID_28;
  input Dbg_AWREADY_28;
  output [31:0]Dbg_WDATA_28;
  output Dbg_WVALID_28;
  input Dbg_WREADY_28;
  input [1:0]Dbg_BRESP_28;
  input Dbg_BVALID_28;
  output Dbg_BREADY_28;
  output [14:2]Dbg_ARADDR_28;
  output Dbg_ARVALID_28;
  input Dbg_ARREADY_28;
  input [31:0]Dbg_RDATA_28;
  input [1:0]Dbg_RRESP_28;
  input Dbg_RVALID_28;
  output Dbg_RREADY_28;
  output Dbg_Disable_29;
  output Dbg_Clk_29;
  output Dbg_TDI_29;
  input Dbg_TDO_29;
  output [0:7]Dbg_Reg_En_29;
  output Dbg_Capture_29;
  output Dbg_Shift_29;
  output Dbg_Update_29;
  output Dbg_Rst_29;
  input [0:7]Dbg_Trig_In_29;
  output [0:7]Dbg_Trig_Ack_In_29;
  output [0:7]Dbg_Trig_Out_29;
  input [0:7]Dbg_Trig_Ack_Out_29;
  output Dbg_TrClk_29;
  input [0:35]Dbg_TrData_29;
  output Dbg_TrReady_29;
  input Dbg_TrValid_29;
  output [14:2]Dbg_AWADDR_29;
  output Dbg_AWVALID_29;
  input Dbg_AWREADY_29;
  output [31:0]Dbg_WDATA_29;
  output Dbg_WVALID_29;
  input Dbg_WREADY_29;
  input [1:0]Dbg_BRESP_29;
  input Dbg_BVALID_29;
  output Dbg_BREADY_29;
  output [14:2]Dbg_ARADDR_29;
  output Dbg_ARVALID_29;
  input Dbg_ARREADY_29;
  input [31:0]Dbg_RDATA_29;
  input [1:0]Dbg_RRESP_29;
  input Dbg_RVALID_29;
  output Dbg_RREADY_29;
  output Dbg_Disable_30;
  output Dbg_Clk_30;
  output Dbg_TDI_30;
  input Dbg_TDO_30;
  output [0:7]Dbg_Reg_En_30;
  output Dbg_Capture_30;
  output Dbg_Shift_30;
  output Dbg_Update_30;
  output Dbg_Rst_30;
  input [0:7]Dbg_Trig_In_30;
  output [0:7]Dbg_Trig_Ack_In_30;
  output [0:7]Dbg_Trig_Out_30;
  input [0:7]Dbg_Trig_Ack_Out_30;
  output Dbg_TrClk_30;
  input [0:35]Dbg_TrData_30;
  output Dbg_TrReady_30;
  input Dbg_TrValid_30;
  output [14:2]Dbg_AWADDR_30;
  output Dbg_AWVALID_30;
  input Dbg_AWREADY_30;
  output [31:0]Dbg_WDATA_30;
  output Dbg_WVALID_30;
  input Dbg_WREADY_30;
  input [1:0]Dbg_BRESP_30;
  input Dbg_BVALID_30;
  output Dbg_BREADY_30;
  output [14:2]Dbg_ARADDR_30;
  output Dbg_ARVALID_30;
  input Dbg_ARREADY_30;
  input [31:0]Dbg_RDATA_30;
  input [1:0]Dbg_RRESP_30;
  input Dbg_RVALID_30;
  output Dbg_RREADY_30;
  output Dbg_Disable_31;
  output Dbg_Clk_31;
  output Dbg_TDI_31;
  input Dbg_TDO_31;
  output [0:7]Dbg_Reg_En_31;
  output Dbg_Capture_31;
  output Dbg_Shift_31;
  output Dbg_Update_31;
  output Dbg_Rst_31;
  input [0:7]Dbg_Trig_In_31;
  output [0:7]Dbg_Trig_Ack_In_31;
  output [0:7]Dbg_Trig_Out_31;
  input [0:7]Dbg_Trig_Ack_Out_31;
  output Dbg_TrClk_31;
  input [0:35]Dbg_TrData_31;
  output Dbg_TrReady_31;
  input Dbg_TrValid_31;
  output [14:2]Dbg_AWADDR_31;
  output Dbg_AWVALID_31;
  input Dbg_AWREADY_31;
  output [31:0]Dbg_WDATA_31;
  output Dbg_WVALID_31;
  input Dbg_WREADY_31;
  input [1:0]Dbg_BRESP_31;
  input Dbg_BVALID_31;
  output Dbg_BREADY_31;
  output [14:2]Dbg_ARADDR_31;
  output Dbg_ARVALID_31;
  input Dbg_ARREADY_31;
  input [31:0]Dbg_RDATA_31;
  input [1:0]Dbg_RRESP_31;
  input Dbg_RVALID_31;
  output Dbg_RREADY_31;
  input bscan_ext_tdi;
  input bscan_ext_reset;
  input bscan_ext_shift;
  input bscan_ext_update;
  input bscan_ext_capture;
  input bscan_ext_sel;
  input bscan_ext_drck;
  output bscan_ext_tdo;
  input bscan_ext_tck;
  input bscan_ext_tms;
  input bscan_ext_bscanid_en;
  output Ext_JTAG_DRCK;
  output Ext_JTAG_RESET;
  output Ext_JTAG_SEL;
  output Ext_JTAG_CAPTURE;
  output Ext_JTAG_SHIFT;
  output Ext_JTAG_UPDATE;
  output Ext_JTAG_TDI;
  input Ext_JTAG_TDO;

  wire DRCK;
  wire Dbg_Clk_0;
  wire [0:7]Dbg_Reg_En_0;
  wire Dbg_Rst_0;
  wire Dbg_Shift_0;
  wire Dbg_TDO_0;
  wire Debug_SYS_Rst;
  wire \^Ext_JTAG_CAPTURE ;
  wire \^Ext_JTAG_SHIFT ;
  wire \^Ext_JTAG_TDI ;
  wire \^Ext_JTAG_UPDATE ;
  wire [5:5]\JTAG_CONTROL_I/Use_Serial_Unified_Completion.count_reg ;
  wire \JTAG_CONTROL_I/completion_status131_out ;
  wire \JTAG_CONTROL_I/mb_data_overrun1__0 ;
  wire \JTAG_CONTROL_I/sel ;
  wire MDM_Core_I1_n_0;
  wire MDM_Core_I1_n_18;
  wire SEL;
  wire TDI;
  wire \Use_E2.BSCAN_I_n_13 ;
  wire \Use_E2.BSCAN_I_n_8 ;
  wire [0:0]p_0_in;
  wire [0:0]p_0_in__0;
  wire [15:15]p_1_in;
  wire sel_n_reset;
  wire shift_n_reset;
  wire tdo;
  wire NLW_MDM_Core_I1_Dbg_Disable_0_UNCONNECTED;
  wire NLW_MDM_Core_I1_Ext_JTAG_SEL_UNCONNECTED;
  wire NLW_MDM_Core_I1_Ext_JTAG_TDO_UNCONNECTED;
  wire NLW_MDM_Core_I1_Ext_NM_BRK_UNCONNECTED;
  wire NLW_MDM_Core_I1_Scan_En_UNCONNECTED;
  wire NLW_MDM_Core_I1_Scan_Reset_UNCONNECTED;
  wire NLW_MDM_Core_I1_Scan_Reset_Sel_UNCONNECTED;
  wire \NLW_Use_E2.BSCAN_I_Ext_JTAG_RESET_UNCONNECTED ;
  wire \NLW_Use_E2.BSCAN_I_Scan_En_UNCONNECTED ;
  wire \NLW_Use_E2.BSCAN_I_Scan_Reset_UNCONNECTED ;
  wire \NLW_Use_E2.BSCAN_I_Scan_Reset_Sel_UNCONNECTED ;

  assign Dbg_Capture_0 = \^Ext_JTAG_CAPTURE ;
  assign Dbg_TDI_0 = \^Ext_JTAG_TDI ;
  assign Dbg_Update_0 = \^Ext_JTAG_UPDATE ;
  system_mdm_1_0__MDM_Core MDM_Core_I1
       (.AR(sel_n_reset),
        .CLK(\^Ext_JTAG_UPDATE ),
        .D(p_1_in),
        .Dbg_Disable_0(NLW_MDM_Core_I1_Dbg_Disable_0_UNCONNECTED),
        .Dbg_Reg_En_0(Dbg_Reg_En_0),
        .Dbg_Rst_0(Dbg_Rst_0),
        .Dbg_Shift_0(Dbg_Shift_0),
        .Dbg_Shift_0_0(\^Ext_JTAG_SHIFT ),
        .Dbg_TDO_0(Dbg_TDO_0),
        .Debug_SYS_Rst(Debug_SYS_Rst),
        .E(\Use_E2.BSCAN_I_n_8 ),
        .Ext_JTAG_SEL(NLW_MDM_Core_I1_Ext_JTAG_SEL_UNCONNECTED),
        .Ext_JTAG_TDI(\^Ext_JTAG_TDI ),
        .Ext_JTAG_TDO(NLW_MDM_Core_I1_Ext_JTAG_TDO_UNCONNECTED),
        .Ext_NM_BRK(NLW_MDM_Core_I1_Ext_NM_BRK_UNCONNECTED),
        .Q(MDM_Core_I1_n_0),
        .SEL(SEL),
        .Scan_En(NLW_MDM_Core_I1_Scan_En_UNCONNECTED),
        .Scan_Reset(NLW_MDM_Core_I1_Scan_Reset_UNCONNECTED),
        .Scan_Reset_Sel(NLW_MDM_Core_I1_Scan_Reset_Sel_UNCONNECTED),
        .\Use_Serial_Unified_Completion.count_reg[5] (\JTAG_CONTROL_I/Use_Serial_Unified_Completion.count_reg ),
        .\Use_Serial_Unified_Completion.count_reg[5]_0 (p_0_in),
        .\Use_Serial_Unified_Completion.count_reg[5]_1 (\JTAG_CONTROL_I/sel ),
        .\Use_Serial_Unified_Completion.mb_instr_overrun_reg (\Use_E2.BSCAN_I_n_13 ),
        .\Use_Serial_Unified_Completion.sample_1_reg[15] (MDM_Core_I1_n_18),
        .\Using_FPGA.Native (Dbg_Clk_0),
        .completion_status131_out(\JTAG_CONTROL_I/completion_status131_out ),
        .mb_data_overrun1__0(\JTAG_CONTROL_I/mb_data_overrun1__0 ),
        .sel_n_reg(\^Ext_JTAG_CAPTURE ),
        .\shift_Count_reg[0] (p_0_in__0),
        .shift_n_reset(shift_n_reset),
        .tdo(tdo));
  system_mdm_1_0__MB_BUFG \No_Dbg_Reg_Access.BUFG_DRCK 
       (.DRCK(DRCK),
        .Dbg_Clk_0(Dbg_Clk_0));
  system_mdm_1_0__MB_BSCANE2 \Use_E2.BSCAN_I 
       (.AR(sel_n_reset),
        .D(p_1_in),
        .DRCK(DRCK),
        .Dbg_TDO_0(Dbg_TDO_0),
        .Dbg_TDO_0_0(\Use_E2.BSCAN_I_n_13 ),
        .E(\Use_E2.BSCAN_I_n_8 ),
        .Ext_JTAG_RESET(\NLW_Use_E2.BSCAN_I_Ext_JTAG_RESET_UNCONNECTED ),
        .Ext_JTAG_UPDATE(\^Ext_JTAG_UPDATE ),
        .I0(TDI),
        .Q(MDM_Core_I1_n_0),
        .SEL(SEL),
        .Scan_En(\NLW_Use_E2.BSCAN_I_Scan_En_UNCONNECTED ),
        .Scan_Reset(\NLW_Use_E2.BSCAN_I_Scan_Reset_UNCONNECTED ),
        .Scan_Reset_Sel(\NLW_Use_E2.BSCAN_I_Scan_Reset_Sel_UNCONNECTED ),
        .\Use_BSCAN.PORT_Selector_reg[0] (\^Ext_JTAG_CAPTURE ),
        .\Use_BSCAN.PORT_Selector_reg[0]_0 (\^Ext_JTAG_SHIFT ),
        .\Use_BSCAN.command_reg[5] (\JTAG_CONTROL_I/sel ),
        .\Use_Serial_Unified_Completion.completion_status_reg[15] (MDM_Core_I1_n_18),
        .\Use_Serial_Unified_Completion.count_reg[5] (p_0_in),
        .\Use_Serial_Unified_Completion.count_reg[5]_0 (\JTAG_CONTROL_I/Use_Serial_Unified_Completion.count_reg ),
        .completion_status131_out(\JTAG_CONTROL_I/completion_status131_out ),
        .mb_data_overrun1__0(\JTAG_CONTROL_I/mb_data_overrun1__0 ),
        .\shift_Count_reg[0] (p_0_in__0),
        .shift_n_reset(shift_n_reset),
        .tdo(tdo));
  system_mdm_1_0__MB_LUT1 \Use_E2.LUT1_I 
       (.Ext_JTAG_TDI(\^Ext_JTAG_TDI ),
        .I0(TDI));
endmodule

(* ORIG_REF_NAME = "MDM_Core" *) 
module system_mdm_1_0__MDM_Core
   (Q,
    Dbg_Disable_0,
    Ext_NM_BRK,
    Debug_SYS_Rst,
    Dbg_Rst_0,
    Dbg_Reg_En_0,
    completion_status131_out,
    mb_data_overrun1__0,
    Dbg_Shift_0,
    Ext_JTAG_SEL,
    tdo,
    \Use_Serial_Unified_Completion.sample_1_reg[15] ,
    \Use_Serial_Unified_Completion.count_reg[5] ,
    CLK,
    \Using_FPGA.Native ,
    sel_n_reg,
    shift_n_reset,
    Dbg_Shift_0_0,
    SEL,
    Ext_JTAG_TDO,
    Scan_Reset,
    Scan_Reset_Sel,
    Scan_En,
    D,
    Dbg_TDO_0,
    \Use_Serial_Unified_Completion.count_reg[5]_0 ,
    \shift_Count_reg[0] ,
    \Use_Serial_Unified_Completion.mb_instr_overrun_reg ,
    Ext_JTAG_TDI,
    E,
    AR,
    \Use_Serial_Unified_Completion.count_reg[5]_1 );
  output [0:0]Q;
  output Dbg_Disable_0;
  output Ext_NM_BRK;
  output Debug_SYS_Rst;
  output Dbg_Rst_0;
  output [0:7]Dbg_Reg_En_0;
  output completion_status131_out;
  output mb_data_overrun1__0;
  output Dbg_Shift_0;
  output Ext_JTAG_SEL;
  output tdo;
  output [0:0]\Use_Serial_Unified_Completion.sample_1_reg[15] ;
  output [0:0]\Use_Serial_Unified_Completion.count_reg[5] ;
  input CLK;
  input \Using_FPGA.Native ;
  input sel_n_reg;
  input shift_n_reset;
  input Dbg_Shift_0_0;
  input SEL;
  input Ext_JTAG_TDO;
  input Scan_Reset;
  input Scan_Reset_Sel;
  input Scan_En;
  input [0:0]D;
  input Dbg_TDO_0;
  input [0:0]\Use_Serial_Unified_Completion.count_reg[5]_0 ;
  input [0:0]\shift_Count_reg[0] ;
  input \Use_Serial_Unified_Completion.mb_instr_overrun_reg ;
  input Ext_JTAG_TDI;
  input [0:0]E;
  input [0:0]AR;
  input [0:0]\Use_Serial_Unified_Completion.count_reg[5]_1 ;

  wire [0:0]AR;
  wire CLK;
  wire [0:0]Config_Reg;
  wire [0:0]D;
  wire [0:7]Dbg_Reg_En_0;
  wire Dbg_Rst_0;
  wire Dbg_Shift_0;
  wire Dbg_Shift_0_0;
  wire Dbg_TDO_0;
  wire Debug_SYS_Rst;
  wire [0:0]E;
  wire Ext_JTAG_TDI;
  wire MDM_SEL;
  wire [3:0]PORT_Selector;
  wire [3:0]PORT_Selector_1;
  wire [0:0]Q;
  wire SEL;
  wire [3:0]TDI_Shifter;
  wire TDI_Shifter0;
  wire \Use_BSCAN.Config_Reg_reg[11]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_12_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg[12]_srl13_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_11_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg[27]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_1_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg[28]_srl2_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_0_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg[4]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_3_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg[5]_srl4_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_2_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_0_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_10_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_11_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_12_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_1_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_2_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_3_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_4_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_5_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_6_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_7_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_8_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_9_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_c_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_gate__0_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_gate__1_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_gate_n_0 ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[10] ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[1] ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[25] ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[26] ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[2] ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[30] ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[3] ;
  wire \Use_BSCAN.Config_Reg_reg_n_0_[9] ;
  wire \Use_E2.BSCANE2_I_i_2_n_0 ;
  wire [0:0]\Use_Serial_Unified_Completion.count_reg[5] ;
  wire [0:0]\Use_Serial_Unified_Completion.count_reg[5]_0 ;
  wire [0:0]\Use_Serial_Unified_Completion.count_reg[5]_1 ;
  wire \Use_Serial_Unified_Completion.mb_instr_overrun_reg ;
  wire [0:0]\Use_Serial_Unified_Completion.sample_1_reg[15] ;
  wire \Using_FPGA.Native ;
  wire completion_status131_out;
  wire mb_data_overrun1__0;
  wire sel_n_reg;
  wire [0:0]\shift_Count_reg[0] ;
  wire shift_n_reset;
  wire tdo;
  wire NLW_JTAG_CONTROL_I_Ext_NM_BRK_UNCONNECTED;
  wire NLW_JTAG_CONTROL_I_Scan_En_UNCONNECTED;
  wire NLW_JTAG_CONTROL_I_Scan_Reset_UNCONNECTED;
  wire NLW_JTAG_CONTROL_I_Scan_Reset_Sel_UNCONNECTED;
  wire [0:0]NLW_JTAG_CONTROL_I_AR_UNCONNECTED;

  system_mdm_1_0__JTAG_CONTROL JTAG_CONTROL_I
       (.AR(NLW_JTAG_CONTROL_I_AR_UNCONNECTED[0]),
        .CLK(CLK),
        .D(D),
        .Dbg_Reg_En_0(Dbg_Reg_En_0),
        .Dbg_Rst_0(Dbg_Rst_0),
        .Dbg_Shift_0(Dbg_Shift_0),
        .Dbg_Shift_0_0(Dbg_Shift_0_0),
        .Dbg_TDO_0(Dbg_TDO_0),
        .Debug_SYS_Rst(Debug_SYS_Rst),
        .E(E),
        .Ext_JTAG_TDI(Ext_JTAG_TDI),
        .Ext_NM_BRK(NLW_JTAG_CONTROL_I_Ext_NM_BRK_UNCONNECTED),
        .Q(Q),
        .SEL(SEL),
        .Scan_En(NLW_JTAG_CONTROL_I_Scan_En_UNCONNECTED),
        .Scan_Reset(NLW_JTAG_CONTROL_I_Scan_Reset_UNCONNECTED),
        .Scan_Reset_Sel(NLW_JTAG_CONTROL_I_Scan_Reset_Sel_UNCONNECTED),
        .\Use_BSCAN.command_reg[6]_0 (completion_status131_out),
        .\Use_Serial_Unified_Completion.count_reg[5]_0 (\Use_Serial_Unified_Completion.count_reg[5] ),
        .\Use_Serial_Unified_Completion.count_reg[5]_1 (\Use_Serial_Unified_Completion.count_reg[5]_1 ),
        .\Use_Serial_Unified_Completion.count_reg[5]_2 (\Use_Serial_Unified_Completion.count_reg[5]_0 ),
        .\Use_Serial_Unified_Completion.mb_instr_overrun_reg_0 (\Use_Serial_Unified_Completion.mb_instr_overrun_reg ),
        .\Use_Serial_Unified_Completion.sample_1_reg[15]_0 (\Use_Serial_Unified_Completion.sample_1_reg[15] ),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\command_1_reg[7]_0 (PORT_Selector),
        .mb_data_overrun1__0(mb_data_overrun1__0),
        .sel_n_reg_0(sel_n_reg),
        .sel_n_reg_1(\Use_E2.BSCANE2_I_i_2_n_0 ),
        .\shift_Count_reg[0]_0 (\shift_Count_reg[0] ),
        .tdo(tdo));
  (* SHREG_EXTRACT = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg[0] 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[1] ),
        .Q(Config_Reg));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg[10] 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_gate__0_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[10] ));
  FDRE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg[11]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_12 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .D(\Use_BSCAN.Config_Reg_reg[12]_srl13_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_11_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg[11]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_12_n_0 ),
        .R(1'b0));
  (* srl_bus_name = "U0/\MDM_Core_I1/Use_BSCAN.Config_Reg_reg " *) 
  (* srl_name = "U0/\MDM_Core_I1/Use_BSCAN.Config_Reg_reg[12]_srl13_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_11 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \Use_BSCAN.Config_Reg_reg[12]_srl13_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_11 
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b1),
        .CE(1'b1),
        .CLK(\Using_FPGA.Native ),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[25] ),
        .Q(\Use_BSCAN.Config_Reg_reg[12]_srl13_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_11_n_0 ));
  (* SHREG_EXTRACT = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \Use_BSCAN.Config_Reg_reg[1] 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[2] ),
        .PRE(shift_n_reset),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[1] ));
  (* SHREG_EXTRACT = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \Use_BSCAN.Config_Reg_reg[25] 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[26] ),
        .PRE(shift_n_reset),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[25] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg[26] 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_gate_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[26] ));
  FDRE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg[27]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_1 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .D(\Use_BSCAN.Config_Reg_reg[28]_srl2_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_0_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg[27]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_1_n_0 ),
        .R(1'b0));
  (* srl_bus_name = "U0/\MDM_Core_I1/Use_BSCAN.Config_Reg_reg " *) 
  (* srl_name = "U0/\MDM_Core_I1/Use_BSCAN.Config_Reg_reg[28]_srl2_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_0 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \Use_BSCAN.Config_Reg_reg[28]_srl2_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_0 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(\Using_FPGA.Native ),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[30] ),
        .Q(\Use_BSCAN.Config_Reg_reg[28]_srl2_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_0_n_0 ));
  (* SHREG_EXTRACT = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \Use_BSCAN.Config_Reg_reg[2] 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[3] ),
        .PRE(shift_n_reset),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[2] ));
  (* SHREG_EXTRACT = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \Use_BSCAN.Config_Reg_reg[30] 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .D(1'b0),
        .PRE(shift_n_reset),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[30] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg[3] 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_gate__1_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[3] ));
  FDRE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg[4]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_3 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .D(\Use_BSCAN.Config_Reg_reg[5]_srl4_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_2_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg[4]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_3_n_0 ),
        .R(1'b0));
  (* srl_bus_name = "U0/\MDM_Core_I1/Use_BSCAN.Config_Reg_reg " *) 
  (* srl_name = "U0/\MDM_Core_I1/Use_BSCAN.Config_Reg_reg[5]_srl4_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \Use_BSCAN.Config_Reg_reg[5]_srl4_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_2 
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(\Using_FPGA.Native ),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[9] ),
        .Q(\Use_BSCAN.Config_Reg_reg[5]_srl4_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_2_n_0 ));
  (* SHREG_EXTRACT = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \Use_BSCAN.Config_Reg_reg[9] 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .D(\Use_BSCAN.Config_Reg_reg_n_0_[10] ),
        .PRE(shift_n_reset),
        .Q(\Use_BSCAN.Config_Reg_reg_n_0_[9] ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(1'b1),
        .Q(\Use_BSCAN.Config_Reg_reg_c_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_0 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_0_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_1 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_0_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_10 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_9_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_10_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_11 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_10_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_11_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_12 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_11_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_12_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_2 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_1_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_3 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_2_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_3_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_4 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_3_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_4_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_5 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_4_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_5_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_6 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_5_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_6_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_7 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_6_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_7_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_8 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_7_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_8_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.Config_Reg_reg_c_9 
       (.C(\Using_FPGA.Native ),
        .CE(1'b1),
        .CLR(shift_n_reset),
        .D(\Use_BSCAN.Config_Reg_reg_c_8_n_0 ),
        .Q(\Use_BSCAN.Config_Reg_reg_c_9_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \Use_BSCAN.Config_Reg_reg_gate 
       (.I0(\Use_BSCAN.Config_Reg_reg[27]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_1_n_0 ),
        .I1(\Use_BSCAN.Config_Reg_reg_c_1_n_0 ),
        .O(\Use_BSCAN.Config_Reg_reg_gate_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \Use_BSCAN.Config_Reg_reg_gate__0 
       (.I0(\Use_BSCAN.Config_Reg_reg[11]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_12_n_0 ),
        .I1(\Use_BSCAN.Config_Reg_reg_c_12_n_0 ),
        .O(\Use_BSCAN.Config_Reg_reg_gate__0_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \Use_BSCAN.Config_Reg_reg_gate__1 
       (.I0(\Use_BSCAN.Config_Reg_reg[4]_MDM_Core_I1_Use_BSCAN.Config_Reg_reg_c_3_n_0 ),
        .I1(\Use_BSCAN.Config_Reg_reg_c_3_n_0 ),
        .O(\Use_BSCAN.Config_Reg_reg_gate__1_n_0 ));
  LUT5 #(
    .INIT(32'h00000002)) 
    \Use_BSCAN.PORT_Selector_1[3]_i_1 
       (.I0(SEL),
        .I1(PORT_Selector[0]),
        .I2(PORT_Selector[1]),
        .I3(PORT_Selector[3]),
        .I4(PORT_Selector[2]),
        .O(MDM_SEL));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.PORT_Selector_1_reg[0] 
       (.C(CLK),
        .CE(MDM_SEL),
        .CLR(AR),
        .D(TDI_Shifter[0]),
        .Q(PORT_Selector_1[0]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.PORT_Selector_1_reg[1] 
       (.C(CLK),
        .CE(MDM_SEL),
        .CLR(AR),
        .D(TDI_Shifter[1]),
        .Q(PORT_Selector_1[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.PORT_Selector_1_reg[2] 
       (.C(CLK),
        .CE(MDM_SEL),
        .CLR(AR),
        .D(TDI_Shifter[2]),
        .Q(PORT_Selector_1[2]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.PORT_Selector_1_reg[3] 
       (.C(CLK),
        .CE(MDM_SEL),
        .CLR(AR),
        .D(TDI_Shifter[3]),
        .Q(PORT_Selector_1[3]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.PORT_Selector_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(PORT_Selector_1[0]),
        .Q(PORT_Selector[0]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.PORT_Selector_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(PORT_Selector_1[1]),
        .Q(PORT_Selector[1]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.PORT_Selector_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(PORT_Selector_1[2]),
        .Q(PORT_Selector[2]));
  FDCE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b1)) 
    \Use_BSCAN.PORT_Selector_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(PORT_Selector_1[3]),
        .Q(PORT_Selector[3]));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    \Use_BSCAN.TDI_Shifter[3]_i_1 
       (.I0(PORT_Selector[2]),
        .I1(PORT_Selector[3]),
        .I2(PORT_Selector[1]),
        .I3(PORT_Selector[0]),
        .I4(SEL),
        .I5(Dbg_Shift_0_0),
        .O(TDI_Shifter0));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.TDI_Shifter_reg[0] 
       (.C(\Using_FPGA.Native ),
        .CE(TDI_Shifter0),
        .CLR(AR),
        .D(TDI_Shifter[1]),
        .Q(TDI_Shifter[0]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.TDI_Shifter_reg[1] 
       (.C(\Using_FPGA.Native ),
        .CE(TDI_Shifter0),
        .CLR(AR),
        .D(TDI_Shifter[2]),
        .Q(TDI_Shifter[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.TDI_Shifter_reg[2] 
       (.C(\Using_FPGA.Native ),
        .CE(TDI_Shifter0),
        .CLR(AR),
        .D(TDI_Shifter[3]),
        .Q(TDI_Shifter[2]));
  FDCE #(
    .INIT(1'b0)) 
    \Use_BSCAN.TDI_Shifter_reg[3] 
       (.C(\Using_FPGA.Native ),
        .CE(TDI_Shifter0),
        .CLR(AR),
        .D(Ext_JTAG_TDI),
        .Q(TDI_Shifter[3]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT5 #(
    .INIT(32'hEEEEEFEE)) 
    \Use_E2.BSCANE2_I_i_2 
       (.I0(PORT_Selector[2]),
        .I1(PORT_Selector[3]),
        .I2(PORT_Selector[0]),
        .I3(Config_Reg),
        .I4(PORT_Selector[1]),
        .O(\Use_E2.BSCANE2_I_i_2_n_0 ));
endmodule

(* CHECK_LICENSE_TYPE = "system_microblaze_0_0,MicroBlaze,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "MicroBlaze,Vivado 2020.1" *) 
module system_microblaze_0_0
   (Clk,
    Reset,
    Interrupt,
    Interrupt_Address,
    Interrupt_Ack,
    Instr_Addr,
    Instr,
    IFetch,
    I_AS,
    IReady,
    IWAIT,
    ICE,
    IUE,
    Data_Addr,
    Data_Read,
    Data_Write,
    D_AS,
    Read_Strobe,
    Write_Strobe,
    DReady,
    DWait,
    DCE,
    DUE,
    Byte_Enable,
    M_AXI_DP_AWADDR,
    M_AXI_DP_AWPROT,
    M_AXI_DP_AWVALID,
    M_AXI_DP_AWREADY,
    M_AXI_DP_WDATA,
    M_AXI_DP_WSTRB,
    M_AXI_DP_WVALID,
    M_AXI_DP_WREADY,
    M_AXI_DP_BRESP,
    M_AXI_DP_BVALID,
    M_AXI_DP_BREADY,
    M_AXI_DP_ARADDR,
    M_AXI_DP_ARPROT,
    M_AXI_DP_ARVALID,
    M_AXI_DP_ARREADY,
    M_AXI_DP_RDATA,
    M_AXI_DP_RRESP,
    M_AXI_DP_RVALID,
    M_AXI_DP_RREADY,
    Dbg_Clk,
    Dbg_TDI,
    Dbg_TDO,
    Dbg_Reg_En,
    Dbg_Shift,
    Dbg_Capture,
    Dbg_Update,
    Debug_Rst,
    Dbg_Disable);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLK.CLK CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME CLK.CLK, ASSOCIATED_BUSIF M0_AXIS:S0_AXIS:M1_AXIS:S1_AXIS:M2_AXIS:S2_AXIS:M3_AXIS:S3_AXIS:M4_AXIS:S4_AXIS:M5_AXIS:S5_AXIS:M6_AXIS:S6_AXIS:M7_AXIS:S7_AXIS:M8_AXIS:S8_AXIS:M9_AXIS:S9_AXIS:M10_AXIS:S10_AXIS:M11_AXIS:S11_AXIS:M12_AXIS:S12_AXIS:M13_AXIS:S13_AXIS:M14_AXIS:S14_AXIS:M15_AXIS:S15_AXIS:DLMB:ILMB:M_AXI_DP:M_AXI_IP:M_AXI_DC:M_AXI_IC:M_ACE_DC:M_ACE_IC:MON_DLMB:MON_ILMB:MON_AXI_DP:MON_AXI_IP:MON_AXI_DC:MON_AXI_IC:MON_ACE_DC:MON_ACE_IC, ASSOCIATED_RESET Reset, FREQ_HZ 200000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1, INSERT_VIP 0" *) input Clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 RST.RESET RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME RST.RESET, POLARITY ACTIVE_HIGH, TYPE PROCESSOR, INSERT_VIP 0" *) input Reset;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbinterrupt:1.0 INTERRUPT INTERRUPT" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME INTERRUPT, SENSITIVITY LEVEL_HIGH, LOW_LATENCY 0" *) input Interrupt;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbinterrupt:1.0 INTERRUPT ADDRESS" *) input [0:31]Interrupt_Address;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbinterrupt:1.0 INTERRUPT ACK" *) output [0:1]Interrupt_Ack;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 ILMB ABUS" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ILMB, ADDR_WIDTH 32, DATA_WIDTH 32, PROTOCOL STANDARD, READ_WRITE_MODE READ_ONLY" *) output [0:31]Instr_Addr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 ILMB READDBUS" *) input [0:31]Instr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 ILMB READSTROBE" *) output IFetch;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 ILMB ADDRSTROBE" *) output I_AS;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 ILMB READY" *) input IReady;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 ILMB WAIT" *) input IWAIT;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 ILMB CE" *) input ICE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 ILMB UE" *) input IUE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 DLMB ABUS" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME DLMB, ADDR_WIDTH 32, DATA_WIDTH 32, PROTOCOL STANDARD, READ_WRITE_MODE READ_WRITE" *) output [0:31]Data_Addr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 DLMB READDBUS" *) input [0:31]Data_Read;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 DLMB WRITEDBUS" *) output [0:31]Data_Write;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 DLMB ADDRSTROBE" *) output D_AS;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 DLMB READSTROBE" *) output Read_Strobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 DLMB WRITESTROBE" *) output Write_Strobe;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 DLMB READY" *) input DReady;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 DLMB WAIT" *) input DWait;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 DLMB CE" *) input DCE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 DLMB UE" *) input DUE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:lmb:1.0 DLMB BE" *) output [0:3]Byte_Enable;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP AWADDR" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M_AXI_DP, ID_WIDTH 0, READ_WRITE_MODE READ_WRITE, SUPPORTS_NARROW_BURST 0, HAS_BURST 0, HAS_LOCK 0, DATA_WIDTH 32, ADDR_WIDTH 32, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, MAX_BURST_LENGTH 1, PROTOCOL AXI4LITE, FREQ_HZ 200000000, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) output [31:0]M_AXI_DP_AWADDR;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP AWPROT" *) output [2:0]M_AXI_DP_AWPROT;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP AWVALID" *) output M_AXI_DP_AWVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP AWREADY" *) input M_AXI_DP_AWREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP WDATA" *) output [31:0]M_AXI_DP_WDATA;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP WSTRB" *) output [3:0]M_AXI_DP_WSTRB;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP WVALID" *) output M_AXI_DP_WVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP WREADY" *) input M_AXI_DP_WREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP BRESP" *) input [1:0]M_AXI_DP_BRESP;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP BVALID" *) input M_AXI_DP_BVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP BREADY" *) output M_AXI_DP_BREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP ARADDR" *) output [31:0]M_AXI_DP_ARADDR;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP ARPROT" *) output [2:0]M_AXI_DP_ARPROT;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP ARVALID" *) output M_AXI_DP_ARVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP ARREADY" *) input M_AXI_DP_ARREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP RDATA" *) input [31:0]M_AXI_DP_RDATA;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP RRESP" *) input [1:0]M_AXI_DP_RRESP;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP RVALID" *) input M_AXI_DP_RVALID;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M_AXI_DP RREADY" *) output M_AXI_DP_RREADY;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 DEBUG CLK" *) input Dbg_Clk;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 DEBUG TDI" *) input Dbg_TDI;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 DEBUG TDO" *) output Dbg_TDO;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 DEBUG REG_EN" *) input [0:7]Dbg_Reg_En;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 DEBUG SHIFT" *) input Dbg_Shift;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 DEBUG CAPTURE" *) input Dbg_Capture;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 DEBUG UPDATE" *) input Dbg_Update;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 DEBUG RST" *) input Debug_Rst;
  (* X_INTERFACE_INFO = "xilinx.com:interface:mbdebug:3.0 DEBUG DISABLE" *) input Dbg_Disable;

  wire [0:3]Byte_Enable;
  wire Clk;
  wire DReady;
  wire D_AS;
  wire [0:31]Data_Addr;
  wire [0:31]Data_Read;
  wire [0:31]Data_Write;
  wire Dbg_Capture;
  wire Dbg_Clk;
  wire [0:7]Dbg_Reg_En;
  wire Dbg_Shift;
  wire Dbg_TDI;
  wire Dbg_TDO;
  wire Dbg_Update;
  wire Debug_Rst;
  wire IReady;
  wire I_AS;
  wire [0:31]Instr;
  wire [0:31]Instr_Addr;
  wire [31:0]M_AXI_DP_ARADDR;
  wire M_AXI_DP_ARREADY;
  wire M_AXI_DP_ARVALID;
  wire M_AXI_DP_AWREADY;
  wire M_AXI_DP_AWVALID;
  wire M_AXI_DP_BVALID;
  wire [31:0]M_AXI_DP_RDATA;
  wire M_AXI_DP_RVALID;
  wire [31:0]M_AXI_DP_WDATA;
  wire M_AXI_DP_WREADY;
  wire M_AXI_DP_WVALID;
  wire Reset;
  wire Write_Strobe;
  wire NLW_U0_Config_Reset_UNCONNECTED;
  wire NLW_U0_DCE_UNCONNECTED;
  wire NLW_U0_DEBUG_ACLK_UNCONNECTED;
  wire NLW_U0_DEBUG_ARESETN_UNCONNECTED;
  wire NLW_U0_DUE_UNCONNECTED;
  wire NLW_U0_DWait_UNCONNECTED;
  wire NLW_U0_Dbg_ARREADY_UNCONNECTED;
  wire NLW_U0_Dbg_ARVALID_UNCONNECTED;
  wire NLW_U0_Dbg_AWREADY_UNCONNECTED;
  wire NLW_U0_Dbg_AWVALID_UNCONNECTED;
  wire NLW_U0_Dbg_BREADY_UNCONNECTED;
  wire NLW_U0_Dbg_BVALID_UNCONNECTED;
  wire NLW_U0_Dbg_Continue_UNCONNECTED;
  wire NLW_U0_Dbg_Disable_UNCONNECTED;
  wire NLW_U0_Dbg_Intr_UNCONNECTED;
  wire NLW_U0_Dbg_RREADY_UNCONNECTED;
  wire NLW_U0_Dbg_RVALID_UNCONNECTED;
  wire NLW_U0_Dbg_Stop_UNCONNECTED;
  wire NLW_U0_Dbg_Trace_Clk_UNCONNECTED;
  wire NLW_U0_Dbg_Trace_Ready_UNCONNECTED;
  wire NLW_U0_Dbg_Trace_Valid_UNCONNECTED;
  wire NLW_U0_Dbg_WREADY_UNCONNECTED;
  wire NLW_U0_Dbg_WVALID_UNCONNECTED;
  wire NLW_U0_Dbg_Wakeup_UNCONNECTED;
  wire NLW_U0_Ext_BRK_UNCONNECTED;
  wire NLW_U0_Ext_NM_BRK_UNCONNECTED;
  wire NLW_U0_Hibernate_UNCONNECTED;
  wire NLW_U0_ICE_UNCONNECTED;
  wire NLW_U0_IFetch_UNCONNECTED;
  wire NLW_U0_IUE_UNCONNECTED;
  wire NLW_U0_IWAIT_UNCONNECTED;
  wire NLW_U0_Interrupt_UNCONNECTED;
  wire NLW_U0_M0_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M0_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M0_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M10_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M10_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M10_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M11_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M11_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M11_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M12_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M12_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M12_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M13_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M13_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M13_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M14_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M14_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M14_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M15_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M15_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M15_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M1_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M1_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M1_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M2_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M2_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M2_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M3_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M3_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M3_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M4_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M4_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M4_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M5_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M5_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M5_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M6_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M6_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M6_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M7_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M7_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M7_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M8_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M8_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M8_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_M9_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_M9_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_M9_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_MB_Error_UNCONNECTED;
  wire NLW_U0_MB_Halted_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_ACREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_ACVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_ARLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_ARREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_ARVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_AWLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_AWREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_AWVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_BREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_BVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_CDLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_CDREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_CDVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_CRREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_CRVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_RACK_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_RLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_RREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_RVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_WACK_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_WLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_WREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DC_WVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_DP_ARLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_DP_AWLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_DP_BREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DP_RLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_DP_RREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_DP_WLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_ACREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_ACVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_ARLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_ARREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_ARVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_AWLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_AWREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_AWVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_BREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_BVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_CDLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_CDREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_CDVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_CRREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_CRVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_RACK_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_RLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_RREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_RVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_WACK_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_WLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_WREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IC_WVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_ARLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_ARREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_ARVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_AWLOCK_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_AWREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_AWVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_BREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_BVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_RLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_RREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_RVALID_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_WLAST_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_WREADY_UNCONNECTED;
  wire NLW_U0_M_AXI_IP_WVALID_UNCONNECTED;
  wire NLW_U0_Mb_Reset_UNCONNECTED;
  wire NLW_U0_Pause_UNCONNECTED;
  wire NLW_U0_Pause_Ack_UNCONNECTED;
  wire NLW_U0_Read_Strobe_UNCONNECTED;
  wire NLW_U0_S0_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S0_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S0_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S10_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S10_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S10_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S11_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S11_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S11_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S12_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S12_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S12_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S13_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S13_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S13_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S14_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S14_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S14_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S15_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S15_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S15_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S1_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S1_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S1_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S2_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S2_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S2_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S3_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S3_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S3_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S4_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S4_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S4_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S5_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S5_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S5_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S6_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S6_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S6_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S7_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S7_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S7_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S8_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S8_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S8_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_S9_AXIS_TLAST_UNCONNECTED;
  wire NLW_U0_S9_AXIS_TREADY_UNCONNECTED;
  wire NLW_U0_S9_AXIS_TVALID_UNCONNECTED;
  wire NLW_U0_Scan_En_UNCONNECTED;
  wire NLW_U0_Scan_Reset_UNCONNECTED;
  wire NLW_U0_Scan_Reset_Sel_UNCONNECTED;
  wire NLW_U0_Sleep_UNCONNECTED;
  wire NLW_U0_Suspend_UNCONNECTED;
  wire NLW_U0_Trace_DCache_Hit_UNCONNECTED;
  wire NLW_U0_Trace_DCache_Rdy_UNCONNECTED;
  wire NLW_U0_Trace_DCache_Read_UNCONNECTED;
  wire NLW_U0_Trace_DCache_Req_UNCONNECTED;
  wire NLW_U0_Trace_Data_Access_UNCONNECTED;
  wire NLW_U0_Trace_Data_Read_UNCONNECTED;
  wire NLW_U0_Trace_Data_Write_UNCONNECTED;
  wire NLW_U0_Trace_Delay_Slot_UNCONNECTED;
  wire NLW_U0_Trace_EX_PipeRun_UNCONNECTED;
  wire NLW_U0_Trace_Exception_Taken_UNCONNECTED;
  wire NLW_U0_Trace_ICache_Hit_UNCONNECTED;
  wire NLW_U0_Trace_ICache_Rdy_UNCONNECTED;
  wire NLW_U0_Trace_ICache_Req_UNCONNECTED;
  wire NLW_U0_Trace_Jump_Hit_UNCONNECTED;
  wire NLW_U0_Trace_Jump_Taken_UNCONNECTED;
  wire NLW_U0_Trace_MB_Halted_UNCONNECTED;
  wire NLW_U0_Trace_MEM_PipeRun_UNCONNECTED;
  wire NLW_U0_Trace_OF_PipeRun_UNCONNECTED;
  wire NLW_U0_Trace_Reg_Write_UNCONNECTED;
  wire NLW_U0_Trace_Valid_Instr_UNCONNECTED;
  wire [0:31]NLW_U0_Data_Addr_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_ARADDR_UNCONNECTED;
  wire [14:2]NLW_U0_Dbg_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_BRESP_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_RDATA_UNCONNECTED;
  wire [1:0]NLW_U0_Dbg_RRESP_UNCONNECTED;
  wire [0:35]NLW_U0_Dbg_Trace_Data_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_In_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Ack_Out_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_In_UNCONNECTED;
  wire [0:7]NLW_U0_Dbg_Trig_Out_UNCONNECTED;
  wire [31:0]NLW_U0_Dbg_WDATA_UNCONNECTED;
  wire [0:31]NLW_U0_Instr_Addr_UNCONNECTED;
  wire [0:1]NLW_U0_Interrupt_Ack_UNCONNECTED;
  wire [0:31]NLW_U0_Interrupt_Address_UNCONNECTED;
  wire [0:4095]NLW_U0_LOCKSTEP_Master_Out_UNCONNECTED;
  wire [0:4095]NLW_U0_LOCKSTEP_Out_UNCONNECTED;
  wire [0:4095]NLW_U0_LOCKSTEP_Slave_In_UNCONNECTED;
  wire [31:0]NLW_U0_M0_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M10_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M11_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M12_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M13_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M14_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M15_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M1_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M2_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M3_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M4_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M5_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M6_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M7_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M8_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M9_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_DC_ACADDR_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DC_ACPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DC_ACSNOOP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_DC_ARADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_ARBAR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_ARBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DC_ARCACHE_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_ARDOMAIN_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DC_ARID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_DC_ARLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DC_ARPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DC_ARQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DC_ARSIZE_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DC_ARSNOOP_UNCONNECTED;
  wire [4:0]NLW_U0_M_AXI_DC_ARUSER_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_DC_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_AWBAR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_AWBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DC_AWCACHE_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_AWDOMAIN_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DC_AWID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_DC_AWLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DC_AWPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DC_AWQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DC_AWSIZE_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DC_AWSNOOP_UNCONNECTED;
  wire [4:0]NLW_U0_M_AXI_DC_AWUSER_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DC_BID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_BRESP_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DC_BUSER_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_DC_CDDATA_UNCONNECTED;
  wire [4:0]NLW_U0_M_AXI_DC_CRRESP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_DC_RDATA_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DC_RID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DC_RRESP_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DC_RUSER_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_DC_WDATA_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DC_WSTRB_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DC_WUSER_UNCONNECTED;
  wire [15:9]NLW_U0_M_AXI_DP_ARADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DP_ARBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DP_ARCACHE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DP_ARID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_DP_ARLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DP_ARPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DP_ARQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DP_ARSIZE_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_DP_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DP_AWBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DP_AWCACHE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DP_AWID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_DP_AWLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DP_AWPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DP_AWQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_DP_AWSIZE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DP_BID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DP_BRESP_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_DP_RID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_DP_RRESP_UNCONNECTED;
  wire [29:11]NLW_U0_M_AXI_DP_WDATA_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_DP_WSTRB_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IC_ACADDR_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IC_ACPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IC_ACSNOOP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IC_ARADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_ARBAR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_ARBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IC_ARCACHE_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_ARDOMAIN_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IC_ARID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_IC_ARLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IC_ARPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IC_ARQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IC_ARSIZE_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IC_ARSNOOP_UNCONNECTED;
  wire [4:0]NLW_U0_M_AXI_IC_ARUSER_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IC_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_AWBAR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_AWBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IC_AWCACHE_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_AWDOMAIN_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IC_AWID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_IC_AWLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IC_AWPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IC_AWQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IC_AWSIZE_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IC_AWSNOOP_UNCONNECTED;
  wire [4:0]NLW_U0_M_AXI_IC_AWUSER_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IC_BID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_BRESP_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IC_BUSER_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IC_CDDATA_UNCONNECTED;
  wire [4:0]NLW_U0_M_AXI_IC_CRRESP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IC_RDATA_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IC_RID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IC_RRESP_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IC_RUSER_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IC_WDATA_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IC_WSTRB_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IC_WUSER_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IP_ARADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IP_ARBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IP_ARCACHE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IP_ARID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_IP_ARLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IP_ARPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IP_ARQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IP_ARSIZE_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IP_AWADDR_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IP_AWBURST_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IP_AWCACHE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IP_AWID_UNCONNECTED;
  wire [7:0]NLW_U0_M_AXI_IP_AWLEN_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IP_AWPROT_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IP_AWQOS_UNCONNECTED;
  wire [2:0]NLW_U0_M_AXI_IP_AWSIZE_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IP_BID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IP_BRESP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IP_RDATA_UNCONNECTED;
  wire [0:0]NLW_U0_M_AXI_IP_RID_UNCONNECTED;
  wire [1:0]NLW_U0_M_AXI_IP_RRESP_UNCONNECTED;
  wire [31:0]NLW_U0_M_AXI_IP_WDATA_UNCONNECTED;
  wire [3:0]NLW_U0_M_AXI_IP_WSTRB_UNCONNECTED;
  wire [0:3]NLW_U0_Non_Secure_UNCONNECTED;
  wire [255:0]NLW_U0_RAM_From_UNCONNECTED;
  wire [255:0]NLW_U0_RAM_To_UNCONNECTED;
  wire [0:1]NLW_U0_Reset_Mode_UNCONNECTED;
  wire [31:0]NLW_U0_S0_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S10_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S11_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S12_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S13_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S14_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S15_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S1_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S2_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S3_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S4_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S5_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S6_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S7_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S8_AXIS_TDATA_UNCONNECTED;
  wire [31:0]NLW_U0_S9_AXIS_TDATA_UNCONNECTED;
  wire [0:31]NLW_U0_Trace_Data_Address_UNCONNECTED;
  wire [0:3]NLW_U0_Trace_Data_Byte_Enable_UNCONNECTED;
  wire [0:31]NLW_U0_Trace_Data_Write_Value_UNCONNECTED;
  wire [0:4]NLW_U0_Trace_Exception_Kind_UNCONNECTED;
  wire [0:31]NLW_U0_Trace_Instruction_UNCONNECTED;
  wire [0:14]NLW_U0_Trace_MSR_Reg_UNCONNECTED;
  wire [0:31]NLW_U0_Trace_New_Reg_Value_UNCONNECTED;
  wire [0:31]NLW_U0_Trace_PC_UNCONNECTED;
  wire [0:7]NLW_U0_Trace_PID_Reg_UNCONNECTED;
  wire [0:4]NLW_U0_Trace_Reg_Addr_UNCONNECTED;

  (* C_ADDR_TAG_BITS = "17" *) 
  (* C_ALLOW_DCACHE_WR = "1" *) 
  (* C_ALLOW_ICACHE_WR = "1" *) 
  (* C_AREA_OPTIMIZED = "0" *) 
  (* C_ASYNC_INTERRUPT = "1" *) 
  (* C_ASYNC_WAKEUP = "3" *) 
  (* C_AVOID_PRIMITIVES = "0" *) 
  (* C_BASE_VECTORS = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_BRANCH_TARGET_CACHE_SIZE = "0" *) 
  (* C_CACHE_BYTE_SIZE = "8192" *) 
  (* C_DADDR_SIZE = "32" *) 
  (* C_DATA_SIZE = "32" *) 
  (* C_DCACHE_ADDR_TAG = "17" *) 
  (* C_DCACHE_ALWAYS_USED = "1" *) 
  (* C_DCACHE_BASEADDR = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_DCACHE_BYTE_SIZE = "8192" *) 
  (* C_DCACHE_DATA_WIDTH = "0" *) 
  (* C_DCACHE_FORCE_TAG_LUTRAM = "0" *) 
  (* C_DCACHE_HIGHADDR = "64'b0000000000000000000000000000000000111111111111111111111111111111" *) 
  (* C_DCACHE_LINE_LEN = "4" *) 
  (* C_DCACHE_USE_WRITEBACK = "0" *) 
  (* C_DCACHE_VICTIMS = "0" *) 
  (* C_DEBUG_COUNTER_WIDTH = "32" *) 
  (* C_DEBUG_ENABLED = "1" *) 
  (* C_DEBUG_EVENT_COUNTERS = "5" *) 
  (* C_DEBUG_EXTERNAL_TRACE = "0" *) 
  (* C_DEBUG_INTERFACE = "0" *) 
  (* C_DEBUG_LATENCY_COUNTERS = "1" *) 
  (* C_DEBUG_PROFILE_SIZE = "0" *) 
  (* C_DEBUG_TRACE_ASYNC_RESET = "0" *) 
  (* C_DEBUG_TRACE_SIZE = "8192" *) 
  (* C_DIV_ZERO_EXCEPTION = "0" *) 
  (* C_DYNAMIC_BUS_SIZING = "0" *) 
  (* C_D_AXI = "1" *) 
  (* C_D_LMB = "1" *) 
  (* C_D_LMB_PROTOCOL = "0" *) 
  (* C_ECC_USE_CE_EXCEPTION = "0" *) 
  (* C_EDGE_IS_POSITIVE = "1" *) 
  (* C_ENDIANNESS = "1" *) 
  (* C_FAMILY = "spartan7" *) 
  (* C_FAULT_TOLERANT = "0" *) 
  (* C_FPU_EXCEPTION = "0" *) 
  (* C_FREQ = "200000000" *) 
  (* C_FSL_EXCEPTION = "0" *) 
  (* C_FSL_LINKS = "0" *) 
  (* C_IADDR_SIZE = "32" *) 
  (* C_ICACHE_ALWAYS_USED = "1" *) 
  (* C_ICACHE_BASEADDR = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_ICACHE_DATA_WIDTH = "0" *) 
  (* C_ICACHE_FORCE_TAG_LUTRAM = "0" *) 
  (* C_ICACHE_HIGHADDR = "64'b0000000000000000000000000000000000111111111111111111111111111111" *) 
  (* C_ICACHE_LINE_LEN = "4" *) 
  (* C_ICACHE_STREAMS = "0" *) 
  (* C_ICACHE_VICTIMS = "0" *) 
  (* C_ILL_OPCODE_EXCEPTION = "0" *) 
  (* C_IMPRECISE_EXCEPTIONS = "0" *) 
  (* C_INSTANCE = "system_microblaze_0_0" *) 
  (* C_INSTR_SIZE = "32" *) 
  (* C_INTERCONNECT = "2" *) 
  (* C_INTERRUPT_IS_EDGE = "0" *) 
  (* C_I_AXI = "0" *) 
  (* C_I_LMB = "1" *) 
  (* C_I_LMB_PROTOCOL = "0" *) 
  (* C_LMB_DATA_SIZE = "32" *) 
  (* C_LOCKSTEP_MASTER = "0" *) 
  (* C_LOCKSTEP_SLAVE = "0" *) 
  (* C_M0_AXIS_DATA_WIDTH = "32" *) 
  (* C_M10_AXIS_DATA_WIDTH = "32" *) 
  (* C_M11_AXIS_DATA_WIDTH = "32" *) 
  (* C_M12_AXIS_DATA_WIDTH = "32" *) 
  (* C_M13_AXIS_DATA_WIDTH = "32" *) 
  (* C_M14_AXIS_DATA_WIDTH = "32" *) 
  (* C_M15_AXIS_DATA_WIDTH = "32" *) 
  (* C_M1_AXIS_DATA_WIDTH = "32" *) 
  (* C_M2_AXIS_DATA_WIDTH = "32" *) 
  (* C_M3_AXIS_DATA_WIDTH = "32" *) 
  (* C_M4_AXIS_DATA_WIDTH = "32" *) 
  (* C_M5_AXIS_DATA_WIDTH = "32" *) 
  (* C_M6_AXIS_DATA_WIDTH = "32" *) 
  (* C_M7_AXIS_DATA_WIDTH = "32" *) 
  (* C_M8_AXIS_DATA_WIDTH = "32" *) 
  (* C_M9_AXIS_DATA_WIDTH = "32" *) 
  (* C_MMU_DTLB_SIZE = "4" *) 
  (* C_MMU_ITLB_SIZE = "2" *) 
  (* C_MMU_PRIVILEGED_INSTR = "0" *) 
  (* C_MMU_TLB_ACCESS = "3" *) 
  (* C_MMU_ZONES = "16" *) 
  (* C_M_AXI_DC_ADDR_WIDTH = "32" *) 
  (* C_M_AXI_DC_ARUSER_WIDTH = "5" *) 
  (* C_M_AXI_DC_AWUSER_WIDTH = "5" *) 
  (* C_M_AXI_DC_BUSER_WIDTH = "1" *) 
  (* C_M_AXI_DC_DATA_WIDTH = "32" *) 
  (* C_M_AXI_DC_EXCLUSIVE_ACCESS = "0" *) 
  (* C_M_AXI_DC_RUSER_WIDTH = "1" *) 
  (* C_M_AXI_DC_THREAD_ID_WIDTH = "1" *) 
  (* C_M_AXI_DC_USER_VALUE = "31" *) 
  (* C_M_AXI_DC_WUSER_WIDTH = "1" *) 
  (* C_M_AXI_DP_ADDR_WIDTH = "32" *) 
  (* C_M_AXI_DP_DATA_WIDTH = "32" *) 
  (* C_M_AXI_DP_EXCLUSIVE_ACCESS = "0" *) 
  (* C_M_AXI_DP_THREAD_ID_WIDTH = "1" *) 
  (* C_M_AXI_D_BUS_EXCEPTION = "0" *) 
  (* C_M_AXI_IC_ADDR_WIDTH = "32" *) 
  (* C_M_AXI_IC_ARUSER_WIDTH = "5" *) 
  (* C_M_AXI_IC_AWUSER_WIDTH = "5" *) 
  (* C_M_AXI_IC_BUSER_WIDTH = "1" *) 
  (* C_M_AXI_IC_DATA_WIDTH = "32" *) 
  (* C_M_AXI_IC_RUSER_WIDTH = "1" *) 
  (* C_M_AXI_IC_THREAD_ID_WIDTH = "1" *) 
  (* C_M_AXI_IC_USER_VALUE = "31" *) 
  (* C_M_AXI_IC_WUSER_WIDTH = "1" *) 
  (* C_M_AXI_IP_ADDR_WIDTH = "32" *) 
  (* C_M_AXI_IP_DATA_WIDTH = "32" *) 
  (* C_M_AXI_IP_THREAD_ID_WIDTH = "1" *) 
  (* C_M_AXI_I_BUS_EXCEPTION = "0" *) 
  (* C_NUMBER_OF_PC_BRK = "1" *) 
  (* C_NUMBER_OF_RD_ADDR_BRK = "0" *) 
  (* C_NUMBER_OF_WR_ADDR_BRK = "0" *) 
  (* C_NUM_SYNC_FF_CLK = "2" *) 
  (* C_NUM_SYNC_FF_CLK_DEBUG = "2" *) 
  (* C_NUM_SYNC_FF_CLK_IRQ = "1" *) 
  (* C_NUM_SYNC_FF_DBG_CLK = "1" *) 
  (* C_NUM_SYNC_FF_DBG_TRACE_CLK = "2" *) 
  (* C_OPCODE_0x0_ILLEGAL = "0" *) 
  (* C_OPTIMIZATION = "0" *) 
  (* C_PC_WIDTH = "32" *) 
  (* C_PIADDR_SIZE = "32" *) 
  (* C_PVR = "0" *) 
  (* C_PVR_USER1 = "8'b00000000" *) 
  (* C_PVR_USER2 = "0" *) 
  (* C_RESET_MSR = "0" *) 
  (* C_S0_AXIS_DATA_WIDTH = "32" *) 
  (* C_S10_AXIS_DATA_WIDTH = "32" *) 
  (* C_S11_AXIS_DATA_WIDTH = "32" *) 
  (* C_S12_AXIS_DATA_WIDTH = "32" *) 
  (* C_S13_AXIS_DATA_WIDTH = "32" *) 
  (* C_S14_AXIS_DATA_WIDTH = "32" *) 
  (* C_S15_AXIS_DATA_WIDTH = "32" *) 
  (* C_S1_AXIS_DATA_WIDTH = "32" *) 
  (* C_S2_AXIS_DATA_WIDTH = "32" *) 
  (* C_S3_AXIS_DATA_WIDTH = "32" *) 
  (* C_S4_AXIS_DATA_WIDTH = "32" *) 
  (* C_S5_AXIS_DATA_WIDTH = "32" *) 
  (* C_S6_AXIS_DATA_WIDTH = "32" *) 
  (* C_S7_AXIS_DATA_WIDTH = "32" *) 
  (* C_S8_AXIS_DATA_WIDTH = "32" *) 
  (* C_S9_AXIS_DATA_WIDTH = "32" *) 
  (* C_SCO = "0" *) 
  (* C_UNALIGNED_EXCEPTIONS = "0" *) 
  (* C_USE_BARREL = "0" *) 
  (* C_USE_BRANCH_TARGET_CACHE = "0" *) 
  (* C_USE_CONFIG_RESET = "0" *) 
  (* C_USE_DCACHE = "0" *) 
  (* C_USE_DIV = "0" *) 
  (* C_USE_EXTENDED_FSL_INSTR = "0" *) 
  (* C_USE_EXT_BRK = "0" *) 
  (* C_USE_EXT_NM_BRK = "0" *) 
  (* C_USE_FPU = "0" *) 
  (* C_USE_HW_MUL = "0" *) 
  (* C_USE_ICACHE = "0" *) 
  (* C_USE_INTERRUPT = "0" *) 
  (* C_USE_MMU = "0" *) 
  (* C_USE_MSR_INSTR = "0" *) 
  (* C_USE_NON_SECURE = "0" *) 
  (* C_USE_PCMP_INSTR = "0" *) 
  (* C_USE_REORDER_INSTR = "1" *) 
  (* C_USE_STACK_PROTECTION = "0" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* G_TEMPLATE_LIST = "0" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  system_microblaze_0_0__MicroBlaze U0
       (.Byte_Enable(Byte_Enable),
        .Clk(Clk),
        .Config_Reset(NLW_U0_Config_Reset_UNCONNECTED),
        .DCE(NLW_U0_DCE_UNCONNECTED),
        .DEBUG_ACLK(NLW_U0_DEBUG_ACLK_UNCONNECTED),
        .DEBUG_ARESETN(NLW_U0_DEBUG_ARESETN_UNCONNECTED),
        .DReady(DReady),
        .DUE(NLW_U0_DUE_UNCONNECTED),
        .DWait(NLW_U0_DWait_UNCONNECTED),
        .D_AS(D_AS),
        .Data_Addr({NLW_U0_Data_Addr_UNCONNECTED[0],Data_Addr[1],NLW_U0_Data_Addr_UNCONNECTED[2:18],Data_Addr[19:29],NLW_U0_Data_Addr_UNCONNECTED[30:31]}),
        .Data_Read(Data_Read),
        .Data_Write(Data_Write),
        .Dbg_ARADDR(NLW_U0_Dbg_ARADDR_UNCONNECTED[14:2]),
        .Dbg_ARREADY(NLW_U0_Dbg_ARREADY_UNCONNECTED),
        .Dbg_ARVALID(NLW_U0_Dbg_ARVALID_UNCONNECTED),
        .Dbg_AWADDR(NLW_U0_Dbg_AWADDR_UNCONNECTED[14:2]),
        .Dbg_AWREADY(NLW_U0_Dbg_AWREADY_UNCONNECTED),
        .Dbg_AWVALID(NLW_U0_Dbg_AWVALID_UNCONNECTED),
        .Dbg_BREADY(NLW_U0_Dbg_BREADY_UNCONNECTED),
        .Dbg_BRESP(NLW_U0_Dbg_BRESP_UNCONNECTED[1:0]),
        .Dbg_BVALID(NLW_U0_Dbg_BVALID_UNCONNECTED),
        .Dbg_Capture(Dbg_Capture),
        .Dbg_Clk(Dbg_Clk),
        .Dbg_Continue(NLW_U0_Dbg_Continue_UNCONNECTED),
        .Dbg_Disable(NLW_U0_Dbg_Disable_UNCONNECTED),
        .Dbg_Intr(NLW_U0_Dbg_Intr_UNCONNECTED),
        .Dbg_RDATA(NLW_U0_Dbg_RDATA_UNCONNECTED[31:0]),
        .Dbg_RREADY(NLW_U0_Dbg_RREADY_UNCONNECTED),
        .Dbg_RRESP(NLW_U0_Dbg_RRESP_UNCONNECTED[1:0]),
        .Dbg_RVALID(NLW_U0_Dbg_RVALID_UNCONNECTED),
        .Dbg_Reg_En(Dbg_Reg_En),
        .Dbg_Shift(Dbg_Shift),
        .Dbg_Stop(NLW_U0_Dbg_Stop_UNCONNECTED),
        .Dbg_TDI(Dbg_TDI),
        .Dbg_TDO(Dbg_TDO),
        .Dbg_Trace_Clk(NLW_U0_Dbg_Trace_Clk_UNCONNECTED),
        .Dbg_Trace_Data(NLW_U0_Dbg_Trace_Data_UNCONNECTED[0:35]),
        .Dbg_Trace_Ready(NLW_U0_Dbg_Trace_Ready_UNCONNECTED),
        .Dbg_Trace_Valid(NLW_U0_Dbg_Trace_Valid_UNCONNECTED),
        .Dbg_Trig_Ack_In(NLW_U0_Dbg_Trig_Ack_In_UNCONNECTED[0:7]),
        .Dbg_Trig_Ack_Out(NLW_U0_Dbg_Trig_Ack_Out_UNCONNECTED[0:7]),
        .Dbg_Trig_In(NLW_U0_Dbg_Trig_In_UNCONNECTED[0:7]),
        .Dbg_Trig_Out({NLW_U0_Dbg_Trig_Out_UNCONNECTED[0],1'b0,NLW_U0_Dbg_Trig_Out_UNCONNECTED[2:7]}),
        .Dbg_Update(Dbg_Update),
        .Dbg_WDATA(NLW_U0_Dbg_WDATA_UNCONNECTED[31:0]),
        .Dbg_WREADY(NLW_U0_Dbg_WREADY_UNCONNECTED),
        .Dbg_WVALID(NLW_U0_Dbg_WVALID_UNCONNECTED),
        .Dbg_Wakeup(NLW_U0_Dbg_Wakeup_UNCONNECTED),
        .Debug_Rst(Debug_Rst),
        .Ext_BRK(NLW_U0_Ext_BRK_UNCONNECTED),
        .Ext_NM_BRK(NLW_U0_Ext_NM_BRK_UNCONNECTED),
        .Hibernate(NLW_U0_Hibernate_UNCONNECTED),
        .ICE(NLW_U0_ICE_UNCONNECTED),
        .IFetch(NLW_U0_IFetch_UNCONNECTED),
        .IReady(IReady),
        .IUE(NLW_U0_IUE_UNCONNECTED),
        .IWAIT(NLW_U0_IWAIT_UNCONNECTED),
        .I_AS(I_AS),
        .Instr(Instr),
        .Instr_Addr({NLW_U0_Instr_Addr_UNCONNECTED[0:18],Instr_Addr[19:29],NLW_U0_Instr_Addr_UNCONNECTED[30:31]}),
        .Interrupt(NLW_U0_Interrupt_UNCONNECTED),
        .Interrupt_Ack(NLW_U0_Interrupt_Ack_UNCONNECTED[0:1]),
        .Interrupt_Address(NLW_U0_Interrupt_Address_UNCONNECTED[0:31]),
        .LOCKSTEP_Master_Out(NLW_U0_LOCKSTEP_Master_Out_UNCONNECTED[0:4095]),
        .LOCKSTEP_Out(NLW_U0_LOCKSTEP_Out_UNCONNECTED[0:4095]),
        .LOCKSTEP_Slave_In(NLW_U0_LOCKSTEP_Slave_In_UNCONNECTED[0:4095]),
        .M0_AXIS_TDATA(NLW_U0_M0_AXIS_TDATA_UNCONNECTED[31:0]),
        .M0_AXIS_TLAST(NLW_U0_M0_AXIS_TLAST_UNCONNECTED),
        .M0_AXIS_TREADY(NLW_U0_M0_AXIS_TREADY_UNCONNECTED),
        .M0_AXIS_TVALID(NLW_U0_M0_AXIS_TVALID_UNCONNECTED),
        .M10_AXIS_TDATA(NLW_U0_M10_AXIS_TDATA_UNCONNECTED[31:0]),
        .M10_AXIS_TLAST(NLW_U0_M10_AXIS_TLAST_UNCONNECTED),
        .M10_AXIS_TREADY(NLW_U0_M10_AXIS_TREADY_UNCONNECTED),
        .M10_AXIS_TVALID(NLW_U0_M10_AXIS_TVALID_UNCONNECTED),
        .M11_AXIS_TDATA(NLW_U0_M11_AXIS_TDATA_UNCONNECTED[31:0]),
        .M11_AXIS_TLAST(NLW_U0_M11_AXIS_TLAST_UNCONNECTED),
        .M11_AXIS_TREADY(NLW_U0_M11_AXIS_TREADY_UNCONNECTED),
        .M11_AXIS_TVALID(NLW_U0_M11_AXIS_TVALID_UNCONNECTED),
        .M12_AXIS_TDATA(NLW_U0_M12_AXIS_TDATA_UNCONNECTED[31:0]),
        .M12_AXIS_TLAST(NLW_U0_M12_AXIS_TLAST_UNCONNECTED),
        .M12_AXIS_TREADY(NLW_U0_M12_AXIS_TREADY_UNCONNECTED),
        .M12_AXIS_TVALID(NLW_U0_M12_AXIS_TVALID_UNCONNECTED),
        .M13_AXIS_TDATA(NLW_U0_M13_AXIS_TDATA_UNCONNECTED[31:0]),
        .M13_AXIS_TLAST(NLW_U0_M13_AXIS_TLAST_UNCONNECTED),
        .M13_AXIS_TREADY(NLW_U0_M13_AXIS_TREADY_UNCONNECTED),
        .M13_AXIS_TVALID(NLW_U0_M13_AXIS_TVALID_UNCONNECTED),
        .M14_AXIS_TDATA(NLW_U0_M14_AXIS_TDATA_UNCONNECTED[31:0]),
        .M14_AXIS_TLAST(NLW_U0_M14_AXIS_TLAST_UNCONNECTED),
        .M14_AXIS_TREADY(NLW_U0_M14_AXIS_TREADY_UNCONNECTED),
        .M14_AXIS_TVALID(NLW_U0_M14_AXIS_TVALID_UNCONNECTED),
        .M15_AXIS_TDATA(NLW_U0_M15_AXIS_TDATA_UNCONNECTED[31:0]),
        .M15_AXIS_TLAST(NLW_U0_M15_AXIS_TLAST_UNCONNECTED),
        .M15_AXIS_TREADY(NLW_U0_M15_AXIS_TREADY_UNCONNECTED),
        .M15_AXIS_TVALID(NLW_U0_M15_AXIS_TVALID_UNCONNECTED),
        .M1_AXIS_TDATA(NLW_U0_M1_AXIS_TDATA_UNCONNECTED[31:0]),
        .M1_AXIS_TLAST(NLW_U0_M1_AXIS_TLAST_UNCONNECTED),
        .M1_AXIS_TREADY(NLW_U0_M1_AXIS_TREADY_UNCONNECTED),
        .M1_AXIS_TVALID(NLW_U0_M1_AXIS_TVALID_UNCONNECTED),
        .M2_AXIS_TDATA(NLW_U0_M2_AXIS_TDATA_UNCONNECTED[31:0]),
        .M2_AXIS_TLAST(NLW_U0_M2_AXIS_TLAST_UNCONNECTED),
        .M2_AXIS_TREADY(NLW_U0_M2_AXIS_TREADY_UNCONNECTED),
        .M2_AXIS_TVALID(NLW_U0_M2_AXIS_TVALID_UNCONNECTED),
        .M3_AXIS_TDATA(NLW_U0_M3_AXIS_TDATA_UNCONNECTED[31:0]),
        .M3_AXIS_TLAST(NLW_U0_M3_AXIS_TLAST_UNCONNECTED),
        .M3_AXIS_TREADY(NLW_U0_M3_AXIS_TREADY_UNCONNECTED),
        .M3_AXIS_TVALID(NLW_U0_M3_AXIS_TVALID_UNCONNECTED),
        .M4_AXIS_TDATA(NLW_U0_M4_AXIS_TDATA_UNCONNECTED[31:0]),
        .M4_AXIS_TLAST(NLW_U0_M4_AXIS_TLAST_UNCONNECTED),
        .M4_AXIS_TREADY(NLW_U0_M4_AXIS_TREADY_UNCONNECTED),
        .M4_AXIS_TVALID(NLW_U0_M4_AXIS_TVALID_UNCONNECTED),
        .M5_AXIS_TDATA(NLW_U0_M5_AXIS_TDATA_UNCONNECTED[31:0]),
        .M5_AXIS_TLAST(NLW_U0_M5_AXIS_TLAST_UNCONNECTED),
        .M5_AXIS_TREADY(NLW_U0_M5_AXIS_TREADY_UNCONNECTED),
        .M5_AXIS_TVALID(NLW_U0_M5_AXIS_TVALID_UNCONNECTED),
        .M6_AXIS_TDATA(NLW_U0_M6_AXIS_TDATA_UNCONNECTED[31:0]),
        .M6_AXIS_TLAST(NLW_U0_M6_AXIS_TLAST_UNCONNECTED),
        .M6_AXIS_TREADY(NLW_U0_M6_AXIS_TREADY_UNCONNECTED),
        .M6_AXIS_TVALID(NLW_U0_M6_AXIS_TVALID_UNCONNECTED),
        .M7_AXIS_TDATA(NLW_U0_M7_AXIS_TDATA_UNCONNECTED[31:0]),
        .M7_AXIS_TLAST(NLW_U0_M7_AXIS_TLAST_UNCONNECTED),
        .M7_AXIS_TREADY(NLW_U0_M7_AXIS_TREADY_UNCONNECTED),
        .M7_AXIS_TVALID(NLW_U0_M7_AXIS_TVALID_UNCONNECTED),
        .M8_AXIS_TDATA(NLW_U0_M8_AXIS_TDATA_UNCONNECTED[31:0]),
        .M8_AXIS_TLAST(NLW_U0_M8_AXIS_TLAST_UNCONNECTED),
        .M8_AXIS_TREADY(NLW_U0_M8_AXIS_TREADY_UNCONNECTED),
        .M8_AXIS_TVALID(NLW_U0_M8_AXIS_TVALID_UNCONNECTED),
        .M9_AXIS_TDATA(NLW_U0_M9_AXIS_TDATA_UNCONNECTED[31:0]),
        .M9_AXIS_TLAST(NLW_U0_M9_AXIS_TLAST_UNCONNECTED),
        .M9_AXIS_TREADY(NLW_U0_M9_AXIS_TREADY_UNCONNECTED),
        .M9_AXIS_TVALID(NLW_U0_M9_AXIS_TVALID_UNCONNECTED),
        .MB_Error(NLW_U0_MB_Error_UNCONNECTED),
        .MB_Halted(NLW_U0_MB_Halted_UNCONNECTED),
        .M_AXI_DC_ACADDR(NLW_U0_M_AXI_DC_ACADDR_UNCONNECTED[31:0]),
        .M_AXI_DC_ACPROT(NLW_U0_M_AXI_DC_ACPROT_UNCONNECTED[2:0]),
        .M_AXI_DC_ACREADY(NLW_U0_M_AXI_DC_ACREADY_UNCONNECTED),
        .M_AXI_DC_ACSNOOP(NLW_U0_M_AXI_DC_ACSNOOP_UNCONNECTED[3:0]),
        .M_AXI_DC_ACVALID(NLW_U0_M_AXI_DC_ACVALID_UNCONNECTED),
        .M_AXI_DC_ARADDR(NLW_U0_M_AXI_DC_ARADDR_UNCONNECTED[31:0]),
        .M_AXI_DC_ARBAR(NLW_U0_M_AXI_DC_ARBAR_UNCONNECTED[1:0]),
        .M_AXI_DC_ARBURST(NLW_U0_M_AXI_DC_ARBURST_UNCONNECTED[1:0]),
        .M_AXI_DC_ARCACHE(NLW_U0_M_AXI_DC_ARCACHE_UNCONNECTED[3:0]),
        .M_AXI_DC_ARDOMAIN(NLW_U0_M_AXI_DC_ARDOMAIN_UNCONNECTED[1:0]),
        .M_AXI_DC_ARID(NLW_U0_M_AXI_DC_ARID_UNCONNECTED[0]),
        .M_AXI_DC_ARLEN(NLW_U0_M_AXI_DC_ARLEN_UNCONNECTED[7:0]),
        .M_AXI_DC_ARLOCK(NLW_U0_M_AXI_DC_ARLOCK_UNCONNECTED),
        .M_AXI_DC_ARPROT(NLW_U0_M_AXI_DC_ARPROT_UNCONNECTED[2:0]),
        .M_AXI_DC_ARQOS(NLW_U0_M_AXI_DC_ARQOS_UNCONNECTED[3:0]),
        .M_AXI_DC_ARREADY(NLW_U0_M_AXI_DC_ARREADY_UNCONNECTED),
        .M_AXI_DC_ARSIZE(NLW_U0_M_AXI_DC_ARSIZE_UNCONNECTED[2:0]),
        .M_AXI_DC_ARSNOOP(NLW_U0_M_AXI_DC_ARSNOOP_UNCONNECTED[3:0]),
        .M_AXI_DC_ARUSER(NLW_U0_M_AXI_DC_ARUSER_UNCONNECTED[4:0]),
        .M_AXI_DC_ARVALID(NLW_U0_M_AXI_DC_ARVALID_UNCONNECTED),
        .M_AXI_DC_AWADDR(NLW_U0_M_AXI_DC_AWADDR_UNCONNECTED[31:0]),
        .M_AXI_DC_AWBAR(NLW_U0_M_AXI_DC_AWBAR_UNCONNECTED[1:0]),
        .M_AXI_DC_AWBURST(NLW_U0_M_AXI_DC_AWBURST_UNCONNECTED[1:0]),
        .M_AXI_DC_AWCACHE(NLW_U0_M_AXI_DC_AWCACHE_UNCONNECTED[3:0]),
        .M_AXI_DC_AWDOMAIN(NLW_U0_M_AXI_DC_AWDOMAIN_UNCONNECTED[1:0]),
        .M_AXI_DC_AWID(NLW_U0_M_AXI_DC_AWID_UNCONNECTED[0]),
        .M_AXI_DC_AWLEN(NLW_U0_M_AXI_DC_AWLEN_UNCONNECTED[7:0]),
        .M_AXI_DC_AWLOCK(NLW_U0_M_AXI_DC_AWLOCK_UNCONNECTED),
        .M_AXI_DC_AWPROT(NLW_U0_M_AXI_DC_AWPROT_UNCONNECTED[2:0]),
        .M_AXI_DC_AWQOS(NLW_U0_M_AXI_DC_AWQOS_UNCONNECTED[3:0]),
        .M_AXI_DC_AWREADY(NLW_U0_M_AXI_DC_AWREADY_UNCONNECTED),
        .M_AXI_DC_AWSIZE(NLW_U0_M_AXI_DC_AWSIZE_UNCONNECTED[2:0]),
        .M_AXI_DC_AWSNOOP(NLW_U0_M_AXI_DC_AWSNOOP_UNCONNECTED[2:0]),
        .M_AXI_DC_AWUSER(NLW_U0_M_AXI_DC_AWUSER_UNCONNECTED[4:0]),
        .M_AXI_DC_AWVALID(NLW_U0_M_AXI_DC_AWVALID_UNCONNECTED),
        .M_AXI_DC_BID(NLW_U0_M_AXI_DC_BID_UNCONNECTED[0]),
        .M_AXI_DC_BREADY(NLW_U0_M_AXI_DC_BREADY_UNCONNECTED),
        .M_AXI_DC_BRESP(NLW_U0_M_AXI_DC_BRESP_UNCONNECTED[1:0]),
        .M_AXI_DC_BUSER(NLW_U0_M_AXI_DC_BUSER_UNCONNECTED[0]),
        .M_AXI_DC_BVALID(NLW_U0_M_AXI_DC_BVALID_UNCONNECTED),
        .M_AXI_DC_CDDATA(NLW_U0_M_AXI_DC_CDDATA_UNCONNECTED[31:0]),
        .M_AXI_DC_CDLAST(NLW_U0_M_AXI_DC_CDLAST_UNCONNECTED),
        .M_AXI_DC_CDREADY(NLW_U0_M_AXI_DC_CDREADY_UNCONNECTED),
        .M_AXI_DC_CDVALID(NLW_U0_M_AXI_DC_CDVALID_UNCONNECTED),
        .M_AXI_DC_CRREADY(NLW_U0_M_AXI_DC_CRREADY_UNCONNECTED),
        .M_AXI_DC_CRRESP(NLW_U0_M_AXI_DC_CRRESP_UNCONNECTED[4:0]),
        .M_AXI_DC_CRVALID(NLW_U0_M_AXI_DC_CRVALID_UNCONNECTED),
        .M_AXI_DC_RACK(NLW_U0_M_AXI_DC_RACK_UNCONNECTED),
        .M_AXI_DC_RDATA(NLW_U0_M_AXI_DC_RDATA_UNCONNECTED[31:0]),
        .M_AXI_DC_RID(NLW_U0_M_AXI_DC_RID_UNCONNECTED[0]),
        .M_AXI_DC_RLAST(NLW_U0_M_AXI_DC_RLAST_UNCONNECTED),
        .M_AXI_DC_RREADY(NLW_U0_M_AXI_DC_RREADY_UNCONNECTED),
        .M_AXI_DC_RRESP(NLW_U0_M_AXI_DC_RRESP_UNCONNECTED[1:0]),
        .M_AXI_DC_RUSER(NLW_U0_M_AXI_DC_RUSER_UNCONNECTED[0]),
        .M_AXI_DC_RVALID(NLW_U0_M_AXI_DC_RVALID_UNCONNECTED),
        .M_AXI_DC_WACK(NLW_U0_M_AXI_DC_WACK_UNCONNECTED),
        .M_AXI_DC_WDATA(NLW_U0_M_AXI_DC_WDATA_UNCONNECTED[31:0]),
        .M_AXI_DC_WLAST(NLW_U0_M_AXI_DC_WLAST_UNCONNECTED),
        .M_AXI_DC_WREADY(NLW_U0_M_AXI_DC_WREADY_UNCONNECTED),
        .M_AXI_DC_WSTRB(NLW_U0_M_AXI_DC_WSTRB_UNCONNECTED[3:0]),
        .M_AXI_DC_WUSER(NLW_U0_M_AXI_DC_WUSER_UNCONNECTED[0]),
        .M_AXI_DC_WVALID(NLW_U0_M_AXI_DC_WVALID_UNCONNECTED),
        .M_AXI_DP_ARADDR({M_AXI_DP_ARADDR[31:16],NLW_U0_M_AXI_DP_ARADDR_UNCONNECTED[15:9],M_AXI_DP_ARADDR[8:0]}),
        .M_AXI_DP_ARBURST(NLW_U0_M_AXI_DP_ARBURST_UNCONNECTED[1:0]),
        .M_AXI_DP_ARCACHE(NLW_U0_M_AXI_DP_ARCACHE_UNCONNECTED[3:0]),
        .M_AXI_DP_ARID(NLW_U0_M_AXI_DP_ARID_UNCONNECTED[0]),
        .M_AXI_DP_ARLEN(NLW_U0_M_AXI_DP_ARLEN_UNCONNECTED[7:0]),
        .M_AXI_DP_ARLOCK(NLW_U0_M_AXI_DP_ARLOCK_UNCONNECTED),
        .M_AXI_DP_ARPROT(NLW_U0_M_AXI_DP_ARPROT_UNCONNECTED[2:0]),
        .M_AXI_DP_ARQOS(NLW_U0_M_AXI_DP_ARQOS_UNCONNECTED[3:0]),
        .M_AXI_DP_ARREADY(M_AXI_DP_ARREADY),
        .M_AXI_DP_ARSIZE(NLW_U0_M_AXI_DP_ARSIZE_UNCONNECTED[2:0]),
        .M_AXI_DP_ARVALID(M_AXI_DP_ARVALID),
        .M_AXI_DP_AWADDR(NLW_U0_M_AXI_DP_AWADDR_UNCONNECTED[31:0]),
        .M_AXI_DP_AWBURST(NLW_U0_M_AXI_DP_AWBURST_UNCONNECTED[1:0]),
        .M_AXI_DP_AWCACHE(NLW_U0_M_AXI_DP_AWCACHE_UNCONNECTED[3:0]),
        .M_AXI_DP_AWID(NLW_U0_M_AXI_DP_AWID_UNCONNECTED[0]),
        .M_AXI_DP_AWLEN(NLW_U0_M_AXI_DP_AWLEN_UNCONNECTED[7:0]),
        .M_AXI_DP_AWLOCK(NLW_U0_M_AXI_DP_AWLOCK_UNCONNECTED),
        .M_AXI_DP_AWPROT(NLW_U0_M_AXI_DP_AWPROT_UNCONNECTED[2:0]),
        .M_AXI_DP_AWQOS(NLW_U0_M_AXI_DP_AWQOS_UNCONNECTED[3:0]),
        .M_AXI_DP_AWREADY(M_AXI_DP_AWREADY),
        .M_AXI_DP_AWSIZE(NLW_U0_M_AXI_DP_AWSIZE_UNCONNECTED[2:0]),
        .M_AXI_DP_AWVALID(M_AXI_DP_AWVALID),
        .M_AXI_DP_BID(NLW_U0_M_AXI_DP_BID_UNCONNECTED[0]),
        .M_AXI_DP_BREADY(NLW_U0_M_AXI_DP_BREADY_UNCONNECTED),
        .M_AXI_DP_BRESP(NLW_U0_M_AXI_DP_BRESP_UNCONNECTED[1:0]),
        .M_AXI_DP_BVALID(M_AXI_DP_BVALID),
        .M_AXI_DP_RDATA(M_AXI_DP_RDATA),
        .M_AXI_DP_RID(NLW_U0_M_AXI_DP_RID_UNCONNECTED[0]),
        .M_AXI_DP_RLAST(NLW_U0_M_AXI_DP_RLAST_UNCONNECTED),
        .M_AXI_DP_RREADY(NLW_U0_M_AXI_DP_RREADY_UNCONNECTED),
        .M_AXI_DP_RRESP(NLW_U0_M_AXI_DP_RRESP_UNCONNECTED[1:0]),
        .M_AXI_DP_RVALID(M_AXI_DP_RVALID),
        .M_AXI_DP_WDATA({M_AXI_DP_WDATA[31:30],NLW_U0_M_AXI_DP_WDATA_UNCONNECTED[29:11],M_AXI_DP_WDATA[10:0]}),
        .M_AXI_DP_WLAST(NLW_U0_M_AXI_DP_WLAST_UNCONNECTED),
        .M_AXI_DP_WREADY(M_AXI_DP_WREADY),
        .M_AXI_DP_WSTRB(NLW_U0_M_AXI_DP_WSTRB_UNCONNECTED[3:0]),
        .M_AXI_DP_WVALID(M_AXI_DP_WVALID),
        .M_AXI_IC_ACADDR(NLW_U0_M_AXI_IC_ACADDR_UNCONNECTED[31:0]),
        .M_AXI_IC_ACPROT(NLW_U0_M_AXI_IC_ACPROT_UNCONNECTED[2:0]),
        .M_AXI_IC_ACREADY(NLW_U0_M_AXI_IC_ACREADY_UNCONNECTED),
        .M_AXI_IC_ACSNOOP(NLW_U0_M_AXI_IC_ACSNOOP_UNCONNECTED[3:0]),
        .M_AXI_IC_ACVALID(NLW_U0_M_AXI_IC_ACVALID_UNCONNECTED),
        .M_AXI_IC_ARADDR(NLW_U0_M_AXI_IC_ARADDR_UNCONNECTED[31:0]),
        .M_AXI_IC_ARBAR(NLW_U0_M_AXI_IC_ARBAR_UNCONNECTED[1:0]),
        .M_AXI_IC_ARBURST(NLW_U0_M_AXI_IC_ARBURST_UNCONNECTED[1:0]),
        .M_AXI_IC_ARCACHE(NLW_U0_M_AXI_IC_ARCACHE_UNCONNECTED[3:0]),
        .M_AXI_IC_ARDOMAIN(NLW_U0_M_AXI_IC_ARDOMAIN_UNCONNECTED[1:0]),
        .M_AXI_IC_ARID(NLW_U0_M_AXI_IC_ARID_UNCONNECTED[0]),
        .M_AXI_IC_ARLEN(NLW_U0_M_AXI_IC_ARLEN_UNCONNECTED[7:0]),
        .M_AXI_IC_ARLOCK(NLW_U0_M_AXI_IC_ARLOCK_UNCONNECTED),
        .M_AXI_IC_ARPROT(NLW_U0_M_AXI_IC_ARPROT_UNCONNECTED[2:0]),
        .M_AXI_IC_ARQOS(NLW_U0_M_AXI_IC_ARQOS_UNCONNECTED[3:0]),
        .M_AXI_IC_ARREADY(NLW_U0_M_AXI_IC_ARREADY_UNCONNECTED),
        .M_AXI_IC_ARSIZE(NLW_U0_M_AXI_IC_ARSIZE_UNCONNECTED[2:0]),
        .M_AXI_IC_ARSNOOP(NLW_U0_M_AXI_IC_ARSNOOP_UNCONNECTED[3:0]),
        .M_AXI_IC_ARUSER(NLW_U0_M_AXI_IC_ARUSER_UNCONNECTED[4:0]),
        .M_AXI_IC_ARVALID(NLW_U0_M_AXI_IC_ARVALID_UNCONNECTED),
        .M_AXI_IC_AWADDR(NLW_U0_M_AXI_IC_AWADDR_UNCONNECTED[31:0]),
        .M_AXI_IC_AWBAR(NLW_U0_M_AXI_IC_AWBAR_UNCONNECTED[1:0]),
        .M_AXI_IC_AWBURST(NLW_U0_M_AXI_IC_AWBURST_UNCONNECTED[1:0]),
        .M_AXI_IC_AWCACHE(NLW_U0_M_AXI_IC_AWCACHE_UNCONNECTED[3:0]),
        .M_AXI_IC_AWDOMAIN(NLW_U0_M_AXI_IC_AWDOMAIN_UNCONNECTED[1:0]),
        .M_AXI_IC_AWID(NLW_U0_M_AXI_IC_AWID_UNCONNECTED[0]),
        .M_AXI_IC_AWLEN(NLW_U0_M_AXI_IC_AWLEN_UNCONNECTED[7:0]),
        .M_AXI_IC_AWLOCK(NLW_U0_M_AXI_IC_AWLOCK_UNCONNECTED),
        .M_AXI_IC_AWPROT(NLW_U0_M_AXI_IC_AWPROT_UNCONNECTED[2:0]),
        .M_AXI_IC_AWQOS(NLW_U0_M_AXI_IC_AWQOS_UNCONNECTED[3:0]),
        .M_AXI_IC_AWREADY(NLW_U0_M_AXI_IC_AWREADY_UNCONNECTED),
        .M_AXI_IC_AWSIZE(NLW_U0_M_AXI_IC_AWSIZE_UNCONNECTED[2:0]),
        .M_AXI_IC_AWSNOOP(NLW_U0_M_AXI_IC_AWSNOOP_UNCONNECTED[2:0]),
        .M_AXI_IC_AWUSER(NLW_U0_M_AXI_IC_AWUSER_UNCONNECTED[4:0]),
        .M_AXI_IC_AWVALID(NLW_U0_M_AXI_IC_AWVALID_UNCONNECTED),
        .M_AXI_IC_BID(NLW_U0_M_AXI_IC_BID_UNCONNECTED[0]),
        .M_AXI_IC_BREADY(NLW_U0_M_AXI_IC_BREADY_UNCONNECTED),
        .M_AXI_IC_BRESP(NLW_U0_M_AXI_IC_BRESP_UNCONNECTED[1:0]),
        .M_AXI_IC_BUSER(NLW_U0_M_AXI_IC_BUSER_UNCONNECTED[0]),
        .M_AXI_IC_BVALID(NLW_U0_M_AXI_IC_BVALID_UNCONNECTED),
        .M_AXI_IC_CDDATA(NLW_U0_M_AXI_IC_CDDATA_UNCONNECTED[31:0]),
        .M_AXI_IC_CDLAST(NLW_U0_M_AXI_IC_CDLAST_UNCONNECTED),
        .M_AXI_IC_CDREADY(NLW_U0_M_AXI_IC_CDREADY_UNCONNECTED),
        .M_AXI_IC_CDVALID(NLW_U0_M_AXI_IC_CDVALID_UNCONNECTED),
        .M_AXI_IC_CRREADY(NLW_U0_M_AXI_IC_CRREADY_UNCONNECTED),
        .M_AXI_IC_CRRESP(NLW_U0_M_AXI_IC_CRRESP_UNCONNECTED[4:0]),
        .M_AXI_IC_CRVALID(NLW_U0_M_AXI_IC_CRVALID_UNCONNECTED),
        .M_AXI_IC_RACK(NLW_U0_M_AXI_IC_RACK_UNCONNECTED),
        .M_AXI_IC_RDATA(NLW_U0_M_AXI_IC_RDATA_UNCONNECTED[31:0]),
        .M_AXI_IC_RID(NLW_U0_M_AXI_IC_RID_UNCONNECTED[0]),
        .M_AXI_IC_RLAST(NLW_U0_M_AXI_IC_RLAST_UNCONNECTED),
        .M_AXI_IC_RREADY(NLW_U0_M_AXI_IC_RREADY_UNCONNECTED),
        .M_AXI_IC_RRESP(NLW_U0_M_AXI_IC_RRESP_UNCONNECTED[1:0]),
        .M_AXI_IC_RUSER(NLW_U0_M_AXI_IC_RUSER_UNCONNECTED[0]),
        .M_AXI_IC_RVALID(NLW_U0_M_AXI_IC_RVALID_UNCONNECTED),
        .M_AXI_IC_WACK(NLW_U0_M_AXI_IC_WACK_UNCONNECTED),
        .M_AXI_IC_WDATA(NLW_U0_M_AXI_IC_WDATA_UNCONNECTED[31:0]),
        .M_AXI_IC_WLAST(NLW_U0_M_AXI_IC_WLAST_UNCONNECTED),
        .M_AXI_IC_WREADY(NLW_U0_M_AXI_IC_WREADY_UNCONNECTED),
        .M_AXI_IC_WSTRB(NLW_U0_M_AXI_IC_WSTRB_UNCONNECTED[3:0]),
        .M_AXI_IC_WUSER(NLW_U0_M_AXI_IC_WUSER_UNCONNECTED[0]),
        .M_AXI_IC_WVALID(NLW_U0_M_AXI_IC_WVALID_UNCONNECTED),
        .M_AXI_IP_ARADDR(NLW_U0_M_AXI_IP_ARADDR_UNCONNECTED[31:0]),
        .M_AXI_IP_ARBURST(NLW_U0_M_AXI_IP_ARBURST_UNCONNECTED[1:0]),
        .M_AXI_IP_ARCACHE(NLW_U0_M_AXI_IP_ARCACHE_UNCONNECTED[3:0]),
        .M_AXI_IP_ARID(NLW_U0_M_AXI_IP_ARID_UNCONNECTED[0]),
        .M_AXI_IP_ARLEN(NLW_U0_M_AXI_IP_ARLEN_UNCONNECTED[7:0]),
        .M_AXI_IP_ARLOCK(NLW_U0_M_AXI_IP_ARLOCK_UNCONNECTED),
        .M_AXI_IP_ARPROT(NLW_U0_M_AXI_IP_ARPROT_UNCONNECTED[2:0]),
        .M_AXI_IP_ARQOS(NLW_U0_M_AXI_IP_ARQOS_UNCONNECTED[3:0]),
        .M_AXI_IP_ARREADY(NLW_U0_M_AXI_IP_ARREADY_UNCONNECTED),
        .M_AXI_IP_ARSIZE(NLW_U0_M_AXI_IP_ARSIZE_UNCONNECTED[2:0]),
        .M_AXI_IP_ARVALID(NLW_U0_M_AXI_IP_ARVALID_UNCONNECTED),
        .M_AXI_IP_AWADDR(NLW_U0_M_AXI_IP_AWADDR_UNCONNECTED[31:0]),
        .M_AXI_IP_AWBURST(NLW_U0_M_AXI_IP_AWBURST_UNCONNECTED[1:0]),
        .M_AXI_IP_AWCACHE(NLW_U0_M_AXI_IP_AWCACHE_UNCONNECTED[3:0]),
        .M_AXI_IP_AWID(NLW_U0_M_AXI_IP_AWID_UNCONNECTED[0]),
        .M_AXI_IP_AWLEN(NLW_U0_M_AXI_IP_AWLEN_UNCONNECTED[7:0]),
        .M_AXI_IP_AWLOCK(NLW_U0_M_AXI_IP_AWLOCK_UNCONNECTED),
        .M_AXI_IP_AWPROT(NLW_U0_M_AXI_IP_AWPROT_UNCONNECTED[2:0]),
        .M_AXI_IP_AWQOS(NLW_U0_M_AXI_IP_AWQOS_UNCONNECTED[3:0]),
        .M_AXI_IP_AWREADY(NLW_U0_M_AXI_IP_AWREADY_UNCONNECTED),
        .M_AXI_IP_AWSIZE(NLW_U0_M_AXI_IP_AWSIZE_UNCONNECTED[2:0]),
        .M_AXI_IP_AWVALID(NLW_U0_M_AXI_IP_AWVALID_UNCONNECTED),
        .M_AXI_IP_BID(NLW_U0_M_AXI_IP_BID_UNCONNECTED[0]),
        .M_AXI_IP_BREADY(NLW_U0_M_AXI_IP_BREADY_UNCONNECTED),
        .M_AXI_IP_BRESP(NLW_U0_M_AXI_IP_BRESP_UNCONNECTED[1:0]),
        .M_AXI_IP_BVALID(NLW_U0_M_AXI_IP_BVALID_UNCONNECTED),
        .M_AXI_IP_RDATA(NLW_U0_M_AXI_IP_RDATA_UNCONNECTED[31:0]),
        .M_AXI_IP_RID(NLW_U0_M_AXI_IP_RID_UNCONNECTED[0]),
        .M_AXI_IP_RLAST(NLW_U0_M_AXI_IP_RLAST_UNCONNECTED),
        .M_AXI_IP_RREADY(NLW_U0_M_AXI_IP_RREADY_UNCONNECTED),
        .M_AXI_IP_RRESP(NLW_U0_M_AXI_IP_RRESP_UNCONNECTED[1:0]),
        .M_AXI_IP_RVALID(NLW_U0_M_AXI_IP_RVALID_UNCONNECTED),
        .M_AXI_IP_WDATA(NLW_U0_M_AXI_IP_WDATA_UNCONNECTED[31:0]),
        .M_AXI_IP_WLAST(NLW_U0_M_AXI_IP_WLAST_UNCONNECTED),
        .M_AXI_IP_WREADY(NLW_U0_M_AXI_IP_WREADY_UNCONNECTED),
        .M_AXI_IP_WSTRB(NLW_U0_M_AXI_IP_WSTRB_UNCONNECTED[3:0]),
        .M_AXI_IP_WVALID(NLW_U0_M_AXI_IP_WVALID_UNCONNECTED),
        .Mb_Reset(NLW_U0_Mb_Reset_UNCONNECTED),
        .Non_Secure(NLW_U0_Non_Secure_UNCONNECTED[0:3]),
        .Pause(NLW_U0_Pause_UNCONNECTED),
        .Pause_Ack(NLW_U0_Pause_Ack_UNCONNECTED),
        .RAM_From(NLW_U0_RAM_From_UNCONNECTED[255:0]),
        .RAM_To(NLW_U0_RAM_To_UNCONNECTED[255:0]),
        .Read_Strobe(NLW_U0_Read_Strobe_UNCONNECTED),
        .Reset(Reset),
        .Reset_Mode(NLW_U0_Reset_Mode_UNCONNECTED[0:1]),
        .S0_AXIS_TDATA(NLW_U0_S0_AXIS_TDATA_UNCONNECTED[31:0]),
        .S0_AXIS_TLAST(NLW_U0_S0_AXIS_TLAST_UNCONNECTED),
        .S0_AXIS_TREADY(NLW_U0_S0_AXIS_TREADY_UNCONNECTED),
        .S0_AXIS_TVALID(NLW_U0_S0_AXIS_TVALID_UNCONNECTED),
        .S10_AXIS_TDATA(NLW_U0_S10_AXIS_TDATA_UNCONNECTED[31:0]),
        .S10_AXIS_TLAST(NLW_U0_S10_AXIS_TLAST_UNCONNECTED),
        .S10_AXIS_TREADY(NLW_U0_S10_AXIS_TREADY_UNCONNECTED),
        .S10_AXIS_TVALID(NLW_U0_S10_AXIS_TVALID_UNCONNECTED),
        .S11_AXIS_TDATA(NLW_U0_S11_AXIS_TDATA_UNCONNECTED[31:0]),
        .S11_AXIS_TLAST(NLW_U0_S11_AXIS_TLAST_UNCONNECTED),
        .S11_AXIS_TREADY(NLW_U0_S11_AXIS_TREADY_UNCONNECTED),
        .S11_AXIS_TVALID(NLW_U0_S11_AXIS_TVALID_UNCONNECTED),
        .S12_AXIS_TDATA(NLW_U0_S12_AXIS_TDATA_UNCONNECTED[31:0]),
        .S12_AXIS_TLAST(NLW_U0_S12_AXIS_TLAST_UNCONNECTED),
        .S12_AXIS_TREADY(NLW_U0_S12_AXIS_TREADY_UNCONNECTED),
        .S12_AXIS_TVALID(NLW_U0_S12_AXIS_TVALID_UNCONNECTED),
        .S13_AXIS_TDATA(NLW_U0_S13_AXIS_TDATA_UNCONNECTED[31:0]),
        .S13_AXIS_TLAST(NLW_U0_S13_AXIS_TLAST_UNCONNECTED),
        .S13_AXIS_TREADY(NLW_U0_S13_AXIS_TREADY_UNCONNECTED),
        .S13_AXIS_TVALID(NLW_U0_S13_AXIS_TVALID_UNCONNECTED),
        .S14_AXIS_TDATA(NLW_U0_S14_AXIS_TDATA_UNCONNECTED[31:0]),
        .S14_AXIS_TLAST(NLW_U0_S14_AXIS_TLAST_UNCONNECTED),
        .S14_AXIS_TREADY(NLW_U0_S14_AXIS_TREADY_UNCONNECTED),
        .S14_AXIS_TVALID(NLW_U0_S14_AXIS_TVALID_UNCONNECTED),
        .S15_AXIS_TDATA(NLW_U0_S15_AXIS_TDATA_UNCONNECTED[31:0]),
        .S15_AXIS_TLAST(NLW_U0_S15_AXIS_TLAST_UNCONNECTED),
        .S15_AXIS_TREADY(NLW_U0_S15_AXIS_TREADY_UNCONNECTED),
        .S15_AXIS_TVALID(NLW_U0_S15_AXIS_TVALID_UNCONNECTED),
        .S1_AXIS_TDATA(NLW_U0_S1_AXIS_TDATA_UNCONNECTED[31:0]),
        .S1_AXIS_TLAST(NLW_U0_S1_AXIS_TLAST_UNCONNECTED),
        .S1_AXIS_TREADY(NLW_U0_S1_AXIS_TREADY_UNCONNECTED),
        .S1_AXIS_TVALID(NLW_U0_S1_AXIS_TVALID_UNCONNECTED),
        .S2_AXIS_TDATA(NLW_U0_S2_AXIS_TDATA_UNCONNECTED[31:0]),
        .S2_AXIS_TLAST(NLW_U0_S2_AXIS_TLAST_UNCONNECTED),
        .S2_AXIS_TREADY(NLW_U0_S2_AXIS_TREADY_UNCONNECTED),
        .S2_AXIS_TVALID(NLW_U0_S2_AXIS_TVALID_UNCONNECTED),
        .S3_AXIS_TDATA(NLW_U0_S3_AXIS_TDATA_UNCONNECTED[31:0]),
        .S3_AXIS_TLAST(NLW_U0_S3_AXIS_TLAST_UNCONNECTED),
        .S3_AXIS_TREADY(NLW_U0_S3_AXIS_TREADY_UNCONNECTED),
        .S3_AXIS_TVALID(NLW_U0_S3_AXIS_TVALID_UNCONNECTED),
        .S4_AXIS_TDATA(NLW_U0_S4_AXIS_TDATA_UNCONNECTED[31:0]),
        .S4_AXIS_TLAST(NLW_U0_S4_AXIS_TLAST_UNCONNECTED),
        .S4_AXIS_TREADY(NLW_U0_S4_AXIS_TREADY_UNCONNECTED),
        .S4_AXIS_TVALID(NLW_U0_S4_AXIS_TVALID_UNCONNECTED),
        .S5_AXIS_TDATA(NLW_U0_S5_AXIS_TDATA_UNCONNECTED[31:0]),
        .S5_AXIS_TLAST(NLW_U0_S5_AXIS_TLAST_UNCONNECTED),
        .S5_AXIS_TREADY(NLW_U0_S5_AXIS_TREADY_UNCONNECTED),
        .S5_AXIS_TVALID(NLW_U0_S5_AXIS_TVALID_UNCONNECTED),
        .S6_AXIS_TDATA(NLW_U0_S6_AXIS_TDATA_UNCONNECTED[31:0]),
        .S6_AXIS_TLAST(NLW_U0_S6_AXIS_TLAST_UNCONNECTED),
        .S6_AXIS_TREADY(NLW_U0_S6_AXIS_TREADY_UNCONNECTED),
        .S6_AXIS_TVALID(NLW_U0_S6_AXIS_TVALID_UNCONNECTED),
        .S7_AXIS_TDATA(NLW_U0_S7_AXIS_TDATA_UNCONNECTED[31:0]),
        .S7_AXIS_TLAST(NLW_U0_S7_AXIS_TLAST_UNCONNECTED),
        .S7_AXIS_TREADY(NLW_U0_S7_AXIS_TREADY_UNCONNECTED),
        .S7_AXIS_TVALID(NLW_U0_S7_AXIS_TVALID_UNCONNECTED),
        .S8_AXIS_TDATA(NLW_U0_S8_AXIS_TDATA_UNCONNECTED[31:0]),
        .S8_AXIS_TLAST(NLW_U0_S8_AXIS_TLAST_UNCONNECTED),
        .S8_AXIS_TREADY(NLW_U0_S8_AXIS_TREADY_UNCONNECTED),
        .S8_AXIS_TVALID(NLW_U0_S8_AXIS_TVALID_UNCONNECTED),
        .S9_AXIS_TDATA(NLW_U0_S9_AXIS_TDATA_UNCONNECTED[31:0]),
        .S9_AXIS_TLAST(NLW_U0_S9_AXIS_TLAST_UNCONNECTED),
        .S9_AXIS_TREADY(NLW_U0_S9_AXIS_TREADY_UNCONNECTED),
        .S9_AXIS_TVALID(NLW_U0_S9_AXIS_TVALID_UNCONNECTED),
        .Scan_En(NLW_U0_Scan_En_UNCONNECTED),
        .Scan_Reset(NLW_U0_Scan_Reset_UNCONNECTED),
        .Scan_Reset_Sel(NLW_U0_Scan_Reset_Sel_UNCONNECTED),
        .Sleep(NLW_U0_Sleep_UNCONNECTED),
        .Suspend(NLW_U0_Suspend_UNCONNECTED),
        .Trace_DCache_Hit(NLW_U0_Trace_DCache_Hit_UNCONNECTED),
        .Trace_DCache_Rdy(NLW_U0_Trace_DCache_Rdy_UNCONNECTED),
        .Trace_DCache_Read(NLW_U0_Trace_DCache_Read_UNCONNECTED),
        .Trace_DCache_Req(NLW_U0_Trace_DCache_Req_UNCONNECTED),
        .Trace_Data_Access(NLW_U0_Trace_Data_Access_UNCONNECTED),
        .Trace_Data_Address(NLW_U0_Trace_Data_Address_UNCONNECTED[0:31]),
        .Trace_Data_Byte_Enable(NLW_U0_Trace_Data_Byte_Enable_UNCONNECTED[0:3]),
        .Trace_Data_Read(NLW_U0_Trace_Data_Read_UNCONNECTED),
        .Trace_Data_Write(NLW_U0_Trace_Data_Write_UNCONNECTED),
        .Trace_Data_Write_Value(NLW_U0_Trace_Data_Write_Value_UNCONNECTED[0:31]),
        .Trace_Delay_Slot(NLW_U0_Trace_Delay_Slot_UNCONNECTED),
        .Trace_EX_PipeRun(NLW_U0_Trace_EX_PipeRun_UNCONNECTED),
        .Trace_Exception_Kind(NLW_U0_Trace_Exception_Kind_UNCONNECTED[0:4]),
        .Trace_Exception_Taken(NLW_U0_Trace_Exception_Taken_UNCONNECTED),
        .Trace_ICache_Hit(NLW_U0_Trace_ICache_Hit_UNCONNECTED),
        .Trace_ICache_Rdy(NLW_U0_Trace_ICache_Rdy_UNCONNECTED),
        .Trace_ICache_Req(NLW_U0_Trace_ICache_Req_UNCONNECTED),
        .Trace_Instruction(NLW_U0_Trace_Instruction_UNCONNECTED[0:31]),
        .Trace_Jump_Hit(NLW_U0_Trace_Jump_Hit_UNCONNECTED),
        .Trace_Jump_Taken(NLW_U0_Trace_Jump_Taken_UNCONNECTED),
        .Trace_MB_Halted(NLW_U0_Trace_MB_Halted_UNCONNECTED),
        .Trace_MEM_PipeRun(NLW_U0_Trace_MEM_PipeRun_UNCONNECTED),
        .Trace_MSR_Reg(NLW_U0_Trace_MSR_Reg_UNCONNECTED[0:14]),
        .Trace_New_Reg_Value(NLW_U0_Trace_New_Reg_Value_UNCONNECTED[0:31]),
        .Trace_OF_PipeRun(NLW_U0_Trace_OF_PipeRun_UNCONNECTED),
        .Trace_PC(NLW_U0_Trace_PC_UNCONNECTED[0:31]),
        .Trace_PID_Reg(NLW_U0_Trace_PID_Reg_UNCONNECTED[0:7]),
        .Trace_Reg_Addr(NLW_U0_Trace_Reg_Addr_UNCONNECTED[0:4]),
        .Trace_Reg_Write(NLW_U0_Trace_Reg_Write_UNCONNECTED),
        .Trace_Valid_Instr(NLW_U0_Trace_Valid_Instr_UNCONNECTED),
        .Wakeup({1'b0,1'b0}),
        .Write_Strobe(Write_Strobe));
endmodule

module system_microblaze_0_axi_periph_0
   (ACLK,
    ARESETN,
    M00_ACLK,
    M00_ARESETN,
    M00_AXI_araddr,
    M00_AXI_arready,
    M00_AXI_arvalid,
    M00_AXI_awaddr,
    M00_AXI_awready,
    M00_AXI_awvalid,
    M00_AXI_bready,
    M00_AXI_bresp,
    M00_AXI_bvalid,
    M00_AXI_rdata,
    M00_AXI_rready,
    M00_AXI_rresp,
    M00_AXI_rvalid,
    M00_AXI_wdata,
    M00_AXI_wready,
    M00_AXI_wstrb,
    M00_AXI_wvalid,
    M01_ACLK,
    M01_ARESETN,
    M01_AXI_araddr,
    M01_AXI_arready,
    M01_AXI_arvalid,
    M01_AXI_awaddr,
    M01_AXI_awready,
    M01_AXI_awvalid,
    M01_AXI_bready,
    M01_AXI_bresp,
    M01_AXI_bvalid,
    M01_AXI_rdata,
    M01_AXI_rready,
    M01_AXI_rresp,
    M01_AXI_rvalid,
    M01_AXI_wdata,
    M01_AXI_wready,
    M01_AXI_wstrb,
    M01_AXI_wvalid,
    M02_ACLK,
    M02_ARESETN,
    M02_AXI_araddr,
    M02_AXI_arready,
    M02_AXI_arvalid,
    M02_AXI_awaddr,
    M02_AXI_awready,
    M02_AXI_awvalid,
    M02_AXI_bready,
    M02_AXI_bresp,
    M02_AXI_bvalid,
    M02_AXI_rdata,
    M02_AXI_rready,
    M02_AXI_rresp,
    M02_AXI_rvalid,
    M02_AXI_wdata,
    M02_AXI_wready,
    M02_AXI_wstrb,
    M02_AXI_wvalid,
    S00_ACLK,
    S00_ARESETN,
    S00_AXI_araddr,
    S00_AXI_arprot,
    S00_AXI_arready,
    S00_AXI_arvalid,
    S00_AXI_awaddr,
    S00_AXI_awprot,
    S00_AXI_awready,
    S00_AXI_awvalid,
    S00_AXI_bready,
    S00_AXI_bresp,
    S00_AXI_bvalid,
    S00_AXI_rdata,
    S00_AXI_rready,
    S00_AXI_rresp,
    S00_AXI_rvalid,
    S00_AXI_wdata,
    S00_AXI_wready,
    S00_AXI_wstrb,
    S00_AXI_wvalid);
  input ACLK;
  input ARESETN;
  input M00_ACLK;
  input M00_ARESETN;
  output [31:0]M00_AXI_araddr;
  input [0:0]M00_AXI_arready;
  output [0:0]M00_AXI_arvalid;
  output [31:0]M00_AXI_awaddr;
  input [0:0]M00_AXI_awready;
  output [0:0]M00_AXI_awvalid;
  output [0:0]M00_AXI_bready;
  input [1:0]M00_AXI_bresp;
  input [0:0]M00_AXI_bvalid;
  input [31:0]M00_AXI_rdata;
  output [0:0]M00_AXI_rready;
  input [1:0]M00_AXI_rresp;
  input [0:0]M00_AXI_rvalid;
  output [31:0]M00_AXI_wdata;
  input [0:0]M00_AXI_wready;
  output [3:0]M00_AXI_wstrb;
  output [0:0]M00_AXI_wvalid;
  input M01_ACLK;
  input M01_ARESETN;
  output [31:0]M01_AXI_araddr;
  input [0:0]M01_AXI_arready;
  output [0:0]M01_AXI_arvalid;
  output [31:0]M01_AXI_awaddr;
  input [0:0]M01_AXI_awready;
  output [0:0]M01_AXI_awvalid;
  output [0:0]M01_AXI_bready;
  input [1:0]M01_AXI_bresp;
  input [0:0]M01_AXI_bvalid;
  input [31:0]M01_AXI_rdata;
  output [0:0]M01_AXI_rready;
  input [1:0]M01_AXI_rresp;
  input [0:0]M01_AXI_rvalid;
  output [31:0]M01_AXI_wdata;
  input [0:0]M01_AXI_wready;
  output [3:0]M01_AXI_wstrb;
  output [0:0]M01_AXI_wvalid;
  input M02_ACLK;
  input M02_ARESETN;
  output [31:0]M02_AXI_araddr;
  input [0:0]M02_AXI_arready;
  output [0:0]M02_AXI_arvalid;
  output [31:0]M02_AXI_awaddr;
  input [0:0]M02_AXI_awready;
  output [0:0]M02_AXI_awvalid;
  output [0:0]M02_AXI_bready;
  input [1:0]M02_AXI_bresp;
  input [0:0]M02_AXI_bvalid;
  input [31:0]M02_AXI_rdata;
  output [0:0]M02_AXI_rready;
  input [1:0]M02_AXI_rresp;
  input [0:0]M02_AXI_rvalid;
  output [31:0]M02_AXI_wdata;
  input [0:0]M02_AXI_wready;
  output [3:0]M02_AXI_wstrb;
  output [0:0]M02_AXI_wvalid;
  input S00_ACLK;
  input S00_ARESETN;
  input [31:0]S00_AXI_araddr;
  input [2:0]S00_AXI_arprot;
  output S00_AXI_arready;
  input S00_AXI_arvalid;
  input [31:0]S00_AXI_awaddr;
  input [2:0]S00_AXI_awprot;
  output S00_AXI_awready;
  input S00_AXI_awvalid;
  input S00_AXI_bready;
  output [1:0]S00_AXI_bresp;
  output S00_AXI_bvalid;
  output [31:0]S00_AXI_rdata;
  input S00_AXI_rready;
  output [1:0]S00_AXI_rresp;
  output S00_AXI_rvalid;
  input [31:0]S00_AXI_wdata;
  output S00_AXI_wready;
  input [3:0]S00_AXI_wstrb;
  input S00_AXI_wvalid;

  wire ACLK;
  wire ARESETN;
  wire [31:0]M00_AXI_araddr;
  wire [0:0]M00_AXI_arready;
  wire [0:0]M00_AXI_arvalid;
  wire [0:0]M00_AXI_awready;
  wire [0:0]M00_AXI_awvalid;
  wire [0:0]M00_AXI_bready;
  wire [0:0]M00_AXI_bvalid;
  wire [31:0]M00_AXI_rdata;
  wire [0:0]M00_AXI_rready;
  wire [0:0]M00_AXI_rvalid;
  wire [31:0]M00_AXI_wdata;
  wire [0:0]M00_AXI_wready;
  wire [0:0]M00_AXI_wvalid;
  wire [0:0]M01_AXI_arready;
  wire [0:0]M01_AXI_arvalid;
  wire [31:0]M01_AXI_awaddr;
  wire [0:0]M01_AXI_awready;
  wire [0:0]M01_AXI_awvalid;
  wire [0:0]M01_AXI_bready;
  wire [0:0]M01_AXI_bvalid;
  wire [31:0]M01_AXI_rdata;
  wire [0:0]M01_AXI_rready;
  wire [0:0]M01_AXI_rvalid;
  wire [31:0]M01_AXI_wdata;
  wire [0:0]M01_AXI_wready;
  wire [0:0]M01_AXI_wvalid;
  wire [31:0]M02_AXI_araddr;
  wire [0:0]M02_AXI_arready;
  wire [0:0]M02_AXI_arvalid;
  wire [0:0]M02_AXI_awready;
  wire [0:0]M02_AXI_awvalid;
  wire [0:0]M02_AXI_bready;
  wire [0:0]M02_AXI_bvalid;
  wire [31:0]M02_AXI_rdata;
  wire [0:0]M02_AXI_rready;
  wire [0:0]M02_AXI_rvalid;
  wire [31:0]M02_AXI_wdata;
  wire [0:0]M02_AXI_wready;
  wire [0:0]M02_AXI_wvalid;
  wire [31:0]S00_AXI_araddr;
  wire S00_AXI_arready;
  wire S00_AXI_arvalid;
  wire S00_AXI_awready;
  wire S00_AXI_awvalid;
  wire S00_AXI_bvalid;
  wire [31:0]S00_AXI_rdata;
  wire S00_AXI_rvalid;
  wire [31:0]S00_AXI_wdata;
  wire S00_AXI_wready;
  wire S00_AXI_wvalid;
  wire [95:9]NLW_xbar_m_axi_araddr_UNCONNECTED;
  wire [8:0]NLW_xbar_m_axi_arprot_UNCONNECTED;
  wire [95:0]NLW_xbar_m_axi_awaddr_UNCONNECTED;
  wire [8:0]NLW_xbar_m_axi_awprot_UNCONNECTED;
  wire [5:0]NLW_xbar_m_axi_bresp_UNCONNECTED;
  wire [63:11]NLW_xbar_m_axi_rdata_UNCONNECTED;
  wire [5:0]NLW_xbar_m_axi_rresp_UNCONNECTED;
  wire [93:11]NLW_xbar_m_axi_wdata_UNCONNECTED;
  wire [11:0]NLW_xbar_m_axi_wstrb_UNCONNECTED;
  wire [15:9]NLW_xbar_s_axi_araddr_UNCONNECTED;
  wire [2:0]NLW_xbar_s_axi_arprot_UNCONNECTED;
  wire [31:0]NLW_xbar_s_axi_awaddr_UNCONNECTED;
  wire [2:0]NLW_xbar_s_axi_awprot_UNCONNECTED;
  wire [0:0]NLW_xbar_s_axi_bready_UNCONNECTED;
  wire [1:0]NLW_xbar_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_xbar_s_axi_rready_UNCONNECTED;
  wire [1:0]NLW_xbar_s_axi_rresp_UNCONNECTED;
  wire [29:11]NLW_xbar_s_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_xbar_s_axi_wstrb_UNCONNECTED;

  (* IMPORTED_FROM = "c:/Users/lesag/Documents/University/Personal_Projects/camera-filters/vivado/spartan_cam.srcs/sources_1/bd/system/ip/system_xbar_0/system_xbar_0.dcp" *) 
  (* IMPORTED_TYPE = "CHECKPOINT" *) 
  (* IS_IMPORTED *) 
  (* X_CORE_INFO = "axi_crossbar_v2_1_22_axi_crossbar,Vivado 2020.1" *) 
  system_xbar_0 xbar
       (.aclk(ACLK),
        .aresetn(ARESETN),
        .m_axi_araddr({NLW_xbar_m_axi_araddr_UNCONNECTED[95:73],M02_AXI_araddr[8],NLW_xbar_m_axi_araddr_UNCONNECTED[71:68],M02_AXI_araddr[3:2],NLW_xbar_m_axi_araddr_UNCONNECTED[65:9],M00_AXI_araddr[8:0]}),
        .m_axi_arprot(NLW_xbar_m_axi_arprot_UNCONNECTED[8:0]),
        .m_axi_arready({M02_AXI_arready,M01_AXI_arready,M00_AXI_arready}),
        .m_axi_arvalid({M02_AXI_arvalid,M01_AXI_arvalid,M00_AXI_arvalid}),
        .m_axi_awaddr({NLW_xbar_m_axi_awaddr_UNCONNECTED[95:36],M01_AXI_awaddr[3:2],NLW_xbar_m_axi_awaddr_UNCONNECTED[33:0]}),
        .m_axi_awprot(NLW_xbar_m_axi_awprot_UNCONNECTED[8:0]),
        .m_axi_awready({M02_AXI_awready,M01_AXI_awready,M00_AXI_awready}),
        .m_axi_awvalid({M02_AXI_awvalid,M01_AXI_awvalid,M00_AXI_awvalid}),
        .m_axi_bready({M02_AXI_bready,M01_AXI_bready,M00_AXI_bready}),
        .m_axi_bresp(NLW_xbar_m_axi_bresp_UNCONNECTED[5:0]),
        .m_axi_bvalid({M02_AXI_bvalid,M01_AXI_bvalid,M00_AXI_bvalid}),
        .m_axi_rdata({M02_AXI_rdata,NLW_xbar_m_axi_rdata_UNCONNECTED[63:40],M01_AXI_rdata[7:0],M00_AXI_rdata[31],NLW_xbar_m_axi_rdata_UNCONNECTED[30:11],M00_AXI_rdata[10:0]}),
        .m_axi_rready({M02_AXI_rready,M01_AXI_rready,M00_AXI_rready}),
        .m_axi_rresp(NLW_xbar_m_axi_rresp_UNCONNECTED[5:0]),
        .m_axi_rvalid({M02_AXI_rvalid,M01_AXI_rvalid,M00_AXI_rvalid}),
        .m_axi_wdata({M02_AXI_wdata[31:30],NLW_xbar_m_axi_wdata_UNCONNECTED[93:66],M02_AXI_wdata[1:0],NLW_xbar_m_axi_wdata_UNCONNECTED[63:40],M01_AXI_wdata[7:0],M00_AXI_wdata[31],NLW_xbar_m_axi_wdata_UNCONNECTED[30:11],M00_AXI_wdata[10:0]}),
        .m_axi_wready({M02_AXI_wready,M01_AXI_wready,M00_AXI_wready}),
        .m_axi_wstrb(NLW_xbar_m_axi_wstrb_UNCONNECTED[11:0]),
        .m_axi_wvalid({M02_AXI_wvalid,M01_AXI_wvalid,M00_AXI_wvalid}),
        .s_axi_araddr({S00_AXI_araddr[31:16],NLW_xbar_s_axi_araddr_UNCONNECTED[15:9],S00_AXI_araddr[8:0]}),
        .s_axi_arprot(NLW_xbar_s_axi_arprot_UNCONNECTED[2:0]),
        .s_axi_arready(S00_AXI_arready),
        .s_axi_arvalid(S00_AXI_arvalid),
        .s_axi_awaddr(NLW_xbar_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awprot(NLW_xbar_s_axi_awprot_UNCONNECTED[2:0]),
        .s_axi_awready(S00_AXI_awready),
        .s_axi_awvalid(S00_AXI_awvalid),
        .s_axi_bready(NLW_xbar_s_axi_bready_UNCONNECTED[0]),
        .s_axi_bresp(NLW_xbar_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_bvalid(S00_AXI_bvalid),
        .s_axi_rdata(S00_AXI_rdata),
        .s_axi_rready(NLW_xbar_s_axi_rready_UNCONNECTED[0]),
        .s_axi_rresp(NLW_xbar_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_rvalid(S00_AXI_rvalid),
        .s_axi_wdata({S00_AXI_wdata[31:30],NLW_xbar_s_axi_wdata_UNCONNECTED[29:11],S00_AXI_wdata[10:0]}),
        .s_axi_wready(S00_AXI_wready),
        .s_axi_wstrb(NLW_xbar_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wvalid(S00_AXI_wvalid));
endmodule

(* CHECK_LICENSE_TYPE = "system_rgb2dvi_0_1,rgb2dvi,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "rgb2dvi,Vivado 2020.1" *) 
module system_rgb2dvi_0_1
   (TMDS_Clk_p,
    TMDS_Clk_n,
    TMDS_Data_p,
    TMDS_Data_n,
    aRst_n,
    vid_pData,
    vid_pVDE,
    vid_pHSync,
    vid_pVSync,
    PixelClk,
    SerialClk);
  (* X_INTERFACE_INFO = "digilentinc.com:interface:tmds:1.0 TMDS CLK_P" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME TMDS, BOARD.ASSOCIATED_PARAM TMDS_BOARD_INTERFACE" *) output TMDS_Clk_p;
  (* X_INTERFACE_INFO = "digilentinc.com:interface:tmds:1.0 TMDS CLK_N" *) output TMDS_Clk_n;
  (* X_INTERFACE_INFO = "digilentinc.com:interface:tmds:1.0 TMDS DATA_P" *) output [2:0]TMDS_Data_p;
  (* X_INTERFACE_INFO = "digilentinc.com:interface:tmds:1.0 TMDS DATA_N" *) output [2:0]TMDS_Data_n;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 AsyncRst_n RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME AsyncRst_n, POLARITY ACTIVE_LOW" *) input aRst_n;
  (* X_INTERFACE_INFO = "xilinx.com:interface:vid_io:1.0 RGB DATA" *) input [23:0]vid_pData;
  (* X_INTERFACE_INFO = "xilinx.com:interface:vid_io:1.0 RGB ACTIVE_VIDEO" *) input vid_pVDE;
  (* X_INTERFACE_INFO = "xilinx.com:interface:vid_io:1.0 RGB HSYNC" *) input vid_pHSync;
  (* X_INTERFACE_INFO = "xilinx.com:interface:vid_io:1.0 RGB VSYNC" *) input vid_pVSync;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 PixelClk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME PixelClk, FREQ_HZ 100000000, PHASE 0.0, CLK_DOMAIN /clk_wiz_1_clk_out1" *) input PixelClk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 SerialClk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME SerialClk, ASSOCIATED_RESET aRst:aRst_n:pRst:pRst_n, FREQ_HZ 500000000, PHASE 0.0, CLK_DOMAIN /clk_wiz_1_clk_out1" *) input SerialClk;

  wire PixelClk;
  wire SerialClk;
  wire TMDS_Clk_n;
  wire TMDS_Clk_p;
  wire [2:0]TMDS_Data_n;
  wire [2:0]TMDS_Data_p;
  wire [23:0]vid_pData;
  wire vid_pHSync;
  wire vid_pVDE;
  wire vid_pVSync;
  wire NLW_U0_aRst_UNCONNECTED;
  wire NLW_U0_aRst_n_UNCONNECTED;

  (* kClkPrimitive = "MMCM" *) 
  (* kClkRange = "1" *) 
  (* kGenerateSerialClk = "FALSE" *) 
  (* kRstActiveHigh = "FALSE" *) 
  system_rgb2dvi_0_1__rgb2dvi U0
       (.PixelClk(PixelClk),
        .SerialClk(SerialClk),
        .TMDS_Clk_n(TMDS_Clk_n),
        .TMDS_Clk_p(TMDS_Clk_p),
        .TMDS_Data_n(TMDS_Data_n),
        .TMDS_Data_p(TMDS_Data_p),
        .aRst(NLW_U0_aRst_UNCONNECTED),
        .aRst_n(NLW_U0_aRst_n_UNCONNECTED),
        .vid_pData(vid_pData),
        .vid_pHSync(vid_pHSync),
        .vid_pVDE(vid_pVDE),
        .vid_pVSync(vid_pVSync));
endmodule

(* ORIG_REF_NAME = "OutputSERDES" *) 
module system_rgb2dvi_0_1__OutputSERDES
   (TMDS_Clk_p,
    TMDS_Clk_n,
    SerialClk,
    PixelClk,
    aRst);
  output TMDS_Clk_p;
  output TMDS_Clk_n;
  input SerialClk;
  input PixelClk;
  input aRst;

  wire PixelClk;
  wire SerialClk;
  wire TMDS_Clk_n;
  wire TMDS_Clk_p;
  wire aRst;
  wire ocascade1;
  wire ocascade2;
  wire sDataOut;
  wire NLW_SerializerMaster_OFB_UNCONNECTED;
  wire NLW_SerializerMaster_SHIFTOUT1_UNCONNECTED;
  wire NLW_SerializerMaster_SHIFTOUT2_UNCONNECTED;
  wire NLW_SerializerMaster_TBYTEOUT_UNCONNECTED;
  wire NLW_SerializerMaster_TFB_UNCONNECTED;
  wire NLW_SerializerMaster_TQ_UNCONNECTED;
  wire NLW_SerializerSlave_OFB_UNCONNECTED;
  wire NLW_SerializerSlave_OQ_UNCONNECTED;
  wire NLW_SerializerSlave_TBYTEOUT_UNCONNECTED;
  wire NLW_SerializerSlave_TFB_UNCONNECTED;
  wire NLW_SerializerSlave_TQ_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  OBUFDS OutputBuffer
       (.I(sDataOut),
        .O(TMDS_Clk_p),
        .OB(TMDS_Clk_n));
  (* BOX_TYPE = "PRIMITIVE" *) 
  OSERDESE2 #(
    .DATA_RATE_OQ("DDR"),
    .DATA_RATE_TQ("SDR"),
    .DATA_WIDTH(10),
    .INIT_OQ(1'b0),
    .INIT_TQ(1'b0),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .IS_D3_INVERTED(1'b0),
    .IS_D4_INVERTED(1'b0),
    .IS_D5_INVERTED(1'b0),
    .IS_D6_INVERTED(1'b0),
    .IS_D7_INVERTED(1'b0),
    .IS_D8_INVERTED(1'b0),
    .IS_T1_INVERTED(1'b0),
    .IS_T2_INVERTED(1'b0),
    .IS_T3_INVERTED(1'b0),
    .IS_T4_INVERTED(1'b0),
    .SERDES_MODE("MASTER"),
    .SRVAL_OQ(1'b0),
    .SRVAL_TQ(1'b0),
    .TBYTE_CTL("FALSE"),
    .TBYTE_SRC("FALSE"),
    .TRISTATE_WIDTH(1)) 
    SerializerMaster
       (.CLK(SerialClk),
        .CLKDIV(PixelClk),
        .D1(1'b0),
        .D2(1'b0),
        .D3(1'b0),
        .D4(1'b0),
        .D5(1'b0),
        .D6(1'b1),
        .D7(1'b1),
        .D8(1'b1),
        .OCE(1'b1),
        .OFB(NLW_SerializerMaster_OFB_UNCONNECTED),
        .OQ(sDataOut),
        .RST(aRst),
        .SHIFTIN1(ocascade1),
        .SHIFTIN2(ocascade2),
        .SHIFTOUT1(NLW_SerializerMaster_SHIFTOUT1_UNCONNECTED),
        .SHIFTOUT2(NLW_SerializerMaster_SHIFTOUT2_UNCONNECTED),
        .T1(1'b0),
        .T2(1'b0),
        .T3(1'b0),
        .T4(1'b0),
        .TBYTEIN(1'b0),
        .TBYTEOUT(NLW_SerializerMaster_TBYTEOUT_UNCONNECTED),
        .TCE(1'b0),
        .TFB(NLW_SerializerMaster_TFB_UNCONNECTED),
        .TQ(NLW_SerializerMaster_TQ_UNCONNECTED));
  (* BOX_TYPE = "PRIMITIVE" *) 
  OSERDESE2 #(
    .DATA_RATE_OQ("DDR"),
    .DATA_RATE_TQ("SDR"),
    .DATA_WIDTH(10),
    .INIT_OQ(1'b0),
    .INIT_TQ(1'b0),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .IS_D3_INVERTED(1'b0),
    .IS_D4_INVERTED(1'b0),
    .IS_D5_INVERTED(1'b0),
    .IS_D6_INVERTED(1'b0),
    .IS_D7_INVERTED(1'b0),
    .IS_D8_INVERTED(1'b0),
    .IS_T1_INVERTED(1'b0),
    .IS_T2_INVERTED(1'b0),
    .IS_T3_INVERTED(1'b0),
    .IS_T4_INVERTED(1'b0),
    .SERDES_MODE("SLAVE"),
    .SRVAL_OQ(1'b0),
    .SRVAL_TQ(1'b0),
    .TBYTE_CTL("FALSE"),
    .TBYTE_SRC("FALSE"),
    .TRISTATE_WIDTH(1)) 
    SerializerSlave
       (.CLK(SerialClk),
        .CLKDIV(PixelClk),
        .D1(1'b0),
        .D2(1'b0),
        .D3(1'b1),
        .D4(1'b1),
        .D5(1'b0),
        .D6(1'b0),
        .D7(1'b0),
        .D8(1'b0),
        .OCE(1'b1),
        .OFB(NLW_SerializerSlave_OFB_UNCONNECTED),
        .OQ(NLW_SerializerSlave_OQ_UNCONNECTED),
        .RST(aRst),
        .SHIFTIN1(1'b0),
        .SHIFTIN2(1'b0),
        .SHIFTOUT1(ocascade1),
        .SHIFTOUT2(ocascade2),
        .T1(1'b0),
        .T2(1'b0),
        .T3(1'b0),
        .T4(1'b0),
        .TBYTEIN(1'b0),
        .TBYTEOUT(NLW_SerializerSlave_TBYTEOUT_UNCONNECTED),
        .TCE(1'b0),
        .TFB(NLW_SerializerSlave_TFB_UNCONNECTED),
        .TQ(NLW_SerializerSlave_TQ_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "OutputSERDES" *) 
module system_rgb2dvi_0_1__OutputSERDES_0
   (TMDS_Data_p,
    TMDS_Data_n,
    SerialClk,
    PixelClk,
    pDataOut,
    aRst);
  output [0:0]TMDS_Data_p;
  output [0:0]TMDS_Data_n;
  input SerialClk;
  input PixelClk;
  input [9:0]pDataOut;
  input aRst;

  wire PixelClk;
  wire SerialClk;
  wire [0:0]TMDS_Data_n;
  wire [0:0]TMDS_Data_p;
  wire aRst;
  wire ocascade1;
  wire ocascade2;
  wire [9:0]pDataOut;
  wire sDataOut;
  wire NLW_SerializerMaster_OFB_UNCONNECTED;
  wire NLW_SerializerMaster_SHIFTOUT1_UNCONNECTED;
  wire NLW_SerializerMaster_SHIFTOUT2_UNCONNECTED;
  wire NLW_SerializerMaster_TBYTEOUT_UNCONNECTED;
  wire NLW_SerializerMaster_TFB_UNCONNECTED;
  wire NLW_SerializerMaster_TQ_UNCONNECTED;
  wire NLW_SerializerSlave_OFB_UNCONNECTED;
  wire NLW_SerializerSlave_OQ_UNCONNECTED;
  wire NLW_SerializerSlave_TBYTEOUT_UNCONNECTED;
  wire NLW_SerializerSlave_TFB_UNCONNECTED;
  wire NLW_SerializerSlave_TQ_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  OBUFDS OutputBuffer
       (.I(sDataOut),
        .O(TMDS_Data_p),
        .OB(TMDS_Data_n));
  (* BOX_TYPE = "PRIMITIVE" *) 
  OSERDESE2 #(
    .DATA_RATE_OQ("DDR"),
    .DATA_RATE_TQ("SDR"),
    .DATA_WIDTH(10),
    .INIT_OQ(1'b0),
    .INIT_TQ(1'b0),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .IS_D3_INVERTED(1'b0),
    .IS_D4_INVERTED(1'b0),
    .IS_D5_INVERTED(1'b0),
    .IS_D6_INVERTED(1'b0),
    .IS_D7_INVERTED(1'b0),
    .IS_D8_INVERTED(1'b0),
    .IS_T1_INVERTED(1'b0),
    .IS_T2_INVERTED(1'b0),
    .IS_T3_INVERTED(1'b0),
    .IS_T4_INVERTED(1'b0),
    .SERDES_MODE("MASTER"),
    .SRVAL_OQ(1'b0),
    .SRVAL_TQ(1'b0),
    .TBYTE_CTL("FALSE"),
    .TBYTE_SRC("FALSE"),
    .TRISTATE_WIDTH(1)) 
    SerializerMaster
       (.CLK(SerialClk),
        .CLKDIV(PixelClk),
        .D1(pDataOut[0]),
        .D2(pDataOut[1]),
        .D3(pDataOut[2]),
        .D4(pDataOut[3]),
        .D5(pDataOut[4]),
        .D6(pDataOut[5]),
        .D7(pDataOut[6]),
        .D8(pDataOut[7]),
        .OCE(1'b1),
        .OFB(NLW_SerializerMaster_OFB_UNCONNECTED),
        .OQ(sDataOut),
        .RST(aRst),
        .SHIFTIN1(ocascade1),
        .SHIFTIN2(ocascade2),
        .SHIFTOUT1(NLW_SerializerMaster_SHIFTOUT1_UNCONNECTED),
        .SHIFTOUT2(NLW_SerializerMaster_SHIFTOUT2_UNCONNECTED),
        .T1(1'b0),
        .T2(1'b0),
        .T3(1'b0),
        .T4(1'b0),
        .TBYTEIN(1'b0),
        .TBYTEOUT(NLW_SerializerMaster_TBYTEOUT_UNCONNECTED),
        .TCE(1'b0),
        .TFB(NLW_SerializerMaster_TFB_UNCONNECTED),
        .TQ(NLW_SerializerMaster_TQ_UNCONNECTED));
  (* BOX_TYPE = "PRIMITIVE" *) 
  OSERDESE2 #(
    .DATA_RATE_OQ("DDR"),
    .DATA_RATE_TQ("SDR"),
    .DATA_WIDTH(10),
    .INIT_OQ(1'b0),
    .INIT_TQ(1'b0),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .IS_D3_INVERTED(1'b0),
    .IS_D4_INVERTED(1'b0),
    .IS_D5_INVERTED(1'b0),
    .IS_D6_INVERTED(1'b0),
    .IS_D7_INVERTED(1'b0),
    .IS_D8_INVERTED(1'b0),
    .IS_T1_INVERTED(1'b0),
    .IS_T2_INVERTED(1'b0),
    .IS_T3_INVERTED(1'b0),
    .IS_T4_INVERTED(1'b0),
    .SERDES_MODE("SLAVE"),
    .SRVAL_OQ(1'b0),
    .SRVAL_TQ(1'b0),
    .TBYTE_CTL("FALSE"),
    .TBYTE_SRC("FALSE"),
    .TRISTATE_WIDTH(1)) 
    SerializerSlave
       (.CLK(SerialClk),
        .CLKDIV(PixelClk),
        .D1(1'b0),
        .D2(1'b0),
        .D3(pDataOut[8]),
        .D4(pDataOut[9]),
        .D5(1'b0),
        .D6(1'b0),
        .D7(1'b0),
        .D8(1'b0),
        .OCE(1'b1),
        .OFB(NLW_SerializerSlave_OFB_UNCONNECTED),
        .OQ(NLW_SerializerSlave_OQ_UNCONNECTED),
        .RST(aRst),
        .SHIFTIN1(1'b0),
        .SHIFTIN2(1'b0),
        .SHIFTOUT1(ocascade1),
        .SHIFTOUT2(ocascade2),
        .T1(1'b0),
        .T2(1'b0),
        .T3(1'b0),
        .T4(1'b0),
        .TBYTEIN(1'b0),
        .TBYTEOUT(NLW_SerializerSlave_TBYTEOUT_UNCONNECTED),
        .TCE(1'b0),
        .TFB(NLW_SerializerSlave_TFB_UNCONNECTED),
        .TQ(NLW_SerializerSlave_TQ_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "OutputSERDES" *) 
module system_rgb2dvi_0_1__OutputSERDES_2
   (TMDS_Data_p,
    TMDS_Data_n,
    SerialClk,
    PixelClk,
    pDataOut,
    out);
  output [0:0]TMDS_Data_p;
  output [0:0]TMDS_Data_n;
  input SerialClk;
  input PixelClk;
  input [9:0]pDataOut;
  input [0:0]out;

  wire PixelClk;
  wire SerialClk;
  wire [0:0]TMDS_Data_n;
  wire [0:0]TMDS_Data_p;
  wire ocascade1;
  wire ocascade2;
  wire [0:0]out;
  wire [9:0]pDataOut;
  wire sDataOut;
  wire NLW_SerializerMaster_OFB_UNCONNECTED;
  wire NLW_SerializerMaster_SHIFTOUT1_UNCONNECTED;
  wire NLW_SerializerMaster_SHIFTOUT2_UNCONNECTED;
  wire NLW_SerializerMaster_TBYTEOUT_UNCONNECTED;
  wire NLW_SerializerMaster_TFB_UNCONNECTED;
  wire NLW_SerializerMaster_TQ_UNCONNECTED;
  wire NLW_SerializerSlave_OFB_UNCONNECTED;
  wire NLW_SerializerSlave_OQ_UNCONNECTED;
  wire NLW_SerializerSlave_TBYTEOUT_UNCONNECTED;
  wire NLW_SerializerSlave_TFB_UNCONNECTED;
  wire NLW_SerializerSlave_TQ_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  OBUFDS OutputBuffer
       (.I(sDataOut),
        .O(TMDS_Data_p),
        .OB(TMDS_Data_n));
  (* BOX_TYPE = "PRIMITIVE" *) 
  OSERDESE2 #(
    .DATA_RATE_OQ("DDR"),
    .DATA_RATE_TQ("SDR"),
    .DATA_WIDTH(10),
    .INIT_OQ(1'b0),
    .INIT_TQ(1'b0),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .IS_D3_INVERTED(1'b0),
    .IS_D4_INVERTED(1'b0),
    .IS_D5_INVERTED(1'b0),
    .IS_D6_INVERTED(1'b0),
    .IS_D7_INVERTED(1'b0),
    .IS_D8_INVERTED(1'b0),
    .IS_T1_INVERTED(1'b0),
    .IS_T2_INVERTED(1'b0),
    .IS_T3_INVERTED(1'b0),
    .IS_T4_INVERTED(1'b0),
    .SERDES_MODE("MASTER"),
    .SRVAL_OQ(1'b0),
    .SRVAL_TQ(1'b0),
    .TBYTE_CTL("FALSE"),
    .TBYTE_SRC("FALSE"),
    .TRISTATE_WIDTH(1)) 
    SerializerMaster
       (.CLK(SerialClk),
        .CLKDIV(PixelClk),
        .D1(pDataOut[0]),
        .D2(pDataOut[1]),
        .D3(pDataOut[2]),
        .D4(pDataOut[3]),
        .D5(pDataOut[4]),
        .D6(pDataOut[5]),
        .D7(pDataOut[6]),
        .D8(pDataOut[7]),
        .OCE(1'b1),
        .OFB(NLW_SerializerMaster_OFB_UNCONNECTED),
        .OQ(sDataOut),
        .RST(out),
        .SHIFTIN1(ocascade1),
        .SHIFTIN2(ocascade2),
        .SHIFTOUT1(NLW_SerializerMaster_SHIFTOUT1_UNCONNECTED),
        .SHIFTOUT2(NLW_SerializerMaster_SHIFTOUT2_UNCONNECTED),
        .T1(1'b0),
        .T2(1'b0),
        .T3(1'b0),
        .T4(1'b0),
        .TBYTEIN(1'b0),
        .TBYTEOUT(NLW_SerializerMaster_TBYTEOUT_UNCONNECTED),
        .TCE(1'b0),
        .TFB(NLW_SerializerMaster_TFB_UNCONNECTED),
        .TQ(NLW_SerializerMaster_TQ_UNCONNECTED));
  (* BOX_TYPE = "PRIMITIVE" *) 
  OSERDESE2 #(
    .DATA_RATE_OQ("DDR"),
    .DATA_RATE_TQ("SDR"),
    .DATA_WIDTH(10),
    .INIT_OQ(1'b0),
    .INIT_TQ(1'b0),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .IS_D3_INVERTED(1'b0),
    .IS_D4_INVERTED(1'b0),
    .IS_D5_INVERTED(1'b0),
    .IS_D6_INVERTED(1'b0),
    .IS_D7_INVERTED(1'b0),
    .IS_D8_INVERTED(1'b0),
    .IS_T1_INVERTED(1'b0),
    .IS_T2_INVERTED(1'b0),
    .IS_T3_INVERTED(1'b0),
    .IS_T4_INVERTED(1'b0),
    .SERDES_MODE("SLAVE"),
    .SRVAL_OQ(1'b0),
    .SRVAL_TQ(1'b0),
    .TBYTE_CTL("FALSE"),
    .TBYTE_SRC("FALSE"),
    .TRISTATE_WIDTH(1)) 
    SerializerSlave
       (.CLK(SerialClk),
        .CLKDIV(PixelClk),
        .D1(1'b0),
        .D2(1'b0),
        .D3(pDataOut[8]),
        .D4(pDataOut[9]),
        .D5(1'b0),
        .D6(1'b0),
        .D7(1'b0),
        .D8(1'b0),
        .OCE(1'b1),
        .OFB(NLW_SerializerSlave_OFB_UNCONNECTED),
        .OQ(NLW_SerializerSlave_OQ_UNCONNECTED),
        .RST(out),
        .SHIFTIN1(1'b0),
        .SHIFTIN2(1'b0),
        .SHIFTOUT1(ocascade1),
        .SHIFTOUT2(ocascade2),
        .T1(1'b0),
        .T2(1'b0),
        .T3(1'b0),
        .T4(1'b0),
        .TBYTEIN(1'b0),
        .TBYTEOUT(NLW_SerializerSlave_TBYTEOUT_UNCONNECTED),
        .TCE(1'b0),
        .TFB(NLW_SerializerSlave_TFB_UNCONNECTED),
        .TQ(NLW_SerializerSlave_TQ_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "OutputSERDES" *) 
module system_rgb2dvi_0_1__OutputSERDES_4
   (TMDS_Data_p,
    TMDS_Data_n,
    SerialClk,
    PixelClk,
    pDataOut,
    out);
  output [0:0]TMDS_Data_p;
  output [0:0]TMDS_Data_n;
  input SerialClk;
  input PixelClk;
  input [9:0]pDataOut;
  input [0:0]out;

  wire PixelClk;
  wire SerialClk;
  wire [0:0]TMDS_Data_n;
  wire [0:0]TMDS_Data_p;
  wire ocascade1;
  wire ocascade2;
  wire [0:0]out;
  wire [9:0]pDataOut;
  wire sDataOut;
  wire NLW_SerializerMaster_OFB_UNCONNECTED;
  wire NLW_SerializerMaster_SHIFTOUT1_UNCONNECTED;
  wire NLW_SerializerMaster_SHIFTOUT2_UNCONNECTED;
  wire NLW_SerializerMaster_TBYTEOUT_UNCONNECTED;
  wire NLW_SerializerMaster_TFB_UNCONNECTED;
  wire NLW_SerializerMaster_TQ_UNCONNECTED;
  wire NLW_SerializerSlave_OFB_UNCONNECTED;
  wire NLW_SerializerSlave_OQ_UNCONNECTED;
  wire NLW_SerializerSlave_TBYTEOUT_UNCONNECTED;
  wire NLW_SerializerSlave_TFB_UNCONNECTED;
  wire NLW_SerializerSlave_TQ_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  OBUFDS OutputBuffer
       (.I(sDataOut),
        .O(TMDS_Data_p),
        .OB(TMDS_Data_n));
  (* BOX_TYPE = "PRIMITIVE" *) 
  OSERDESE2 #(
    .DATA_RATE_OQ("DDR"),
    .DATA_RATE_TQ("SDR"),
    .DATA_WIDTH(10),
    .INIT_OQ(1'b0),
    .INIT_TQ(1'b0),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .IS_D3_INVERTED(1'b0),
    .IS_D4_INVERTED(1'b0),
    .IS_D5_INVERTED(1'b0),
    .IS_D6_INVERTED(1'b0),
    .IS_D7_INVERTED(1'b0),
    .IS_D8_INVERTED(1'b0),
    .IS_T1_INVERTED(1'b0),
    .IS_T2_INVERTED(1'b0),
    .IS_T3_INVERTED(1'b0),
    .IS_T4_INVERTED(1'b0),
    .SERDES_MODE("MASTER"),
    .SRVAL_OQ(1'b0),
    .SRVAL_TQ(1'b0),
    .TBYTE_CTL("FALSE"),
    .TBYTE_SRC("FALSE"),
    .TRISTATE_WIDTH(1)) 
    SerializerMaster
       (.CLK(SerialClk),
        .CLKDIV(PixelClk),
        .D1(pDataOut[0]),
        .D2(pDataOut[1]),
        .D3(pDataOut[2]),
        .D4(pDataOut[3]),
        .D5(pDataOut[4]),
        .D6(pDataOut[5]),
        .D7(pDataOut[6]),
        .D8(pDataOut[7]),
        .OCE(1'b1),
        .OFB(NLW_SerializerMaster_OFB_UNCONNECTED),
        .OQ(sDataOut),
        .RST(out),
        .SHIFTIN1(ocascade1),
        .SHIFTIN2(ocascade2),
        .SHIFTOUT1(NLW_SerializerMaster_SHIFTOUT1_UNCONNECTED),
        .SHIFTOUT2(NLW_SerializerMaster_SHIFTOUT2_UNCONNECTED),
        .T1(1'b0),
        .T2(1'b0),
        .T3(1'b0),
        .T4(1'b0),
        .TBYTEIN(1'b0),
        .TBYTEOUT(NLW_SerializerMaster_TBYTEOUT_UNCONNECTED),
        .TCE(1'b0),
        .TFB(NLW_SerializerMaster_TFB_UNCONNECTED),
        .TQ(NLW_SerializerMaster_TQ_UNCONNECTED));
  (* BOX_TYPE = "PRIMITIVE" *) 
  OSERDESE2 #(
    .DATA_RATE_OQ("DDR"),
    .DATA_RATE_TQ("SDR"),
    .DATA_WIDTH(10),
    .INIT_OQ(1'b0),
    .INIT_TQ(1'b0),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D1_INVERTED(1'b0),
    .IS_D2_INVERTED(1'b0),
    .IS_D3_INVERTED(1'b0),
    .IS_D4_INVERTED(1'b0),
    .IS_D5_INVERTED(1'b0),
    .IS_D6_INVERTED(1'b0),
    .IS_D7_INVERTED(1'b0),
    .IS_D8_INVERTED(1'b0),
    .IS_T1_INVERTED(1'b0),
    .IS_T2_INVERTED(1'b0),
    .IS_T3_INVERTED(1'b0),
    .IS_T4_INVERTED(1'b0),
    .SERDES_MODE("SLAVE"),
    .SRVAL_OQ(1'b0),
    .SRVAL_TQ(1'b0),
    .TBYTE_CTL("FALSE"),
    .TBYTE_SRC("FALSE"),
    .TRISTATE_WIDTH(1)) 
    SerializerSlave
       (.CLK(SerialClk),
        .CLKDIV(PixelClk),
        .D1(1'b0),
        .D2(1'b0),
        .D3(pDataOut[8]),
        .D4(pDataOut[9]),
        .D5(1'b0),
        .D6(1'b0),
        .D7(1'b0),
        .D8(1'b0),
        .OCE(1'b1),
        .OFB(NLW_SerializerSlave_OFB_UNCONNECTED),
        .OQ(NLW_SerializerSlave_OQ_UNCONNECTED),
        .RST(out),
        .SHIFTIN1(1'b0),
        .SHIFTIN2(1'b0),
        .SHIFTOUT1(ocascade1),
        .SHIFTOUT2(ocascade2),
        .T1(1'b0),
        .T2(1'b0),
        .T3(1'b0),
        .T4(1'b0),
        .TBYTEIN(1'b0),
        .TBYTEOUT(NLW_SerializerSlave_TBYTEOUT_UNCONNECTED),
        .TCE(1'b0),
        .TFB(NLW_SerializerSlave_TFB_UNCONNECTED),
        .TQ(NLW_SerializerSlave_TQ_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "ResetBridge" *) 
module system_rgb2dvi_0_1__ResetBridge
   (out,
    aRst_n,
    PixelClk);
  output [0:0]out;
  input aRst_n;
  input PixelClk;

  wire PixelClk;
  wire [0:0]out;

  system_rgb2dvi_0_1__SyncAsync SyncAsyncx
       (.AS(1'b0),
        .PixelClk(PixelClk),
        .out(out));
endmodule

(* ORIG_REF_NAME = "SyncAsync" *) 
module system_rgb2dvi_0_1__SyncAsync
   (out,
    PixelClk,
    AS);
  output [0:0]out;
  input PixelClk;
  input [0:0]AS;

  wire [0:0]AS;
  wire PixelClk;
  (* async_reg = "true" *) wire [1:0]oSyncStages;

  assign out[0] = oSyncStages[1];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[0] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(AS),
        .Q(oSyncStages[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \oSyncStages_reg[1] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(oSyncStages[0]),
        .PRE(AS),
        .Q(oSyncStages[1]));
endmodule

(* ORIG_REF_NAME = "TMDS_Encoder" *) 
module system_rgb2dvi_0_1__TMDS_Encoder
   (SR,
    Q,
    vid_pHSync,
    PixelClk,
    vid_pVSync,
    vid_pVDE,
    vid_pData);
  output [0:0]SR;
  output [9:0]Q;
  input vid_pHSync;
  input PixelClk;
  input vid_pVSync;
  input vid_pVDE;
  input [7:0]vid_pData;

  wire \DataEncoders[2].DataEncoder/pVde_2 ;
  wire PixelClk;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [4:1]cnt_t_2;
  wire [4:1]cnt_t_3;
  wire \cnt_t_3[2]_i_2__0_n_0 ;
  wire \cnt_t_3[2]_i_3_n_0 ;
  wire \cnt_t_3[2]_i_4_n_0 ;
  wire \cnt_t_3[3]_i_2__0_n_0 ;
  wire \cnt_t_3[3]_i_3_n_0 ;
  wire \cnt_t_3[3]_i_4_n_0 ;
  wire \cnt_t_3[3]_i_5_n_0 ;
  wire \cnt_t_3[4]_i_10_n_0 ;
  wire \cnt_t_3[4]_i_11_n_0 ;
  wire \cnt_t_3[4]_i_12_n_0 ;
  wire \cnt_t_3[4]_i_13_n_0 ;
  wire \cnt_t_3[4]_i_14_n_0 ;
  wire \cnt_t_3[4]_i_15_n_0 ;
  wire \cnt_t_3[4]_i_3_n_0 ;
  wire \cnt_t_3[4]_i_4_n_0 ;
  wire \cnt_t_3[4]_i_5_n_0 ;
  wire \cnt_t_3[4]_i_6_n_0 ;
  wire \cnt_t_3[4]_i_7__1_n_0 ;
  wire \cnt_t_3[4]_i_8_n_0 ;
  wire \cnt_t_3[4]_i_9_n_0 ;
  wire [3:1]minusOp;
  wire [3:1]n0q_m_2;
  wire \n0q_m_2[2]_i_1__0_n_0 ;
  wire \n1d_1[0]_i_2_n_0 ;
  wire \n1d_1[1]_i_2_n_0 ;
  wire \n1d_1[2]_i_2_n_0 ;
  wire \n1d_1[3]_i_2_n_0 ;
  wire \n1d_1[3]_i_3_n_0 ;
  wire \n1d_1[3]_i_4_n_0 ;
  wire \n1d_1_reg_n_0_[0] ;
  wire \n1d_1_reg_n_0_[1] ;
  wire \n1d_1_reg_n_0_[2] ;
  wire \n1d_1_reg_n_0_[3] ;
  wire [3:1]n1q_m_1;
  wire \n1q_m_2[0]_i_1__0_n_0 ;
  wire \n1q_m_2[3]_i_2_n_0 ;
  wire \n1q_m_2[3]_i_3_n_0 ;
  wire \n1q_m_2[3]_i_4__0_n_0 ;
  wire \n1q_m_2[3]_i_5_n_0 ;
  wire \n1q_m_2[3]_i_6__0_n_0 ;
  wire \n1q_m_2_reg_n_0_[0] ;
  wire \n1q_m_2_reg_n_0_[1] ;
  wire \n1q_m_2_reg_n_0_[2] ;
  wire \n1q_m_2_reg_n_0_[3] ;
  wire pC0_1;
  wire pC0_2;
  wire pC1_1;
  wire pC1_2;
  wire \pDataOutRaw[0]_i_1__1_n_0 ;
  wire \pDataOutRaw[1]_i_1__1_n_0 ;
  wire \pDataOutRaw[3]_i_1__1_n_0 ;
  wire \pDataOutRaw[5]_i_1__1_n_0 ;
  wire \pDataOutRaw[7]_i_1__1_n_0 ;
  wire \pDataOutRaw[9]_i_1__1_n_0 ;
  wire \pDataOutRaw[9]_i_3_n_0 ;
  wire \pDataOut_1_reg_n_0_[0] ;
  wire pVde_1;
  wire p_0_in;
  wire p_0_in6_in;
  wire p_0_in7_in;
  wire p_0_in8_in;
  wire p_0_in9_in;
  wire p_1_in;
  wire p_1_in12_in;
  wire p_2_in;
  wire p_3_in;
  wire p_4_in5_in;
  wire p_5_in;
  wire p_6_in8_in;
  wire [8:8]q_m_2;
  wire \q_m_2[1]_i_1__0_n_0 ;
  wire \q_m_2[6]_i_1__0_n_0 ;
  wire \q_m_2[7]_i_2_n_0 ;
  wire \q_m_2[8]_i_1_n_0 ;
  wire \q_m_2_reg_n_0_[0] ;
  wire \q_m_2_reg_n_0_[1] ;
  wire \q_m_2_reg_n_0_[2] ;
  wire \q_m_2_reg_n_0_[3] ;
  wire \q_m_2_reg_n_0_[4] ;
  wire \q_m_2_reg_n_0_[5] ;
  wire \q_m_2_reg_n_0_[6] ;
  wire \q_m_2_reg_n_0_[7] ;
  wire [9:2]q_out_20_in;
  wire [3:0]sum_bits;
  wire [7:0]vid_pData;
  wire vid_pHSync;
  wire vid_pVDE;
  wire vid_pVSync;

  LUT6 #(
    .INIT(64'h6996699696699696)) 
    \cnt_t_3[1]_i_1 
       (.I0(\n1q_m_2_reg_n_0_[1] ),
        .I1(n0q_m_2[1]),
        .I2(cnt_t_3[1]),
        .I3(\cnt_t_3[4]_i_5_n_0 ),
        .I4(\cnt_t_3[2]_i_4_n_0 ),
        .I5(q_m_2),
        .O(cnt_t_2[1]));
  LUT6 #(
    .INIT(64'h56A66A6AA6A6656A)) 
    \cnt_t_3[2]_i_1 
       (.I0(\cnt_t_3[2]_i_2__0_n_0 ),
        .I1(\cnt_t_3[2]_i_3_n_0 ),
        .I2(cnt_t_3[1]),
        .I3(\cnt_t_3[2]_i_4_n_0 ),
        .I4(q_m_2),
        .I5(\cnt_t_3[4]_i_5_n_0 ),
        .O(cnt_t_2[2]));
  LUT5 #(
    .INIT(32'h96699696)) 
    \cnt_t_3[2]_i_2__0 
       (.I0(cnt_t_3[2]),
        .I1(\n1q_m_2_reg_n_0_[2] ),
        .I2(n0q_m_2[2]),
        .I3(n0q_m_2[1]),
        .I4(\n1q_m_2_reg_n_0_[1] ),
        .O(\cnt_t_3[2]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \cnt_t_3[2]_i_3 
       (.I0(\n1q_m_2_reg_n_0_[1] ),
        .I1(n0q_m_2[1]),
        .O(\cnt_t_3[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000FFFEFFFEFFFE)) 
    \cnt_t_3[2]_i_4 
       (.I0(cnt_t_3[3]),
        .I1(cnt_t_3[1]),
        .I2(cnt_t_3[2]),
        .I3(cnt_t_3[4]),
        .I4(\cnt_t_3[4]_i_15_n_0 ),
        .I5(\n1q_m_2_reg_n_0_[2] ),
        .O(\cnt_t_3[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h555556A6AAAA56A6)) 
    \cnt_t_3[3]_i_1 
       (.I0(\cnt_t_3[3]_i_2__0_n_0 ),
        .I1(\cnt_t_3[3]_i_3_n_0 ),
        .I2(\cnt_t_3[4]_i_5_n_0 ),
        .I3(\cnt_t_3[3]_i_4_n_0 ),
        .I4(\cnt_t_3[4]_i_7__1_n_0 ),
        .I5(\cnt_t_3[3]_i_5_n_0 ),
        .O(cnt_t_2[3]));
  LUT2 #(
    .INIT(4'h9)) 
    \cnt_t_3[3]_i_2__0 
       (.I0(cnt_t_3[3]),
        .I1(\cnt_t_3[4]_i_12_n_0 ),
        .O(\cnt_t_3[3]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE8E8EEE88888E8)) 
    \cnt_t_3[3]_i_3 
       (.I0(cnt_t_3[2]),
        .I1(\cnt_t_3[4]_i_10_n_0 ),
        .I2(cnt_t_3[1]),
        .I3(n0q_m_2[1]),
        .I4(\n1q_m_2_reg_n_0_[1] ),
        .I5(q_m_2),
        .O(\cnt_t_3[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h41D70000FFFF41D7)) 
    \cnt_t_3[3]_i_4 
       (.I0(cnt_t_3[1]),
        .I1(n0q_m_2[1]),
        .I2(\n1q_m_2_reg_n_0_[1] ),
        .I3(q_m_2),
        .I4(\cnt_t_3[4]_i_10_n_0 ),
        .I5(cnt_t_3[2]),
        .O(\cnt_t_3[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hC7DF10F710F7C7DF)) 
    \cnt_t_3[3]_i_5 
       (.I0(cnt_t_3[1]),
        .I1(n0q_m_2[1]),
        .I2(\n1q_m_2_reg_n_0_[1] ),
        .I3(cnt_t_3[2]),
        .I4(\n1q_m_2_reg_n_0_[2] ),
        .I5(n0q_m_2[2]),
        .O(\cnt_t_3[3]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \cnt_t_3[4]_i_1 
       (.I0(\DataEncoders[2].DataEncoder/pVde_2 ),
        .O(SR));
  LUT4 #(
    .INIT(16'hD22D)) 
    \cnt_t_3[4]_i_10 
       (.I0(\n1q_m_2_reg_n_0_[1] ),
        .I1(n0q_m_2[1]),
        .I2(n0q_m_2[2]),
        .I3(\n1q_m_2_reg_n_0_[2] ),
        .O(\cnt_t_3[4]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h147D)) 
    \cnt_t_3[4]_i_11 
       (.I0(cnt_t_3[1]),
        .I1(n0q_m_2[1]),
        .I2(\n1q_m_2_reg_n_0_[1] ),
        .I3(q_m_2),
        .O(\cnt_t_3[4]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h5D04A2FBA2FB5D04)) 
    \cnt_t_3[4]_i_12 
       (.I0(n0q_m_2[2]),
        .I1(\n1q_m_2_reg_n_0_[1] ),
        .I2(n0q_m_2[1]),
        .I3(\n1q_m_2_reg_n_0_[2] ),
        .I4(n0q_m_2[3]),
        .I5(\n1q_m_2_reg_n_0_[3] ),
        .O(\cnt_t_3[4]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \cnt_t_3[4]_i_13 
       (.I0(cnt_t_3[3]),
        .I1(cnt_t_3[1]),
        .I2(cnt_t_3[2]),
        .O(\cnt_t_3[4]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h41D7)) 
    \cnt_t_3[4]_i_14 
       (.I0(cnt_t_3[1]),
        .I1(n0q_m_2[1]),
        .I2(\n1q_m_2_reg_n_0_[1] ),
        .I3(q_m_2),
        .O(\cnt_t_3[4]_i_14_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \cnt_t_3[4]_i_15 
       (.I0(\n1q_m_2_reg_n_0_[3] ),
        .I1(\n1q_m_2_reg_n_0_[1] ),
        .I2(\n1q_m_2_reg_n_0_[0] ),
        .O(\cnt_t_3[4]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h555556A6AAAA56A6)) 
    \cnt_t_3[4]_i_2 
       (.I0(\cnt_t_3[4]_i_3_n_0 ),
        .I1(\cnt_t_3[4]_i_4_n_0 ),
        .I2(\cnt_t_3[4]_i_5_n_0 ),
        .I3(\cnt_t_3[4]_i_6_n_0 ),
        .I4(\cnt_t_3[4]_i_7__1_n_0 ),
        .I5(\cnt_t_3[4]_i_8_n_0 ),
        .O(cnt_t_2[4]));
  LUT4 #(
    .INIT(16'h9A59)) 
    \cnt_t_3[4]_i_3 
       (.I0(cnt_t_3[4]),
        .I1(\cnt_t_3[4]_i_9_n_0 ),
        .I2(n0q_m_2[3]),
        .I3(\n1q_m_2_reg_n_0_[3] ),
        .O(\cnt_t_3[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h8EFF008E)) 
    \cnt_t_3[4]_i_4 
       (.I0(cnt_t_3[2]),
        .I1(\cnt_t_3[4]_i_10_n_0 ),
        .I2(\cnt_t_3[4]_i_11_n_0 ),
        .I3(\cnt_t_3[4]_i_12_n_0 ),
        .I4(cnt_t_3[3]),
        .O(\cnt_t_3[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h000000FFAAA8AA00)) 
    \cnt_t_3[4]_i_5 
       (.I0(\cnt_t_3[4]_i_13_n_0 ),
        .I1(\n1q_m_2_reg_n_0_[0] ),
        .I2(\n1q_m_2_reg_n_0_[1] ),
        .I3(\n1q_m_2_reg_n_0_[3] ),
        .I4(\n1q_m_2_reg_n_0_[2] ),
        .I5(cnt_t_3[4]),
        .O(\cnt_t_3[4]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h71117771)) 
    \cnt_t_3[4]_i_6 
       (.I0(cnt_t_3[3]),
        .I1(\cnt_t_3[4]_i_12_n_0 ),
        .I2(\cnt_t_3[4]_i_14_n_0 ),
        .I3(\cnt_t_3[4]_i_10_n_0 ),
        .I4(cnt_t_3[2]),
        .O(\cnt_t_3[4]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h40404055)) 
    \cnt_t_3[4]_i_7__1 
       (.I0(q_m_2),
        .I1(\n1q_m_2_reg_n_0_[2] ),
        .I2(\cnt_t_3[4]_i_15_n_0 ),
        .I3(cnt_t_3[4]),
        .I4(\cnt_t_3[4]_i_13_n_0 ),
        .O(\cnt_t_3[4]_i_7__1_n_0 ));
  LUT6 #(
    .INIT(64'h00007F077F07FFFF)) 
    \cnt_t_3[4]_i_8 
       (.I0(cnt_t_3[1]),
        .I1(\cnt_t_3[2]_i_3_n_0 ),
        .I2(cnt_t_3[2]),
        .I3(\cnt_t_3[4]_i_10_n_0 ),
        .I4(cnt_t_3[3]),
        .I5(\cnt_t_3[4]_i_12_n_0 ),
        .O(\cnt_t_3[4]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h20BA)) 
    \cnt_t_3[4]_i_9 
       (.I0(\n1q_m_2_reg_n_0_[2] ),
        .I1(n0q_m_2[1]),
        .I2(\n1q_m_2_reg_n_0_[1] ),
        .I3(n0q_m_2[2]),
        .O(\cnt_t_3[4]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_t_3_reg[1] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(cnt_t_2[1]),
        .Q(cnt_t_3[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_t_3_reg[2] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(cnt_t_2[2]),
        .Q(cnt_t_3[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_t_3_reg[3] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(cnt_t_2[3]),
        .Q(cnt_t_3[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_t_3_reg[4] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(cnt_t_2[4]),
        .Q(cnt_t_3[4]),
        .R(SR));
  LUT6 #(
    .INIT(64'h6696696669669969)) 
    \n0q_m_2[1]_i_1 
       (.I0(\n1q_m_2[3]_i_2_n_0 ),
        .I1(\n1q_m_2[3]_i_3_n_0 ),
        .I2(\n1q_m_2[3]_i_4__0_n_0 ),
        .I3(\pDataOut_1_reg_n_0_[0] ),
        .I4(\n1q_m_2[3]_i_6__0_n_0 ),
        .I5(\n1q_m_2[3]_i_5_n_0 ),
        .O(minusOp[1]));
  LUT6 #(
    .INIT(64'hEF8EF7FF0800EF8E)) 
    \n0q_m_2[2]_i_1__0 
       (.I0(\n1q_m_2[3]_i_5_n_0 ),
        .I1(\n1q_m_2[3]_i_6__0_n_0 ),
        .I2(\pDataOut_1_reg_n_0_[0] ),
        .I3(\n1q_m_2[3]_i_4__0_n_0 ),
        .I4(\n1q_m_2[3]_i_3_n_0 ),
        .I5(\n1q_m_2[3]_i_2_n_0 ),
        .O(\n0q_m_2[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000400000000000)) 
    \n0q_m_2[3]_i_1 
       (.I0(\pDataOut_1_reg_n_0_[0] ),
        .I1(\n1q_m_2[3]_i_6__0_n_0 ),
        .I2(\n1q_m_2[3]_i_5_n_0 ),
        .I3(\n1q_m_2[3]_i_4__0_n_0 ),
        .I4(\n1q_m_2[3]_i_3_n_0 ),
        .I5(\n1q_m_2[3]_i_2_n_0 ),
        .O(minusOp[3]));
  FDRE #(
    .INIT(1'b0)) 
    \n0q_m_2_reg[1] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(minusOp[1]),
        .Q(n0q_m_2[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n0q_m_2_reg[2] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n0q_m_2[2]_i_1__0_n_0 ),
        .Q(n0q_m_2[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n0q_m_2_reg[3] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(minusOp[3]),
        .Q(n0q_m_2[3]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \n1d_1[0]_i_1 
       (.I0(vid_pData[7]),
        .I1(vid_pData[0]),
        .I2(\n1d_1[0]_i_2_n_0 ),
        .I3(vid_pData[5]),
        .I4(vid_pData[6]),
        .I5(vid_pData[4]),
        .O(sum_bits[0]));
  LUT3 #(
    .INIT(8'h96)) 
    \n1d_1[0]_i_2 
       (.I0(vid_pData[1]),
        .I1(vid_pData[3]),
        .I2(vid_pData[2]),
        .O(\n1d_1[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \n1d_1[1]_i_1 
       (.I0(\n1d_1[3]_i_2_n_0 ),
        .I1(\n1d_1[1]_i_2_n_0 ),
        .I2(\n1d_1[3]_i_3_n_0 ),
        .O(sum_bits[1]));
  LUT6 #(
    .INIT(64'h171717E817E8E8E8)) 
    \n1d_1[1]_i_2 
       (.I0(vid_pData[4]),
        .I1(vid_pData[5]),
        .I2(vid_pData[6]),
        .I3(vid_pData[1]),
        .I4(vid_pData[2]),
        .I5(vid_pData[3]),
        .O(\n1d_1[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7E7E7EE87EE8E8E8)) 
    \n1d_1[2]_i_1 
       (.I0(\n1d_1[3]_i_2_n_0 ),
        .I1(\n1d_1[3]_i_3_n_0 ),
        .I2(\n1d_1[2]_i_2_n_0 ),
        .I3(vid_pData[3]),
        .I4(vid_pData[2]),
        .I5(vid_pData[1]),
        .O(sum_bits[2]));
  LUT3 #(
    .INIT(8'hE8)) 
    \n1d_1[2]_i_2 
       (.I0(vid_pData[6]),
        .I1(vid_pData[5]),
        .I2(vid_pData[4]),
        .O(\n1d_1[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8880800000000000)) 
    \n1d_1[3]_i_1 
       (.I0(\n1d_1[3]_i_2_n_0 ),
        .I1(\n1d_1[3]_i_3_n_0 ),
        .I2(vid_pData[4]),
        .I3(vid_pData[5]),
        .I4(vid_pData[6]),
        .I5(\n1d_1[3]_i_4_n_0 ),
        .O(sum_bits[3]));
  LUT6 #(
    .INIT(64'h9600009600969600)) 
    \n1d_1[3]_i_2 
       (.I0(vid_pData[5]),
        .I1(vid_pData[6]),
        .I2(vid_pData[4]),
        .I3(vid_pData[7]),
        .I4(vid_pData[0]),
        .I5(\n1d_1[0]_i_2_n_0 ),
        .O(\n1d_1[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hE88E8EE8)) 
    \n1d_1[3]_i_3 
       (.I0(vid_pData[0]),
        .I1(vid_pData[7]),
        .I2(vid_pData[2]),
        .I3(vid_pData[3]),
        .I4(vid_pData[1]),
        .O(\n1d_1[3]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hE8)) 
    \n1d_1[3]_i_4 
       (.I0(vid_pData[3]),
        .I1(vid_pData[2]),
        .I2(vid_pData[1]),
        .O(\n1d_1[3]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \n1d_1_reg[0] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(sum_bits[0]),
        .Q(\n1d_1_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n1d_1_reg[1] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(sum_bits[1]),
        .Q(\n1d_1_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n1d_1_reg[2] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(sum_bits[2]),
        .Q(\n1d_1_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n1d_1_reg[3] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(sum_bits[3]),
        .Q(\n1d_1_reg_n_0_[3] ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \n1q_m_2[0]_i_1__0 
       (.I0(\n1q_m_2[3]_i_5_n_0 ),
        .I1(p_0_in),
        .I2(p_2_in),
        .I3(\n1q_m_2[3]_i_4__0_n_0 ),
        .O(\n1q_m_2[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h96C33C963C96693C)) 
    \n1q_m_2[1]_i_1 
       (.I0(\n1q_m_2[3]_i_4__0_n_0 ),
        .I1(\n1q_m_2[3]_i_3_n_0 ),
        .I2(\n1q_m_2[3]_i_2_n_0 ),
        .I3(\pDataOut_1_reg_n_0_[0] ),
        .I4(\n1q_m_2[3]_i_5_n_0 ),
        .I5(\n1q_m_2[3]_i_6__0_n_0 ),
        .O(n1q_m_1[1]));
  LUT6 #(
    .INIT(64'h2BBFFFFD00022BBF)) 
    \n1q_m_2[2]_i_1 
       (.I0(\pDataOut_1_reg_n_0_[0] ),
        .I1(\n1q_m_2[3]_i_5_n_0 ),
        .I2(\n1q_m_2[3]_i_6__0_n_0 ),
        .I3(\n1q_m_2[3]_i_4__0_n_0 ),
        .I4(\n1q_m_2[3]_i_2_n_0 ),
        .I5(\n1q_m_2[3]_i_3_n_0 ),
        .O(n1q_m_1[2]));
  LUT6 #(
    .INIT(64'h0000000400000000)) 
    \n1q_m_2[3]_i_1 
       (.I0(\n1q_m_2[3]_i_2_n_0 ),
        .I1(\n1q_m_2[3]_i_3_n_0 ),
        .I2(\n1q_m_2[3]_i_4__0_n_0 ),
        .I3(\n1q_m_2[3]_i_5_n_0 ),
        .I4(\n1q_m_2[3]_i_6__0_n_0 ),
        .I5(\pDataOut_1_reg_n_0_[0] ),
        .O(n1q_m_1[3]));
  LUT5 #(
    .INIT(32'h96C33C96)) 
    \n1q_m_2[3]_i_2 
       (.I0(p_2_in),
        .I1(\pDataOut_1_reg_n_0_[0] ),
        .I2(p_0_in),
        .I3(p_1_in),
        .I4(\q_m_2[8]_i_1_n_0 ),
        .O(\n1q_m_2[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h3693)) 
    \n1q_m_2[3]_i_3 
       (.I0(p_4_in5_in),
        .I1(\q_m_2[7]_i_2_n_0 ),
        .I2(\q_m_2[8]_i_1_n_0 ),
        .I3(p_5_in),
        .O(\n1q_m_2[3]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h69)) 
    \n1q_m_2[3]_i_4__0 
       (.I0(\q_m_2[7]_i_2_n_0 ),
        .I1(\q_m_2[8]_i_1_n_0 ),
        .I2(p_5_in),
        .O(\n1q_m_2[3]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'h69969669)) 
    \n1q_m_2[3]_i_5 
       (.I0(p_4_in5_in),
        .I1(\q_m_2[7]_i_2_n_0 ),
        .I2(\q_m_2[8]_i_1_n_0 ),
        .I3(p_6_in8_in),
        .I4(p_5_in),
        .O(\n1q_m_2[3]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h69)) 
    \n1q_m_2[3]_i_6__0 
       (.I0(p_2_in),
        .I1(p_0_in),
        .I2(\pDataOut_1_reg_n_0_[0] ),
        .O(\n1q_m_2[3]_i_6__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \n1q_m_2_reg[0] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n1q_m_2[0]_i_1__0_n_0 ),
        .Q(\n1q_m_2_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n1q_m_2_reg[1] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(n1q_m_1[1]),
        .Q(\n1q_m_2_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n1q_m_2_reg[2] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(n1q_m_1[2]),
        .Q(\n1q_m_2_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n1q_m_2_reg[3] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(n1q_m_1[3]),
        .Q(\n1q_m_2_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    pC0_1_reg
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pHSync),
        .Q(pC0_1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    pC0_2_reg
       (.C(PixelClk),
        .CE(1'b1),
        .D(pC0_1),
        .Q(pC0_2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    pC1_1_reg
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pVSync),
        .Q(pC1_1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    pC1_2_reg
       (.C(PixelClk),
        .CE(1'b1),
        .D(pC1_1),
        .Q(pC1_2),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hF00FBBBB)) 
    \pDataOutRaw[0]_i_1__1 
       (.I0(pC0_2),
        .I1(pC1_2),
        .I2(\pDataOutRaw[9]_i_3_n_0 ),
        .I3(\q_m_2_reg_n_0_[0] ),
        .I4(\DataEncoders[2].DataEncoder/pVde_2 ),
        .O(\pDataOutRaw[0]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hF00FBBBB)) 
    \pDataOutRaw[1]_i_1__1 
       (.I0(pC0_2),
        .I1(pC1_2),
        .I2(\pDataOutRaw[9]_i_3_n_0 ),
        .I3(\q_m_2_reg_n_0_[1] ),
        .I4(\DataEncoders[2].DataEncoder/pVde_2 ),
        .O(\pDataOutRaw[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'hF00F4444)) 
    \pDataOutRaw[2]_i_1 
       (.I0(pC0_2),
        .I1(pC1_2),
        .I2(\pDataOutRaw[9]_i_3_n_0 ),
        .I3(\q_m_2_reg_n_0_[2] ),
        .I4(\DataEncoders[2].DataEncoder/pVde_2 ),
        .O(q_out_20_in[2]));
  LUT5 #(
    .INIT(32'hF00FBBBB)) 
    \pDataOutRaw[3]_i_1__1 
       (.I0(pC0_2),
        .I1(pC1_2),
        .I2(\pDataOutRaw[9]_i_3_n_0 ),
        .I3(\q_m_2_reg_n_0_[3] ),
        .I4(\DataEncoders[2].DataEncoder/pVde_2 ),
        .O(\pDataOutRaw[3]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hF00F4444)) 
    \pDataOutRaw[4]_i_1 
       (.I0(pC0_2),
        .I1(pC1_2),
        .I2(\pDataOutRaw[9]_i_3_n_0 ),
        .I3(\q_m_2_reg_n_0_[4] ),
        .I4(\DataEncoders[2].DataEncoder/pVde_2 ),
        .O(q_out_20_in[4]));
  LUT5 #(
    .INIT(32'hF00FBBBB)) 
    \pDataOutRaw[5]_i_1__1 
       (.I0(pC0_2),
        .I1(pC1_2),
        .I2(\pDataOutRaw[9]_i_3_n_0 ),
        .I3(\q_m_2_reg_n_0_[5] ),
        .I4(\DataEncoders[2].DataEncoder/pVde_2 ),
        .O(\pDataOutRaw[5]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'hF00F4444)) 
    \pDataOutRaw[6]_i_1 
       (.I0(pC0_2),
        .I1(pC1_2),
        .I2(\pDataOutRaw[9]_i_3_n_0 ),
        .I3(\q_m_2_reg_n_0_[6] ),
        .I4(\DataEncoders[2].DataEncoder/pVde_2 ),
        .O(q_out_20_in[6]));
  LUT5 #(
    .INIT(32'hF00FBBBB)) 
    \pDataOutRaw[7]_i_1__1 
       (.I0(pC0_2),
        .I1(pC1_2),
        .I2(\pDataOutRaw[9]_i_3_n_0 ),
        .I3(\q_m_2_reg_n_0_[7] ),
        .I4(\DataEncoders[2].DataEncoder/pVde_2 ),
        .O(\pDataOutRaw[7]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hF404)) 
    \pDataOutRaw[8]_i_1 
       (.I0(pC0_2),
        .I1(pC1_2),
        .I2(\DataEncoders[2].DataEncoder/pVde_2 ),
        .I3(q_m_2),
        .O(q_out_20_in[8]));
  LUT3 #(
    .INIT(8'h01)) 
    \pDataOutRaw[9]_i_1__1 
       (.I0(pC1_2),
        .I1(\DataEncoders[2].DataEncoder/pVde_2 ),
        .I2(pC0_2),
        .O(\pDataOutRaw[9]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT4 #(
    .INIT(16'h7447)) 
    \pDataOutRaw[9]_i_2 
       (.I0(\pDataOutRaw[9]_i_3_n_0 ),
        .I1(\DataEncoders[2].DataEncoder/pVde_2 ),
        .I2(pC0_2),
        .I3(pC1_2),
        .O(q_out_20_in[9]));
  LUT6 #(
    .INIT(64'hFFF3AFA700F0ACA4)) 
    \pDataOutRaw[9]_i_3 
       (.I0(\n1q_m_2_reg_n_0_[3] ),
        .I1(\cnt_t_3[4]_i_13_n_0 ),
        .I2(cnt_t_3[4]),
        .I3(\cnt_t_3[4]_i_15_n_0 ),
        .I4(\n1q_m_2_reg_n_0_[2] ),
        .I5(q_m_2),
        .O(\pDataOutRaw[9]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOutRaw_reg[0] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOutRaw[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(\pDataOutRaw[9]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOutRaw_reg[1] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOutRaw[1]_i_1__1_n_0 ),
        .Q(Q[1]),
        .R(\pDataOutRaw[9]_i_1__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \pDataOutRaw_reg[2] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(q_out_20_in[2]),
        .Q(Q[2]),
        .S(\pDataOutRaw[9]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOutRaw_reg[3] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOutRaw[3]_i_1__1_n_0 ),
        .Q(Q[3]),
        .R(\pDataOutRaw[9]_i_1__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \pDataOutRaw_reg[4] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(q_out_20_in[4]),
        .Q(Q[4]),
        .S(\pDataOutRaw[9]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOutRaw_reg[5] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOutRaw[5]_i_1__1_n_0 ),
        .Q(Q[5]),
        .R(\pDataOutRaw[9]_i_1__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \pDataOutRaw_reg[6] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(q_out_20_in[6]),
        .Q(Q[6]),
        .S(\pDataOutRaw[9]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOutRaw_reg[7] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOutRaw[7]_i_1__1_n_0 ),
        .Q(Q[7]),
        .R(\pDataOutRaw[9]_i_1__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \pDataOutRaw_reg[8] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(q_out_20_in[8]),
        .Q(Q[8]),
        .S(\pDataOutRaw[9]_i_1__1_n_0 ));
  FDSE #(
    .INIT(1'b1)) 
    \pDataOutRaw_reg[9] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(q_out_20_in[9]),
        .Q(Q[9]),
        .S(\pDataOutRaw[9]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[0] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[0]),
        .Q(\pDataOut_1_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[1] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[1]),
        .Q(p_0_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[2] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[2]),
        .Q(p_1_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[3] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[3]),
        .Q(p_2_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[4] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[4]),
        .Q(p_3_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[5] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[5]),
        .Q(p_4_in5_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[6] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[6]),
        .Q(p_5_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[7] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[7]),
        .Q(p_6_in8_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    pVde_1_reg
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pVDE),
        .Q(pVde_1),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    pVde_2_reg
       (.C(PixelClk),
        .CE(1'b1),
        .D(pVde_1),
        .Q(\DataEncoders[2].DataEncoder/pVde_2 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAA55AA5599669566)) 
    \q_m_2[1]_i_1__0 
       (.I0(p_0_in),
        .I1(\n1d_1_reg_n_0_[2] ),
        .I2(\n1d_1_reg_n_0_[0] ),
        .I3(\pDataOut_1_reg_n_0_[0] ),
        .I4(\n1d_1_reg_n_0_[1] ),
        .I5(\n1d_1_reg_n_0_[3] ),
        .O(\q_m_2[1]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \q_m_2[2]_i_1 
       (.I0(\pDataOut_1_reg_n_0_[0] ),
        .I1(p_0_in),
        .I2(p_1_in),
        .O(p_0_in9_in));
  LUT5 #(
    .INIT(32'h69969669)) 
    \q_m_2[3]_i_1 
       (.I0(\q_m_2[8]_i_1_n_0 ),
        .I1(p_1_in),
        .I2(p_0_in),
        .I3(\pDataOut_1_reg_n_0_[0] ),
        .I4(p_2_in),
        .O(p_0_in8_in));
  LUT5 #(
    .INIT(32'h96696996)) 
    \q_m_2[4]_i_1 
       (.I0(p_2_in),
        .I1(\pDataOut_1_reg_n_0_[0] ),
        .I2(p_0_in),
        .I3(p_1_in),
        .I4(p_3_in),
        .O(p_0_in7_in));
  LUT3 #(
    .INIT(8'h96)) 
    \q_m_2[5]_i_1 
       (.I0(\q_m_2[8]_i_1_n_0 ),
        .I1(\q_m_2[7]_i_2_n_0 ),
        .I2(p_4_in5_in),
        .O(p_0_in6_in));
  LUT3 #(
    .INIT(8'h69)) 
    \q_m_2[6]_i_1__0 
       (.I0(p_5_in),
        .I1(\q_m_2[7]_i_2_n_0 ),
        .I2(p_4_in5_in),
        .O(\q_m_2[6]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \q_m_2[7]_i_1__0 
       (.I0(\q_m_2[8]_i_1_n_0 ),
        .I1(\q_m_2[7]_i_2_n_0 ),
        .I2(p_4_in5_in),
        .I3(p_6_in8_in),
        .I4(p_5_in),
        .O(p_1_in12_in));
  LUT5 #(
    .INIT(32'h69969669)) 
    \q_m_2[7]_i_2 
       (.I0(p_3_in),
        .I1(p_1_in),
        .I2(p_0_in),
        .I3(\pDataOut_1_reg_n_0_[0] ),
        .I4(p_2_in),
        .O(\q_m_2[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00105555)) 
    \q_m_2[8]_i_1 
       (.I0(\n1d_1_reg_n_0_[3] ),
        .I1(\n1d_1_reg_n_0_[1] ),
        .I2(\pDataOut_1_reg_n_0_[0] ),
        .I3(\n1d_1_reg_n_0_[0] ),
        .I4(\n1d_1_reg_n_0_[2] ),
        .O(\q_m_2[8]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[0] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOut_1_reg_n_0_[0] ),
        .Q(\q_m_2_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[1] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\q_m_2[1]_i_1__0_n_0 ),
        .Q(\q_m_2_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[2] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(p_0_in9_in),
        .Q(\q_m_2_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[3] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(p_0_in8_in),
        .Q(\q_m_2_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[4] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(p_0_in7_in),
        .Q(\q_m_2_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[5] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(p_0_in6_in),
        .Q(\q_m_2_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[6] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\q_m_2[6]_i_1__0_n_0 ),
        .Q(\q_m_2_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[7] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(p_1_in12_in),
        .Q(\q_m_2_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[8] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\q_m_2[8]_i_1_n_0 ),
        .Q(q_m_2),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "TMDS_Encoder" *) 
module system_rgb2dvi_0_1__TMDS_Encoder_1
   (Q,
    PixelClk,
    vid_pData,
    SR);
  output [9:0]Q;
  input PixelClk;
  input [7:0]vid_pData;
  input [0:0]SR;

  wire PixelClk;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [4:1]cnt_t_2;
  wire \cnt_t_3[2]_i_2__1_n_0 ;
  wire \cnt_t_3[2]_i_3__0_n_0 ;
  wire \cnt_t_3[2]_i_4__0_n_0 ;
  wire \cnt_t_3[3]_i_2__1_n_0 ;
  wire \cnt_t_3[3]_i_3__0_n_0 ;
  wire \cnt_t_3[3]_i_4__0_n_0 ;
  wire \cnt_t_3[3]_i_5__0_n_0 ;
  wire \cnt_t_3[4]_i_10__0_n_0 ;
  wire \cnt_t_3[4]_i_11__0_n_0 ;
  wire \cnt_t_3[4]_i_12__0_n_0 ;
  wire \cnt_t_3[4]_i_13__0_n_0 ;
  wire \cnt_t_3[4]_i_14__1_n_0 ;
  wire \cnt_t_3[4]_i_2__0_n_0 ;
  wire \cnt_t_3[4]_i_3__0_n_0 ;
  wire \cnt_t_3[4]_i_4__0_n_0 ;
  wire \cnt_t_3[4]_i_5__0_n_0 ;
  wire \cnt_t_3[4]_i_6__1_n_0 ;
  wire \cnt_t_3[4]_i_7_n_0 ;
  wire \cnt_t_3[4]_i_8__0_n_0 ;
  wire \cnt_t_3[4]_i_9__0_n_0 ;
  wire \cnt_t_3_reg_n_0_[1] ;
  wire \cnt_t_3_reg_n_0_[2] ;
  wire \cnt_t_3_reg_n_0_[3] ;
  wire \cnt_t_3_reg_n_0_[4] ;
  wire \n0q_m_2[1]_i_1__0_n_0 ;
  wire \n0q_m_2[2]_i_1__1_n_0 ;
  wire \n0q_m_2[3]_i_1__0_n_0 ;
  wire \n0q_m_2_reg_n_0_[1] ;
  wire \n0q_m_2_reg_n_0_[2] ;
  wire \n0q_m_2_reg_n_0_[3] ;
  wire \n1d_1[0]_i_1_n_0 ;
  wire \n1d_1[0]_i_2_n_0 ;
  wire \n1d_1[1]_i_1_n_0 ;
  wire \n1d_1[1]_i_2_n_0 ;
  wire \n1d_1[2]_i_1_n_0 ;
  wire \n1d_1[2]_i_2_n_0 ;
  wire \n1d_1[3]_i_1_n_0 ;
  wire \n1d_1[3]_i_2_n_0 ;
  wire \n1d_1[3]_i_3_n_0 ;
  wire \n1d_1[3]_i_4_n_0 ;
  wire \n1d_1_reg_n_0_[0] ;
  wire \n1d_1_reg_n_0_[1] ;
  wire \n1d_1_reg_n_0_[2] ;
  wire \n1d_1_reg_n_0_[3] ;
  wire \n1q_m_2[0]_i_1__1_n_0 ;
  wire \n1q_m_2[1]_i_1__0_n_0 ;
  wire \n1q_m_2[2]_i_1__0_n_0 ;
  wire \n1q_m_2[3]_i_1__0_n_0 ;
  wire \n1q_m_2[3]_i_2__0_n_0 ;
  wire \n1q_m_2[3]_i_3__0_n_0 ;
  wire \n1q_m_2[3]_i_4__1_n_0 ;
  wire \n1q_m_2[3]_i_5__0_n_0 ;
  wire \n1q_m_2[3]_i_6__1_n_0 ;
  wire \n1q_m_2_reg_n_0_[0] ;
  wire \n1q_m_2_reg_n_0_[1] ;
  wire \n1q_m_2_reg_n_0_[2] ;
  wire \n1q_m_2_reg_n_0_[3] ;
  wire \pDataOutRaw[0]_i_1_n_0 ;
  wire \pDataOutRaw[1]_i_1_n_0 ;
  wire \pDataOutRaw[2]_i_1__0_n_0 ;
  wire \pDataOutRaw[3]_i_1_n_0 ;
  wire \pDataOutRaw[4]_i_1__0_n_0 ;
  wire \pDataOutRaw[5]_i_1_n_0 ;
  wire \pDataOutRaw[6]_i_1__0_n_0 ;
  wire \pDataOutRaw[7]_i_1_n_0 ;
  wire \pDataOutRaw[9]_i_1_n_0 ;
  wire \pDataOut_1_reg_n_0_[0] ;
  wire p_0_in;
  wire p_1_in;
  wire p_2_in;
  wire p_3_in;
  wire p_4_in5_in;
  wire p_5_in;
  wire p_6_in8_in;
  wire [8:8]q_m_2;
  wire \q_m_2[1]_i_1__1_n_0 ;
  wire \q_m_2[2]_i_1__0_n_0 ;
  wire \q_m_2[3]_i_1__0_n_0 ;
  wire \q_m_2[4]_i_1__0_n_0 ;
  wire \q_m_2[5]_i_1__0_n_0 ;
  wire \q_m_2[6]_i_1__1_n_0 ;
  wire \q_m_2[7]_i_1__1_n_0 ;
  wire \q_m_2[7]_i_2__0_n_0 ;
  wire \q_m_2[8]_i_1__0_n_0 ;
  wire \q_m_2_reg_n_0_[0] ;
  wire \q_m_2_reg_n_0_[1] ;
  wire \q_m_2_reg_n_0_[2] ;
  wire \q_m_2_reg_n_0_[3] ;
  wire \q_m_2_reg_n_0_[4] ;
  wire \q_m_2_reg_n_0_[5] ;
  wire \q_m_2_reg_n_0_[6] ;
  wire \q_m_2_reg_n_0_[7] ;
  wire [7:0]vid_pData;

  LUT6 #(
    .INIT(64'h9669966969969696)) 
    \cnt_t_3[1]_i_1__0 
       (.I0(\n1q_m_2_reg_n_0_[1] ),
        .I1(\n0q_m_2_reg_n_0_[1] ),
        .I2(\cnt_t_3_reg_n_0_[1] ),
        .I3(\cnt_t_3[4]_i_4__0_n_0 ),
        .I4(\cnt_t_3[2]_i_4__0_n_0 ),
        .I5(q_m_2),
        .O(cnt_t_2[1]));
  LUT6 #(
    .INIT(64'h95569AA6A55AAAAA)) 
    \cnt_t_3[2]_i_1__0 
       (.I0(\cnt_t_3[2]_i_2__1_n_0 ),
        .I1(\cnt_t_3[4]_i_4__0_n_0 ),
        .I2(q_m_2),
        .I3(\cnt_t_3_reg_n_0_[1] ),
        .I4(\cnt_t_3[2]_i_3__0_n_0 ),
        .I5(\cnt_t_3[2]_i_4__0_n_0 ),
        .O(cnt_t_2[2]));
  LUT5 #(
    .INIT(32'h96699696)) 
    \cnt_t_3[2]_i_2__1 
       (.I0(\cnt_t_3_reg_n_0_[2] ),
        .I1(\n1q_m_2_reg_n_0_[2] ),
        .I2(\n0q_m_2_reg_n_0_[2] ),
        .I3(\n0q_m_2_reg_n_0_[1] ),
        .I4(\n1q_m_2_reg_n_0_[1] ),
        .O(\cnt_t_3[2]_i_2__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \cnt_t_3[2]_i_3__0 
       (.I0(\n1q_m_2_reg_n_0_[1] ),
        .I1(\n0q_m_2_reg_n_0_[1] ),
        .O(\cnt_t_3[2]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000FFFEFFFEFFFE)) 
    \cnt_t_3[2]_i_4__0 
       (.I0(\cnt_t_3_reg_n_0_[3] ),
        .I1(\cnt_t_3_reg_n_0_[1] ),
        .I2(\cnt_t_3_reg_n_0_[2] ),
        .I3(\cnt_t_3_reg_n_0_[4] ),
        .I4(\cnt_t_3[4]_i_14__1_n_0 ),
        .I5(\n1q_m_2_reg_n_0_[2] ),
        .O(\cnt_t_3[2]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h555556A6AAAA56A6)) 
    \cnt_t_3[3]_i_1__0 
       (.I0(\cnt_t_3[3]_i_2__1_n_0 ),
        .I1(\cnt_t_3[3]_i_3__0_n_0 ),
        .I2(\cnt_t_3[4]_i_4__0_n_0 ),
        .I3(\cnt_t_3[3]_i_4__0_n_0 ),
        .I4(\cnt_t_3[4]_i_6__1_n_0 ),
        .I5(\cnt_t_3[3]_i_5__0_n_0 ),
        .O(cnt_t_2[3]));
  LUT2 #(
    .INIT(4'h9)) 
    \cnt_t_3[3]_i_2__1 
       (.I0(\cnt_t_3_reg_n_0_[3] ),
        .I1(\cnt_t_3[4]_i_9__0_n_0 ),
        .O(\cnt_t_3[3]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h099FFFFF0000099F)) 
    \cnt_t_3[3]_i_3__0 
       (.I0(\n0q_m_2_reg_n_0_[1] ),
        .I1(\n1q_m_2_reg_n_0_[1] ),
        .I2(\cnt_t_3_reg_n_0_[1] ),
        .I3(q_m_2),
        .I4(\cnt_t_3_reg_n_0_[2] ),
        .I5(\cnt_t_3[4]_i_11__0_n_0 ),
        .O(\cnt_t_3[3]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hEEE8E888E888EEE8)) 
    \cnt_t_3[3]_i_4__0 
       (.I0(\cnt_t_3_reg_n_0_[2] ),
        .I1(\cnt_t_3[4]_i_11__0_n_0 ),
        .I2(q_m_2),
        .I3(\cnt_t_3_reg_n_0_[1] ),
        .I4(\n1q_m_2_reg_n_0_[1] ),
        .I5(\n0q_m_2_reg_n_0_[1] ),
        .O(\cnt_t_3[3]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h9BBF04DF04DF9BBF)) 
    \cnt_t_3[3]_i_5__0 
       (.I0(\n0q_m_2_reg_n_0_[1] ),
        .I1(\n1q_m_2_reg_n_0_[1] ),
        .I2(\cnt_t_3_reg_n_0_[1] ),
        .I3(\cnt_t_3_reg_n_0_[2] ),
        .I4(\n1q_m_2_reg_n_0_[2] ),
        .I5(\n0q_m_2_reg_n_0_[2] ),
        .O(\cnt_t_3[3]_i_5__0_n_0 ));
  LUT4 #(
    .INIT(16'h099F)) 
    \cnt_t_3[4]_i_10__0 
       (.I0(\n0q_m_2_reg_n_0_[1] ),
        .I1(\n1q_m_2_reg_n_0_[1] ),
        .I2(\cnt_t_3_reg_n_0_[1] ),
        .I3(q_m_2),
        .O(\cnt_t_3[4]_i_10__0_n_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \cnt_t_3[4]_i_11__0 
       (.I0(\n1q_m_2_reg_n_0_[1] ),
        .I1(\n0q_m_2_reg_n_0_[1] ),
        .I2(\n0q_m_2_reg_n_0_[2] ),
        .I3(\n1q_m_2_reg_n_0_[2] ),
        .O(\cnt_t_3[4]_i_11__0_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \cnt_t_3[4]_i_12__0 
       (.I0(\cnt_t_3_reg_n_0_[3] ),
        .I1(\cnt_t_3_reg_n_0_[1] ),
        .I2(\cnt_t_3_reg_n_0_[2] ),
        .O(\cnt_t_3[4]_i_12__0_n_0 ));
  LUT4 #(
    .INIT(16'hE88E)) 
    \cnt_t_3[4]_i_13__0 
       (.I0(q_m_2),
        .I1(\cnt_t_3_reg_n_0_[1] ),
        .I2(\n1q_m_2_reg_n_0_[1] ),
        .I3(\n0q_m_2_reg_n_0_[1] ),
        .O(\cnt_t_3[4]_i_13__0_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \cnt_t_3[4]_i_14__1 
       (.I0(\n1q_m_2_reg_n_0_[3] ),
        .I1(\n1q_m_2_reg_n_0_[1] ),
        .I2(\n1q_m_2_reg_n_0_[0] ),
        .O(\cnt_t_3[4]_i_14__1_n_0 ));
  LUT6 #(
    .INIT(64'h555556A6AAAA56A6)) 
    \cnt_t_3[4]_i_1__0 
       (.I0(\cnt_t_3[4]_i_2__0_n_0 ),
        .I1(\cnt_t_3[4]_i_3__0_n_0 ),
        .I2(\cnt_t_3[4]_i_4__0_n_0 ),
        .I3(\cnt_t_3[4]_i_5__0_n_0 ),
        .I4(\cnt_t_3[4]_i_6__1_n_0 ),
        .I5(\cnt_t_3[4]_i_7_n_0 ),
        .O(cnt_t_2[4]));
  LUT4 #(
    .INIT(16'h9A59)) 
    \cnt_t_3[4]_i_2__0 
       (.I0(\cnt_t_3_reg_n_0_[4] ),
        .I1(\cnt_t_3[4]_i_8__0_n_0 ),
        .I2(\n0q_m_2_reg_n_0_[3] ),
        .I3(\n1q_m_2_reg_n_0_[3] ),
        .O(\cnt_t_3[4]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h71771171)) 
    \cnt_t_3[4]_i_3__0 
       (.I0(\cnt_t_3_reg_n_0_[3] ),
        .I1(\cnt_t_3[4]_i_9__0_n_0 ),
        .I2(\cnt_t_3[4]_i_10__0_n_0 ),
        .I3(\cnt_t_3_reg_n_0_[2] ),
        .I4(\cnt_t_3[4]_i_11__0_n_0 ),
        .O(\cnt_t_3[4]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF00555755FF)) 
    \cnt_t_3[4]_i_4__0 
       (.I0(\cnt_t_3[4]_i_12__0_n_0 ),
        .I1(\n1q_m_2_reg_n_0_[0] ),
        .I2(\n1q_m_2_reg_n_0_[1] ),
        .I3(\n1q_m_2_reg_n_0_[3] ),
        .I4(\n1q_m_2_reg_n_0_[2] ),
        .I5(\cnt_t_3_reg_n_0_[4] ),
        .O(\cnt_t_3[4]_i_4__0_n_0 ));
  LUT5 #(
    .INIT(32'hE8FF00E8)) 
    \cnt_t_3[4]_i_5__0 
       (.I0(\cnt_t_3_reg_n_0_[2] ),
        .I1(\cnt_t_3[4]_i_11__0_n_0 ),
        .I2(\cnt_t_3[4]_i_13__0_n_0 ),
        .I3(\cnt_t_3[4]_i_9__0_n_0 ),
        .I4(\cnt_t_3_reg_n_0_[3] ),
        .O(\cnt_t_3[4]_i_5__0_n_0 ));
  LUT5 #(
    .INIT(32'h40404055)) 
    \cnt_t_3[4]_i_6__1 
       (.I0(q_m_2),
        .I1(\n1q_m_2_reg_n_0_[2] ),
        .I2(\cnt_t_3[4]_i_14__1_n_0 ),
        .I3(\cnt_t_3_reg_n_0_[4] ),
        .I4(\cnt_t_3[4]_i_12__0_n_0 ),
        .O(\cnt_t_3[4]_i_6__1_n_0 ));
  LUT6 #(
    .INIT(64'h00007F077F07FFFF)) 
    \cnt_t_3[4]_i_7 
       (.I0(\cnt_t_3[2]_i_3__0_n_0 ),
        .I1(\cnt_t_3_reg_n_0_[1] ),
        .I2(\cnt_t_3_reg_n_0_[2] ),
        .I3(\cnt_t_3[4]_i_11__0_n_0 ),
        .I4(\cnt_t_3_reg_n_0_[3] ),
        .I5(\cnt_t_3[4]_i_9__0_n_0 ),
        .O(\cnt_t_3[4]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h20BA)) 
    \cnt_t_3[4]_i_8__0 
       (.I0(\n1q_m_2_reg_n_0_[2] ),
        .I1(\n0q_m_2_reg_n_0_[1] ),
        .I2(\n1q_m_2_reg_n_0_[1] ),
        .I3(\n0q_m_2_reg_n_0_[2] ),
        .O(\cnt_t_3[4]_i_8__0_n_0 ));
  LUT6 #(
    .INIT(64'h5D04A2FBA2FB5D04)) 
    \cnt_t_3[4]_i_9__0 
       (.I0(\n0q_m_2_reg_n_0_[2] ),
        .I1(\n1q_m_2_reg_n_0_[1] ),
        .I2(\n0q_m_2_reg_n_0_[1] ),
        .I3(\n1q_m_2_reg_n_0_[2] ),
        .I4(\n0q_m_2_reg_n_0_[3] ),
        .I5(\n1q_m_2_reg_n_0_[3] ),
        .O(\cnt_t_3[4]_i_9__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_t_3_reg[1] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(cnt_t_2[1]),
        .Q(\cnt_t_3_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_t_3_reg[2] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(cnt_t_2[2]),
        .Q(\cnt_t_3_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_t_3_reg[3] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(cnt_t_2[3]),
        .Q(\cnt_t_3_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_t_3_reg[4] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(cnt_t_2[4]),
        .Q(\cnt_t_3_reg_n_0_[4] ),
        .R(SR));
  LUT6 #(
    .INIT(64'h6696696669669969)) 
    \n0q_m_2[1]_i_1__0 
       (.I0(\n1q_m_2[3]_i_2__0_n_0 ),
        .I1(\n1q_m_2[3]_i_3__0_n_0 ),
        .I2(\n1q_m_2[3]_i_4__1_n_0 ),
        .I3(\pDataOut_1_reg_n_0_[0] ),
        .I4(\n1q_m_2[3]_i_6__1_n_0 ),
        .I5(\n1q_m_2[3]_i_5__0_n_0 ),
        .O(\n0q_m_2[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEF8EF7FF0800EF8E)) 
    \n0q_m_2[2]_i_1__1 
       (.I0(\n1q_m_2[3]_i_5__0_n_0 ),
        .I1(\n1q_m_2[3]_i_6__1_n_0 ),
        .I2(\pDataOut_1_reg_n_0_[0] ),
        .I3(\n1q_m_2[3]_i_4__1_n_0 ),
        .I4(\n1q_m_2[3]_i_3__0_n_0 ),
        .I5(\n1q_m_2[3]_i_2__0_n_0 ),
        .O(\n0q_m_2[2]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000400000000000)) 
    \n0q_m_2[3]_i_1__0 
       (.I0(\pDataOut_1_reg_n_0_[0] ),
        .I1(\n1q_m_2[3]_i_6__1_n_0 ),
        .I2(\n1q_m_2[3]_i_5__0_n_0 ),
        .I3(\n1q_m_2[3]_i_4__1_n_0 ),
        .I4(\n1q_m_2[3]_i_3__0_n_0 ),
        .I5(\n1q_m_2[3]_i_2__0_n_0 ),
        .O(\n0q_m_2[3]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \n0q_m_2_reg[1] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n0q_m_2[1]_i_1__0_n_0 ),
        .Q(\n0q_m_2_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n0q_m_2_reg[2] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n0q_m_2[2]_i_1__1_n_0 ),
        .Q(\n0q_m_2_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n0q_m_2_reg[3] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n0q_m_2[3]_i_1__0_n_0 ),
        .Q(\n0q_m_2_reg_n_0_[3] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \n1d_1[0]_i_1 
       (.I0(vid_pData[7]),
        .I1(vid_pData[0]),
        .I2(\n1d_1[0]_i_2_n_0 ),
        .I3(vid_pData[5]),
        .I4(vid_pData[6]),
        .I5(vid_pData[4]),
        .O(\n1d_1[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \n1d_1[0]_i_2 
       (.I0(vid_pData[1]),
        .I1(vid_pData[3]),
        .I2(vid_pData[2]),
        .O(\n1d_1[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \n1d_1[1]_i_1 
       (.I0(\n1d_1[3]_i_2_n_0 ),
        .I1(\n1d_1[1]_i_2_n_0 ),
        .I2(\n1d_1[3]_i_3_n_0 ),
        .O(\n1d_1[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h171717E817E8E8E8)) 
    \n1d_1[1]_i_2 
       (.I0(vid_pData[4]),
        .I1(vid_pData[5]),
        .I2(vid_pData[6]),
        .I3(vid_pData[1]),
        .I4(vid_pData[2]),
        .I5(vid_pData[3]),
        .O(\n1d_1[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7E7E7EE87EE8E8E8)) 
    \n1d_1[2]_i_1 
       (.I0(\n1d_1[3]_i_2_n_0 ),
        .I1(\n1d_1[3]_i_3_n_0 ),
        .I2(\n1d_1[2]_i_2_n_0 ),
        .I3(vid_pData[3]),
        .I4(vid_pData[2]),
        .I5(vid_pData[1]),
        .O(\n1d_1[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hE8)) 
    \n1d_1[2]_i_2 
       (.I0(vid_pData[6]),
        .I1(vid_pData[5]),
        .I2(vid_pData[4]),
        .O(\n1d_1[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8880800000000000)) 
    \n1d_1[3]_i_1 
       (.I0(\n1d_1[3]_i_2_n_0 ),
        .I1(\n1d_1[3]_i_3_n_0 ),
        .I2(vid_pData[4]),
        .I3(vid_pData[5]),
        .I4(vid_pData[6]),
        .I5(\n1d_1[3]_i_4_n_0 ),
        .O(\n1d_1[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h9600009600969600)) 
    \n1d_1[3]_i_2 
       (.I0(vid_pData[5]),
        .I1(vid_pData[6]),
        .I2(vid_pData[4]),
        .I3(vid_pData[7]),
        .I4(vid_pData[0]),
        .I5(\n1d_1[0]_i_2_n_0 ),
        .O(\n1d_1[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hE88E8EE8)) 
    \n1d_1[3]_i_3 
       (.I0(vid_pData[0]),
        .I1(vid_pData[7]),
        .I2(vid_pData[2]),
        .I3(vid_pData[3]),
        .I4(vid_pData[1]),
        .O(\n1d_1[3]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hE8)) 
    \n1d_1[3]_i_4 
       (.I0(vid_pData[3]),
        .I1(vid_pData[2]),
        .I2(vid_pData[1]),
        .O(\n1d_1[3]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \n1d_1_reg[0] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n1d_1[0]_i_1_n_0 ),
        .Q(\n1d_1_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n1d_1_reg[1] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n1d_1[1]_i_1_n_0 ),
        .Q(\n1d_1_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n1d_1_reg[2] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n1d_1[2]_i_1_n_0 ),
        .Q(\n1d_1_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n1d_1_reg[3] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n1d_1[3]_i_1_n_0 ),
        .Q(\n1d_1_reg_n_0_[3] ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h6996)) 
    \n1q_m_2[0]_i_1__1 
       (.I0(\n1q_m_2[3]_i_5__0_n_0 ),
        .I1(p_0_in),
        .I2(p_2_in),
        .I3(\n1q_m_2[3]_i_4__1_n_0 ),
        .O(\n1q_m_2[0]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h96C33C963C96693C)) 
    \n1q_m_2[1]_i_1__0 
       (.I0(\n1q_m_2[3]_i_4__1_n_0 ),
        .I1(\n1q_m_2[3]_i_3__0_n_0 ),
        .I2(\n1q_m_2[3]_i_2__0_n_0 ),
        .I3(\pDataOut_1_reg_n_0_[0] ),
        .I4(\n1q_m_2[3]_i_5__0_n_0 ),
        .I5(\n1q_m_2[3]_i_6__1_n_0 ),
        .O(\n1q_m_2[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h2BBFFFFD00022BBF)) 
    \n1q_m_2[2]_i_1__0 
       (.I0(\pDataOut_1_reg_n_0_[0] ),
        .I1(\n1q_m_2[3]_i_5__0_n_0 ),
        .I2(\n1q_m_2[3]_i_6__1_n_0 ),
        .I3(\n1q_m_2[3]_i_4__1_n_0 ),
        .I4(\n1q_m_2[3]_i_2__0_n_0 ),
        .I5(\n1q_m_2[3]_i_3__0_n_0 ),
        .O(\n1q_m_2[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000400000000)) 
    \n1q_m_2[3]_i_1__0 
       (.I0(\n1q_m_2[3]_i_2__0_n_0 ),
        .I1(\n1q_m_2[3]_i_3__0_n_0 ),
        .I2(\n1q_m_2[3]_i_4__1_n_0 ),
        .I3(\n1q_m_2[3]_i_5__0_n_0 ),
        .I4(\n1q_m_2[3]_i_6__1_n_0 ),
        .I5(\pDataOut_1_reg_n_0_[0] ),
        .O(\n1q_m_2[3]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h96C33C96)) 
    \n1q_m_2[3]_i_2__0 
       (.I0(p_2_in),
        .I1(\pDataOut_1_reg_n_0_[0] ),
        .I2(p_0_in),
        .I3(p_1_in),
        .I4(\q_m_2[8]_i_1__0_n_0 ),
        .O(\n1q_m_2[3]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h3693)) 
    \n1q_m_2[3]_i_3__0 
       (.I0(p_4_in5_in),
        .I1(\q_m_2[7]_i_2__0_n_0 ),
        .I2(\q_m_2[8]_i_1__0_n_0 ),
        .I3(p_5_in),
        .O(\n1q_m_2[3]_i_3__0_n_0 ));
  LUT3 #(
    .INIT(8'h69)) 
    \n1q_m_2[3]_i_4__1 
       (.I0(\q_m_2[7]_i_2__0_n_0 ),
        .I1(\q_m_2[8]_i_1__0_n_0 ),
        .I2(p_5_in),
        .O(\n1q_m_2[3]_i_4__1_n_0 ));
  LUT5 #(
    .INIT(32'h69969669)) 
    \n1q_m_2[3]_i_5__0 
       (.I0(p_4_in5_in),
        .I1(\q_m_2[7]_i_2__0_n_0 ),
        .I2(\q_m_2[8]_i_1__0_n_0 ),
        .I3(p_6_in8_in),
        .I4(p_5_in),
        .O(\n1q_m_2[3]_i_5__0_n_0 ));
  LUT3 #(
    .INIT(8'h69)) 
    \n1q_m_2[3]_i_6__1 
       (.I0(p_2_in),
        .I1(p_0_in),
        .I2(\pDataOut_1_reg_n_0_[0] ),
        .O(\n1q_m_2[3]_i_6__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \n1q_m_2_reg[0] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n1q_m_2[0]_i_1__1_n_0 ),
        .Q(\n1q_m_2_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n1q_m_2_reg[1] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n1q_m_2[1]_i_1__0_n_0 ),
        .Q(\n1q_m_2_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n1q_m_2_reg[2] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n1q_m_2[2]_i_1__0_n_0 ),
        .Q(\n1q_m_2_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n1q_m_2_reg[3] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n1q_m_2[3]_i_1__0_n_0 ),
        .Q(\n1q_m_2_reg_n_0_[3] ),
        .R(1'b0));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pDataOutRaw[0]_i_1 
       (.I0(\pDataOutRaw[9]_i_1_n_0 ),
        .I1(\q_m_2_reg_n_0_[0] ),
        .O(\pDataOutRaw[0]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pDataOutRaw[1]_i_1 
       (.I0(\pDataOutRaw[9]_i_1_n_0 ),
        .I1(\q_m_2_reg_n_0_[1] ),
        .O(\pDataOutRaw[1]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pDataOutRaw[2]_i_1__0 
       (.I0(\q_m_2_reg_n_0_[2] ),
        .I1(\pDataOutRaw[9]_i_1_n_0 ),
        .O(\pDataOutRaw[2]_i_1__0_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pDataOutRaw[3]_i_1 
       (.I0(\pDataOutRaw[9]_i_1_n_0 ),
        .I1(\q_m_2_reg_n_0_[3] ),
        .O(\pDataOutRaw[3]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pDataOutRaw[4]_i_1__0 
       (.I0(\q_m_2_reg_n_0_[4] ),
        .I1(\pDataOutRaw[9]_i_1_n_0 ),
        .O(\pDataOutRaw[4]_i_1__0_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pDataOutRaw[5]_i_1 
       (.I0(\pDataOutRaw[9]_i_1_n_0 ),
        .I1(\q_m_2_reg_n_0_[5] ),
        .O(\pDataOutRaw[5]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pDataOutRaw[6]_i_1__0 
       (.I0(\q_m_2_reg_n_0_[6] ),
        .I1(\pDataOutRaw[9]_i_1_n_0 ),
        .O(\pDataOutRaw[6]_i_1__0_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pDataOutRaw[7]_i_1 
       (.I0(\pDataOutRaw[9]_i_1_n_0 ),
        .I1(\q_m_2_reg_n_0_[7] ),
        .O(\pDataOutRaw[7]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT6 #(
    .INIT(64'h000C5058FF0F535B)) 
    \pDataOutRaw[9]_i_2__0 
       (.I0(\n1q_m_2_reg_n_0_[3] ),
        .I1(\cnt_t_3[4]_i_12__0_n_0 ),
        .I2(\cnt_t_3_reg_n_0_[4] ),
        .I3(\cnt_t_3[4]_i_14__1_n_0 ),
        .I4(\n1q_m_2_reg_n_0_[2] ),
        .I5(q_m_2),
        .O(\pDataOutRaw[9]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOutRaw_reg[0] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOutRaw[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOutRaw_reg[1] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOutRaw[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(SR));
  FDSE #(
    .INIT(1'b1)) 
    \pDataOutRaw_reg[2] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOutRaw[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOutRaw_reg[3] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOutRaw[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(SR));
  FDSE #(
    .INIT(1'b1)) 
    \pDataOutRaw_reg[4] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOutRaw[4]_i_1__0_n_0 ),
        .Q(Q[4]),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOutRaw_reg[5] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOutRaw[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(SR));
  FDSE #(
    .INIT(1'b1)) 
    \pDataOutRaw_reg[6] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOutRaw[6]_i_1__0_n_0 ),
        .Q(Q[6]),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOutRaw_reg[7] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOutRaw[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(SR));
  FDSE #(
    .INIT(1'b1)) 
    \pDataOutRaw_reg[8] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(q_m_2),
        .Q(Q[8]),
        .S(SR));
  FDSE #(
    .INIT(1'b1)) 
    \pDataOutRaw_reg[9] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOutRaw[9]_i_1_n_0 ),
        .Q(Q[9]),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[0] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[0]),
        .Q(\pDataOut_1_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[1] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[1]),
        .Q(p_0_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[2] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[2]),
        .Q(p_1_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[3] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[3]),
        .Q(p_2_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[4] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[4]),
        .Q(p_3_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[5] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[5]),
        .Q(p_4_in5_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[6] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[6]),
        .Q(p_5_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[7] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[7]),
        .Q(p_6_in8_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAA55AA5599669566)) 
    \q_m_2[1]_i_1__1 
       (.I0(p_0_in),
        .I1(\n1d_1_reg_n_0_[2] ),
        .I2(\n1d_1_reg_n_0_[0] ),
        .I3(\pDataOut_1_reg_n_0_[0] ),
        .I4(\n1d_1_reg_n_0_[1] ),
        .I5(\n1d_1_reg_n_0_[3] ),
        .O(\q_m_2[1]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \q_m_2[2]_i_1__0 
       (.I0(\pDataOut_1_reg_n_0_[0] ),
        .I1(p_0_in),
        .I2(p_1_in),
        .O(\q_m_2[2]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h69969669)) 
    \q_m_2[3]_i_1__0 
       (.I0(\q_m_2[8]_i_1__0_n_0 ),
        .I1(p_1_in),
        .I2(p_0_in),
        .I3(\pDataOut_1_reg_n_0_[0] ),
        .I4(p_2_in),
        .O(\q_m_2[3]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \q_m_2[4]_i_1__0 
       (.I0(p_2_in),
        .I1(\pDataOut_1_reg_n_0_[0] ),
        .I2(p_0_in),
        .I3(p_1_in),
        .I4(p_3_in),
        .O(\q_m_2[4]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \q_m_2[5]_i_1__0 
       (.I0(\q_m_2[8]_i_1__0_n_0 ),
        .I1(\q_m_2[7]_i_2__0_n_0 ),
        .I2(p_4_in5_in),
        .O(\q_m_2[5]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'h69)) 
    \q_m_2[6]_i_1__1 
       (.I0(p_5_in),
        .I1(\q_m_2[7]_i_2__0_n_0 ),
        .I2(p_4_in5_in),
        .O(\q_m_2[6]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \q_m_2[7]_i_1__1 
       (.I0(\q_m_2[8]_i_1__0_n_0 ),
        .I1(\q_m_2[7]_i_2__0_n_0 ),
        .I2(p_4_in5_in),
        .I3(p_6_in8_in),
        .I4(p_5_in),
        .O(\q_m_2[7]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h69969669)) 
    \q_m_2[7]_i_2__0 
       (.I0(p_3_in),
        .I1(p_1_in),
        .I2(p_0_in),
        .I3(\pDataOut_1_reg_n_0_[0] ),
        .I4(p_2_in),
        .O(\q_m_2[7]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h00105555)) 
    \q_m_2[8]_i_1__0 
       (.I0(\n1d_1_reg_n_0_[3] ),
        .I1(\n1d_1_reg_n_0_[1] ),
        .I2(\pDataOut_1_reg_n_0_[0] ),
        .I3(\n1d_1_reg_n_0_[0] ),
        .I4(\n1d_1_reg_n_0_[2] ),
        .O(\q_m_2[8]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[0] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOut_1_reg_n_0_[0] ),
        .Q(\q_m_2_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[1] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\q_m_2[1]_i_1__1_n_0 ),
        .Q(\q_m_2_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[2] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\q_m_2[2]_i_1__0_n_0 ),
        .Q(\q_m_2_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[3] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\q_m_2[3]_i_1__0_n_0 ),
        .Q(\q_m_2_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[4] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\q_m_2[4]_i_1__0_n_0 ),
        .Q(\q_m_2_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[5] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\q_m_2[5]_i_1__0_n_0 ),
        .Q(\q_m_2_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[6] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\q_m_2[6]_i_1__1_n_0 ),
        .Q(\q_m_2_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[7] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\q_m_2[7]_i_1__1_n_0 ),
        .Q(\q_m_2_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[8] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\q_m_2[8]_i_1__0_n_0 ),
        .Q(q_m_2),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "TMDS_Encoder" *) 
module system_rgb2dvi_0_1__TMDS_Encoder_3
   (Q,
    PixelClk,
    vid_pData,
    SR);
  output [9:0]Q;
  input PixelClk;
  input [7:0]vid_pData;
  input [0:0]SR;

  wire PixelClk;
  wire [9:0]Q;
  wire [0:0]SR;
  wire [4:1]cnt_t_2;
  wire \cnt_t_3[2]_i_2_n_0 ;
  wire \cnt_t_3[2]_i_3__1_n_0 ;
  wire \cnt_t_3[2]_i_4__1_n_0 ;
  wire \cnt_t_3[3]_i_2_n_0 ;
  wire \cnt_t_3[3]_i_3__1_n_0 ;
  wire \cnt_t_3[3]_i_4__1_n_0 ;
  wire \cnt_t_3[3]_i_5__1_n_0 ;
  wire \cnt_t_3[4]_i_10__1_n_0 ;
  wire \cnt_t_3[4]_i_11__1_n_0 ;
  wire \cnt_t_3[4]_i_12__1_n_0 ;
  wire \cnt_t_3[4]_i_13__1_n_0 ;
  wire \cnt_t_3[4]_i_14__0_n_0 ;
  wire \cnt_t_3[4]_i_2__1_n_0 ;
  wire \cnt_t_3[4]_i_3__1_n_0 ;
  wire \cnt_t_3[4]_i_4__1_n_0 ;
  wire \cnt_t_3[4]_i_5__1_n_0 ;
  wire \cnt_t_3[4]_i_6__0_n_0 ;
  wire \cnt_t_3[4]_i_7__0_n_0 ;
  wire \cnt_t_3[4]_i_8__1_n_0 ;
  wire \cnt_t_3[4]_i_9__1_n_0 ;
  wire \cnt_t_3_reg_n_0_[1] ;
  wire \cnt_t_3_reg_n_0_[2] ;
  wire \cnt_t_3_reg_n_0_[3] ;
  wire \cnt_t_3_reg_n_0_[4] ;
  wire \n0q_m_2[1]_i_1__1_n_0 ;
  wire \n0q_m_2[2]_i_1_n_0 ;
  wire \n0q_m_2[3]_i_1__1_n_0 ;
  wire \n0q_m_2_reg_n_0_[1] ;
  wire \n0q_m_2_reg_n_0_[2] ;
  wire \n0q_m_2_reg_n_0_[3] ;
  wire \n1d_1[0]_i_1_n_0 ;
  wire \n1d_1[0]_i_2_n_0 ;
  wire \n1d_1[1]_i_1_n_0 ;
  wire \n1d_1[1]_i_2_n_0 ;
  wire \n1d_1[2]_i_1_n_0 ;
  wire \n1d_1[2]_i_2_n_0 ;
  wire \n1d_1[3]_i_1_n_0 ;
  wire \n1d_1[3]_i_2_n_0 ;
  wire \n1d_1[3]_i_3_n_0 ;
  wire \n1d_1[3]_i_4_n_0 ;
  wire \n1d_1_reg_n_0_[0] ;
  wire \n1d_1_reg_n_0_[1] ;
  wire \n1d_1_reg_n_0_[2] ;
  wire \n1d_1_reg_n_0_[3] ;
  wire \n1q_m_2[0]_i_1_n_0 ;
  wire \n1q_m_2[1]_i_1__1_n_0 ;
  wire \n1q_m_2[2]_i_1__1_n_0 ;
  wire \n1q_m_2[3]_i_1__1_n_0 ;
  wire \n1q_m_2[3]_i_2__1_n_0 ;
  wire \n1q_m_2[3]_i_3__1_n_0 ;
  wire \n1q_m_2[3]_i_4_n_0 ;
  wire \n1q_m_2[3]_i_5__1_n_0 ;
  wire \n1q_m_2[3]_i_6_n_0 ;
  wire \n1q_m_2_reg_n_0_[0] ;
  wire \n1q_m_2_reg_n_0_[1] ;
  wire \n1q_m_2_reg_n_0_[2] ;
  wire \n1q_m_2_reg_n_0_[3] ;
  wire \pDataOutRaw[0]_i_1__0_n_0 ;
  wire \pDataOutRaw[1]_i_1__0_n_0 ;
  wire \pDataOutRaw[2]_i_1__1_n_0 ;
  wire \pDataOutRaw[3]_i_1__0_n_0 ;
  wire \pDataOutRaw[4]_i_1__1_n_0 ;
  wire \pDataOutRaw[5]_i_1__0_n_0 ;
  wire \pDataOutRaw[6]_i_1__1_n_0 ;
  wire \pDataOutRaw[7]_i_1__0_n_0 ;
  wire \pDataOutRaw[9]_i_1__0_n_0 ;
  wire \pDataOut_1_reg_n_0_[0] ;
  wire p_0_in;
  wire p_1_in;
  wire p_2_in;
  wire p_3_in;
  wire p_4_in5_in;
  wire p_5_in;
  wire p_6_in8_in;
  wire [8:8]q_m_2;
  wire \q_m_2[1]_i_1_n_0 ;
  wire \q_m_2[2]_i_1__1_n_0 ;
  wire \q_m_2[3]_i_1__1_n_0 ;
  wire \q_m_2[4]_i_1__1_n_0 ;
  wire \q_m_2[5]_i_1__1_n_0 ;
  wire \q_m_2[6]_i_1_n_0 ;
  wire \q_m_2[7]_i_1_n_0 ;
  wire \q_m_2[7]_i_2__1_n_0 ;
  wire \q_m_2[8]_i_1__1_n_0 ;
  wire \q_m_2_reg_n_0_[0] ;
  wire \q_m_2_reg_n_0_[1] ;
  wire \q_m_2_reg_n_0_[2] ;
  wire \q_m_2_reg_n_0_[3] ;
  wire \q_m_2_reg_n_0_[4] ;
  wire \q_m_2_reg_n_0_[5] ;
  wire \q_m_2_reg_n_0_[6] ;
  wire \q_m_2_reg_n_0_[7] ;
  wire [7:0]vid_pData;

  LUT6 #(
    .INIT(64'h9696696969969696)) 
    \cnt_t_3[1]_i_1__1 
       (.I0(\n1q_m_2_reg_n_0_[1] ),
        .I1(\n0q_m_2_reg_n_0_[1] ),
        .I2(\cnt_t_3_reg_n_0_[1] ),
        .I3(\cnt_t_3[2]_i_3__1_n_0 ),
        .I4(\cnt_t_3[4]_i_5__1_n_0 ),
        .I5(q_m_2),
        .O(cnt_t_2[1]));
  LUT6 #(
    .INIT(64'h5AA955599AA59555)) 
    \cnt_t_3[2]_i_1__1 
       (.I0(\cnt_t_3[2]_i_2_n_0 ),
        .I1(\cnt_t_3[2]_i_3__1_n_0 ),
        .I2(q_m_2),
        .I3(\cnt_t_3_reg_n_0_[1] ),
        .I4(\cnt_t_3[2]_i_4__1_n_0 ),
        .I5(\cnt_t_3[4]_i_5__1_n_0 ),
        .O(cnt_t_2[2]));
  LUT5 #(
    .INIT(32'h69966969)) 
    \cnt_t_3[2]_i_2 
       (.I0(\cnt_t_3_reg_n_0_[2] ),
        .I1(\n1q_m_2_reg_n_0_[2] ),
        .I2(\n0q_m_2_reg_n_0_[2] ),
        .I3(\n0q_m_2_reg_n_0_[1] ),
        .I4(\n1q_m_2_reg_n_0_[1] ),
        .O(\cnt_t_3[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFE0000FFFEFFFE)) 
    \cnt_t_3[2]_i_3__1 
       (.I0(\cnt_t_3_reg_n_0_[3] ),
        .I1(\cnt_t_3_reg_n_0_[1] ),
        .I2(\cnt_t_3_reg_n_0_[2] ),
        .I3(\cnt_t_3_reg_n_0_[4] ),
        .I4(\cnt_t_3[4]_i_10__1_n_0 ),
        .I5(\n1q_m_2_reg_n_0_[2] ),
        .O(\cnt_t_3[2]_i_3__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \cnt_t_3[2]_i_4__1 
       (.I0(\n1q_m_2_reg_n_0_[1] ),
        .I1(\n0q_m_2_reg_n_0_[1] ),
        .O(\cnt_t_3[2]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'h555556A6AAAA56A6)) 
    \cnt_t_3[3]_i_1__1 
       (.I0(\cnt_t_3[3]_i_2_n_0 ),
        .I1(\cnt_t_3[3]_i_3__1_n_0 ),
        .I2(\cnt_t_3[4]_i_5__1_n_0 ),
        .I3(\cnt_t_3[3]_i_4__1_n_0 ),
        .I4(\cnt_t_3[4]_i_3__1_n_0 ),
        .I5(\cnt_t_3[3]_i_5__1_n_0 ),
        .O(cnt_t_2[3]));
  LUT2 #(
    .INIT(4'h6)) 
    \cnt_t_3[3]_i_2 
       (.I0(\cnt_t_3_reg_n_0_[3] ),
        .I1(\cnt_t_3[4]_i_9__1_n_0 ),
        .O(\cnt_t_3[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h099FFFFF0000099F)) 
    \cnt_t_3[3]_i_3__1 
       (.I0(\n0q_m_2_reg_n_0_[1] ),
        .I1(\n1q_m_2_reg_n_0_[1] ),
        .I2(\cnt_t_3_reg_n_0_[1] ),
        .I3(q_m_2),
        .I4(\cnt_t_3_reg_n_0_[2] ),
        .I5(\cnt_t_3[4]_i_8__1_n_0 ),
        .O(\cnt_t_3[3]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF990F9900000)) 
    \cnt_t_3[3]_i_4__1 
       (.I0(\n0q_m_2_reg_n_0_[1] ),
        .I1(\n1q_m_2_reg_n_0_[1] ),
        .I2(\cnt_t_3_reg_n_0_[1] ),
        .I3(q_m_2),
        .I4(\cnt_t_3_reg_n_0_[2] ),
        .I5(\cnt_t_3[4]_i_8__1_n_0 ),
        .O(\cnt_t_3[3]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'h9BBF04DF04DF9BBF)) 
    \cnt_t_3[3]_i_5__1 
       (.I0(\n0q_m_2_reg_n_0_[1] ),
        .I1(\n1q_m_2_reg_n_0_[1] ),
        .I2(\cnt_t_3_reg_n_0_[1] ),
        .I3(\cnt_t_3_reg_n_0_[2] ),
        .I4(\n1q_m_2_reg_n_0_[2] ),
        .I5(\n0q_m_2_reg_n_0_[2] ),
        .O(\cnt_t_3[3]_i_5__1_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \cnt_t_3[4]_i_10__1 
       (.I0(\n1q_m_2_reg_n_0_[3] ),
        .I1(\n1q_m_2_reg_n_0_[1] ),
        .I2(\n1q_m_2_reg_n_0_[0] ),
        .O(\cnt_t_3[4]_i_10__1_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \cnt_t_3[4]_i_11__1 
       (.I0(\cnt_t_3_reg_n_0_[3] ),
        .I1(\cnt_t_3_reg_n_0_[1] ),
        .I2(\cnt_t_3_reg_n_0_[2] ),
        .O(\cnt_t_3[4]_i_11__1_n_0 ));
  LUT4 #(
    .INIT(16'hF990)) 
    \cnt_t_3[4]_i_12__1 
       (.I0(\n0q_m_2_reg_n_0_[1] ),
        .I1(\n1q_m_2_reg_n_0_[1] ),
        .I2(\cnt_t_3_reg_n_0_[1] ),
        .I3(q_m_2),
        .O(\cnt_t_3[4]_i_12__1_n_0 ));
  LUT4 #(
    .INIT(16'hA2FB)) 
    \cnt_t_3[4]_i_13__1 
       (.I0(\n0q_m_2_reg_n_0_[2] ),
        .I1(\n1q_m_2_reg_n_0_[1] ),
        .I2(\n0q_m_2_reg_n_0_[1] ),
        .I3(\n1q_m_2_reg_n_0_[2] ),
        .O(\cnt_t_3[4]_i_13__1_n_0 ));
  LUT4 #(
    .INIT(16'h099F)) 
    \cnt_t_3[4]_i_14__0 
       (.I0(\n0q_m_2_reg_n_0_[1] ),
        .I1(\n1q_m_2_reg_n_0_[1] ),
        .I2(\cnt_t_3_reg_n_0_[1] ),
        .I3(q_m_2),
        .O(\cnt_t_3[4]_i_14__0_n_0 ));
  LUT6 #(
    .INIT(64'h4744B8BB4777B888)) 
    \cnt_t_3[4]_i_1__1 
       (.I0(\cnt_t_3[4]_i_2__1_n_0 ),
        .I1(\cnt_t_3[4]_i_3__1_n_0 ),
        .I2(\cnt_t_3[4]_i_4__1_n_0 ),
        .I3(\cnt_t_3[4]_i_5__1_n_0 ),
        .I4(\cnt_t_3[4]_i_6__0_n_0 ),
        .I5(\cnt_t_3[4]_i_7__0_n_0 ),
        .O(cnt_t_2[4]));
  LUT6 #(
    .INIT(64'h80F80000FFFF80F8)) 
    \cnt_t_3[4]_i_2__1 
       (.I0(\cnt_t_3[2]_i_4__1_n_0 ),
        .I1(\cnt_t_3_reg_n_0_[1] ),
        .I2(\cnt_t_3_reg_n_0_[2] ),
        .I3(\cnt_t_3[4]_i_8__1_n_0 ),
        .I4(\cnt_t_3_reg_n_0_[3] ),
        .I5(\cnt_t_3[4]_i_9__1_n_0 ),
        .O(\cnt_t_3[4]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'h04040455)) 
    \cnt_t_3[4]_i_3__1 
       (.I0(q_m_2),
        .I1(\n1q_m_2_reg_n_0_[2] ),
        .I2(\cnt_t_3[4]_i_10__1_n_0 ),
        .I3(\cnt_t_3_reg_n_0_[4] ),
        .I4(\cnt_t_3[4]_i_11__1_n_0 ),
        .O(\cnt_t_3[4]_i_3__1_n_0 ));
  LUT5 #(
    .INIT(32'h11171777)) 
    \cnt_t_3[4]_i_4__1 
       (.I0(\cnt_t_3_reg_n_0_[3] ),
        .I1(\cnt_t_3[4]_i_9__1_n_0 ),
        .I2(\cnt_t_3[4]_i_12__1_n_0 ),
        .I3(\cnt_t_3_reg_n_0_[2] ),
        .I4(\cnt_t_3[4]_i_8__1_n_0 ),
        .O(\cnt_t_3[4]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF00555755FF)) 
    \cnt_t_3[4]_i_5__1 
       (.I0(\cnt_t_3[4]_i_11__1_n_0 ),
        .I1(\n1q_m_2_reg_n_0_[0] ),
        .I2(\n1q_m_2_reg_n_0_[1] ),
        .I3(\n1q_m_2_reg_n_0_[3] ),
        .I4(\n1q_m_2_reg_n_0_[2] ),
        .I5(\cnt_t_3_reg_n_0_[4] ),
        .O(\cnt_t_3[4]_i_5__1_n_0 ));
  LUT4 #(
    .INIT(16'h95A9)) 
    \cnt_t_3[4]_i_6__0 
       (.I0(\cnt_t_3_reg_n_0_[4] ),
        .I1(\n0q_m_2_reg_n_0_[3] ),
        .I2(\cnt_t_3[4]_i_13__1_n_0 ),
        .I3(\n1q_m_2_reg_n_0_[3] ),
        .O(\cnt_t_3[4]_i_6__0_n_0 ));
  LUT5 #(
    .INIT(32'h4DFF004D)) 
    \cnt_t_3[4]_i_7__0 
       (.I0(\cnt_t_3[4]_i_14__0_n_0 ),
        .I1(\cnt_t_3_reg_n_0_[2] ),
        .I2(\cnt_t_3[4]_i_8__1_n_0 ),
        .I3(\cnt_t_3[4]_i_9__1_n_0 ),
        .I4(\cnt_t_3_reg_n_0_[3] ),
        .O(\cnt_t_3[4]_i_7__0_n_0 ));
  LUT4 #(
    .INIT(16'hD22D)) 
    \cnt_t_3[4]_i_8__1 
       (.I0(\n1q_m_2_reg_n_0_[1] ),
        .I1(\n0q_m_2_reg_n_0_[1] ),
        .I2(\n0q_m_2_reg_n_0_[2] ),
        .I3(\n1q_m_2_reg_n_0_[2] ),
        .O(\cnt_t_3[4]_i_8__1_n_0 ));
  LUT6 #(
    .INIT(64'hDF4520BA20BADF45)) 
    \cnt_t_3[4]_i_9__1 
       (.I0(\n1q_m_2_reg_n_0_[2] ),
        .I1(\n0q_m_2_reg_n_0_[1] ),
        .I2(\n1q_m_2_reg_n_0_[1] ),
        .I3(\n0q_m_2_reg_n_0_[2] ),
        .I4(\n0q_m_2_reg_n_0_[3] ),
        .I5(\n1q_m_2_reg_n_0_[3] ),
        .O(\cnt_t_3[4]_i_9__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_t_3_reg[1] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(cnt_t_2[1]),
        .Q(\cnt_t_3_reg_n_0_[1] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_t_3_reg[2] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(cnt_t_2[2]),
        .Q(\cnt_t_3_reg_n_0_[2] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_t_3_reg[3] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(cnt_t_2[3]),
        .Q(\cnt_t_3_reg_n_0_[3] ),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \cnt_t_3_reg[4] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(cnt_t_2[4]),
        .Q(\cnt_t_3_reg_n_0_[4] ),
        .R(SR));
  LUT6 #(
    .INIT(64'h6696696696996696)) 
    \n0q_m_2[1]_i_1__1 
       (.I0(\n1q_m_2[3]_i_2__1_n_0 ),
        .I1(\n1q_m_2[3]_i_3__1_n_0 ),
        .I2(\n1q_m_2[3]_i_4_n_0 ),
        .I3(\n1q_m_2[3]_i_5__1_n_0 ),
        .I4(\pDataOut_1_reg_n_0_[0] ),
        .I5(\n1q_m_2[3]_i_6_n_0 ),
        .O(\n0q_m_2[1]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hBB2BBDBB2B22BB2B)) 
    \n0q_m_2[2]_i_1 
       (.I0(\n1q_m_2[3]_i_2__1_n_0 ),
        .I1(\n1q_m_2[3]_i_3__1_n_0 ),
        .I2(\n1q_m_2[3]_i_4_n_0 ),
        .I3(\n1q_m_2[3]_i_5__1_n_0 ),
        .I4(\pDataOut_1_reg_n_0_[0] ),
        .I5(\n1q_m_2[3]_i_6_n_0 ),
        .O(\n0q_m_2[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000020000000000)) 
    \n0q_m_2[3]_i_1__1 
       (.I0(\n1q_m_2[3]_i_2__1_n_0 ),
        .I1(\n1q_m_2[3]_i_3__1_n_0 ),
        .I2(\n1q_m_2[3]_i_4_n_0 ),
        .I3(\n1q_m_2[3]_i_5__1_n_0 ),
        .I4(\pDataOut_1_reg_n_0_[0] ),
        .I5(\n1q_m_2[3]_i_6_n_0 ),
        .O(\n0q_m_2[3]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \n0q_m_2_reg[1] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n0q_m_2[1]_i_1__1_n_0 ),
        .Q(\n0q_m_2_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n0q_m_2_reg[2] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n0q_m_2[2]_i_1_n_0 ),
        .Q(\n0q_m_2_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n0q_m_2_reg[3] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n0q_m_2[3]_i_1__1_n_0 ),
        .Q(\n0q_m_2_reg_n_0_[3] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \n1d_1[0]_i_1 
       (.I0(vid_pData[7]),
        .I1(vid_pData[0]),
        .I2(\n1d_1[0]_i_2_n_0 ),
        .I3(vid_pData[5]),
        .I4(vid_pData[6]),
        .I5(vid_pData[4]),
        .O(\n1d_1[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \n1d_1[0]_i_2 
       (.I0(vid_pData[1]),
        .I1(vid_pData[3]),
        .I2(vid_pData[2]),
        .O(\n1d_1[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \n1d_1[1]_i_1 
       (.I0(\n1d_1[3]_i_2_n_0 ),
        .I1(\n1d_1[1]_i_2_n_0 ),
        .I2(\n1d_1[3]_i_3_n_0 ),
        .O(\n1d_1[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h171717E817E8E8E8)) 
    \n1d_1[1]_i_2 
       (.I0(vid_pData[4]),
        .I1(vid_pData[5]),
        .I2(vid_pData[6]),
        .I3(vid_pData[1]),
        .I4(vid_pData[2]),
        .I5(vid_pData[3]),
        .O(\n1d_1[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7E7E7EE87EE8E8E8)) 
    \n1d_1[2]_i_1 
       (.I0(\n1d_1[3]_i_2_n_0 ),
        .I1(\n1d_1[3]_i_3_n_0 ),
        .I2(\n1d_1[2]_i_2_n_0 ),
        .I3(vid_pData[3]),
        .I4(vid_pData[2]),
        .I5(vid_pData[1]),
        .O(\n1d_1[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hE8)) 
    \n1d_1[2]_i_2 
       (.I0(vid_pData[6]),
        .I1(vid_pData[5]),
        .I2(vid_pData[4]),
        .O(\n1d_1[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h8880800000000000)) 
    \n1d_1[3]_i_1 
       (.I0(\n1d_1[3]_i_2_n_0 ),
        .I1(\n1d_1[3]_i_3_n_0 ),
        .I2(vid_pData[4]),
        .I3(vid_pData[5]),
        .I4(vid_pData[6]),
        .I5(\n1d_1[3]_i_4_n_0 ),
        .O(\n1d_1[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h9600009600969600)) 
    \n1d_1[3]_i_2 
       (.I0(vid_pData[5]),
        .I1(vid_pData[6]),
        .I2(vid_pData[4]),
        .I3(vid_pData[7]),
        .I4(vid_pData[0]),
        .I5(\n1d_1[0]_i_2_n_0 ),
        .O(\n1d_1[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hE88E8EE8)) 
    \n1d_1[3]_i_3 
       (.I0(vid_pData[0]),
        .I1(vid_pData[7]),
        .I2(vid_pData[2]),
        .I3(vid_pData[3]),
        .I4(vid_pData[1]),
        .O(\n1d_1[3]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hE8)) 
    \n1d_1[3]_i_4 
       (.I0(vid_pData[3]),
        .I1(vid_pData[2]),
        .I2(vid_pData[1]),
        .O(\n1d_1[3]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \n1d_1_reg[0] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n1d_1[0]_i_1_n_0 ),
        .Q(\n1d_1_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n1d_1_reg[1] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n1d_1[1]_i_1_n_0 ),
        .Q(\n1d_1_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n1d_1_reg[2] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n1d_1[2]_i_1_n_0 ),
        .Q(\n1d_1_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n1d_1_reg[3] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n1d_1[3]_i_1_n_0 ),
        .Q(\n1d_1_reg_n_0_[3] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \n1q_m_2[0]_i_1 
       (.I0(\n1q_m_2[3]_i_6_n_0 ),
        .I1(\pDataOut_1_reg_n_0_[0] ),
        .I2(\n1q_m_2[3]_i_5__1_n_0 ),
        .I3(\q_m_2[7]_i_2__1_n_0 ),
        .I4(\q_m_2[8]_i_1__1_n_0 ),
        .I5(p_5_in),
        .O(\n1q_m_2[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h4D24B2DBB2DB4D24)) 
    \n1q_m_2[1]_i_1__1 
       (.I0(\n1q_m_2[3]_i_4_n_0 ),
        .I1(\n1q_m_2[3]_i_6_n_0 ),
        .I2(\pDataOut_1_reg_n_0_[0] ),
        .I3(\n1q_m_2[3]_i_5__1_n_0 ),
        .I4(\n1q_m_2[3]_i_3__1_n_0 ),
        .I5(\n1q_m_2[3]_i_2__1_n_0 ),
        .O(\n1q_m_2[1]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hDF4D0400FBFFDF4D)) 
    \n1q_m_2[2]_i_1__1 
       (.I0(\n1q_m_2[3]_i_6_n_0 ),
        .I1(\pDataOut_1_reg_n_0_[0] ),
        .I2(\n1q_m_2[3]_i_5__1_n_0 ),
        .I3(\n1q_m_2[3]_i_4_n_0 ),
        .I4(\n1q_m_2[3]_i_3__1_n_0 ),
        .I5(\n1q_m_2[3]_i_2__1_n_0 ),
        .O(\n1q_m_2[2]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \n1q_m_2[3]_i_1__1 
       (.I0(\n1q_m_2[3]_i_2__1_n_0 ),
        .I1(\n1q_m_2[3]_i_3__1_n_0 ),
        .I2(\n1q_m_2[3]_i_4_n_0 ),
        .I3(\n1q_m_2[3]_i_5__1_n_0 ),
        .I4(\pDataOut_1_reg_n_0_[0] ),
        .I5(\n1q_m_2[3]_i_6_n_0 ),
        .O(\n1q_m_2[3]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h8E71718E)) 
    \n1q_m_2[3]_i_2__1 
       (.I0(\q_m_2[8]_i_1__1_n_0 ),
        .I1(p_2_in),
        .I2(p_1_in),
        .I3(\pDataOut_1_reg_n_0_[0] ),
        .I4(p_0_in),
        .O(\n1q_m_2[3]_i_2__1_n_0 ));
  LUT4 #(
    .INIT(16'h5695)) 
    \n1q_m_2[3]_i_3__1 
       (.I0(\q_m_2[7]_i_2__1_n_0 ),
        .I1(p_4_in5_in),
        .I2(\q_m_2[8]_i_1__1_n_0 ),
        .I3(p_5_in),
        .O(\n1q_m_2[3]_i_3__1_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \n1q_m_2[3]_i_4 
       (.I0(p_5_in),
        .I1(\q_m_2[8]_i_1__1_n_0 ),
        .I2(\q_m_2[7]_i_2__1_n_0 ),
        .O(\n1q_m_2[3]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h69)) 
    \n1q_m_2[3]_i_5__1 
       (.I0(p_0_in),
        .I1(\pDataOut_1_reg_n_0_[0] ),
        .I2(p_2_in),
        .O(\n1q_m_2[3]_i_5__1_n_0 ));
  LUT5 #(
    .INIT(32'h69969669)) 
    \n1q_m_2[3]_i_6 
       (.I0(\q_m_2[8]_i_1__1_n_0 ),
        .I1(p_4_in5_in),
        .I2(\q_m_2[7]_i_2__1_n_0 ),
        .I3(p_5_in),
        .I4(p_6_in8_in),
        .O(\n1q_m_2[3]_i_6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \n1q_m_2_reg[0] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n1q_m_2[0]_i_1_n_0 ),
        .Q(\n1q_m_2_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n1q_m_2_reg[1] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n1q_m_2[1]_i_1__1_n_0 ),
        .Q(\n1q_m_2_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n1q_m_2_reg[2] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n1q_m_2[2]_i_1__1_n_0 ),
        .Q(\n1q_m_2_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \n1q_m_2_reg[3] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\n1q_m_2[3]_i_1__1_n_0 ),
        .Q(\n1q_m_2_reg_n_0_[3] ),
        .R(1'b0));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pDataOutRaw[0]_i_1__0 
       (.I0(\pDataOutRaw[9]_i_1__0_n_0 ),
        .I1(\q_m_2_reg_n_0_[0] ),
        .O(\pDataOutRaw[0]_i_1__0_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pDataOutRaw[1]_i_1__0 
       (.I0(\pDataOutRaw[9]_i_1__0_n_0 ),
        .I1(\q_m_2_reg_n_0_[1] ),
        .O(\pDataOutRaw[1]_i_1__0_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pDataOutRaw[2]_i_1__1 
       (.I0(\q_m_2_reg_n_0_[2] ),
        .I1(\pDataOutRaw[9]_i_1__0_n_0 ),
        .O(\pDataOutRaw[2]_i_1__1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* \PinAttr:I1:HOLD_DETOUR  = "192" *) 
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pDataOutRaw[3]_i_1__0 
       (.I0(\pDataOutRaw[9]_i_1__0_n_0 ),
        .I1(\q_m_2_reg_n_0_[3] ),
        .O(\pDataOutRaw[3]_i_1__0_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pDataOutRaw[4]_i_1__1 
       (.I0(\q_m_2_reg_n_0_[4] ),
        .I1(\pDataOutRaw[9]_i_1__0_n_0 ),
        .O(\pDataOutRaw[4]_i_1__1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pDataOutRaw[5]_i_1__0 
       (.I0(\pDataOutRaw[9]_i_1__0_n_0 ),
        .I1(\q_m_2_reg_n_0_[5] ),
        .O(\pDataOutRaw[5]_i_1__0_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pDataOutRaw[6]_i_1__1 
       (.I0(\q_m_2_reg_n_0_[6] ),
        .I1(\pDataOutRaw[9]_i_1__0_n_0 ),
        .O(\pDataOutRaw[6]_i_1__1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \pDataOutRaw[7]_i_1__0 
       (.I0(\pDataOutRaw[9]_i_1__0_n_0 ),
        .I1(\q_m_2_reg_n_0_[7] ),
        .O(\pDataOutRaw[7]_i_1__0_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT6 #(
    .INIT(64'h0C0058500FFF5B53)) 
    \pDataOutRaw[9]_i_2__1 
       (.I0(\n1q_m_2_reg_n_0_[3] ),
        .I1(\cnt_t_3[4]_i_11__1_n_0 ),
        .I2(\cnt_t_3_reg_n_0_[4] ),
        .I3(\cnt_t_3[4]_i_10__1_n_0 ),
        .I4(\n1q_m_2_reg_n_0_[2] ),
        .I5(q_m_2),
        .O(\pDataOutRaw[9]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOutRaw_reg[0] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOutRaw[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOutRaw_reg[1] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOutRaw[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(SR));
  FDSE #(
    .INIT(1'b1)) 
    \pDataOutRaw_reg[2] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOutRaw[2]_i_1__1_n_0 ),
        .Q(Q[2]),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOutRaw_reg[3] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOutRaw[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(SR));
  FDSE #(
    .INIT(1'b1)) 
    \pDataOutRaw_reg[4] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOutRaw[4]_i_1__1_n_0 ),
        .Q(Q[4]),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOutRaw_reg[5] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOutRaw[5]_i_1__0_n_0 ),
        .Q(Q[5]),
        .R(SR));
  FDSE #(
    .INIT(1'b1)) 
    \pDataOutRaw_reg[6] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOutRaw[6]_i_1__1_n_0 ),
        .Q(Q[6]),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOutRaw_reg[7] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOutRaw[7]_i_1__0_n_0 ),
        .Q(Q[7]),
        .R(SR));
  FDSE #(
    .INIT(1'b1)) 
    \pDataOutRaw_reg[8] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(q_m_2),
        .Q(Q[8]),
        .S(SR));
  FDSE #(
    .INIT(1'b1)) 
    \pDataOutRaw_reg[9] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOutRaw[9]_i_1__0_n_0 ),
        .Q(Q[9]),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[0] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[0]),
        .Q(\pDataOut_1_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[1] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[1]),
        .Q(p_0_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[2] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[2]),
        .Q(p_1_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[3] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[3]),
        .Q(p_2_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[4] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[4]),
        .Q(p_3_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[5] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[5]),
        .Q(p_4_in5_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[6] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[6]),
        .Q(p_5_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pDataOut_1_reg[7] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(vid_pData[7]),
        .Q(p_6_in8_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hA9A9A99956565656)) 
    \q_m_2[1]_i_1 
       (.I0(p_0_in),
        .I1(\n1d_1_reg_n_0_[3] ),
        .I2(\n1d_1_reg_n_0_[2] ),
        .I3(\n1d_1_reg_n_0_[0] ),
        .I4(\n1d_1_reg_n_0_[1] ),
        .I5(\pDataOut_1_reg_n_0_[0] ),
        .O(\q_m_2[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \q_m_2[2]_i_1__1 
       (.I0(p_1_in),
        .I1(\pDataOut_1_reg_n_0_[0] ),
        .I2(p_0_in),
        .O(\q_m_2[2]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h69969669)) 
    \q_m_2[3]_i_1__1 
       (.I0(\q_m_2[8]_i_1__1_n_0 ),
        .I1(p_2_in),
        .I2(p_1_in),
        .I3(\pDataOut_1_reg_n_0_[0] ),
        .I4(p_0_in),
        .O(\q_m_2[3]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \q_m_2[4]_i_1__1 
       (.I0(p_2_in),
        .I1(p_1_in),
        .I2(\pDataOut_1_reg_n_0_[0] ),
        .I3(p_0_in),
        .I4(p_3_in),
        .O(\q_m_2[4]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \q_m_2[5]_i_1__1 
       (.I0(\q_m_2[7]_i_2__1_n_0 ),
        .I1(p_4_in5_in),
        .I2(\q_m_2[8]_i_1__1_n_0 ),
        .O(\q_m_2[5]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'h69)) 
    \q_m_2[6]_i_1 
       (.I0(\q_m_2[7]_i_2__1_n_0 ),
        .I1(p_4_in5_in),
        .I2(p_5_in),
        .O(\q_m_2[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \q_m_2[7]_i_1 
       (.I0(p_6_in8_in),
        .I1(p_5_in),
        .I2(\q_m_2[7]_i_2__1_n_0 ),
        .I3(p_4_in5_in),
        .I4(\q_m_2[8]_i_1__1_n_0 ),
        .O(\q_m_2[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h69969669)) 
    \q_m_2[7]_i_2__1 
       (.I0(p_3_in),
        .I1(p_0_in),
        .I2(\pDataOut_1_reg_n_0_[0] ),
        .I3(p_1_in),
        .I4(p_2_in),
        .O(\q_m_2[7]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'h000002FF)) 
    \q_m_2[8]_i_1__1 
       (.I0(\pDataOut_1_reg_n_0_[0] ),
        .I1(\n1d_1_reg_n_0_[1] ),
        .I2(\n1d_1_reg_n_0_[0] ),
        .I3(\n1d_1_reg_n_0_[2] ),
        .I4(\n1d_1_reg_n_0_[3] ),
        .O(\q_m_2[8]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[0] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\pDataOut_1_reg_n_0_[0] ),
        .Q(\q_m_2_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[1] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\q_m_2[1]_i_1_n_0 ),
        .Q(\q_m_2_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[2] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\q_m_2[2]_i_1__1_n_0 ),
        .Q(\q_m_2_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[3] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\q_m_2[3]_i_1__1_n_0 ),
        .Q(\q_m_2_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[4] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\q_m_2[4]_i_1__1_n_0 ),
        .Q(\q_m_2_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[5] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\q_m_2[5]_i_1__1_n_0 ),
        .Q(\q_m_2_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[6] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\q_m_2[6]_i_1_n_0 ),
        .Q(\q_m_2_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[7] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\q_m_2[7]_i_1_n_0 ),
        .Q(\q_m_2_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \q_m_2_reg[8] 
       (.C(PixelClk),
        .CE(1'b1),
        .D(\q_m_2[8]_i_1__1_n_0 ),
        .Q(q_m_2),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "rgb2dvi" *) (* kClkPrimitive = "MMCM" *) (* kClkRange = "1" *) 
(* kGenerateSerialClk = "FALSE" *) (* kRstActiveHigh = "FALSE" *) 
module system_rgb2dvi_0_1__rgb2dvi
   (TMDS_Clk_p,
    TMDS_Clk_n,
    TMDS_Data_p,
    TMDS_Data_n,
    aRst,
    aRst_n,
    vid_pData,
    vid_pVDE,
    vid_pHSync,
    vid_pVSync,
    PixelClk,
    SerialClk);
  output TMDS_Clk_p;
  output TMDS_Clk_n;
  output [2:0]TMDS_Data_p;
  output [2:0]TMDS_Data_n;
  input aRst;
  input aRst_n;
  input [23:0]vid_pData;
  input vid_pVDE;
  input vid_pHSync;
  input vid_pVSync;
  input PixelClk;
  input SerialClk;

  wire \DataEncoders[0].DataEncoder_n_0 ;
  wire PixelClk;
  wire SerialClk;
  wire TMDS_Clk_n;
  wire TMDS_Clk_p;
  wire [2:0]TMDS_Data_n;
  wire [2:0]TMDS_Data_p;
  wire [9:0]\pDataOutRaw[0] ;
  wire [9:0]\pDataOutRaw[1] ;
  wire [9:0]\pDataOutRaw[2] ;
  wire pRstLck;
  wire [23:0]vid_pData;
  wire vid_pHSync;
  wire vid_pVDE;
  wire vid_pVSync;
  wire NLW_LockLostReset_aRst_n_UNCONNECTED;

  system_rgb2dvi_0_1__OutputSERDES ClockSerializer
       (.PixelClk(PixelClk),
        .SerialClk(SerialClk),
        .TMDS_Clk_n(TMDS_Clk_n),
        .TMDS_Clk_p(TMDS_Clk_p),
        .aRst(pRstLck));
  system_rgb2dvi_0_1__TMDS_Encoder \DataEncoders[0].DataEncoder 
       (.PixelClk(PixelClk),
        .Q(\pDataOutRaw[0] ),
        .SR(\DataEncoders[0].DataEncoder_n_0 ),
        .vid_pData(vid_pData[15:8]),
        .vid_pHSync(vid_pHSync),
        .vid_pVDE(vid_pVDE),
        .vid_pVSync(vid_pVSync));
  system_rgb2dvi_0_1__OutputSERDES_0 \DataEncoders[0].DataSerializer 
       (.PixelClk(PixelClk),
        .SerialClk(SerialClk),
        .TMDS_Data_n(TMDS_Data_n[0]),
        .TMDS_Data_p(TMDS_Data_p[0]),
        .aRst(pRstLck),
        .pDataOut(\pDataOutRaw[0] ));
  system_rgb2dvi_0_1__TMDS_Encoder_1 \DataEncoders[1].DataEncoder 
       (.PixelClk(PixelClk),
        .Q(\pDataOutRaw[1] ),
        .SR(\DataEncoders[0].DataEncoder_n_0 ),
        .vid_pData(vid_pData[7:0]));
  system_rgb2dvi_0_1__OutputSERDES_2 \DataEncoders[1].DataSerializer 
       (.PixelClk(PixelClk),
        .SerialClk(SerialClk),
        .TMDS_Data_n(TMDS_Data_n[1]),
        .TMDS_Data_p(TMDS_Data_p[1]),
        .out(pRstLck),
        .pDataOut(\pDataOutRaw[1] ));
  system_rgb2dvi_0_1__TMDS_Encoder_3 \DataEncoders[2].DataEncoder 
       (.PixelClk(PixelClk),
        .Q(\pDataOutRaw[2] ),
        .SR(\DataEncoders[0].DataEncoder_n_0 ),
        .vid_pData(vid_pData[23:16]));
  system_rgb2dvi_0_1__OutputSERDES_4 \DataEncoders[2].DataSerializer 
       (.PixelClk(PixelClk),
        .SerialClk(SerialClk),
        .TMDS_Data_n(TMDS_Data_n[2]),
        .TMDS_Data_p(TMDS_Data_p[2]),
        .out(pRstLck),
        .pDataOut(\pDataOutRaw[2] ));
  system_rgb2dvi_0_1__ResetBridge LockLostReset
       (.PixelClk(PixelClk),
        .aRst_n(NLW_LockLostReset_aRst_n_UNCONNECTED),
        .out(pRstLck));
endmodule

(* CHECK_LICENSE_TYPE = "system_rst_clk_wiz_0_200M_0,proc_sys_reset,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "proc_sys_reset,Vivado 2020.1" *) 
module system_rst_clk_wiz_0_200M_0
   (slowest_sync_clk,
    ext_reset_in,
    aux_reset_in,
    mb_debug_sys_rst,
    dcm_locked,
    mb_reset,
    bus_struct_reset,
    peripheral_reset,
    interconnect_aresetn,
    peripheral_aresetn);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clock CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clock, ASSOCIATED_RESET mb_reset:bus_struct_reset:interconnect_aresetn:peripheral_aresetn:peripheral_reset, FREQ_HZ 200000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1, INSERT_VIP 0" *) input slowest_sync_clk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 ext_reset RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ext_reset, BOARD.ASSOCIATED_PARAM RESET_BOARD_INTERFACE, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input ext_reset_in;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 aux_reset RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME aux_reset, POLARITY ACTIVE_LOW, INSERT_VIP 0" *) input aux_reset_in;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 dbg_reset RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME dbg_reset, POLARITY ACTIVE_HIGH, INSERT_VIP 0" *) input mb_debug_sys_rst;
  input dcm_locked;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 mb_rst RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME mb_rst, POLARITY ACTIVE_HIGH, TYPE PROCESSOR, INSERT_VIP 0" *) output mb_reset;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 bus_struct_reset RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME bus_struct_reset, POLARITY ACTIVE_HIGH, TYPE INTERCONNECT, INSERT_VIP 0" *) output [0:0]bus_struct_reset;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 peripheral_high_rst RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME peripheral_high_rst, POLARITY ACTIVE_HIGH, TYPE PERIPHERAL, INSERT_VIP 0" *) output [0:0]peripheral_reset;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 interconnect_low_rst RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME interconnect_low_rst, POLARITY ACTIVE_LOW, TYPE INTERCONNECT, INSERT_VIP 0" *) output [0:0]interconnect_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 peripheral_low_rst RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME peripheral_low_rst, POLARITY ACTIVE_LOW, TYPE PERIPHERAL, INSERT_VIP 0" *) output [0:0]peripheral_aresetn;

  wire [0:0]bus_struct_reset;
  wire ext_reset_in;
  wire [0:0]interconnect_aresetn;
  wire mb_debug_sys_rst;
  wire mb_reset;
  wire [0:0]peripheral_aresetn;
  wire slowest_sync_clk;
  wire NLW_U0_aux_reset_in_UNCONNECTED;
  wire NLW_U0_dcm_locked_UNCONNECTED;
  wire [0:0]NLW_U0_peripheral_reset_UNCONNECTED;

  (* C_AUX_RESET_HIGH = "1'b0" *) 
  (* C_AUX_RST_WIDTH = "4" *) 
  (* C_EXT_RESET_HIGH = "1'b0" *) 
  (* C_EXT_RST_WIDTH = "4" *) 
  (* C_FAMILY = "spartan7" *) 
  (* C_NUM_BUS_RST = "1" *) 
  (* C_NUM_INTERCONNECT_ARESETN = "1" *) 
  (* C_NUM_PERP_ARESETN = "1" *) 
  (* C_NUM_PERP_RST = "1" *) 
  system_rst_clk_wiz_0_200M_0__proc_sys_reset U0
       (.aux_reset_in(NLW_U0_aux_reset_in_UNCONNECTED),
        .bus_struct_reset(bus_struct_reset),
        .dcm_locked(NLW_U0_dcm_locked_UNCONNECTED),
        .ext_reset_in(ext_reset_in),
        .interconnect_aresetn(interconnect_aresetn),
        .mb_debug_sys_rst(mb_debug_sys_rst),
        .mb_reset(mb_reset),
        .peripheral_aresetn(peripheral_aresetn),
        .peripheral_reset(NLW_U0_peripheral_reset_UNCONNECTED[0]),
        .slowest_sync_clk(slowest_sync_clk));
endmodule

(* ORIG_REF_NAME = "cdc_sync" *) 
module system_rst_clk_wiz_0_200M_0__cdc_sync
   (lpf_asr_reg,
    scndry_out,
    lpf_asr,
    p_1_in,
    p_2_in,
    asr_lpf,
    aux_reset_in,
    slowest_sync_clk);
  output lpf_asr_reg;
  output scndry_out;
  input lpf_asr;
  input p_1_in;
  input p_2_in;
  input [0:0]asr_lpf;
  input aux_reset_in;
  input slowest_sync_clk;

  wire [0:0]asr_lpf;
  wire lpf_asr;
  wire lpf_asr_reg;
  wire p_1_in;
  wire p_2_in;
  wire s_level_out_d1_cdc_to;
  wire s_level_out_d2;
  wire s_level_out_d3;
  wire scndry_out;
  wire slowest_sync_clk;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(scndry_out),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEAAAAAA8)) 
    lpf_asr_i_1
       (.I0(lpf_asr),
        .I1(p_1_in),
        .I2(p_2_in),
        .I3(scndry_out),
        .I4(asr_lpf),
        .O(lpf_asr_reg));
endmodule

(* ORIG_REF_NAME = "cdc_sync" *) 
module system_rst_clk_wiz_0_200M_0__cdc_sync_0
   (lpf_exr_reg,
    scndry_out,
    lpf_exr,
    p_1_in4_in,
    p_2_in3_in,
    exr_lpf,
    mb_debug_sys_rst,
    ext_reset_in,
    slowest_sync_clk);
  output lpf_exr_reg;
  output scndry_out;
  input lpf_exr;
  input p_1_in4_in;
  input p_2_in3_in;
  input [0:0]exr_lpf;
  input mb_debug_sys_rst;
  input ext_reset_in;
  input slowest_sync_clk;

  wire exr_d1;
  wire [0:0]exr_lpf;
  wire ext_reset_in;
  wire lpf_exr;
  wire lpf_exr_reg;
  wire mb_debug_sys_rst;
  wire p_1_in4_in;
  wire p_2_in3_in;
  wire s_level_out_d1_cdc_to;
  wire s_level_out_d2;
  wire s_level_out_d3;
  wire scndry_out;
  wire slowest_sync_clk;

  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(exr_d1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hB)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_IN_cdc_to_i_1 
       (.I0(mb_debug_sys_rst),
        .I1(ext_reset_in),
        .O(exr_d1));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d2 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d3 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \GENERATE_LEVEL_P_S_CDC.SINGLE_BIT.CROSS_PLEVEL_IN2SCNDRY_s_level_out_d4 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(scndry_out),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEAAAAAA8)) 
    lpf_exr_i_1
       (.I0(lpf_exr),
        .I1(p_1_in4_in),
        .I2(p_2_in3_in),
        .I3(scndry_out),
        .I4(exr_lpf),
        .O(lpf_exr_reg));
endmodule

(* ORIG_REF_NAME = "lpf" *) 
module system_rst_clk_wiz_0_200M_0__lpf
   (lpf_int,
    slowest_sync_clk,
    dcm_locked,
    mb_debug_sys_rst,
    ext_reset_in,
    aux_reset_in);
  output lpf_int;
  input slowest_sync_clk;
  input dcm_locked;
  input mb_debug_sys_rst;
  input ext_reset_in;
  input aux_reset_in;

  wire \ACTIVE_LOW_AUX.ACT_LO_AUX_n_0 ;
  wire \ACTIVE_LOW_EXT.ACT_LO_EXT_n_0 ;
  wire Q;
  wire [0:0]asr_lpf;
  wire [0:0]exr_lpf;
  wire ext_reset_in;
  wire lpf_asr;
  wire lpf_exr;
  wire lpf_int;
  wire lpf_int0__0;
  wire mb_debug_sys_rst;
  wire p_1_in;
  wire p_1_in4_in;
  wire p_2_in;
  wire p_2_in3_in;
  wire p_3_in1_in;
  wire p_3_in6_in;
  wire slowest_sync_clk;
  wire \NLW_ACTIVE_LOW_AUX.ACT_LO_AUX_aux_reset_in_UNCONNECTED ;

  system_rst_clk_wiz_0_200M_0__cdc_sync \ACTIVE_LOW_AUX.ACT_LO_AUX 
       (.asr_lpf(asr_lpf),
        .aux_reset_in(\NLW_ACTIVE_LOW_AUX.ACT_LO_AUX_aux_reset_in_UNCONNECTED ),
        .lpf_asr(lpf_asr),
        .lpf_asr_reg(\ACTIVE_LOW_AUX.ACT_LO_AUX_n_0 ),
        .p_1_in(p_1_in),
        .p_2_in(p_2_in),
        .scndry_out(p_3_in1_in),
        .slowest_sync_clk(slowest_sync_clk));
  system_rst_clk_wiz_0_200M_0__cdc_sync_0 \ACTIVE_LOW_EXT.ACT_LO_EXT 
       (.exr_lpf(exr_lpf),
        .ext_reset_in(ext_reset_in),
        .lpf_exr(lpf_exr),
        .lpf_exr_reg(\ACTIVE_LOW_EXT.ACT_LO_EXT_n_0 ),
        .mb_debug_sys_rst(mb_debug_sys_rst),
        .p_1_in4_in(p_1_in4_in),
        .p_2_in3_in(p_2_in3_in),
        .scndry_out(p_3_in6_in),
        .slowest_sync_clk(slowest_sync_clk));
  FDRE #(
    .INIT(1'b0)) 
    \AUX_LPF[1].asr_lpf_reg[1] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_3_in1_in),
        .Q(p_2_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \AUX_LPF[2].asr_lpf_reg[2] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_2_in),
        .Q(p_1_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \AUX_LPF[3].asr_lpf_reg[3] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_1_in),
        .Q(asr_lpf),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \EXT_LPF[1].exr_lpf_reg[1] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_3_in6_in),
        .Q(p_2_in3_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \EXT_LPF[2].exr_lpf_reg[2] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_2_in3_in),
        .Q(p_1_in4_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \EXT_LPF[3].exr_lpf_reg[3] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_1_in4_in),
        .Q(exr_lpf),
        .R(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "SRL16" *) 
  (* srl_name = "U0/\EXT_LPF/POR_SRL_I " *) 
  SRL16E #(
    .INIT(16'hFFFF)) 
    POR_SRL_I
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b1),
        .A3(1'b1),
        .CE(1'b1),
        .CLK(slowest_sync_clk),
        .D(1'b0),
        .Q(Q));
  FDRE #(
    .INIT(1'b0)) 
    lpf_asr_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(\ACTIVE_LOW_AUX.ACT_LO_AUX_n_0 ),
        .Q(lpf_asr),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    lpf_exr_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(\ACTIVE_LOW_EXT.ACT_LO_EXT_n_0 ),
        .Q(lpf_exr),
        .R(1'b0));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    lpf_int0
       (.I0(lpf_exr),
        .I1(lpf_asr),
        .I2(Q),
        .O(lpf_int0__0));
  FDRE #(
    .INIT(1'b0)) 
    lpf_int_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(lpf_int0__0),
        .Q(lpf_int),
        .R(1'b0));
endmodule

(* C_AUX_RESET_HIGH = "1'b0" *) (* C_AUX_RST_WIDTH = "4" *) (* C_EXT_RESET_HIGH = "1'b0" *) 
(* C_EXT_RST_WIDTH = "4" *) (* C_FAMILY = "spartan7" *) (* C_NUM_BUS_RST = "1" *) 
(* C_NUM_INTERCONNECT_ARESETN = "1" *) (* C_NUM_PERP_ARESETN = "1" *) (* C_NUM_PERP_RST = "1" *) 
(* ORIG_REF_NAME = "proc_sys_reset" *) 
module system_rst_clk_wiz_0_200M_0__proc_sys_reset
   (slowest_sync_clk,
    ext_reset_in,
    aux_reset_in,
    mb_debug_sys_rst,
    dcm_locked,
    mb_reset,
    bus_struct_reset,
    peripheral_reset,
    interconnect_aresetn,
    peripheral_aresetn);
  input slowest_sync_clk;
  input ext_reset_in;
  input aux_reset_in;
  input mb_debug_sys_rst;
  input dcm_locked;
  output mb_reset;
  output [0:0]bus_struct_reset;
  output [0:0]peripheral_reset;
  output [0:0]interconnect_aresetn;
  output [0:0]peripheral_aresetn;

  wire Bsr_out;
  wire MB_out;
  wire SEQ_n_3;
  wire SEQ_n_4;
  wire [0:0]bus_struct_reset;
  wire ext_reset_in;
  wire [0:0]interconnect_aresetn;
  wire lpf_int;
  wire mb_debug_sys_rst;
  wire mb_reset;
  wire [0:0]peripheral_aresetn;
  wire slowest_sync_clk;
  wire NLW_EXT_LPF_aux_reset_in_UNCONNECTED;
  wire NLW_EXT_LPF_dcm_locked_UNCONNECTED;
  wire NLW_SEQ_Pr_out_UNCONNECTED;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(SEQ_n_3),
        .Q(interconnect_aresetn),
        .R(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(SEQ_n_4),
        .Q(peripheral_aresetn),
        .R(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \BSR_OUT_DFF[0].FDRE_BSR 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(Bsr_out),
        .Q(bus_struct_reset),
        .R(1'b0));
  system_rst_clk_wiz_0_200M_0__lpf EXT_LPF
       (.aux_reset_in(NLW_EXT_LPF_aux_reset_in_UNCONNECTED),
        .dcm_locked(NLW_EXT_LPF_dcm_locked_UNCONNECTED),
        .ext_reset_in(ext_reset_in),
        .lpf_int(lpf_int),
        .mb_debug_sys_rst(mb_debug_sys_rst),
        .slowest_sync_clk(slowest_sync_clk));
  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b1),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    FDRE_inst
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(MB_out),
        .Q(mb_reset),
        .R(1'b0));
  system_rst_clk_wiz_0_200M_0__sequence_psr SEQ
       (.Bsr_out(Bsr_out),
        .MB_out(MB_out),
        .Pr_out(NLW_SEQ_Pr_out_UNCONNECTED),
        .bsr_reg_0(SEQ_n_3),
        .lpf_int(lpf_int),
        .pr_reg_0(SEQ_n_4),
        .slowest_sync_clk(slowest_sync_clk));
endmodule

(* ORIG_REF_NAME = "sequence_psr" *) 
module system_rst_clk_wiz_0_200M_0__sequence_psr
   (MB_out,
    Bsr_out,
    Pr_out,
    bsr_reg_0,
    pr_reg_0,
    lpf_int,
    slowest_sync_clk);
  output MB_out;
  output Bsr_out;
  output Pr_out;
  output bsr_reg_0;
  output pr_reg_0;
  input lpf_int;
  input slowest_sync_clk;

  wire Bsr_out;
  wire Core_i_1_n_0;
  wire MB_out;
  wire \^Pr_out ;
  wire \bsr_dec_reg_n_0_[0] ;
  wire \bsr_dec_reg_n_0_[2] ;
  wire bsr_i_1_n_0;
  wire bsr_reg_0;
  wire \core_dec[0]_i_1_n_0 ;
  wire \core_dec[2]_i_1_n_0 ;
  wire \core_dec_reg_n_0_[0] ;
  wire \core_dec_reg_n_0_[1] ;
  wire from_sys_i_1_n_0;
  wire lpf_int;
  wire p_0_in;
  wire [2:0]p_3_out;
  wire [2:0]p_5_out;
  wire pr_dec0__0;
  wire \pr_dec_reg_n_0_[0] ;
  wire \pr_dec_reg_n_0_[2] ;
  wire pr_i_1_n_0;
  wire pr_reg_0;
  wire seq_clr;
  wire [5:0]seq_cnt;
  wire seq_cnt_en;
  wire slowest_sync_clk;

  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \ACTIVE_LOW_BSR_OUT_DFF[0].FDRE_BSR_N_i_1 
       (.I0(Bsr_out),
        .O(bsr_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \ACTIVE_LOW_PR_OUT_DFF[0].FDRE_PER_N_i_1 
       (.I0(\^Pr_out ),
        .O(pr_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h2)) 
    Core_i_1
       (.I0(MB_out),
        .I1(p_0_in),
        .O(Core_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    Core_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(Core_i_1_n_0),
        .Q(MB_out),
        .S(lpf_int));
  system_rst_clk_wiz_0_200M_0__upcnt_n SEQ_COUNTER
       (.Q(seq_cnt),
        .seq_clr(seq_clr),
        .seq_cnt_en(seq_cnt_en),
        .slowest_sync_clk(slowest_sync_clk));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h0090)) 
    \bsr_dec[0]_i_1 
       (.I0(seq_cnt_en),
        .I1(seq_cnt[4]),
        .I2(seq_cnt[3]),
        .I3(seq_cnt[5]),
        .O(p_5_out[0]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \bsr_dec[2]_i_1 
       (.I0(\core_dec_reg_n_0_[1] ),
        .I1(\bsr_dec_reg_n_0_[0] ),
        .O(p_5_out[2]));
  FDRE #(
    .INIT(1'b0)) 
    \bsr_dec_reg[0] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_5_out[0]),
        .Q(\bsr_dec_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bsr_dec_reg[2] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_5_out[2]),
        .Q(\bsr_dec_reg_n_0_[2] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h2)) 
    bsr_i_1
       (.I0(Bsr_out),
        .I1(\bsr_dec_reg_n_0_[2] ),
        .O(bsr_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    bsr_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(bsr_i_1_n_0),
        .Q(Bsr_out),
        .S(lpf_int));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h9000)) 
    \core_dec[0]_i_1 
       (.I0(seq_cnt_en),
        .I1(seq_cnt[4]),
        .I2(seq_cnt[3]),
        .I3(seq_cnt[5]),
        .O(\core_dec[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \core_dec[2]_i_1 
       (.I0(\core_dec_reg_n_0_[1] ),
        .I1(\core_dec_reg_n_0_[0] ),
        .O(\core_dec[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \core_dec_reg[0] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(\core_dec[0]_i_1_n_0 ),
        .Q(\core_dec_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \core_dec_reg[1] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(pr_dec0__0),
        .Q(\core_dec_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \core_dec_reg[2] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(\core_dec[2]_i_1_n_0 ),
        .Q(p_0_in),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h8)) 
    from_sys_i_1
       (.I0(MB_out),
        .I1(seq_cnt_en),
        .O(from_sys_i_1_n_0));
  FDSE #(
    .INIT(1'b0)) 
    from_sys_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(from_sys_i_1_n_0),
        .Q(seq_cnt_en),
        .S(lpf_int));
  LUT4 #(
    .INIT(16'h0018)) 
    pr_dec0
       (.I0(seq_cnt_en),
        .I1(seq_cnt[0]),
        .I2(seq_cnt[2]),
        .I3(seq_cnt[1]),
        .O(pr_dec0__0));
  LUT4 #(
    .INIT(16'h0480)) 
    \pr_dec[0]_i_1 
       (.I0(seq_cnt_en),
        .I1(seq_cnt[3]),
        .I2(seq_cnt[5]),
        .I3(seq_cnt[4]),
        .O(p_3_out[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \pr_dec[2]_i_1 
       (.I0(\core_dec_reg_n_0_[1] ),
        .I1(\pr_dec_reg_n_0_[0] ),
        .O(p_3_out[2]));
  FDRE #(
    .INIT(1'b0)) 
    \pr_dec_reg[0] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_3_out[0]),
        .Q(\pr_dec_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pr_dec_reg[2] 
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(p_3_out[2]),
        .Q(\pr_dec_reg_n_0_[2] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h2)) 
    pr_i_1
       (.I0(\^Pr_out ),
        .I1(\pr_dec_reg_n_0_[2] ),
        .O(pr_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    pr_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(pr_i_1_n_0),
        .Q(\^Pr_out ),
        .S(lpf_int));
  FDRE #(
    .INIT(1'b0)) 
    seq_clr_reg
       (.C(slowest_sync_clk),
        .CE(1'b1),
        .D(1'b1),
        .Q(seq_clr),
        .R(lpf_int));
endmodule

(* ORIG_REF_NAME = "upcnt_n" *) 
module system_rst_clk_wiz_0_200M_0__upcnt_n
   (Q,
    seq_clr,
    seq_cnt_en,
    slowest_sync_clk);
  output [5:0]Q;
  input seq_clr;
  input seq_cnt_en;
  input slowest_sync_clk;

  wire [5:0]Q;
  wire clear;
  wire [5:0]q_int0;
  wire seq_clr;
  wire seq_cnt_en;
  wire slowest_sync_clk;

  LUT1 #(
    .INIT(2'h1)) 
    \q_int[0]_i_1 
       (.I0(Q[0]),
        .O(q_int0[0]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \q_int[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(q_int0[1]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \q_int[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(q_int0[2]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \q_int[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(q_int0[3]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \q_int[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(q_int0[4]));
  LUT1 #(
    .INIT(2'h1)) 
    \q_int[5]_i_1 
       (.I0(seq_clr),
        .O(clear));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \q_int[5]_i_2 
       (.I0(Q[3]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[4]),
        .I5(Q[5]),
        .O(q_int0[5]));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[0] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[0]),
        .Q(Q[0]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[1] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[1]),
        .Q(Q[1]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[2] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[2]),
        .Q(Q[2]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[3] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[3]),
        .Q(Q[3]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[4] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[4]),
        .Q(Q[4]),
        .R(clear));
  FDRE #(
    .INIT(1'b1)) 
    \q_int_reg[5] 
       (.C(slowest_sync_clk),
        .CE(seq_cnt_en),
        .D(q_int0[5]),
        .Q(Q[5]),
        .R(clear));
endmodule

(* ECO_CHECKSUM = "1c133af2" *) (* POWER_OPT_BRAM_CDC = "0" *) (* POWER_OPT_BRAM_SR_ADDR = "0" *) 
(* POWER_OPT_LOOPED_NET_PERCENTAGE = "0" *) 
(* NotValidForBitStream *)
module system_wrapper
   (TMDS_0_clk_n,
    TMDS_0_clk_p,
    TMDS_0_data_n,
    TMDS_0_data_p,
    UART_0_rxd,
    UART_0_txd,
    buttons,
    cam_gpio,
    cam_iic_scl_io,
    cam_iic_sda_io,
    clk_in1_0,
    clk_rxn_0,
    clk_rxp_0,
    data_lp_n_0,
    data_lp_p_0,
    data_rxn_0,
    data_rxp_0,
    led_tri_o);
  output TMDS_0_clk_n;
  output TMDS_0_clk_p;
  output [2:0]TMDS_0_data_n;
  output [2:0]TMDS_0_data_p;
  input UART_0_rxd;
  output UART_0_txd;
  input [1:0]buttons;
  output [0:0]cam_gpio;
  inout cam_iic_scl_io;
  inout cam_iic_sda_io;
  input clk_in1_0;
  input clk_rxn_0;
  input clk_rxp_0;
  input [0:0]data_lp_n_0;
  input [0:0]data_lp_p_0;
  input [1:0]data_rxn_0;
  input [1:0]data_rxp_0;
  output [1:0]led_tri_o;

  wire TMDS_0_clk_n;
  wire TMDS_0_clk_p;
  wire [2:0]TMDS_0_data_n;
  wire [2:0]TMDS_0_data_p;
  wire UART_0_rxd;
  wire UART_0_rxd_IBUF;
  wire UART_0_txd;
  wire UART_0_txd_OBUF;
  wire [1:0]buttons;
  wire [1:0]buttons_IBUF;
  wire [0:0]cam_gpio;
  wire [0:0]cam_gpio_OBUF;
  wire cam_iic_scl_i;
  (* DRIVE = "12" *) (* IBUF_LOW_PWR *) (* SLEW = "SLOW" *) wire cam_iic_scl_io;
  wire cam_iic_scl_o;
  wire cam_iic_scl_t;
  wire cam_iic_sda_i;
  (* DRIVE = "12" *) (* IBUF_LOW_PWR *) (* SLEW = "SLOW" *) wire cam_iic_sda_io;
  wire cam_iic_sda_o;
  wire cam_iic_sda_t;
  (* IBUF_LOW_PWR *) wire clk_in1_0;
  (* DIFF_TERM = 0 *) (* IBUF_LOW_PWR *) wire clk_rxn_0;
  (* DIFF_TERM = 0 *) (* IBUF_LOW_PWR *) wire clk_rxp_0;
  wire [0:0]data_lp_n_0;
  wire [0:0]data_lp_n_0_IBUF;
  wire [0:0]data_lp_p_0;
  wire [0:0]data_lp_p_0_IBUF;
  (* DIFF_TERM = 0 *) (* IBUF_LOW_PWR *) wire [1:0]data_rxn_0;
  (* DIFF_TERM = 0 *) (* IBUF_LOW_PWR *) wire [1:0]data_rxp_0;
  wire [1:0]led_tri_o;
  wire [1:0]led_tri_o_OBUF;
PULLUP pullup_cam_iic_scl_io
       (.O(cam_iic_scl_io));
PULLUP pullup_cam_iic_sda_io
       (.O(cam_iic_sda_io));

  IBUF UART_0_rxd_IBUF_inst
       (.I(UART_0_rxd),
        .O(UART_0_rxd_IBUF));
  OBUF UART_0_txd_OBUF_inst
       (.I(UART_0_txd_OBUF),
        .O(UART_0_txd));
  IBUF \buttons_IBUF[0]_inst 
       (.I(buttons[0]),
        .O(buttons_IBUF[0]));
  IBUF \buttons_IBUF[1]_inst 
       (.I(buttons[1]),
        .O(buttons_IBUF[1]));
  OBUF \cam_gpio_OBUF[0]_inst 
       (.I(cam_gpio_OBUF),
        .O(cam_gpio));
  (* BOX_TYPE = "PRIMITIVE" *) 
  IOBUF #(
    .IOSTANDARD("DEFAULT")) 
    cam_iic_scl_iobuf
       (.I(cam_iic_scl_o),
        .IO(cam_iic_scl_io),
        .O(cam_iic_scl_i),
        .T(cam_iic_scl_t));
  (* BOX_TYPE = "PRIMITIVE" *) 
  IOBUF #(
    .IOSTANDARD("DEFAULT")) 
    cam_iic_sda_iobuf
       (.I(cam_iic_sda_o),
        .IO(cam_iic_sda_io),
        .O(cam_iic_sda_i),
        .T(cam_iic_sda_t));
  IBUF \data_lp_n_0_IBUF[0]_inst 
       (.I(data_lp_n_0),
        .O(data_lp_n_0_IBUF));
  IBUF \data_lp_p_0_IBUF[0]_inst 
       (.I(data_lp_p_0),
        .O(data_lp_p_0_IBUF));
  OBUF \led_tri_o_OBUF[0]_inst 
       (.I(led_tri_o_OBUF[0]),
        .O(led_tri_o[0]));
  OBUF \led_tri_o_OBUF[1]_inst 
       (.I(led_tri_o_OBUF[1]),
        .O(led_tri_o[1]));
  (* HW_HANDOFF = "system.hwdef" *) 
  system system_i
       (.TMDS_0_clk_n(TMDS_0_clk_n),
        .TMDS_0_clk_p(TMDS_0_clk_p),
        .TMDS_0_data_n(TMDS_0_data_n),
        .TMDS_0_data_p(TMDS_0_data_p),
        .UART_0_rxd(UART_0_rxd_IBUF),
        .UART_0_txd(UART_0_txd_OBUF),
        .buttons(buttons_IBUF),
        .cam_gpio(cam_gpio_OBUF),
        .cam_iic_scl_i(cam_iic_scl_i),
        .cam_iic_scl_o(cam_iic_scl_o),
        .cam_iic_scl_t(cam_iic_scl_t),
        .cam_iic_sda_i(cam_iic_sda_i),
        .cam_iic_sda_o(cam_iic_sda_o),
        .cam_iic_sda_t(cam_iic_sda_t),
        .clk_in1_0(clk_in1_0),
        .clk_rxn_0(clk_rxn_0),
        .clk_rxp_0(clk_rxp_0),
        .data_lp_n_0(data_lp_n_0_IBUF),
        .data_lp_p_0(data_lp_p_0_IBUF),
        .data_rxn_0(data_rxn_0),
        .data_rxp_0(data_rxp_0),
        .led_tri_o(led_tri_o_OBUF));
endmodule

(* CHECK_LICENSE_TYPE = "system_xbar_0,axi_crossbar_v2_1_22_axi_crossbar,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi_crossbar_v2_1_22_axi_crossbar,Vivado 2020.1" *) 
module system_xbar_0
   (aclk,
    aresetn,
    s_axi_awaddr,
    s_axi_awprot,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arprot,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_awaddr,
    m_axi_awprot,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bresp,
    m_axi_bvalid,
    m_axi_bready,
    m_axi_araddr,
    m_axi_arprot,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rvalid,
    m_axi_rready);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CLKIF CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME CLKIF, FREQ_HZ 200000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1, ASSOCIATED_BUSIF M00_AXI:M01_AXI:M02_AXI:M03_AXI:M04_AXI:M05_AXI:M06_AXI:M07_AXI:M08_AXI:M09_AXI:M10_AXI:M11_AXI:M12_AXI:M13_AXI:M14_AXI:M15_AXI:S00_AXI:S01_AXI:S02_AXI:S03_AXI:S04_AXI:S05_AXI:S06_AXI:S07_AXI:S08_AXI:S09_AXI:S10_AXI:S11_AXI:S12_AXI:S13_AXI:S14_AXI:S15_AXI, ASSOCIATED_RESET ARESETN, INSERT_VIP 0" *) input aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 RSTIF RST" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME RSTIF, POLARITY ACTIVE_LOW, INSERT_VIP 0, TYPE INTERCONNECT" *) input aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWADDR" *) input [31:0]s_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWPROT" *) input [2:0]s_axi_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWVALID" *) input [0:0]s_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI AWREADY" *) output [0:0]s_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI WDATA" *) input [31:0]s_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI WSTRB" *) input [3:0]s_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI WVALID" *) input [0:0]s_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI WREADY" *) output [0:0]s_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI BRESP" *) output [1:0]s_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI BVALID" *) output [0:0]s_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI BREADY" *) input [0:0]s_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARADDR" *) input [31:0]s_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARPROT" *) input [2:0]s_axi_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARVALID" *) input [0:0]s_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI ARREADY" *) output [0:0]s_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI RDATA" *) output [31:0]s_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI RRESP" *) output [1:0]s_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI RVALID" *) output [0:0]s_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S00_AXI RREADY" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME S00_AXI, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 200000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 1, NUM_WRITE_OUTSTANDING 1, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) input [0:0]s_axi_rready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI AWADDR [31:0] [31:0], xilinx.com:interface:aximm:1.0 M01_AXI AWADDR [31:0] [63:32], xilinx.com:interface:aximm:1.0 M02_AXI AWADDR [31:0] [95:64]" *) output [95:0]m_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI AWPROT [2:0] [2:0], xilinx.com:interface:aximm:1.0 M01_AXI AWPROT [2:0] [5:3], xilinx.com:interface:aximm:1.0 M02_AXI AWPROT [2:0] [8:6]" *) output [8:0]m_axi_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI AWVALID [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI AWVALID [0:0] [1:1], xilinx.com:interface:aximm:1.0 M02_AXI AWVALID [0:0] [2:2]" *) output [2:0]m_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI AWREADY [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI AWREADY [0:0] [1:1], xilinx.com:interface:aximm:1.0 M02_AXI AWREADY [0:0] [2:2]" *) input [2:0]m_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI WDATA [31:0] [31:0], xilinx.com:interface:aximm:1.0 M01_AXI WDATA [31:0] [63:32], xilinx.com:interface:aximm:1.0 M02_AXI WDATA [31:0] [95:64]" *) output [95:0]m_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI WSTRB [3:0] [3:0], xilinx.com:interface:aximm:1.0 M01_AXI WSTRB [3:0] [7:4], xilinx.com:interface:aximm:1.0 M02_AXI WSTRB [3:0] [11:8]" *) output [11:0]m_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI WVALID [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI WVALID [0:0] [1:1], xilinx.com:interface:aximm:1.0 M02_AXI WVALID [0:0] [2:2]" *) output [2:0]m_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI WREADY [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI WREADY [0:0] [1:1], xilinx.com:interface:aximm:1.0 M02_AXI WREADY [0:0] [2:2]" *) input [2:0]m_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI BRESP [1:0] [1:0], xilinx.com:interface:aximm:1.0 M01_AXI BRESP [1:0] [3:2], xilinx.com:interface:aximm:1.0 M02_AXI BRESP [1:0] [5:4]" *) input [5:0]m_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI BVALID [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI BVALID [0:0] [1:1], xilinx.com:interface:aximm:1.0 M02_AXI BVALID [0:0] [2:2]" *) input [2:0]m_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI BREADY [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI BREADY [0:0] [1:1], xilinx.com:interface:aximm:1.0 M02_AXI BREADY [0:0] [2:2]" *) output [2:0]m_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI ARADDR [31:0] [31:0], xilinx.com:interface:aximm:1.0 M01_AXI ARADDR [31:0] [63:32], xilinx.com:interface:aximm:1.0 M02_AXI ARADDR [31:0] [95:64]" *) output [95:0]m_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI ARPROT [2:0] [2:0], xilinx.com:interface:aximm:1.0 M01_AXI ARPROT [2:0] [5:3], xilinx.com:interface:aximm:1.0 M02_AXI ARPROT [2:0] [8:6]" *) output [8:0]m_axi_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI ARVALID [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI ARVALID [0:0] [1:1], xilinx.com:interface:aximm:1.0 M02_AXI ARVALID [0:0] [2:2]" *) output [2:0]m_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI ARREADY [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI ARREADY [0:0] [1:1], xilinx.com:interface:aximm:1.0 M02_AXI ARREADY [0:0] [2:2]" *) input [2:0]m_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI RDATA [31:0] [31:0], xilinx.com:interface:aximm:1.0 M01_AXI RDATA [31:0] [63:32], xilinx.com:interface:aximm:1.0 M02_AXI RDATA [31:0] [95:64]" *) input [95:0]m_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI RRESP [1:0] [1:0], xilinx.com:interface:aximm:1.0 M01_AXI RRESP [1:0] [3:2], xilinx.com:interface:aximm:1.0 M02_AXI RRESP [1:0] [5:4]" *) input [5:0]m_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI RVALID [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI RVALID [0:0] [1:1], xilinx.com:interface:aximm:1.0 M02_AXI RVALID [0:0] [2:2]" *) input [2:0]m_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 M00_AXI RREADY [0:0] [0:0], xilinx.com:interface:aximm:1.0 M01_AXI RREADY [0:0] [1:1], xilinx.com:interface:aximm:1.0 M02_AXI RREADY [0:0] [2:2]" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME M00_AXI, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 200000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0, XIL_INTERFACENAME M01_AXI, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 200000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0, XIL_INTERFACENAME M02_AXI, DATA_WIDTH 32, PROTOCOL AXI4LITE, FREQ_HZ 200000000, ID_WIDTH 0, ADDR_WIDTH 32, AWUSER_WIDTH 0, ARUSER_WIDTH 0, WUSER_WIDTH 0, RUSER_WIDTH 0, BUSER_WIDTH 0, READ_WRITE_MODE READ_WRITE, HAS_BURST 0, HAS_LOCK 0, HAS_PROT 1, HAS_CACHE 0, HAS_QOS 0, HAS_REGION 0, HAS_WSTRB 1, HAS_BRESP 1, HAS_RRESP 1, SUPPORTS_NARROW_BURST 0, NUM_READ_OUTSTANDING 2, NUM_WRITE_OUTSTANDING 2, MAX_BURST_LENGTH 1, PHASE 0.0, CLK_DOMAIN /clk_wiz_0_clk_out1, NUM_READ_THREADS 1, NUM_WRITE_THREADS 1, RUSER_BITS_PER_BYTE 0, WUSER_BITS_PER_BYTE 0, INSERT_VIP 0" *) output [2:0]m_axi_rready;

  wire aclk;
  wire aresetn;
  wire [95:0]m_axi_araddr;
  wire [2:0]m_axi_arready;
  wire [2:0]m_axi_arvalid;
  wire [95:0]m_axi_awaddr;
  wire [2:0]m_axi_awready;
  wire [2:0]m_axi_awvalid;
  wire [2:0]m_axi_bready;
  wire [2:0]m_axi_bvalid;
  wire [95:0]m_axi_rdata;
  wire [2:0]m_axi_rready;
  wire [2:0]m_axi_rvalid;
  wire [95:0]m_axi_wdata;
  wire [2:0]m_axi_wready;
  wire [2:0]m_axi_wvalid;
  wire [31:0]s_axi_araddr;
  wire [0:0]s_axi_arready;
  wire [0:0]s_axi_arvalid;
  wire [0:0]s_axi_awready;
  wire [0:0]s_axi_awvalid;
  wire [0:0]s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire [0:0]s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire [0:0]s_axi_wready;
  wire [0:0]s_axi_wvalid;
  wire [95:9]NLW_inst_m_axi_araddr_UNCONNECTED;
  wire [5:0]NLW_inst_m_axi_arburst_UNCONNECTED;
  wire [11:0]NLW_inst_m_axi_arcache_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_arid_UNCONNECTED;
  wire [23:0]NLW_inst_m_axi_arlen_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_arlock_UNCONNECTED;
  wire [8:0]NLW_inst_m_axi_arprot_UNCONNECTED;
  wire [11:0]NLW_inst_m_axi_arqos_UNCONNECTED;
  wire [11:0]NLW_inst_m_axi_arregion_UNCONNECTED;
  wire [8:0]NLW_inst_m_axi_arsize_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_aruser_UNCONNECTED;
  wire [95:0]NLW_inst_m_axi_awaddr_UNCONNECTED;
  wire [5:0]NLW_inst_m_axi_awburst_UNCONNECTED;
  wire [11:0]NLW_inst_m_axi_awcache_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_awid_UNCONNECTED;
  wire [23:0]NLW_inst_m_axi_awlen_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_awlock_UNCONNECTED;
  wire [8:0]NLW_inst_m_axi_awprot_UNCONNECTED;
  wire [11:0]NLW_inst_m_axi_awqos_UNCONNECTED;
  wire [11:0]NLW_inst_m_axi_awregion_UNCONNECTED;
  wire [8:0]NLW_inst_m_axi_awsize_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_awuser_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_bid_UNCONNECTED;
  wire [5:0]NLW_inst_m_axi_bresp_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_buser_UNCONNECTED;
  wire [63:11]NLW_inst_m_axi_rdata_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_rid_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_rlast_UNCONNECTED;
  wire [5:0]NLW_inst_m_axi_rresp_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_ruser_UNCONNECTED;
  wire [93:11]NLW_inst_m_axi_wdata_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_wid_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_wlast_UNCONNECTED;
  wire [11:0]NLW_inst_m_axi_wstrb_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_wuser_UNCONNECTED;
  wire [15:9]NLW_inst_s_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_arid_UNCONNECTED;
  wire [7:0]NLW_inst_s_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_inst_s_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_arqos_UNCONNECTED;
  wire [2:0]NLW_inst_s_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_inst_s_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_awid_UNCONNECTED;
  wire [7:0]NLW_inst_s_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_inst_s_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_awqos_UNCONNECTED;
  wire [2:0]NLW_inst_s_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_awuser_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_bid_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_bready_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_buser_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_rid_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_rlast_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_rready_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_ruser_UNCONNECTED;
  wire [29:11]NLW_inst_s_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_wid_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_wlast_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_wuser_UNCONNECTED;

  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "32" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_PROTOCOL = "2" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_SUPPORTS_USER_SIGNALS = "0" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_CONNECTIVITY_MODE = "0" *) 
  (* C_DEBUG = "1" *) 
  (* C_FAMILY = "spartan7" *) 
  (* C_M_AXI_ADDR_WIDTH = "96'b000000000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000" *) 
  (* C_M_AXI_BASE_ADDR = "192'b000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000110000000000000000000000000000000000000000000000000000001000000100000000000000000000000" *) 
  (* C_M_AXI_READ_CONNECTIVITY = "96'b000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001" *) 
  (* C_M_AXI_READ_ISSUING = "96'b000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001" *) 
  (* C_M_AXI_SECURE = "96'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_M_AXI_WRITE_CONNECTIVITY = "96'b000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001" *) 
  (* C_M_AXI_WRITE_ISSUING = "96'b000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001" *) 
  (* C_NUM_ADDR_RANGES = "1" *) 
  (* C_NUM_MASTER_SLOTS = "3" *) 
  (* C_NUM_SLAVE_SLOTS = "1" *) 
  (* C_R_REGISTER = "1" *) 
  (* C_S_AXI_ARB_PRIORITY = "0" *) 
  (* C_S_AXI_BASE_ID = "0" *) 
  (* C_S_AXI_READ_ACCEPTANCE = "1" *) 
  (* C_S_AXI_SINGLE_THREAD = "1" *) 
  (* C_S_AXI_THREAD_ID_WIDTH = "0" *) 
  (* C_S_AXI_WRITE_ACCEPTANCE = "1" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* P_ADDR_DECODE = "1" *) 
  (* P_AXI3 = "1" *) 
  (* P_AXI4 = "0" *) 
  (* P_AXILITE = "2" *) 
  (* P_AXILITE_SIZE = "3'b010" *) 
  (* P_FAMILY = "rtl" *) 
  (* P_INCR = "2'b01" *) 
  (* P_LEN = "8" *) 
  (* P_LOCK = "1" *) 
  (* P_M_AXI_ERR_MODE = "96'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* P_M_AXI_SUPPORTS_READ = "3'b111" *) 
  (* P_M_AXI_SUPPORTS_WRITE = "3'b111" *) 
  (* P_ONES = "65'b11111111111111111111111111111111111111111111111111111111111111111" *) 
  (* P_RANGE_CHECK = "1" *) 
  (* P_S_AXI_BASE_ID = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
  (* P_S_AXI_HIGH_ID = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
  (* P_S_AXI_SUPPORTS_READ = "1'b1" *) 
  (* P_S_AXI_SUPPORTS_WRITE = "1'b1" *) 
  system_xbar_0__axi_crossbar_v2_1_22_axi_crossbar inst
       (.aclk(aclk),
        .aresetn(aresetn),
        .m_axi_araddr({NLW_inst_m_axi_araddr_UNCONNECTED[95:73],m_axi_araddr[72],NLW_inst_m_axi_araddr_UNCONNECTED[71:68],m_axi_araddr[67:66],NLW_inst_m_axi_araddr_UNCONNECTED[65:9],m_axi_araddr[8:0]}),
        .m_axi_arburst(NLW_inst_m_axi_arburst_UNCONNECTED[5:0]),
        .m_axi_arcache(NLW_inst_m_axi_arcache_UNCONNECTED[11:0]),
        .m_axi_arid(NLW_inst_m_axi_arid_UNCONNECTED[2:0]),
        .m_axi_arlen(NLW_inst_m_axi_arlen_UNCONNECTED[23:0]),
        .m_axi_arlock(NLW_inst_m_axi_arlock_UNCONNECTED[2:0]),
        .m_axi_arprot(NLW_inst_m_axi_arprot_UNCONNECTED[8:0]),
        .m_axi_arqos(NLW_inst_m_axi_arqos_UNCONNECTED[11:0]),
        .m_axi_arready(m_axi_arready),
        .m_axi_arregion(NLW_inst_m_axi_arregion_UNCONNECTED[11:0]),
        .m_axi_arsize(NLW_inst_m_axi_arsize_UNCONNECTED[8:0]),
        .m_axi_aruser(NLW_inst_m_axi_aruser_UNCONNECTED[2:0]),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_awaddr({NLW_inst_m_axi_awaddr_UNCONNECTED[95:36],m_axi_awaddr[35:34],NLW_inst_m_axi_awaddr_UNCONNECTED[33:0]}),
        .m_axi_awburst(NLW_inst_m_axi_awburst_UNCONNECTED[5:0]),
        .m_axi_awcache(NLW_inst_m_axi_awcache_UNCONNECTED[11:0]),
        .m_axi_awid(NLW_inst_m_axi_awid_UNCONNECTED[2:0]),
        .m_axi_awlen(NLW_inst_m_axi_awlen_UNCONNECTED[23:0]),
        .m_axi_awlock(NLW_inst_m_axi_awlock_UNCONNECTED[2:0]),
        .m_axi_awprot(NLW_inst_m_axi_awprot_UNCONNECTED[8:0]),
        .m_axi_awqos(NLW_inst_m_axi_awqos_UNCONNECTED[11:0]),
        .m_axi_awready(m_axi_awready),
        .m_axi_awregion(NLW_inst_m_axi_awregion_UNCONNECTED[11:0]),
        .m_axi_awsize(NLW_inst_m_axi_awsize_UNCONNECTED[8:0]),
        .m_axi_awuser(NLW_inst_m_axi_awuser_UNCONNECTED[2:0]),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bid(NLW_inst_m_axi_bid_UNCONNECTED[2:0]),
        .m_axi_bready(m_axi_bready),
        .m_axi_bresp(NLW_inst_m_axi_bresp_UNCONNECTED[5:0]),
        .m_axi_buser(NLW_inst_m_axi_buser_UNCONNECTED[2:0]),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_rdata({m_axi_rdata[95:64],NLW_inst_m_axi_rdata_UNCONNECTED[63:40],m_axi_rdata[39:31],NLW_inst_m_axi_rdata_UNCONNECTED[30:11],m_axi_rdata[10:0]}),
        .m_axi_rid(NLW_inst_m_axi_rid_UNCONNECTED[2:0]),
        .m_axi_rlast(NLW_inst_m_axi_rlast_UNCONNECTED[2:0]),
        .m_axi_rready(m_axi_rready),
        .m_axi_rresp(NLW_inst_m_axi_rresp_UNCONNECTED[5:0]),
        .m_axi_ruser(NLW_inst_m_axi_ruser_UNCONNECTED[2:0]),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axi_wdata({m_axi_wdata[95:94],NLW_inst_m_axi_wdata_UNCONNECTED[93:66],m_axi_wdata[65:64],NLW_inst_m_axi_wdata_UNCONNECTED[63:40],m_axi_wdata[39:31],NLW_inst_m_axi_wdata_UNCONNECTED[30:11],m_axi_wdata[10:0]}),
        .m_axi_wid(NLW_inst_m_axi_wid_UNCONNECTED[2:0]),
        .m_axi_wlast(NLW_inst_m_axi_wlast_UNCONNECTED[2:0]),
        .m_axi_wready(m_axi_wready),
        .m_axi_wstrb(NLW_inst_m_axi_wstrb_UNCONNECTED[11:0]),
        .m_axi_wuser(NLW_inst_m_axi_wuser_UNCONNECTED[2:0]),
        .m_axi_wvalid(m_axi_wvalid),
        .s_axi_araddr({s_axi_araddr[31:16],NLW_inst_s_axi_araddr_UNCONNECTED[15:9],s_axi_araddr[8:0]}),
        .s_axi_arburst(NLW_inst_s_axi_arburst_UNCONNECTED[1:0]),
        .s_axi_arcache(NLW_inst_s_axi_arcache_UNCONNECTED[3:0]),
        .s_axi_arid(NLW_inst_s_axi_arid_UNCONNECTED[0]),
        .s_axi_arlen(NLW_inst_s_axi_arlen_UNCONNECTED[7:0]),
        .s_axi_arlock(NLW_inst_s_axi_arlock_UNCONNECTED[0]),
        .s_axi_arprot(NLW_inst_s_axi_arprot_UNCONNECTED[2:0]),
        .s_axi_arqos(NLW_inst_s_axi_arqos_UNCONNECTED[3:0]),
        .s_axi_arready(s_axi_arready),
        .s_axi_arsize(NLW_inst_s_axi_arsize_UNCONNECTED[2:0]),
        .s_axi_aruser(NLW_inst_s_axi_aruser_UNCONNECTED[0]),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(NLW_inst_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awburst(NLW_inst_s_axi_awburst_UNCONNECTED[1:0]),
        .s_axi_awcache(NLW_inst_s_axi_awcache_UNCONNECTED[3:0]),
        .s_axi_awid(NLW_inst_s_axi_awid_UNCONNECTED[0]),
        .s_axi_awlen(NLW_inst_s_axi_awlen_UNCONNECTED[7:0]),
        .s_axi_awlock(NLW_inst_s_axi_awlock_UNCONNECTED[0]),
        .s_axi_awprot(NLW_inst_s_axi_awprot_UNCONNECTED[2:0]),
        .s_axi_awqos(NLW_inst_s_axi_awqos_UNCONNECTED[3:0]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awsize(NLW_inst_s_axi_awsize_UNCONNECTED[2:0]),
        .s_axi_awuser(NLW_inst_s_axi_awuser_UNCONNECTED[0]),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bid(NLW_inst_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(NLW_inst_s_axi_bready_UNCONNECTED[0]),
        .s_axi_bresp(NLW_inst_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_inst_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rid(NLW_inst_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_inst_s_axi_rlast_UNCONNECTED[0]),
        .s_axi_rready(NLW_inst_s_axi_rready_UNCONNECTED[0]),
        .s_axi_rresp(NLW_inst_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_inst_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata({s_axi_wdata[31:30],NLW_inst_s_axi_wdata_UNCONNECTED[29:11],s_axi_wdata[10:0]}),
        .s_axi_wid(NLW_inst_s_axi_wid_UNCONNECTED[0]),
        .s_axi_wlast(NLW_inst_s_axi_wlast_UNCONNECTED[0]),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(NLW_inst_s_axi_wstrb_UNCONNECTED[3:0]),
        .s_axi_wuser(NLW_inst_s_axi_wuser_UNCONNECTED[0]),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* ORIG_REF_NAME = "axi_crossbar_v2_1_22_addr_arbiter_sasd" *) 
module system_xbar_0__axi_crossbar_v2_1_22_addr_arbiter_sasd
   (p_0_in1_in,
    m_valid_i,
    SR,
    aa_grant_rnw,
    \gen_no_arbiter.m_amesg_i_reg[22]_0 ,
    Q,
    D,
    \gen_no_arbiter.m_amesg_i_reg[22]_1 ,
    m_ready_d0,
    \m_ready_d_reg[2] ,
    s_axi_bvalid,
    m_axi_bready,
    s_axi_bready_0_sp_1,
    s_axi_wready,
    m_axi_wvalid,
    \gen_no_arbiter.grant_rnw_reg_0 ,
    m_axi_awvalid,
    \gen_no_arbiter.grant_rnw_reg_1 ,
    \aresetn_d_reg[1] ,
    E,
    \aresetn_d_reg[0] ,
    m_axi_arvalid,
    \m_ready_d_reg[1] ,
    s_axi_awready,
    s_axi_arready,
    aclk,
    m_ready_d,
    s_ready_i_reg,
    aa_rready,
    aresetn_d,
    \gen_no_arbiter.m_grant_hot_i_reg[0]_inv_0 ,
    s_axi_awvalid,
    s_axi_arvalid,
    m_ready_d_0,
    \m_ready_d_reg[2]_0 ,
    s_axi_bvalid_0_sp_1,
    \m_axi_bready[2] ,
    s_axi_bready,
    s_axi_wready_0_sp_1,
    s_axi_wvalid,
    \gen_no_arbiter.m_valid_i_reg_0 ,
    m_ready_d0_1,
    m_valid_i_reg,
    s_axi_rready,
    sr_rvalid,
    s_axi_arprot,
    s_axi_awprot,
    s_axi_araddr,
    s_axi_awaddr);
  output p_0_in1_in;
  output m_valid_i;
  output [0:0]SR;
  output aa_grant_rnw;
  output \gen_no_arbiter.m_amesg_i_reg[22]_0 ;
  output [34:0]Q;
  output [3:0]D;
  output \gen_no_arbiter.m_amesg_i_reg[22]_1 ;
  output [0:0]m_ready_d0;
  output \m_ready_d_reg[2] ;
  output [0:0]s_axi_bvalid;
  output [2:0]m_axi_bready;
  output s_axi_bready_0_sp_1;
  output [0:0]s_axi_wready;
  output [2:0]m_axi_wvalid;
  output \gen_no_arbiter.grant_rnw_reg_0 ;
  output [2:0]m_axi_awvalid;
  output \gen_no_arbiter.grant_rnw_reg_1 ;
  output \aresetn_d_reg[1] ;
  output [0:0]E;
  output \aresetn_d_reg[0] ;
  output [2:0]m_axi_arvalid;
  output \m_ready_d_reg[1] ;
  output [0:0]s_axi_awready;
  output [0:0]s_axi_arready;
  input aclk;
  input [1:0]m_ready_d;
  input s_ready_i_reg;
  input aa_rready;
  input aresetn_d;
  input \gen_no_arbiter.m_grant_hot_i_reg[0]_inv_0 ;
  input [0:0]s_axi_awvalid;
  input [0:0]s_axi_arvalid;
  input [2:0]m_ready_d_0;
  input \m_ready_d_reg[2]_0 ;
  input s_axi_bvalid_0_sp_1;
  input [2:0]\m_axi_bready[2] ;
  input [0:0]s_axi_bready;
  input s_axi_wready_0_sp_1;
  input [0:0]s_axi_wvalid;
  input \gen_no_arbiter.m_valid_i_reg_0 ;
  input [0:0]m_ready_d0_1;
  input [1:0]m_valid_i_reg;
  input [0:0]s_axi_rready;
  input sr_rvalid;
  input [2:0]s_axi_arprot;
  input [2:0]s_axi_awprot;
  input [31:0]s_axi_araddr;
  input [31:0]s_axi_awaddr;

  wire [3:0]D;
  wire [0:0]E;
  wire [34:0]\^Q ;
  wire [0:0]SR;
  wire aa_grant_rnw;
  wire aa_rready;
  wire aclk;
  wire aresetn_d;
  wire \aresetn_d_reg[0] ;
  wire \aresetn_d_reg[1] ;
  wire \gen_no_arbiter.grant_rnw_i_1_n_0 ;
  wire \gen_no_arbiter.grant_rnw_reg_0 ;
  wire \gen_no_arbiter.grant_rnw_reg_1 ;
  wire \gen_no_arbiter.m_amesg_i_reg[22]_0 ;
  wire \gen_no_arbiter.m_amesg_i_reg[22]_1 ;
  wire \gen_no_arbiter.m_grant_hot_i[0]_inv_i_1_n_0 ;
  wire \gen_no_arbiter.m_grant_hot_i[0]_inv_i_3_n_0 ;
  wire \gen_no_arbiter.m_grant_hot_i[0]_inv_i_4_n_0 ;
  wire \gen_no_arbiter.m_grant_hot_i_reg[0]_inv_0 ;
  wire \gen_no_arbiter.m_valid_i_i_1_n_0 ;
  wire \gen_no_arbiter.m_valid_i_reg_0 ;
  wire \gen_no_arbiter.s_ready_i[0]_i_1_n_0 ;
  wire \m_atarget_enc[1]_i_2_n_0 ;
  wire \m_atarget_hot[3]_i_2_n_0 ;
  wire \m_atarget_hot[3]_i_3_n_0 ;
  wire \m_atarget_hot[3]_i_4_n_0 ;
  wire \m_atarget_hot[3]_i_5_n_0 ;
  wire [2:0]m_axi_arvalid;
  wire [2:0]m_axi_awvalid;
  wire [2:0]m_axi_bready;
  wire [2:0]\m_axi_bready[2] ;
  wire [2:0]m_axi_wvalid;
  wire [1:0]m_ready_d;
  wire [0:0]m_ready_d0;
  wire [0:0]m_ready_d0_1;
  wire [2:0]m_ready_d_0;
  wire \m_ready_d_reg[1] ;
  wire \m_ready_d_reg[2] ;
  wire \m_ready_d_reg[2]_0 ;
  wire m_valid_i;
  wire m_valid_i_i_2_n_0;
  wire [1:0]m_valid_i_reg;
  wire p_0_in1_in;
  wire \s_arvalid_reg[0]_i_1_n_0 ;
  wire \s_arvalid_reg_reg_n_0_[0] ;
  wire s_awvalid_reg;
  wire \s_awvalid_reg[0]_i_1_n_0 ;
  wire [31:0]s_axi_araddr;
  wire [0:0]s_axi_arready;
  wire [0:0]s_axi_arvalid;
  wire [0:0]s_axi_awready;
  wire [0:0]s_axi_awvalid;
  wire s_axi_bready_0_sn_1;
  wire [0:0]s_axi_bvalid;
  wire s_axi_bvalid_0_sn_1;
  wire [0:0]s_axi_wready;
  wire s_axi_wready_0_sn_1;
  wire [0:0]s_axi_wvalid;
  wire s_ready_i;
  wire s_ready_i_reg;
  wire sr_rvalid;

  assign Q[8:0] = \^Q [8:0];
  assign s_axi_bready_0_sp_1 = s_axi_bready_0_sn_1;
  assign s_axi_bvalid_0_sn_1 = s_axi_bvalid_0_sp_1;
  assign s_axi_wready_0_sn_1 = s_axi_wready_0_sp_1;
  LUT4 #(
    .INIT(16'hFBFF)) 
    \gen_axilite.s_axi_awready_i_i_2 
       (.I0(aa_grant_rnw),
        .I1(m_valid_i),
        .I2(m_ready_d_0[1]),
        .I3(s_axi_wvalid),
        .O(\gen_no_arbiter.grant_rnw_reg_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \gen_axilite.s_axi_awready_i_i_3 
       (.I0(aa_grant_rnw),
        .I1(m_valid_i),
        .O(\gen_no_arbiter.grant_rnw_reg_1 ));
  LUT3 #(
    .INIT(8'hBF)) 
    \gen_axilite.s_axi_rvalid_i_i_2 
       (.I0(m_ready_d[1]),
        .I1(aa_grant_rnw),
        .I2(m_valid_i),
        .O(\m_ready_d_reg[1] ));
  LUT6 #(
    .INIT(64'hFFFF47FF00004400)) 
    \gen_no_arbiter.grant_rnw_i_1 
       (.I0(s_awvalid_reg),
        .I1(s_axi_arvalid),
        .I2(s_axi_awvalid),
        .I3(p_0_in1_in),
        .I4(m_valid_i),
        .I5(aa_grant_rnw),
        .O(\gen_no_arbiter.grant_rnw_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.grant_rnw_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_no_arbiter.grant_rnw_i_1_n_0 ),
        .Q(aa_grant_rnw),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_no_arbiter.m_amesg_i[32]_i_1 
       (.I0(aresetn_d),
        .O(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[17] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[16]),
        .Q(\^Q [16]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[18] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[17]),
        .Q(\^Q [17]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[19] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[18]),
        .Q(\^Q [18]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[1] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[0]),
        .Q(\^Q [0]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[20] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[19]),
        .Q(\^Q [19]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[21] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[20]),
        .Q(\^Q [20]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[22] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[21]),
        .Q(\^Q [21]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[23] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[22]),
        .Q(\^Q [22]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[24] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[23]),
        .Q(\^Q [23]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[25] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[24]),
        .Q(\^Q [24]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[26] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[25]),
        .Q(\^Q [25]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[27] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[26]),
        .Q(\^Q [26]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[28] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[27]),
        .Q(\^Q [27]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[29] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[28]),
        .Q(\^Q [28]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[2] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[1]),
        .Q(\^Q [1]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[30] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[29]),
        .Q(\^Q [29]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[31] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[30]),
        .Q(\^Q [30]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[32] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[31]),
        .Q(\^Q [31]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[3] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[2]),
        .Q(\^Q [2]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[4] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[3]),
        .Q(\^Q [3]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[5] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[4]),
        .Q(\^Q [4]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[6] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[5]),
        .Q(\^Q [5]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[7] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[6]),
        .Q(\^Q [6]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[8] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[7]),
        .Q(\^Q [7]),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_amesg_i_reg[9] 
       (.C(aclk),
        .CE(p_0_in1_in),
        .D(s_axi_araddr[8]),
        .Q(\^Q [8]),
        .R(SR));
  LUT6 #(
    .INIT(64'hFFFFFFFF0040F040)) 
    \gen_no_arbiter.m_grant_hot_i[0]_inv_i_1 
       (.I0(\gen_no_arbiter.m_grant_hot_i_reg[0]_inv_0 ),
        .I1(m_ready_d0),
        .I2(m_valid_i),
        .I3(aa_grant_rnw),
        .I4(\gen_no_arbiter.m_grant_hot_i[0]_inv_i_3_n_0 ),
        .I5(\gen_no_arbiter.m_grant_hot_i[0]_inv_i_4_n_0 ),
        .O(\gen_no_arbiter.m_grant_hot_i[0]_inv_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h007FFFFF)) 
    \gen_no_arbiter.m_grant_hot_i[0]_inv_i_3 
       (.I0(\gen_no_arbiter.m_valid_i_reg_0 ),
        .I1(aa_grant_rnw),
        .I2(m_valid_i),
        .I3(m_ready_d[1]),
        .I4(m_ready_d0_1),
        .O(\gen_no_arbiter.m_grant_hot_i[0]_inv_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hD5D5D5F5)) 
    \gen_no_arbiter.m_grant_hot_i[0]_inv_i_4 
       (.I0(aresetn_d),
        .I1(m_valid_i),
        .I2(p_0_in1_in),
        .I3(s_axi_awvalid),
        .I4(s_axi_arvalid),
        .O(\gen_no_arbiter.m_grant_hot_i[0]_inv_i_4_n_0 ));
  FDRE #(
    .INIT(1'b1)) 
    \gen_no_arbiter.m_grant_hot_i_reg[0]_inv 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_no_arbiter.m_grant_hot_i[0]_inv_i_1_n_0 ),
        .Q(p_0_in1_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFF55CF550055CF55)) 
    \gen_no_arbiter.m_valid_i_i_1 
       (.I0(p_0_in1_in),
        .I1(\gen_no_arbiter.m_grant_hot_i_reg[0]_inv_0 ),
        .I2(m_ready_d0),
        .I3(m_valid_i),
        .I4(aa_grant_rnw),
        .I5(\gen_no_arbiter.m_grant_hot_i[0]_inv_i_3_n_0 ),
        .O(\gen_no_arbiter.m_valid_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.m_valid_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_no_arbiter.m_valid_i_i_1_n_0 ),
        .Q(m_valid_i),
        .R(SR));
  LUT3 #(
    .INIT(8'h10)) 
    \gen_no_arbiter.s_ready_i[0]_i_1 
       (.I0(m_valid_i),
        .I1(p_0_in1_in),
        .I2(aresetn_d),
        .O(\gen_no_arbiter.s_ready_i[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_no_arbiter.s_ready_i_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_no_arbiter.s_ready_i[0]_i_1_n_0 ),
        .Q(s_ready_i),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    \m_atarget_enc[0]_i_1 
       (.I0(\m_atarget_hot[3]_i_2_n_0 ),
        .I1(\^Q [21]),
        .I2(\^Q [22]),
        .I3(\^Q [20]),
        .I4(\m_atarget_enc[1]_i_2_n_0 ),
        .O(\gen_no_arbiter.m_amesg_i_reg[22]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFDFFFFFF7F)) 
    \m_atarget_enc[1]_i_1 
       (.I0(\m_atarget_hot[3]_i_2_n_0 ),
        .I1(\^Q [21]),
        .I2(\^Q [22]),
        .I3(\^Q [20]),
        .I4(\m_atarget_enc[1]_i_2_n_0 ),
        .I5(\^Q [23]),
        .O(\gen_no_arbiter.m_amesg_i_reg[22]_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \m_atarget_enc[1]_i_2 
       (.I0(\^Q [24]),
        .I1(\^Q [25]),
        .O(\m_atarget_enc[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    \m_atarget_hot[0]_i_1 
       (.I0(\m_atarget_hot[3]_i_3_n_0 ),
        .I1(\m_atarget_hot[3]_i_2_n_0 ),
        .I2(p_0_in1_in),
        .I3(\^Q [23]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \m_atarget_hot[1]_i_1 
       (.I0(\m_atarget_hot[3]_i_4_n_0 ),
        .I1(\m_atarget_hot[3]_i_2_n_0 ),
        .I2(p_0_in1_in),
        .O(D[1]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    \m_atarget_hot[2]_i_1 
       (.I0(p_0_in1_in),
        .I1(\m_atarget_hot[3]_i_2_n_0 ),
        .I2(\m_atarget_hot[3]_i_3_n_0 ),
        .I3(\^Q [23]),
        .O(D[2]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT4 #(
    .INIT(16'h1511)) 
    \m_atarget_hot[3]_i_1 
       (.I0(p_0_in1_in),
        .I1(\m_atarget_hot[3]_i_2_n_0 ),
        .I2(\m_atarget_hot[3]_i_3_n_0 ),
        .I3(\m_atarget_hot[3]_i_4_n_0 ),
        .O(D[3]));
  LUT5 #(
    .INIT(32'h00000001)) 
    \m_atarget_hot[3]_i_2 
       (.I0(\^Q [19]),
        .I1(\^Q [31]),
        .I2(\^Q [16]),
        .I3(\^Q [17]),
        .I4(\m_atarget_hot[3]_i_5_n_0 ),
        .O(\m_atarget_hot[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \m_atarget_hot[3]_i_3 
       (.I0(\^Q [25]),
        .I1(\^Q [24]),
        .I2(\^Q [20]),
        .I3(\^Q [22]),
        .I4(\^Q [21]),
        .O(\m_atarget_hot[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEFFFFFFFFFF)) 
    \m_atarget_hot[3]_i_4 
       (.I0(\^Q [25]),
        .I1(\^Q [24]),
        .I2(\^Q [20]),
        .I3(\^Q [21]),
        .I4(\^Q [23]),
        .I5(\^Q [22]),
        .O(\m_atarget_hot[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
    \m_atarget_hot[3]_i_5 
       (.I0(\^Q [28]),
        .I1(\^Q [29]),
        .I2(\^Q [26]),
        .I3(\^Q [30]),
        .I4(\^Q [18]),
        .I5(\^Q [27]),
        .O(\m_atarget_hot[3]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \m_axi_arvalid[0]_INST_0 
       (.I0(\m_axi_bready[2] [0]),
        .I1(m_valid_i),
        .I2(aa_grant_rnw),
        .I3(m_ready_d[1]),
        .O(m_axi_arvalid[0]));
  LUT4 #(
    .INIT(16'h0080)) 
    \m_axi_arvalid[1]_INST_0 
       (.I0(\m_axi_bready[2] [1]),
        .I1(m_valid_i),
        .I2(aa_grant_rnw),
        .I3(m_ready_d[1]),
        .O(m_axi_arvalid[1]));
  LUT4 #(
    .INIT(16'h0080)) 
    \m_axi_arvalid[2]_INST_0 
       (.I0(\m_axi_bready[2] [2]),
        .I1(m_valid_i),
        .I2(aa_grant_rnw),
        .I3(m_ready_d[1]),
        .O(m_axi_arvalid[2]));
  LUT4 #(
    .INIT(16'h0020)) 
    \m_axi_awvalid[0]_INST_0 
       (.I0(\m_axi_bready[2] [0]),
        .I1(aa_grant_rnw),
        .I2(m_valid_i),
        .I3(m_ready_d_0[2]),
        .O(m_axi_awvalid[0]));
  LUT4 #(
    .INIT(16'h0020)) 
    \m_axi_awvalid[1]_INST_0 
       (.I0(\m_axi_bready[2] [1]),
        .I1(aa_grant_rnw),
        .I2(m_valid_i),
        .I3(m_ready_d_0[2]),
        .O(m_axi_awvalid[1]));
  LUT4 #(
    .INIT(16'h0020)) 
    \m_axi_awvalid[2]_INST_0 
       (.I0(\m_axi_bready[2] [2]),
        .I1(aa_grant_rnw),
        .I2(m_valid_i),
        .I3(m_ready_d_0[2]),
        .O(m_axi_awvalid[2]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \m_axi_bready[0]_INST_0 
       (.I0(\m_axi_bready[2] [0]),
        .I1(m_ready_d_0[0]),
        .I2(m_valid_i),
        .I3(aa_grant_rnw),
        .O(m_axi_bready[0]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \m_axi_bready[1]_INST_0 
       (.I0(\m_axi_bready[2] [1]),
        .I1(m_ready_d_0[0]),
        .I2(m_valid_i),
        .I3(aa_grant_rnw),
        .O(m_axi_bready[1]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \m_axi_bready[2]_INST_0 
       (.I0(\m_axi_bready[2] [2]),
        .I1(m_ready_d_0[0]),
        .I2(m_valid_i),
        .I3(aa_grant_rnw),
        .O(m_axi_bready[2]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \m_axi_wvalid[0]_INST_0 
       (.I0(\m_axi_bready[2] [0]),
        .I1(s_axi_wvalid),
        .I2(m_ready_d_0[1]),
        .I3(m_valid_i),
        .I4(aa_grant_rnw),
        .O(m_axi_wvalid[0]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \m_axi_wvalid[1]_INST_0 
       (.I0(\m_axi_bready[2] [1]),
        .I1(s_axi_wvalid),
        .I2(m_ready_d_0[1]),
        .I3(m_valid_i),
        .I4(aa_grant_rnw),
        .O(m_axi_wvalid[1]));
  LUT5 #(
    .INIT(32'h00000800)) 
    \m_axi_wvalid[2]_INST_0 
       (.I0(\m_axi_bready[2] [2]),
        .I1(s_axi_wvalid),
        .I2(m_ready_d_0[1]),
        .I3(m_valid_i),
        .I4(aa_grant_rnw),
        .O(m_axi_wvalid[2]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h40FF)) 
    \m_payload_i[34]_i_1 
       (.I0(m_ready_d[0]),
        .I1(aa_grant_rnw),
        .I2(m_valid_i),
        .I3(sr_rvalid),
        .O(E));
  LUT5 #(
    .INIT(32'hF0F4F0F0)) 
    \m_ready_d[2]_i_2 
       (.I0(aa_grant_rnw),
        .I1(m_valid_i),
        .I2(m_ready_d_0[1]),
        .I3(s_axi_wready_0_sn_1),
        .I4(s_axi_wvalid),
        .O(m_ready_d0));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \m_ready_d[2]_i_3 
       (.I0(aa_grant_rnw),
        .I1(m_valid_i),
        .I2(m_ready_d_0[0]),
        .O(s_axi_bready_0_sn_1));
  LUT4 #(
    .INIT(16'h4555)) 
    \m_ready_d[2]_i_4 
       (.I0(m_ready_d_0[2]),
        .I1(aa_grant_rnw),
        .I2(m_valid_i),
        .I3(\m_ready_d_reg[2]_0 ),
        .O(\m_ready_d_reg[2] ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'h8A)) 
    m_valid_i_i_1
       (.I0(m_valid_i_reg[1]),
        .I1(m_valid_i_i_2_n_0),
        .I2(E),
        .O(\aresetn_d_reg[1] ));
  LUT5 #(
    .INIT(32'h4000FFFF)) 
    m_valid_i_i_2
       (.I0(m_ready_d[0]),
        .I1(aa_grant_rnw),
        .I2(m_valid_i),
        .I3(s_ready_i_reg),
        .I4(aa_rready),
        .O(m_valid_i_i_2_n_0));
  LUT4 #(
    .INIT(16'h0040)) 
    \s_arvalid_reg[0]_i_1 
       (.I0(s_awvalid_reg),
        .I1(s_axi_arvalid),
        .I2(aresetn_d),
        .I3(s_ready_i),
        .O(\s_arvalid_reg[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_arvalid_reg_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\s_arvalid_reg[0]_i_1_n_0 ),
        .Q(\s_arvalid_reg_reg_n_0_[0] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000D00000)) 
    \s_awvalid_reg[0]_i_1 
       (.I0(s_axi_arvalid),
        .I1(s_awvalid_reg),
        .I2(s_axi_awvalid),
        .I3(\s_arvalid_reg_reg_n_0_[0] ),
        .I4(aresetn_d),
        .I5(s_ready_i),
        .O(\s_awvalid_reg[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \s_awvalid_reg_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\s_awvalid_reg[0]_i_1_n_0 ),
        .Q(s_awvalid_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    \s_axi_arready[0]_INST_0 
       (.I0(aa_grant_rnw),
        .I1(s_ready_i),
        .O(s_axi_arready));
  LUT2 #(
    .INIT(4'h2)) 
    \s_axi_awready[0]_INST_0 
       (.I0(s_ready_i),
        .I1(aa_grant_rnw),
        .O(s_axi_awready));
  LUT5 #(
    .INIT(32'h00000004)) 
    \s_axi_bvalid[0]_INST_0 
       (.I0(m_ready_d_0[0]),
        .I1(m_valid_i),
        .I2(aa_grant_rnw),
        .I3(p_0_in1_in),
        .I4(s_axi_bvalid_0_sn_1),
        .O(s_axi_bvalid));
  LUT5 #(
    .INIT(32'h00000100)) 
    \s_axi_wready[0]_INST_0 
       (.I0(p_0_in1_in),
        .I1(s_axi_wready_0_sn_1),
        .I2(m_ready_d_0[1]),
        .I3(m_valid_i),
        .I4(aa_grant_rnw),
        .O(s_axi_wready));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'h8A)) 
    s_ready_i_i_1
       (.I0(m_valid_i_reg[0]),
        .I1(E),
        .I2(m_valid_i_i_2_n_0),
        .O(\aresetn_d_reg[0] ));
endmodule

(* C_AXI_ADDR_WIDTH = "32" *) (* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) 
(* C_AXI_BUSER_WIDTH = "1" *) (* C_AXI_DATA_WIDTH = "32" *) (* C_AXI_ID_WIDTH = "1" *) 
(* C_AXI_PROTOCOL = "2" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_SUPPORTS_USER_SIGNALS = "0" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_CONNECTIVITY_MODE = "0" *) (* C_DEBUG = "1" *) 
(* C_FAMILY = "spartan7" *) (* C_M_AXI_ADDR_WIDTH = "96'b000000000000000000000000000100000000000000000000000000000001000000000000000000000000000000010000" *) (* C_M_AXI_BASE_ADDR = "192'b000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000110000000000000000000000000000000000000000000000000000001000000100000000000000000000000" *) 
(* C_M_AXI_READ_CONNECTIVITY = "96'b000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001" *) (* C_M_AXI_READ_ISSUING = "96'b000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001" *) (* C_M_AXI_SECURE = "96'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
(* C_M_AXI_WRITE_CONNECTIVITY = "96'b000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001" *) (* C_M_AXI_WRITE_ISSUING = "96'b000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001" *) (* C_NUM_ADDR_RANGES = "1" *) 
(* C_NUM_MASTER_SLOTS = "3" *) (* C_NUM_SLAVE_SLOTS = "1" *) (* C_R_REGISTER = "1" *) 
(* C_S_AXI_ARB_PRIORITY = "0" *) (* C_S_AXI_BASE_ID = "0" *) (* C_S_AXI_READ_ACCEPTANCE = "1" *) 
(* C_S_AXI_SINGLE_THREAD = "1" *) (* C_S_AXI_THREAD_ID_WIDTH = "0" *) (* C_S_AXI_WRITE_ACCEPTANCE = "1" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "axi_crossbar_v2_1_22_axi_crossbar" *) (* P_ADDR_DECODE = "1" *) 
(* P_AXI3 = "1" *) (* P_AXI4 = "0" *) (* P_AXILITE = "2" *) 
(* P_AXILITE_SIZE = "3'b010" *) (* P_FAMILY = "rtl" *) (* P_INCR = "2'b01" *) 
(* P_LEN = "8" *) (* P_LOCK = "1" *) (* P_M_AXI_ERR_MODE = "96'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
(* P_M_AXI_SUPPORTS_READ = "3'b111" *) (* P_M_AXI_SUPPORTS_WRITE = "3'b111" *) (* P_ONES = "65'b11111111111111111111111111111111111111111111111111111111111111111" *) 
(* P_RANGE_CHECK = "1" *) (* P_S_AXI_BASE_ID = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) (* P_S_AXI_HIGH_ID = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
(* P_S_AXI_SUPPORTS_READ = "1'b1" *) (* P_S_AXI_SUPPORTS_WRITE = "1'b1" *) 
module system_xbar_0__axi_crossbar_v2_1_22_axi_crossbar
   (aclk,
    aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awregion,
    m_axi_awqos,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arregion,
    m_axi_arqos,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready);
  input aclk;
  input aresetn;
  input [0:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [0:0]s_axi_awuser;
  input [0:0]s_axi_awvalid;
  output [0:0]s_axi_awready;
  input [0:0]s_axi_wid;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input [0:0]s_axi_wlast;
  input [0:0]s_axi_wuser;
  input [0:0]s_axi_wvalid;
  output [0:0]s_axi_wready;
  output [0:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output [0:0]s_axi_bvalid;
  input [0:0]s_axi_bready;
  input [0:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [0:0]s_axi_aruser;
  input [0:0]s_axi_arvalid;
  output [0:0]s_axi_arready;
  output [0:0]s_axi_rid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output [0:0]s_axi_rlast;
  output [0:0]s_axi_ruser;
  output [0:0]s_axi_rvalid;
  input [0:0]s_axi_rready;
  output [2:0]m_axi_awid;
  output [95:0]m_axi_awaddr;
  output [23:0]m_axi_awlen;
  output [8:0]m_axi_awsize;
  output [5:0]m_axi_awburst;
  output [2:0]m_axi_awlock;
  output [11:0]m_axi_awcache;
  output [8:0]m_axi_awprot;
  output [11:0]m_axi_awregion;
  output [11:0]m_axi_awqos;
  output [2:0]m_axi_awuser;
  output [2:0]m_axi_awvalid;
  input [2:0]m_axi_awready;
  output [2:0]m_axi_wid;
  output [95:0]m_axi_wdata;
  output [11:0]m_axi_wstrb;
  output [2:0]m_axi_wlast;
  output [2:0]m_axi_wuser;
  output [2:0]m_axi_wvalid;
  input [2:0]m_axi_wready;
  input [2:0]m_axi_bid;
  input [5:0]m_axi_bresp;
  input [2:0]m_axi_buser;
  input [2:0]m_axi_bvalid;
  output [2:0]m_axi_bready;
  output [2:0]m_axi_arid;
  output [95:0]m_axi_araddr;
  output [23:0]m_axi_arlen;
  output [8:0]m_axi_arsize;
  output [5:0]m_axi_arburst;
  output [2:0]m_axi_arlock;
  output [11:0]m_axi_arcache;
  output [8:0]m_axi_arprot;
  output [11:0]m_axi_arregion;
  output [11:0]m_axi_arqos;
  output [2:0]m_axi_aruser;
  output [2:0]m_axi_arvalid;
  input [2:0]m_axi_arready;
  input [2:0]m_axi_rid;
  input [95:0]m_axi_rdata;
  input [5:0]m_axi_rresp;
  input [2:0]m_axi_rlast;
  input [2:0]m_axi_ruser;
  input [2:0]m_axi_rvalid;
  output [2:0]m_axi_rready;

  wire aclk;
  wire aresetn;
  wire [15:0]\^m_axi_araddr ;
  wire [2:0]m_axi_arready;
  wire [2:0]m_axi_arvalid;
  wire [2:0]m_axi_awready;
  wire [2:0]m_axi_awvalid;
  wire [2:0]m_axi_bready;
  wire [2:0]m_axi_bvalid;
  wire [95:0]m_axi_rdata;
  wire [2:0]m_axi_rready;
  wire [2:0]m_axi_rvalid;
  wire [2:0]m_axi_wready;
  wire [2:0]m_axi_wvalid;
  wire [31:0]s_axi_araddr;
  wire [0:0]s_axi_arready;
  wire [0:0]s_axi_arvalid;
  wire [0:0]s_axi_awready;
  wire [0:0]s_axi_awvalid;
  wire [0:0]s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire [0:0]s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire [0:0]s_axi_wready;
  wire [0:0]s_axi_wvalid;
  wire [34:9]\NLW_gen_sasd.crossbar_sasd_0_Q_UNCONNECTED ;
  wire [5:0]\NLW_gen_sasd.crossbar_sasd_0_m_axi_bresp_UNCONNECTED ;
  wire [63:11]\NLW_gen_sasd.crossbar_sasd_0_m_axi_rdata_UNCONNECTED ;
  wire [5:0]\NLW_gen_sasd.crossbar_sasd_0_m_axi_rresp_UNCONNECTED ;
  wire [1:0]\NLW_gen_sasd.crossbar_sasd_0_m_payload_i_reg[34]_UNCONNECTED ;
  wire [15:9]\NLW_gen_sasd.crossbar_sasd_0_s_axi_araddr_UNCONNECTED ;
  wire [2:0]\NLW_gen_sasd.crossbar_sasd_0_s_axi_arprot_UNCONNECTED ;
  wire [31:0]\NLW_gen_sasd.crossbar_sasd_0_s_axi_awaddr_UNCONNECTED ;
  wire [2:0]\NLW_gen_sasd.crossbar_sasd_0_s_axi_awprot_UNCONNECTED ;
  wire [0:0]\NLW_gen_sasd.crossbar_sasd_0_s_axi_bready_UNCONNECTED ;
  wire [1:0]\NLW_gen_sasd.crossbar_sasd_0_s_axi_bresp_UNCONNECTED ;
  wire [0:0]\NLW_gen_sasd.crossbar_sasd_0_s_axi_rready_UNCONNECTED ;

  assign m_axi_araddr[72] = \^m_axi_araddr [8];
  assign m_axi_araddr[67:66] = \^m_axi_araddr [3:2];
  assign m_axi_araddr[8:0] = \^m_axi_araddr [8:0];
  assign m_axi_awaddr[35:34] = \^m_axi_araddr [3:2];
  assign m_axi_wdata[95:94] = s_axi_wdata[31:30];
  assign m_axi_wdata[65:64] = s_axi_wdata[1:0];
  assign m_axi_wdata[39:32] = s_axi_wdata[7:0];
  assign m_axi_wdata[31] = s_axi_wdata[31];
  assign m_axi_wdata[10:0] = s_axi_wdata[10:0];
  system_xbar_0__axi_crossbar_v2_1_22_crossbar_sasd \gen_sasd.crossbar_sasd_0 
       (.Q({\NLW_gen_sasd.crossbar_sasd_0_Q_UNCONNECTED [34:9],\^m_axi_araddr [8:0]}),
        .aclk(aclk),
        .aresetn(aresetn),
        .m_axi_arready(m_axi_arready),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_awready(m_axi_awready),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bready(m_axi_bready),
        .m_axi_bresp(\NLW_gen_sasd.crossbar_sasd_0_m_axi_bresp_UNCONNECTED [5:0]),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_rdata({m_axi_rdata[95:64],\NLW_gen_sasd.crossbar_sasd_0_m_axi_rdata_UNCONNECTED [63:40],m_axi_rdata[39:31],\NLW_gen_sasd.crossbar_sasd_0_m_axi_rdata_UNCONNECTED [30:11],m_axi_rdata[10:0]}),
        .m_axi_rready(m_axi_rready),
        .m_axi_rresp(\NLW_gen_sasd.crossbar_sasd_0_m_axi_rresp_UNCONNECTED [5:0]),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axi_wready(m_axi_wready),
        .m_axi_wvalid(m_axi_wvalid),
        .\m_payload_i_reg[34] ({s_axi_rdata,\NLW_gen_sasd.crossbar_sasd_0_m_payload_i_reg[34]_UNCONNECTED [1:0]}),
        .s_axi_araddr({s_axi_araddr[31:16],\NLW_gen_sasd.crossbar_sasd_0_s_axi_araddr_UNCONNECTED [15:9],s_axi_araddr[8:0]}),
        .s_axi_arprot(\NLW_gen_sasd.crossbar_sasd_0_s_axi_arprot_UNCONNECTED [2:0]),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(\NLW_gen_sasd.crossbar_sasd_0_s_axi_awaddr_UNCONNECTED [31:0]),
        .s_axi_awprot(\NLW_gen_sasd.crossbar_sasd_0_s_axi_awprot_UNCONNECTED [2:0]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(\NLW_gen_sasd.crossbar_sasd_0_s_axi_bready_UNCONNECTED [0]),
        .s_axi_bresp(\NLW_gen_sasd.crossbar_sasd_0_s_axi_bresp_UNCONNECTED [1:0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rready(\NLW_gen_sasd.crossbar_sasd_0_s_axi_rready_UNCONNECTED [0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid));
endmodule

(* ORIG_REF_NAME = "axi_crossbar_v2_1_22_crossbar_sasd" *) 
module system_xbar_0__axi_crossbar_v2_1_22_crossbar_sasd
   (Q,
    \m_payload_i_reg[34] ,
    s_axi_bvalid,
    m_axi_bready,
    s_axi_wready,
    m_axi_wvalid,
    m_axi_awvalid,
    m_axi_arvalid,
    s_axi_bresp,
    s_axi_awready,
    s_axi_arready,
    s_axi_rvalid,
    m_axi_rready,
    aresetn,
    aclk,
    s_axi_awvalid,
    s_axi_arvalid,
    s_axi_bready,
    s_axi_wvalid,
    s_axi_rready,
    m_axi_rresp,
    m_axi_rdata,
    m_axi_rvalid,
    m_axi_arready,
    m_axi_wready,
    m_axi_awready,
    m_axi_bvalid,
    m_axi_bresp,
    s_axi_arprot,
    s_axi_awprot,
    s_axi_araddr,
    s_axi_awaddr);
  output [34:0]Q;
  output [33:0]\m_payload_i_reg[34] ;
  output [0:0]s_axi_bvalid;
  output [2:0]m_axi_bready;
  output [0:0]s_axi_wready;
  output [2:0]m_axi_wvalid;
  output [2:0]m_axi_awvalid;
  output [2:0]m_axi_arvalid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_awready;
  output [0:0]s_axi_arready;
  output [0:0]s_axi_rvalid;
  output [2:0]m_axi_rready;
  input aresetn;
  input aclk;
  input [0:0]s_axi_awvalid;
  input [0:0]s_axi_arvalid;
  input [0:0]s_axi_bready;
  input [0:0]s_axi_wvalid;
  input [0:0]s_axi_rready;
  input [5:0]m_axi_rresp;
  input [95:0]m_axi_rdata;
  input [2:0]m_axi_rvalid;
  input [2:0]m_axi_arready;
  input [2:0]m_axi_wready;
  input [2:0]m_axi_awready;
  input [2:0]m_axi_bvalid;
  input [5:0]m_axi_bresp;
  input [2:0]s_axi_arprot;
  input [2:0]s_axi_awprot;
  input [31:0]s_axi_araddr;
  input [31:0]s_axi_awaddr;

  wire [34:0]Q;
  wire aa_grant_rnw;
  wire aa_rready;
  wire aclk;
  wire addr_arbiter_inst_n_4;
  wire addr_arbiter_inst_n_42;
  wire addr_arbiter_inst_n_44;
  wire addr_arbiter_inst_n_46;
  wire addr_arbiter_inst_n_51;
  wire addr_arbiter_inst_n_56;
  wire addr_arbiter_inst_n_60;
  wire addr_arbiter_inst_n_61;
  wire addr_arbiter_inst_n_63;
  wire addr_arbiter_inst_n_67;
  wire aresetn;
  wire aresetn_d;
  wire \gen_decerr.decerr_slave_inst_n_0 ;
  wire \gen_decerr.decerr_slave_inst_n_1 ;
  wire \gen_decerr.decerr_slave_inst_n_2 ;
  wire \gen_decerr.decerr_slave_inst_n_3 ;
  wire \gen_decerr.decerr_slave_inst_n_4 ;
  wire \gen_decerr.decerr_slave_inst_n_5 ;
  wire [1:0]m_atarget_enc;
  wire [3:0]m_atarget_hot;
  wire [3:0]m_atarget_hot0;
  wire [2:0]m_axi_arready;
  wire [2:0]m_axi_arvalid;
  wire [2:0]m_axi_awready;
  wire [2:0]m_axi_awvalid;
  wire [2:0]m_axi_bready;
  wire [2:0]m_axi_bvalid;
  wire [95:0]m_axi_rdata;
  wire [2:0]m_axi_rready;
  wire [2:0]m_axi_rvalid;
  wire [2:0]m_axi_wready;
  wire [2:0]m_axi_wvalid;
  wire [33:0]\m_payload_i_reg[34] ;
  wire [1:0]m_ready_d;
  wire [1:1]m_ready_d0;
  wire [0:0]m_ready_d0_0;
  wire [2:0]m_ready_d_1;
  wire m_valid_i;
  wire p_0_in1_in;
  wire p_1_in;
  wire reg_slice_r_n_7;
  wire reg_slice_r_n_8;
  wire reset;
  wire [31:0]s_axi_araddr;
  wire [0:0]s_axi_arready;
  wire [0:0]s_axi_arvalid;
  wire [0:0]s_axi_awready;
  wire [0:0]s_axi_awvalid;
  wire [0:0]s_axi_bvalid;
  wire [0:0]s_axi_rvalid;
  wire [0:0]s_axi_wready;
  wire [0:0]s_axi_wvalid;
  wire splitter_aw_n_0;
  wire sr_rvalid;
  wire [34:9]NLW_addr_arbiter_inst_Q_UNCONNECTED;
  wire [15:9]NLW_addr_arbiter_inst_s_axi_araddr_UNCONNECTED;
  wire [2:0]NLW_addr_arbiter_inst_s_axi_arprot_UNCONNECTED;
  wire [31:0]NLW_addr_arbiter_inst_s_axi_awaddr_UNCONNECTED;
  wire [2:0]NLW_addr_arbiter_inst_s_axi_awprot_UNCONNECTED;
  wire [0:0]NLW_addr_arbiter_inst_s_axi_bready_UNCONNECTED;
  wire [0:0]NLW_addr_arbiter_inst_s_axi_rready_UNCONNECTED;
  wire [0:0]\NLW_gen_decerr.decerr_slave_inst_s_axi_bready_UNCONNECTED ;
  wire [63:11]NLW_reg_slice_r_m_axi_rdata_UNCONNECTED;
  wire [5:0]NLW_reg_slice_r_m_axi_rresp_UNCONNECTED;
  wire [1:0]\NLW_reg_slice_r_m_payload_i_reg[34]_0_UNCONNECTED ;
  wire [0:0]NLW_reg_slice_r_s_axi_rready_UNCONNECTED;

  system_xbar_0__axi_crossbar_v2_1_22_addr_arbiter_sasd addr_arbiter_inst
       (.D({m_atarget_hot0[3:2],addr_arbiter_inst_n_42,m_atarget_hot0[0]}),
        .E(p_1_in),
        .Q({NLW_addr_arbiter_inst_Q_UNCONNECTED[34:9],Q[8:0]}),
        .SR(reset),
        .aa_grant_rnw(aa_grant_rnw),
        .aa_rready(aa_rready),
        .aclk(aclk),
        .aresetn_d(aresetn_d),
        .\aresetn_d_reg[0] (addr_arbiter_inst_n_63),
        .\aresetn_d_reg[1] (addr_arbiter_inst_n_61),
        .\gen_no_arbiter.grant_rnw_reg_0 (addr_arbiter_inst_n_56),
        .\gen_no_arbiter.grant_rnw_reg_1 (addr_arbiter_inst_n_60),
        .\gen_no_arbiter.m_amesg_i_reg[22]_0 (addr_arbiter_inst_n_4),
        .\gen_no_arbiter.m_amesg_i_reg[22]_1 (addr_arbiter_inst_n_44),
        .\gen_no_arbiter.m_grant_hot_i_reg[0]_inv_0 (\gen_decerr.decerr_slave_inst_n_0 ),
        .\gen_no_arbiter.m_valid_i_reg_0 (\gen_decerr.decerr_slave_inst_n_4 ),
        .m_axi_arvalid(m_axi_arvalid),
        .m_axi_awvalid(m_axi_awvalid),
        .m_axi_bready(m_axi_bready),
        .\m_axi_bready[2] (m_atarget_hot[2:0]),
        .m_axi_wvalid(m_axi_wvalid),
        .m_ready_d(m_ready_d),
        .m_ready_d0(m_ready_d0),
        .m_ready_d0_1(m_ready_d0_0),
        .m_ready_d_0(m_ready_d_1),
        .\m_ready_d_reg[1] (addr_arbiter_inst_n_67),
        .\m_ready_d_reg[2] (addr_arbiter_inst_n_46),
        .\m_ready_d_reg[2]_0 (\gen_decerr.decerr_slave_inst_n_1 ),
        .m_valid_i(m_valid_i),
        .m_valid_i_reg({reg_slice_r_n_7,reg_slice_r_n_8}),
        .p_0_in1_in(p_0_in1_in),
        .s_axi_araddr({s_axi_araddr[31:16],NLW_addr_arbiter_inst_s_axi_araddr_UNCONNECTED[15:9],s_axi_araddr[8:0]}),
        .s_axi_arprot(NLW_addr_arbiter_inst_s_axi_arprot_UNCONNECTED[2:0]),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(NLW_addr_arbiter_inst_s_axi_awaddr_UNCONNECTED[31:0]),
        .s_axi_awprot(NLW_addr_arbiter_inst_s_axi_awprot_UNCONNECTED[2:0]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(NLW_addr_arbiter_inst_s_axi_bready_UNCONNECTED[0]),
        .s_axi_bready_0_sp_1(addr_arbiter_inst_n_51),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_bvalid_0_sp_1(\gen_decerr.decerr_slave_inst_n_2 ),
        .s_axi_rready(NLW_addr_arbiter_inst_s_axi_rready_UNCONNECTED[0]),
        .s_axi_wready(s_axi_wready),
        .s_axi_wready_0_sp_1(\gen_decerr.decerr_slave_inst_n_5 ),
        .s_axi_wvalid(s_axi_wvalid),
        .s_ready_i_reg(\gen_decerr.decerr_slave_inst_n_3 ),
        .sr_rvalid(sr_rvalid));
  FDRE #(
    .INIT(1'b0)) 
    aresetn_d_reg
       (.C(aclk),
        .CE(1'b1),
        .D(aresetn),
        .Q(aresetn_d),
        .R(1'b0));
  system_xbar_0__axi_crossbar_v2_1_22_decerr_slave \gen_decerr.decerr_slave_inst 
       (.Q(m_atarget_hot[3]),
        .SR(reset),
        .aa_rready(aa_rready),
        .aclk(aclk),
        .aresetn_d(aresetn_d),
        .\gen_axilite.s_axi_arready_i_reg_0 (\gen_decerr.decerr_slave_inst_n_4 ),
        .\gen_axilite.s_axi_awready_i_reg_0 (addr_arbiter_inst_n_60),
        .\gen_axilite.s_axi_awready_i_reg_1 (addr_arbiter_inst_n_56),
        .\gen_axilite.s_axi_bvalid_i_reg_0 (\gen_decerr.decerr_slave_inst_n_2 ),
        .\gen_axilite.s_axi_bvalid_i_reg_1 (addr_arbiter_inst_n_51),
        .\gen_axilite.s_axi_bvalid_i_reg_2 (splitter_aw_n_0),
        .\gen_axilite.s_axi_rvalid_i_reg_0 (\gen_decerr.decerr_slave_inst_n_3 ),
        .\gen_axilite.s_axi_rvalid_i_reg_1 (addr_arbiter_inst_n_67),
        .m_axi_arready(m_axi_arready),
        .m_axi_awready(m_axi_awready),
        .m_axi_awready_1_sp_1(\gen_decerr.decerr_slave_inst_n_1 ),
        .m_axi_bvalid(m_axi_bvalid),
        .m_axi_rvalid(m_axi_rvalid),
        .m_axi_wready(m_axi_wready),
        .m_axi_wready_0_sp_1(\gen_decerr.decerr_slave_inst_n_5 ),
        .m_ready_d({m_ready_d_1[2],m_ready_d_1[0]}),
        .\m_ready_d_reg[1] (m_atarget_enc),
        .\m_ready_d_reg[2] (\gen_decerr.decerr_slave_inst_n_0 ),
        .s_axi_bready(\NLW_gen_decerr.decerr_slave_inst_s_axi_bready_UNCONNECTED [0]));
  FDRE #(
    .INIT(1'b0)) 
    \m_atarget_enc_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(addr_arbiter_inst_n_44),
        .Q(m_atarget_enc[0]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \m_atarget_enc_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(addr_arbiter_inst_n_4),
        .Q(m_atarget_enc[1]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \m_atarget_hot_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(m_atarget_hot0[0]),
        .Q(m_atarget_hot[0]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \m_atarget_hot_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(addr_arbiter_inst_n_42),
        .Q(m_atarget_hot[1]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \m_atarget_hot_reg[2] 
       (.C(aclk),
        .CE(1'b1),
        .D(m_atarget_hot0[2]),
        .Q(m_atarget_hot[2]),
        .R(reset));
  FDRE #(
    .INIT(1'b0)) 
    \m_atarget_hot_reg[3] 
       (.C(aclk),
        .CE(1'b1),
        .D(m_atarget_hot0[3]),
        .Q(m_atarget_hot[3]),
        .R(reset));
  system_xbar_0__axi_register_slice_v2_1_21_axic_register_slice reg_slice_r
       (.E(p_1_in),
        .Q(m_atarget_enc),
        .SR(reset),
        .aa_grant_rnw(aa_grant_rnw),
        .aa_rready(aa_rready),
        .aclk(aclk),
        .\aresetn_d_reg[1]_0 ({reg_slice_r_n_7,reg_slice_r_n_8}),
        .m_axi_rdata({m_axi_rdata[95:64],NLW_reg_slice_r_m_axi_rdata_UNCONNECTED[63:40],m_axi_rdata[39:31],NLW_reg_slice_r_m_axi_rdata_UNCONNECTED[30:11],m_axi_rdata[10:0]}),
        .m_axi_rready(m_axi_rready),
        .\m_axi_rready[2] (m_atarget_hot[2:0]),
        .m_axi_rresp(NLW_reg_slice_r_m_axi_rresp_UNCONNECTED[5:0]),
        .\m_payload_i_reg[34]_0 ({\m_payload_i_reg[34] [33:2],\NLW_reg_slice_r_m_payload_i_reg[34]_0_UNCONNECTED [1:0]}),
        .m_ready_d(m_ready_d[0]),
        .m_ready_d0(m_ready_d0_0),
        .m_valid_i(m_valid_i),
        .m_valid_i_reg_0(addr_arbiter_inst_n_61),
        .p_0_in1_in(p_0_in1_in),
        .s_axi_rready(NLW_reg_slice_r_s_axi_rready_UNCONNECTED[0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_ready_i_reg_0(addr_arbiter_inst_n_63),
        .sr_rvalid(sr_rvalid));
  system_xbar_0__axi_crossbar_v2_1_22_splitter__parameterized0 splitter_ar
       (.aa_grant_rnw(aa_grant_rnw),
        .aclk(aclk),
        .aresetn_d(aresetn_d),
        .m_ready_d(m_ready_d),
        .m_ready_d0(m_ready_d0_0),
        .\m_ready_d_reg[1]_0 (\gen_decerr.decerr_slave_inst_n_4 ),
        .m_valid_i(m_valid_i));
  system_xbar_0__axi_crossbar_v2_1_22_splitter splitter_aw
       (.Q(m_atarget_hot[3]),
        .aa_grant_rnw(aa_grant_rnw),
        .aclk(aclk),
        .aresetn_d(aresetn_d),
        .m_ready_d(m_ready_d_1),
        .m_ready_d0(m_ready_d0),
        .\m_ready_d_reg[2]_0 (\gen_decerr.decerr_slave_inst_n_2 ),
        .\m_ready_d_reg[2]_1 (addr_arbiter_inst_n_51),
        .\m_ready_d_reg[2]_2 (addr_arbiter_inst_n_46),
        .m_valid_i(m_valid_i),
        .s_axi_wvalid(s_axi_wvalid),
        .s_axi_wvalid_0_sp_1(splitter_aw_n_0));
endmodule

(* ORIG_REF_NAME = "axi_crossbar_v2_1_22_decerr_slave" *) 
module system_xbar_0__axi_crossbar_v2_1_22_decerr_slave
   (\m_ready_d_reg[2] ,
    m_axi_awready_1_sp_1,
    \gen_axilite.s_axi_bvalid_i_reg_0 ,
    \gen_axilite.s_axi_rvalid_i_reg_0 ,
    \gen_axilite.s_axi_arready_i_reg_0 ,
    m_axi_wready_0_sp_1,
    SR,
    aclk,
    m_ready_d,
    \gen_axilite.s_axi_awready_i_reg_0 ,
    s_axi_bready,
    Q,
    \gen_axilite.s_axi_rvalid_i_reg_1 ,
    aresetn_d,
    m_axi_rvalid,
    \m_ready_d_reg[1] ,
    m_axi_arready,
    m_axi_wready,
    m_axi_awready,
    m_axi_bvalid,
    \gen_axilite.s_axi_bvalid_i_reg_1 ,
    \gen_axilite.s_axi_bvalid_i_reg_2 ,
    aa_rready,
    \gen_axilite.s_axi_awready_i_reg_1 );
  output \m_ready_d_reg[2] ;
  output m_axi_awready_1_sp_1;
  output \gen_axilite.s_axi_bvalid_i_reg_0 ;
  output \gen_axilite.s_axi_rvalid_i_reg_0 ;
  output \gen_axilite.s_axi_arready_i_reg_0 ;
  output m_axi_wready_0_sp_1;
  input [0:0]SR;
  input aclk;
  input [1:0]m_ready_d;
  input \gen_axilite.s_axi_awready_i_reg_0 ;
  input [0:0]s_axi_bready;
  input [0:0]Q;
  input \gen_axilite.s_axi_rvalid_i_reg_1 ;
  input aresetn_d;
  input [2:0]m_axi_rvalid;
  input [1:0]\m_ready_d_reg[1] ;
  input [2:0]m_axi_arready;
  input [2:0]m_axi_wready;
  input [2:0]m_axi_awready;
  input [2:0]m_axi_bvalid;
  input \gen_axilite.s_axi_bvalid_i_reg_1 ;
  input \gen_axilite.s_axi_bvalid_i_reg_2 ;
  input aa_rready;
  input \gen_axilite.s_axi_awready_i_reg_1 ;

  wire [0:0]Q;
  wire [0:0]SR;
  wire aa_rready;
  wire aclk;
  wire aresetn_d;
  wire \gen_axilite.s_axi_arready_i_i_1_n_0 ;
  wire \gen_axilite.s_axi_arready_i_reg_0 ;
  wire \gen_axilite.s_axi_awready_i_i_1_n_0 ;
  wire \gen_axilite.s_axi_awready_i_reg_0 ;
  wire \gen_axilite.s_axi_awready_i_reg_1 ;
  wire \gen_axilite.s_axi_bvalid_i_i_1_n_0 ;
  wire \gen_axilite.s_axi_bvalid_i_reg_0 ;
  wire \gen_axilite.s_axi_bvalid_i_reg_1 ;
  wire \gen_axilite.s_axi_bvalid_i_reg_2 ;
  wire \gen_axilite.s_axi_rvalid_i_i_1_n_0 ;
  wire \gen_axilite.s_axi_rvalid_i_reg_0 ;
  wire \gen_axilite.s_axi_rvalid_i_reg_1 ;
  wire [2:0]m_axi_arready;
  wire [2:0]m_axi_awready;
  wire m_axi_awready_1_sn_1;
  wire [2:0]m_axi_bvalid;
  wire [2:0]m_axi_rvalid;
  wire [2:0]m_axi_wready;
  wire m_axi_wready_0_sn_1;
  wire [1:0]m_ready_d;
  wire [1:0]\m_ready_d_reg[1] ;
  wire \m_ready_d_reg[2] ;
  wire [3:3]mi_arready;
  wire [3:3]mi_bvalid;
  wire [3:3]mi_rvalid;
  wire [3:3]mi_wready;

  assign m_axi_awready_1_sp_1 = m_axi_awready_1_sn_1;
  assign m_axi_wready_0_sp_1 = m_axi_wready_0_sn_1;
  LUT5 #(
    .INIT(32'hF0DF0000)) 
    \gen_axilite.s_axi_arready_i_i_1 
       (.I0(Q),
        .I1(\gen_axilite.s_axi_rvalid_i_reg_1 ),
        .I2(mi_arready),
        .I3(mi_rvalid),
        .I4(aresetn_d),
        .O(\gen_axilite.s_axi_arready_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axilite.s_axi_arready_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_axilite.s_axi_arready_i_i_1_n_0 ),
        .Q(mi_arready),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFEF00000010)) 
    \gen_axilite.s_axi_awready_i_i_1 
       (.I0(mi_bvalid),
        .I1(\gen_axilite.s_axi_awready_i_reg_1 ),
        .I2(Q),
        .I3(m_ready_d[1]),
        .I4(\gen_axilite.s_axi_awready_i_reg_0 ),
        .I5(mi_wready),
        .O(\gen_axilite.s_axi_awready_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axilite.s_axi_awready_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_axilite.s_axi_awready_i_i_1_n_0 ),
        .Q(mi_wready),
        .R(SR));
  LUT5 #(
    .INIT(32'h77F07700)) 
    \gen_axilite.s_axi_bvalid_i_i_1 
       (.I0(Q),
        .I1(\gen_axilite.s_axi_bvalid_i_reg_1 ),
        .I2(mi_wready),
        .I3(mi_bvalid),
        .I4(\gen_axilite.s_axi_bvalid_i_reg_2 ),
        .O(\gen_axilite.s_axi_bvalid_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axilite.s_axi_bvalid_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_axilite.s_axi_bvalid_i_i_1_n_0 ),
        .Q(mi_bvalid),
        .R(SR));
  LUT5 #(
    .INIT(32'h0F22FF00)) 
    \gen_axilite.s_axi_rvalid_i_i_1 
       (.I0(mi_arready),
        .I1(\gen_axilite.s_axi_rvalid_i_reg_1 ),
        .I2(aa_rready),
        .I3(mi_rvalid),
        .I4(Q),
        .O(\gen_axilite.s_axi_rvalid_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \gen_axilite.s_axi_rvalid_i_reg 
       (.C(aclk),
        .CE(1'b1),
        .D(\gen_axilite.s_axi_rvalid_i_i_1_n_0 ),
        .Q(mi_rvalid),
        .R(SR));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT5 #(
    .INIT(32'h3F1F3F11)) 
    \gen_no_arbiter.m_grant_hot_i[0]_inv_i_2 
       (.I0(m_axi_awready_1_sn_1),
        .I1(m_ready_d[1]),
        .I2(m_ready_d[0]),
        .I3(\gen_axilite.s_axi_awready_i_reg_0 ),
        .I4(\gen_axilite.s_axi_bvalid_i_reg_0 ),
        .O(\m_ready_d_reg[2] ));
  LUT6 #(
    .INIT(64'hAACCF0FFAACCF000)) 
    \m_ready_d[1]_i_2 
       (.I0(mi_arready),
        .I1(m_axi_arready[2]),
        .I2(m_axi_arready[1]),
        .I3(\m_ready_d_reg[1] [0]),
        .I4(\m_ready_d_reg[1] [1]),
        .I5(m_axi_arready[0]),
        .O(\gen_axilite.s_axi_arready_i_reg_0 ));
  LUT6 #(
    .INIT(64'hFFAAF0CC00AAF0CC)) 
    \m_ready_d[2]_i_5 
       (.I0(m_axi_awready[1]),
        .I1(m_axi_awready[0]),
        .I2(m_axi_awready[2]),
        .I3(\m_ready_d_reg[1] [1]),
        .I4(\m_ready_d_reg[1] [0]),
        .I5(mi_wready),
        .O(m_axi_awready_1_sn_1));
  LUT6 #(
    .INIT(64'hAAFFF0CCAA00F0CC)) 
    m_valid_i_i_3
       (.I0(mi_rvalid),
        .I1(m_axi_rvalid[0]),
        .I2(m_axi_rvalid[1]),
        .I3(\m_ready_d_reg[1] [0]),
        .I4(\m_ready_d_reg[1] [1]),
        .I5(m_axi_rvalid[2]),
        .O(\gen_axilite.s_axi_rvalid_i_reg_0 ));
  LUT6 #(
    .INIT(64'h55000F3355FF0F33)) 
    \s_axi_bvalid[0]_INST_0_i_1 
       (.I0(mi_bvalid),
        .I1(m_axi_bvalid[0]),
        .I2(m_axi_bvalid[1]),
        .I3(\m_ready_d_reg[1] [0]),
        .I4(\m_ready_d_reg[1] [1]),
        .I5(m_axi_bvalid[2]),
        .O(\gen_axilite.s_axi_bvalid_i_reg_0 ));
  LUT6 #(
    .INIT(64'h33000F5533FF0F55)) 
    \s_axi_wready[0]_INST_0_i_1 
       (.I0(m_axi_wready[0]),
        .I1(mi_wready),
        .I2(m_axi_wready[1]),
        .I3(\m_ready_d_reg[1] [0]),
        .I4(\m_ready_d_reg[1] [1]),
        .I5(m_axi_wready[2]),
        .O(m_axi_wready_0_sn_1));
endmodule

(* ORIG_REF_NAME = "axi_crossbar_v2_1_22_splitter" *) 
module system_xbar_0__axi_crossbar_v2_1_22_splitter
   (s_axi_wvalid_0_sp_1,
    m_ready_d,
    s_axi_wvalid,
    Q,
    m_valid_i,
    aa_grant_rnw,
    aresetn_d,
    m_ready_d0,
    \m_ready_d_reg[2]_0 ,
    \m_ready_d_reg[2]_1 ,
    \m_ready_d_reg[2]_2 ,
    aclk);
  output s_axi_wvalid_0_sp_1;
  output [2:0]m_ready_d;
  input [0:0]s_axi_wvalid;
  input [0:0]Q;
  input m_valid_i;
  input aa_grant_rnw;
  input aresetn_d;
  input [0:0]m_ready_d0;
  input \m_ready_d_reg[2]_0 ;
  input \m_ready_d_reg[2]_1 ;
  input \m_ready_d_reg[2]_2 ;
  input aclk;

  wire [0:0]Q;
  wire aa_grant_rnw;
  wire aclk;
  wire aresetn_d;
  wire [2:0]m_ready_d;
  wire [0:0]m_ready_d0;
  wire \m_ready_d[0]_i_1_n_0 ;
  wire \m_ready_d[1]_i_1_n_0 ;
  wire \m_ready_d[2]_i_1_n_0 ;
  wire \m_ready_d_reg[2]_0 ;
  wire \m_ready_d_reg[2]_1 ;
  wire \m_ready_d_reg[2]_2 ;
  wire m_valid_i;
  wire [0:0]s_axi_wvalid;
  wire s_axi_wvalid_0_sn_1;

  assign s_axi_wvalid_0_sp_1 = s_axi_wvalid_0_sn_1;
  LUT6 #(
    .INIT(64'h0000000000200000)) 
    \gen_axilite.s_axi_bvalid_i_i_2 
       (.I0(s_axi_wvalid),
        .I1(m_ready_d[1]),
        .I2(Q),
        .I3(m_ready_d[2]),
        .I4(m_valid_i),
        .I5(aa_grant_rnw),
        .O(s_axi_wvalid_0_sn_1));
  LUT6 #(
    .INIT(64'hA0AAA0A020222020)) 
    \m_ready_d[0]_i_1 
       (.I0(aresetn_d),
        .I1(m_ready_d0),
        .I2(m_ready_d[0]),
        .I3(\m_ready_d_reg[2]_0 ),
        .I4(\m_ready_d_reg[2]_1 ),
        .I5(\m_ready_d_reg[2]_2 ),
        .O(\m_ready_d[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8888888808000808)) 
    \m_ready_d[1]_i_1 
       (.I0(aresetn_d),
        .I1(m_ready_d0),
        .I2(m_ready_d[0]),
        .I3(\m_ready_d_reg[2]_0 ),
        .I4(\m_ready_d_reg[2]_1 ),
        .I5(\m_ready_d_reg[2]_2 ),
        .O(\m_ready_d[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000002A222A2A)) 
    \m_ready_d[2]_i_1 
       (.I0(aresetn_d),
        .I1(m_ready_d0),
        .I2(m_ready_d[0]),
        .I3(\m_ready_d_reg[2]_0 ),
        .I4(\m_ready_d_reg[2]_1 ),
        .I5(\m_ready_d_reg[2]_2 ),
        .O(\m_ready_d[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \m_ready_d_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\m_ready_d[0]_i_1_n_0 ),
        .Q(m_ready_d[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_ready_d_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(\m_ready_d[1]_i_1_n_0 ),
        .Q(m_ready_d[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_ready_d_reg[2] 
       (.C(aclk),
        .CE(1'b1),
        .D(\m_ready_d[2]_i_1_n_0 ),
        .Q(m_ready_d[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_crossbar_v2_1_22_splitter" *) 
module system_xbar_0__axi_crossbar_v2_1_22_splitter__parameterized0
   (m_ready_d,
    \m_ready_d_reg[1]_0 ,
    aa_grant_rnw,
    m_valid_i,
    m_ready_d0,
    aresetn_d,
    aclk);
  output [1:0]m_ready_d;
  input \m_ready_d_reg[1]_0 ;
  input aa_grant_rnw;
  input m_valid_i;
  input [0:0]m_ready_d0;
  input aresetn_d;
  input aclk;

  wire aa_grant_rnw;
  wire aclk;
  wire aresetn_d;
  wire [1:0]m_ready_d;
  wire [0:0]m_ready_d0;
  wire \m_ready_d[0]_i_1_n_0 ;
  wire \m_ready_d[1]_i_1_n_0 ;
  wire \m_ready_d_reg[1]_0 ;
  wire m_valid_i;

  LUT6 #(
    .INIT(64'h007F000000000000)) 
    \m_ready_d[0]_i_1 
       (.I0(\m_ready_d_reg[1]_0 ),
        .I1(aa_grant_rnw),
        .I2(m_valid_i),
        .I3(m_ready_d[1]),
        .I4(m_ready_d0),
        .I5(aresetn_d),
        .O(\m_ready_d[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000FF8000000000)) 
    \m_ready_d[1]_i_1 
       (.I0(\m_ready_d_reg[1]_0 ),
        .I1(aa_grant_rnw),
        .I2(m_valid_i),
        .I3(m_ready_d[1]),
        .I4(m_ready_d0),
        .I5(aresetn_d),
        .O(\m_ready_d[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \m_ready_d_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(\m_ready_d[0]_i_1_n_0 ),
        .Q(m_ready_d[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_ready_d_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(\m_ready_d[1]_i_1_n_0 ),
        .Q(m_ready_d[1]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "axi_register_slice_v2_1_21_axic_register_slice" *) 
module system_xbar_0__axi_register_slice_v2_1_21_axic_register_slice
   (sr_rvalid,
    aa_rready,
    m_ready_d0,
    s_axi_rvalid,
    m_axi_rready,
    \aresetn_d_reg[1]_0 ,
    \m_payload_i_reg[34]_0 ,
    m_valid_i_reg_0,
    aclk,
    s_ready_i_reg_0,
    s_axi_rready,
    m_valid_i,
    aa_grant_rnw,
    m_ready_d,
    m_axi_rresp,
    Q,
    m_axi_rdata,
    p_0_in1_in,
    \m_axi_rready[2] ,
    SR,
    E);
  output sr_rvalid;
  output aa_rready;
  output [0:0]m_ready_d0;
  output [0:0]s_axi_rvalid;
  output [2:0]m_axi_rready;
  output [1:0]\aresetn_d_reg[1]_0 ;
  output [33:0]\m_payload_i_reg[34]_0 ;
  input m_valid_i_reg_0;
  input aclk;
  input s_ready_i_reg_0;
  input [0:0]s_axi_rready;
  input m_valid_i;
  input aa_grant_rnw;
  input [0:0]m_ready_d;
  input [5:0]m_axi_rresp;
  input [1:0]Q;
  input [95:0]m_axi_rdata;
  input p_0_in1_in;
  input [2:0]\m_axi_rready[2] ;
  input [0:0]SR;
  input [0:0]E;

  wire [0:0]E;
  wire [1:0]Q;
  wire [0:0]SR;
  wire aa_grant_rnw;
  wire aa_rready;
  wire aclk;
  wire [1:0]\aresetn_d_reg[1]_0 ;
  wire [95:0]m_axi_rdata;
  wire [2:0]m_axi_rready;
  wire [2:0]\m_axi_rready[2] ;
  wire \m_payload_i[12]_i_2_n_0 ;
  wire \m_payload_i[13]_i_2_n_0 ;
  wire \m_payload_i[14]_i_2_n_0 ;
  wire \m_payload_i[15]_i_2_n_0 ;
  wire \m_payload_i[17]_i_2_n_0 ;
  wire \m_payload_i[18]_i_2_n_0 ;
  wire \m_payload_i[25]_i_2_n_0 ;
  wire \m_payload_i[26]_i_2_n_0 ;
  wire \m_payload_i[28]_i_2_n_0 ;
  wire \m_payload_i[29]_i_2_n_0 ;
  wire \m_payload_i[30]_i_2_n_0 ;
  wire \m_payload_i[31]_i_2_n_0 ;
  wire \m_payload_i[33]_i_2_n_0 ;
  wire \m_payload_i[34]_i_3_n_0 ;
  wire \m_payload_i[5]_i_2_n_0 ;
  wire \m_payload_i[6]_i_2_n_0 ;
  wire \m_payload_i[7]_i_2_n_0 ;
  wire [33:0]\m_payload_i_reg[34]_0 ;
  wire \m_payload_i_reg_n_0_[0] ;
  wire [0:0]m_ready_d;
  wire [0:0]m_ready_d0;
  wire m_valid_i;
  wire m_valid_i_reg_0;
  wire p_0_in1_in;
  wire [0:0]s_axi_rvalid;
  wire s_ready_i_reg_0;
  wire [34:0]skid_buffer;
  wire \skid_buffer[10]_i_1_n_0 ;
  wire \skid_buffer[11]_i_1_n_0 ;
  wire \skid_buffer[16]_i_1_n_0 ;
  wire \skid_buffer[19]_i_1_n_0 ;
  wire \skid_buffer[20]_i_1_n_0 ;
  wire \skid_buffer[21]_i_1_n_0 ;
  wire \skid_buffer[22]_i_1_n_0 ;
  wire \skid_buffer[23]_i_1_n_0 ;
  wire \skid_buffer[24]_i_1_n_0 ;
  wire \skid_buffer[27]_i_1_n_0 ;
  wire \skid_buffer[32]_i_1_n_0 ;
  wire \skid_buffer[3]_i_1_n_0 ;
  wire \skid_buffer[4]_i_1_n_0 ;
  wire \skid_buffer[8]_i_1_n_0 ;
  wire \skid_buffer[9]_i_1_n_0 ;
  wire \skid_buffer_reg_n_0_[0] ;
  wire \skid_buffer_reg_n_0_[10] ;
  wire \skid_buffer_reg_n_0_[11] ;
  wire \skid_buffer_reg_n_0_[12] ;
  wire \skid_buffer_reg_n_0_[13] ;
  wire \skid_buffer_reg_n_0_[14] ;
  wire \skid_buffer_reg_n_0_[15] ;
  wire \skid_buffer_reg_n_0_[16] ;
  wire \skid_buffer_reg_n_0_[17] ;
  wire \skid_buffer_reg_n_0_[18] ;
  wire \skid_buffer_reg_n_0_[19] ;
  wire \skid_buffer_reg_n_0_[20] ;
  wire \skid_buffer_reg_n_0_[21] ;
  wire \skid_buffer_reg_n_0_[22] ;
  wire \skid_buffer_reg_n_0_[23] ;
  wire \skid_buffer_reg_n_0_[24] ;
  wire \skid_buffer_reg_n_0_[25] ;
  wire \skid_buffer_reg_n_0_[26] ;
  wire \skid_buffer_reg_n_0_[27] ;
  wire \skid_buffer_reg_n_0_[28] ;
  wire \skid_buffer_reg_n_0_[29] ;
  wire \skid_buffer_reg_n_0_[30] ;
  wire \skid_buffer_reg_n_0_[31] ;
  wire \skid_buffer_reg_n_0_[32] ;
  wire \skid_buffer_reg_n_0_[33] ;
  wire \skid_buffer_reg_n_0_[34] ;
  wire \skid_buffer_reg_n_0_[3] ;
  wire \skid_buffer_reg_n_0_[4] ;
  wire \skid_buffer_reg_n_0_[5] ;
  wire \skid_buffer_reg_n_0_[6] ;
  wire \skid_buffer_reg_n_0_[7] ;
  wire \skid_buffer_reg_n_0_[8] ;
  wire \skid_buffer_reg_n_0_[9] ;
  wire sr_rvalid;

  FDRE #(
    .INIT(1'b0)) 
    \aresetn_d_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(1'b1),
        .Q(\aresetn_d_reg[1]_0 [0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \aresetn_d_reg[1] 
       (.C(aclk),
        .CE(1'b1),
        .D(\aresetn_d_reg[1]_0 [0]),
        .Q(\aresetn_d_reg[1]_0 [1]),
        .R(SR));
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_rready[0]_INST_0 
       (.I0(aa_rready),
        .I1(\m_axi_rready[2] [0]),
        .O(m_axi_rready[0]));
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_rready[1]_INST_0 
       (.I0(aa_rready),
        .I1(\m_axi_rready[2] [1]),
        .O(m_axi_rready[1]));
  LUT2 #(
    .INIT(4'h8)) 
    \m_axi_rready[2]_INST_0 
       (.I0(aa_rready),
        .I1(\m_axi_rready[2] [2]),
        .O(m_axi_rready[2]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_payload_i[10]_i_1 
       (.I0(\skid_buffer[10]_i_1_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[10] ),
        .O(skid_buffer[10]));
  LUT3 #(
    .INIT(8'hB8)) 
    \m_payload_i[11]_i_1 
       (.I0(\skid_buffer[11]_i_1_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[11] ),
        .O(skid_buffer[11]));
  LUT3 #(
    .INIT(8'h0E)) 
    \m_payload_i[12]_i_1 
       (.I0(\skid_buffer_reg_n_0_[12] ),
        .I1(aa_rready),
        .I2(\m_payload_i[12]_i_2_n_0 ),
        .O(skid_buffer[12]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT5 #(
    .INIT(32'h313D0000)) 
    \m_payload_i[12]_i_2 
       (.I0(m_axi_rdata[9]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(m_axi_rdata[73]),
        .I4(aa_rready),
        .O(\m_payload_i[12]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h0E)) 
    \m_payload_i[13]_i_1 
       (.I0(\skid_buffer_reg_n_0_[13] ),
        .I1(aa_rready),
        .I2(\m_payload_i[13]_i_2_n_0 ),
        .O(skid_buffer[13]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT5 #(
    .INIT(32'h00CC440C)) 
    \m_payload_i[13]_i_2 
       (.I0(m_axi_rdata[74]),
        .I1(aa_rready),
        .I2(m_axi_rdata[10]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(\m_payload_i[13]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h0E)) 
    \m_payload_i[14]_i_1 
       (.I0(\skid_buffer_reg_n_0_[14] ),
        .I1(aa_rready),
        .I2(\m_payload_i[14]_i_2_n_0 ),
        .O(skid_buffer[14]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h0C4C)) 
    \m_payload_i[14]_i_2 
       (.I0(m_axi_rdata[75]),
        .I1(aa_rready),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(\m_payload_i[14]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h0E)) 
    \m_payload_i[15]_i_1 
       (.I0(\skid_buffer_reg_n_0_[15] ),
        .I1(aa_rready),
        .I2(\m_payload_i[15]_i_2_n_0 ),
        .O(skid_buffer[15]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h0A2A)) 
    \m_payload_i[15]_i_2 
       (.I0(aa_rready),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(m_axi_rdata[76]),
        .O(\m_payload_i[15]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \m_payload_i[16]_i_1 
       (.I0(\skid_buffer[16]_i_1_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[16] ),
        .O(skid_buffer[16]));
  LUT3 #(
    .INIT(8'h0E)) 
    \m_payload_i[17]_i_1 
       (.I0(\skid_buffer_reg_n_0_[17] ),
        .I1(aa_rready),
        .I2(\m_payload_i[17]_i_2_n_0 ),
        .O(skid_buffer[17]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h0A2A)) 
    \m_payload_i[17]_i_2 
       (.I0(aa_rready),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(m_axi_rdata[78]),
        .O(\m_payload_i[17]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h0E)) 
    \m_payload_i[18]_i_1 
       (.I0(\skid_buffer_reg_n_0_[18] ),
        .I1(aa_rready),
        .I2(\m_payload_i[18]_i_2_n_0 ),
        .O(skid_buffer[18]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h0A2A)) 
    \m_payload_i[18]_i_2 
       (.I0(aa_rready),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(m_axi_rdata[79]),
        .O(\m_payload_i[18]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_payload_i[19]_i_1 
       (.I0(\skid_buffer[19]_i_1_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[19] ),
        .O(skid_buffer[19]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_payload_i[20]_i_1 
       (.I0(\skid_buffer[20]_i_1_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[20] ),
        .O(skid_buffer[20]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_payload_i[21]_i_1 
       (.I0(\skid_buffer[21]_i_1_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[21] ),
        .O(skid_buffer[21]));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_payload_i[22]_i_1 
       (.I0(\skid_buffer[22]_i_1_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[22] ),
        .O(skid_buffer[22]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_payload_i[23]_i_1 
       (.I0(\skid_buffer[23]_i_1_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[23] ),
        .O(skid_buffer[23]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_payload_i[24]_i_1 
       (.I0(\skid_buffer[24]_i_1_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[24] ),
        .O(skid_buffer[24]));
  LUT3 #(
    .INIT(8'h0E)) 
    \m_payload_i[25]_i_1 
       (.I0(\skid_buffer_reg_n_0_[25] ),
        .I1(aa_rready),
        .I2(\m_payload_i[25]_i_2_n_0 ),
        .O(skid_buffer[25]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h0C4C)) 
    \m_payload_i[25]_i_2 
       (.I0(m_axi_rdata[86]),
        .I1(aa_rready),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(\m_payload_i[25]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h0E)) 
    \m_payload_i[26]_i_1 
       (.I0(\skid_buffer_reg_n_0_[26] ),
        .I1(aa_rready),
        .I2(\m_payload_i[26]_i_2_n_0 ),
        .O(skid_buffer[26]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h0A2A)) 
    \m_payload_i[26]_i_2 
       (.I0(aa_rready),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(m_axi_rdata[87]),
        .O(\m_payload_i[26]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \m_payload_i[27]_i_1 
       (.I0(\skid_buffer[27]_i_1_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[27] ),
        .O(skid_buffer[27]));
  LUT3 #(
    .INIT(8'h0E)) 
    \m_payload_i[28]_i_1 
       (.I0(\skid_buffer_reg_n_0_[28] ),
        .I1(aa_rready),
        .I2(\m_payload_i[28]_i_2_n_0 ),
        .O(skid_buffer[28]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h5700)) 
    \m_payload_i[28]_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(m_axi_rdata[89]),
        .I3(aa_rready),
        .O(\m_payload_i[28]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h0E)) 
    \m_payload_i[29]_i_1 
       (.I0(\skid_buffer_reg_n_0_[29] ),
        .I1(aa_rready),
        .I2(\m_payload_i[29]_i_2_n_0 ),
        .O(skid_buffer[29]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h0A2A)) 
    \m_payload_i[29]_i_2 
       (.I0(aa_rready),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(m_axi_rdata[90]),
        .O(\m_payload_i[29]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h0E)) 
    \m_payload_i[30]_i_1 
       (.I0(\skid_buffer_reg_n_0_[30] ),
        .I1(aa_rready),
        .I2(\m_payload_i[30]_i_2_n_0 ),
        .O(skid_buffer[30]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h3700)) 
    \m_payload_i[30]_i_2 
       (.I0(m_axi_rdata[91]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(aa_rready),
        .O(\m_payload_i[30]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h0E)) 
    \m_payload_i[31]_i_1 
       (.I0(\skid_buffer_reg_n_0_[31] ),
        .I1(aa_rready),
        .I2(\m_payload_i[31]_i_2_n_0 ),
        .O(skid_buffer[31]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h0C4C)) 
    \m_payload_i[31]_i_2 
       (.I0(m_axi_rdata[92]),
        .I1(aa_rready),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(\m_payload_i[31]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \m_payload_i[32]_i_1 
       (.I0(\skid_buffer[32]_i_1_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[32] ),
        .O(skid_buffer[32]));
  LUT3 #(
    .INIT(8'h0E)) 
    \m_payload_i[33]_i_1 
       (.I0(\skid_buffer_reg_n_0_[33] ),
        .I1(aa_rready),
        .I2(\m_payload_i[33]_i_2_n_0 ),
        .O(skid_buffer[33]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h3700)) 
    \m_payload_i[33]_i_2 
       (.I0(m_axi_rdata[94]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(aa_rready),
        .O(\m_payload_i[33]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h0E)) 
    \m_payload_i[34]_i_2 
       (.I0(\skid_buffer_reg_n_0_[34] ),
        .I1(aa_rready),
        .I2(\m_payload_i[34]_i_3_n_0 ),
        .O(skid_buffer[34]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT5 #(
    .INIT(32'h00C40CC4)) 
    \m_payload_i[34]_i_3 
       (.I0(m_axi_rdata[31]),
        .I1(aa_rready),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(m_axi_rdata[95]),
        .O(\m_payload_i[34]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_payload_i[3]_i_1 
       (.I0(\skid_buffer[3]_i_1_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[3] ),
        .O(skid_buffer[3]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_payload_i[4]_i_1 
       (.I0(\skid_buffer[4]_i_1_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[4] ),
        .O(skid_buffer[4]));
  LUT3 #(
    .INIT(8'h0E)) 
    \m_payload_i[5]_i_1 
       (.I0(\skid_buffer_reg_n_0_[5] ),
        .I1(aa_rready),
        .I2(\m_payload_i[5]_i_2_n_0 ),
        .O(skid_buffer[5]));
  LUT6 #(
    .INIT(64'h0530053F00000000)) 
    \m_payload_i[5]_i_2 
       (.I0(m_axi_rdata[34]),
        .I1(m_axi_rdata[66]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(m_axi_rdata[2]),
        .I5(aa_rready),
        .O(\m_payload_i[5]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h0E)) 
    \m_payload_i[6]_i_1 
       (.I0(\skid_buffer_reg_n_0_[6] ),
        .I1(aa_rready),
        .I2(\m_payload_i[6]_i_2_n_0 ),
        .O(skid_buffer[6]));
  LUT6 #(
    .INIT(64'h030503F500000000)) 
    \m_payload_i[6]_i_2 
       (.I0(m_axi_rdata[3]),
        .I1(m_axi_rdata[35]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(m_axi_rdata[67]),
        .I5(aa_rready),
        .O(\m_payload_i[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h0E)) 
    \m_payload_i[7]_i_1 
       (.I0(\skid_buffer_reg_n_0_[7] ),
        .I1(aa_rready),
        .I2(\m_payload_i[7]_i_2_n_0 ),
        .O(skid_buffer[7]));
  LUT6 #(
    .INIT(64'h0530053F00000000)) 
    \m_payload_i[7]_i_2 
       (.I0(m_axi_rdata[36]),
        .I1(m_axi_rdata[68]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(m_axi_rdata[4]),
        .I5(aa_rready),
        .O(\m_payload_i[7]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \m_payload_i[8]_i_1 
       (.I0(\skid_buffer[8]_i_1_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[8] ),
        .O(skid_buffer[8]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \m_payload_i[9]_i_1 
       (.I0(\skid_buffer[9]_i_1_n_0 ),
        .I1(aa_rready),
        .I2(\skid_buffer_reg_n_0_[9] ),
        .O(skid_buffer[9]));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[0] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[0]),
        .Q(\m_payload_i_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[10] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[10]),
        .Q(\m_payload_i_reg[34]_0 [9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[11] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[11]),
        .Q(\m_payload_i_reg[34]_0 [10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[12] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[12]),
        .Q(\m_payload_i_reg[34]_0 [11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[13] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[13]),
        .Q(\m_payload_i_reg[34]_0 [12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[14] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[14]),
        .Q(\m_payload_i_reg[34]_0 [13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[15] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[15]),
        .Q(\m_payload_i_reg[34]_0 [14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[16] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[16]),
        .Q(\m_payload_i_reg[34]_0 [15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[17] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[17]),
        .Q(\m_payload_i_reg[34]_0 [16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[18] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[18]),
        .Q(\m_payload_i_reg[34]_0 [17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[19] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[19]),
        .Q(\m_payload_i_reg[34]_0 [18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[20] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[20]),
        .Q(\m_payload_i_reg[34]_0 [19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[21] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[21]),
        .Q(\m_payload_i_reg[34]_0 [20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[22] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[22]),
        .Q(\m_payload_i_reg[34]_0 [21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[23] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[23]),
        .Q(\m_payload_i_reg[34]_0 [22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[24] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[24]),
        .Q(\m_payload_i_reg[34]_0 [23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[25] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[25]),
        .Q(\m_payload_i_reg[34]_0 [24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[26] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[26]),
        .Q(\m_payload_i_reg[34]_0 [25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[27] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[27]),
        .Q(\m_payload_i_reg[34]_0 [26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[28] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[28]),
        .Q(\m_payload_i_reg[34]_0 [27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[29] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[29]),
        .Q(\m_payload_i_reg[34]_0 [28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[30] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[30]),
        .Q(\m_payload_i_reg[34]_0 [29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[31] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[31]),
        .Q(\m_payload_i_reg[34]_0 [30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[32] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[32]),
        .Q(\m_payload_i_reg[34]_0 [31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[33] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[33]),
        .Q(\m_payload_i_reg[34]_0 [32]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[34] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[34]),
        .Q(\m_payload_i_reg[34]_0 [33]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[3] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[3]),
        .Q(\m_payload_i_reg[34]_0 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[4] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[4]),
        .Q(\m_payload_i_reg[34]_0 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[5] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[5]),
        .Q(\m_payload_i_reg[34]_0 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[6] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[6]),
        .Q(\m_payload_i_reg[34]_0 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[7] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[7]),
        .Q(\m_payload_i_reg[34]_0 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[8] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[8]),
        .Q(\m_payload_i_reg[34]_0 [7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m_payload_i_reg[9] 
       (.C(aclk),
        .CE(E),
        .D(skid_buffer[9]),
        .Q(\m_payload_i_reg[34]_0 [8]),
        .R(1'b0));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT5 #(
    .INIT(32'hFFFF8000)) 
    \m_ready_d[1]_i_3 
       (.I0(\m_payload_i_reg_n_0_[0] ),
        .I1(sr_rvalid),
        .I2(m_valid_i),
        .I3(aa_grant_rnw),
        .I4(m_ready_d),
        .O(m_ready_d0));
  FDRE #(
    .INIT(1'b0)) 
    m_valid_i_reg
       (.C(aclk),
        .CE(1'b1),
        .D(m_valid_i_reg_0),
        .Q(sr_rvalid),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \s_axi_rvalid[0]_INST_0 
       (.I0(sr_rvalid),
        .I1(p_0_in1_in),
        .O(s_axi_rvalid));
  FDRE #(
    .INIT(1'b0)) 
    s_ready_i_reg
       (.C(aclk),
        .CE(1'b1),
        .D(s_ready_i_reg_0),
        .Q(aa_rready),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    \skid_buffer[0]_i_1 
       (.I0(aa_rready),
        .I1(\skid_buffer_reg_n_0_[0] ),
        .O(skid_buffer[0]));
  LUT5 #(
    .INIT(32'h0FCA00CA)) 
    \skid_buffer[10]_i_1 
       (.I0(m_axi_rdata[7]),
        .I1(m_axi_rdata[71]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(m_axi_rdata[39]),
        .O(\skid_buffer[10]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h00CA)) 
    \skid_buffer[11]_i_1 
       (.I0(m_axi_rdata[8]),
        .I1(m_axi_rdata[72]),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(\skid_buffer[11]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \skid_buffer[16]_i_1 
       (.I0(m_axi_rdata[77]),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\skid_buffer[16]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \skid_buffer[19]_i_1 
       (.I0(m_axi_rdata[80]),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\skid_buffer[19]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \skid_buffer[20]_i_1 
       (.I0(m_axi_rdata[81]),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(\skid_buffer[20]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \skid_buffer[21]_i_1 
       (.I0(m_axi_rdata[82]),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(\skid_buffer[21]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \skid_buffer[22]_i_1 
       (.I0(m_axi_rdata[83]),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\skid_buffer[22]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \skid_buffer[23]_i_1 
       (.I0(m_axi_rdata[84]),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(\skid_buffer[23]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \skid_buffer[24]_i_1 
       (.I0(m_axi_rdata[85]),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\skid_buffer[24]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \skid_buffer[27]_i_1 
       (.I0(m_axi_rdata[88]),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\skid_buffer[27]_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \skid_buffer[32]_i_1 
       (.I0(m_axi_rdata[93]),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(\skid_buffer[32]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0CAF0CA0)) 
    \skid_buffer[3]_i_1 
       (.I0(m_axi_rdata[32]),
        .I1(m_axi_rdata[64]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(m_axi_rdata[0]),
        .O(\skid_buffer[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0FCA00CA)) 
    \skid_buffer[4]_i_1 
       (.I0(m_axi_rdata[1]),
        .I1(m_axi_rdata[33]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(m_axi_rdata[65]),
        .O(\skid_buffer[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0FCA00CA)) 
    \skid_buffer[8]_i_1 
       (.I0(m_axi_rdata[5]),
        .I1(m_axi_rdata[69]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(m_axi_rdata[37]),
        .O(\skid_buffer[8]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h0FCA00CA)) 
    \skid_buffer[9]_i_1 
       (.I0(m_axi_rdata[6]),
        .I1(m_axi_rdata[70]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(m_axi_rdata[38]),
        .O(\skid_buffer[9]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[0] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[0]),
        .Q(\skid_buffer_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[10] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[10]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[11] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[11]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[12] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[12]),
        .Q(\skid_buffer_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[13] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[13]),
        .Q(\skid_buffer_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[14] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[14]),
        .Q(\skid_buffer_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[15] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[15]),
        .Q(\skid_buffer_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[16] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[16]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[16] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[17] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[17]),
        .Q(\skid_buffer_reg_n_0_[17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[18] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[18]),
        .Q(\skid_buffer_reg_n_0_[18] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[19] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[19]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[19] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[20] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[20]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[20] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[21] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[21]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[21] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[22] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[22]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[22] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[23] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[23]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[23] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[24] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[24]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[24] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[25] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[25]),
        .Q(\skid_buffer_reg_n_0_[25] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[26] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[26]),
        .Q(\skid_buffer_reg_n_0_[26] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[27] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[27]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[27] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[28] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[28]),
        .Q(\skid_buffer_reg_n_0_[28] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[29] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[29]),
        .Q(\skid_buffer_reg_n_0_[29] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[30] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[30]),
        .Q(\skid_buffer_reg_n_0_[30] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[31] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[31]),
        .Q(\skid_buffer_reg_n_0_[31] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[32] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[32]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[32] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[33] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[33]),
        .Q(\skid_buffer_reg_n_0_[33] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[34] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[34]),
        .Q(\skid_buffer_reg_n_0_[34] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[3] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[3]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[4] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[4]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[5] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[5]),
        .Q(\skid_buffer_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[6] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[6]),
        .Q(\skid_buffer_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[7] 
       (.C(aclk),
        .CE(1'b1),
        .D(skid_buffer[7]),
        .Q(\skid_buffer_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[8] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[8]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \skid_buffer_reg[9] 
       (.C(aclk),
        .CE(aa_rready),
        .D(\skid_buffer[9]_i_1_n_0 ),
        .Q(\skid_buffer_reg_n_0_[9] ),
        .R(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "system_xlconstant_0_0,xlconstant_v1_1_7_xlconstant,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "xlconstant_v1_1_7_xlconstant,Vivado 2020.1" *) 
module system_xlconstant_0_0
   (dout);
  output [0:0]dout;

  wire \<const1> ;

  assign dout[0] = \<const1> ;
  VCC VCC
       (.P(\<const1> ));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module system_bayer2rgb_0_0_blk_mem_gen_generic_cstr
   (doutb,
    clka,
    clkb,
    wea,
    addra,
    addrb,
    dina,
    pwropt,
    pwropt_1,
    pwropt_2,
    pwropt_3);
  output [7:0]doutb;
  input clka;
  input clkb;
  input [0:0]wea;
  input [10:0]addra;
  input [10:0]addrb;
  input [7:0]dina;
  input pwropt;
  input pwropt_1;
  input pwropt_2;
  input pwropt_3;

  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire pwropt;
  wire pwropt_1;
  wire pwropt_2;
  wire pwropt_3;
  wire [0:0]wea;

  system_bayer2rgb_0_0_blk_mem_gen_prim_width \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .pwropt(pwropt),
        .pwropt_1(pwropt_1),
        .pwropt_2(pwropt_2),
        .pwropt_3(pwropt_3),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module system_bayer2rgb_0_0_blk_mem_gen_generic_cstr_2
   (doutb,
    clka,
    clkb,
    wea,
    addra,
    addrb,
    dina,
    pwropt,
    pwropt_1,
    pwropt_2,
    pwropt_3,
    pwropt_4);
  output [7:0]doutb;
  input clka;
  input clkb;
  input [0:0]wea;
  input [10:0]addra;
  input [10:0]addrb;
  input [7:0]dina;
  input pwropt;
  input pwropt_1;
  input pwropt_2;
  input pwropt_3;
  input pwropt_4;

  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire pwropt;
  wire pwropt_1;
  wire pwropt_2;
  wire pwropt_3;
  wire pwropt_4;
  wire [0:0]wea;

  system_bayer2rgb_0_0_blk_mem_gen_prim_width_3 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .pwropt(pwropt),
        .pwropt_1(pwropt_1),
        .pwropt_2(pwropt_2),
        .pwropt_3(pwropt_3),
        .pwropt_4(pwropt_4),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module system_bayer2rgb_0_0_blk_mem_gen_generic_cstr_7
   (doutb,
    clka,
    clkb,
    wea,
    addra,
    addrb,
    dina,
    pwropt,
    pwropt_1,
    pwropt_2,
    pwropt_3,
    pwropt_4,
    pwropt_5,
    pwropt_6,
    pwropt_7);
  output [7:0]doutb;
  input clka;
  input clkb;
  input [0:0]wea;
  input [10:0]addra;
  input [10:0]addrb;
  input [7:0]dina;
  input pwropt;
  input pwropt_1;
  input pwropt_2;
  input pwropt_3;
  input pwropt_4;
  input pwropt_5;
  input pwropt_6;
  input pwropt_7;

  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire pwropt;
  wire pwropt_1;
  wire pwropt_2;
  wire pwropt_3;
  wire pwropt_4;
  wire pwropt_5;
  wire pwropt_6;
  wire pwropt_7;
  wire [0:0]wea;

  system_bayer2rgb_0_0_blk_mem_gen_prim_width_8 \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .pwropt(pwropt),
        .pwropt_1(pwropt_1),
        .pwropt_2(pwropt_2),
        .pwropt_3(pwropt_3),
        .pwropt_4(pwropt_4),
        .pwropt_5(pwropt_5),
        .pwropt_6(pwropt_6),
        .pwropt_7(pwropt_7),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module system_bayer2rgb_0_0_blk_mem_gen_prim_width
   (doutb,
    clka,
    clkb,
    wea,
    addra,
    addrb,
    dina,
    pwropt,
    pwropt_1,
    pwropt_2,
    pwropt_3);
  output [7:0]doutb;
  input clka;
  input clkb;
  input [0:0]wea;
  input [10:0]addra;
  input [10:0]addrb;
  input [7:0]dina;
  input pwropt;
  input pwropt_1;
  input pwropt_2;
  input pwropt_3;

  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire pwropt;
  wire pwropt_1;
  wire pwropt_2;
  wire pwropt_3;
  wire [0:0]wea;

  system_bayer2rgb_0_0_blk_mem_gen_prim_wrapper \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .pwropt(pwropt),
        .pwropt_1(pwropt_1),
        .pwropt_2(pwropt_2),
        .pwropt_3(pwropt_3),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module system_bayer2rgb_0_0_blk_mem_gen_prim_width_3
   (doutb,
    clka,
    clkb,
    wea,
    addra,
    addrb,
    dina,
    pwropt,
    pwropt_1,
    pwropt_2,
    pwropt_3,
    pwropt_4);
  output [7:0]doutb;
  input clka;
  input clkb;
  input [0:0]wea;
  input [10:0]addra;
  input [10:0]addrb;
  input [7:0]dina;
  input pwropt;
  input pwropt_1;
  input pwropt_2;
  input pwropt_3;
  input pwropt_4;

  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire pwropt;
  wire pwropt_1;
  wire pwropt_2;
  wire pwropt_3;
  wire pwropt_4;
  wire [0:0]wea;

  system_bayer2rgb_0_0_blk_mem_gen_prim_wrapper_4 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .pwropt(pwropt),
        .pwropt_1(pwropt_1),
        .pwropt_2(pwropt_2),
        .pwropt_3(pwropt_3),
        .pwropt_4(pwropt_4),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module system_bayer2rgb_0_0_blk_mem_gen_prim_width_8
   (doutb,
    clka,
    clkb,
    wea,
    addra,
    addrb,
    dina,
    pwropt,
    pwropt_1,
    pwropt_2,
    pwropt_3,
    pwropt_4,
    pwropt_5,
    pwropt_6,
    pwropt_7);
  output [7:0]doutb;
  input clka;
  input clkb;
  input [0:0]wea;
  input [10:0]addra;
  input [10:0]addrb;
  input [7:0]dina;
  input pwropt;
  input pwropt_1;
  input pwropt_2;
  input pwropt_3;
  input pwropt_4;
  input pwropt_5;
  input pwropt_6;
  input pwropt_7;

  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire pwropt;
  wire pwropt_1;
  wire pwropt_2;
  wire pwropt_3;
  wire pwropt_4;
  wire pwropt_5;
  wire pwropt_6;
  wire pwropt_7;
  wire [0:0]wea;

  system_bayer2rgb_0_0_blk_mem_gen_prim_wrapper_9 \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .pwropt(pwropt),
        .pwropt_1(pwropt_1),
        .pwropt_2(pwropt_2),
        .pwropt_3(pwropt_3),
        .pwropt_4(pwropt_4),
        .pwropt_5(pwropt_5),
        .pwropt_6(pwropt_6),
        .pwropt_7(pwropt_7),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module system_bayer2rgb_0_0_blk_mem_gen_prim_wrapper
   (doutb,
    clka,
    clkb,
    wea,
    addra,
    addrb,
    dina,
    pwropt,
    pwropt_1,
    pwropt_2,
    pwropt_3);
  output [7:0]doutb;
  input clka;
  input clkb;
  input [0:0]wea;
  input [10:0]addra;
  input [10:0]addrb;
  input [7:0]dina;
  input pwropt;
  input pwropt_1;
  input pwropt_2;
  input pwropt_3;

  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_ENBWREN_cooolgate_en_sig_7 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_REGCEB_cooolgate_en_sig_10 ;
  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire pwropt;
  wire pwropt_1;
  wire pwropt_2;
  wire pwropt_3;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:8]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IS_CLOCK_GATED *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* POWER_OPTED_CE = "REGCEB=NEW:ENBWREN=NEW:REGCEAREGCE=AUG" *) 
  (* PWROPT_WRITE_MODE_CHANGE_A = "WRITE_FIRST:NO_CHANGE_1" *) 
  RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(9),
    .READ_WIDTH_B(9),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(9),
    .WRITE_WIDTH_B(9)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR({addra,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({addrb,1'b0,1'b0,1'b0}),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:8],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(wea),
        .ENBWREN(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_ENBWREN_cooolgate_en_sig_7 ),
        .REGCEAREGCE(1'b0),
        .REGCEB(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_REGCEB_cooolgate_en_sig_10 ),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
  LUT4 #(
    .INIT(16'hfffe)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_ENBWREN_cooolgate_en_gate_9 
       (.I0(pwropt_3),
        .I1(pwropt_2),
        .I2(pwropt_1),
        .I3(pwropt),
        .O(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_ENBWREN_cooolgate_en_sig_7 ));
  LUT2 #(
    .INIT(4'he)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_REGCEB_cooolgate_en_gate_15 
       (.I0(pwropt_3),
        .I1(pwropt_2),
        .O(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_REGCEB_cooolgate_en_sig_10 ));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module system_bayer2rgb_0_0_blk_mem_gen_prim_wrapper_4
   (doutb,
    clka,
    clkb,
    wea,
    addra,
    addrb,
    dina,
    pwropt,
    pwropt_1,
    pwropt_2,
    pwropt_3,
    pwropt_4);
  output [7:0]doutb;
  input clka;
  input clkb;
  input [0:0]wea;
  input [10:0]addra;
  input [10:0]addrb;
  input [7:0]dina;
  input pwropt;
  input pwropt_1;
  input pwropt_2;
  input pwropt_3;
  input pwropt_4;

  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_ENBWREN_cooolgate_en_sig_6 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_REGCEB_cooolgate_en_sig_9 ;
  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire pwropt;
  wire pwropt_1;
  wire pwropt_2;
  wire pwropt_3;
  wire pwropt_4;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:8]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IS_CLOCK_GATED *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* POWER_OPTED_CE = "REGCEB=NEW:ENBWREN=NEW:REGCEAREGCE=AUG" *) 
  (* PWROPT_WRITE_MODE_CHANGE_A = "WRITE_FIRST:NO_CHANGE_1" *) 
  RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(9),
    .READ_WIDTH_B(9),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(9),
    .WRITE_WIDTH_B(9)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR({addra,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({addrb,1'b0,1'b0,1'b0}),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:8],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(wea),
        .ENBWREN(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_ENBWREN_cooolgate_en_sig_6 ),
        .REGCEAREGCE(1'b0),
        .REGCEB(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_REGCEB_cooolgate_en_sig_9 ),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
  LUT4 #(
    .INIT(16'hfff7)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_ENBWREN_cooolgate_en_gate_7 
       (.I0(pwropt_3),
        .I1(pwropt_2),
        .I2(pwropt_1),
        .I3(pwropt),
        .O(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_ENBWREN_cooolgate_en_sig_6 ));
  LUT2 #(
    .INIT(4'hd)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_REGCEB_cooolgate_en_gate_13 
       (.I0(pwropt_4),
        .I1(pwropt_3),
        .O(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_REGCEB_cooolgate_en_sig_9 ));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module system_bayer2rgb_0_0_blk_mem_gen_prim_wrapper_9
   (doutb,
    clka,
    clkb,
    wea,
    addra,
    addrb,
    dina,
    pwropt,
    pwropt_1,
    pwropt_2,
    pwropt_3,
    pwropt_4,
    pwropt_5,
    pwropt_6,
    pwropt_7);
  output [7:0]doutb;
  input clka;
  input clkb;
  input [0:0]wea;
  input [10:0]addra;
  input [10:0]addrb;
  input [7:0]dina;
  input pwropt;
  input pwropt_1;
  input pwropt_2;
  input pwropt_3;
  input pwropt_4;
  input pwropt_5;
  input pwropt_6;
  input pwropt_7;

  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_ENBWREN_cooolgate_en_sig_5 ;
  wire \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_REGCEB_cooolgate_en_sig_8 ;
  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire pwropt;
  wire pwropt_1;
  wire pwropt_2;
  wire pwropt_3;
  wire pwropt_4;
  wire pwropt_5;
  wire pwropt_6;
  wire pwropt_7;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:8]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IS_CLOCK_GATED *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* POWER_OPTED_CE = "REGCEB=NEW:ENBWREN=NEW:REGCEAREGCE=AUG" *) 
  (* PWROPT_WRITE_MODE_CHANGE_A = "WRITE_FIRST:NO_CHANGE_1" *) 
  RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(9),
    .READ_WIDTH_B(9),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(9),
    .WRITE_WIDTH_B(9)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR({addra,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({addrb,1'b0,1'b0,1'b0}),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:8],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(wea),
        .ENBWREN(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_ENBWREN_cooolgate_en_sig_5 ),
        .REGCEAREGCE(1'b0),
        .REGCEB(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_REGCEB_cooolgate_en_sig_8 ),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
  LUT4 #(
    .INIT(16'h0035)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_ENBWREN_cooolgate_en_gate_5 
       (.I0(pwropt_3),
        .I1(pwropt_2),
        .I2(pwropt_1),
        .I3(pwropt),
        .O(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_ENBWREN_cooolgate_en_sig_5 ));
  (* OPT_MODIFIED = "POST_PROCESS_NETLIST" *) 
  LUT4 #(
    .INIT(16'h001D)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_REGCEB_cooolgate_en_gate_11_LOPT_REMAP 
       (.I0(pwropt_4),
        .I1(pwropt_5),
        .I2(pwropt_6),
        .I3(pwropt_7),
        .O(\DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_REGCEB_cooolgate_en_sig_8 ));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module system_bayer2rgb_0_0_blk_mem_gen_top
   (doutb,
    clka,
    clkb,
    wea,
    addra,
    addrb,
    dina,
    pwropt,
    pwropt_1,
    pwropt_2,
    pwropt_3);
  output [7:0]doutb;
  input clka;
  input clkb;
  input [0:0]wea;
  input [10:0]addra;
  input [10:0]addrb;
  input [7:0]dina;
  input pwropt;
  input pwropt_1;
  input pwropt_2;
  input pwropt_3;

  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire pwropt;
  wire pwropt_1;
  wire pwropt_2;
  wire pwropt_3;
  wire [0:0]wea;

  system_bayer2rgb_0_0_blk_mem_gen_generic_cstr \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .pwropt(pwropt),
        .pwropt_1(pwropt_1),
        .pwropt_2(pwropt_2),
        .pwropt_3(pwropt_3),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module system_bayer2rgb_0_0_blk_mem_gen_top_1
   (doutb,
    clka,
    clkb,
    wea,
    addra,
    addrb,
    dina,
    pwropt,
    pwropt_1,
    pwropt_2,
    pwropt_3,
    pwropt_4);
  output [7:0]doutb;
  input clka;
  input clkb;
  input [0:0]wea;
  input [10:0]addra;
  input [10:0]addrb;
  input [7:0]dina;
  input pwropt;
  input pwropt_1;
  input pwropt_2;
  input pwropt_3;
  input pwropt_4;

  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire pwropt;
  wire pwropt_1;
  wire pwropt_2;
  wire pwropt_3;
  wire pwropt_4;
  wire [0:0]wea;

  system_bayer2rgb_0_0_blk_mem_gen_generic_cstr_2 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .pwropt(pwropt),
        .pwropt_1(pwropt_1),
        .pwropt_2(pwropt_2),
        .pwropt_3(pwropt_3),
        .pwropt_4(pwropt_4),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module system_bayer2rgb_0_0_blk_mem_gen_top_6
   (doutb,
    clka,
    clkb,
    wea,
    addra,
    addrb,
    dina,
    pwropt,
    pwropt_1,
    pwropt_2,
    pwropt_3,
    pwropt_4,
    pwropt_5,
    pwropt_6,
    pwropt_7);
  output [7:0]doutb;
  input clka;
  input clkb;
  input [0:0]wea;
  input [10:0]addra;
  input [10:0]addrb;
  input [7:0]dina;
  input pwropt;
  input pwropt_1;
  input pwropt_2;
  input pwropt_3;
  input pwropt_4;
  input pwropt_5;
  input pwropt_6;
  input pwropt_7;

  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire pwropt;
  wire pwropt_1;
  wire pwropt_2;
  wire pwropt_3;
  wire pwropt_4;
  wire pwropt_5;
  wire pwropt_6;
  wire pwropt_7;
  wire [0:0]wea;

  system_bayer2rgb_0_0_blk_mem_gen_generic_cstr_7 \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .pwropt(pwropt),
        .pwropt_1(pwropt_1),
        .pwropt_2(pwropt_2),
        .pwropt_3(pwropt_3),
        .pwropt_4(pwropt_4),
        .pwropt_5(pwropt_5),
        .pwropt_6(pwropt_6),
        .pwropt_7(pwropt_7),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "11" *) (* C_ADDRB_WIDTH = "11" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "0" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.5592 mW" *) 
(* C_FAMILY = "spartan7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "0" *) 
(* C_HAS_ENB = "0" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "1" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_1.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "1280" *) (* C_READ_DEPTH_B = "1280" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "8" *) (* C_READ_WIDTH_B = "8" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "ALL" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "1280" *) 
(* C_WRITE_DEPTH_B = "1280" *) (* C_WRITE_MODE_A = "WRITE_FIRST" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "8" *) (* C_WRITE_WIDTH_B = "8" *) (* C_XDEVICEFAMILY = "spartan7" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "blk_mem_gen_v8_4_4" *) 
module system_bayer2rgb_0_0_blk_mem_gen_v8_4_4
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc,
    pwropt,
    pwropt_1,
    pwropt_2,
    pwropt_3);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [10:0]addra;
  input [7:0]dina;
  output [7:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [10:0]addrb;
  input [7:0]dinb;
  output [7:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [10:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [7:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [7:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [10:0]s_axi_rdaddrecc;
  input pwropt;
  input pwropt_1;
  input pwropt_2;
  input pwropt_3;

  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire pwropt;
  wire pwropt_1;
  wire pwropt_2;
  wire pwropt_3;
  wire [0:0]wea;

  system_bayer2rgb_0_0_blk_mem_gen_v8_4_4_synth inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .pwropt(pwropt),
        .pwropt_1(pwropt_1),
        .pwropt_2(pwropt_2),
        .pwropt_3(pwropt_3),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "11" *) (* C_ADDRB_WIDTH = "11" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "0" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.5592 mW" *) 
(* C_FAMILY = "spartan7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "0" *) 
(* C_HAS_ENB = "0" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "1" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_1.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "1280" *) (* C_READ_DEPTH_B = "1280" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "8" *) (* C_READ_WIDTH_B = "8" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "ALL" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "1280" *) 
(* C_WRITE_DEPTH_B = "1280" *) (* C_WRITE_MODE_A = "WRITE_FIRST" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "8" *) (* C_WRITE_WIDTH_B = "8" *) (* C_XDEVICEFAMILY = "spartan7" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "blk_mem_gen_v8_4_4" *) 
module system_bayer2rgb_0_0_blk_mem_gen_v8_4_4__1
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc,
    pwropt,
    pwropt_1,
    pwropt_2,
    pwropt_3,
    pwropt_4,
    pwropt_5,
    pwropt_6,
    pwropt_7);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [10:0]addra;
  input [7:0]dina;
  output [7:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [10:0]addrb;
  input [7:0]dinb;
  output [7:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [10:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [7:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [7:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [10:0]s_axi_rdaddrecc;
  input pwropt;
  input pwropt_1;
  input pwropt_2;
  input pwropt_3;
  input pwropt_4;
  input pwropt_5;
  input pwropt_6;
  input pwropt_7;

  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire pwropt;
  wire pwropt_1;
  wire pwropt_2;
  wire pwropt_3;
  wire pwropt_4;
  wire pwropt_5;
  wire pwropt_6;
  wire pwropt_7;
  wire [0:0]wea;

  system_bayer2rgb_0_0_blk_mem_gen_v8_4_4_synth_5 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .pwropt(pwropt),
        .pwropt_1(pwropt_1),
        .pwropt_2(pwropt_2),
        .pwropt_3(pwropt_3),
        .pwropt_4(pwropt_4),
        .pwropt_5(pwropt_5),
        .pwropt_6(pwropt_6),
        .pwropt_7(pwropt_7),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "11" *) (* C_ADDRB_WIDTH = "11" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "0" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.5592 mW" *) 
(* C_FAMILY = "spartan7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "0" *) 
(* C_HAS_ENB = "0" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "1" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_1.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "1280" *) (* C_READ_DEPTH_B = "1280" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "8" *) (* C_READ_WIDTH_B = "8" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "ALL" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "1280" *) 
(* C_WRITE_DEPTH_B = "1280" *) (* C_WRITE_MODE_A = "WRITE_FIRST" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "8" *) (* C_WRITE_WIDTH_B = "8" *) (* C_XDEVICEFAMILY = "spartan7" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "blk_mem_gen_v8_4_4" *) 
module system_bayer2rgb_0_0_blk_mem_gen_v8_4_4__2
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc,
    pwropt,
    pwropt_1,
    pwropt_2,
    pwropt_3,
    pwropt_4);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [10:0]addra;
  input [7:0]dina;
  output [7:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [10:0]addrb;
  input [7:0]dinb;
  output [7:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [10:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [7:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [7:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [10:0]s_axi_rdaddrecc;
  input pwropt;
  input pwropt_1;
  input pwropt_2;
  input pwropt_3;
  input pwropt_4;

  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire pwropt;
  wire pwropt_1;
  wire pwropt_2;
  wire pwropt_3;
  wire pwropt_4;
  wire [0:0]wea;

  system_bayer2rgb_0_0_blk_mem_gen_v8_4_4_synth_0 inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .pwropt(pwropt),
        .pwropt_1(pwropt_1),
        .pwropt_2(pwropt_2),
        .pwropt_3(pwropt_3),
        .pwropt_4(pwropt_4),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_4_synth" *) 
module system_bayer2rgb_0_0_blk_mem_gen_v8_4_4_synth
   (doutb,
    clka,
    clkb,
    wea,
    addra,
    addrb,
    dina,
    pwropt,
    pwropt_1,
    pwropt_2,
    pwropt_3);
  output [7:0]doutb;
  input clka;
  input clkb;
  input [0:0]wea;
  input [10:0]addra;
  input [10:0]addrb;
  input [7:0]dina;
  input pwropt;
  input pwropt_1;
  input pwropt_2;
  input pwropt_3;

  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire pwropt;
  wire pwropt_1;
  wire pwropt_2;
  wire pwropt_3;
  wire [0:0]wea;

  system_bayer2rgb_0_0_blk_mem_gen_top \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .pwropt(pwropt),
        .pwropt_1(pwropt_1),
        .pwropt_2(pwropt_2),
        .pwropt_3(pwropt_3),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_4_synth" *) 
module system_bayer2rgb_0_0_blk_mem_gen_v8_4_4_synth_0
   (doutb,
    clka,
    clkb,
    wea,
    addra,
    addrb,
    dina,
    pwropt,
    pwropt_1,
    pwropt_2,
    pwropt_3,
    pwropt_4);
  output [7:0]doutb;
  input clka;
  input clkb;
  input [0:0]wea;
  input [10:0]addra;
  input [10:0]addrb;
  input [7:0]dina;
  input pwropt;
  input pwropt_1;
  input pwropt_2;
  input pwropt_3;
  input pwropt_4;

  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire pwropt;
  wire pwropt_1;
  wire pwropt_2;
  wire pwropt_3;
  wire pwropt_4;
  wire [0:0]wea;

  system_bayer2rgb_0_0_blk_mem_gen_top_1 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .pwropt(pwropt),
        .pwropt_1(pwropt_1),
        .pwropt_2(pwropt_2),
        .pwropt_3(pwropt_3),
        .pwropt_4(pwropt_4),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_4_synth" *) 
module system_bayer2rgb_0_0_blk_mem_gen_v8_4_4_synth_5
   (doutb,
    clka,
    clkb,
    wea,
    addra,
    addrb,
    dina,
    pwropt,
    pwropt_1,
    pwropt_2,
    pwropt_3,
    pwropt_4,
    pwropt_5,
    pwropt_6,
    pwropt_7);
  output [7:0]doutb;
  input clka;
  input clkb;
  input [0:0]wea;
  input [10:0]addra;
  input [10:0]addrb;
  input [7:0]dina;
  input pwropt;
  input pwropt_1;
  input pwropt_2;
  input pwropt_3;
  input pwropt_4;
  input pwropt_5;
  input pwropt_6;
  input pwropt_7;

  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [7:0]dina;
  wire [7:0]doutb;
  wire pwropt;
  wire pwropt_1;
  wire pwropt_2;
  wire pwropt_3;
  wire pwropt_4;
  wire pwropt_5;
  wire pwropt_6;
  wire pwropt_7;
  wire [0:0]wea;

  system_bayer2rgb_0_0_blk_mem_gen_top_6 \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .pwropt(pwropt),
        .pwropt_1(pwropt_1),
        .pwropt_2(pwropt_2),
        .pwropt_3(pwropt_3),
        .pwropt_4(pwropt_4),
        .pwropt_5(pwropt_5),
        .pwropt_6(pwropt_6),
        .pwropt_7(pwropt_7),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module system_csi2dvp_0_0_blk_mem_gen_generic_cstr
   (doutb,
    clka,
    clkb,
    wea,
    addra,
    addrb,
    dina);
  output [7:0]doutb;
  input clka;
  input clkb;
  input [0:0]wea;
  input [9:0]addra;
  input [10:0]addrb;
  input [15:0]dina;

  wire [9:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [15:0]dina;
  wire [7:0]doutb;
  wire [0:0]wea;

  system_csi2dvp_0_0_blk_mem_gen_prim_width \ramloop[0].ram.r 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module system_csi2dvp_0_0_blk_mem_gen_prim_width
   (doutb,
    clka,
    clkb,
    wea,
    addra,
    addrb,
    dina);
  output [7:0]doutb;
  input clka;
  input clkb;
  input [0:0]wea;
  input [9:0]addra;
  input [10:0]addrb;
  input [15:0]dina;

  wire [9:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [15:0]dina;
  wire [7:0]doutb;
  wire [0:0]wea;

  system_csi2dvp_0_0_blk_mem_gen_prim_wrapper \prim_noinit.ram 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module system_csi2dvp_0_0_blk_mem_gen_prim_wrapper
   (doutb,
    clka,
    clkb,
    wea,
    addra,
    addrb,
    dina);
  output [7:0]doutb;
  input clka;
  input clkb;
  input [0:0]wea;
  input [9:0]addra;
  input [10:0]addrb;
  input [15:0]dina;

  wire [9:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [15:0]dina;
  wire [7:0]doutb;
  wire [0:0]wea;
  wire [15:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED ;
  wire [15:8]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED ;
  wire [1:0]\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IS_CLOCK_GATED *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  (* POWER_OPTED_CE = "REGCEAREGCE=AUG" *) 
  (* PWROPT_WRITE_MODE_CHANGE_A = "WRITE_FIRST:NO_CHANGE_1" *) 
  RAMB18E1 #(
    .DOA_REG(1),
    .DOB_REG(1),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(9),
    .READ_WIDTH_B(9),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("NO_CHANGE"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram 
       (.ADDRARDADDR({addra,1'b0,1'b0,1'b0,1'b0}),
        .ADDRBWRADDR({addrb,1'b0,1'b0,1'b0}),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DIADI(dina),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOADO_UNCONNECTED [15:0]),
        .DOBDO({\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOBDO_UNCONNECTED [15:8],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPADOP_UNCONNECTED [1:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.NO_BMM_INFO.SDP.SIMPLE_PRIM18.ram_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(wea),
        .ENBWREN(1'b1),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b1),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module system_csi2dvp_0_0_blk_mem_gen_top
   (doutb,
    clka,
    clkb,
    wea,
    addra,
    addrb,
    dina);
  output [7:0]doutb;
  input clka;
  input clkb;
  input [0:0]wea;
  input [9:0]addra;
  input [10:0]addrb;
  input [15:0]dina;

  wire [9:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [15:0]dina;
  wire [7:0]doutb;
  wire [0:0]wea;

  system_csi2dvp_0_0_blk_mem_gen_generic_cstr \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .wea(wea));
endmodule

(* C_ADDRA_WIDTH = "10" *) (* C_ADDRB_WIDTH = "11" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "9" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "1" *) 
(* C_COUNT_36K_BRAM = "0" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "0" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "0" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "0" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     2.5052 mW" *) 
(* C_FAMILY = "spartan7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "0" *) 
(* C_HAS_ENB = "0" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "1" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "0" *) 
(* C_HAS_RSTB = "0" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "blk_mem_gen_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "1" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "800" *) (* C_READ_DEPTH_B = "1600" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "16" *) (* C_READ_WIDTH_B = "8" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "ALL" *) (* C_USE_BRAM_BLOCK = "0" *) 
(* C_USE_BYTE_WEA = "0" *) (* C_USE_BYTE_WEB = "0" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "1" *) (* C_WEB_WIDTH = "1" *) (* C_WRITE_DEPTH_A = "800" *) 
(* C_WRITE_DEPTH_B = "1600" *) (* C_WRITE_MODE_A = "WRITE_FIRST" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "16" *) (* C_WRITE_WIDTH_B = "8" *) (* C_XDEVICEFAMILY = "spartan7" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "blk_mem_gen_v8_4_4" *) 
module system_csi2dvp_0_0_blk_mem_gen_v8_4_4
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [0:0]wea;
  input [9:0]addra;
  input [15:0]dina;
  output [15:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [0:0]web;
  input [10:0]addrb;
  input [7:0]dinb;
  output [7:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [10:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [15:0]s_axi_wdata;
  input [0:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [7:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [10:0]s_axi_rdaddrecc;

  wire [9:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [15:0]dina;
  wire [7:0]doutb;
  wire [0:0]wea;

  system_csi2dvp_0_0_blk_mem_gen_v8_4_4_synth inst_blk_mem_gen
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_4_synth" *) 
module system_csi2dvp_0_0_blk_mem_gen_v8_4_4_synth
   (doutb,
    clka,
    clkb,
    wea,
    addra,
    addrb,
    dina);
  output [7:0]doutb;
  input clka;
  input clkb;
  input [0:0]wea;
  input [9:0]addra;
  input [10:0]addrb;
  input [15:0]dina;

  wire [9:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [15:0]dina;
  wire [7:0]doutb;
  wire [0:0]wea;

  system_csi2dvp_0_0_blk_mem_gen_top \gnbram.gnativebmg.native_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .doutb(doutb),
        .wea(wea));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_generic_cstr" *) 
module system_lmb_bram_0__blk_mem_gen_generic_cstr
   (douta,
    doutb,
    rsta_busy,
    rstb_busy,
    clkb,
    clka,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web,
    rsta,
    ena,
    rstb,
    enb);
  output [31:0]douta;
  output [31:0]doutb;
  output rsta_busy;
  output rstb_busy;
  input clkb;
  input clka;
  input [10:0]addra;
  input [10:0]addrb;
  input [31:0]dina;
  input [31:0]dinb;
  input [3:0]wea;
  input [3:0]web;
  input rsta;
  input ena;
  input rstb;
  input enb;

  wire ENA_I;
  wire ENB_I;
  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [31:0]dina;
  wire [31:0]dinb;
  wire [31:0]douta;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire ram_rstram_a;
  wire ram_rstram_b;
  wire [3:0]wea;
  wire [3:0]web;
  wire \NLW_ramloop[1].ram.r_rsta_UNCONNECTED ;
  wire \NLW_ramloop[1].ram.r_rsta_busy_UNCONNECTED ;
  wire \NLW_ramloop[1].ram.r_rstb_UNCONNECTED ;
  wire \NLW_ramloop[1].ram.r_rstb_busy_UNCONNECTED ;

  system_lmb_bram_0__blk_mem_gen_prim_width \ramloop[0].ram.r 
       (.ENA_I(ENA_I),
        .ENB_I(ENB_I),
        .addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina[15:0]),
        .dinb(dinb[15:0]),
        .douta(douta[15:0]),
        .doutb(doutb[15:0]),
        .ram_rstram_a(ram_rstram_a),
        .ram_rstram_b(ram_rstram_b),
        .wea(wea[1:0]),
        .web(web[1:0]));
  system_lmb_bram_0__blk_mem_gen_prim_width__parameterized0 \ramloop[1].ram.r 
       (.ENA_I(ENA_I),
        .ENB_I(ENB_I),
        .addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina[31:16]),
        .dinb(dinb[31:16]),
        .douta(douta[31:16]),
        .doutb(doutb[31:16]),
        .ena(ena),
        .enb(enb),
        .ram_rstram_a(ram_rstram_a),
        .ram_rstram_b(ram_rstram_b),
        .rsta(\NLW_ramloop[1].ram.r_rsta_UNCONNECTED ),
        .rsta_busy(\NLW_ramloop[1].ram.r_rsta_busy_UNCONNECTED ),
        .rstb(\NLW_ramloop[1].ram.r_rstb_UNCONNECTED ),
        .rstb_busy(\NLW_ramloop[1].ram.r_rstb_busy_UNCONNECTED ),
        .wea(wea[3:2]),
        .web(web[3:2]));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module system_lmb_bram_0__blk_mem_gen_prim_width
   (douta,
    doutb,
    clka,
    clkb,
    ENA_I,
    ENB_I,
    ram_rstram_a,
    ram_rstram_b,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [15:0]douta;
  output [15:0]doutb;
  input clka;
  input clkb;
  input ENA_I;
  input ENB_I;
  input ram_rstram_a;
  input ram_rstram_b;
  input [10:0]addra;
  input [10:0]addrb;
  input [15:0]dina;
  input [15:0]dinb;
  input [1:0]wea;
  input [1:0]web;

  wire ENA_I;
  wire ENB_I;
  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [15:0]dina;
  wire [15:0]dinb;
  wire [15:0]douta;
  wire [15:0]doutb;
  wire ram_rstram_a;
  wire ram_rstram_b;
  wire [1:0]wea;
  wire [1:0]web;

  system_lmb_bram_0__blk_mem_gen_prim_wrapper \prim_noinit.ram 
       (.ENA_I(ENA_I),
        .ENB_I(ENB_I),
        .addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .ram_rstram_a(ram_rstram_a),
        .ram_rstram_b(ram_rstram_b),
        .wea(wea),
        .web(web));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_width" *) 
module system_lmb_bram_0__blk_mem_gen_prim_width__parameterized0
   (douta,
    doutb,
    ENA_I,
    ENB_I,
    ram_rstram_a,
    ram_rstram_b,
    rsta_busy,
    rstb_busy,
    clkb,
    clka,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web,
    rsta,
    ena,
    rstb,
    enb);
  output [15:0]douta;
  output [15:0]doutb;
  output ENA_I;
  output ENB_I;
  output ram_rstram_a;
  output ram_rstram_b;
  output rsta_busy;
  output rstb_busy;
  input clkb;
  input clka;
  input [10:0]addra;
  input [10:0]addrb;
  input [15:0]dina;
  input [15:0]dinb;
  input [1:0]wea;
  input [1:0]web;
  input rsta;
  input ena;
  input rstb;
  input enb;

  wire ENA_I;
  wire ENA_dly;
  wire ENA_dly_D;
  wire ENB_I;
  wire ENB_dly;
  wire ENB_dly_D;
  wire POR_A;
  wire POR_B;
  wire \SAFETY_CKT_GEN.POR_A_i_1_n_0 ;
  wire \SAFETY_CKT_GEN.POR_B_i_1_n_0 ;
  wire \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0 ;
  wire \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg_n_0_[0] ;
  wire \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg_n_0_[4] ;
  wire \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0 ;
  wire \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg_n_0_[0] ;
  wire \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg_n_0_[4] ;
  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [15:0]dina;
  wire [15:0]dinb;
  wire [15:0]douta;
  wire [15:0]doutb;
  wire ena;
  wire enb;
  wire ram_rstram_a;
  wire ram_rstram_b;
  wire [1:0]wea;
  wire [1:0]web;
  wire \NLW_prim_noinit.ram_rsta_UNCONNECTED ;
  wire \NLW_prim_noinit.ram_rstb_UNCONNECTED ;

  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_D_reg 
       (.C(clka),
        .CE(1'b1),
        .D(ENA_dly),
        .Q(ENA_dly_D),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.ENA_NO_REG.ENA_dly_reg 
       (.C(clka),
        .CE(1'b1),
        .D(ram_rstram_a),
        .Q(ENA_dly),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.ENB_NO_REG.ENB_dly_D_reg 
       (.C(clkb),
        .CE(1'b1),
        .D(ENB_dly),
        .Q(ENB_dly_D),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.ENB_NO_REG.ENB_dly_reg 
       (.C(clkb),
        .CE(1'b1),
        .D(ram_rstram_b),
        .Q(ENB_dly),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \SAFETY_CKT_GEN.POR_A_i_1 
       (.I0(\SAFETY_CKT_GEN.RSTA_SHFT_REG_reg_n_0_[0] ),
        .I1(\SAFETY_CKT_GEN.RSTA_SHFT_REG_reg_n_0_[4] ),
        .O(\SAFETY_CKT_GEN.POR_A_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.POR_A_reg 
       (.C(clka),
        .CE(1'b1),
        .D(\SAFETY_CKT_GEN.POR_A_i_1_n_0 ),
        .Q(POR_A),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \SAFETY_CKT_GEN.POR_B_i_1 
       (.I0(\SAFETY_CKT_GEN.RSTB_SHFT_REG_reg_n_0_[0] ),
        .I1(\SAFETY_CKT_GEN.RSTB_SHFT_REG_reg_n_0_[4] ),
        .O(\SAFETY_CKT_GEN.POR_B_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.POR_B_reg 
       (.C(clkb),
        .CE(1'b1),
        .D(\SAFETY_CKT_GEN.POR_B_i_1_n_0 ),
        .Q(POR_B),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[0] 
       (.C(clka),
        .CE(1'b1),
        .D(1'b1),
        .Q(\SAFETY_CKT_GEN.RSTA_SHFT_REG_reg_n_0_[0] ),
        .R(1'b0));
  (* srl_bus_name = "U0/\inst_blk_mem_gen/gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen/valid.cstr/ramloop[1].ram.r/SAFETY_CKT_GEN.RSTA_SHFT_REG_reg " *) 
  (* srl_name = "U0/\inst_blk_mem_gen/gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen/valid.cstr/ramloop[1].ram.r/SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clka),
        .D(\SAFETY_CKT_GEN.RSTA_SHFT_REG_reg_n_0_[0] ),
        .Q(\SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[4] 
       (.C(clka),
        .CE(1'b1),
        .D(\SAFETY_CKT_GEN.RSTA_SHFT_REG_reg[3]_srl3_n_0 ),
        .Q(\SAFETY_CKT_GEN.RSTA_SHFT_REG_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[0] 
       (.C(clkb),
        .CE(1'b1),
        .D(1'b1),
        .Q(\SAFETY_CKT_GEN.RSTB_SHFT_REG_reg_n_0_[0] ),
        .R(1'b0));
  (* srl_bus_name = "U0/\inst_blk_mem_gen/gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen/valid.cstr/ramloop[1].ram.r/SAFETY_CKT_GEN.RSTB_SHFT_REG_reg " *) 
  (* srl_name = "U0/\inst_blk_mem_gen/gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen/valid.cstr/ramloop[1].ram.r/SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clkb),
        .D(\SAFETY_CKT_GEN.RSTB_SHFT_REG_reg_n_0_[0] ),
        .Q(\SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[4] 
       (.C(clkb),
        .CE(1'b1),
        .D(\SAFETY_CKT_GEN.RSTB_SHFT_REG_reg[3]_srl3_n_0 ),
        .Q(\SAFETY_CKT_GEN.RSTB_SHFT_REG_reg_n_0_[4] ),
        .R(1'b0));
  system_lmb_bram_0__blk_mem_gen_prim_wrapper__parameterized0 \prim_noinit.ram 
       (.ENA_I(ENA_I),
        .ENA_dly_D(ENA_dly_D),
        .ENB_I(ENB_I),
        .ENB_dly_D(ENB_dly_D),
        .POR_A(POR_A),
        .POR_B(POR_B),
        .addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .ram_rstram_a(ram_rstram_a),
        .ram_rstram_b(ram_rstram_b),
        .rsta(\NLW_prim_noinit.ram_rsta_UNCONNECTED ),
        .rstb(\NLW_prim_noinit.ram_rstb_UNCONNECTED ),
        .wea(wea),
        .web(web));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module system_lmb_bram_0__blk_mem_gen_prim_wrapper
   (douta,
    doutb,
    clka,
    clkb,
    ENA_I,
    ENB_I,
    ram_rstram_a,
    ram_rstram_b,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web);
  output [15:0]douta;
  output [15:0]doutb;
  input clka;
  input clkb;
  input ENA_I;
  input ENB_I;
  input ram_rstram_a;
  input ram_rstram_b;
  input [10:0]addra;
  input [10:0]addrb;
  input [15:0]dina;
  input [15:0]dinb;
  input [1:0]wea;
  input [1:0]web;

  wire ENA_I;
  wire ENB_I;
  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [15:0]dina;
  wire [15:0]dinb;
  wire [15:0]douta;
  wire [15:0]doutb;
  wire ram_rstram_a;
  wire ram_rstram_b;
  wire [1:0]wea;
  wire [1:0]web;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ;
  wire [31:16]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED ;
  wire [31:16]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED ;
  wire [3:2]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "RETARGET SWEEP" *) 
  (* bmm_info_memory_device = "[15:0][0:2047]" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h000000000000000000000000037C0000000000000C5800000638000000500000),
    .INIT_01(256'h0000030800000000026000001C3000000DC00000102000000000000000000000),
    .INIT_02(256'h00080000000018000000FFE4002000000000002C280010200000102000000000),
    .INIT_03(256'h004100410041004120000001000118001800102000001020000000000008001C),
    .INIT_04(256'h0041004100410041004100410041004100410041004100410041004100410041),
    .INIT_05(256'h00000000002C0001200000410041004100410041004100410041004100410041),
    .INIT_06(256'h00000DB4000000D01020000000000008001C00080000000018000000FFE40020),
    .INIT_07(256'h003818030DB00000FFFF00000001000120000020001C2000FFDC102400000DB0),
    .INIT_08(256'h00000000FE500001FFD81803102400000000200010240000B000200018000001),
    .INIT_09(256'h002400081020000000010020001C00000000FDA8FFFF10200000000000200000),
    .INIT_0A(256'h0000FE140000FD50FFFF102000001028000000000024FFE40000000000000008),
    .INIT_0B(256'h0000FFF43800000400000014380010200000102000000000FFEC001C00080000),
    .INIT_0C(256'h000000000A1800000000031C0000FFF438000004000000143800104000001020),
    .INIT_0D(256'h00000014000800000000000002D8000000000A3000000000000003DC00000000),
    .INIT_0E(256'h0DBC0000002400280DBC0000000000480000001C0000001C000000200000FFDC),
    .INIT_0F(256'h003800340030002C0000FFC40000FCA0FFFF001C0000180000000DBC00000028),
    .INIT_10(256'hFFFF0004008801D4001C00480DBC000000480DBC000000000008004400400000),
    .INIT_11(256'h18001800002001200028004400201800FFFCFFFF000000142000001F00010160),
    .INIT_12(256'h000400141800FFFF000400240000180018001800000201001800004400001800),
    .INIT_13(256'h18000020010000140028000400B400240000180018001800000200180004FFFF),
    .INIT_14(256'h004000000024000018001800B800002C180000200104005C0000180000240014),
    .INIT_15(256'h001CFE981800002800040000180000000024000018001800B800002400001800),
    .INIT_16(256'h0040000000480004006000000000FEA4FFFF0000000800000010FE8818000000),
    .INIT_17(256'h001C000C0000001C0000FA18FFFF00000000FA28FFFF000000140000001C0000),
    .INIT_18(256'h0008580000000008003C003800340030002C00000000000000000008FE300000),
    .INIT_19(256'hFFFF0000FFFC180000000DA800000004FFF8003CFFFF0DA80000000000080000),
    .INIT_1A(256'h00410041004100411800FFE0000040800000000000080008000800040000FFF0),
    .INIT_1B(256'h000000004080001D03440000001C0000003600020000001C0041004100410041),
    .INIT_1C(256'hFFFF0020FF68FFFF0000300AFFDC002000080000001F003600F40000001F0001),
    .INIT_1D(256'h20000000408000020EB400001800000000000094FFFF00000EB40000300BFF5C),
    .INIT_1E(256'h0000001C0001001D003600030000001C00410041004100410041004100410041),
    .INIT_1F(256'h002400080000002000001800FF84FFFF000000000EB4000018009800001E0270),
    .INIT_20(256'h002001000000010001200020000B0001300000200010000C000800000014FFE8),
    .INIT_21(256'h0000001800040004000401040104010000050015000C0001010800FF00600020),
    .INIT_22(256'h0000010401080100FFF70114000100000024002000100020FFF0000400040004),
    .INIT_23(256'hFFFF010C000100001800FFF40008000000780011000C001300140001010C0154),
    .INIT_24(256'h002500000010000100000000FFA4000000F80000000B00000000000000DC0002),
    .INIT_25(256'h0000004C000C271100300004000001000008002001000020000B000000200100),
    .INIT_26(256'h00100018000800140010000C00080000C000FFFFFFE400040000006403800000),
    .INIT_27(256'hFF280000000B000000000000000000100018000800140010000C00080000FEF0),
    .INIT_28(256'h00140010000CFFDCFF280000FFF8001000000000FF40FEF800000001FF280000),
    .INIT_29(256'h27110010010400340000000000000004000000000104000800000020001C0018),
    .INIT_2A(256'h0108010800FF00200100D8000100FFFFFFE40004000000640278000000000118),
    .INIT_2B(256'hFFF00004000400040000001800040004000401040100000D0020000700200108),
    .INIT_2C(256'h0100C0000004FFF40013000000A44800000C00200000000100E8002000100020),
    .INIT_2D(256'h0004000400040000001800040004000401040100FFFB00340004000000580020),
    .INIT_2E(256'h002400080020001C001800140010000C0008000001000000001000020104FFF0),
    .INIT_2F(256'h00200000FF48FF38000000040000FFFF000000000000000100484803FF480108),
    .INIT_30(256'h000000040000FFAC000000000000FFB8000000090014FF2C0000FFF800100000),
    .INIT_31(256'h003C003800340030002C0028002400200000FFACFF880000002DFFF800040000),
    .INIT_32(256'h0020001C000000002000001C0050000400008001004C00480044101800000040),
    .INIT_33(256'h0008005400000050004C004800440040003C003800340030002C00280024C001),
    .INIT_34(256'hFFEC0000FFFCFFFF1800FFFF00320004000800000000001400000000FFFC0000),
    .INIT_35(256'h08000000F8D8FFFF0000F520FFFFC8000000C802FFFF0800FFF8000000080000),
    .INIT_36(256'h0DC000430000FFFF0000FFFF0008000808000000F414FFFF0800FFF800080008),
    .INIT_37(256'h00000000000000000000000000000DB800000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h3000010301000DC0000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h36303618361236003106303C303630353034301D301C30183017301630023001),
    .INIT_3C(256'h373137173715370C370B37093708370537043703362136203636363436333632),
    .INIT_3D(256'h3811380F380E380D380C380B380A380938083807380638053804380338023801),
    .INIT_3E(256'h3A1E3A1B3A103A0F3A0E3A0D3A0B3A0A3A093A08382738203821381538143813),
    .INIT_3F(256'h50004837405140504000400440013F013F063F053C013B073A193A183A1F3A11),
    .INIT_40(256'h0000000000000000000000000000000000000CFCFFFF01005A00500350025001),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram 
       (.ADDRARDADDR({1'b1,addra,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addrb,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dinb}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED [31:16],douta}),
        .DOBDO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED [31:16],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ENA_I),
        .ENBWREN(ENB_I),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(ram_rstram_a),
        .RSTRAMB(ram_rstram_b),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED [3:2],web}));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_prim_wrapper" *) 
module system_lmb_bram_0__blk_mem_gen_prim_wrapper__parameterized0
   (douta,
    doutb,
    ENA_I,
    ENB_I,
    ram_rstram_a,
    ram_rstram_b,
    clka,
    clkb,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web,
    rsta,
    POR_A,
    ENA_dly_D,
    ena,
    rstb,
    POR_B,
    ENB_dly_D,
    enb);
  output [15:0]douta;
  output [15:0]doutb;
  output ENA_I;
  output ENB_I;
  output ram_rstram_a;
  output ram_rstram_b;
  input clka;
  input clkb;
  input [10:0]addra;
  input [10:0]addrb;
  input [15:0]dina;
  input [15:0]dinb;
  input [1:0]wea;
  input [1:0]web;
  input rsta;
  input POR_A;
  input ENA_dly_D;
  input ena;
  input rstb;
  input POR_B;
  input ENB_dly_D;
  input enb;

  wire ENA_I;
  wire ENA_dly_D;
  wire ENB_I;
  wire ENB_dly_D;
  wire POR_A;
  wire POR_B;
  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [15:0]dina;
  wire [15:0]dinb;
  wire [15:0]douta;
  wire [15:0]doutb;
  wire ena;
  wire enb;
  wire [1:0]wea;
  wire [1:0]web;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ;
  wire \NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ;
  wire [31:16]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED ;
  wire [31:16]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED ;
  wire [3:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED ;
  wire [7:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED ;
  wire [8:0]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED ;
  wire [3:2]\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED ;

  assign ram_rstram_a = POR_A;
  assign ram_rstram_b = POR_B;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "RETARGET SWEEP" *) 
  (* \PinAttr:DIADI[15]:HOLD_DETOUR  = "252" *) 
  (* bmm_info_memory_device = "[31:16][0:2047]" *) 
  RAMB36E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .EN_ECC_READ("FALSE"),
    .EN_ECC_WRITE("FALSE"),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h000000000000000000000000B808B00000000000B808B000B808B000B808B000),
    .INIT_01(256'h30A3B9F4B0008000B9F4B0003020B0003040B00031A0B0000000000000000000),
    .INIT_02(256'hB60FE9E1800099FCF9E13021BC033060B000BC0388633060B00030A0B000B800),
    .INIT_03(256'h90C690C690C690C410C090849083108014653060B00030A0B0008000B60F3021),
    .INIT_04(256'h90C690C690C690C690C690C690C690C690C690C690C690C690C690C690C690C6),
    .INIT_05(256'h3060B000BC0690C610C690C690C690C690C690C690C690C690C690C690C690C6),
    .INIT_06(256'hB0003080B000BC23E060B0008000B60F3021B60FE9E1800099FCF9E13021BC03),
    .INIT_07(256'hBEB2165332C0B0003273F9E1927392641260FAC1FA6114853021E860B00030A0),
    .INIT_08(256'hB0008000B9F43063BE521653E860B000800099FCF860B000C884108410833063),
    .INIT_09(256'h3021B60FF060B0003060EAC1EA61E9E18000B9F4B00030A0B000E9E1BE033060),
    .INIT_0A(256'h8000B9F48000B9F4B00030A0B00030C0B000F9E1BE0330213060B0008000B60F),
    .INIT_0B(256'hB000BC92064620C6F806BC72064620E0B00020C0B000F9E120213021B60FE9E1),
    .INIT_0C(256'h20C08000B9F4B0008000B9F4B000BC92064620C6F806BC72064620E0B00020C0),
    .INIT_0D(256'hB8002021B60F3073C9E18000B9F4B0008000B9F4B000326320A0B9F4B00020E0),
    .INIT_0E(256'hE860B000BC03E863E860B0008000B9F4B000E8B310C0F8B31261FA61F9E13021),
    .INIT_0F(256'hFB01FAE1FAC1FA61F9E130218000B9F4B000E8B3800099FC10A4E880B000E863),
    .INIT_10(256'h32E3E876EB16B800F8733063E860B000EAC3E860B0008000B800F8D3F8B31261),
    .INIT_11(256'h106310633077BC18BC03E873F8731063BE3232521063BE121060A6573080B800),
    .INIT_12(256'hE876BC2388773063E876F873E8631076106310633077BC238864E893E8631078),
    .INIT_13(256'h8464E873E898BC18F873E876BC03E873F8031076106310633077B800F8763063),
    .INIT_14(256'hE8B310C4E873E883107810631077BC238464E873E898B800800099FCE873BC23),
    .INIT_15(256'hE873BC238864E893E876800099FC10A4E873E883107810631077B800800099FC),
    .INIT_16(256'hBC03E876BC23E876BC033060B000BCB732F78000B8008000B800BC238876E863),
    .INIT_17(256'hFAD3B800EAC3E8738000B9F4B00010B68000B9F4B00010B8BC18F883E873E896),
    .INIT_18(256'hB60F98088000B60F3021EB01EAE1EAC1EA611033E9E180008000B800BC36EAD6),
    .INIT_19(256'hA883E873327399FCF9E13260B000FA613021BC04A883E860B0008000B60F8000),
    .INIT_1A(256'h90849084908490831080302130A0B00010658000B60F3021B60FEA61E9E1BE24),
    .INIT_1B(256'h112030A0B000F061B9F4B000F081F9E130C03100112030E19084908490849084),
    .INIT_1C(256'hB000FA61B9F4B000F9E130A030213021B60FE9E1E06130C0B9F4B00030E13100),
    .INIT_1D(256'h114030A0B000E0633063B000106310731260BE03A864B000E480B00030A0B9F4),
    .INIT_1E(256'hB000F1413273F08130C03100112030E1914A914A914A914A914A914A914A9144),
    .INIT_1F(256'h3021B60F1060EA61E9E11063BE25A8A4B000E4843084B00010831073F061B9F4),
    .INIT_20(256'hA48331651308E865F805F865A463A0C610C6E865FAE1FAC1FA61F9E1FB013021),
    .INIT_21(256'hE876BC23A463E861F86132C5E865F86530603060BE03A878F8C5A4C6BE243105),
    .INIT_22(256'h12F832C5F8C5F865A463BE04A89812F8B810F865A463E865BC03A463E861F861),
    .INIT_23(256'h3097BE0A30C7E86B8484BE06A4C4E888BC243060B8103060BE2AA9573185BE18),
    .INIT_24(256'h3060F067BE29A929E86C12E4B81010E6BE04F868A463E868F067E86CBC17AAF7),
    .INIT_25(256'h1073BE13B8003260BE03A463E876F865BC23A463E865F865A46312E0E865F865),
    .INIT_26(256'hA0633021B60FEB01EAE1EAC1EA61E9E114773273BE24A484E89630A0B9F4B000),
    .INIT_27(256'hB810F868A463E868F067E86CF86BA0633021B60FEB01EAE1EAC1EA61E9E1B800),
    .INIT_28(256'hFB01FAE1FAC13021B80012E0BE03A463E86812E0BE29B800F86B3060BE2910E6),
    .INIT_29(256'h3260B81032C5BE03132913081347A463136612E5E865FA61F9E1FB61FB41FB21),
    .INIT_2A(256'h30F7BE23A77BA4633117137BE8773273BE24A484E89630A0B9F4B0001073BE13),
    .INIT_2B(256'hBC03A463E861F861E876BC23A463E861F861E877F8773060F877A463E877FB77),
    .INIT_2C(256'hE8971463A484BE05A4A4E886BC248959B81030D710783120BC18F877A463E877),
    .INIT_2D(256'hA484E881F881E896BC04A484E881F881E897F897A484BE05A4A4E9E1BE25A4A4),
    .INIT_2E(256'h3021B60FEB61EB41EB21EB01EAE1EAC1EA61E9E1F817E9E1BE04A484E897BC24),
    .INIT_2F(256'h30971078BE39BC23F886A48413453063E886F887E09A30BABEB21643B800FB77),
    .INIT_30(256'hF886A484E886BC2AF887E09AE09AB810F8883080BE39B8001078BE03A463E864),
    .INIT_31(256'hF921F901F8E1F8C1F8A1F881F861F821F9E13021B800F8883080BE04A484E886),
    .INIT_32(256'hE821E961E9E1800099FCF961FA41E8A3E8839560FA21F981F9613060B000F941),
    .INIT_33(256'hB60F3021B62EEA41EA21E981E961E941E921E901E8E1E8C1E8A1E881E861940B),
    .INIT_34(256'hBE258000BE2730E700E030A530603021B60FE9E18000B9F4B000F9E130218000),
    .INIT_35(256'hC9E08000B9F4B0008000B9F4B000940B3160940B3160D9E030211060B60F8000),
    .INIT_36(256'h000000000000FFFF0000FFFF3021B60FC9E08000B9F4B000D9E030213021B60F),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000100000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h002E00000059003700F5001100A80021000A00F000F8004400E0000800000000),
    .INIT_3C(256'h000200010078000F006000520064001A00A0005A00E0006400060044002300E2),
    .INIT_3D(256'h001000EE00020050000A00D000020000000500A90006003F000A00FA00000000),
    .INIT_3E(256'h00500058005000580003000400F600000027000100EC00410007003100310004),
    .INIT_3F(256'h00060024008F006E000900020002000A001000020080000C00F8000000280060),
    .INIT_40(256'h000000000000000000000000000000000000000000FF00010008000800410001),
    .INIT_41(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_42(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_43(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_44(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_45(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_46(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_47(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_48(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_49(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_4F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_50(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_51(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_52(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_53(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_54(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_55(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_56(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_57(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_58(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_59(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_5F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_60(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_61(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_62(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_63(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_64(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_65(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_66(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_67(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_68(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_69(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_6F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_70(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_71(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_72(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_73(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_74(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_75(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_76(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_77(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_78(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_79(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_7F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(36'h000000000),
    .INIT_B(36'h000000000),
    .INIT_FILE("NONE"),
    .IS_CLKARDCLK_INVERTED(1'b0),
    .IS_CLKBWRCLK_INVERTED(1'b0),
    .IS_ENARDEN_INVERTED(1'b0),
    .IS_ENBWREN_INVERTED(1'b0),
    .IS_RSTRAMARSTRAM_INVERTED(1'b0),
    .IS_RSTRAMB_INVERTED(1'b0),
    .IS_RSTREGARSTREG_INVERTED(1'b0),
    .IS_RSTREGB_INVERTED(1'b0),
    .RAM_EXTENSION_A("NONE"),
    .RAM_EXTENSION_B("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("REGCE"),
    .RSTREG_PRIORITY_B("REGCE"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(36'h000000000),
    .SRVAL_B(36'h000000000),
    .WRITE_MODE_A("WRITE_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram 
       (.ADDRARDADDR({1'b1,addra,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,addrb,1'b1,1'b1,1'b1,1'b1}),
        .CASCADEINA(1'b0),
        .CASCADEINB(1'b0),
        .CASCADEOUTA(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTA_UNCONNECTED ),
        .CASCADEOUTB(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_CASCADEOUTB_UNCONNECTED ),
        .CLKARDCLK(clka),
        .CLKBWRCLK(clkb),
        .DBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DBITERR_UNCONNECTED ),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dina}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,dinb}),
        .DIPADIP({1'b0,1'b0,1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0,1'b0,1'b0}),
        .DOADO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOADO_UNCONNECTED [31:16],douta}),
        .DOBDO({\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOBDO_UNCONNECTED [31:16],doutb}),
        .DOPADOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPADOP_UNCONNECTED [3:0]),
        .DOPBDOP(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_DOPBDOP_UNCONNECTED [3:0]),
        .ECCPARITY(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_ECCPARITY_UNCONNECTED [7:0]),
        .ENARDEN(ENA_I),
        .ENBWREN(ENB_I),
        .INJECTDBITERR(1'b0),
        .INJECTSBITERR(1'b0),
        .RDADDRECC(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_RDADDRECC_UNCONNECTED [8:0]),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(POR_A),
        .RSTRAMB(POR_B),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .SBITERR(\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_SBITERR_UNCONNECTED ),
        .WEA({1'b0,1'b0,wea}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0,\NLW_DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_WEBWE_UNCONNECTED [3:2],web}));
  LUT2 #(
    .INIT(4'hE)) 
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_i_1 
       (.I0(ENA_dly_D),
        .I1(ena),
        .O(ENA_I));
  LUT2 #(
    .INIT(4'hE)) 
    \DEVICE_7SERIES.WITH_BMM_INFO.TRUE_DP.SIMPLE_PRIM36.TDP_SP36_NO_ECC_ATTR.ram_i_2 
       (.I0(ENB_dly_D),
        .I1(enb),
        .O(ENB_I));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_top" *) 
module system_lmb_bram_0__blk_mem_gen_top
   (douta,
    doutb,
    rsta_busy,
    rstb_busy,
    clkb,
    clka,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web,
    rsta,
    ena,
    rstb,
    enb);
  output [31:0]douta;
  output [31:0]doutb;
  output rsta_busy;
  output rstb_busy;
  input clkb;
  input clka;
  input [10:0]addra;
  input [10:0]addrb;
  input [31:0]dina;
  input [31:0]dinb;
  input [3:0]wea;
  input [3:0]web;
  input rsta;
  input ena;
  input rstb;
  input enb;

  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [31:0]dina;
  wire [31:0]dinb;
  wire [31:0]douta;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire [3:0]wea;
  wire [3:0]web;
  wire \NLW_valid.cstr_rsta_UNCONNECTED ;
  wire \NLW_valid.cstr_rsta_busy_UNCONNECTED ;
  wire \NLW_valid.cstr_rstb_UNCONNECTED ;
  wire \NLW_valid.cstr_rstb_busy_UNCONNECTED ;

  system_lmb_bram_0__blk_mem_gen_generic_cstr \valid.cstr 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .rsta(\NLW_valid.cstr_rsta_UNCONNECTED ),
        .rsta_busy(\NLW_valid.cstr_rsta_busy_UNCONNECTED ),
        .rstb(\NLW_valid.cstr_rstb_UNCONNECTED ),
        .rstb_busy(\NLW_valid.cstr_rstb_busy_UNCONNECTED ),
        .wea(wea),
        .web(web));
endmodule

(* C_ADDRA_WIDTH = "32" *) (* C_ADDRB_WIDTH = "32" *) (* C_ALGORITHM = "1" *) 
(* C_AXI_ID_WIDTH = "4" *) (* C_AXI_SLAVE_TYPE = "0" *) (* C_AXI_TYPE = "1" *) 
(* C_BYTE_SIZE = "8" *) (* C_COMMON_CLK = "0" *) (* C_COUNT_18K_BRAM = "0" *) 
(* C_COUNT_36K_BRAM = "2" *) (* C_CTRL_ECC_ALGO = "NONE" *) (* C_DEFAULT_DATA = "0" *) 
(* C_DISABLE_WARN_BHV_COLL = "0" *) (* C_DISABLE_WARN_BHV_RANGE = "0" *) (* C_ELABORATION_DIR = "./" *) 
(* C_ENABLE_32BIT_ADDRESS = "1" *) (* C_EN_DEEPSLEEP_PIN = "0" *) (* C_EN_ECC_PIPE = "0" *) 
(* C_EN_RDADDRA_CHG = "0" *) (* C_EN_RDADDRB_CHG = "0" *) (* C_EN_SAFETY_CKT = "1" *) 
(* C_EN_SHUTDOWN_PIN = "0" *) (* C_EN_SLEEP_PIN = "0" *) (* C_EST_POWER_SUMMARY = "Estimated Power for IP     :     10.7492 mW" *) 
(* C_FAMILY = "spartan7" *) (* C_HAS_AXI_ID = "0" *) (* C_HAS_ENA = "1" *) 
(* C_HAS_ENB = "1" *) (* C_HAS_INJECTERR = "0" *) (* C_HAS_MEM_OUTPUT_REGS_A = "0" *) 
(* C_HAS_MEM_OUTPUT_REGS_B = "0" *) (* C_HAS_MUX_OUTPUT_REGS_A = "0" *) (* C_HAS_MUX_OUTPUT_REGS_B = "0" *) 
(* C_HAS_REGCEA = "0" *) (* C_HAS_REGCEB = "0" *) (* C_HAS_RSTA = "1" *) 
(* C_HAS_RSTB = "1" *) (* C_HAS_SOFTECC_INPUT_REGS_A = "0" *) (* C_HAS_SOFTECC_OUTPUT_REGS_B = "0" *) 
(* C_INITA_VAL = "0" *) (* C_INITB_VAL = "0" *) (* C_INIT_FILE = "system_lmb_bram_0.mem" *) 
(* C_INIT_FILE_NAME = "no_coe_file_loaded" *) (* C_INTERFACE_TYPE = "0" *) (* C_LOAD_INIT_FILE = "0" *) 
(* C_MEM_TYPE = "2" *) (* C_MUX_PIPELINE_STAGES = "0" *) (* C_PRIM_TYPE = "1" *) 
(* C_READ_DEPTH_A = "2048" *) (* C_READ_DEPTH_B = "2048" *) (* C_READ_LATENCY_A = "1" *) 
(* C_READ_LATENCY_B = "1" *) (* C_READ_WIDTH_A = "32" *) (* C_READ_WIDTH_B = "32" *) 
(* C_RSTRAM_A = "0" *) (* C_RSTRAM_B = "0" *) (* C_RST_PRIORITY_A = "CE" *) 
(* C_RST_PRIORITY_B = "CE" *) (* C_SIM_COLLISION_CHECK = "ALL" *) (* C_USE_BRAM_BLOCK = "1" *) 
(* C_USE_BYTE_WEA = "1" *) (* C_USE_BYTE_WEB = "1" *) (* C_USE_DEFAULT_DATA = "0" *) 
(* C_USE_ECC = "0" *) (* C_USE_SOFTECC = "0" *) (* C_USE_URAM = "0" *) 
(* C_WEA_WIDTH = "4" *) (* C_WEB_WIDTH = "4" *) (* C_WRITE_DEPTH_A = "2048" *) 
(* C_WRITE_DEPTH_B = "2048" *) (* C_WRITE_MODE_A = "WRITE_FIRST" *) (* C_WRITE_MODE_B = "WRITE_FIRST" *) 
(* C_WRITE_WIDTH_A = "32" *) (* C_WRITE_WIDTH_B = "32" *) (* C_XDEVICEFAMILY = "spartan7" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "blk_mem_gen_v8_4_4" *) 
module system_lmb_bram_0__blk_mem_gen_v8_4_4
   (clka,
    rsta,
    ena,
    regcea,
    wea,
    addra,
    dina,
    douta,
    clkb,
    rstb,
    enb,
    regceb,
    web,
    addrb,
    dinb,
    doutb,
    injectsbiterr,
    injectdbiterr,
    eccpipece,
    sbiterr,
    dbiterr,
    rdaddrecc,
    sleep,
    deepsleep,
    shutdown,
    rsta_busy,
    rstb_busy,
    s_aclk,
    s_aresetn,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_rvalid,
    s_axi_rready,
    s_axi_injectsbiterr,
    s_axi_injectdbiterr,
    s_axi_sbiterr,
    s_axi_dbiterr,
    s_axi_rdaddrecc);
  input clka;
  input rsta;
  input ena;
  input regcea;
  input [3:0]wea;
  input [31:0]addra;
  input [31:0]dina;
  output [31:0]douta;
  input clkb;
  input rstb;
  input enb;
  input regceb;
  input [3:0]web;
  input [31:0]addrb;
  input [31:0]dinb;
  output [31:0]doutb;
  input injectsbiterr;
  input injectdbiterr;
  input eccpipece;
  output sbiterr;
  output dbiterr;
  output [31:0]rdaddrecc;
  input sleep;
  input deepsleep;
  input shutdown;
  output rsta_busy;
  output rstb_busy;
  input s_aclk;
  input s_aresetn;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input s_axi_awvalid;
  output s_axi_awready;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wlast;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  input s_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output s_axi_rvalid;
  input s_axi_rready;
  input s_axi_injectsbiterr;
  input s_axi_injectdbiterr;
  output s_axi_sbiterr;
  output s_axi_dbiterr;
  output [31:0]s_axi_rdaddrecc;

  wire [31:0]addra;
  wire [31:0]addrb;
  wire clka;
  wire clkb;
  wire [31:0]dina;
  wire [31:0]dinb;
  wire [31:0]douta;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire [3:0]wea;
  wire [3:0]web;
  wire NLW_inst_blk_mem_gen_rsta_UNCONNECTED;
  wire NLW_inst_blk_mem_gen_rsta_busy_UNCONNECTED;
  wire NLW_inst_blk_mem_gen_rstb_UNCONNECTED;
  wire NLW_inst_blk_mem_gen_rstb_busy_UNCONNECTED;

  system_lmb_bram_0__blk_mem_gen_v8_4_4_synth inst_blk_mem_gen
       (.addra(addra[12:2]),
        .addrb(addrb[12:2]),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .rsta(NLW_inst_blk_mem_gen_rsta_UNCONNECTED),
        .rsta_busy(NLW_inst_blk_mem_gen_rsta_busy_UNCONNECTED),
        .rstb(NLW_inst_blk_mem_gen_rstb_UNCONNECTED),
        .rstb_busy(NLW_inst_blk_mem_gen_rstb_busy_UNCONNECTED),
        .wea(wea),
        .web(web));
endmodule

(* ORIG_REF_NAME = "blk_mem_gen_v8_4_4_synth" *) 
module system_lmb_bram_0__blk_mem_gen_v8_4_4_synth
   (douta,
    doutb,
    rsta_busy,
    rstb_busy,
    clkb,
    clka,
    addra,
    addrb,
    dina,
    dinb,
    wea,
    web,
    rsta,
    ena,
    rstb,
    enb);
  output [31:0]douta;
  output [31:0]doutb;
  output rsta_busy;
  output rstb_busy;
  input clkb;
  input clka;
  input [10:0]addra;
  input [10:0]addrb;
  input [31:0]dina;
  input [31:0]dinb;
  input [3:0]wea;
  input [3:0]web;
  input rsta;
  input ena;
  input rstb;
  input enb;

  wire [10:0]addra;
  wire [10:0]addrb;
  wire clka;
  wire clkb;
  wire [31:0]dina;
  wire [31:0]dinb;
  wire [31:0]douta;
  wire [31:0]doutb;
  wire ena;
  wire enb;
  wire [3:0]wea;
  wire [3:0]web;
  wire \NLW_gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen_rsta_UNCONNECTED ;
  wire \NLW_gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen_rsta_busy_UNCONNECTED ;
  wire \NLW_gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen_rstb_UNCONNECTED ;
  wire \NLW_gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen_rstb_busy_UNCONNECTED ;

  system_lmb_bram_0__blk_mem_gen_top \gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen 
       (.addra(addra),
        .addrb(addrb),
        .clka(clka),
        .clkb(clkb),
        .dina(dina),
        .dinb(dinb),
        .douta(douta),
        .doutb(doutb),
        .ena(ena),
        .enb(enb),
        .rsta(\NLW_gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen_rsta_UNCONNECTED ),
        .rsta_busy(\NLW_gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen_rsta_busy_UNCONNECTED ),
        .rstb(\NLW_gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen_rstb_UNCONNECTED ),
        .rstb_busy(\NLW_gnbram.gnative_mem_map_bmg.native_mem_map_blk_mem_gen_rstb_busy_UNCONNECTED ),
        .wea(wea),
        .web(web));
endmodule

(* ORIG_REF_NAME = "ALU" *) 
module system_microblaze_0_0__ALU
   (LO,
    \EX_Op2_reg[0] ,
    ex_databus_addr,
    ex_use_carry,
    DI_0,
    ex_alu_carryin,
    S,
    ex_unsigned_op,
    Q,
    \MEM_DataBus_Addr_reg[9] ,
    \Using_FPGA.Native ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    I2,
    I0,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4);
  output LO;
  output [29:0]\EX_Op2_reg[0] ;
  output [1:0]ex_databus_addr;
  input ex_use_carry;
  input DI_0;
  input ex_alu_carryin;
  input S;
  input ex_unsigned_op;
  input [31:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[9] ;
  input [31:0]\Using_FPGA.Native ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input I2;
  input I0;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  input lopt_4;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [29:0]\EX_Op2_reg[0] ;
  wire I0;
  wire I2;
  wire LO;
  wire [1:0]\MEM_DataBus_Addr_reg[9] ;
  wire [31:0]Q;
  wire S;
  wire [31:0]\Using_FPGA.Native ;
  wire alu_carry_1;
  wire alu_carry_13;
  wire alu_carry_17;
  wire alu_carry_21;
  wire alu_carry_25;
  wire alu_carry_29;
  wire alu_carry_5;
  wire alu_carry_9;
  wire [1:0]ex_databus_addr;
  wire ex_unsigned_op;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_12;
  wire lopt_13;
  wire lopt_14;
  wire lopt_15;
  wire lopt_16;
  wire lopt_18;
  wire lopt_19;
  wire lopt_2;
  wire lopt_21;
  wire lopt_22;
  wire lopt_23;
  wire lopt_24;
  wire lopt_25;
  wire lopt_26;
  wire lopt_27;
  wire lopt_28;
  wire lopt_3;
  wire lopt_30;
  wire lopt_31;
  wire lopt_33;
  wire lopt_34;
  wire lopt_35;
  wire lopt_36;
  wire lopt_37;
  wire lopt_38;
  wire lopt_39;
  wire lopt_4;
  wire lopt_40;
  wire lopt_42;
  wire lopt_43;
  wire lopt_45;
  wire lopt_46;
  wire lopt_47;
  wire lopt_48;
  wire lopt_49;
  wire lopt_50;
  wire lopt_51;
  wire lopt_52;
  wire lopt_54;
  wire lopt_55;
  wire lopt_57;
  wire lopt_58;
  wire lopt_59;
  wire lopt_6;
  wire lopt_60;
  wire lopt_61;
  wire lopt_62;
  wire lopt_63;
  wire lopt_64;
  wire lopt_66;
  wire lopt_67;
  wire lopt_69;
  wire lopt_7;
  wire lopt_70;
  wire lopt_71;
  wire lopt_72;
  wire lopt_73;
  wire lopt_74;
  wire lopt_75;
  wire lopt_76;
  wire lopt_78;
  wire lopt_79;
  wire lopt_81;
  wire lopt_82;
  wire lopt_83;
  wire lopt_84;
  wire lopt_85;
  wire lopt_86;
  wire lopt_87;
  wire lopt_88;
  wire lopt_9;
  wire lopt_90;
  wire lopt_91;
  wire lopt_93;
  wire lopt_94;
  wire lopt_95;
  wire lopt_96;
  wire lopt_97;
  wire \NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_S_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_ex_unsigned_op_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[10].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[10].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[10].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[11].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[12].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[12].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[12].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[13].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[13].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[13].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[14].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[14].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[14].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[15].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[16].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[16].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[16].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[17].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[17].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[17].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[18].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[18].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[18].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[19].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[1].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[1].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[1].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[20].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[20].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[20].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[21].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[21].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[21].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[22].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[22].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[22].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[23].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[24].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[24].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[24].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[25].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[25].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[25].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[26].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[26].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[26].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[27].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[28].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[28].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[28].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[29].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[29].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[29].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[2].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[2].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[2].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[30].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[30].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[30].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[31].ALU_Bit_I1_EX_CarryIn_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[3].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[4].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[4].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[4].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[5].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[5].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[5].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[6].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[6].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[6].ALU_Bit_I1_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[7].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[8].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[8].ALU_Bit_I1_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[8].ALU_Bit_I1_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[9].ALU_Bit_I1_EX_CarryIn_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[9].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Using_FPGA.ALL_Bits[9].ALU_Bit_I1_lopt_UNCONNECTED ;

  system_microblaze_0_0__ALU_Bit__parameterized2 \Using_FPGA.ALL_Bits[0].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[0] (LO),
        .\EX_Op2_reg[0]_0 (\EX_Op2_reg[0] [29]),
        .I0(I0),
        .I2(I2),
        .LO(\NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[0] (\MEM_DataBus_Addr_reg[9] ),
        .Q(Q[31]),
        .S(\NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_S_UNCONNECTED ),
        .\Using_FPGA.Native (\Using_FPGA.Native [31]),
        .ex_unsigned_op(\NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_ex_unsigned_op_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.ALL_Bits[0].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_93),
        .lopt_2(lopt_94),
        .lopt_3(lopt_95),
        .lopt_4(lopt_97));
  system_microblaze_0_0__ALU_Bit \Using_FPGA.ALL_Bits[10].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[10].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[10] (\EX_Op2_reg[0] [19]),
        .LO(alu_carry_21),
        .\MEM_DataBus_Addr_reg[10] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[10]_0 (\Using_FPGA.Native [21]),
        .Q(Q[21]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[10].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_66),
        .lopt_10(lopt_75),
        .lopt_11(lopt_76),
        .lopt_2(lopt_67),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[10].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_69),
        .lopt_5(lopt_70),
        .lopt_6(lopt_71),
        .lopt_7(lopt_72),
        .lopt_8(lopt_73),
        .lopt_9(lopt_74));
  system_microblaze_0_0__ALU_Bit_490 \Using_FPGA.ALL_Bits[11].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(alu_carry_21),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[11] (\EX_Op2_reg[0] [18]),
        .LO(\NLW_Using_FPGA.ALL_Bits[11].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[11] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[11]_0 (\Using_FPGA.Native [20]),
        .Q(Q[20]),
        .lopt(lopt_59),
        .lopt_1(lopt_60),
        .lopt_2(lopt_61),
        .lopt_3(lopt_64));
  system_microblaze_0_0__ALU_Bit_491 \Using_FPGA.ALL_Bits[12].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[12].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[12] (\EX_Op2_reg[0] [17]),
        .LO(\NLW_Using_FPGA.ALL_Bits[12].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[12] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[12]_0 (\Using_FPGA.Native [19]),
        .Q(Q[19]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[12].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_57),
        .lopt_2(lopt_58),
        .lopt_3(lopt_63));
  system_microblaze_0_0__ALU_Bit_492 \Using_FPGA.ALL_Bits[13].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[13].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[13] (\EX_Op2_reg[0] [16]),
        .LO(\NLW_Using_FPGA.ALL_Bits[13].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[13] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[13]_0 (\Using_FPGA.Native [18]),
        .Q(Q[18]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[13].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_54),
        .lopt_2(lopt_55),
        .lopt_3(lopt_62));
  system_microblaze_0_0__ALU_Bit_493 \Using_FPGA.ALL_Bits[14].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[14].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[14] (\EX_Op2_reg[0] [15]),
        .LO(alu_carry_17),
        .\MEM_DataBus_Addr_reg[14] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[14]_0 (\Using_FPGA.Native [17]),
        .Q(Q[17]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[14].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_54),
        .lopt_10(lopt_63),
        .lopt_11(lopt_64),
        .lopt_2(lopt_55),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[14].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_57),
        .lopt_5(lopt_58),
        .lopt_6(lopt_59),
        .lopt_7(lopt_60),
        .lopt_8(lopt_61),
        .lopt_9(lopt_62));
  system_microblaze_0_0__ALU_Bit_494 \Using_FPGA.ALL_Bits[15].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(alu_carry_17),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[15] (\EX_Op2_reg[0] [14]),
        .LO(\NLW_Using_FPGA.ALL_Bits[15].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[15] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[15]_0 (\Using_FPGA.Native [16]),
        .Q(Q[16]),
        .lopt(lopt_47),
        .lopt_1(lopt_48),
        .lopt_2(lopt_49),
        .lopt_3(lopt_52));
  system_microblaze_0_0__ALU_Bit_495 \Using_FPGA.ALL_Bits[16].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[16].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[16] (\EX_Op2_reg[0] [13]),
        .LO(\NLW_Using_FPGA.ALL_Bits[16].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[16] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[16]_0 (\Using_FPGA.Native [15]),
        .Q(Q[15]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[16].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_45),
        .lopt_2(lopt_46),
        .lopt_3(lopt_51));
  system_microblaze_0_0__ALU_Bit_496 \Using_FPGA.ALL_Bits[17].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[17].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[17] (\EX_Op2_reg[0] [12]),
        .LO(\NLW_Using_FPGA.ALL_Bits[17].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[17] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[17]_0 (\Using_FPGA.Native [14]),
        .Q(Q[14]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[17].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_42),
        .lopt_2(lopt_43),
        .lopt_3(lopt_50));
  system_microblaze_0_0__ALU_Bit_497 \Using_FPGA.ALL_Bits[18].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[18].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[18] (\EX_Op2_reg[0] [11]),
        .LO(alu_carry_13),
        .\MEM_DataBus_Addr_reg[18] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[18]_0 (\Using_FPGA.Native [13]),
        .Q(Q[13]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[18].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_42),
        .lopt_10(lopt_51),
        .lopt_11(lopt_52),
        .lopt_2(lopt_43),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[18].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_45),
        .lopt_5(lopt_46),
        .lopt_6(lopt_47),
        .lopt_7(lopt_48),
        .lopt_8(lopt_49),
        .lopt_9(lopt_50));
  system_microblaze_0_0__ALU_Bit_498 \Using_FPGA.ALL_Bits[19].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(alu_carry_13),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[19] (\EX_Op2_reg[0] [10]),
        .LO(\NLW_Using_FPGA.ALL_Bits[19].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[19] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[19]_0 (\Using_FPGA.Native [12]),
        .Q(Q[12]),
        .lopt(lopt_35),
        .lopt_1(lopt_36),
        .lopt_2(lopt_37),
        .lopt_3(lopt_40));
  system_microblaze_0_0__ALU_Bit_499 \Using_FPGA.ALL_Bits[1].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[1].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[1] (\EX_Op2_reg[0] [28]),
        .LO(\NLW_Using_FPGA.ALL_Bits[1].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[1] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[1]_0 (\Using_FPGA.Native [30]),
        .Q(Q[30]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[1].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_90),
        .lopt_2(lopt_91),
        .lopt_3(lopt_96));
  system_microblaze_0_0__ALU_Bit_500 \Using_FPGA.ALL_Bits[20].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[20].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[20] (\EX_Op2_reg[0] [9]),
        .LO(\NLW_Using_FPGA.ALL_Bits[20].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[20] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[20]_0 (\Using_FPGA.Native [11]),
        .Q(Q[11]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[20].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_33),
        .lopt_2(lopt_34),
        .lopt_3(lopt_39));
  system_microblaze_0_0__ALU_Bit_501 \Using_FPGA.ALL_Bits[21].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[21].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[21] (\EX_Op2_reg[0] [8]),
        .LO(\NLW_Using_FPGA.ALL_Bits[21].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[21] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[21]_0 (\Using_FPGA.Native [10]),
        .Q(Q[10]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[21].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_30),
        .lopt_2(lopt_31),
        .lopt_3(lopt_38));
  system_microblaze_0_0__ALU_Bit_502 \Using_FPGA.ALL_Bits[22].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[22].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[22] (\EX_Op2_reg[0] [7]),
        .LO(alu_carry_9),
        .\MEM_DataBus_Addr_reg[22] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[22]_0 (\Using_FPGA.Native [9]),
        .Q(Q[9]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[22].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_30),
        .lopt_10(lopt_39),
        .lopt_11(lopt_40),
        .lopt_2(lopt_31),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[22].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_33),
        .lopt_5(lopt_34),
        .lopt_6(lopt_35),
        .lopt_7(lopt_36),
        .lopt_8(lopt_37),
        .lopt_9(lopt_38));
  system_microblaze_0_0__ALU_Bit_503 \Using_FPGA.ALL_Bits[23].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(alu_carry_9),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[23] (\EX_Op2_reg[0] [6]),
        .LO(\NLW_Using_FPGA.ALL_Bits[23].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[23] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[23]_0 (\Using_FPGA.Native [8]),
        .Q(Q[8]),
        .lopt(lopt_23),
        .lopt_1(lopt_24),
        .lopt_2(lopt_25),
        .lopt_3(lopt_28));
  system_microblaze_0_0__ALU_Bit_504 \Using_FPGA.ALL_Bits[24].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[24].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[24] (\EX_Op2_reg[0] [5]),
        .LO(\NLW_Using_FPGA.ALL_Bits[24].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[24] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[24]_0 (\Using_FPGA.Native [7]),
        .Q(Q[7]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[24].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_21),
        .lopt_2(lopt_22),
        .lopt_3(lopt_27));
  system_microblaze_0_0__ALU_Bit_505 \Using_FPGA.ALL_Bits[25].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[25].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[25] (\EX_Op2_reg[0] [4]),
        .LO(\NLW_Using_FPGA.ALL_Bits[25].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[25] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[25]_0 (\Using_FPGA.Native [6]),
        .Q(Q[6]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[25].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_18),
        .lopt_2(lopt_19),
        .lopt_3(lopt_26));
  system_microblaze_0_0__ALU_Bit_506 \Using_FPGA.ALL_Bits[26].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[26].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[26] (\EX_Op2_reg[0] [3]),
        .LO(alu_carry_5),
        .\MEM_DataBus_Addr_reg[26] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[26]_0 (\Using_FPGA.Native [5]),
        .Q(Q[5]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[26].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_18),
        .lopt_10(lopt_27),
        .lopt_11(lopt_28),
        .lopt_2(lopt_19),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[26].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_21),
        .lopt_5(lopt_22),
        .lopt_6(lopt_23),
        .lopt_7(lopt_24),
        .lopt_8(lopt_25),
        .lopt_9(lopt_26));
  system_microblaze_0_0__ALU_Bit_507 \Using_FPGA.ALL_Bits[27].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(alu_carry_5),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[27] (\EX_Op2_reg[0] [2]),
        .LO(\NLW_Using_FPGA.ALL_Bits[27].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[27] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[27]_0 (\Using_FPGA.Native [4]),
        .Q(Q[4]),
        .lopt(lopt_11),
        .lopt_1(lopt_12),
        .lopt_2(lopt_13),
        .lopt_3(lopt_16));
  system_microblaze_0_0__ALU_Bit_508 \Using_FPGA.ALL_Bits[28].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[28].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[28] (\EX_Op2_reg[0] [1]),
        .LO(\NLW_Using_FPGA.ALL_Bits[28].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[28] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[28]_0 (\Using_FPGA.Native [3]),
        .Q(Q[3]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[28].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_9),
        .lopt_2(lopt_10),
        .lopt_3(lopt_15));
  system_microblaze_0_0__ALU_Bit_509 \Using_FPGA.ALL_Bits[29].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[29].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[29] (\EX_Op2_reg[0] [0]),
        .LO(\NLW_Using_FPGA.ALL_Bits[29].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[29] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[29]_0 (\Using_FPGA.Native [2]),
        .Q(Q[2]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[29].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_6),
        .lopt_2(lopt_7),
        .lopt_3(lopt_14));
  system_microblaze_0_0__ALU_Bit_510 \Using_FPGA.ALL_Bits[2].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[2].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[2] (\EX_Op2_reg[0] [27]),
        .LO(alu_carry_29),
        .\MEM_DataBus_Addr_reg[2] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[2]_0 (\Using_FPGA.Native [29]),
        .Q(Q[29]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[2].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_90),
        .lopt_10(lopt_97),
        .lopt_2(lopt_91),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[2].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(ex_unsigned_op),
        .lopt_5(S),
        .lopt_6(lopt_93),
        .lopt_7(lopt_94),
        .lopt_8(lopt_95),
        .lopt_9(lopt_96));
  system_microblaze_0_0__ALU_Bit_511 \Using_FPGA.ALL_Bits[30].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[30].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .LO(alu_carry_1),
        .Q(Q[1]),
        .\Using_FPGA.Native_I2 (\MEM_DataBus_Addr_reg[9] ),
        .\Using_FPGA.Native_I2_0 (\Using_FPGA.Native [1]),
        .ex_databus_addr(ex_databus_addr[1]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[30].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_6),
        .lopt_10(lopt_15),
        .lopt_11(lopt_16),
        .lopt_2(lopt_7),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[30].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_9),
        .lopt_5(lopt_10),
        .lopt_6(lopt_11),
        .lopt_7(lopt_12),
        .lopt_8(lopt_13),
        .lopt_9(lopt_14));
  system_microblaze_0_0__ALU_Bit_512 \Using_FPGA.ALL_Bits[31].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryIn(\NLW_Using_FPGA.ALL_Bits[31].ALU_Bit_I1_EX_CarryIn_UNCONNECTED ),
        .EX_CarryOut(alu_carry_1),
        .EX_Enable_ALU(EX_Enable_ALU),
        .Q(Q[0]),
        .\Using_FPGA.Native_I2 (\MEM_DataBus_Addr_reg[9] ),
        .\Using_FPGA.Native_I2_0 (\Using_FPGA.Native [0]),
        .ex_databus_addr(ex_databus_addr[0]),
        .lopt(lopt_1),
        .lopt_1(lopt_2),
        .lopt_2(lopt_3),
        .lopt_3(lopt_4));
  system_microblaze_0_0__ALU_Bit_513 \Using_FPGA.ALL_Bits[3].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(alu_carry_29),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[3] (\EX_Op2_reg[0] [26]),
        .LO(\NLW_Using_FPGA.ALL_Bits[3].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[3] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[3]_0 (\Using_FPGA.Native [28]),
        .Q(Q[28]),
        .lopt(lopt_83),
        .lopt_1(lopt_84),
        .lopt_2(lopt_85),
        .lopt_3(lopt_88));
  system_microblaze_0_0__ALU_Bit_514 \Using_FPGA.ALL_Bits[4].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[4].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[4] (\EX_Op2_reg[0] [25]),
        .LO(\NLW_Using_FPGA.ALL_Bits[4].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[4] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[4]_0 (\Using_FPGA.Native [27]),
        .Q(Q[27]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[4].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_81),
        .lopt_2(lopt_82),
        .lopt_3(lopt_87));
  system_microblaze_0_0__ALU_Bit_515 \Using_FPGA.ALL_Bits[5].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[5].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[5] (\EX_Op2_reg[0] [24]),
        .LO(\NLW_Using_FPGA.ALL_Bits[5].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[5] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[5]_0 (\Using_FPGA.Native [26]),
        .Q(Q[26]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[5].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_78),
        .lopt_2(lopt_79),
        .lopt_3(lopt_86));
  system_microblaze_0_0__ALU_Bit_516 \Using_FPGA.ALL_Bits[6].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[6].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[6] (\EX_Op2_reg[0] [23]),
        .LO(alu_carry_25),
        .\MEM_DataBus_Addr_reg[6] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[6]_0 (\Using_FPGA.Native [25]),
        .Q(Q[25]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[6].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_78),
        .lopt_10(lopt_87),
        .lopt_11(lopt_88),
        .lopt_2(lopt_79),
        .lopt_3(\NLW_Using_FPGA.ALL_Bits[6].ALU_Bit_I1_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_81),
        .lopt_5(lopt_82),
        .lopt_6(lopt_83),
        .lopt_7(lopt_84),
        .lopt_8(lopt_85),
        .lopt_9(lopt_86));
  system_microblaze_0_0__ALU_Bit_517 \Using_FPGA.ALL_Bits[7].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(alu_carry_25),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[7] (\EX_Op2_reg[0] [22]),
        .LO(\NLW_Using_FPGA.ALL_Bits[7].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[7] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[7]_0 (\Using_FPGA.Native [24]),
        .Q(Q[24]),
        .lopt(lopt_71),
        .lopt_1(lopt_72),
        .lopt_2(lopt_73),
        .lopt_3(lopt_76));
  system_microblaze_0_0__ALU_Bit_518 \Using_FPGA.ALL_Bits[8].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[8].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[8] (\EX_Op2_reg[0] [21]),
        .LO(\NLW_Using_FPGA.ALL_Bits[8].ALU_Bit_I1_LO_UNCONNECTED ),
        .\MEM_DataBus_Addr_reg[8] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[8]_0 (\Using_FPGA.Native [23]),
        .Q(Q[23]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[8].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_69),
        .lopt_2(lopt_70),
        .lopt_3(lopt_75));
  system_microblaze_0_0__ALU_Bit_519 \Using_FPGA.ALL_Bits[9].ALU_Bit_I1 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_CarryIn(\NLW_Using_FPGA.ALL_Bits[9].ALU_Bit_I1_EX_CarryIn_UNCONNECTED ),
        .EX_CarryOut(\NLW_Using_FPGA.ALL_Bits[9].ALU_Bit_I1_EX_CarryOut_UNCONNECTED ),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[9] (\EX_Op2_reg[0] [20]),
        .\MEM_DataBus_Addr_reg[9] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[9]_0 (\Using_FPGA.Native [22]),
        .Q(Q[22]),
        .lopt(\NLW_Using_FPGA.ALL_Bits[9].ALU_Bit_I1_lopt_UNCONNECTED ),
        .lopt_1(lopt_66),
        .lopt_2(lopt_67),
        .lopt_3(lopt_74));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit
   (EX_CarryOut,
    \EX_Op2_reg[10] ,
    Q,
    \MEM_DataBus_Addr_reg[10] ,
    \MEM_DataBus_Addr_reg[10]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[10] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[10] ;
  input [0:0]\MEM_DataBus_Addr_reg[10]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[10] ;
  wire LO;
  wire [1:0]\MEM_DataBus_Addr_reg[10] ;
  wire [0:0]\MEM_DataBus_Addr_reg[10]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  system_microblaze_0_0__MB_LUT6_2_579 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[10] (\MEM_DataBus_Addr_reg[10] ),
        .\MEM_DataBus_Addr_reg[10]_0 (\MEM_DataBus_Addr_reg[10]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_580 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .\EX_Op2_reg[10] (\EX_Op2_reg[10] ),
        .LO(LO),
        .S(alu_AddSub),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_490
   (EX_CarryOut,
    \EX_Op2_reg[11] ,
    Q,
    \MEM_DataBus_Addr_reg[11] ,
    \MEM_DataBus_Addr_reg[11]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[11] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[11] ;
  input [0:0]\MEM_DataBus_Addr_reg[11]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[11] ;
  wire [1:0]\MEM_DataBus_Addr_reg[11] ;
  wire [0:0]\MEM_DataBus_Addr_reg[11]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  system_microblaze_0_0__MB_LUT6_2_577 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[11] (\MEM_DataBus_Addr_reg[11] ),
        .\MEM_DataBus_Addr_reg[11]_0 (\MEM_DataBus_Addr_reg[11]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_578 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(EX_CarryOut),
        .\EX_Op2_reg[11] (\EX_Op2_reg[11] ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_491
   (EX_CarryOut,
    \EX_Op2_reg[12] ,
    Q,
    \MEM_DataBus_Addr_reg[12] ,
    \MEM_DataBus_Addr_reg[12]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[12] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[12] ;
  input [0:0]\MEM_DataBus_Addr_reg[12]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[12] ;
  wire [1:0]\MEM_DataBus_Addr_reg[12] ;
  wire [0:0]\MEM_DataBus_Addr_reg[12]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  system_microblaze_0_0__MB_LUT6_2_575 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[12] (\MEM_DataBus_Addr_reg[12] ),
        .\MEM_DataBus_Addr_reg[12]_0 (\MEM_DataBus_Addr_reg[12]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_576 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .\EX_Op2_reg[12] (\EX_Op2_reg[12] ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_492
   (EX_CarryOut,
    \EX_Op2_reg[13] ,
    Q,
    \MEM_DataBus_Addr_reg[13] ,
    \MEM_DataBus_Addr_reg[13]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[13] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[13] ;
  input [0:0]\MEM_DataBus_Addr_reg[13]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[13] ;
  wire [1:0]\MEM_DataBus_Addr_reg[13] ;
  wire [0:0]\MEM_DataBus_Addr_reg[13]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  system_microblaze_0_0__MB_LUT6_2_573 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[13] (\MEM_DataBus_Addr_reg[13] ),
        .\MEM_DataBus_Addr_reg[13]_0 (\MEM_DataBus_Addr_reg[13]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_574 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .\EX_Op2_reg[13] (\EX_Op2_reg[13] ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_493
   (EX_CarryOut,
    \EX_Op2_reg[14] ,
    Q,
    \MEM_DataBus_Addr_reg[14] ,
    \MEM_DataBus_Addr_reg[14]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[14] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[14] ;
  input [0:0]\MEM_DataBus_Addr_reg[14]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[14] ;
  wire LO;
  wire [1:0]\MEM_DataBus_Addr_reg[14] ;
  wire [0:0]\MEM_DataBus_Addr_reg[14]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  system_microblaze_0_0__MB_LUT6_2_571 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[14] (\MEM_DataBus_Addr_reg[14] ),
        .\MEM_DataBus_Addr_reg[14]_0 (\MEM_DataBus_Addr_reg[14]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_572 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .\EX_Op2_reg[14] (\EX_Op2_reg[14] ),
        .LO(LO),
        .S(alu_AddSub),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_494
   (EX_CarryOut,
    \EX_Op2_reg[15] ,
    Q,
    \MEM_DataBus_Addr_reg[15] ,
    \MEM_DataBus_Addr_reg[15]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[15] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[15] ;
  input [0:0]\MEM_DataBus_Addr_reg[15]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[15] ;
  wire [1:0]\MEM_DataBus_Addr_reg[15] ;
  wire [0:0]\MEM_DataBus_Addr_reg[15]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  system_microblaze_0_0__MB_LUT6_2_569 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[15] (\MEM_DataBus_Addr_reg[15] ),
        .\MEM_DataBus_Addr_reg[15]_0 (\MEM_DataBus_Addr_reg[15]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_570 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(EX_CarryOut),
        .\EX_Op2_reg[15] (\EX_Op2_reg[15] ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_495
   (EX_CarryOut,
    \EX_Op2_reg[16] ,
    Q,
    \MEM_DataBus_Addr_reg[16] ,
    \MEM_DataBus_Addr_reg[16]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[16] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[16] ;
  input [0:0]\MEM_DataBus_Addr_reg[16]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[16] ;
  wire [1:0]\MEM_DataBus_Addr_reg[16] ;
  wire [0:0]\MEM_DataBus_Addr_reg[16]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  system_microblaze_0_0__MB_LUT6_2_567 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[16] (\MEM_DataBus_Addr_reg[16] ),
        .\MEM_DataBus_Addr_reg[16]_0 (\MEM_DataBus_Addr_reg[16]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_568 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .\EX_Op2_reg[16] (\EX_Op2_reg[16] ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_496
   (EX_CarryOut,
    \EX_Op2_reg[17] ,
    Q,
    \MEM_DataBus_Addr_reg[17] ,
    \MEM_DataBus_Addr_reg[17]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[17] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[17] ;
  input [0:0]\MEM_DataBus_Addr_reg[17]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[17] ;
  wire [1:0]\MEM_DataBus_Addr_reg[17] ;
  wire [0:0]\MEM_DataBus_Addr_reg[17]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  system_microblaze_0_0__MB_LUT6_2_565 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[17] (\MEM_DataBus_Addr_reg[17] ),
        .\MEM_DataBus_Addr_reg[17]_0 (\MEM_DataBus_Addr_reg[17]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_566 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .\EX_Op2_reg[17] (\EX_Op2_reg[17] ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_497
   (EX_CarryOut,
    \EX_Op2_reg[18] ,
    Q,
    \MEM_DataBus_Addr_reg[18] ,
    \MEM_DataBus_Addr_reg[18]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[18] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[18] ;
  input [0:0]\MEM_DataBus_Addr_reg[18]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[18] ;
  wire LO;
  wire [1:0]\MEM_DataBus_Addr_reg[18] ;
  wire [0:0]\MEM_DataBus_Addr_reg[18]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  system_microblaze_0_0__MB_LUT6_2_563 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[18] (\MEM_DataBus_Addr_reg[18] ),
        .\MEM_DataBus_Addr_reg[18]_0 (\MEM_DataBus_Addr_reg[18]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_564 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .\EX_Op2_reg[18] (\EX_Op2_reg[18] ),
        .LO(LO),
        .S(alu_AddSub),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_498
   (EX_CarryOut,
    \EX_Op2_reg[19] ,
    Q,
    \MEM_DataBus_Addr_reg[19] ,
    \MEM_DataBus_Addr_reg[19]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[19] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[19] ;
  input [0:0]\MEM_DataBus_Addr_reg[19]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[19] ;
  wire [1:0]\MEM_DataBus_Addr_reg[19] ;
  wire [0:0]\MEM_DataBus_Addr_reg[19]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  system_microblaze_0_0__MB_LUT6_2_561 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[19] (\MEM_DataBus_Addr_reg[19] ),
        .\MEM_DataBus_Addr_reg[19]_0 (\MEM_DataBus_Addr_reg[19]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_562 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(EX_CarryOut),
        .\EX_Op2_reg[19] (\EX_Op2_reg[19] ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_499
   (EX_CarryOut,
    \EX_Op2_reg[1] ,
    Q,
    \MEM_DataBus_Addr_reg[1] ,
    \MEM_DataBus_Addr_reg[1]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[1] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[1] ;
  input [0:0]\MEM_DataBus_Addr_reg[1]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[1] ;
  wire [1:0]\MEM_DataBus_Addr_reg[1] ;
  wire [0:0]\MEM_DataBus_Addr_reg[1]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  system_microblaze_0_0__MB_LUT6_2_559 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[1] (\MEM_DataBus_Addr_reg[1] ),
        .\MEM_DataBus_Addr_reg[1]_0 (\MEM_DataBus_Addr_reg[1]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_560 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .\EX_Op2_reg[1] (\EX_Op2_reg[1] ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_500
   (EX_CarryOut,
    \EX_Op2_reg[20] ,
    Q,
    \MEM_DataBus_Addr_reg[20] ,
    \MEM_DataBus_Addr_reg[20]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[20] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[20] ;
  input [0:0]\MEM_DataBus_Addr_reg[20]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[20] ;
  wire [1:0]\MEM_DataBus_Addr_reg[20] ;
  wire [0:0]\MEM_DataBus_Addr_reg[20]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  system_microblaze_0_0__MB_LUT6_2_557 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[20] (\MEM_DataBus_Addr_reg[20] ),
        .\MEM_DataBus_Addr_reg[20]_0 (\MEM_DataBus_Addr_reg[20]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_558 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .\EX_Op2_reg[20] (\EX_Op2_reg[20] ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_501
   (EX_CarryOut,
    \EX_Op2_reg[21] ,
    Q,
    \MEM_DataBus_Addr_reg[21] ,
    \MEM_DataBus_Addr_reg[21]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[21] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[21] ;
  input [0:0]\MEM_DataBus_Addr_reg[21]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[21] ;
  wire [1:0]\MEM_DataBus_Addr_reg[21] ;
  wire [0:0]\MEM_DataBus_Addr_reg[21]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  system_microblaze_0_0__MB_LUT6_2_555 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[21] (\MEM_DataBus_Addr_reg[21] ),
        .\MEM_DataBus_Addr_reg[21]_0 (\MEM_DataBus_Addr_reg[21]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_556 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .\EX_Op2_reg[21] (\EX_Op2_reg[21] ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_502
   (EX_CarryOut,
    \EX_Op2_reg[22] ,
    Q,
    \MEM_DataBus_Addr_reg[22] ,
    \MEM_DataBus_Addr_reg[22]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[22] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[22] ;
  input [0:0]\MEM_DataBus_Addr_reg[22]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[22] ;
  wire LO;
  wire [1:0]\MEM_DataBus_Addr_reg[22] ;
  wire [0:0]\MEM_DataBus_Addr_reg[22]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  system_microblaze_0_0__MB_LUT6_2_553 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[22] (\MEM_DataBus_Addr_reg[22] ),
        .\MEM_DataBus_Addr_reg[22]_0 (\MEM_DataBus_Addr_reg[22]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_554 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .\EX_Op2_reg[22] (\EX_Op2_reg[22] ),
        .LO(LO),
        .S(alu_AddSub),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_503
   (EX_CarryOut,
    \EX_Op2_reg[23] ,
    Q,
    \MEM_DataBus_Addr_reg[23] ,
    \MEM_DataBus_Addr_reg[23]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[23] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[23] ;
  input [0:0]\MEM_DataBus_Addr_reg[23]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[23] ;
  wire [1:0]\MEM_DataBus_Addr_reg[23] ;
  wire [0:0]\MEM_DataBus_Addr_reg[23]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  system_microblaze_0_0__MB_LUT6_2_551 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[23] (\MEM_DataBus_Addr_reg[23] ),
        .\MEM_DataBus_Addr_reg[23]_0 (\MEM_DataBus_Addr_reg[23]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_552 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(EX_CarryOut),
        .\EX_Op2_reg[23] (\EX_Op2_reg[23] ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_504
   (EX_CarryOut,
    \EX_Op2_reg[24] ,
    Q,
    \MEM_DataBus_Addr_reg[24] ,
    \MEM_DataBus_Addr_reg[24]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[24] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[24] ;
  input [0:0]\MEM_DataBus_Addr_reg[24]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[24] ;
  wire [1:0]\MEM_DataBus_Addr_reg[24] ;
  wire [0:0]\MEM_DataBus_Addr_reg[24]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  system_microblaze_0_0__MB_LUT6_2_549 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[24] (\MEM_DataBus_Addr_reg[24] ),
        .\MEM_DataBus_Addr_reg[24]_0 (\MEM_DataBus_Addr_reg[24]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_550 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .\EX_Op2_reg[24] (\EX_Op2_reg[24] ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_505
   (EX_CarryOut,
    \EX_Op2_reg[25] ,
    Q,
    \MEM_DataBus_Addr_reg[25] ,
    \MEM_DataBus_Addr_reg[25]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[25] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[25] ;
  input [0:0]\MEM_DataBus_Addr_reg[25]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[25] ;
  wire [1:0]\MEM_DataBus_Addr_reg[25] ;
  wire [0:0]\MEM_DataBus_Addr_reg[25]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  system_microblaze_0_0__MB_LUT6_2_547 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[25] (\MEM_DataBus_Addr_reg[25] ),
        .\MEM_DataBus_Addr_reg[25]_0 (\MEM_DataBus_Addr_reg[25]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_548 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .\EX_Op2_reg[25] (\EX_Op2_reg[25] ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_506
   (EX_CarryOut,
    \EX_Op2_reg[26] ,
    Q,
    \MEM_DataBus_Addr_reg[26] ,
    \MEM_DataBus_Addr_reg[26]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[26] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[26] ;
  input [0:0]\MEM_DataBus_Addr_reg[26]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[26] ;
  wire LO;
  wire [1:0]\MEM_DataBus_Addr_reg[26] ;
  wire [0:0]\MEM_DataBus_Addr_reg[26]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  system_microblaze_0_0__MB_LUT6_2_545 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[26] (\MEM_DataBus_Addr_reg[26] ),
        .\MEM_DataBus_Addr_reg[26]_0 (\MEM_DataBus_Addr_reg[26]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_546 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .\EX_Op2_reg[26] (\EX_Op2_reg[26] ),
        .LO(LO),
        .S(alu_AddSub),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_507
   (EX_CarryOut,
    \EX_Op2_reg[27] ,
    Q,
    \MEM_DataBus_Addr_reg[27] ,
    \MEM_DataBus_Addr_reg[27]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[27] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[27] ;
  input [0:0]\MEM_DataBus_Addr_reg[27]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[27] ;
  wire [1:0]\MEM_DataBus_Addr_reg[27] ;
  wire [0:0]\MEM_DataBus_Addr_reg[27]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  system_microblaze_0_0__MB_LUT6_2_543 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[27] (\MEM_DataBus_Addr_reg[27] ),
        .\MEM_DataBus_Addr_reg[27]_0 (\MEM_DataBus_Addr_reg[27]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_544 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(EX_CarryOut),
        .\EX_Op2_reg[27] (\EX_Op2_reg[27] ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_508
   (EX_CarryOut,
    \EX_Op2_reg[28] ,
    Q,
    \MEM_DataBus_Addr_reg[28] ,
    \MEM_DataBus_Addr_reg[28]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[28] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[28] ;
  input [0:0]\MEM_DataBus_Addr_reg[28]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[28] ;
  wire [1:0]\MEM_DataBus_Addr_reg[28] ;
  wire [0:0]\MEM_DataBus_Addr_reg[28]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  system_microblaze_0_0__MB_LUT6_2_541 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[28] (\MEM_DataBus_Addr_reg[28] ),
        .\MEM_DataBus_Addr_reg[28]_0 (\MEM_DataBus_Addr_reg[28]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_542 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .\EX_Op2_reg[28] (\EX_Op2_reg[28] ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_509
   (EX_CarryOut,
    \EX_Op2_reg[29] ,
    Q,
    \MEM_DataBus_Addr_reg[29] ,
    \MEM_DataBus_Addr_reg[29]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[29] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[29] ;
  input [0:0]\MEM_DataBus_Addr_reg[29]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[29] ;
  wire [1:0]\MEM_DataBus_Addr_reg[29] ;
  wire [0:0]\MEM_DataBus_Addr_reg[29]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  system_microblaze_0_0__MB_LUT6_2_539 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[29] (\MEM_DataBus_Addr_reg[29] ),
        .\MEM_DataBus_Addr_reg[29]_0 (\MEM_DataBus_Addr_reg[29]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_540 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .\EX_Op2_reg[29] (\EX_Op2_reg[29] ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_510
   (EX_CarryOut,
    \EX_Op2_reg[2] ,
    Q,
    \MEM_DataBus_Addr_reg[2] ,
    \MEM_DataBus_Addr_reg[2]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[2] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[2] ;
  input [0:0]\MEM_DataBus_Addr_reg[2]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[2] ;
  wire LO;
  wire [1:0]\MEM_DataBus_Addr_reg[2] ;
  wire [0:0]\MEM_DataBus_Addr_reg[2]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt_1;
  wire lopt_10;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  system_microblaze_0_0__MB_LUT6_2_537 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[2] (\MEM_DataBus_Addr_reg[2] ),
        .\MEM_DataBus_Addr_reg[2]_0 (\MEM_DataBus_Addr_reg[2]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_538 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .\EX_Op2_reg[2] (\EX_Op2_reg[2] ),
        .LO(LO),
        .S(alu_AddSub),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_511
   (EX_CarryOut,
    ex_databus_addr,
    Q,
    \Using_FPGA.Native_I2 ,
    \Using_FPGA.Native_I2_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]ex_databus_addr;
  input [0:0]Q;
  input [1:0]\Using_FPGA.Native_I2 ;
  input [0:0]\Using_FPGA.Native_I2_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire LO;
  wire [0:0]Q;
  wire [1:0]\Using_FPGA.Native_I2 ;
  wire [0:0]\Using_FPGA.Native_I2_0 ;
  wire alu_AddSub;
  wire [0:0]ex_databus_addr;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  system_microblaze_0_0__MB_LUT6_2_535 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .Q(Q),
        .S(alu_AddSub),
        .\Using_FPGA.Native_I2 (\Using_FPGA.Native_I2 ),
        .\Using_FPGA.Native_I2_0 (\Using_FPGA.Native_I2_0 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_536 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .LO(LO),
        .S(alu_AddSub),
        .ex_databus_addr(ex_databus_addr),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_512
   (EX_CarryOut,
    ex_databus_addr,
    Q,
    \Using_FPGA.Native_I2 ,
    \Using_FPGA.Native_I2_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    EX_CarryIn,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]ex_databus_addr;
  input [0:0]Q;
  input [1:0]\Using_FPGA.Native_I2 ;
  input [0:0]\Using_FPGA.Native_I2_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input EX_CarryIn;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]Q;
  wire [1:0]\Using_FPGA.Native_I2 ;
  wire [0:0]\Using_FPGA.Native_I2_0 ;
  wire alu_AddSub;
  wire [0:0]ex_databus_addr;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryIn_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  system_microblaze_0_0__MB_LUT6_2_533 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .Q(Q),
        .S(alu_AddSub),
        .\Using_FPGA.Native_I2 (\Using_FPGA.Native_I2 ),
        .\Using_FPGA.Native_I2_0 (\Using_FPGA.Native_I2_0 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_534 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryIn(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryIn_UNCONNECTED ),
        .EX_CarryOut(EX_CarryOut),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .ex_databus_addr(ex_databus_addr),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_513
   (EX_CarryOut,
    \EX_Op2_reg[3] ,
    Q,
    \MEM_DataBus_Addr_reg[3] ,
    \MEM_DataBus_Addr_reg[3]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[3] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[3] ;
  input [0:0]\MEM_DataBus_Addr_reg[3]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[3] ;
  wire [1:0]\MEM_DataBus_Addr_reg[3] ;
  wire [0:0]\MEM_DataBus_Addr_reg[3]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  system_microblaze_0_0__MB_LUT6_2_531 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[3] (\MEM_DataBus_Addr_reg[3] ),
        .\MEM_DataBus_Addr_reg[3]_0 (\MEM_DataBus_Addr_reg[3]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_532 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(EX_CarryOut),
        .\EX_Op2_reg[3] (\EX_Op2_reg[3] ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_514
   (EX_CarryOut,
    \EX_Op2_reg[4] ,
    Q,
    \MEM_DataBus_Addr_reg[4] ,
    \MEM_DataBus_Addr_reg[4]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[4] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[4] ;
  input [0:0]\MEM_DataBus_Addr_reg[4]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[4] ;
  wire [1:0]\MEM_DataBus_Addr_reg[4] ;
  wire [0:0]\MEM_DataBus_Addr_reg[4]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  system_microblaze_0_0__MB_LUT6_2_529 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[4] (\MEM_DataBus_Addr_reg[4] ),
        .\MEM_DataBus_Addr_reg[4]_0 (\MEM_DataBus_Addr_reg[4]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_530 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .\EX_Op2_reg[4] (\EX_Op2_reg[4] ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_515
   (EX_CarryOut,
    \EX_Op2_reg[5] ,
    Q,
    \MEM_DataBus_Addr_reg[5] ,
    \MEM_DataBus_Addr_reg[5]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[5] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[5] ;
  input [0:0]\MEM_DataBus_Addr_reg[5]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[5] ;
  wire [1:0]\MEM_DataBus_Addr_reg[5] ;
  wire [0:0]\MEM_DataBus_Addr_reg[5]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  system_microblaze_0_0__MB_LUT6_2_527 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[5] (\MEM_DataBus_Addr_reg[5] ),
        .\MEM_DataBus_Addr_reg[5]_0 (\MEM_DataBus_Addr_reg[5]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_528 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .\EX_Op2_reg[5] (\EX_Op2_reg[5] ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_516
   (EX_CarryOut,
    \EX_Op2_reg[6] ,
    Q,
    \MEM_DataBus_Addr_reg[6] ,
    \MEM_DataBus_Addr_reg[6]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[6] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[6] ;
  input [0:0]\MEM_DataBus_Addr_reg[6]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[6] ;
  wire LO;
  wire [1:0]\MEM_DataBus_Addr_reg[6] ;
  wire [0:0]\MEM_DataBus_Addr_reg[6]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ;

  system_microblaze_0_0__MB_LUT6_2_525 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[6] (\MEM_DataBus_Addr_reg[6] ),
        .\MEM_DataBus_Addr_reg[6]_0 (\MEM_DataBus_Addr_reg[6]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_526 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(op2_is_1),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .\EX_Op2_reg[6] (\EX_Op2_reg[6] ),
        .LO(LO),
        .S(alu_AddSub),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(lopt_2),
        .lopt_3(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_517
   (EX_CarryOut,
    \EX_Op2_reg[7] ,
    Q,
    \MEM_DataBus_Addr_reg[7] ,
    \MEM_DataBus_Addr_reg[7]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[7] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[7] ;
  input [0:0]\MEM_DataBus_Addr_reg[7]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_ALU_Sel_Logic;
  wire EX_CarryOut;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[7] ;
  wire [1:0]\MEM_DataBus_Addr_reg[7] ;
  wire [0:0]\MEM_DataBus_Addr_reg[7]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire lopt;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  system_microblaze_0_0__MB_LUT6_2_523 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[7] (\MEM_DataBus_Addr_reg[7] ),
        .\MEM_DataBus_Addr_reg[7]_0 (\MEM_DataBus_Addr_reg[7]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_524 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(EX_CarryOut),
        .\EX_Op2_reg[7] (\EX_Op2_reg[7] ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(lopt),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_518
   (EX_CarryOut,
    \EX_Op2_reg[8] ,
    Q,
    \MEM_DataBus_Addr_reg[8] ,
    \MEM_DataBus_Addr_reg[8]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[8] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[8] ;
  input [0:0]\MEM_DataBus_Addr_reg[8]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input LO;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[8] ;
  wire [1:0]\MEM_DataBus_Addr_reg[8] ;
  wire [0:0]\MEM_DataBus_Addr_reg[8]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  system_microblaze_0_0__MB_LUT6_2_521 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[8] (\MEM_DataBus_Addr_reg[8] ),
        .\MEM_DataBus_Addr_reg[8]_0 (\MEM_DataBus_Addr_reg[8]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_522 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .\EX_Op2_reg[8] (\EX_Op2_reg[8] ),
        .LO(\NLW_Not_Last_Bit.MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit_519
   (EX_CarryOut,
    \EX_Op2_reg[9] ,
    Q,
    \MEM_DataBus_Addr_reg[9] ,
    \MEM_DataBus_Addr_reg[9]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    EX_CarryIn,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[9] ;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[9] ;
  input [0:0]\MEM_DataBus_Addr_reg[9]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input EX_CarryIn;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]\EX_Op2_reg[9] ;
  wire [1:0]\MEM_DataBus_Addr_reg[9] ;
  wire [0:0]\MEM_DataBus_Addr_reg[9]_0 ;
  wire [0:0]Q;
  wire alu_AddSub;
  wire \^lopt_1 ;
  wire op2_is_1;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryIn_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ;

  assign \^lopt_1  = lopt_3;
  assign lopt_1 = op2_is_1;
  assign lopt_2 = alu_AddSub;
  system_microblaze_0_0__MB_LUT6_2 \Not_Last_Bit.I_ALU_LUT_V5 
       (.DI(op2_is_1),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\MEM_DataBus_Addr_reg[9] (\MEM_DataBus_Addr_reg[9] ),
        .\MEM_DataBus_Addr_reg[9]_0 (\MEM_DataBus_Addr_reg[9]_0 ),
        .Q(Q),
        .S(alu_AddSub));
  system_microblaze_0_0__MB_MUXCY_XORCY_520 \Not_Last_Bit.MUXCY_XOR_I 
       (.DI(\NLW_Not_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .EX_CarryIn(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryIn_UNCONNECTED ),
        .EX_CarryOut(\NLW_Not_Last_Bit.MUXCY_XOR_I_EX_CarryOut_UNCONNECTED ),
        .\EX_Op2_reg[9] (\EX_Op2_reg[9] ),
        .S(\NLW_Not_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(\NLW_Not_Last_Bit.MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ));
endmodule

(* ORIG_REF_NAME = "ALU_Bit" *) 
module system_microblaze_0_0__ALU_Bit__parameterized2
   (\EX_Op2_reg[0] ,
    \EX_Op2_reg[0]_0 ,
    S,
    ex_unsigned_op,
    LO,
    Q,
    \MEM_DataBus_Addr_reg[0] ,
    \Using_FPGA.Native ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    I2,
    I0,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4);
  output \EX_Op2_reg[0] ;
  output [0:0]\EX_Op2_reg[0]_0 ;
  input S;
  input ex_unsigned_op;
  input LO;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[0] ;
  input [0:0]\Using_FPGA.Native ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input I2;
  input I0;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  input lopt_4;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire \EX_Op2_reg[0] ;
  wire [0:0]\EX_Op2_reg[0]_0 ;
  wire I0;
  wire I2;
  wire [1:0]\MEM_DataBus_Addr_reg[0] ;
  wire [0:0]Q;
  wire [0:0]\Using_FPGA.Native ;
  wire alu_AddSub;
  wire alu_AddSub_1;
  wire lopt_1;
  wire \^lopt_2 ;
  wire op2_is_1;
  wire [0:0]\NLW_Last_Bit.I_ALU_LUT_2_MEM_DataBus_Addr_reg[0]_UNCONNECTED ;
  wire \NLW_Last_Bit.MUXCY_XOR_I_CI_UNCONNECTED ;
  wire \NLW_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ;

  assign \^lopt_2  = lopt_4;
  assign lopt_2 = op2_is_1;
  assign lopt_3 = alu_AddSub;
  system_microblaze_0_0__MB_LUT4 \Last_Bit.I_ALU_LUT_2 
       (.I2(I2),
        .\MEM_DataBus_Addr_reg[0] (\NLW_Last_Bit.I_ALU_LUT_2_MEM_DataBus_Addr_reg[0]_UNCONNECTED [0]),
        .Q(Q),
        .S(alu_AddSub),
        .alu_AddSub_1(alu_AddSub_1));
  system_microblaze_0_0__MB_LUT6__parameterized12 \Last_Bit.I_ALU_LUT_V5 
       (.EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .Q(Q),
        .\Using_FPGA.Native_0 (\MEM_DataBus_Addr_reg[0] ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .alu_AddSub_1(alu_AddSub_1));
  system_microblaze_0_0__MB_MULT_AND \Last_Bit.MULT_AND_I 
       (.DI(op2_is_1),
        .I0(I0),
        .\Using_FPGA.Native_I1 (\MEM_DataBus_Addr_reg[0] [1]));
  system_microblaze_0_0__MB_MUXCY_XORCY_581 \Last_Bit.MUXCY_XOR_I 
       (.CI(\NLW_Last_Bit.MUXCY_XOR_I_CI_UNCONNECTED ),
        .DI(\NLW_Last_Bit.MUXCY_XOR_I_DI_UNCONNECTED ),
        .\EX_Op2_reg[0] (\EX_Op2_reg[0] ),
        .\EX_Op2_reg[0]_0 (\EX_Op2_reg[0]_0 ),
        .S(\NLW_Last_Bit.MUXCY_XOR_I_S_UNCONNECTED ),
        .lopt(lopt_1),
        .lopt_1(\^lopt_2 ));
endmodule

(* ORIG_REF_NAME = "Byte_Doublet_Handle_gti" *) 
module system_microblaze_0_0__Byte_Doublet_Handle_gti
   (wb_read_lsb_1_sel,
    wb_read_msb_doublet_sel,
    \MEM_DataBus_Write_Data_reg[0]_0 ,
    \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]_0 ,
    sync_reset,
    mem_reverse_byteorder_reg_0,
    ex_reverse_mem_access,
    Clk,
    \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_0 ,
    D,
    \MEM_DataBus_Byte_Enable_reg[0]_0 ,
    \mem_byte_selects_reg[0]_0 ,
    mem_byte_access,
    mem_doublet_access);
  output [0:0]wb_read_lsb_1_sel;
  output wb_read_msb_doublet_sel;
  output [35:0]\MEM_DataBus_Write_Data_reg[0]_0 ;
  output [1:0]\No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]_0 ;
  input sync_reset;
  input mem_reverse_byteorder_reg_0;
  input ex_reverse_mem_access;
  input Clk;
  input \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_0 ;
  input [31:0]D;
  input [3:0]\MEM_DataBus_Byte_Enable_reg[0]_0 ;
  input [1:0]\mem_byte_selects_reg[0]_0 ;
  input mem_byte_access;
  input mem_doublet_access;

  wire Clk;
  wire [31:0]D;
  wire [35:0]\MEM_DataBus_Write_Data_reg[0]_0 ;
  wire \No_Long.Reverse_Mem_Accesses.wb_read_lsb_1_sel[0]_i_1_n_0 ;
  wire \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel[0]_i_1_n_0 ;
  wire \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel[1]_i_1_n_0 ;
  wire [1:0]\No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]_0 ;
  wire \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_0 ;
  wire ex_reverse_mem_access;
  wire mem_byte_access;
  wire [1:0]\mem_byte_selects_reg[0]_0 ;
  wire \mem_byte_selects_reg_n_0_[1] ;
  wire mem_doublet_access;
  wire mem_reverse_byteorder;
  wire mem_reverse_byteorder_reg_0;
  wire p_0_in;
  wire sync_reset;
  wire [0:0]wb_read_lsb_1_sel;
  wire wb_read_msb_doublet_sel;

  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[0] 
       (.C(Clk),
        .CE(mem_reverse_byteorder_reg_0),
        .D(D[31]),
        .Q(\MEM_DataBus_Write_Data_reg[0]_0 [35]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[1] 
       (.C(Clk),
        .CE(mem_reverse_byteorder_reg_0),
        .D(D[30]),
        .Q(\MEM_DataBus_Write_Data_reg[0]_0 [34]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[21] 
       (.C(Clk),
        .CE(mem_reverse_byteorder_reg_0),
        .D(D[10]),
        .Q(\MEM_DataBus_Write_Data_reg[0]_0 [14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[22] 
       (.C(Clk),
        .CE(mem_reverse_byteorder_reg_0),
        .D(D[9]),
        .Q(\MEM_DataBus_Write_Data_reg[0]_0 [13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[23] 
       (.C(Clk),
        .CE(mem_reverse_byteorder_reg_0),
        .D(D[8]),
        .Q(\MEM_DataBus_Write_Data_reg[0]_0 [12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[24] 
       (.C(Clk),
        .CE(mem_reverse_byteorder_reg_0),
        .D(D[7]),
        .Q(\MEM_DataBus_Write_Data_reg[0]_0 [11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[25] 
       (.C(Clk),
        .CE(mem_reverse_byteorder_reg_0),
        .D(D[6]),
        .Q(\MEM_DataBus_Write_Data_reg[0]_0 [10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[26] 
       (.C(Clk),
        .CE(mem_reverse_byteorder_reg_0),
        .D(D[5]),
        .Q(\MEM_DataBus_Write_Data_reg[0]_0 [9]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[27] 
       (.C(Clk),
        .CE(mem_reverse_byteorder_reg_0),
        .D(D[4]),
        .Q(\MEM_DataBus_Write_Data_reg[0]_0 [8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[28] 
       (.C(Clk),
        .CE(mem_reverse_byteorder_reg_0),
        .D(D[3]),
        .Q(\MEM_DataBus_Write_Data_reg[0]_0 [7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[29] 
       (.C(Clk),
        .CE(mem_reverse_byteorder_reg_0),
        .D(D[2]),
        .Q(\MEM_DataBus_Write_Data_reg[0]_0 [6]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[30] 
       (.C(Clk),
        .CE(mem_reverse_byteorder_reg_0),
        .D(D[1]),
        .Q(\MEM_DataBus_Write_Data_reg[0]_0 [5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Write_Data_reg[31] 
       (.C(Clk),
        .CE(mem_reverse_byteorder_reg_0),
        .D(D[0]),
        .Q(\MEM_DataBus_Write_Data_reg[0]_0 [4]),
        .R(sync_reset));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \No_Long.Reverse_Mem_Accesses.wb_read_lsb_1_sel[0]_i_1 
       (.I0(p_0_in),
        .I1(mem_doublet_access),
        .I2(mem_reverse_byteorder),
        .O(\No_Long.Reverse_Mem_Accesses.wb_read_lsb_1_sel[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \No_Long.Reverse_Mem_Accesses.wb_read_lsb_1_sel_reg[0] 
       (.C(Clk),
        .CE(\No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_0 ),
        .D(\No_Long.Reverse_Mem_Accesses.wb_read_lsb_1_sel[0]_i_1_n_0 ),
        .Q(wb_read_lsb_1_sel),
        .R(sync_reset));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'hC8CD)) 
    \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel[0]_i_1 
       (.I0(mem_byte_access),
        .I1(p_0_in),
        .I2(mem_doublet_access),
        .I3(mem_reverse_byteorder),
        .O(\No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h8B)) 
    \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel[1]_i_1 
       (.I0(\mem_byte_selects_reg_n_0_[1] ),
        .I1(mem_byte_access),
        .I2(mem_reverse_byteorder),
        .O(\No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0] 
       (.C(Clk),
        .CE(\No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_0 ),
        .D(\No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel[0]_i_1_n_0 ),
        .Q(\No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]_0 [1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[1] 
       (.C(Clk),
        .CE(\No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_0 ),
        .D(\No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel[1]_i_1_n_0 ),
        .Q(\No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]_0 [0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg 
       (.C(Clk),
        .CE(\No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_0 ),
        .D(mem_reverse_byteorder),
        .Q(wb_read_msb_doublet_sel),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_byte_selects_reg[0] 
       (.C(Clk),
        .CE(mem_reverse_byteorder_reg_0),
        .D(\mem_byte_selects_reg[0]_0 [1]),
        .Q(p_0_in),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \mem_byte_selects_reg[1] 
       (.C(Clk),
        .CE(mem_reverse_byteorder_reg_0),
        .D(\mem_byte_selects_reg[0]_0 [0]),
        .Q(\mem_byte_selects_reg_n_0_[1] ),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    mem_reverse_byteorder_reg
       (.C(Clk),
        .CE(mem_reverse_byteorder_reg_0),
        .D(ex_reverse_mem_access),
        .Q(mem_reverse_byteorder),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "DAXI_interface" *) 
module system_microblaze_0_0__DAXI_interface
   (active_access_d1,
    active_access,
    D,
    MEM_DataBus_Ready,
    wb_databus_steered_read_data,
    \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg ,
    \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_0 ,
    \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_1 ,
    \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_2 ,
    \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_3 ,
    \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_4 ,
    \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_5 ,
    \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_6 ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[23] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[22] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[21] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[20] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[19] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[18] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[17] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[16] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[31] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[30] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[29] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[28] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[27] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[26] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[25] ,
    \Use_DLMB.wb_dlmb_valid_read_data_reg[24] ,
    sync_reset,
    Clk,
    M_AXI_DP_ARVALID_i_reg_0,
    M_AXI_DP_WVALID_i_reg_0,
    M_AXI_DP_AWVALID_i_reg_0,
    active_access_reg_0,
    DReady,
    \LOCKSTEP_Out_reg[3031] ,
    wb_read_msb_doublet_sel,
    wb_read_lsb_1_sel,
    Q,
    M_AXI_DP_RVALID,
    M_AXI_DP_BVALID,
    M_AXI_DP_RDATA);
  output active_access_d1;
  output active_access;
  output [2:0]D;
  output MEM_DataBus_Ready;
  output [7:0]wb_databus_steered_read_data;
  output \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg ;
  output \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_0 ;
  output \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_1 ;
  output \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_2 ;
  output \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_3 ;
  output \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_4 ;
  output \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_5 ;
  output \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_6 ;
  output \Use_DLMB.wb_dlmb_valid_read_data_reg[23] ;
  output \Use_DLMB.wb_dlmb_valid_read_data_reg[22] ;
  output \Use_DLMB.wb_dlmb_valid_read_data_reg[21] ;
  output \Use_DLMB.wb_dlmb_valid_read_data_reg[20] ;
  output \Use_DLMB.wb_dlmb_valid_read_data_reg[19] ;
  output \Use_DLMB.wb_dlmb_valid_read_data_reg[18] ;
  output \Use_DLMB.wb_dlmb_valid_read_data_reg[17] ;
  output \Use_DLMB.wb_dlmb_valid_read_data_reg[16] ;
  output \Use_DLMB.wb_dlmb_valid_read_data_reg[31] ;
  output \Use_DLMB.wb_dlmb_valid_read_data_reg[30] ;
  output \Use_DLMB.wb_dlmb_valid_read_data_reg[29] ;
  output \Use_DLMB.wb_dlmb_valid_read_data_reg[28] ;
  output \Use_DLMB.wb_dlmb_valid_read_data_reg[27] ;
  output \Use_DLMB.wb_dlmb_valid_read_data_reg[26] ;
  output \Use_DLMB.wb_dlmb_valid_read_data_reg[25] ;
  output \Use_DLMB.wb_dlmb_valid_read_data_reg[24] ;
  input sync_reset;
  input Clk;
  input M_AXI_DP_ARVALID_i_reg_0;
  input M_AXI_DP_WVALID_i_reg_0;
  input M_AXI_DP_AWVALID_i_reg_0;
  input active_access_reg_0;
  input DReady;
  input [1:0]\LOCKSTEP_Out_reg[3031] ;
  input wb_read_msb_doublet_sel;
  input [0:0]wb_read_lsb_1_sel;
  input [31:0]Q;
  input M_AXI_DP_RVALID;
  input M_AXI_DP_BVALID;
  input [31:0]M_AXI_DP_RDATA;

  wire Clk;
  wire [2:0]D;
  wire DReady;
  wire [1:0]\LOCKSTEP_Out_reg[3031] ;
  wire MEM_DAXI_Data_Strobe;
  wire MEM_DataBus_Ready;
  wire M_AXI_DP_ARVALID_i_reg_0;
  wire M_AXI_DP_AWVALID_i_reg_0;
  wire M_AXI_DP_BVALID;
  wire [31:0]M_AXI_DP_RDATA;
  wire M_AXI_DP_RVALID;
  wire M_AXI_DP_WVALID_i_reg_0;
  wire \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg ;
  wire \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_0 ;
  wire \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_1 ;
  wire \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_2 ;
  wire \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_3 ;
  wire \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_4 ;
  wire \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_5 ;
  wire \No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_6 ;
  wire [31:0]Q;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[16] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[17] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[18] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[19] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[20] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[21] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[22] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[23] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[24] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[25] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[26] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[27] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[28] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[29] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[30] ;
  wire \Use_DLMB.wb_dlmb_valid_read_data_reg[31] ;
  wire active_access;
  wire active_access_d1;
  wire active_access_reg_0;
  wire mem_access_completed0;
  wire sync_reset;
  wire [0:31]wb_databus_read_data;
  wire [7:0]wb_databus_steered_read_data;
  wire wb_dext_Data_Strobe;
  wire [0:31]wb_dext_read_data;
  wire [0:0]wb_read_lsb_1_sel;
  wire wb_read_msb_doublet_sel;

  FDRE #(
    .INIT(1'b0)) 
    M_AXI_DP_ARVALID_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(M_AXI_DP_ARVALID_i_reg_0),
        .Q(D[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    M_AXI_DP_AWVALID_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(M_AXI_DP_AWVALID_i_reg_0),
        .Q(D[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    M_AXI_DP_WVALID_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(M_AXI_DP_WVALID_i_reg_0),
        .Q(D[1]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[0]_INST_0_i_1 
       (.I0(Q[7]),
        .I1(wb_dext_read_data[24]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[31]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[0]),
        .O(\Use_DLMB.wb_dlmb_valid_read_data_reg[24] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[10]_INST_0_i_1 
       (.I0(Q[13]),
        .I1(wb_dext_read_data[18]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[21]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[10]),
        .O(\Use_DLMB.wb_dlmb_valid_read_data_reg[18] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[11]_INST_0_i_1 
       (.I0(Q[12]),
        .I1(wb_dext_read_data[19]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[20]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[11]),
        .O(\Use_DLMB.wb_dlmb_valid_read_data_reg[19] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[12]_INST_0_i_1 
       (.I0(Q[11]),
        .I1(wb_dext_read_data[20]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[19]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[12]),
        .O(\Use_DLMB.wb_dlmb_valid_read_data_reg[20] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[13]_INST_0_i_1 
       (.I0(Q[10]),
        .I1(wb_dext_read_data[21]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[18]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[13]),
        .O(\Use_DLMB.wb_dlmb_valid_read_data_reg[21] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[14]_INST_0_i_1 
       (.I0(Q[9]),
        .I1(wb_dext_read_data[22]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[17]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[14]),
        .O(\Use_DLMB.wb_dlmb_valid_read_data_reg[22] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[15]_INST_0_i_1 
       (.I0(Q[8]),
        .I1(wb_dext_read_data[23]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[16]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[15]),
        .O(\Use_DLMB.wb_dlmb_valid_read_data_reg[23] ));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[16]_INST_0_i_1 
       (.I0(wb_databus_read_data[8]),
        .I1(wb_databus_read_data[0]),
        .I2(wb_databus_read_data[24]),
        .I3(wb_read_msb_doublet_sel),
        .I4(wb_read_lsb_1_sel),
        .I5(wb_databus_read_data[16]),
        .O(\No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[16]_INST_0_i_2 
       (.I0(Q[23]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[8]),
        .O(wb_databus_read_data[8]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[16]_INST_0_i_3 
       (.I0(Q[31]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[0]),
        .O(wb_databus_read_data[0]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[16]_INST_0_i_4 
       (.I0(Q[7]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[24]),
        .O(wb_databus_read_data[24]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[16]_INST_0_i_5 
       (.I0(Q[15]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[16]),
        .O(wb_databus_read_data[16]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[17]_INST_0_i_1 
       (.I0(wb_databus_read_data[9]),
        .I1(wb_databus_read_data[1]),
        .I2(wb_databus_read_data[25]),
        .I3(wb_read_msb_doublet_sel),
        .I4(wb_read_lsb_1_sel),
        .I5(wb_databus_read_data[17]),
        .O(\No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_0 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[17]_INST_0_i_2 
       (.I0(Q[22]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[9]),
        .O(wb_databus_read_data[9]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[17]_INST_0_i_3 
       (.I0(Q[30]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[1]),
        .O(wb_databus_read_data[1]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[17]_INST_0_i_4 
       (.I0(Q[6]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[25]),
        .O(wb_databus_read_data[25]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[17]_INST_0_i_5 
       (.I0(Q[14]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[17]),
        .O(wb_databus_read_data[17]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[18]_INST_0_i_1 
       (.I0(wb_databus_read_data[10]),
        .I1(wb_databus_read_data[2]),
        .I2(wb_databus_read_data[26]),
        .I3(wb_read_msb_doublet_sel),
        .I4(wb_read_lsb_1_sel),
        .I5(wb_databus_read_data[18]),
        .O(\No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_1 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[18]_INST_0_i_2 
       (.I0(Q[21]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[10]),
        .O(wb_databus_read_data[10]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[18]_INST_0_i_3 
       (.I0(Q[29]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[2]),
        .O(wb_databus_read_data[2]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[18]_INST_0_i_4 
       (.I0(Q[5]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[26]),
        .O(wb_databus_read_data[26]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[18]_INST_0_i_5 
       (.I0(Q[13]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[18]),
        .O(wb_databus_read_data[18]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[19]_INST_0_i_1 
       (.I0(wb_databus_read_data[11]),
        .I1(wb_databus_read_data[3]),
        .I2(wb_databus_read_data[27]),
        .I3(wb_read_msb_doublet_sel),
        .I4(wb_read_lsb_1_sel),
        .I5(wb_databus_read_data[19]),
        .O(\No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_2 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[19]_INST_0_i_2 
       (.I0(Q[20]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[11]),
        .O(wb_databus_read_data[11]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[19]_INST_0_i_3 
       (.I0(Q[28]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[3]),
        .O(wb_databus_read_data[3]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[19]_INST_0_i_4 
       (.I0(Q[4]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[27]),
        .O(wb_databus_read_data[27]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[19]_INST_0_i_5 
       (.I0(Q[12]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[19]),
        .O(wb_databus_read_data[19]));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[1]_INST_0_i_1 
       (.I0(Q[6]),
        .I1(wb_dext_read_data[25]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[30]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[1]),
        .O(\Use_DLMB.wb_dlmb_valid_read_data_reg[25] ));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[20]_INST_0_i_1 
       (.I0(wb_databus_read_data[12]),
        .I1(wb_databus_read_data[4]),
        .I2(wb_databus_read_data[28]),
        .I3(wb_read_msb_doublet_sel),
        .I4(wb_read_lsb_1_sel),
        .I5(wb_databus_read_data[20]),
        .O(\No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_3 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[20]_INST_0_i_2 
       (.I0(Q[19]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[12]),
        .O(wb_databus_read_data[12]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[20]_INST_0_i_3 
       (.I0(Q[27]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[4]),
        .O(wb_databus_read_data[4]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[20]_INST_0_i_4 
       (.I0(Q[3]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[28]),
        .O(wb_databus_read_data[28]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[20]_INST_0_i_5 
       (.I0(Q[11]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[20]),
        .O(wb_databus_read_data[20]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[21]_INST_0_i_1 
       (.I0(wb_databus_read_data[13]),
        .I1(wb_databus_read_data[5]),
        .I2(wb_databus_read_data[29]),
        .I3(wb_read_msb_doublet_sel),
        .I4(wb_read_lsb_1_sel),
        .I5(wb_databus_read_data[21]),
        .O(\No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_4 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[21]_INST_0_i_2 
       (.I0(Q[18]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[13]),
        .O(wb_databus_read_data[13]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[21]_INST_0_i_3 
       (.I0(Q[26]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[5]),
        .O(wb_databus_read_data[5]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[21]_INST_0_i_4 
       (.I0(Q[2]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[29]),
        .O(wb_databus_read_data[29]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[21]_INST_0_i_5 
       (.I0(Q[10]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[21]),
        .O(wb_databus_read_data[21]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[22]_INST_0_i_1 
       (.I0(wb_databus_read_data[14]),
        .I1(wb_databus_read_data[6]),
        .I2(wb_databus_read_data[30]),
        .I3(wb_read_msb_doublet_sel),
        .I4(wb_read_lsb_1_sel),
        .I5(wb_databus_read_data[22]),
        .O(\No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_5 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[22]_INST_0_i_2 
       (.I0(Q[17]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[14]),
        .O(wb_databus_read_data[14]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[22]_INST_0_i_3 
       (.I0(Q[25]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[6]),
        .O(wb_databus_read_data[6]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[22]_INST_0_i_4 
       (.I0(Q[1]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[30]),
        .O(wb_databus_read_data[30]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[22]_INST_0_i_5 
       (.I0(Q[9]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[22]),
        .O(wb_databus_read_data[22]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[23]_INST_0_i_1 
       (.I0(wb_databus_read_data[15]),
        .I1(wb_databus_read_data[7]),
        .I2(wb_databus_read_data[31]),
        .I3(wb_read_msb_doublet_sel),
        .I4(wb_read_lsb_1_sel),
        .I5(wb_databus_read_data[23]),
        .O(\No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_6 ));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[23]_INST_0_i_2 
       (.I0(Q[16]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[15]),
        .O(wb_databus_read_data[15]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[23]_INST_0_i_3 
       (.I0(Q[24]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[7]),
        .O(wb_databus_read_data[7]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[23]_INST_0_i_4 
       (.I0(Q[0]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[31]),
        .O(wb_databus_read_data[31]));
  LUT3 #(
    .INIT(8'hEA)) 
    \Trace_New_Reg_Value[23]_INST_0_i_5 
       (.I0(Q[8]),
        .I1(wb_dext_Data_Strobe),
        .I2(wb_dext_read_data[23]),
        .O(wb_databus_read_data[23]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[24]_INST_0_i_1 
       (.I0(wb_databus_read_data[8]),
        .I1(wb_databus_read_data[0]),
        .I2(wb_databus_read_data[24]),
        .I3(\LOCKSTEP_Out_reg[3031] [0]),
        .I4(\LOCKSTEP_Out_reg[3031] [1]),
        .I5(wb_databus_read_data[16]),
        .O(wb_databus_steered_read_data[7]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[25]_INST_0_i_1 
       (.I0(wb_databus_read_data[9]),
        .I1(wb_databus_read_data[1]),
        .I2(wb_databus_read_data[25]),
        .I3(\LOCKSTEP_Out_reg[3031] [0]),
        .I4(\LOCKSTEP_Out_reg[3031] [1]),
        .I5(wb_databus_read_data[17]),
        .O(wb_databus_steered_read_data[6]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[26]_INST_0_i_1 
       (.I0(wb_databus_read_data[10]),
        .I1(wb_databus_read_data[2]),
        .I2(wb_databus_read_data[26]),
        .I3(\LOCKSTEP_Out_reg[3031] [0]),
        .I4(\LOCKSTEP_Out_reg[3031] [1]),
        .I5(wb_databus_read_data[18]),
        .O(wb_databus_steered_read_data[5]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[27]_INST_0_i_1 
       (.I0(wb_databus_read_data[11]),
        .I1(wb_databus_read_data[3]),
        .I2(wb_databus_read_data[27]),
        .I3(\LOCKSTEP_Out_reg[3031] [0]),
        .I4(\LOCKSTEP_Out_reg[3031] [1]),
        .I5(wb_databus_read_data[19]),
        .O(wb_databus_steered_read_data[4]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[28]_INST_0_i_1 
       (.I0(wb_databus_read_data[12]),
        .I1(wb_databus_read_data[4]),
        .I2(wb_databus_read_data[28]),
        .I3(\LOCKSTEP_Out_reg[3031] [0]),
        .I4(\LOCKSTEP_Out_reg[3031] [1]),
        .I5(wb_databus_read_data[20]),
        .O(wb_databus_steered_read_data[3]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[29]_INST_0_i_1 
       (.I0(wb_databus_read_data[13]),
        .I1(wb_databus_read_data[5]),
        .I2(wb_databus_read_data[29]),
        .I3(\LOCKSTEP_Out_reg[3031] [0]),
        .I4(\LOCKSTEP_Out_reg[3031] [1]),
        .I5(wb_databus_read_data[21]),
        .O(wb_databus_steered_read_data[2]));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[2]_INST_0_i_1 
       (.I0(Q[5]),
        .I1(wb_dext_read_data[26]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[29]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[2]),
        .O(\Use_DLMB.wb_dlmb_valid_read_data_reg[26] ));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[30]_INST_0_i_1 
       (.I0(wb_databus_read_data[14]),
        .I1(wb_databus_read_data[6]),
        .I2(wb_databus_read_data[30]),
        .I3(\LOCKSTEP_Out_reg[3031] [0]),
        .I4(\LOCKSTEP_Out_reg[3031] [1]),
        .I5(wb_databus_read_data[22]),
        .O(wb_databus_steered_read_data[1]));
  LUT6 #(
    .INIT(64'hF0FFAACCF000AACC)) 
    \Trace_New_Reg_Value[31]_INST_0_i_1 
       (.I0(wb_databus_read_data[15]),
        .I1(wb_databus_read_data[7]),
        .I2(wb_databus_read_data[31]),
        .I3(\LOCKSTEP_Out_reg[3031] [0]),
        .I4(\LOCKSTEP_Out_reg[3031] [1]),
        .I5(wb_databus_read_data[23]),
        .O(wb_databus_steered_read_data[0]));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[3]_INST_0_i_1 
       (.I0(Q[4]),
        .I1(wb_dext_read_data[27]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[28]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[3]),
        .O(\Use_DLMB.wb_dlmb_valid_read_data_reg[27] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[4]_INST_0_i_1 
       (.I0(Q[3]),
        .I1(wb_dext_read_data[28]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[27]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[4]),
        .O(\Use_DLMB.wb_dlmb_valid_read_data_reg[28] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[5]_INST_0_i_1 
       (.I0(Q[2]),
        .I1(wb_dext_read_data[29]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[26]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[5]),
        .O(\Use_DLMB.wb_dlmb_valid_read_data_reg[29] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[6]_INST_0_i_1 
       (.I0(Q[1]),
        .I1(wb_dext_read_data[30]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[25]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[6]),
        .O(\Use_DLMB.wb_dlmb_valid_read_data_reg[30] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[7]_INST_0_i_1 
       (.I0(Q[0]),
        .I1(wb_dext_read_data[31]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[24]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[7]),
        .O(\Use_DLMB.wb_dlmb_valid_read_data_reg[31] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[8]_INST_0_i_1 
       (.I0(Q[15]),
        .I1(wb_dext_read_data[16]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[23]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[8]),
        .O(\Use_DLMB.wb_dlmb_valid_read_data_reg[16] ));
  LUT6 #(
    .INIT(64'hEFEFAFA0EFE0AFA0)) 
    \Trace_New_Reg_Value[9]_INST_0_i_1 
       (.I0(Q[14]),
        .I1(wb_dext_read_data[17]),
        .I2(wb_read_msb_doublet_sel),
        .I3(Q[22]),
        .I4(wb_dext_Data_Strobe),
        .I5(wb_dext_read_data[9]),
        .O(\Use_DLMB.wb_dlmb_valid_read_data_reg[17] ));
  LUT2 #(
    .INIT(4'hE)) 
    \Using_FPGA.Native_i_2__25 
       (.I0(DReady),
        .I1(MEM_DAXI_Data_Strobe),
        .O(MEM_DataBus_Ready));
  FDRE #(
    .INIT(1'b0)) 
    WB_DAXI_Data_Strobe_reg
       (.C(Clk),
        .CE(1'b1),
        .D(MEM_DAXI_Data_Strobe),
        .Q(wb_dext_Data_Strobe),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[0] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[31]),
        .Q(wb_dext_read_data[0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[10] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[21]),
        .Q(wb_dext_read_data[10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[11] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[20]),
        .Q(wb_dext_read_data[11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[12] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[19]),
        .Q(wb_dext_read_data[12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[13] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[18]),
        .Q(wb_dext_read_data[13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[14] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[17]),
        .Q(wb_dext_read_data[14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[15] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[16]),
        .Q(wb_dext_read_data[15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[16] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[15]),
        .Q(wb_dext_read_data[16]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[17] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[14]),
        .Q(wb_dext_read_data[17]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[18] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[13]),
        .Q(wb_dext_read_data[18]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[19] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[12]),
        .Q(wb_dext_read_data[19]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[1] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[30]),
        .Q(wb_dext_read_data[1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[20] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[11]),
        .Q(wb_dext_read_data[20]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[21] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[10]),
        .Q(wb_dext_read_data[21]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[22] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[9]),
        .Q(wb_dext_read_data[22]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[23] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[8]),
        .Q(wb_dext_read_data[23]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[24] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[7]),
        .Q(wb_dext_read_data[24]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[25] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[6]),
        .Q(wb_dext_read_data[25]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[26] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[5]),
        .Q(wb_dext_read_data[26]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[27] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[4]),
        .Q(wb_dext_read_data[27]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[28] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[3]),
        .Q(wb_dext_read_data[28]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[29] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[2]),
        .Q(wb_dext_read_data[29]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[2] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[29]),
        .Q(wb_dext_read_data[2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[30] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[1]),
        .Q(wb_dext_read_data[30]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[31] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[0]),
        .Q(wb_dext_read_data[31]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[3] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[28]),
        .Q(wb_dext_read_data[3]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[4] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[27]),
        .Q(wb_dext_read_data[4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[5] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[26]),
        .Q(wb_dext_read_data[5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[6] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[25]),
        .Q(wb_dext_read_data[6]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[7] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[24]),
        .Q(wb_dext_read_data[7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[8] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[23]),
        .Q(wb_dext_read_data[8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \WB_DAXI_Read_Data_reg[9] 
       (.C(Clk),
        .CE(M_AXI_DP_RVALID),
        .D(M_AXI_DP_RDATA[22]),
        .Q(wb_dext_read_data[9]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    active_access_d1_reg
       (.C(Clk),
        .CE(1'b1),
        .D(active_access),
        .Q(active_access_d1),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    active_access_reg
       (.C(Clk),
        .CE(1'b1),
        .D(active_access_reg_0),
        .Q(active_access),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hE0)) 
    mem_access_completed_i_1
       (.I0(M_AXI_DP_RVALID),
        .I1(M_AXI_DP_BVALID),
        .I2(active_access),
        .O(mem_access_completed0));
  FDRE #(
    .INIT(1'b0)) 
    mem_access_completed_reg
       (.C(Clk),
        .CE(1'b1),
        .D(mem_access_completed0),
        .Q(MEM_DAXI_Data_Strobe),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "Data_Flow_Logic" *) 
module system_microblaze_0_0__Data_Flow_Logic
   (\Using_FPGA.Native ,
    MEM_Fwd,
    Q,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr,
    SR,
    \WB_MEM_Result_reg[31]_0 ,
    \WB_MEM_Result_reg[0]_0 );
  output [3:0]\Using_FPGA.Native ;
  output [27:0]MEM_Fwd;
  output [31:0]Q;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:31]EX_Fwd;
  input Clk;
  input mem_sel_msr;
  input [0:0]SR;
  input \WB_MEM_Result_reg[31]_0 ;
  input [3:0]\WB_MEM_Result_reg[0]_0 ;

  wire Clk;
  wire [0:31]EX_Fwd;
  wire [27:0]MEM_Fwd;
  wire [31:0]Q;
  wire R;
  wire [0:0]SR;
  wire [3:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [3:0]\WB_MEM_Result_reg[0]_0 ;
  wire \WB_MEM_Result_reg[31]_0 ;
  wire mem_sel_msr;

  system_microblaze_0_0__MB_FDRE_457 \Gen_Bits[0].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[0]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native [3]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ));
  system_microblaze_0_0__MB_FDRE_458 \Gen_Bits[10].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[10]),
        .MEM_Fwd(MEM_Fwd[18]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_459 \Gen_Bits[11].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[11]),
        .MEM_Fwd(MEM_Fwd[17]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_460 \Gen_Bits[12].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[12]),
        .MEM_Fwd(MEM_Fwd[16]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_461 \Gen_Bits[13].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[13]),
        .MEM_Fwd(MEM_Fwd[15]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_462 \Gen_Bits[14].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[14]),
        .MEM_Fwd(MEM_Fwd[14]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_463 \Gen_Bits[15].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[15]),
        .MEM_Fwd(MEM_Fwd[13]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_464 \Gen_Bits[16].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[16]),
        .MEM_Fwd(MEM_Fwd[12]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_465 \Gen_Bits[17].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[17]),
        .MEM_Fwd(MEM_Fwd[11]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_466 \Gen_Bits[18].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[18]),
        .MEM_Fwd(MEM_Fwd[10]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_467 \Gen_Bits[19].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[19]),
        .MEM_Fwd(MEM_Fwd[9]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_468 \Gen_Bits[1].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[1]),
        .MEM_Fwd(MEM_Fwd[27]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_469 \Gen_Bits[20].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[20]),
        .MEM_Fwd(MEM_Fwd[8]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_470 \Gen_Bits[21].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[21]),
        .MEM_Fwd(MEM_Fwd[7]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_471 \Gen_Bits[22].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[22]),
        .MEM_Fwd(MEM_Fwd[6]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_472 \Gen_Bits[23].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[23]),
        .MEM_Fwd(MEM_Fwd[5]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_473 \Gen_Bits[24].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[24]),
        .MEM_Fwd(MEM_Fwd[4]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_474 \Gen_Bits[25].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[25]),
        .MEM_Fwd(MEM_Fwd[3]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_475 \Gen_Bits[26].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[26]),
        .MEM_Fwd(MEM_Fwd[2]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_476 \Gen_Bits[27].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[27]),
        .MEM_Fwd(MEM_Fwd[1]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_477 \Gen_Bits[28].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[28]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native [2]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ));
  system_microblaze_0_0__MB_FDRE_478 \Gen_Bits[29].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[29]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native [1]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ));
  system_microblaze_0_0__MB_FDRE_479 \Gen_Bits[2].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[2]),
        .MEM_Fwd(MEM_Fwd[26]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_480 \Gen_Bits[30].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[30]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native [0]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ));
  system_microblaze_0_0__MB_FDRE_481 \Gen_Bits[31].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[31]),
        .MEM_Fwd(MEM_Fwd[0]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_482 \Gen_Bits[3].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[3]),
        .MEM_Fwd(MEM_Fwd[25]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_483 \Gen_Bits[4].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[4]),
        .MEM_Fwd(MEM_Fwd[24]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_484 \Gen_Bits[5].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[5]),
        .MEM_Fwd(MEM_Fwd[23]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_485 \Gen_Bits[6].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[6]),
        .MEM_Fwd(MEM_Fwd[22]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_486 \Gen_Bits[7].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[7]),
        .MEM_Fwd(MEM_Fwd[21]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_487 \Gen_Bits[8].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[8]),
        .MEM_Fwd(MEM_Fwd[20]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__MB_FDRE_488 \Gen_Bits[9].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd[9]),
        .MEM_Fwd(MEM_Fwd[19]),
        .R(R),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .mem_sel_msr(mem_sel_msr));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[0] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(\WB_MEM_Result_reg[0]_0 [3]),
        .Q(Q[31]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[10] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[18]),
        .Q(Q[21]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[11] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[17]),
        .Q(Q[20]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[12] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[16]),
        .Q(Q[19]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[13] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[15]),
        .Q(Q[18]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[14] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[14]),
        .Q(Q[17]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[15] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[13]),
        .Q(Q[16]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[16] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[12]),
        .Q(Q[15]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[17] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[11]),
        .Q(Q[14]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[18] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[10]),
        .Q(Q[13]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[19] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[9]),
        .Q(Q[12]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[1] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[27]),
        .Q(Q[30]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[20] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[8]),
        .Q(Q[11]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[21] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[7]),
        .Q(Q[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[22] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[6]),
        .Q(Q[9]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[23] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[5]),
        .Q(Q[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[24] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[4]),
        .Q(Q[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[25] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[3]),
        .Q(Q[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[26] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[2]),
        .Q(Q[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[27] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[1]),
        .Q(Q[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[28] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(\WB_MEM_Result_reg[0]_0 [2]),
        .Q(Q[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[29] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(\WB_MEM_Result_reg[0]_0 [1]),
        .Q(Q[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[2] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[26]),
        .Q(Q[29]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[30] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(\WB_MEM_Result_reg[0]_0 [0]),
        .Q(Q[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[31] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[3] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[25]),
        .Q(Q[28]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[4] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[24]),
        .Q(Q[27]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[5] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[23]),
        .Q(Q[26]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[6] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[22]),
        .Q(Q[25]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[7] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[21]),
        .Q(Q[24]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[8] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[20]),
        .Q(Q[23]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \WB_MEM_Result_reg[9] 
       (.C(Clk),
        .CE(\WB_MEM_Result_reg[31]_0 ),
        .D(MEM_Fwd[19]),
        .Q(Q[22]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "Data_Flow_gti" *) 
module system_microblaze_0_0__Data_Flow_gti
   (\EX_Op1_reg[0] ,
    out,
    \EX_Op1_reg[24] ,
    ex_op1_zero,
    wb_read_lsb_1_sel,
    wb_read_msb_doublet_sel,
    ex_MSR,
    DI,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \Using_FPGA.Native_13 ,
    \Using_FPGA.Native_14 ,
    \Using_FPGA.Native_15 ,
    \Using_FPGA.Native_16 ,
    \Using_FPGA.Native_17 ,
    \Using_FPGA.Native_18 ,
    \Using_FPGA.Native_19 ,
    \Using_FPGA.Native_20 ,
    \Using_FPGA.Native_21 ,
    \Using_FPGA.Native_22 ,
    \Using_FPGA.Native_23 ,
    \Using_FPGA.Native_24 ,
    \Using_FPGA.Native_25 ,
    \Using_FPGA.Native_26 ,
    \Using_FPGA.Native_27 ,
    \Using_FPGA.Native_28 ,
    \EX_Op2_reg[0] ,
    \Using_FPGA.Native_29 ,
    \EX_Branch_CMP_Op1_reg[0] ,
    \EX_Op1_reg[28] ,
    \EX_Op2_reg[31] ,
    wb_gpr_write_dbg_reg,
    \WB_MEM_Result_reg[0] ,
    swap_result,
    swap_result_reg,
    \EX_Op3_reg[0] ,
    MEM_Fwd,
    \Using_FPGA.Native_30 ,
    GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    \imm_reg_reg[0] ,
    \No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0] ,
    ex_databus_addr,
    of_op1_sel_spr,
    D,
    I1,
    \EX_Op1_reg[1] ,
    \EX_Op1_reg[2] ,
    \EX_Op1_reg[3] ,
    \EX_Op1_reg[4] ,
    \EX_Op1_reg[5] ,
    \EX_Op1_reg[6] ,
    \EX_Op1_reg[7] ,
    \EX_Op1_reg[8] ,
    \EX_Op1_reg[9] ,
    \EX_Op1_reg[10] ,
    \EX_Op1_reg[11] ,
    \EX_Op1_reg[12] ,
    \EX_Op1_reg[13] ,
    \EX_Op1_reg[14] ,
    \EX_Op1_reg[15] ,
    \EX_Op1_reg[16] ,
    \EX_Op1_reg[17] ,
    \EX_Op1_reg[18] ,
    \EX_Op1_reg[19] ,
    \EX_Op1_reg[20] ,
    \EX_Op1_reg[21] ,
    \EX_Op1_reg[22] ,
    \EX_Op1_reg[23] ,
    \EX_Op1_reg[24]_0 ,
    \EX_Op1_reg[25] ,
    \EX_Op1_reg[26] ,
    \EX_Op1_reg[27] ,
    \EX_Op1_reg[28]_0 ,
    \EX_Op1_reg[29] ,
    \EX_Op1_reg[30] ,
    \EX_Op1_reg[31] ,
    ex_use_carry,
    DI_0,
    ex_unsigned_op,
    Q,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU,
    in0,
    ex_op1_cmp_equal,
    ex_op1_cmp_equal_n,
    sync_reset,
    \Using_FPGA.Native_31 ,
    ex_reverse_mem_access,
    Clk,
    \Using_FPGA.Native_32 ,
    R,
    EX_Fwd,
    \Using_FPGA.Native_33 ,
    \Using_FPGA.Native_34 ,
    \Using_FPGA.Native_35 ,
    \Using_FPGA.Native_36 ,
    I1_1,
    p_232_in,
    \Using_FPGA.Native_37 ,
    ex_MSR_Load_ALU_C,
    ex_swx_access__0,
    ex_MSR_Load_Shift_C,
    ex_MSR_Load_LWX_SWX_C,
    ex_move_to_MSR_instr,
    \Using_FPGA.Native_38 ,
    \Using_FPGA.Native_39 ,
    ex_valid,
    ex_cmp_op,
    ex_byte_access,
    ex_doublet_access,
    wb_gpr_write_dbg,
    \data_rd_reg_reg[23] ,
    read_register_MSR_1,
    \LOCKSTEP_Out_reg[3030] ,
    wb_byte_access,
    \LOCKSTEP_Out_reg[3024] ,
    \LOCKSTEP_Out_reg[3026] ,
    \LOCKSTEP_Out_reg[3028] ,
    \LOCKSTEP_Out_reg[3030]_0 ,
    \LOCKSTEP_Out_reg[3029] ,
    \LOCKSTEP_Out_reg[3027] ,
    \LOCKSTEP_Out_reg[3025] ,
    \LOCKSTEP_Out_reg[3023] ,
    \Using_FPGA.Native_i_3__31 ,
    ex_swap_byte_instr,
    mem_sel_msr,
    WB_GPR_Wr,
    \EX_Branch_CMP_Op1_reg[0]_0 ,
    \EX_Branch_CMP_Op1_reg[0]_1 ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \EX_Branch_CMP_Op1_reg[18] ,
    \EX_Branch_CMP_Op1_reg[2] ,
    \EX_Branch_CMP_Op1_reg[2]_0 ,
    \EX_Branch_CMP_Op1_reg[4] ,
    \EX_Branch_CMP_Op1_reg[4]_0 ,
    \EX_Branch_CMP_Op1_reg[6] ,
    \EX_Branch_CMP_Op1_reg[6]_0 ,
    \EX_Branch_CMP_Op1_reg[8] ,
    \EX_Branch_CMP_Op1_reg[8]_0 ,
    \EX_Branch_CMP_Op1_reg[10] ,
    \EX_Branch_CMP_Op1_reg[10]_0 ,
    \EX_Branch_CMP_Op1_reg[12] ,
    \EX_Branch_CMP_Op1_reg[12]_0 ,
    \EX_Branch_CMP_Op1_reg[14] ,
    \EX_Branch_CMP_Op1_reg[14]_0 ,
    \EX_Branch_CMP_Op1_reg[24] ,
    \EX_Branch_CMP_Op1_reg[24]_0 ,
    \EX_Branch_CMP_Op1_reg[26] ,
    \EX_Branch_CMP_Op1_reg[26]_0 ,
    \EX_Branch_CMP_Op1_reg[28] ,
    \EX_Branch_CMP_Op1_reg[28]_0 ,
    \EX_Branch_CMP_Op1_reg[30] ,
    \EX_Branch_CMP_Op1_reg[30]_0 ,
    E,
    \EX_Op3_reg[31] ,
    \EX_Op2_reg[0]_0 ,
    \EX_Op3_reg[0]_0 ,
    \MEM_DataBus_Write_Data_reg[0] ,
    wb_piperun,
    SR,
    mem_byte_access,
    mem_doublet_access,
    lopt,
    lopt_1,
    lopt_2);
  output [31:0]\EX_Op1_reg[0] ;
  output out;
  output \EX_Op1_reg[24] ;
  output ex_op1_zero;
  output [0:0]wb_read_lsb_1_sel;
  output wb_read_msb_doublet_sel;
  output [2:0]ex_MSR;
  output DI;
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  output \Using_FPGA.Native_2 ;
  output \Using_FPGA.Native_3 ;
  output \Using_FPGA.Native_4 ;
  output \Using_FPGA.Native_5 ;
  output \Using_FPGA.Native_6 ;
  output \Using_FPGA.Native_7 ;
  output \Using_FPGA.Native_8 ;
  output \Using_FPGA.Native_9 ;
  output \Using_FPGA.Native_10 ;
  output \Using_FPGA.Native_11 ;
  output \Using_FPGA.Native_12 ;
  output \Using_FPGA.Native_13 ;
  output \Using_FPGA.Native_14 ;
  output \Using_FPGA.Native_15 ;
  output \Using_FPGA.Native_16 ;
  output \Using_FPGA.Native_17 ;
  output \Using_FPGA.Native_18 ;
  output \Using_FPGA.Native_19 ;
  output \Using_FPGA.Native_20 ;
  output \Using_FPGA.Native_21 ;
  output \Using_FPGA.Native_22 ;
  output \Using_FPGA.Native_23 ;
  output \Using_FPGA.Native_24 ;
  output \Using_FPGA.Native_25 ;
  output \Using_FPGA.Native_26 ;
  output \Using_FPGA.Native_27 ;
  output \Using_FPGA.Native_28 ;
  output [87:0]\EX_Op2_reg[0] ;
  output [23:0]\Using_FPGA.Native_29 ;
  output [0:0]\EX_Branch_CMP_Op1_reg[0] ;
  output \EX_Op1_reg[28] ;
  output [0:0]\EX_Op2_reg[31] ;
  output [7:0]wb_gpr_write_dbg_reg;
  output [23:0]\WB_MEM_Result_reg[0] ;
  output [23:0]swap_result;
  output [0:7]swap_result_reg;
  output [31:0]\EX_Op3_reg[0] ;
  output [0:31]MEM_Fwd;
  output \Using_FPGA.Native_30 ;
  output [0:31]GPR_Op1;
  output [0:31]GPR_Op2;
  output [0:31]GPR_Op3;
  output [15:0]\imm_reg_reg[0] ;
  output [1:0]\No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0] ;
  output [1:0]ex_databus_addr;
  input of_op1_sel_spr;
  input [31:0]D;
  input I1;
  input \EX_Op1_reg[1] ;
  input \EX_Op1_reg[2] ;
  input \EX_Op1_reg[3] ;
  input \EX_Op1_reg[4] ;
  input \EX_Op1_reg[5] ;
  input \EX_Op1_reg[6] ;
  input \EX_Op1_reg[7] ;
  input \EX_Op1_reg[8] ;
  input \EX_Op1_reg[9] ;
  input \EX_Op1_reg[10] ;
  input \EX_Op1_reg[11] ;
  input \EX_Op1_reg[12] ;
  input \EX_Op1_reg[13] ;
  input \EX_Op1_reg[14] ;
  input \EX_Op1_reg[15] ;
  input \EX_Op1_reg[16] ;
  input \EX_Op1_reg[17] ;
  input \EX_Op1_reg[18] ;
  input \EX_Op1_reg[19] ;
  input \EX_Op1_reg[20] ;
  input \EX_Op1_reg[21] ;
  input \EX_Op1_reg[22] ;
  input \EX_Op1_reg[23] ;
  input \EX_Op1_reg[24]_0 ;
  input \EX_Op1_reg[25] ;
  input \EX_Op1_reg[26] ;
  input \EX_Op1_reg[27] ;
  input \EX_Op1_reg[28]_0 ;
  input \EX_Op1_reg[29] ;
  input \EX_Op1_reg[30] ;
  input \EX_Op1_reg[31] ;
  input ex_use_carry;
  input DI_0;
  input ex_unsigned_op;
  input [1:0]Q;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;
  input in0;
  input ex_op1_cmp_equal;
  input ex_op1_cmp_equal_n;
  input sync_reset;
  input \Using_FPGA.Native_31 ;
  input ex_reverse_mem_access;
  input Clk;
  input \Using_FPGA.Native_32 ;
  input R;
  input [0:31]EX_Fwd;
  input \Using_FPGA.Native_33 ;
  input [0:0]\Using_FPGA.Native_34 ;
  input [31:0]\Using_FPGA.Native_35 ;
  input \Using_FPGA.Native_36 ;
  input I1_1;
  input p_232_in;
  input \Using_FPGA.Native_37 ;
  input ex_MSR_Load_ALU_C;
  input ex_swx_access__0;
  input ex_MSR_Load_Shift_C;
  input ex_MSR_Load_LWX_SWX_C;
  input ex_move_to_MSR_instr;
  input \Using_FPGA.Native_38 ;
  input \Using_FPGA.Native_39 ;
  input ex_valid;
  input ex_cmp_op;
  input ex_byte_access;
  input ex_doublet_access;
  input wb_gpr_write_dbg;
  input \data_rd_reg_reg[23] ;
  input read_register_MSR_1;
  input \LOCKSTEP_Out_reg[3030] ;
  input wb_byte_access;
  input \LOCKSTEP_Out_reg[3024] ;
  input \LOCKSTEP_Out_reg[3026] ;
  input \LOCKSTEP_Out_reg[3028] ;
  input \LOCKSTEP_Out_reg[3030]_0 ;
  input \LOCKSTEP_Out_reg[3029] ;
  input \LOCKSTEP_Out_reg[3027] ;
  input \LOCKSTEP_Out_reg[3025] ;
  input \LOCKSTEP_Out_reg[3023] ;
  input [1:0]\Using_FPGA.Native_i_3__31 ;
  input ex_swap_byte_instr;
  input mem_sel_msr;
  input WB_GPR_Wr;
  input \EX_Branch_CMP_Op1_reg[0]_0 ;
  input \EX_Branch_CMP_Op1_reg[0]_1 ;
  input [0:4]of_gpr_op1_rd_addr;
  input [0:15]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\EX_Branch_CMP_Op1_reg[18] ;
  input \EX_Branch_CMP_Op1_reg[2] ;
  input \EX_Branch_CMP_Op1_reg[2]_0 ;
  input \EX_Branch_CMP_Op1_reg[4] ;
  input \EX_Branch_CMP_Op1_reg[4]_0 ;
  input \EX_Branch_CMP_Op1_reg[6] ;
  input \EX_Branch_CMP_Op1_reg[6]_0 ;
  input \EX_Branch_CMP_Op1_reg[8] ;
  input \EX_Branch_CMP_Op1_reg[8]_0 ;
  input \EX_Branch_CMP_Op1_reg[10] ;
  input \EX_Branch_CMP_Op1_reg[10]_0 ;
  input \EX_Branch_CMP_Op1_reg[12] ;
  input \EX_Branch_CMP_Op1_reg[12]_0 ;
  input \EX_Branch_CMP_Op1_reg[14] ;
  input \EX_Branch_CMP_Op1_reg[14]_0 ;
  input \EX_Branch_CMP_Op1_reg[24] ;
  input \EX_Branch_CMP_Op1_reg[24]_0 ;
  input \EX_Branch_CMP_Op1_reg[26] ;
  input \EX_Branch_CMP_Op1_reg[26]_0 ;
  input \EX_Branch_CMP_Op1_reg[28] ;
  input \EX_Branch_CMP_Op1_reg[28]_0 ;
  input \EX_Branch_CMP_Op1_reg[30] ;
  input \EX_Branch_CMP_Op1_reg[30]_0 ;
  input [0:0]E;
  input \EX_Op3_reg[31] ;
  input [31:0]\EX_Op2_reg[0]_0 ;
  input [31:0]\EX_Op3_reg[0]_0 ;
  input [27:0]\MEM_DataBus_Write_Data_reg[0] ;
  input wb_piperun;
  input [0:0]SR;
  input mem_byte_access;
  input mem_doublet_access;
  output lopt;
  input lopt_1;
  input lopt_2;

  wire Clk;
  wire [31:0]D;
  wire DI;
  wire DI_0;
  wire [0:0]E;
  wire EX_ALU_Sel_Logic;
  wire [0:0]\EX_Branch_CMP_Op1_reg[0] ;
  wire \EX_Branch_CMP_Op1_reg[0]_0 ;
  wire \EX_Branch_CMP_Op1_reg[0]_1 ;
  wire \EX_Branch_CMP_Op1_reg[10] ;
  wire \EX_Branch_CMP_Op1_reg[10]_0 ;
  wire \EX_Branch_CMP_Op1_reg[12] ;
  wire \EX_Branch_CMP_Op1_reg[12]_0 ;
  wire \EX_Branch_CMP_Op1_reg[14] ;
  wire \EX_Branch_CMP_Op1_reg[14]_0 ;
  wire [4:0]\EX_Branch_CMP_Op1_reg[18] ;
  wire \EX_Branch_CMP_Op1_reg[24] ;
  wire \EX_Branch_CMP_Op1_reg[24]_0 ;
  wire \EX_Branch_CMP_Op1_reg[26] ;
  wire \EX_Branch_CMP_Op1_reg[26]_0 ;
  wire \EX_Branch_CMP_Op1_reg[28] ;
  wire \EX_Branch_CMP_Op1_reg[28]_0 ;
  wire \EX_Branch_CMP_Op1_reg[2] ;
  wire \EX_Branch_CMP_Op1_reg[2]_0 ;
  wire \EX_Branch_CMP_Op1_reg[30] ;
  wire \EX_Branch_CMP_Op1_reg[30]_0 ;
  wire \EX_Branch_CMP_Op1_reg[4] ;
  wire \EX_Branch_CMP_Op1_reg[4]_0 ;
  wire \EX_Branch_CMP_Op1_reg[6] ;
  wire \EX_Branch_CMP_Op1_reg[6]_0 ;
  wire \EX_Branch_CMP_Op1_reg[8] ;
  wire \EX_Branch_CMP_Op1_reg[8]_0 ;
  wire EX_Enable_ALU;
  wire [0:31]EX_Fwd;
  wire [31:0]\EX_Op1_reg[0] ;
  wire \EX_Op1_reg[10] ;
  wire \EX_Op1_reg[11] ;
  wire \EX_Op1_reg[12] ;
  wire \EX_Op1_reg[13] ;
  wire \EX_Op1_reg[14] ;
  wire \EX_Op1_reg[15] ;
  wire \EX_Op1_reg[16] ;
  wire \EX_Op1_reg[17] ;
  wire \EX_Op1_reg[18] ;
  wire \EX_Op1_reg[19] ;
  wire \EX_Op1_reg[1] ;
  wire \EX_Op1_reg[20] ;
  wire \EX_Op1_reg[21] ;
  wire \EX_Op1_reg[22] ;
  wire \EX_Op1_reg[23] ;
  wire \EX_Op1_reg[24] ;
  wire \EX_Op1_reg[24]_0 ;
  wire \EX_Op1_reg[25] ;
  wire \EX_Op1_reg[26] ;
  wire \EX_Op1_reg[27] ;
  wire \EX_Op1_reg[28] ;
  wire \EX_Op1_reg[28]_0 ;
  wire \EX_Op1_reg[29] ;
  wire \EX_Op1_reg[2] ;
  wire \EX_Op1_reg[30] ;
  wire \EX_Op1_reg[31] ;
  wire \EX_Op1_reg[3] ;
  wire \EX_Op1_reg[4] ;
  wire \EX_Op1_reg[5] ;
  wire \EX_Op1_reg[6] ;
  wire \EX_Op1_reg[7] ;
  wire \EX_Op1_reg[8] ;
  wire \EX_Op1_reg[9] ;
  wire [87:0]\EX_Op2_reg[0] ;
  wire [31:0]\EX_Op2_reg[0]_0 ;
  wire [0:0]\EX_Op2_reg[31] ;
  wire [31:0]\EX_Op3_reg[0] ;
  wire [31:0]\EX_Op3_reg[0]_0 ;
  wire \EX_Op3_reg[31] ;
  wire [0:31]GPR_Op1;
  wire [0:31]GPR_Op2;
  wire [0:31]GPR_Op3;
  wire I1;
  wire I1_1;
  wire \LOCKSTEP_Out_reg[3023] ;
  wire \LOCKSTEP_Out_reg[3024] ;
  wire \LOCKSTEP_Out_reg[3025] ;
  wire \LOCKSTEP_Out_reg[3026] ;
  wire \LOCKSTEP_Out_reg[3027] ;
  wire \LOCKSTEP_Out_reg[3028] ;
  wire \LOCKSTEP_Out_reg[3029] ;
  wire \LOCKSTEP_Out_reg[3030] ;
  wire \LOCKSTEP_Out_reg[3030]_0 ;
  wire [27:0]\MEM_DataBus_Write_Data_reg[0] ;
  wire [0:30]MEM_EX_Result;
  wire [0:31]MEM_Fwd;
  wire [1:0]\No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0] ;
  wire Operand_Select_I_n_0;
  wire Operand_Select_I_n_145;
  wire Operand_Select_I_n_177;
  wire Operand_Select_I_n_33;
  wire Operand_Select_I_n_64;
  wire Operand_Select_I_n_65;
  wire Operand_Select_I_n_66;
  wire Operand_Select_I_n_80;
  wire [1:0]Q;
  wire R;
  wire [0:0]SR;
  wire \Using_FPGA.ALL_Bits[0].ALU_Bit_I1/I0 ;
  wire \Using_FPGA.ALL_Bits[0].ALU_Bit_I1/I2 ;
  wire \Using_FPGA.ALL_Bits[0].ALU_Bit_I1/S ;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_16 ;
  wire \Using_FPGA.Native_17 ;
  wire \Using_FPGA.Native_18 ;
  wire \Using_FPGA.Native_19 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_20 ;
  wire \Using_FPGA.Native_21 ;
  wire \Using_FPGA.Native_22 ;
  wire \Using_FPGA.Native_23 ;
  wire \Using_FPGA.Native_24 ;
  wire \Using_FPGA.Native_25 ;
  wire \Using_FPGA.Native_26 ;
  wire \Using_FPGA.Native_27 ;
  wire \Using_FPGA.Native_28 ;
  wire [23:0]\Using_FPGA.Native_29 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_30 ;
  wire \Using_FPGA.Native_31 ;
  wire \Using_FPGA.Native_32 ;
  wire \Using_FPGA.Native_33 ;
  wire [0:0]\Using_FPGA.Native_34 ;
  wire [31:0]\Using_FPGA.Native_35 ;
  wire \Using_FPGA.Native_36 ;
  wire \Using_FPGA.Native_37 ;
  wire \Using_FPGA.Native_38 ;
  wire \Using_FPGA.Native_39 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire [1:0]\Using_FPGA.Native_i_3__31 ;
  wire WB_GPR_Wr;
  wire [23:0]\WB_MEM_Result_reg[0] ;
  wire \data_rd_reg_reg[23] ;
  wire [2:0]ex_MSR;
  wire ex_MSR_Load_ALU_C;
  wire ex_MSR_Load_LWX_SWX_C;
  wire ex_MSR_Load_Shift_C;
  wire ex_alu_carry_32;
  wire [1:29]ex_branch_cmp_op1;
  wire ex_byte_access;
  wire ex_cmp_op;
  wire [1:0]ex_databus_addr;
  wire ex_doublet_access;
  wire ex_move_to_MSR_instr;
  wire ex_op1_cmp_equal;
  wire ex_op1_cmp_equal_n;
  wire [0:27]ex_op2;
  wire ex_reverse_mem_access;
  wire ex_swap_byte_instr;
  wire ex_swx_access__0;
  wire ex_unsigned_op;
  wire ex_use_carry;
  wire ex_valid;
  wire [15:0]\imm_reg_reg[0] ;
  wire in0;
  wire \^lopt_1 ;
  wire lopt_10;
  wire \^lopt_2 ;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire mem_byte_access;
  wire mem_doublet_access;
  wire mem_sel_msr;
  wire muxcy_di;
  wire muxcy_sel;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [0:15]of_imm_data;
  wire of_op1_sel_spr;
  wire out;
  wire p_232_in;
  wire read_register_MSR_1;
  wire [23:0]swap_result;
  wire [0:7]swap_result_reg;
  wire sync_reset;
  wire wb_byte_access;
  wire wb_gpr_write_dbg;
  wire [7:0]wb_gpr_write_dbg_reg;
  wire [16:23]wb_mem_result;
  wire wb_piperun;
  wire [0:0]wb_read_lsb_1_sel;
  wire wb_read_msb_doublet_sel;
  wire NLW_ALU_I_DI_0_UNCONNECTED;
  wire NLW_ALU_I_ex_alu_carryin_UNCONNECTED;
  wire NLW_ALU_I_ex_use_carry_UNCONNECTED;
  wire NLW_ALU_I_lopt_UNCONNECTED;
  wire [29:11]NLW_Byte_Doublet_Handle_gti_I_D_UNCONNECTED;
  wire [3:0]\NLW_Byte_Doublet_Handle_gti_I_MEM_DataBus_Byte_Enable_reg[0]_0_UNCONNECTED ;
  wire [33:0]\NLW_Byte_Doublet_Handle_gti_I_MEM_DataBus_Write_Data_reg[0]_0_UNCONNECTED ;
  wire \NLW_Using_DAXI_ALU_Carry.Direct_MUXCY_I_ex_pre_alu_carry_UNCONNECTED ;
  wire \NLW_Using_DAXI_ALU_Carry.Direct_MUXCY_I_lopt_UNCONNECTED ;
  wire \NLW_Using_DAXI_ALU_Carry.Direct_MUXCY_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_DAXI_ALU_Carry.Post_MUXCY_I_ex_alu_carryin_UNCONNECTED ;
  wire \NLW_Using_DAXI_ALU_Carry.Post_MUXCY_I_ex_pre_alu_carry_UNCONNECTED ;
  wire \NLW_Using_DAXI_ALU_Carry.Post_MUXCY_I_lopt_UNCONNECTED ;
  wire NLW_Zero_Detect_I_ex_op1_zero_UNCONNECTED;
  wire \NLW_exception_registers_I1_Using_FPGA.Native_10_UNCONNECTED ;
  wire \NLW_exception_registers_I1_Using_FPGA.Native_11_UNCONNECTED ;
  wire \NLW_exception_registers_I1_Using_FPGA.Native_12_UNCONNECTED ;
  wire \NLW_exception_registers_I1_Using_FPGA.Native_13_UNCONNECTED ;
  wire \NLW_exception_registers_I1_Using_FPGA.Native_6_UNCONNECTED ;
  wire \NLW_exception_registers_I1_Using_FPGA.Native_7_UNCONNECTED ;
  wire \NLW_exception_registers_I1_Using_FPGA.Native_8_UNCONNECTED ;
  wire \NLW_exception_registers_I1_Using_FPGA.Native_9_UNCONNECTED ;

  assign lopt = lopt_8;
  assign lopt_10 = lopt_2;
  assign lopt_9 = lopt_1;
  system_microblaze_0_0__ALU ALU_I
       (.DI_0(NLW_ALU_I_DI_0_UNCONNECTED),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .\EX_Op2_reg[0] (\EX_Op2_reg[0] [87:58]),
        .I0(\Using_FPGA.ALL_Bits[0].ALU_Bit_I1/I0 ),
        .I2(\Using_FPGA.ALL_Bits[0].ALU_Bit_I1/I2 ),
        .LO(ex_alu_carry_32),
        .\MEM_DataBus_Addr_reg[9] (Q),
        .Q({ex_op2[0],ex_op2[1],ex_op2[2],ex_op2[3],ex_op2[4],ex_op2[5],ex_op2[6],ex_op2[7],ex_op2[8],ex_op2[9],ex_op2[10],ex_op2[11],ex_op2[12],ex_op2[13],ex_op2[14],ex_op2[15],ex_op2[16],ex_op2[17],ex_op2[18],ex_op2[19],ex_op2[20],ex_op2[21],ex_op2[22],ex_op2[23],ex_op2[24],ex_op2[25],ex_op2[26],ex_op2[27],Operand_Select_I_n_64,Operand_Select_I_n_65,Operand_Select_I_n_66,\EX_Op2_reg[31] }),
        .S(\Using_FPGA.ALL_Bits[0].ALU_Bit_I1/S ),
        .\Using_FPGA.Native (\EX_Op1_reg[0] ),
        .ex_alu_carryin(NLW_ALU_I_ex_alu_carryin_UNCONNECTED),
        .ex_databus_addr(ex_databus_addr),
        .ex_unsigned_op(ex_unsigned_op),
        .ex_use_carry(NLW_ALU_I_ex_use_carry_UNCONNECTED),
        .lopt(NLW_ALU_I_lopt_UNCONNECTED),
        .lopt_1(lopt_4),
        .lopt_2(lopt_5),
        .lopt_3(lopt_6),
        .lopt_4(lopt_7));
  system_microblaze_0_0__Byte_Doublet_Handle_gti Byte_Doublet_Handle_gti_I
       (.Clk(Clk),
        .D({\MEM_DataBus_Write_Data_reg[0] [27:26],NLW_Byte_Doublet_Handle_gti_I_D_UNCONNECTED[29:11],\EX_Op2_reg[0] [50:48],\MEM_DataBus_Write_Data_reg[0] [11:4]}),
        .\MEM_DataBus_Byte_Enable_reg[0]_0 (\NLW_Byte_Doublet_Handle_gti_I_MEM_DataBus_Byte_Enable_reg[0]_0_UNCONNECTED [3:0]),
        .\MEM_DataBus_Write_Data_reg[0]_0 ({\EX_Op2_reg[0] [47:46],\NLW_Byte_Doublet_Handle_gti_I_MEM_DataBus_Write_Data_reg[0]_0_UNCONNECTED [33:15],\EX_Op2_reg[0] [26:16],\NLW_Byte_Doublet_Handle_gti_I_MEM_DataBus_Write_Data_reg[0]_0_UNCONNECTED [3:0]}),
        .\No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0]_0 (\No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0] ),
        .\No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_0 (\Using_FPGA.Native_32 ),
        .ex_reverse_mem_access(ex_reverse_mem_access),
        .mem_byte_access(mem_byte_access),
        .\mem_byte_selects_reg[0]_0 ({\Using_FPGA.Native_30 ,Operand_Select_I_n_177}),
        .mem_doublet_access(mem_doublet_access),
        .mem_reverse_byteorder_reg_0(\Using_FPGA.Native_31 ),
        .sync_reset(sync_reset),
        .wb_read_lsb_1_sel(wb_read_lsb_1_sel),
        .wb_read_msb_doublet_sel(wb_read_msb_doublet_sel));
  system_microblaze_0_0__Data_Flow_Logic Data_Flow_Logic_I
       (.Clk(Clk),
        .EX_Fwd(EX_Fwd),
        .MEM_Fwd({MEM_Fwd[1],MEM_Fwd[2],MEM_Fwd[3],MEM_Fwd[4],MEM_Fwd[5],MEM_Fwd[6],MEM_Fwd[7],MEM_Fwd[8],MEM_Fwd[9],MEM_Fwd[10],MEM_Fwd[11],MEM_Fwd[12],MEM_Fwd[13],MEM_Fwd[14],MEM_Fwd[15],MEM_Fwd[16],MEM_Fwd[17],MEM_Fwd[18],MEM_Fwd[19],MEM_Fwd[20],MEM_Fwd[21],MEM_Fwd[22],MEM_Fwd[23],MEM_Fwd[24],MEM_Fwd[25],MEM_Fwd[26],MEM_Fwd[27],MEM_Fwd[31]}),
        .Q({\WB_MEM_Result_reg[0] [23:8],wb_mem_result[16],wb_mem_result[17],wb_mem_result[18],wb_mem_result[19],wb_mem_result[20],wb_mem_result[21],wb_mem_result[22],wb_mem_result[23],\WB_MEM_Result_reg[0] [7:0]}),
        .R(R),
        .SR(SR),
        .\Using_FPGA.Native ({MEM_EX_Result[0],MEM_EX_Result[28],MEM_EX_Result[29],MEM_EX_Result[30]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_31 ),
        .\WB_MEM_Result_reg[0]_0 ({MEM_Fwd[0],MEM_Fwd[28],MEM_Fwd[29],MEM_Fwd[30]}),
        .\WB_MEM_Result_reg[31]_0 (\Using_FPGA.Native_32 ),
        .mem_sel_msr(mem_sel_msr));
  system_microblaze_0_0__Operand_Select_gti Operand_Select_I
       (.Clk(Clk),
        .D(D),
        .E(E),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .\EX_Branch_CMP_Op1_reg[0]_0 ({\EX_Branch_CMP_Op1_reg[0] ,ex_branch_cmp_op1[1],ex_branch_cmp_op1[2],ex_branch_cmp_op1[3],ex_branch_cmp_op1[4],ex_branch_cmp_op1[5],ex_branch_cmp_op1[6],ex_branch_cmp_op1[7],ex_branch_cmp_op1[8],ex_branch_cmp_op1[9],ex_branch_cmp_op1[10],ex_branch_cmp_op1[11],ex_branch_cmp_op1[12],ex_branch_cmp_op1[13],ex_branch_cmp_op1[14],ex_branch_cmp_op1[15],ex_branch_cmp_op1[16],ex_branch_cmp_op1[17],ex_branch_cmp_op1[18],ex_branch_cmp_op1[19],ex_branch_cmp_op1[20],ex_branch_cmp_op1[21],ex_branch_cmp_op1[22],ex_branch_cmp_op1[23],ex_branch_cmp_op1[24],ex_branch_cmp_op1[25],ex_branch_cmp_op1[26],ex_branch_cmp_op1[27],ex_branch_cmp_op1[28],ex_branch_cmp_op1[29]}),
        .\EX_Branch_CMP_Op1_reg[30]_0 (Operand_Select_I_n_145),
        .\EX_Op1_reg[10]_0 (\EX_Op1_reg[10] ),
        .\EX_Op1_reg[11]_0 (\EX_Op1_reg[11] ),
        .\EX_Op1_reg[12]_0 (\EX_Op1_reg[12] ),
        .\EX_Op1_reg[13]_0 (\EX_Op1_reg[13] ),
        .\EX_Op1_reg[14]_0 (\EX_Op1_reg[14] ),
        .\EX_Op1_reg[15]_0 (\EX_Op1_reg[15] ),
        .\EX_Op1_reg[16]_0 (\EX_Op1_reg[16] ),
        .\EX_Op1_reg[17]_0 (\EX_Op1_reg[17] ),
        .\EX_Op1_reg[18]_0 (\EX_Op1_reg[18] ),
        .\EX_Op1_reg[19]_0 (\EX_Op1_reg[19] ),
        .\EX_Op1_reg[1]_0 (\EX_Op1_reg[1] ),
        .\EX_Op1_reg[20]_0 (\EX_Op1_reg[20] ),
        .\EX_Op1_reg[21]_0 (\EX_Op1_reg[21] ),
        .\EX_Op1_reg[22]_0 (\EX_Op1_reg[22] ),
        .\EX_Op1_reg[23]_0 (\EX_Op1_reg[23] ),
        .\EX_Op1_reg[24]_0 (\EX_Op1_reg[24]_0 ),
        .\EX_Op1_reg[25]_0 (\EX_Op1_reg[25] ),
        .\EX_Op1_reg[26]_0 (\EX_Op1_reg[26] ),
        .\EX_Op1_reg[27]_0 (\EX_Op1_reg[27] ),
        .\EX_Op1_reg[28]_0 (\EX_Op1_reg[28] ),
        .\EX_Op1_reg[28]_1 (\EX_Op1_reg[28]_0 ),
        .\EX_Op1_reg[29]_0 (\EX_Op1_reg[29] ),
        .\EX_Op1_reg[2]_0 (\EX_Op1_reg[2] ),
        .\EX_Op1_reg[30]_0 (Operand_Select_I_n_33),
        .\EX_Op1_reg[30]_1 (\EX_Op1_reg[30] ),
        .\EX_Op1_reg[31]_0 (\EX_Op1_reg[31] ),
        .\EX_Op1_reg[3]_0 (\EX_Op1_reg[3] ),
        .\EX_Op1_reg[4]_0 (\EX_Op1_reg[4] ),
        .\EX_Op1_reg[5]_0 (\EX_Op1_reg[5] ),
        .\EX_Op1_reg[6]_0 (\EX_Op1_reg[6] ),
        .\EX_Op1_reg[7]_0 (\EX_Op1_reg[7] ),
        .\EX_Op1_reg[8]_0 (\EX_Op1_reg[8] ),
        .\EX_Op1_reg[9]_0 (\EX_Op1_reg[9] ),
        .\EX_Op2_reg[0]_0 ({ex_op2[0],ex_op2[1],ex_op2[2],ex_op2[3],ex_op2[4],ex_op2[5],ex_op2[6],ex_op2[7],ex_op2[8],ex_op2[9],ex_op2[10],ex_op2[11],ex_op2[12],ex_op2[13],ex_op2[14],ex_op2[15],ex_op2[16],ex_op2[17],ex_op2[18],ex_op2[19],ex_op2[20],ex_op2[21],ex_op2[22],ex_op2[23],ex_op2[24],ex_op2[25],ex_op2[26],ex_op2[27],Operand_Select_I_n_64,Operand_Select_I_n_65,Operand_Select_I_n_66,\EX_Op2_reg[31] }),
        .\EX_Op2_reg[0]_1 (\EX_Op2_reg[0]_0 ),
        .\EX_Op3_reg[0]_0 (\EX_Op3_reg[0] ),
        .\EX_Op3_reg[0]_1 (\EX_Op3_reg[0]_0 ),
        .\EX_Op3_reg[31]_0 (\EX_Op3_reg[31] ),
        .I0(\Using_FPGA.ALL_Bits[0].ALU_Bit_I1/I0 ),
        .I1(I1),
        .I2(\Using_FPGA.ALL_Bits[0].ALU_Bit_I1/I2 ),
        .LO(ex_alu_carry_32),
        .Q(\EX_Op1_reg[0] ),
        .S(\Using_FPGA.ALL_Bits[0].ALU_Bit_I1/S ),
        .\Using_FPGA.Native (\EX_Op2_reg[0] [57:48]),
        .\Using_FPGA.Native_0 ({\Using_FPGA.Native_30 ,Operand_Select_I_n_177}),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_37 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (ex_MSR[1]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_38 ),
        .\Using_FPGA.Native_5 (\Using_FPGA.Native_39 ),
        .\Using_FPGA.Native_i_3__31 (\Using_FPGA.Native_i_3__31 ),
        .ex_MSR({ex_MSR[2],ex_MSR[0]}),
        .ex_MSR_Load_ALU_C(ex_MSR_Load_ALU_C),
        .ex_MSR_Load_LWX_SWX_C(ex_MSR_Load_LWX_SWX_C),
        .ex_MSR_Load_Shift_C(ex_MSR_Load_Shift_C),
        .ex_byte_access(ex_byte_access),
        .ex_cmp_op(ex_cmp_op),
        .ex_doublet_access(ex_doublet_access),
        .ex_load_alu_carry_reg(Operand_Select_I_n_0),
        .ex_move_to_MSR_instr(ex_move_to_MSR_instr),
        .ex_reverse_mem_access(ex_reverse_mem_access),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_swx_access__0(ex_swx_access__0),
        .ex_valid(ex_valid),
        .\imm_reg_reg[0]_0 (\imm_reg_reg[0] ),
        .in0(Operand_Select_I_n_80),
        .of_imm_data(of_imm_data),
        .of_op1_sel_spr(of_op1_sel_spr),
        .p_232_in(p_232_in),
        .swap_result(swap_result),
        .swap_result_reg(swap_result_reg),
        .sync_reset(sync_reset));
  system_microblaze_0_0__Register_File_gti Register_File_I
       (.Clk(Clk),
        .DID({\EX_Branch_CMP_Op1_reg[0]_0 ,\EX_Branch_CMP_Op1_reg[0]_1 }),
        .\EX_Branch_CMP_Op1_reg[10] ({\EX_Branch_CMP_Op1_reg[10] ,\EX_Branch_CMP_Op1_reg[10]_0 }),
        .\EX_Branch_CMP_Op1_reg[12] ({\EX_Branch_CMP_Op1_reg[12] ,\EX_Branch_CMP_Op1_reg[12]_0 }),
        .\EX_Branch_CMP_Op1_reg[14] ({\EX_Branch_CMP_Op1_reg[14] ,\EX_Branch_CMP_Op1_reg[14]_0 }),
        .\EX_Branch_CMP_Op1_reg[16] (\EX_Op2_reg[0] [7:6]),
        .\EX_Branch_CMP_Op1_reg[18] (\EX_Branch_CMP_Op1_reg[18] ),
        .\EX_Branch_CMP_Op1_reg[18]_0 (\EX_Op2_reg[0] [5:4]),
        .\EX_Branch_CMP_Op1_reg[20] (\EX_Op2_reg[0] [3:2]),
        .\EX_Branch_CMP_Op1_reg[22] (\EX_Op2_reg[0] [1:0]),
        .\EX_Branch_CMP_Op1_reg[24] ({\EX_Branch_CMP_Op1_reg[24] ,\EX_Branch_CMP_Op1_reg[24]_0 }),
        .\EX_Branch_CMP_Op1_reg[26] ({\EX_Branch_CMP_Op1_reg[26] ,\EX_Branch_CMP_Op1_reg[26]_0 }),
        .\EX_Branch_CMP_Op1_reg[28] ({\EX_Branch_CMP_Op1_reg[28] ,\EX_Branch_CMP_Op1_reg[28]_0 }),
        .\EX_Branch_CMP_Op1_reg[2] ({\EX_Branch_CMP_Op1_reg[2] ,\EX_Branch_CMP_Op1_reg[2]_0 }),
        .\EX_Branch_CMP_Op1_reg[30] ({\EX_Branch_CMP_Op1_reg[30] ,\EX_Branch_CMP_Op1_reg[30]_0 }),
        .\EX_Branch_CMP_Op1_reg[4] ({\EX_Branch_CMP_Op1_reg[4] ,\EX_Branch_CMP_Op1_reg[4]_0 }),
        .\EX_Branch_CMP_Op1_reg[6] ({\EX_Branch_CMP_Op1_reg[6] ,\EX_Branch_CMP_Op1_reg[6]_0 }),
        .\EX_Branch_CMP_Op1_reg[8] ({\EX_Branch_CMP_Op1_reg[8] ,\EX_Branch_CMP_Op1_reg[8]_0 }),
        .GPR_Op1(GPR_Op1),
        .GPR_Op2(GPR_Op2),
        .GPR_Op3(GPR_Op3),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data({of_imm_data[0],of_imm_data[1],of_imm_data[2],of_imm_data[3],of_imm_data[4]}));
  system_microblaze_0_0__Shift_Logic_Module_gti Shift_Logic_Module_I
       (.\EX_Op1_reg[24] (\EX_Op1_reg[24] ),
        .\Using_FPGA.Native (Operand_Select_I_n_80),
        .in0(in0),
        .out(out));
  system_microblaze_0_0__MB_MUXCY_299 \Using_DAXI_ALU_Carry.Direct_MUXCY_I 
       (.\Using_FPGA.Native_0 (ex_MSR[1]),
        .ex_pre_alu_carry(\NLW_Using_DAXI_ALU_Carry.Direct_MUXCY_I_ex_pre_alu_carry_UNCONNECTED ),
        .lopt(\NLW_Using_DAXI_ALU_Carry.Direct_MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ),
        .lopt_2(\^lopt_2 ),
        .lopt_3(\NLW_Using_DAXI_ALU_Carry.Direct_MUXCY_I_lopt_3_UNCONNECTED ),
        .lopt_4(DI_0),
        .lopt_5(ex_use_carry),
        .lopt_6(lopt_4),
        .lopt_7(lopt_5),
        .lopt_8(lopt_6),
        .lopt_9(lopt_7),
        .muxcy_di(muxcy_di),
        .muxcy_sel(muxcy_sel));
  system_microblaze_0_0__MB_MUXCY_300 \Using_DAXI_ALU_Carry.Post_MUXCY_I 
       (.ex_alu_carryin(\NLW_Using_DAXI_ALU_Carry.Post_MUXCY_I_ex_alu_carryin_UNCONNECTED ),
        .ex_pre_alu_carry(\NLW_Using_DAXI_ALU_Carry.Post_MUXCY_I_ex_pre_alu_carry_UNCONNECTED ),
        .lopt(\NLW_Using_DAXI_ALU_Carry.Post_MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(\^lopt_1 ),
        .lopt_2(\^lopt_2 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized1 \Using_DAXI_ALU_Carry.direct_lut_INST 
       (.muxcy_di(muxcy_di),
        .muxcy_sel(muxcy_sel));
  system_microblaze_0_0__Zero_Detect_gti Zero_Detect_I
       (.\Using_FPGA.Native (Operand_Select_I_n_145),
        .\Using_FPGA.Native_0 ({\EX_Branch_CMP_Op1_reg[0] ,ex_branch_cmp_op1[1],ex_branch_cmp_op1[2],ex_branch_cmp_op1[3],ex_branch_cmp_op1[4],ex_branch_cmp_op1[5],ex_branch_cmp_op1[6],ex_branch_cmp_op1[7],ex_branch_cmp_op1[8],ex_branch_cmp_op1[9],ex_branch_cmp_op1[10],ex_branch_cmp_op1[11],ex_branch_cmp_op1[12],ex_branch_cmp_op1[13],ex_branch_cmp_op1[14],ex_branch_cmp_op1[15],ex_branch_cmp_op1[16],ex_branch_cmp_op1[17],ex_branch_cmp_op1[18],ex_branch_cmp_op1[19],ex_branch_cmp_op1[20],ex_branch_cmp_op1[21],ex_branch_cmp_op1[22],ex_branch_cmp_op1[23],ex_branch_cmp_op1[24],ex_branch_cmp_op1[25],ex_branch_cmp_op1[26],ex_branch_cmp_op1[27],ex_branch_cmp_op1[28],ex_branch_cmp_op1[29]}),
        .ex_op1_cmp_equal(ex_op1_cmp_equal),
        .ex_op1_cmp_equal_n(ex_op1_cmp_equal_n),
        .ex_op1_zero(NLW_Zero_Detect_I_ex_op1_zero_UNCONNECTED),
        .lopt(lopt_8),
        .lopt_1(lopt_9),
        .lopt_2(lopt_10));
  system_microblaze_0_0__exception_registers_gti exception_registers_I1
       (.Clk(Clk),
        .DI(DI),
        .I1_1(I1_1),
        .\LOCKSTEP_Out_reg[3023] (\LOCKSTEP_Out_reg[3023] ),
        .\LOCKSTEP_Out_reg[3024] (\LOCKSTEP_Out_reg[3024] ),
        .\LOCKSTEP_Out_reg[3025] (\LOCKSTEP_Out_reg[3025] ),
        .\LOCKSTEP_Out_reg[3026] (\LOCKSTEP_Out_reg[3026] ),
        .\LOCKSTEP_Out_reg[3027] (\LOCKSTEP_Out_reg[3027] ),
        .\LOCKSTEP_Out_reg[3028] (\LOCKSTEP_Out_reg[3028] ),
        .\LOCKSTEP_Out_reg[3029] (\LOCKSTEP_Out_reg[3029] ),
        .\LOCKSTEP_Out_reg[3030] (\LOCKSTEP_Out_reg[3030] ),
        .\LOCKSTEP_Out_reg[3030]_0 (\LOCKSTEP_Out_reg[3030]_0 ),
        .Q({wb_mem_result[16],wb_mem_result[17],wb_mem_result[18],wb_mem_result[19],wb_mem_result[20],wb_mem_result[21],wb_mem_result[22],wb_mem_result[23]}),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_10 (\NLW_exception_registers_I1_Using_FPGA.Native_10_UNCONNECTED ),
        .\Using_FPGA.Native_11 (\NLW_exception_registers_I1_Using_FPGA.Native_11_UNCONNECTED ),
        .\Using_FPGA.Native_12 (\NLW_exception_registers_I1_Using_FPGA.Native_12_UNCONNECTED ),
        .\Using_FPGA.Native_13 (\NLW_exception_registers_I1_Using_FPGA.Native_13_UNCONNECTED ),
        .\Using_FPGA.Native_14 (\Using_FPGA.Native_14 ),
        .\Using_FPGA.Native_15 (\Using_FPGA.Native_15 ),
        .\Using_FPGA.Native_16 (\Using_FPGA.Native_16 ),
        .\Using_FPGA.Native_17 (\Using_FPGA.Native_17 ),
        .\Using_FPGA.Native_18 (\Using_FPGA.Native_18 ),
        .\Using_FPGA.Native_19 (\Using_FPGA.Native_19 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_2 ),
        .\Using_FPGA.Native_20 (\Using_FPGA.Native_20 ),
        .\Using_FPGA.Native_21 (\Using_FPGA.Native_21 ),
        .\Using_FPGA.Native_22 (\Using_FPGA.Native_22 ),
        .\Using_FPGA.Native_23 (\Using_FPGA.Native_23 ),
        .\Using_FPGA.Native_24 (\Using_FPGA.Native_24 ),
        .\Using_FPGA.Native_25 (\Using_FPGA.Native_25 ),
        .\Using_FPGA.Native_26 (\Using_FPGA.Native_26 ),
        .\Using_FPGA.Native_27 (\Using_FPGA.Native_27 ),
        .\Using_FPGA.Native_28 (\Using_FPGA.Native_28 ),
        .\Using_FPGA.Native_29 ({\EX_Op2_reg[0] [11],\EX_Op2_reg[0] [7:0]}),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_3 ),
        .\Using_FPGA.Native_30 (\Using_FPGA.Native_29 ),
        .\Using_FPGA.Native_31 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_32 (\Using_FPGA.Native_35 ),
        .\Using_FPGA.Native_33 (\Using_FPGA.Native_36 ),
        .\Using_FPGA.Native_34 (\Using_FPGA.Native_32 ),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_4 ),
        .\Using_FPGA.Native_5 (\Using_FPGA.Native_5 ),
        .\Using_FPGA.Native_6 (\NLW_exception_registers_I1_Using_FPGA.Native_6_UNCONNECTED ),
        .\Using_FPGA.Native_7 (\NLW_exception_registers_I1_Using_FPGA.Native_7_UNCONNECTED ),
        .\Using_FPGA.Native_8 (\NLW_exception_registers_I1_Using_FPGA.Native_8_UNCONNECTED ),
        .\Using_FPGA.Native_9 (\NLW_exception_registers_I1_Using_FPGA.Native_9_UNCONNECTED ),
        .\data_rd_reg_reg[23] (\data_rd_reg_reg[23] ),
        .read_register_MSR_1(read_register_MSR_1),
        .wb_byte_access(wb_byte_access),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .wb_gpr_write_dbg_reg(wb_gpr_write_dbg_reg));
  system_microblaze_0_0__msr_reg_gti msr_reg_i
       (.Clk(Clk),
        .MEM_Fwd({MEM_Fwd[0],MEM_Fwd[28],MEM_Fwd[29],MEM_Fwd[30]}),
        .\Using_FPGA.Native (\Using_FPGA.Native_33 ),
        .\Using_FPGA.Native_0 (Operand_Select_I_n_0),
        .\Using_FPGA.Native_1 (Operand_Select_I_n_33),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_32 ),
        .\WB_MEM_Result_reg[0] ({MEM_EX_Result[0],MEM_EX_Result[28],MEM_EX_Result[29],MEM_EX_Result[30]}),
        .ex_MSR(ex_MSR),
        .mem_sel_msr(mem_sel_msr),
        .sync_reset(sync_reset),
        .\wb_MSR_i_reg[28]_0 (\EX_Op2_reg[0] [10:8]),
        .wb_piperun(wb_piperun));
endmodule

(* ORIG_REF_NAME = "Debug" *) 
module system_microblaze_0_0__Debug
   (LOCKSTEP_Master_Out,
    \Serial_Dbg_Intf.force_stop_cmd_i_reg_0 ,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ,
    read_register_MSR_1,
    Sleep_Out,
    dbg_halt_reset_mode_reg_0,
    \Performance_Debug_Control.dbg_state_nohalt_reg_0 ,
    \Performance_Debug_Control.dbg_freeze_nohalt_reg_0 ,
    exception_reg_0,
    Dbg_Trig_In,
    Dbg_Trig_Ack_Out,
    \Performance_Debug_Control.dbg_stop_if_delay_i_reg_0 ,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0 ,
    ex_MSR_Load_Shift_C,
    ex_MSR_Load_ALU_C,
    ex_MSR_Set_SW_BIP,
    p_232_in,
    ex_Exception_Taken,
    ex_exception_no_load_store_mask,
    Q,
    \Performance_Debug_Control.dbg_stop_if_delay_i_reg_1 ,
    Dbg_Reg_En_0_sp_1,
    Dbg_TDO,
    Dbg_Clk,
    sync_reset,
    E,
    \Performance_Debug_Control.m0_dbg_hit_reg[0]_0 ,
    single_Step_N_reg_0,
    Pause,
    Sleep,
    Clk,
    \Performance_Debug_Control.ex_brki_hit_reg_0 ,
    wb_Halted,
    Dbg_Update,
    no_sleeping,
    Dbg_Trig_Ack_In,
    Dbg_Trig_Out,
    wb_read_imm_reg_1,
    D,
    wb_read_imm_reg,
    Dbg_Stop,
    Dbg_Capture,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_1 ,
    exception_reg_1,
    executing_reg_0,
    ex_valid,
    ex_is_load_instr_s,
    ex_load_shift_carry,
    \Using_FPGA.Native_i_2__20 ,
    \Using_LWX_SWX_instr.ex_reservation_i_2 ,
    dbg_stop_instr_fetch_nohalt0__0,
    Reset_Mode,
    wb_pc_valid,
    Data_Read_Reg_En,
    Config_Reg_En,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ,
    Dbg_Shift,
    Dbg_Reg_En,
    Scan_Reset,
    Scan_Reset_Sel,
    Scan_En,
    wb_gpr_write_dbg,
    Status_Reg_En,
    dbg_pause,
    mem_Exception_Taken,
    wakeup_i,
    dbg_clean_stop,
    Dbg_TDI,
    Address,
    \Serial_Dbg_Intf.status_reg_reg[22]_0 ,
    \data_rd_reg_reg[0]_0 ,
    dbg_stop_i);
  output [37:0]LOCKSTEP_Master_Out;
  output \Serial_Dbg_Intf.force_stop_cmd_i_reg_0 ;
  output \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ;
  output read_register_MSR_1;
  output Sleep_Out;
  output dbg_halt_reset_mode_reg_0;
  output \Performance_Debug_Control.dbg_state_nohalt_reg_0 ;
  output \Performance_Debug_Control.dbg_freeze_nohalt_reg_0 ;
  output [0:0]exception_reg_0;
  output [1:0]Dbg_Trig_In;
  output [1:0]Dbg_Trig_Ack_Out;
  output \Performance_Debug_Control.dbg_stop_if_delay_i_reg_0 ;
  output [0:0]\Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0 ;
  output ex_MSR_Load_Shift_C;
  output ex_MSR_Load_ALU_C;
  output ex_MSR_Set_SW_BIP;
  output p_232_in;
  output ex_Exception_Taken;
  output ex_exception_no_load_store_mask;
  output [0:0]Q;
  output \Performance_Debug_Control.dbg_stop_if_delay_i_reg_1 ;
  output Dbg_Reg_En_0_sp_1;
  output Dbg_TDO;
  input Dbg_Clk;
  input sync_reset;
  input [0:0]E;
  input \Performance_Debug_Control.m0_dbg_hit_reg[0]_0 ;
  input single_Step_N_reg_0;
  input Pause;
  input Sleep;
  input Clk;
  input \Performance_Debug_Control.ex_brki_hit_reg_0 ;
  input wb_Halted;
  input Dbg_Update;
  input no_sleeping;
  input [1:0]Dbg_Trig_Ack_In;
  input [1:0]Dbg_Trig_Out;
  input wb_read_imm_reg_1;
  input [2:0]D;
  input wb_read_imm_reg;
  input Dbg_Stop;
  input Dbg_Capture;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_1 ;
  input exception_reg_1;
  input executing_reg_0;
  input ex_valid;
  input ex_is_load_instr_s;
  input ex_load_shift_carry;
  input \Using_FPGA.Native_i_2__20 ;
  input \Using_LWX_SWX_instr.ex_reservation_i_2 ;
  input dbg_stop_instr_fetch_nohalt0__0;
  input [0:1]Reset_Mode;
  input wb_pc_valid;
  input Data_Read_Reg_En;
  input Config_Reg_En;
  input \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ;
  input Dbg_Shift;
  input [0:7]Dbg_Reg_En;
  input Scan_Reset;
  input Scan_Reset_Sel;
  input Scan_En;
  input wb_gpr_write_dbg;
  input Status_Reg_En;
  input dbg_pause;
  input mem_Exception_Taken;
  input [0:1]wakeup_i;
  input dbg_clean_stop;
  input Dbg_TDI;
  input [0:31]Address;
  input [0:0]\Serial_Dbg_Intf.status_reg_reg[22]_0 ;
  input [31:0]\data_rd_reg_reg[0]_0 ;
  input dbg_stop_i;

  wire A1;
  wire A2;
  wire A3;
  wire [0:31]Address;
  wire Clk;
  wire Command_Reg_En;
  wire Config_Reg_En;
  wire Control_Reg_En;
  wire [2:0]D;
  wire Data_Read_Reg_En;
  wire Dbg_Capture;
  wire Dbg_Clk;
  wire [0:7]Dbg_Reg_En;
  wire Dbg_Reg_En_0_sn_1;
  wire Dbg_Shift;
  wire Dbg_TDI;
  wire Dbg_TDO;
  wire Dbg_TDO_INST_0_i_10_n_0;
  wire Dbg_TDO_INST_0_i_16_n_0;
  wire Dbg_TDO_INST_0_i_17_n_0;
  wire Dbg_TDO_INST_0_i_18_n_0;
  wire Dbg_TDO_INST_0_i_19_n_0;
  wire Dbg_TDO_INST_0_i_20_n_0;
  wire Dbg_TDO_INST_0_i_21_n_0;
  wire Dbg_TDO_INST_0_i_22_n_0;
  wire Dbg_TDO_INST_0_i_27_n_0;
  wire Dbg_TDO_INST_0_i_28_n_0;
  wire Dbg_TDO_INST_0_i_29_n_0;
  wire Dbg_TDO_INST_0_i_30_n_0;
  wire Dbg_TDO_INST_0_i_31_n_0;
  wire Dbg_TDO_INST_0_i_32_n_0;
  wire Dbg_TDO_INST_0_i_33_n_0;
  wire Dbg_TDO_INST_0_i_34_n_0;
  wire Dbg_TDO_INST_0_i_35_n_0;
  wire Dbg_TDO_INST_0_i_36_n_0;
  wire Dbg_TDO_INST_0_i_7_n_0;
  wire Dbg_TDO_INST_0_i_8_n_0;
  wire Dbg_TDO_INST_0_i_9_n_0;
  wire [1:0]Dbg_Trig_Out;
  wire Dbg_Update;
  wire Full_32_bit;
  wire Full_32_bit_1;
  wire Instr_Insert_Reg_En;
  wire Instr_Insert_Reg_En_1;
  wire [37:0]LOCKSTEP_Master_Out;
  wire New_Dbg_Instr2_TCK;
  wire New_Dbg_Instr_TCK;
  wire New_Dbg_Instr_TCK0;
  wire New_Dbg_Instr_TCK2;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_i_1_n_0 ;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_i_3_n_0 ;
  wire \Performance_Debug_Control.dbg_freeze_nohalt_reg_0 ;
  wire \Performance_Debug_Control.dbg_state_nohalt_i_1_n_0 ;
  wire \Performance_Debug_Control.dbg_state_nohalt_i_3_n_0 ;
  wire \Performance_Debug_Control.dbg_state_nohalt_i_4_n_0 ;
  wire \Performance_Debug_Control.dbg_state_nohalt_reg_0 ;
  wire \Performance_Debug_Control.dbg_stop_i_i_1_n_0 ;
  wire \Performance_Debug_Control.dbg_stop_i_reg_n_0 ;
  wire \Performance_Debug_Control.dbg_stop_if_delay_i_i_1_n_0 ;
  wire \Performance_Debug_Control.dbg_stop_if_delay_i_reg_0 ;
  wire \Performance_Debug_Control.dbg_stop_if_delay_i_reg_1 ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1_n_0 ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2_n_0 ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_1 ;
  wire \Performance_Debug_Control.ex_brki_hit_reg_0 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_i_4_n_0 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_n_0 ;
  wire \Performance_Debug_Control.force_stop_i_i_1_n_0 ;
  wire \Performance_Debug_Control.m0_dbg_hit[0]_i_1_n_0 ;
  wire \Performance_Debug_Control.m0_dbg_hit_reg_n_0_[0] ;
  wire \Performance_Debug_Control.normal_stop_i_i_1_n_0 ;
  wire \Performance_Debug_Control.step_continue_hold_i_1_n_0 ;
  wire [0:0]Q;
  wire Q_0;
  wire Raw;
  wire \Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I_n_0 ;
  wire \Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_n_0 ;
  wire \Serial_Dbg_Intf.continue_from_brk_reg_n_0 ;
  wire \Serial_Dbg_Intf.control_reg_reg_n_0_[0] ;
  wire \Serial_Dbg_Intf.control_reg_reg_n_0_[4] ;
  wire \Serial_Dbg_Intf.control_reg_reg_n_0_[5] ;
  wire \Serial_Dbg_Intf.force_stop_cmd_i_reg_0 ;
  wire \Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0 ;
  wire \Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0 ;
  wire \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[0] ;
  wire \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[1] ;
  wire \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[2] ;
  wire \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[3] ;
  wire \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[4] ;
  wire \Serial_Dbg_Intf.sample_synced_1_reg_n_0_[6] ;
  wire \Serial_Dbg_Intf.shift_count[0]_i_1_n_0 ;
  wire \Serial_Dbg_Intf.shift_count[5]_i_2_n_0 ;
  wire \Serial_Dbg_Intf.shift_count[7]_i_2_n_0 ;
  wire \Serial_Dbg_Intf.shift_count_reg_n_0_[0] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[10] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[11] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[12] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[13] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[14] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[15] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[16] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[17] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[18] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[19] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[1] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[20] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[21] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[22] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[23] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[24] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[25] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[26] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[27] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[28] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[29] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[2] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[30] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[31] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[3] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[4] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[5] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[6] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[7] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[8] ;
  wire \Serial_Dbg_Intf.shift_datain_reg_n_0_[9] ;
  wire [0:0]\Serial_Dbg_Intf.status_reg_reg[22]_0 ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[0] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[16] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[17] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[18] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[19] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[20] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[22] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[23] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[24] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[25] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[27] ;
  wire \Serial_Dbg_Intf.status_reg_reg_n_0_[29] ;
  wire \Serial_Dbg_Intf.sync_stop_CPU_n_0 ;
  wire \Serial_Dbg_Intf.unchanged_i_1_n_0 ;
  wire Sleep;
  wire Sleep_Out;
  wire Status_Reg_En;
  wire TDO_Data_Reg__31;
  wire TDO_Instr_Reg;
  wire TDO_Status_Reg__17;
  wire \Using_FPGA.Native_i_2__20 ;
  wire \Using_LWX_SWX_instr.ex_reservation_i_2 ;
  wire \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_0 ;
  wire \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_1 ;
  wire \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_2 ;
  wire capture_1;
  wire [0:1]command_reg;
  wire command_reg_clear;
  wire command_reg_clear_i_1_n_0;
  wire config_with_scan_reset;
  wire continue_from_brk0;
  wire continue_from_brk_TClk;
  wire [0:32]data_rd_reg;
  wire \data_rd_reg[0]_i_1_n_0 ;
  wire \data_rd_reg[32]_i_1_n_0 ;
  wire \data_rd_reg[32]_i_2_n_0 ;
  wire \data_rd_reg[32]_i_3_n_0 ;
  wire [31:0]\data_rd_reg_reg[0]_0 ;
  wire [0:32]data_read_reg;
  wire dbg_brki_hit;
  wire dbg_brki_hit_synced;
  wire dbg_clean_stop;
  wire dbg_freeze_nohalt0_in;
  wire dbg_halt_reset_mode_i_1_n_0;
  wire dbg_halt_reset_mode_reg_0;
  wire dbg_stop_i;
  wire dbg_stop_instr_fetch_nohalt0__0;
  wire dbg_stop_instr_fetch_nohalt124_out__0;
  wire delay_slot_instr;
  wire ex_Exception_Taken;
  wire ex_MSR_Load_ALU_C;
  wire ex_MSR_Load_Shift_C;
  wire ex_MSR_Set_SW_BIP;
  wire ex_brki_hit;
  wire ex_exception_no_load_store_mask;
  wire ex_load_shift_carry;
  wire ex_pc_brk;
  (* DIRECT_ENABLE *) wire ex_piperun_for_ce;
  wire ex_step_continue_hold;
  wire ex_valid;
  wire exception_i_1_n_0;
  wire [0:0]exception_reg_0;
  wire exception_reg_1;
  wire executing_i_1_n_0;
  wire executing_reg_0;
  wire force_stop_TClk;
  wire force_stop_cmd_1;
  wire force_stop_cmd_i0;
  wire force_stop_i;
  wire force_stop_i1;
  wire force_stop_overrun;
  wire if_debug_ready_i0;
  wire [0:0]instr_rd_reg;
  wire [0:1]instr_read_reg;
  wire m0_brki_hit;
  (* DIRECT_ENABLE *) wire m2_piperun_for_ce;
  wire mem_Exception_Taken;
  wire normal_stop_TClk;
  wire normal_stop_cmd_1;
  wire normal_stop_cmd_i0;
  wire normal_stop_i;
  (* DIRECT_ENABLE *) wire of_piperun_for_ce;
  wire [7:1]p_0_in;
  wire p_0_in39_in;
  wire p_0_in_1;
  wire p_10_in;
  wire p_232_in;
  wire read_register_MSR;
  wire read_register_MSR0;
  wire read_register_MSR_1;
  wire read_register_PC;
  wire read_register_PC0;
  wire read_register_PC_1;
  (* DIRECT_RESET *) wire reset_bool_for_rst;
  wire running_clock;
  wire running_clock_synced;
  wire [0:9]sample_synced;
  wire saved_reset_mode_dbg_halt;
  wire saved_reset_mode_dbg_halt_i_1_n_0;
  wire saved_reset_mode_sleep;
  wire saved_reset_mode_sleep_i_1_n_0;
  wire [3:1]sel0;
  wire [0:0]sel0_2;
  wire single_Step_N;
  wire single_Step_N_i_1_n_0;
  wire single_Step_TClk;
  wire [0:1]single_step_count;
  wire \single_step_count[0]_i_1_n_0 ;
  wire \single_step_count[1]_i_1_n_0 ;
  wire sleep_reset_mode_i_1_n_0;
  wire sleep_synced;
  wire start_dbg_exec_reg_n_0;
  wire start_single_cmd;
  wire start_single_cmd0;
  wire start_single_step_i_1_n_0;
  wire start_single_step_reg_n_0;
  wire step_continue_hold;
  wire sync;
  wire tdo_config_word1_13;
  wire tdo_config_word1_5;
  wire tdo_config_word1_9;
  wire unchanged;
  wire [0:1]wakeup_i;
  wire wb_Halted;
  wire wb_brki_hit;
  wire wb_dbg_hit;
  wire wb_gpr_write_dbg;
  wire wb_pc_valid;
  wire wb_read_imm_reg;
  wire wb_read_imm_reg_1;
  wire \NLW_Serial_Dbg_Intf.SRL16E_4_tdo_config_word1_0_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.SRL16E_4_tdo_config_word1_1_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.SRL16E_4_tdo_config_word1_6_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.SRL16E_4_tdo_config_word1_7_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I_tdo_config_word1_14_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_tdo_config_word1_10_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_tdo_config_word1_11_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.sync_dbg_hit_Scan_En_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.sync_dbg_hit_Scan_Reset_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.sync_dbg_hit_Scan_Reset_Sel_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.sync_sample_Serial_Dbg_Intf.trig_ack_out_1_reg_UNCONNECTED ;
  wire \NLW_Serial_Dbg_Intf.sync_sample_Use_Async_Reset.sync_reset_reg_UNCONNECTED ;
  wire [0:0]\NLW_Serial_Dbg_Intf.sync_sample_Dbg_Trig_Ack_In_UNCONNECTED ;
  wire [0:0]\NLW_Serial_Dbg_Intf.sync_sample_Dbg_Trig_Ack_Out_UNCONNECTED ;
  wire [0:0]\NLW_Serial_Dbg_Intf.sync_sample_Dbg_Trig_In_UNCONNECTED ;
  wire [0:0]\NLW_Serial_Dbg_Intf.sync_sample_Q_UNCONNECTED ;
  wire [0:0]\NLW_Serial_Dbg_Intf.sync_sample_Synchronize.use_sync_reset.sync_reg[1]_4_UNCONNECTED ;
  wire [8:9]\NLW_Serial_Dbg_Intf.sync_sample_sample_synced_UNCONNECTED ;

  assign Dbg_Reg_En_0_sp_1 = Dbg_Reg_En_0_sn_1;
  assign ex_piperun_for_ce = \Performance_Debug_Control.m0_dbg_hit_reg[0]_0 ;
  assign m2_piperun_for_ce = E[0];
  assign of_piperun_for_ce = single_Step_N_reg_0;
  assign reset_bool_for_rst = sync_reset;
  LUT5 #(
    .INIT(32'h20000002)) 
    Dbg_TDO_INST_0_i_10
       (.I0(\Serial_Dbg_Intf.status_reg_reg_n_0_[0] ),
        .I1(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I2(A3),
        .I3(A1),
        .I4(A2),
        .O(Dbg_TDO_INST_0_i_10_n_0));
  LUT3 #(
    .INIT(8'hB8)) 
    Dbg_TDO_INST_0_i_15
       (.I0(instr_read_reg[1]),
        .I1(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I2(instr_read_reg[0]),
        .O(TDO_Instr_Reg));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Dbg_TDO_INST_0_i_16
       (.I0(Dbg_TDO_INST_0_i_27_n_0),
        .I1(Dbg_TDO_INST_0_i_28_n_0),
        .I2(Dbg_TDO_INST_0_i_29_n_0),
        .I3(Dbg_TDO_INST_0_i_30_n_0),
        .I4(Dbg_TDO_INST_0_i_31_n_0),
        .I5(Dbg_TDO_INST_0_i_32_n_0),
        .O(Dbg_TDO_INST_0_i_16_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Dbg_TDO_INST_0_i_17
       (.I0(Dbg_TDO_INST_0_i_33_n_0),
        .I1(Dbg_TDO_INST_0_i_34_n_0),
        .I2(Dbg_TDO_INST_0_i_29_n_0),
        .I3(Dbg_TDO_INST_0_i_35_n_0),
        .I4(Dbg_TDO_INST_0_i_31_n_0),
        .I5(Dbg_TDO_INST_0_i_36_n_0),
        .O(Dbg_TDO_INST_0_i_17_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    Dbg_TDO_INST_0_i_18
       (.I0(A2),
        .I1(A1),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A3),
        .O(Dbg_TDO_INST_0_i_18_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Dbg_TDO_INST_0_i_19
       (.I0(A1),
        .I1(A2),
        .O(Dbg_TDO_INST_0_i_19_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Dbg_TDO_INST_0_i_20
       (.I0(\Serial_Dbg_Intf.status_reg_reg_n_0_[23] ),
        .I1(\Serial_Dbg_Intf.status_reg_reg_n_0_[22] ),
        .I2(A1),
        .I3(\Serial_Dbg_Intf.status_reg_reg_n_0_[25] ),
        .I4(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I5(\Serial_Dbg_Intf.status_reg_reg_n_0_[24] ),
        .O(Dbg_TDO_INST_0_i_20_n_0));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT4 #(
    .INIT(16'hB800)) 
    Dbg_TDO_INST_0_i_21
       (.I0(\Serial_Dbg_Intf.status_reg_reg_n_0_[27] ),
        .I1(A1),
        .I2(\Serial_Dbg_Intf.status_reg_reg_n_0_[29] ),
        .I3(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .O(Dbg_TDO_INST_0_i_21_n_0));
  LUT5 #(
    .INIT(32'hA0A0CFC0)) 
    Dbg_TDO_INST_0_i_22
       (.I0(\Serial_Dbg_Intf.status_reg_reg_n_0_[19] ),
        .I1(\Serial_Dbg_Intf.status_reg_reg_n_0_[18] ),
        .I2(A1),
        .I3(\Serial_Dbg_Intf.status_reg_reg_n_0_[20] ),
        .I4(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .O(Dbg_TDO_INST_0_i_22_n_0));
  LUT6 #(
    .INIT(64'hFCAF0CAFFCA00CA0)) 
    Dbg_TDO_INST_0_i_27
       (.I0(data_read_reg[1]),
        .I1(data_read_reg[2]),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A1),
        .I4(data_read_reg[3]),
        .I5(data_read_reg[4]),
        .O(Dbg_TDO_INST_0_i_27_n_0));
  LUT6 #(
    .INIT(64'hFCAF0CAFFCA00CA0)) 
    Dbg_TDO_INST_0_i_28
       (.I0(data_read_reg[5]),
        .I1(data_read_reg[6]),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A1),
        .I4(data_read_reg[7]),
        .I5(data_read_reg[8]),
        .O(Dbg_TDO_INST_0_i_28_n_0));
  LUT4 #(
    .INIT(16'h01FE)) 
    Dbg_TDO_INST_0_i_29
       (.I0(A2),
        .I1(A1),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A3),
        .O(Dbg_TDO_INST_0_i_29_n_0));
  LUT6 #(
    .INIT(64'hACFAFFCFAC0A00C0)) 
    Dbg_TDO_INST_0_i_3
       (.I0(Dbg_TDO_INST_0_i_7_n_0),
        .I1(Dbg_TDO_INST_0_i_8_n_0),
        .I2(A3),
        .I3(Dbg_TDO_INST_0_i_9_n_0),
        .I4(sel0_2),
        .I5(Dbg_TDO_INST_0_i_10_n_0),
        .O(TDO_Status_Reg__17));
  LUT6 #(
    .INIT(64'hFCAF0CAFFCA00CA0)) 
    Dbg_TDO_INST_0_i_30
       (.I0(data_read_reg[9]),
        .I1(data_read_reg[10]),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A1),
        .I4(data_read_reg[11]),
        .I5(data_read_reg[12]),
        .O(Dbg_TDO_INST_0_i_30_n_0));
  LUT3 #(
    .INIT(8'h1E)) 
    Dbg_TDO_INST_0_i_31
       (.I0(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I1(A1),
        .I2(A2),
        .O(Dbg_TDO_INST_0_i_31_n_0));
  LUT6 #(
    .INIT(64'hFCAF0CAFFCA00CA0)) 
    Dbg_TDO_INST_0_i_32
       (.I0(data_read_reg[13]),
        .I1(data_read_reg[14]),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A1),
        .I4(data_read_reg[15]),
        .I5(data_read_reg[16]),
        .O(Dbg_TDO_INST_0_i_32_n_0));
  LUT6 #(
    .INIT(64'hFCAF0CAFFCA00CA0)) 
    Dbg_TDO_INST_0_i_33
       (.I0(data_read_reg[17]),
        .I1(data_read_reg[18]),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A1),
        .I4(data_read_reg[19]),
        .I5(data_read_reg[20]),
        .O(Dbg_TDO_INST_0_i_33_n_0));
  LUT6 #(
    .INIT(64'hFCAF0CAFFCA00CA0)) 
    Dbg_TDO_INST_0_i_34
       (.I0(data_read_reg[21]),
        .I1(data_read_reg[22]),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A1),
        .I4(data_read_reg[23]),
        .I5(data_read_reg[24]),
        .O(Dbg_TDO_INST_0_i_34_n_0));
  LUT6 #(
    .INIT(64'hFCAF0CAFFCA00CA0)) 
    Dbg_TDO_INST_0_i_35
       (.I0(data_read_reg[25]),
        .I1(data_read_reg[26]),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A1),
        .I4(data_read_reg[27]),
        .I5(data_read_reg[28]),
        .O(Dbg_TDO_INST_0_i_35_n_0));
  LUT6 #(
    .INIT(64'hFCAF0CAFFCA00CA0)) 
    Dbg_TDO_INST_0_i_36
       (.I0(data_read_reg[29]),
        .I1(data_read_reg[30]),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A1),
        .I4(data_read_reg[31]),
        .I5(data_read_reg[32]),
        .O(Dbg_TDO_INST_0_i_36_n_0));
  LUT6 #(
    .INIT(64'hFCFFAFCA0C00A0CA)) 
    Dbg_TDO_INST_0_i_6
       (.I0(Dbg_TDO_INST_0_i_16_n_0),
        .I1(Dbg_TDO_INST_0_i_17_n_0),
        .I2(sel0_2),
        .I3(Dbg_TDO_INST_0_i_18_n_0),
        .I4(sel0[1]),
        .I5(data_read_reg[0]),
        .O(TDO_Data_Reg__31));
  MUXF7 Dbg_TDO_INST_0_i_7
       (.I0(Dbg_TDO_INST_0_i_20_n_0),
        .I1(Dbg_TDO_INST_0_i_21_n_0),
        .O(Dbg_TDO_INST_0_i_7_n_0),
        .S(Dbg_TDO_INST_0_i_19_n_0));
  LUT6 #(
    .INIT(64'h2B2B2B2828282B28)) 
    Dbg_TDO_INST_0_i_8
       (.I0(Dbg_TDO_INST_0_i_22_n_0),
        .I1(A1),
        .I2(A2),
        .I3(\Serial_Dbg_Intf.status_reg_reg_n_0_[16] ),
        .I4(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I5(\Serial_Dbg_Intf.status_reg_reg_n_0_[17] ),
        .O(Dbg_TDO_INST_0_i_8_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    Dbg_TDO_INST_0_i_9
       (.I0(A1),
        .I1(A2),
        .O(Dbg_TDO_INST_0_i_9_n_0));
  FDRE #(
    .INIT(1'b0)) 
    Full_32_bit_1_reg
       (.C(Clk),
        .CE(wb_Halted),
        .D(wb_read_imm_reg_1),
        .Q(Full_32_bit_1),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    Full_32_bit_reg
       (.C(Clk),
        .CE(wb_Halted),
        .D(wb_read_imm_reg),
        .Q(Full_32_bit),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.dbg_brki_hit_reg 
       (.C(Clk),
        .CE(wb_Halted),
        .D(wb_brki_hit),
        .Q(dbg_brki_hit),
        .R(reset_bool_for_rst));
  LUT6 #(
    .INIT(64'hAAAAAAABAAAAAAA8)) 
    \Performance_Debug_Control.dbg_freeze_nohalt_i_1 
       (.I0(dbg_freeze_nohalt0_in),
        .I1(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .I2(dbg_stop_instr_fetch_nohalt0__0),
        .I3(\Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0 ),
        .I4(\Performance_Debug_Control.dbg_freeze_nohalt_i_3_n_0 ),
        .I5(\Performance_Debug_Control.dbg_freeze_nohalt_reg_0 ),
        .O(\Performance_Debug_Control.dbg_freeze_nohalt_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFD00)) 
    \Performance_Debug_Control.dbg_freeze_nohalt_i_3 
       (.I0(\Serial_Dbg_Intf.control_reg_reg_n_0_[0] ),
        .I1(start_single_step_reg_n_0),
        .I2(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .I3(\Performance_Debug_Control.dbg_state_nohalt_reg_0 ),
        .I4(reset_bool_for_rst),
        .O(\Performance_Debug_Control.dbg_freeze_nohalt_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.dbg_freeze_nohalt_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performance_Debug_Control.dbg_freeze_nohalt_i_1_n_0 ),
        .Q(\Performance_Debug_Control.dbg_freeze_nohalt_reg_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.dbg_hit_reg[0] 
       (.C(Clk),
        .CE(wb_Halted),
        .D(wb_dbg_hit),
        .Q(Raw),
        .R(reset_bool_for_rst));
  LUT6 #(
    .INIT(64'hA888FFFFA8880000)) 
    \Performance_Debug_Control.dbg_state_nohalt_i_1 
       (.I0(dbg_freeze_nohalt0_in),
        .I1(\Serial_Dbg_Intf.control_reg_reg_n_0_[0] ),
        .I2(saved_reset_mode_dbg_halt),
        .I3(dbg_halt_reset_mode_reg_0),
        .I4(\Performance_Debug_Control.dbg_state_nohalt_i_3_n_0 ),
        .I5(\Performance_Debug_Control.dbg_state_nohalt_reg_0 ),
        .O(\Performance_Debug_Control.dbg_state_nohalt_i_1_n_0 ));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h0054)) 
    \Performance_Debug_Control.dbg_state_nohalt_i_2 
       (.I0(reset_bool_for_rst),
        .I1(dbg_halt_reset_mode_reg_0),
        .I2(wb_Halted),
        .I3(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .O(dbg_freeze_nohalt0_in));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFFFEFE)) 
    \Performance_Debug_Control.dbg_state_nohalt_i_3 
       (.I0(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .I1(reset_bool_for_rst),
        .I2(dbg_stop_instr_fetch_nohalt0__0),
        .I3(\Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0 ),
        .I4(dbg_stop_instr_fetch_nohalt124_out__0),
        .I5(\Performance_Debug_Control.dbg_state_nohalt_i_4_n_0 ),
        .O(\Performance_Debug_Control.dbg_state_nohalt_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h07)) 
    \Performance_Debug_Control.dbg_state_nohalt_i_4 
       (.I0(dbg_halt_reset_mode_reg_0),
        .I1(saved_reset_mode_dbg_halt),
        .I2(\Serial_Dbg_Intf.control_reg_reg_n_0_[0] ),
        .O(\Performance_Debug_Control.dbg_state_nohalt_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.dbg_state_nohalt_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performance_Debug_Control.dbg_state_nohalt_i_1_n_0 ),
        .Q(\Performance_Debug_Control.dbg_state_nohalt_reg_0 ),
        .R(1'b0));
  (* OPT_MODIFIED = "RETARGET PROPCONST" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Performance_Debug_Control.dbg_stop_i_i_1 
       (.I0(\Performance_Debug_Control.dbg_stop_i_reg_n_0 ),
        .I1(dbg_stop_i),
        .O(\Performance_Debug_Control.dbg_stop_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.dbg_stop_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performance_Debug_Control.dbg_stop_i_i_1_n_0 ),
        .Q(\Performance_Debug_Control.dbg_stop_i_reg_n_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000000000FE)) 
    \Performance_Debug_Control.dbg_stop_if_delay_i_i_1 
       (.I0(\Performance_Debug_Control.dbg_state_nohalt_reg_0 ),
        .I1(wb_Halted),
        .I2(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I3(reset_bool_for_rst),
        .I4(saved_reset_mode_sleep),
        .I5(dbg_halt_reset_mode_reg_0),
        .O(\Performance_Debug_Control.dbg_stop_if_delay_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.dbg_stop_if_delay_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performance_Debug_Control.dbg_stop_if_delay_i_i_1_n_0 ),
        .Q(LOCKSTEP_Master_Out[32]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0000FE02)) 
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1 
       (.I0(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I1(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2_n_0 ),
        .I2(reset_bool_for_rst),
        .I3(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_1 ),
        .I4(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .O(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEFEFEFEFEEEFEEEE)) 
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2 
       (.I0(dbg_halt_reset_mode_reg_0),
        .I1(wb_Halted),
        .I2(\Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0 ),
        .I3(Sleep_Out),
        .I4(saved_reset_mode_sleep),
        .I5(dbg_stop_instr_fetch_nohalt124_out__0),
        .O(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hAAA8AAAA)) 
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_4 
       (.I0(\Performance_Debug_Control.dbg_state_nohalt_reg_0 ),
        .I1(reset_bool_for_rst),
        .I2(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .I3(start_single_step_reg_n_0),
        .I4(\Serial_Dbg_Intf.control_reg_reg_n_0_[0] ),
        .O(dbg_stop_instr_fetch_nohalt124_out__0));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_1_n_0 ),
        .Q(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.ex_brki_hit_reg 
       (.C(Clk),
        .CE(of_piperun_for_ce),
        .D(\Performance_Debug_Control.ex_brki_hit_reg_0 ),
        .Q(ex_brki_hit),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.ex_dbg_hit_reg[0] 
       (.C(Clk),
        .CE(of_piperun_for_ce),
        .D(\Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_0 ),
        .Q(ex_pc_brk),
        .R(reset_bool_for_rst));
  LUT3 #(
    .INIT(8'h8F)) 
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_4 
       (.I0(normal_stop_i),
        .I1(dbg_clean_stop),
        .I2(single_Step_N),
        .O(\Performance_Debug_Control.ex_dbg_pc_hit_i_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_1 ),
        .Q(LOCKSTEP_Master_Out[35]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_2 ),
        .Q(\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_n_0 ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.ex_step_continue_hold_reg 
       (.C(Clk),
        .CE(of_piperun_for_ce),
        .D(step_continue_hold),
        .Q(ex_step_continue_hold),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.force_stop_cmd_1_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Serial_Dbg_Intf.force_stop_cmd_i_reg_0 ),
        .Q(force_stop_cmd_1),
        .R(reset_bool_for_rst));
  LUT6 #(
    .INIT(64'h000000000000AABA)) 
    \Performance_Debug_Control.force_stop_i_i_1 
       (.I0(force_stop_i),
        .I1(\Serial_Dbg_Intf.force_stop_cmd_i_reg_0 ),
        .I2(force_stop_cmd_1),
        .I3(\Performance_Debug_Control.dbg_state_nohalt_reg_0 ),
        .I4(reset_bool_for_rst),
        .I5(wb_Halted),
        .O(\Performance_Debug_Control.force_stop_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.force_stop_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performance_Debug_Control.force_stop_i_i_1_n_0 ),
        .Q(force_stop_i),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Performance_Debug_Control.force_stop_overrun_i_1 
       (.I0(force_stop_cmd_1),
        .I1(\Serial_Dbg_Intf.force_stop_cmd_i_reg_0 ),
        .O(force_stop_i1));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.force_stop_overrun_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(force_stop_i1),
        .Q(force_stop_overrun),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.m0_brki_hit_reg 
       (.C(Clk),
        .CE(ex_piperun_for_ce),
        .D(ex_brki_hit),
        .Q(m0_brki_hit),
        .R(reset_bool_for_rst));
  LUT3 #(
    .INIT(8'hBA)) 
    \Performance_Debug_Control.m0_dbg_hit[0]_i_1 
       (.I0(ex_pc_brk),
        .I1(ex_step_continue_hold),
        .I2(\Performance_Debug_Control.m0_dbg_hit_reg_n_0_[0] ),
        .O(\Performance_Debug_Control.m0_dbg_hit[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.m0_dbg_hit_reg[0] 
       (.C(Clk),
        .CE(ex_piperun_for_ce),
        .D(\Performance_Debug_Control.m0_dbg_hit[0]_i_1_n_0 ),
        .Q(\Performance_Debug_Control.m0_dbg_hit_reg_n_0_[0] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.normal_stop_cmd_1_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0 ),
        .Q(normal_stop_cmd_1),
        .R(reset_bool_for_rst));
  LUT6 #(
    .INIT(64'h000000000000AABA)) 
    \Performance_Debug_Control.normal_stop_i_i_1 
       (.I0(normal_stop_i),
        .I1(\Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0 ),
        .I2(normal_stop_cmd_1),
        .I3(\Performance_Debug_Control.dbg_state_nohalt_reg_0 ),
        .I4(reset_bool_for_rst),
        .I5(wb_Halted),
        .O(\Performance_Debug_Control.normal_stop_i_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.normal_stop_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performance_Debug_Control.normal_stop_i_i_1_n_0 ),
        .Q(normal_stop_i),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0F0E)) 
    \Performance_Debug_Control.step_continue_hold_i_1 
       (.I0(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .I1(start_single_step_reg_n_0),
        .I2(of_piperun_for_ce),
        .I3(step_continue_hold),
        .O(\Performance_Debug_Control.step_continue_hold_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.step_continue_hold_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Performance_Debug_Control.step_continue_hold_i_1_n_0 ),
        .Q(step_continue_hold),
        .R(reset_bool_for_rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.wb_brki_hit_reg 
       (.C(Clk),
        .CE(m2_piperun_for_ce),
        .D(m0_brki_hit),
        .Q(wb_brki_hit),
        .R(reset_bool_for_rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Performance_Debug_Control.wb_dbg_hit_reg[0] 
       (.C(Clk),
        .CE(m2_piperun_for_ce),
        .D(\Performance_Debug_Control.m0_dbg_hit_reg_n_0_[0] ),
        .Q(wb_dbg_hit),
        .R(reset_bool_for_rst));
  LUT5 #(
    .INIT(32'h00000010)) 
    \Serial_Dbg_Intf.Instr_Insert_Reg_En_1_i_1 
       (.I0(Dbg_Reg_En_0_sn_1),
        .I1(Dbg_Reg_En[6]),
        .I2(Dbg_Reg_En[5]),
        .I3(Dbg_Reg_En[4]),
        .I4(Dbg_Reg_En[7]),
        .O(Instr_Insert_Reg_En));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.Instr_Insert_Reg_En_1_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(Instr_Insert_Reg_En),
        .Q(Instr_Insert_Reg_En_1));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Dbg_Instr2_TCK_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(New_Dbg_Instr_TCK),
        .Q(New_Dbg_Instr2_TCK));
  LUT4 #(
    .INIT(16'h0008)) 
    \Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_1 
       (.I0(New_Dbg_Instr_TCK2),
        .I1(Instr_Insert_Reg_En),
        .I2(instr_read_reg[1]),
        .I3(instr_read_reg[0]),
        .O(New_Dbg_Instr_TCK0));
  LUT5 #(
    .INIT(32'h40000000)) 
    \Serial_Dbg_Intf.New_Dbg_Instr_TCK_i_2 
       (.I0(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I1(A1),
        .I2(sel0_2),
        .I3(A3),
        .I4(A2),
        .O(New_Dbg_Instr_TCK2));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Dbg_Instr_TCK_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(New_Dbg_Instr_TCK0),
        .Q(New_Dbg_Instr_TCK));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[0] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[1] ),
        .Q(LOCKSTEP_Master_Out[31]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[10] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[11] ),
        .Q(LOCKSTEP_Master_Out[21]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[11] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[12] ),
        .Q(LOCKSTEP_Master_Out[20]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[12] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[13] ),
        .Q(LOCKSTEP_Master_Out[19]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[13] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[14] ),
        .Q(LOCKSTEP_Master_Out[18]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[14] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[15] ),
        .Q(LOCKSTEP_Master_Out[17]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[15] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[16] ),
        .Q(LOCKSTEP_Master_Out[16]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[16] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[17] ),
        .Q(LOCKSTEP_Master_Out[15]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[17] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[18] ),
        .Q(LOCKSTEP_Master_Out[14]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[18] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[19] ),
        .Q(LOCKSTEP_Master_Out[13]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[19] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[20] ),
        .Q(LOCKSTEP_Master_Out[12]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[1] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[2] ),
        .Q(LOCKSTEP_Master_Out[30]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[20] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[21] ),
        .Q(LOCKSTEP_Master_Out[11]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[21] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[22] ),
        .Q(LOCKSTEP_Master_Out[10]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[22] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[23] ),
        .Q(LOCKSTEP_Master_Out[9]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[23] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[24] ),
        .Q(LOCKSTEP_Master_Out[8]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[24] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[25] ),
        .Q(LOCKSTEP_Master_Out[7]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[25] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[26] ),
        .Q(LOCKSTEP_Master_Out[6]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[26] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[27] ),
        .Q(LOCKSTEP_Master_Out[5]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[27] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[28] ),
        .Q(LOCKSTEP_Master_Out[4]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[28] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[29] ),
        .Q(LOCKSTEP_Master_Out[3]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[29] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[30] ),
        .Q(LOCKSTEP_Master_Out[2]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[2] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[3] ),
        .Q(LOCKSTEP_Master_Out[29]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[30] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[31] ),
        .Q(LOCKSTEP_Master_Out[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[31] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(Dbg_TDI),
        .Q(LOCKSTEP_Master_Out[0]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[3] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[4] ),
        .Q(LOCKSTEP_Master_Out[28]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[4] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[5] ),
        .Q(LOCKSTEP_Master_Out[27]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[5] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[6] ),
        .Q(LOCKSTEP_Master_Out[26]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[6] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[7] ),
        .Q(LOCKSTEP_Master_Out[25]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[7] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[8] ),
        .Q(LOCKSTEP_Master_Out[24]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[8] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[9] ),
        .Q(LOCKSTEP_Master_Out[23]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.New_Instr_Reg_TCK_reg[9] 
       (.C(Dbg_Clk),
        .CE(New_Dbg_Instr_TCK),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[10] ),
        .Q(LOCKSTEP_Master_Out[22]));
  system_microblaze_0_0__MB_SRL16E \Serial_Dbg_Intf.SRL16E_1 
       (.Dbg_Clk(Dbg_Clk),
        .Q({A3,A2,A1,\Serial_Dbg_Intf.shift_count_reg_n_0_[0] }),
        .Q_0(Q_0));
  system_microblaze_0_0__MB_SRL16E__parameterized7 \Serial_Dbg_Intf.SRL16E_3 
       (.Dbg_Clk(Dbg_Clk),
        .Q({A3,A2,A1,\Serial_Dbg_Intf.shift_count_reg_n_0_[0] }),
        .tdo_config_word1_5(tdo_config_word1_5));
  system_microblaze_0_0__MB_SRL16E__parameterized9 \Serial_Dbg_Intf.SRL16E_4 
       (.Config_Reg_En(Config_Reg_En),
        .Data_Read_Reg_En(Data_Read_Reg_En),
        .Dbg_Clk(Dbg_Clk),
        .Dbg_TDO(Dbg_TDO),
        .Dbg_TDO_INST_0_i_2_0(\Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I_n_0 ),
        .Instr_Insert_Reg_En(Instr_Insert_Reg_En),
        .Q({sel0,sel0_2,A3,A2,A1,\Serial_Dbg_Intf.shift_count_reg_n_0_[0] }),
        .Status_Reg_En(Status_Reg_En),
        .TDO_Data_Reg__31(TDO_Data_Reg__31),
        .TDO_Instr_Reg(TDO_Instr_Reg),
        .TDO_Status_Reg__17(TDO_Status_Reg__17),
        .tdo_config_word1_0(\NLW_Serial_Dbg_Intf.SRL16E_4_tdo_config_word1_0_UNCONNECTED ),
        .tdo_config_word1_1(\NLW_Serial_Dbg_Intf.SRL16E_4_tdo_config_word1_1_UNCONNECTED ),
        .tdo_config_word1_5(tdo_config_word1_5),
        .tdo_config_word1_6(\NLW_Serial_Dbg_Intf.SRL16E_4_tdo_config_word1_6_UNCONNECTED ),
        .tdo_config_word1_7(\NLW_Serial_Dbg_Intf.SRL16E_4_tdo_config_word1_7_UNCONNECTED ));
  system_microblaze_0_0__MB_SRL16E__parameterized3 \Serial_Dbg_Intf.The_Cache_Addresses[1].SRL16E_Cache_I 
       (.Dbg_Clk(Dbg_Clk),
        .Q({A3,A2,A1,\Serial_Dbg_Intf.shift_count_reg_n_0_[0] }),
        .tdo_config_word1_13(tdo_config_word1_13));
  system_microblaze_0_0__MB_SRL16E__parameterized5 \Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I 
       (.Dbg_Clk(Dbg_Clk),
        .Dbg_TDO_INST_0_i_5(\Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_n_0 ),
        .Q({sel0[2:1],sel0_2,A3,A2,A1,\Serial_Dbg_Intf.shift_count_reg_n_0_[0] }),
        .Q_0(Q_0),
        .\Serial_Dbg_Intf.shift_count_reg[6] (\Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I_n_0 ),
        .tdo_config_word1_13(tdo_config_word1_13),
        .tdo_config_word1_14(\NLW_Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I_tdo_config_word1_14_UNCONNECTED ));
  system_microblaze_0_0__MB_SRL16E__parameterized3_21 \Serial_Dbg_Intf.The_Cache_Addresses[5].SRL16E_Cache_I 
       (.Dbg_Clk(Dbg_Clk),
        .Q({A3,A2,A1,\Serial_Dbg_Intf.shift_count_reg_n_0_[0] }),
        .tdo_config_word1_9(tdo_config_word1_9));
  system_microblaze_0_0__MB_SRL16E__parameterized5_22 \Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I 
       (.Dbg_Clk(Dbg_Clk),
        .Q({sel0[1],sel0_2,A3,A2,A1,\Serial_Dbg_Intf.shift_count_reg_n_0_[0] }),
        .\Serial_Dbg_Intf.shift_count_reg[5] (\Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_n_0 ),
        .tdo_config_word1_10(\NLW_Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_tdo_config_word1_10_UNCONNECTED ),
        .tdo_config_word1_11(\NLW_Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I_tdo_config_word1_11_UNCONNECTED ),
        .tdo_config_word1_9(tdo_config_word1_9));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.capture_1_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(Dbg_Capture),
        .Q(capture_1));
  LUT5 #(
    .INIT(32'h00000010)) 
    \Serial_Dbg_Intf.command_reg[0]_i_1 
       (.I0(Dbg_Reg_En_0_sn_1),
        .I1(Dbg_Reg_En[7]),
        .I2(Dbg_Reg_En[6]),
        .I3(Dbg_Reg_En[4]),
        .I4(Dbg_Reg_En[5]),
        .O(Command_Reg_En));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.command_reg_reg[0] 
       (.C(Dbg_Update),
        .CE(Command_Reg_En),
        .CLR(command_reg_clear),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[30] ),
        .Q(command_reg[0]));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.command_reg_reg[1] 
       (.C(Dbg_Update),
        .CE(Command_Reg_En),
        .CLR(command_reg_clear),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[31] ),
        .Q(command_reg[1]));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.continue_from_brk_TClk_reg 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[24] ),
        .Q(continue_from_brk_TClk));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.continue_from_brk_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(continue_from_brk0),
        .Q(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .R(reset_bool_for_rst));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.control_reg_reg[0] 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[22] ),
        .Q(\Serial_Dbg_Intf.control_reg_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.control_reg_reg[4] 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[26] ),
        .Q(\Serial_Dbg_Intf.control_reg_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.control_reg_reg[5] 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[27] ),
        .Q(\Serial_Dbg_Intf.control_reg_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.control_reg_reg[8] 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[30] ),
        .Q(Q));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[0] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[0]),
        .Q(data_read_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[10] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[10]),
        .Q(data_read_reg[10]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[11] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[11]),
        .Q(data_read_reg[11]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[12] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[12]),
        .Q(data_read_reg[12]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[13] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[13]),
        .Q(data_read_reg[13]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[14] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[14]),
        .Q(data_read_reg[14]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[15] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[15]),
        .Q(data_read_reg[15]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[16] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[16]),
        .Q(data_read_reg[16]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[17] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[17]),
        .Q(data_read_reg[17]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[18] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[18]),
        .Q(data_read_reg[18]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[19] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[19]),
        .Q(data_read_reg[19]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[1] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[1]),
        .Q(data_read_reg[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[20] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[20]),
        .Q(data_read_reg[20]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[21] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[21]),
        .Q(data_read_reg[21]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[22] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[22]),
        .Q(data_read_reg[22]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[23] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[23]),
        .Q(data_read_reg[23]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[24] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[24]),
        .Q(data_read_reg[24]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[25] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[25]),
        .Q(data_read_reg[25]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[26] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[26]),
        .Q(data_read_reg[26]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[27] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[27]),
        .Q(data_read_reg[27]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[28] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[28]),
        .Q(data_read_reg[28]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[29] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[29]),
        .Q(data_read_reg[29]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[2] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[2]),
        .Q(data_read_reg[2]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[30] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[30]),
        .Q(data_read_reg[30]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[31] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[31]),
        .Q(data_read_reg[31]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[32] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[32]),
        .Q(data_read_reg[32]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[3] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[3]),
        .Q(data_read_reg[3]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[4] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[4]),
        .Q(data_read_reg[4]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[5] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[5]),
        .Q(data_read_reg[5]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[6] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[6]),
        .Q(data_read_reg[6]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[7] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[7]),
        .Q(data_read_reg[7]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[8] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[8]),
        .Q(data_read_reg[8]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.data_read_reg_reg[9] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(data_rd_reg[9]),
        .Q(data_read_reg[9]));
  LUT5 #(
    .INIT(32'h00000010)) 
    \Serial_Dbg_Intf.dbg_wakeup_i_i_1 
       (.I0(Dbg_Reg_En_0_sn_1),
        .I1(Dbg_Reg_En[6]),
        .I2(Dbg_Reg_En[7]),
        .I3(Dbg_Reg_En[4]),
        .I4(Dbg_Reg_En[5]),
        .O(Control_Reg_En));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \Serial_Dbg_Intf.dbg_wakeup_i_i_3 
       (.I0(Dbg_Reg_En[0]),
        .I1(Dbg_Reg_En[1]),
        .I2(Dbg_Reg_En[3]),
        .I3(Dbg_Reg_En[2]),
        .O(Dbg_Reg_En_0_sn_1));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.force_stop_TClk_reg 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(\Serial_Dbg_Intf.force_stop_cmd_i_reg_0 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[29] ),
        .Q(force_stop_TClk));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.force_stop_cmd_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(force_stop_cmd_i0),
        .Q(\Serial_Dbg_Intf.force_stop_cmd_i_reg_0 ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.if_debug_ready_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(if_debug_ready_i0),
        .Q(LOCKSTEP_Master_Out[36]),
        .R(reset_bool_for_rst));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.instr_read_reg_reg[0] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(instr_rd_reg),
        .Q(instr_read_reg[0]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.instr_read_reg_reg[1] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(exception_reg_0),
        .Q(instr_read_reg[1]));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(Instr_Insert_Reg_En_1),
        .Q(\Serial_Dbg_Intf.new_dbg_instr_shifting_CLK_reg_n_0 ),
        .R(reset_bool_for_rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.normal_stop_TClk_reg 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(\Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0 ),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[28] ),
        .Q(normal_stop_TClk));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.normal_stop_cmd_i_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(normal_stop_cmd_i0),
        .Q(\Serial_Dbg_Intf.normal_stop_cmd_i_reg_n_0 ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.read_register_MSR_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(read_register_MSR0),
        .Q(read_register_MSR),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.read_register_PC_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(read_register_PC0),
        .Q(read_register_PC),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.sample_synced_1_reg[0] 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[0]),
        .Q(\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[0] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.sample_synced_1_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[1]),
        .Q(\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[1] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.sample_synced_1_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[2]),
        .Q(\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[2] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.sample_synced_1_reg[3] 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[3]),
        .Q(\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[3] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.sample_synced_1_reg[4] 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[4]),
        .Q(\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[4] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.sample_synced_1_reg[5] 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[5]),
        .Q(p_0_in_1),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.sample_synced_1_reg[6] 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[6]),
        .Q(\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[6] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.sample_synced_1_reg[7] 
       (.C(Clk),
        .CE(1'b1),
        .D(sample_synced[7]),
        .Q(p_0_in39_in),
        .R(reset_bool_for_rst));
  LUT2 #(
    .INIT(4'h2)) 
    \Serial_Dbg_Intf.shift_count[0]_i_1 
       (.I0(Dbg_Shift),
        .I1(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .O(\Serial_Dbg_Intf.shift_count[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT3 #(
    .INIT(8'h60)) 
    \Serial_Dbg_Intf.shift_count[1]_i_1 
       (.I0(A1),
        .I1(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I2(Dbg_Shift),
        .O(p_0_in[1]));
  LUT4 #(
    .INIT(16'h6A00)) 
    \Serial_Dbg_Intf.shift_count[2]_i_1 
       (.I0(A2),
        .I1(A1),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(Dbg_Shift),
        .O(p_0_in[2]));
  LUT5 #(
    .INIT(32'h6AAA0000)) 
    \Serial_Dbg_Intf.shift_count[3]_i_1 
       (.I0(A3),
        .I1(A2),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A1),
        .I4(Dbg_Shift),
        .O(p_0_in[3]));
  LUT6 #(
    .INIT(64'h6AAAAAAA00000000)) 
    \Serial_Dbg_Intf.shift_count[4]_i_1 
       (.I0(sel0_2),
        .I1(A3),
        .I2(A1),
        .I3(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I4(A2),
        .I5(Dbg_Shift),
        .O(p_0_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT3 #(
    .INIT(8'h60)) 
    \Serial_Dbg_Intf.shift_count[5]_i_1 
       (.I0(sel0[1]),
        .I1(\Serial_Dbg_Intf.shift_count[5]_i_2_n_0 ),
        .I2(Dbg_Shift),
        .O(p_0_in[5]));
  LUT5 #(
    .INIT(32'h80000000)) 
    \Serial_Dbg_Intf.shift_count[5]_i_2 
       (.I0(sel0_2),
        .I1(A2),
        .I2(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I3(A1),
        .I4(A3),
        .O(\Serial_Dbg_Intf.shift_count[5]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'h60)) 
    \Serial_Dbg_Intf.shift_count[6]_i_1 
       (.I0(sel0[2]),
        .I1(\Serial_Dbg_Intf.shift_count[7]_i_2_n_0 ),
        .I2(Dbg_Shift),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT4 #(
    .INIT(16'h6A00)) 
    \Serial_Dbg_Intf.shift_count[7]_i_1 
       (.I0(sel0[3]),
        .I1(sel0[2]),
        .I2(\Serial_Dbg_Intf.shift_count[7]_i_2_n_0 ),
        .I3(Dbg_Shift),
        .O(p_0_in[7]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \Serial_Dbg_Intf.shift_count[7]_i_2 
       (.I0(sel0[1]),
        .I1(A3),
        .I2(A1),
        .I3(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ),
        .I4(A2),
        .I5(sel0_2),
        .O(\Serial_Dbg_Intf.shift_count[7]_i_2_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[0] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_count[0]_i_1_n_0 ),
        .Q(\Serial_Dbg_Intf.shift_count_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[1] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(p_0_in[1]),
        .Q(A1));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[2] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(p_0_in[2]),
        .Q(A2));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[3] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(p_0_in[3]),
        .Q(A3));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[4] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(p_0_in[4]),
        .Q(sel0_2));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[5] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(p_0_in[5]),
        .Q(sel0[1]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[6] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(p_0_in[6]),
        .Q(sel0[2]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_count_reg[7] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(p_0_in[7]),
        .Q(sel0[3]));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[10] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[11] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[10] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[11] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[12] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[11] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[12] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[13] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[12] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[13] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[14] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[13] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[14] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[15] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[14] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[15] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[16] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[15] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[16] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[17] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[16] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[17] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[18] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[17] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[18] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[19] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[18] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[19] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[20] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[19] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[1] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[2] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[20] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[21] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[20] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[21] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[22] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[21] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[22] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[23] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[22] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[23] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[24] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[23] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[24] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[25] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[24] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[25] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[26] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[25] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[26] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[27] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[26] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[27] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[28] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[27] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[28] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[29] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[28] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[29] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[30] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[29] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[2] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[3] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[30] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[31] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[30] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[31] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(Dbg_TDI),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[31] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[3] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[4] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[4] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[5] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[5] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[6] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[6] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[7] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[7] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[8] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[7] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[8] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[9] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[8] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.shift_datain_reg[9] 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[10] ),
        .Q(\Serial_Dbg_Intf.shift_datain_reg_n_0_[9] ));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.single_Step_TClk_reg 
       (.C(Dbg_Update),
        .CE(Control_Reg_En),
        .CLR(start_single_step_reg_n_0),
        .D(\Serial_Dbg_Intf.shift_datain_reg_n_0_[23] ),
        .Q(single_Step_TClk));
  FDRE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.start_single_cmd_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(start_single_cmd0),
        .Q(start_single_cmd),
        .R(reset_bool_for_rst));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[0] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(sync),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[16] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.sync_stop_CPU_n_0 ),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[16] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[17] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(reset_bool_for_rst),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[17] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[18] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(Full_32_bit),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[18] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[19] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(delay_slot_instr),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[19] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[20] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(Full_32_bit_1),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[20] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[22] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.status_reg_reg[22]_0 ),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[22] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[23] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(dbg_brki_hit_synced),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[23] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[24] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(running_clock_synced),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[24] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[25] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(D[1]),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[25] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[27] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(sleep_synced),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[27] ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.status_reg_reg[29] 
       (.C(Dbg_Clk),
        .CE(Dbg_Capture),
        .CLR(config_with_scan_reset),
        .D(unchanged),
        .Q(\Serial_Dbg_Intf.status_reg_reg_n_0_[29] ));
  system_microblaze_0_0__mb_sync_bit__parameterized2 \Serial_Dbg_Intf.sync_dbg_brk_hit 
       (.AR(config_with_scan_reset),
        .D(dbg_brki_hit_synced),
        .Dbg_Clk(Dbg_Clk),
        .dbg_brki_hit(dbg_brki_hit));
  system_microblaze_0_0__mb_sync_vec \Serial_Dbg_Intf.sync_dbg_hit 
       (.AR(config_with_scan_reset),
        .D(sync),
        .Dbg_Clk(Dbg_Clk),
        .Raw(Raw),
        .Scan_En(\NLW_Serial_Dbg_Intf.sync_dbg_hit_Scan_En_UNCONNECTED ),
        .Scan_Reset(\NLW_Serial_Dbg_Intf.sync_dbg_hit_Scan_Reset_UNCONNECTED ),
        .Scan_Reset_Sel(\NLW_Serial_Dbg_Intf.sync_dbg_hit_Scan_Reset_Sel_UNCONNECTED ));
  system_microblaze_0_0__mb_sync_bit__parameterized2_26 \Serial_Dbg_Intf.sync_running_clock 
       (.AR(config_with_scan_reset),
        .D(running_clock_synced),
        .Dbg_Clk(Dbg_Clk),
        .running_clock(running_clock));
  system_microblaze_0_0__mb_sync_vec__parameterized1 \Serial_Dbg_Intf.sync_sample 
       (.Clk(Clk),
        .D(normal_stop_TClk),
        .Dbg_Trig_Ack_In(\NLW_Serial_Dbg_Intf.sync_sample_Dbg_Trig_Ack_In_UNCONNECTED [0]),
        .Dbg_Trig_Ack_Out(\NLW_Serial_Dbg_Intf.sync_sample_Dbg_Trig_Ack_Out_UNCONNECTED [0]),
        .Dbg_Trig_In(\NLW_Serial_Dbg_Intf.sync_sample_Dbg_Trig_In_UNCONNECTED [0]),
        .Dbg_Trig_Out(Dbg_Trig_Out[0]),
        .Q({\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[0] ,\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[1] ,\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[2] ,\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[3] ,\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[4] ,p_0_in_1,\Serial_Dbg_Intf.sample_synced_1_reg_n_0_[6] ,p_0_in39_in,\NLW_Serial_Dbg_Intf.sync_sample_Q_UNCONNECTED [0]}),
        .\Serial_Dbg_Intf.trig_ack_out_1_reg (\NLW_Serial_Dbg_Intf.sync_sample_Serial_Dbg_Intf.trig_ack_out_1_reg_UNCONNECTED ),
        .\Synchronize.use_sync_reset.sync_reg[1] (force_stop_TClk),
        .\Synchronize.use_sync_reset.sync_reg[1]_0 (single_Step_TClk),
        .\Synchronize.use_sync_reset.sync_reg[1]_1 ({command_reg[0],command_reg[1]}),
        .\Synchronize.use_sync_reset.sync_reg[1]_2 (continue_from_brk_TClk),
        .\Synchronize.use_sync_reset.sync_reg[1]_3 (New_Dbg_Instr2_TCK),
        .\Synchronize.use_sync_reset.sync_reg[1]_4 (\NLW_Serial_Dbg_Intf.sync_sample_Synchronize.use_sync_reset.sync_reg[1]_4_UNCONNECTED [0]),
        .\Use_Async_Reset.sync_reset_reg (\NLW_Serial_Dbg_Intf.sync_sample_Use_Async_Reset.sync_reset_reg_UNCONNECTED ),
        .continue_from_brk0(continue_from_brk0),
        .force_stop_cmd_i0(force_stop_cmd_i0),
        .if_debug_ready_i0(if_debug_ready_i0),
        .normal_stop_cmd_i0(normal_stop_cmd_i0),
        .read_register_MSR0(read_register_MSR0),
        .read_register_PC0(read_register_PC0),
        .sample_synced({sample_synced[0:7],\NLW_Serial_Dbg_Intf.sync_sample_sample_synced_UNCONNECTED [8:9]}),
        .start_single_cmd0(start_single_cmd0),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__mb_sync_bit__parameterized2_27 \Serial_Dbg_Intf.sync_sleep 
       (.AR(config_with_scan_reset),
        .D(sleep_synced),
        .Dbg_Clk(Dbg_Clk),
        .Sleep(Sleep));
  system_microblaze_0_0__mb_sync_bit__parameterized2_28 \Serial_Dbg_Intf.sync_stop_CPU 
       (.AR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.sync_stop_CPU_n_0 ),
        .Dbg_Clk(Dbg_Clk),
        .\Single_Synchronize.use_async_reset.sync_reg_0 (\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00001000)) 
    \Serial_Dbg_Intf.unchanged_i_1 
       (.I0(Dbg_Reg_En[5]),
        .I1(Dbg_Reg_En[4]),
        .I2(Dbg_Reg_En[7]),
        .I3(Dbg_Reg_En[6]),
        .I4(Dbg_Reg_En_0_sn_1),
        .I5(unchanged),
        .O(\Serial_Dbg_Intf.unchanged_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \Serial_Dbg_Intf.unchanged_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(config_with_scan_reset),
        .D(\Serial_Dbg_Intf.unchanged_i_1_n_0 ),
        .Q(unchanged));
  LUT2 #(
    .INIT(4'hB)) 
    \Using_FPGA.Native_i_1__3 
       (.I0(LOCKSTEP_Master_Out[32]),
        .I1(LOCKSTEP_Master_Out[35]),
        .O(\Performance_Debug_Control.dbg_stop_if_delay_i_reg_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \Using_FPGA.Native_i_1__55 
       (.I0(LOCKSTEP_Master_Out[32]),
        .O(\Performance_Debug_Control.dbg_stop_if_delay_i_reg_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_1__9 
       (.I0(LOCKSTEP_Master_Out[35]),
        .I1(LOCKSTEP_Master_Out[32]),
        .O(ex_exception_no_load_store_mask));
  LUT4 #(
    .INIT(16'hD000)) 
    \Using_FPGA.Native_i_4 
       (.I0(LOCKSTEP_Master_Out[35]),
        .I1(LOCKSTEP_Master_Out[32]),
        .I2(ex_valid),
        .I3(\Using_FPGA.Native_i_2__20 ),
        .O(ex_MSR_Load_ALU_C));
  LUT4 #(
    .INIT(16'hD000)) 
    \Using_FPGA.Native_i_5 
       (.I0(LOCKSTEP_Master_Out[35]),
        .I1(LOCKSTEP_Master_Out[32]),
        .I2(ex_valid),
        .I3(ex_load_shift_carry),
        .O(ex_MSR_Load_Shift_C));
  LUT4 #(
    .INIT(16'hD000)) 
    \Using_LWX_SWX_instr.ex_reservation_i_3 
       (.I0(LOCKSTEP_Master_Out[35]),
        .I1(LOCKSTEP_Master_Out[32]),
        .I2(ex_valid),
        .I3(\Using_LWX_SWX_instr.ex_reservation_i_2 ),
        .O(ex_MSR_Set_SW_BIP));
  system_microblaze_0_0__address_hit \Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I 
       (.Address(Address),
        .Dbg_Clk(Dbg_Clk),
        .Dbg_Reg_En(Dbg_Reg_En),
        .Dbg_TDI(Dbg_TDI),
        .Hit(\Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_0 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_i_2 (\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_reg (ex_piperun_for_ce),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0 (LOCKSTEP_Master_Out[35]),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg (\Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_1 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 (\Performance_Debug_Control.dbg_stop_i_reg_n_0 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1 (\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_2 (\Performance_Debug_Control.ex_dbg_pc_hit_i_i_4_n_0 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_3 (of_piperun_for_ce),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_4 (\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_n_0 ),
        .Q({\Serial_Dbg_Intf.control_reg_reg_n_0_[0] ,Q}),
        .ex_Exception_Taken(ex_Exception_Taken),
        .force_stop_i(force_stop_i),
        .mem_Exception_Taken(mem_Exception_Taken),
        .single_Step_N(single_Step_N),
        .single_Step_N_reg(\Using_PC_Breakpoints.All_PC_Brks[0].Serial_Interface_1.address_hit_I_n_2 ));
  LUT3 #(
    .INIT(8'h8A)) 
    Write_Strobe_INST_0_i_1
       (.I0(ex_valid),
        .I1(LOCKSTEP_Master_Out[32]),
        .I2(LOCKSTEP_Master_Out[35]),
        .O(p_232_in));
  LUT2 #(
    .INIT(4'hE)) 
    command_reg_clear_i_1
       (.I0(read_register_PC_1),
        .I1(read_register_MSR_1),
        .O(command_reg_clear_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    command_reg_clear_reg
       (.C(Clk),
        .CE(1'b1),
        .D(command_reg_clear_i_1_n_0),
        .Q(command_reg_clear),
        .R(reset_bool_for_rst));
  LUT4 #(
    .INIT(16'hFFF8)) 
    \data_rd_reg[0]_i_1 
       (.I0(wb_gpr_write_dbg),
        .I1(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(read_register_MSR_1),
        .I3(read_register_PC_1),
        .O(\data_rd_reg[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hCEAACFFFCEAACC00)) 
    \data_rd_reg[32]_i_1 
       (.I0(\data_rd_reg[32]_i_2_n_0 ),
        .I1(wb_gpr_write_dbg),
        .I2(LOCKSTEP_Master_Out[36]),
        .I3(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I4(\data_rd_reg[32]_i_3_n_0 ),
        .I5(data_rd_reg[32]),
        .O(\data_rd_reg[32]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \data_rd_reg[32]_i_2 
       (.I0(read_register_MSR_1),
        .I1(\Performance_Debug_Control.dbg_freeze_nohalt_reg_0 ),
        .I2(wb_pc_valid),
        .O(\data_rd_reg[32]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \data_rd_reg[32]_i_3 
       (.I0(read_register_MSR_1),
        .I1(read_register_PC_1),
        .O(\data_rd_reg[32]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[0] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [31]),
        .Q(data_rd_reg[0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[10] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [21]),
        .Q(data_rd_reg[10]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[11] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [20]),
        .Q(data_rd_reg[11]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[12] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [19]),
        .Q(data_rd_reg[12]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[13] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [18]),
        .Q(data_rd_reg[13]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[14] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [17]),
        .Q(data_rd_reg[14]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[15] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [16]),
        .Q(data_rd_reg[15]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[16] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [15]),
        .Q(data_rd_reg[16]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[17] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [14]),
        .Q(data_rd_reg[17]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[18] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [13]),
        .Q(data_rd_reg[18]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[19] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [12]),
        .Q(data_rd_reg[19]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[1] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [30]),
        .Q(data_rd_reg[1]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[20] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [11]),
        .Q(data_rd_reg[20]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[21] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [10]),
        .Q(data_rd_reg[21]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[22] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [9]),
        .Q(data_rd_reg[22]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[23] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [8]),
        .Q(data_rd_reg[23]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[24] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [7]),
        .Q(data_rd_reg[24]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[25] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [6]),
        .Q(data_rd_reg[25]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[26] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [5]),
        .Q(data_rd_reg[26]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[27] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [4]),
        .Q(data_rd_reg[27]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[28] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [3]),
        .Q(data_rd_reg[28]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[29] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [2]),
        .Q(data_rd_reg[29]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[2] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [29]),
        .Q(data_rd_reg[2]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[30] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [1]),
        .Q(data_rd_reg[30]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[31] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [0]),
        .Q(data_rd_reg[31]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[32] 
       (.C(Clk),
        .CE(1'b1),
        .D(\data_rd_reg[32]_i_1_n_0 ),
        .Q(data_rd_reg[32]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[3] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [28]),
        .Q(data_rd_reg[3]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[4] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [27]),
        .Q(data_rd_reg[4]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[5] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [26]),
        .Q(data_rd_reg[5]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[6] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [25]),
        .Q(data_rd_reg[6]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[7] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [24]),
        .Q(data_rd_reg[7]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[8] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [23]),
        .Q(data_rd_reg[8]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \data_rd_reg_reg[9] 
       (.C(Clk),
        .CE(\data_rd_reg[0]_i_1_n_0 ),
        .D(\data_rd_reg_reg[0]_0 [22]),
        .Q(data_rd_reg[9]),
        .R(reset_bool_for_rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    dbg_halt_reset_mode_i_1
       (.I0(dbg_halt_reset_mode_reg_0),
        .I1(\Serial_Dbg_Intf.control_reg_reg_n_0_[0] ),
        .I2(p_10_in),
        .I3(reset_bool_for_rst),
        .O(dbg_halt_reset_mode_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    dbg_halt_reset_mode_i_2
       (.I0(start_single_step_reg_n_0),
        .I1(\Serial_Dbg_Intf.continue_from_brk_reg_n_0 ),
        .O(p_10_in));
  FDRE #(
    .INIT(1'b0)) 
    dbg_halt_reset_mode_reg
       (.C(Clk),
        .CE(1'b1),
        .D(dbg_halt_reset_mode_i_1_n_0),
        .Q(dbg_halt_reset_mode_reg_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    delay_slot_instr_reg
       (.C(Clk),
        .CE(wb_Halted),
        .D(D[0]),
        .Q(delay_slot_instr),
        .R(reset_bool_for_rst));
  LUT4 #(
    .INIT(16'h0002)) 
    exception_i_1
       (.I0(exception_reg_1),
        .I1(force_stop_overrun),
        .I2(start_dbg_exec_reg_n_0),
        .I3(reset_bool_for_rst),
        .O(exception_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    exception_reg
       (.C(Clk),
        .CE(1'b1),
        .D(exception_i_1_n_0),
        .Q(exception_reg_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h000000000000EECE)) 
    executing_i_1
       (.I0(instr_rd_reg),
        .I1(start_dbg_exec_reg_n_0),
        .I2(executing_reg_0),
        .I3(wb_Halted),
        .I4(reset_bool_for_rst),
        .I5(force_stop_overrun),
        .O(executing_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    executing_reg
       (.C(Clk),
        .CE(1'b1),
        .D(executing_i_1_n_0),
        .Q(instr_rd_reg),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h40)) 
    mem_exception_from_ex_i_1
       (.I0(LOCKSTEP_Master_Out[32]),
        .I1(LOCKSTEP_Master_Out[35]),
        .I2(ex_valid),
        .O(ex_Exception_Taken));
  FDRE #(
    .INIT(1'b0)) 
    read_register_MSR_1_reg
       (.C(Clk),
        .CE(1'b1),
        .D(read_register_MSR),
        .Q(read_register_MSR_1),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    read_register_PC_1_reg
       (.C(Clk),
        .CE(1'b1),
        .D(read_register_PC),
        .Q(read_register_PC_1),
        .R(reset_bool_for_rst));
  (* OPT_MODIFIED = "RETARGET" *) 
  FDCE #(
    .INIT(1'b0)) 
    running_clock_reg
       (.C(Clk),
        .CE(1'b1),
        .CLR(capture_1),
        .D(1'b1),
        .Q(running_clock));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT2 #(
    .INIT(4'h4)) 
    saved_reset_mode_dbg_halt_i_1
       (.I0(reset_bool_for_rst),
        .I1(saved_reset_mode_dbg_halt),
        .O(saved_reset_mode_dbg_halt_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    saved_reset_mode_dbg_halt_reg
       (.C(Clk),
        .CE(1'b1),
        .D(saved_reset_mode_dbg_halt_i_1_n_0),
        .Q(saved_reset_mode_dbg_halt),
        .R(1'b0));
  (* OPT_MODIFIED = "RETARGET" *) 
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'h2)) 
    saved_reset_mode_sleep_i_1
       (.I0(Sleep_Out),
        .I1(reset_bool_for_rst),
        .O(saved_reset_mode_sleep_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    saved_reset_mode_sleep_reg
       (.C(Clk),
        .CE(1'b1),
        .D(saved_reset_mode_sleep_i_1_n_0),
        .Q(saved_reset_mode_sleep),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hFD)) 
    single_Step_N_i_1
       (.I0(start_single_step_reg_n_0),
        .I1(single_step_count[1]),
        .I2(single_step_count[0]),
        .O(single_Step_N_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    single_Step_N_reg
       (.C(Clk),
        .CE(of_piperun_for_ce),
        .D(single_Step_N_i_1_n_0),
        .Q(single_Step_N),
        .S(reset_bool_for_rst));
  LUT5 #(
    .INIT(32'hAACF55C0)) 
    \single_step_count[0]_i_1 
       (.I0(single_step_count[1]),
        .I1(\Serial_Dbg_Intf.control_reg_reg_n_0_[4] ),
        .I2(start_single_cmd),
        .I3(of_piperun_for_ce),
        .I4(single_step_count[0]),
        .O(\single_step_count[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0BF8)) 
    \single_step_count[1]_i_1 
       (.I0(\Serial_Dbg_Intf.control_reg_reg_n_0_[5] ),
        .I1(start_single_cmd),
        .I2(of_piperun_for_ce),
        .I3(single_step_count[1]),
        .O(\single_step_count[1]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \single_step_count_reg[0] 
       (.C(Clk),
        .CE(1'b1),
        .D(\single_step_count[0]_i_1_n_0 ),
        .Q(single_step_count[0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \single_step_count_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(\single_step_count[1]_i_1_n_0 ),
        .Q(single_step_count[1]),
        .R(reset_bool_for_rst));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT5 #(
    .INIT(32'h00570000)) 
    sleep_reset_mode_i_1
       (.I0(saved_reset_mode_sleep),
        .I1(wakeup_i[0]),
        .I2(wakeup_i[1]),
        .I3(reset_bool_for_rst),
        .I4(Sleep_Out),
        .O(sleep_reset_mode_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sleep_reset_mode_reg
       (.C(Clk),
        .CE(1'b1),
        .D(sleep_reset_mode_i_1_n_0),
        .Q(Sleep_Out),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    start_dbg_exec_reg
       (.C(Clk),
        .CE(1'b1),
        .D(LOCKSTEP_Master_Out[36]),
        .Q(start_dbg_exec_reg_n_0),
        .R(reset_bool_for_rst));
  LUT6 #(
    .INIT(64'h3232320232323232)) 
    start_single_step_i_1
       (.I0(start_single_cmd),
        .I1(reset_bool_for_rst),
        .I2(start_single_step_reg_n_0),
        .I3(single_step_count[1]),
        .I4(single_step_count[0]),
        .I5(of_piperun_for_ce),
        .O(start_single_step_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    start_single_step_reg
       (.C(Clk),
        .CE(1'b1),
        .D(start_single_step_i_1_n_0),
        .Q(start_single_step_reg_n_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "Decode_gti" *) 
module system_microblaze_0_0__Decode_gti
   (of_pause_reg_0,
    D,
    of_gpr_op3_rd_addr,
    of_gpr_op1_rd_addr,
    of_imm_data,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    ex_valid,
    ex_is_load_instr_s,
    ex_byte_access,
    ex_doublet_access,
    ex_reverse_mem_access,
    mem_databus_write,
    \Performance_Debug_Control.dbg_state_nohalt_reg ,
    MEM_DataBus_Read,
    ex_op1_cmp_equal,
    ex_op1_cmp_equal_n,
    mem_Exception_Taken,
    dbg_pause,
    Pause_Ack,
    ex_set_bip_reg_0,
    mem_byte_access,
    mem_doublet_access,
    wb_byte_access,
    wb_piperun,
    ex_cmp_op,
    ex_unsigned_op,
    ex_use_carry,
    EX_Enable_ALU,
    EX_ALU_Sel_Logic,
    ex_swap_byte_instr,
    ex_load_alu_carry_reg_0,
    ex_load_shift_carry,
    ex_move_to_MSR_instr,
    mem_sel_msr,
    wb_read_imm_reg,
    wb_read_imm_reg_1,
    wb_pc_valid,
    dbg_clean_stop,
    wb_gpr_write_dbg,
    mem_databus_access,
    Hibernate,
    Suspend,
    wb_valid_reg_0,
    ex_swx_access__0,
    wb_Halted,
    Q,
    ex_MSR_Load_LWX_SWX_C,
    SRI,
    ex_set_bip_reg_1,
    LOCKSTEP_Master_Out,
    ex_sel_alu_i_reg_0,
    EX_Fwd,
    ex_sel_alu_i_reg_1,
    ex_sel_alu_i_reg_2,
    E,
    wb_gpr_write_dbg_reg_0,
    SR,
    R,
    I1,
    M_AXI_DP_BVALID_0,
    MEM_DataBus_Write_reg_0,
    MEM_DataBus_Write_reg_1,
    MEM_DataBus_Write_reg_2,
    dbg_halt_reset_mode_reg,
    dbg_stop_instr_fetch_nohalt0__0,
    dbg_stop_i,
    \Serial_Dbg_Intf.control_reg_reg[8] ,
    no_sleeping,
    Sleep,
    DI_0,
    \EX_ALU_Op_reg[0]_0 ,
    \EX_Sext_Op_reg[0]_0 ,
    in0,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ,
    wb_exception_i_reg_0,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \Using_FPGA.Native_13 ,
    \Using_FPGA.Native_14 ,
    \Using_FPGA.Native_15 ,
    \Using_FPGA.Native_16 ,
    \Using_FPGA.Native_17 ,
    \Using_FPGA.Native_18 ,
    \Using_FPGA.Native_19 ,
    \Using_FPGA.Native_20 ,
    \Using_FPGA.Native_21 ,
    \Using_FPGA.Native_22 ,
    \Using_FPGA.Native_23 ,
    \Using_FPGA.Native_24 ,
    \Using_FPGA.Native_25 ,
    \Using_FPGA.Native_26 ,
    \Using_FPGA.Native_27 ,
    \Using_FPGA.Native_28 ,
    \Using_FPGA.Native_29 ,
    \Using_FPGA.Native_30 ,
    \Using_FPGA.Native_31 ,
    \Using_FPGA.Native_32 ,
    \Using_FPGA.Native_33 ,
    I1_1,
    of_op1_sel_spr,
    \Using_FPGA.Native_34 ,
    \mem_pc_i_reg[0] ,
    sync_reset,
    Clk,
    I139_out,
    \Using_FPGA.Native_35 ,
    ex_op1_zero,
    \Using_FPGA.Native_36 ,
    MEM_DataBus_Ready,
    ex_exception_no_load_store_mask,
    \MEM_DataBus_Addr_reg[0]_0 ,
    ex_Exception_Taken,
    Pause,
    \Using_FPGA.Native_37 ,
    Y,
    p_232_in,
    ex_MSR_Set_SW_BIP,
    \Using_FPGA.Native_38 ,
    ex_MSR,
    \Using_FPGA.Native_39 ,
    \Using_FPGA.Native_40 ,
    if_fetch_in_progress_reg_0,
    mb_halted_1_reg,
    MEM_Fwd,
    GPR_Op2,
    \EX_Op2_reg[0] ,
    GPR_Op3,
    GPR_Op1,
    \mem_pc_i_reg[0]_0 ,
    \MEM_DataBus_Byte_Enable_reg[0] ,
    \Using_FPGA.Native_41 ,
    \MEM_DataBus_Byte_Enable_reg[0]_0 ,
    read_register_MSR_1,
    \LOCKSTEP_Out_reg[3007] ,
    \LOCKSTEP_Out_reg[3007]_0 ,
    \LOCKSTEP_Out_reg[3007]_1 ,
    \data_rd_reg_reg[1] ,
    \LOCKSTEP_Out_reg[3008] ,
    \data_rd_reg_reg[2] ,
    \LOCKSTEP_Out_reg[3009] ,
    \data_rd_reg_reg[3] ,
    \LOCKSTEP_Out_reg[3010] ,
    \data_rd_reg_reg[4] ,
    \LOCKSTEP_Out_reg[3011] ,
    \data_rd_reg_reg[5] ,
    \LOCKSTEP_Out_reg[3012] ,
    \data_rd_reg_reg[6] ,
    \LOCKSTEP_Out_reg[3013] ,
    \data_rd_reg_reg[7] ,
    \LOCKSTEP_Out_reg[3014] ,
    \data_rd_reg_reg[8] ,
    \LOCKSTEP_Out_reg[3015] ,
    \data_rd_reg_reg[9] ,
    \LOCKSTEP_Out_reg[3016] ,
    \data_rd_reg_reg[10] ,
    \LOCKSTEP_Out_reg[3017] ,
    \data_rd_reg_reg[11] ,
    \LOCKSTEP_Out_reg[3018] ,
    \data_rd_reg_reg[12] ,
    \LOCKSTEP_Out_reg[3019] ,
    \data_rd_reg_reg[13] ,
    \LOCKSTEP_Out_reg[3020] ,
    \data_rd_reg_reg[14] ,
    \LOCKSTEP_Out_reg[3021] ,
    \data_rd_reg_reg[15] ,
    \LOCKSTEP_Out_reg[3022] ,
    M_AXI_DP_BVALID,
    active_access,
    M_AXI_DP_RVALID,
    M_AXI_DP_WREADY,
    M_AXI_DP_AWREADY,
    M_AXI_DP_ARREADY,
    Reset_Mode,
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ,
    active_access_reg,
    \Performance_Debug_Control.ex_brki_hit_reg ,
    \Using_FPGA.Native_42 ,
    IReady,
    Sleep_Out,
    Scan_Reset_Sel,
    Scan_Reset,
    Scan_En,
    DReady,
    DWait,
    active_access_d1,
    wakeup_i,
    \data_rd_reg_reg[25] ,
    wb_databus_steered_read_data,
    \data_rd_reg_reg[27] ,
    \data_rd_reg_reg[29] ,
    DI,
    \data_rd_reg_reg[30] ,
    \data_rd_reg_reg[28] ,
    \data_rd_reg_reg[26] ,
    \data_rd_reg_reg[24] ,
    ex_databus_addr,
    swap_result,
    out,
    \Using_FPGA.Native_43 ,
    swap_result_reg,
    \MEM_DataBus_Write_Data_reg[0] ,
    exception_reg,
    in,
    lopt,
    lopt_1,
    lopt_2);
  output of_pause_reg_0;
  output [31:0]D;
  output [0:4]of_gpr_op3_rd_addr;
  output [0:4]of_gpr_op1_rd_addr;
  output [0:15]of_imm_data;
  output [0:0]\Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  output ex_valid;
  output ex_is_load_instr_s;
  output ex_byte_access;
  output ex_doublet_access;
  output ex_reverse_mem_access;
  output mem_databus_write;
  output [161:0]\Performance_Debug_Control.dbg_state_nohalt_reg ;
  output MEM_DataBus_Read;
  output ex_op1_cmp_equal;
  output ex_op1_cmp_equal_n;
  output mem_Exception_Taken;
  output dbg_pause;
  output Pause_Ack;
  output ex_set_bip_reg_0;
  output mem_byte_access;
  output mem_doublet_access;
  output wb_byte_access;
  output wb_piperun;
  output ex_cmp_op;
  output ex_unsigned_op;
  output ex_use_carry;
  output EX_Enable_ALU;
  output EX_ALU_Sel_Logic;
  output ex_swap_byte_instr;
  output ex_load_alu_carry_reg_0;
  output ex_load_shift_carry;
  output ex_move_to_MSR_instr;
  output mem_sel_msr;
  output wb_read_imm_reg;
  output wb_read_imm_reg_1;
  output wb_pc_valid;
  output dbg_clean_stop;
  output wb_gpr_write_dbg;
  output mem_databus_access;
  output Hibernate;
  output Suspend;
  output wb_valid_reg_0;
  output ex_swx_access__0;
  output wb_Halted;
  output [1:0]Q;
  output ex_MSR_Load_LWX_SWX_C;
  output SRI;
  output ex_set_bip_reg_1;
  output [2:0]LOCKSTEP_Master_Out;
  output [31:0]ex_sel_alu_i_reg_0;
  output [0:31]EX_Fwd;
  output [31:0]ex_sel_alu_i_reg_1;
  output [31:0]ex_sel_alu_i_reg_2;
  output [0:0]E;
  output [23:0]wb_gpr_write_dbg_reg_0;
  output [0:0]SR;
  output R;
  output I1;
  output M_AXI_DP_BVALID_0;
  output MEM_DataBus_Write_reg_0;
  output MEM_DataBus_Write_reg_1;
  output MEM_DataBus_Write_reg_2;
  output dbg_halt_reset_mode_reg;
  output dbg_stop_instr_fetch_nohalt0__0;
  output dbg_stop_i;
  output \Serial_Dbg_Intf.control_reg_reg[8] ;
  output no_sleeping;
  output Sleep;
  output DI_0;
  output [1:0]\EX_ALU_Op_reg[0]_0 ;
  output [1:0]\EX_Sext_Op_reg[0]_0 ;
  output in0;
  output \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  output wb_exception_i_reg_0;
  output \Using_FPGA.Native_2 ;
  output \Using_FPGA.Native_3 ;
  output \Using_FPGA.Native_4 ;
  output \Using_FPGA.Native_5 ;
  output \Using_FPGA.Native_6 ;
  output \Using_FPGA.Native_7 ;
  output \Using_FPGA.Native_8 ;
  output \Using_FPGA.Native_9 ;
  output \Using_FPGA.Native_10 ;
  output \Using_FPGA.Native_11 ;
  output \Using_FPGA.Native_12 ;
  output \Using_FPGA.Native_13 ;
  output \Using_FPGA.Native_14 ;
  output \Using_FPGA.Native_15 ;
  output \Using_FPGA.Native_16 ;
  output \Using_FPGA.Native_17 ;
  output \Using_FPGA.Native_18 ;
  output \Using_FPGA.Native_19 ;
  output \Using_FPGA.Native_20 ;
  output \Using_FPGA.Native_21 ;
  output \Using_FPGA.Native_22 ;
  output \Using_FPGA.Native_23 ;
  output \Using_FPGA.Native_24 ;
  output \Using_FPGA.Native_25 ;
  output \Using_FPGA.Native_26 ;
  output \Using_FPGA.Native_27 ;
  output \Using_FPGA.Native_28 ;
  output \Using_FPGA.Native_29 ;
  output \Using_FPGA.Native_30 ;
  output \Using_FPGA.Native_31 ;
  output \Using_FPGA.Native_32 ;
  output \Using_FPGA.Native_33 ;
  output I1_1;
  output of_op1_sel_spr;
  output [0:0]\Using_FPGA.Native_34 ;
  output [31:0]\mem_pc_i_reg[0] ;
  input sync_reset;
  input Clk;
  input I139_out;
  input \Using_FPGA.Native_35 ;
  input ex_op1_zero;
  input \Using_FPGA.Native_36 ;
  input MEM_DataBus_Ready;
  input ex_exception_no_load_store_mask;
  input [47:0]\MEM_DataBus_Addr_reg[0]_0 ;
  input ex_Exception_Taken;
  input Pause;
  input [0:0]\Using_FPGA.Native_37 ;
  input [0:31]Y;
  input p_232_in;
  input ex_MSR_Set_SW_BIP;
  input \Using_FPGA.Native_38 ;
  input [2:0]ex_MSR;
  input \Using_FPGA.Native_39 ;
  input \Using_FPGA.Native_40 ;
  input if_fetch_in_progress_reg_0;
  input mb_halted_1_reg;
  input [0:31]MEM_Fwd;
  input [0:31]GPR_Op2;
  input [15:0]\EX_Op2_reg[0] ;
  input [0:31]GPR_Op3;
  input [0:31]GPR_Op1;
  input \mem_pc_i_reg[0]_0 ;
  input [0:0]\MEM_DataBus_Byte_Enable_reg[0] ;
  input [31:0]\Using_FPGA.Native_41 ;
  input \MEM_DataBus_Byte_Enable_reg[0]_0 ;
  input read_register_MSR_1;
  input [23:0]\LOCKSTEP_Out_reg[3007] ;
  input \LOCKSTEP_Out_reg[3007]_0 ;
  input [23:0]\LOCKSTEP_Out_reg[3007]_1 ;
  input \data_rd_reg_reg[1] ;
  input \LOCKSTEP_Out_reg[3008] ;
  input \data_rd_reg_reg[2] ;
  input \LOCKSTEP_Out_reg[3009] ;
  input \data_rd_reg_reg[3] ;
  input \LOCKSTEP_Out_reg[3010] ;
  input \data_rd_reg_reg[4] ;
  input \LOCKSTEP_Out_reg[3011] ;
  input \data_rd_reg_reg[5] ;
  input \LOCKSTEP_Out_reg[3012] ;
  input \data_rd_reg_reg[6] ;
  input \LOCKSTEP_Out_reg[3013] ;
  input \data_rd_reg_reg[7] ;
  input \LOCKSTEP_Out_reg[3014] ;
  input \data_rd_reg_reg[8] ;
  input \LOCKSTEP_Out_reg[3015] ;
  input \data_rd_reg_reg[9] ;
  input \LOCKSTEP_Out_reg[3016] ;
  input \data_rd_reg_reg[10] ;
  input \LOCKSTEP_Out_reg[3017] ;
  input \data_rd_reg_reg[11] ;
  input \LOCKSTEP_Out_reg[3018] ;
  input \data_rd_reg_reg[12] ;
  input \LOCKSTEP_Out_reg[3019] ;
  input \data_rd_reg_reg[13] ;
  input \LOCKSTEP_Out_reg[3020] ;
  input \data_rd_reg_reg[14] ;
  input \LOCKSTEP_Out_reg[3021] ;
  input \data_rd_reg_reg[15] ;
  input \LOCKSTEP_Out_reg[3022] ;
  input M_AXI_DP_BVALID;
  input active_access;
  input M_AXI_DP_RVALID;
  input M_AXI_DP_WREADY;
  input M_AXI_DP_AWREADY;
  input M_AXI_DP_ARREADY;
  input [0:1]Reset_Mode;
  input \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ;
  input active_access_reg;
  input [0:0]\Performance_Debug_Control.ex_brki_hit_reg ;
  input \Using_FPGA.Native_42 ;
  input IReady;
  input Sleep_Out;
  input Scan_Reset_Sel;
  input Scan_Reset;
  input Scan_En;
  input DReady;
  input DWait;
  input active_access_d1;
  input [0:1]wakeup_i;
  input \data_rd_reg_reg[25] ;
  input [7:0]wb_databus_steered_read_data;
  input \data_rd_reg_reg[27] ;
  input \data_rd_reg_reg[29] ;
  input DI;
  input \data_rd_reg_reg[30] ;
  input \data_rd_reg_reg[28] ;
  input \data_rd_reg_reg[26] ;
  input \data_rd_reg_reg[24] ;
  input [1:0]ex_databus_addr;
  input [23:0]swap_result;
  input out;
  input \Using_FPGA.Native_43 ;
  input [0:7]swap_result_reg;
  input [31:0]\MEM_DataBus_Write_Data_reg[0] ;
  input [0:0]exception_reg;
  input [0:0]in;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire A;
  wire Clk;
  wire [31:0]D;
  wire D224_out;
  wire DI;
  wire DI_0;
  wire DReady;
  wire [0:0]\Data_Flow_I/EX_Shift_Logic_Result ;
  wire \Data_Flow_I/Shift_Logic_Module_I/O ;
  wire Dbg_Clean_Stop0;
  wire [0:0]E;
  wire [1:0]\EX_ALU_Op_reg[0]_0 ;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:31]EX_Fwd;
  wire EX_Is_Div_Instr;
  wire EX_MBAR_Stall__2;
  wire [15:0]\EX_Op2_reg[0] ;
  wire EX_SWAP_Instr;
  wire [0:1]EX_Sext_Op;
  wire [1:0]\EX_Sext_Op_reg[0]_0 ;
  wire [0:31]GPR_Op1;
  wire [0:31]GPR_Op2;
  wire [0:31]GPR_Op3;
  wire \^Hibernate ;
  wire I0;
  wire I139_out;
  wire I1_1;
  wire I2;
  wire I4;
  wire I5;
  wire IB_Ready;
  wire IF_PC_Write;
  wire IReady;
  wire [2:0]\^LOCKSTEP_Master_Out ;
  wire [23:0]\LOCKSTEP_Out_reg[3007] ;
  wire \LOCKSTEP_Out_reg[3007]_0 ;
  wire [23:0]\LOCKSTEP_Out_reg[3007]_1 ;
  wire \LOCKSTEP_Out_reg[3008] ;
  wire \LOCKSTEP_Out_reg[3009] ;
  wire \LOCKSTEP_Out_reg[3010] ;
  wire \LOCKSTEP_Out_reg[3011] ;
  wire \LOCKSTEP_Out_reg[3012] ;
  wire \LOCKSTEP_Out_reg[3013] ;
  wire \LOCKSTEP_Out_reg[3014] ;
  wire \LOCKSTEP_Out_reg[3015] ;
  wire \LOCKSTEP_Out_reg[3016] ;
  wire \LOCKSTEP_Out_reg[3017] ;
  wire \LOCKSTEP_Out_reg[3018] ;
  wire \LOCKSTEP_Out_reg[3019] ;
  wire \LOCKSTEP_Out_reg[3020] ;
  wire \LOCKSTEP_Out_reg[3021] ;
  wire \LOCKSTEP_Out_reg[3022] ;
  wire [47:0]\MEM_DataBus_Addr_reg[0]_0 ;
  wire [0:0]\MEM_DataBus_Byte_Enable_reg[0] ;
  wire \MEM_DataBus_Byte_Enable_reg[0]_0 ;
  wire MEM_DataBus_Ready;
  wire [31:0]\MEM_DataBus_Write_Data_reg[0] ;
  wire MEM_DataBus_Write_reg_0;
  wire MEM_DataBus_Write_reg_1;
  wire MEM_DataBus_Write_reg_2;
  wire [0:31]MEM_Fwd;
  wire M_AXI_DP_ARREADY;
  wire M_AXI_DP_AWREADY;
  wire M_AXI_DP_BVALID;
  wire M_AXI_DP_BVALID_0;
  wire M_AXI_DP_RVALID;
  wire M_AXI_DP_WREADY;
  wire O;
  wire O_0;
  wire PC_Module_I_n_0;
  wire PC_Module_I_n_35;
  wire PC_Module_I_n_37;
  wire PC_Module_I_n_38;
  wire PC_Module_I_n_39;
  wire PC_Module_I_n_40;
  wire PC_Module_I_n_41;
  wire PC_Module_I_n_42;
  wire PC_Module_I_n_43;
  wire PC_Module_I_n_44;
  wire PC_Module_I_n_45;
  wire PC_Module_I_n_46;
  wire PC_Module_I_n_47;
  wire PC_Module_I_n_48;
  wire PC_Module_I_n_49;
  wire PC_Module_I_n_50;
  wire PC_Module_I_n_51;
  wire PC_Module_I_n_52;
  wire PC_Module_I_n_53;
  wire PC_Module_I_n_54;
  wire PC_Module_I_n_55;
  wire PC_Module_I_n_56;
  wire PC_Module_I_n_57;
  wire PC_Module_I_n_58;
  wire PC_Module_I_n_59;
  wire PC_Module_I_n_60;
  wire PC_Module_I_n_61;
  wire PC_Module_I_n_62;
  wire PC_Module_I_n_63;
  wire PC_Module_I_n_64;
  wire [161:0]\^Performance_Debug_Control.dbg_state_nohalt_reg ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ;
  wire \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ;
  wire [0:0]\Performance_Debug_Control.ex_brki_hit_reg ;
  wire PreFetch_Buffer_I1_n_101;
  wire PreFetch_Buffer_I1_n_174;
  wire PreFetch_Buffer_I1_n_180;
  wire PreFetch_Buffer_I1_n_181;
  wire PreFetch_Buffer_I1_n_183;
  wire PreFetch_Buffer_I1_n_184;
  wire PreFetch_Buffer_I1_n_185;
  wire PreFetch_Buffer_I1_n_186;
  wire PreFetch_Buffer_I1_n_187;
  wire PreFetch_Buffer_I1_n_188;
  wire PreFetch_Buffer_I1_n_189;
  wire PreFetch_Buffer_I1_n_190;
  wire PreFetch_Buffer_I1_n_191;
  wire PreFetch_Buffer_I1_n_192;
  wire PreFetch_Buffer_I1_n_193;
  wire PreFetch_Buffer_I1_n_195;
  wire PreFetch_Buffer_I1_n_196;
  wire PreFetch_Buffer_I1_n_197;
  wire PreFetch_Buffer_I1_n_45;
  wire PreFetch_Buffer_I1_n_48;
  wire PreFetch_Buffer_I1_n_49;
  wire PreFetch_Buffer_I1_n_50;
  wire PreFetch_Buffer_I1_n_59;
  wire PreFetch_Buffer_I1_n_64;
  wire PreFetch_Buffer_I1_n_65;
  wire PreFetch_Buffer_I1_n_66;
  wire [1:0]\^Q ;
  wire R;
  wire [0:0]SR;
  wire SRI;
  wire \Serial_Dbg_Intf.control_reg_reg[8] ;
  wire Sleep;
  wire Sleep_Decode;
  wire Sleep_Out;
  wire \^Suspend ;
  wire \Use_DBUS.DAXI_Interface_I1/M_AXI_DP_AWVALID_i1 ;
  wire \Use_MuxCy[11].OF_Piperun_Stage_n_1 ;
  wire \Use_MuxCy[11].OF_Piperun_Stage_n_2 ;
  wire \Use_MuxCy[11].OF_Piperun_Stage_n_3 ;
  wire \Use_MuxCy[3].OF_Piperun_Stage_n_1 ;
  wire \Use_MuxCy[3].OF_Piperun_Stage_n_4 ;
  wire \Use_MuxCy[3].OF_Piperun_Stage_n_5 ;
  wire [0:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_16 ;
  wire \Using_FPGA.Native_17 ;
  wire \Using_FPGA.Native_18 ;
  wire \Using_FPGA.Native_19 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_20 ;
  wire \Using_FPGA.Native_21 ;
  wire \Using_FPGA.Native_22 ;
  wire \Using_FPGA.Native_23 ;
  wire \Using_FPGA.Native_24 ;
  wire \Using_FPGA.Native_25 ;
  wire \Using_FPGA.Native_26 ;
  wire \Using_FPGA.Native_27 ;
  wire \Using_FPGA.Native_28 ;
  wire \Using_FPGA.Native_29 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_30 ;
  wire \Using_FPGA.Native_31 ;
  wire \Using_FPGA.Native_32 ;
  wire \Using_FPGA.Native_33 ;
  wire [0:0]\Using_FPGA.Native_34 ;
  wire \Using_FPGA.Native_35 ;
  wire \Using_FPGA.Native_36 ;
  wire [0:0]\Using_FPGA.Native_37 ;
  wire \Using_FPGA.Native_38 ;
  wire \Using_FPGA.Native_39 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_40 ;
  wire [31:0]\Using_FPGA.Native_41 ;
  wire \Using_FPGA.Native_42 ;
  wire \Using_FPGA.Native_43 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire \Using_FPGA.Native_i_3__10_n_0 ;
  wire \Using_FPGA.Native_i_3__11_n_0 ;
  wire \Using_FPGA.Native_i_3__12_n_0 ;
  wire \Using_FPGA.Native_i_3__13_n_0 ;
  wire \Using_FPGA.Native_i_3__14_n_0 ;
  wire \Using_FPGA.Native_i_3__15_n_0 ;
  wire \Using_FPGA.Native_i_3__16_n_0 ;
  wire \Using_FPGA.Native_i_3__17_n_0 ;
  wire \Using_FPGA.Native_i_3__18_n_0 ;
  wire \Using_FPGA.Native_i_3__19_n_0 ;
  wire \Using_FPGA.Native_i_3__1_n_0 ;
  wire \Using_FPGA.Native_i_3__20_n_0 ;
  wire \Using_FPGA.Native_i_3__21_n_0 ;
  wire \Using_FPGA.Native_i_3__22_n_0 ;
  wire \Using_FPGA.Native_i_3__23_n_0 ;
  wire \Using_FPGA.Native_i_3__24_n_0 ;
  wire \Using_FPGA.Native_i_3__25_n_0 ;
  wire \Using_FPGA.Native_i_3__26_n_0 ;
  wire \Using_FPGA.Native_i_3__27_n_0 ;
  wire \Using_FPGA.Native_i_3__28_n_0 ;
  wire \Using_FPGA.Native_i_3__29_n_0 ;
  wire \Using_FPGA.Native_i_3__2_n_0 ;
  wire \Using_FPGA.Native_i_3__30_n_0 ;
  wire \Using_FPGA.Native_i_3__3_n_0 ;
  wire \Using_FPGA.Native_i_3__4_n_0 ;
  wire \Using_FPGA.Native_i_3__5_n_0 ;
  wire \Using_FPGA.Native_i_3__6_n_0 ;
  wire \Using_FPGA.Native_i_3__7_n_0 ;
  wire \Using_FPGA.Native_i_3__8_n_0 ;
  wire \Using_FPGA.Native_i_3__9_n_0 ;
  wire \Using_FPGA.Native_i_5__0_n_0 ;
  wire \Using_FPGA_2.ex_is_load_instr_Inst_n_2 ;
  wire \Using_FPGA_2.ex_is_lwx_instr_Inst_n_1 ;
  wire \Using_FPGA_2.ex_is_swx_instr_Inst_n_1 ;
  wire \Using_FPGA_2.ex_load_store_instr_Inst_n_1 ;
  wire \Using_FPGA_2.ex_load_store_instr_Inst_n_4 ;
  wire \Using_FPGA_3.of_clear_MSR_BIP_hold_Inst_n_0 ;
  wire \Using_FPGA_4.of_read_ex_write_op2_conflict_INST1_n_0 ;
  wire \Using_FPGA_4.of_read_ex_write_op3_conflict_INST1_n_0 ;
  wire \Using_FPGA_4.of_read_mem_write_op1_conflict_INST2_n_0 ;
  wire \Using_FPGA_4.of_read_mem_write_op3_conflict_INST1_n_0 ;
  wire [0:31]Y;
  wire active_access;
  wire active_access_d1;
  wire active_access_reg;
  wire active_wakeup;
  wire active_wakeup0;
  wire \data_rd_reg_reg[10] ;
  wire \data_rd_reg_reg[11] ;
  wire \data_rd_reg_reg[12] ;
  wire \data_rd_reg_reg[13] ;
  wire \data_rd_reg_reg[14] ;
  wire \data_rd_reg_reg[15] ;
  wire \data_rd_reg_reg[1] ;
  wire \data_rd_reg_reg[24] ;
  wire \data_rd_reg_reg[25] ;
  wire \data_rd_reg_reg[26] ;
  wire \data_rd_reg_reg[27] ;
  wire \data_rd_reg_reg[28] ;
  wire \data_rd_reg_reg[29] ;
  wire \data_rd_reg_reg[2] ;
  wire \data_rd_reg_reg[30] ;
  wire \data_rd_reg_reg[3] ;
  wire \data_rd_reg_reg[4] ;
  wire \data_rd_reg_reg[5] ;
  wire \data_rd_reg_reg[6] ;
  wire \data_rd_reg_reg[7] ;
  wire \data_rd_reg_reg[8] ;
  wire \data_rd_reg_reg[9] ;
  wire dbg_clean_stop;
  wire dbg_halt_reset_mode_reg;
  wire dbg_stop_i;
  wire dbg_stop_instr_fetch_nohalt0__0;
  wire ex_Enable_Sext_Shift;
  wire ex_Exception_Taken;
  wire [2:0]ex_MSR;
  wire ex_MSR_Load_LWX_SWX_C;
  wire ex_MSR_Set_SW_BIP;
  (* RTL_KEEP = "true" *) wire ex_Write_DCache_decode_cmb;
  wire ex_branch_with_delayslot;
  wire ex_byte_access;
  wire ex_cmp_op;
  wire [1:0]ex_databus_addr;
  wire ex_delayslot_Instr;
  wire ex_delayslot_Instr0;
  wire ex_doublet_access;
  wire ex_enable_sext_shift_i0;
  wire ex_exception_no_load_store_mask;
  wire ex_first_cycle;
  wire \ex_gpr_write_addr_reg_n_0_[0] ;
  wire \ex_gpr_write_addr_reg_n_0_[4] ;
  wire ex_gpr_write_dbg;
  wire ex_gpr_write_reg_n_0;
  wire ex_hibernate_i_i_1_n_0;
  wire \^ex_is_load_instr_s ;
  wire ex_is_multi_instr2;
  wire ex_is_multi_or_load_instr;
  wire ex_is_multi_or_load_instr0;
  wire ex_is_swx_instr_s;
  wire ex_jump;
  wire ex_jump_hold;
  wire ex_jump_nodelay;
  wire ex_jump_q;
  wire ex_load_alu_carry_reg_0;
  wire ex_load_shift_carry;
  wire ex_load_shift_carry0;
  wire ex_load_store_instr_s;
  wire ex_mbar_decode;
  (* RTL_KEEP = "true" *) wire ex_mbar_decode_cmb;
  wire ex_mbar_is_sleep;
  (* RTL_KEEP = "true" *) wire ex_mbar_is_sleep_cmb;
  wire ex_mbar_sleep;
  wire ex_mbar_sleep_i_1_n_0;
  wire ex_mbar_stall_no_sleep_1;
  wire ex_mbar_stall_no_sleep_10;
  wire ex_mbar_stall_no_sleep__1;
  wire ex_mfsmsr_i;
  wire ex_move_to_MSR_instr;
  wire ex_move_to_MSR_instr93_out;
  wire ex_op1_cmp_eq;
  wire ex_op1_cmp_eq1;
  wire ex_op1_cmp_eq_n5_out;
  wire ex_op1_cmp_equal;
  wire ex_op1_cmp_equal_n;
  wire [0:5]ex_opcode;
  wire ex_read_imm_reg;
  wire ex_read_imm_reg_1;
  wire ex_read_imm_reg_i_1_n_0;
  wire ex_reservation;
  wire ex_reverse_mem_access;
  wire ex_sel_alu;
  wire ex_sel_alu_i0;
  wire [31:0]ex_sel_alu_i_reg_0;
  wire [31:0]ex_sel_alu_i_reg_1;
  wire [31:0]ex_sel_alu_i_reg_2;
  wire ex_set_bip;
  wire ex_set_bip_reg_0;
  wire ex_set_bip_reg_1;
  wire [0:1]ex_shift_op;
  wire ex_sleep_i0;
  wire ex_sleep_i_i_1_n_0;
  wire ex_suspend_i_i_1_n_0;
  wire ex_swap_byte_instr;
  wire ex_swap_instr;
  wire ex_swx_access__0;
  wire ex_unsigned_op;
  wire ex_use_carry;
  wire ex_valid;
  (* RTL_KEEP = "true" *) wire ex_valid_jump;
  wire ex_write_dcache_instr;
  wire [0:0]exception_reg;
  wire flush_pipe;
  wire force12_out;
  wire force_Val10_out;
  wire if_fetch_for_timing_optimization1;
  wire if_fetch_in_progress;
  wire if_fetch_in_progress_reg_0;
  (* RTL_KEEP = "true" *) wire if_fetch_without_full_or_jump;
  wire if_missed_fetch;
  wire [1:1]if_pre_buffer_addr;
  wire [0:4]if_sel_input;
  wire [0:0]in;
  wire in0;
  wire jump_logic_I1_n_41;
  wire jump_logic_I1_n_42;
  wire jump_logic_I1_n_5;
  wire jump_logic_I1_n_7;
  wire keep_jump_taken_with_ds;
  wire lopt;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_12;
  wire lopt_13;
  wire lopt_15;
  wire lopt_16;
  wire lopt_17;
  wire lopt_18;
  wire lopt_2;
  wire lopt_20;
  wire lopt_22;
  wire lopt_23;
  wire lopt_24;
  wire lopt_26;
  wire lopt_28;
  wire lopt_29;
  wire lopt_30;
  wire lopt_4;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire mb_halted_1_reg;
  wire mem_Exception_Taken;
  wire mem_PipeRun_carry_and_n_1;
  wire mem_PipeRun_carry_and_n_2;
  wire mem_Sel_MEM_Res;
  wire mem_Write_DCache;
  wire mem_Write_DCache_i_1_n_0;
  wire mem_byte_access;
  wire mem_databus_access;
  wire \^mem_databus_write ;
  wire mem_delayslot_instr;
  wire mem_doublet_access;
  wire mem_exception_from_ex;
  wire [28:31]mem_exception_kind;
  wire mem_gpr_write;
  wire [0:4]mem_gpr_write_addr;
  wire mem_gpr_write_dbg;
  wire mem_is_multi_or_load_instr;
  wire mem_is_multi_or_load_instr0;
  wire mem_load_store_access;
  wire [31:0]\mem_pc_i_reg[0] ;
  wire \mem_pc_i_reg[0]_0 ;
  wire mem_read_imm_reg;
  wire mem_read_imm_reg_1;
  wire mem_sel_msr;
  wire mem_valid_instr;
  wire of_PipeRun_carry_1;
  wire of_PipeRun_carry_5;
  wire of_PipeRun_carry_9;
  (* DIRECT_ENABLE *) wire of_PipeRun_for_ce;
  wire of_Sel_SPR_MSR1;
  wire of_Sel_SPR_MSR88_out;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [0:15]of_imm_data;
  wire [0:5]of_instr_raw;
  wire of_op1_sel_spr;
  wire [0:10]of_predecode_raw;
  wire of_read_ex_write_op2_conflict_part2;
  wire of_read_ex_write_op3_conflict_part2;
  wire of_read_imm_reg_ii;
  wire of_read_imm_reg_ii_i_2_n_0;
  wire of_read_mem_write_op1_conflict_part1;
  wire of_read_mem_write_op2_conflict_part1;
  wire of_read_mem_write_op2_conflict_part2;
  wire of_read_mem_write_op3_conflict_part2;
  wire of_use_op2_s;
  wire of_valid;
  wire out;
  wire p_0_in117_in;
  wire p_1_in118_in;
  wire p_1_in3_in;
  wire p_213_in;
  wire p_216_in;
  wire p_227_in;
  wire p_232_in;
  wire p_233_in;
  wire p_2_in;
  wire p_9_in;
  wire read_register_MSR_1;
  (* DIRECT_RESET *) wire reset_bool_for_rst;
  wire [23:0]swap_result;
  wire [0:7]swap_result_reg;
  wire use_Reg_Neg_DI1_out;
  wire use_Reg_Neg_S3_out;
  wire [0:1]wakeup_i;
  wire wb_Halted;
  wire wb_byte_access;
  wire [7:0]wb_databus_steered_read_data;
  wire wb_doublet_access;
  wire wb_exception;
  wire wb_exception_i_reg_0;
  wire wb_gpr_write_dbg;
  wire wb_gpr_write_dbg0;
  wire [23:0]wb_gpr_write_dbg_reg_0;
  wire wb_gpr_write_i;
  wire wb_gpr_write_i0;
  wire wb_pc_valid;
  wire wb_piperun;
  wire wb_read_imm_reg;
  wire wb_read_imm_reg_1;
  wire wb_reset;
  wire wb_valid_reg_0;
  wire NLW_PC_Module_I_CI_UNCONNECTED;
  wire \NLW_Use_MuxCy[10].OF_Piperun_Stage_of_PipeRun_carry_2_UNCONNECTED ;
  wire \NLW_Use_MuxCy[10].OF_Piperun_Stage_use_Reg_Neg_S_reg_UNCONNECTED ;
  wire \NLW_Use_MuxCy[11].OF_Piperun_Stage_dbg_pause_UNCONNECTED ;
  wire \NLW_Use_MuxCy[1].OF_Piperun_Stage_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Use_MuxCy[1].OF_Piperun_Stage_lopt_UNCONNECTED ;
  wire \NLW_Use_MuxCy[1].OF_Piperun_Stage_of_PipeRun_carry_10_UNCONNECTED ;
  wire \NLW_Use_MuxCy[2].OF_Piperun_Stage_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Use_MuxCy[2].OF_Piperun_Stage_of_PipeRun_carry_10_UNCONNECTED ;
  wire \NLW_Use_MuxCy[3].OF_Piperun_Stage_ex_Write_ICache_i_UNCONNECTED ;
  wire \NLW_Use_MuxCy[3].OF_Piperun_Stage_ex_Write_ICache_i_cmb_UNCONNECTED ;
  wire \NLW_Use_MuxCy[3].OF_Piperun_Stage_lopt_UNCONNECTED ;
  wire \NLW_Use_MuxCy[3].OF_Piperun_Stage_lopt_3_UNCONNECTED ;
  wire \NLW_Use_MuxCy[4].OF_Piperun_Stage_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Use_MuxCy[4].OF_Piperun_Stage_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Use_MuxCy[4].OF_Piperun_Stage_lopt_UNCONNECTED ;
  wire \NLW_Use_MuxCy[4].OF_Piperun_Stage_of_PipeRun_carry_7_UNCONNECTED ;
  wire \NLW_Use_MuxCy[5].OF_Piperun_Stage_A_UNCONNECTED ;
  wire \NLW_Use_MuxCy[5].OF_Piperun_Stage_lopt_UNCONNECTED ;
  wire \NLW_Use_MuxCy[5].OF_Piperun_Stage_of_PipeRun_carry_6_UNCONNECTED ;
  wire \NLW_Use_MuxCy[5].OF_Piperun_Stage_of_PipeRun_carry_7_UNCONNECTED ;
  wire \NLW_Use_MuxCy[6].OF_Piperun_Stage_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Use_MuxCy[6].OF_Piperun_Stage_of_PipeRun_carry_6_UNCONNECTED ;
  wire \NLW_Use_MuxCy[7].OF_Piperun_Stage_lopt_UNCONNECTED ;
  wire \NLW_Use_MuxCy[7].OF_Piperun_Stage_lopt_3_UNCONNECTED ;
  wire \NLW_Use_MuxCy[7].OF_Piperun_Stage_of_PipeRun_carry_4_UNCONNECTED ;
  wire \NLW_Use_MuxCy[8].OF_Piperun_Stage_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Use_MuxCy[8].OF_Piperun_Stage_lopt_UNCONNECTED ;
  wire \NLW_Use_MuxCy[8].OF_Piperun_Stage_of_PipeRun_carry_3_UNCONNECTED ;
  wire \NLW_Use_MuxCy[8].OF_Piperun_Stage_of_PipeRun_carry_4_UNCONNECTED ;
  wire \NLW_Use_MuxCy[9].OF_Piperun_Stage_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Use_MuxCy[9].OF_Piperun_Stage_lopt_UNCONNECTED ;
  wire \NLW_Use_MuxCy[9].OF_Piperun_Stage_of_PipeRun_carry_2_UNCONNECTED ;
  wire \NLW_Use_MuxCy[9].OF_Piperun_Stage_of_PipeRun_carry_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_MEM_Sel_MEM_Res_I_reg_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_BTR_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_EAR_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_EDR_UNCONNECTED ;
  wire \NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_FSR_UNCONNECTED ;
  wire \NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_if_pc_incr_carry0_UNCONNECTED ;
  wire \NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_if_pc_incr_carry1_UNCONNECTED ;
  wire \NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_lopt_UNCONNECTED ;
  wire NLW_if_pc_incr_carry_and_0_if_pc_incr_carry0_UNCONNECTED;
  wire NLW_if_pc_incr_carry_and_0_lopt_UNCONNECTED;
  wire NLW_if_pc_incr_carry_and_0_lopt_3_UNCONNECTED;
  wire NLW_if_pc_incr_carry_and_3_CI_UNCONNECTED;
  wire NLW_if_pc_incr_carry_and_3_if_fetch_for_timing_optimization1_UNCONNECTED;
  wire NLW_if_pc_incr_carry_and_3_if_pc_incr_carry1_UNCONNECTED;
  wire NLW_if_pc_incr_carry_and_3_lopt_UNCONNECTED;
  wire NLW_jump_logic_I1_ex_op1_zero_UNCONNECTED;
  wire NLW_jump_logic_I1_mem_jump_taken0_UNCONNECTED;
  wire NLW_mem_PipeRun_carry_and_mem_wait_on_ready_N_UNCONNECTED;
  wire NLW_mem_wait_on_ready_N_carry_or_lopt_3_UNCONNECTED;
  wire NLW_mem_wait_on_ready_N_carry_or_mem_wait_on_ready_N_UNCONNECTED;

  assign I1 = \^Q [1];
  assign \Performance_Debug_Control.dbg_state_nohalt_reg [160:159] = \^Performance_Debug_Control.dbg_state_nohalt_reg [160:159];
  assign \Performance_Debug_Control.dbg_state_nohalt_reg [139:129] = \^Performance_Debug_Control.dbg_state_nohalt_reg [139:129];
  assign \Performance_Debug_Control.dbg_state_nohalt_reg [126:82] = \^Performance_Debug_Control.dbg_state_nohalt_reg [126:82];
  assign \Performance_Debug_Control.dbg_state_nohalt_reg [74:66] = \^Performance_Debug_Control.dbg_state_nohalt_reg [74:66];
  assign \Performance_Debug_Control.dbg_state_nohalt_reg [32:2] = \^Performance_Debug_Control.dbg_state_nohalt_reg [32:2];
  assign \Performance_Debug_Control.dbg_state_nohalt_reg [0] = \^Performance_Debug_Control.dbg_state_nohalt_reg [0];
  assign Q[1] = \^Q [1];
  assign of_pause_reg_0 = of_PipeRun_for_ce;
  assign reset_bool_for_rst = sync_reset;
  FDRE #(
    .INIT(1'b0)) 
    Dbg_Clean_Stop_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(Dbg_Clean_Stop0),
        .Q(dbg_clean_stop),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \EX_ALU_Op_reg[0] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_64),
        .Q(\EX_ALU_Op_reg[0]_0 [1]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \EX_ALU_Op_reg[1] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_65),
        .Q(\EX_ALU_Op_reg[0]_0 [0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    EX_CMP_Op_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_188),
        .Q(ex_cmp_op),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    EX_SWAP_BYTE_Instr_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(p_2_in),
        .Q(ex_swap_byte_instr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    EX_SWAP_Instr_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(EX_SWAP_Instr),
        .Q(ex_swap_instr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Sext_Op_reg[0] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(EX_Sext_Op[0]),
        .Q(\EX_Sext_Op_reg[0]_0 [1]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Sext_Op_reg[1] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(EX_Sext_Op[1]),
        .Q(\EX_Sext_Op_reg[0]_0 [0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Shift_Op_reg[0] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_imm_data[9]),
        .Q(ex_shift_op[0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Shift_Op_reg[1] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_imm_data[10]),
        .Q(ex_shift_op[1]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    EX_Unsigned_Op_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_189),
        .Q(ex_unsigned_op),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    EX_Use_Carry_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_190),
        .Q(ex_use_carry),
        .R(reset_bool_for_rst));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    IFetch_INST_0_i_1
       (.I0(reset_bool_for_rst),
        .I1(if_fetch_in_progress_reg_0),
        .I2(wb_Halted),
        .I3(mb_halted_1_reg),
        .I4(ex_mbar_sleep),
        .I5(ex_mbar_stall_no_sleep__1),
        .O(if_fetch_without_full_or_jump));
  LUT5 #(
    .INIT(32'h0E000000)) 
    IFetch_INST_0_i_2
       (.I0(ex_first_cycle),
        .I1(ex_mbar_stall_no_sleep_1),
        .I2(ex_jump_hold),
        .I3(ex_mbar_decode),
        .I4(p_232_in),
        .O(ex_mbar_stall_no_sleep__1));
  LUT2 #(
    .INIT(4'h8)) 
    \LOCKSTEP_Master_Out[1]_INST_0 
       (.I0(mem_databus_access),
        .I1(active_access_reg),
        .O(\^LOCKSTEP_Master_Out [2]));
  LUT5 #(
    .INIT(32'hFFFFEAAA)) 
    \LOCKSTEP_Master_Out[5]_INST_0 
       (.I0(if_fetch_in_progress_reg_0),
        .I1(wb_exception),
        .I2(\^Q [1]),
        .I3(\^Q [0]),
        .I4(mb_halted_1_reg),
        .O(\^LOCKSTEP_Master_Out [1]));
  LUT4 #(
    .INIT(16'hEAAA)) 
    \LOCKSTEP_Master_Out[7]_INST_0 
       (.I0(\mem_pc_i_reg[0]_0 ),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .I3(wb_exception),
        .O(\^LOCKSTEP_Master_Out [0]));
  FDRE #(
    .INIT(1'b0)) 
    MEM_DataBus_Access_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA_2.ex_load_store_instr_Inst_n_1 ),
        .Q(mem_databus_access),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[0] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [47]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [97]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[10] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [37]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [87]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[11] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [36]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [86]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[12] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [35]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [85]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[13] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [34]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [84]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[14] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [33]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [83]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[15] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [32]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [82]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[1] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [46]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [96]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[23] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [24]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [74]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[24] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [23]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [73]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[25] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [22]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [72]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[26] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [21]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [71]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[27] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [20]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [70]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[28] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [19]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [69]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[29] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [18]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [68]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[2] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [45]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [95]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[30] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [17]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [67]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[31] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [16]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [66]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[3] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [44]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [94]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[4] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [43]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [93]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[5] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [42]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [92]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[6] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [41]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [91]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[7] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [40]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [90]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[8] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [39]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [89]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \MEM_DataBus_Addr_reg[9] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\MEM_DataBus_Addr_reg[0]_0 [38]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [88]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    MEM_DataBus_Write_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\^Performance_Debug_Control.dbg_state_nohalt_reg [102]),
        .Q(\^mem_databus_write ),
        .R(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    MEM_Sel_MEM_Res_I_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA_2.ex_is_load_instr_Inst_n_2 ),
        .Q(mem_Sel_MEM_Res),
        .S(reset_bool_for_rst));
  LUT5 #(
    .INIT(32'h00000F22)) 
    M_AXI_DP_ARVALID_i_i_1
       (.I0(\Use_DBUS.DAXI_Interface_I1/M_AXI_DP_AWVALID_i1 ),
        .I1(\^mem_databus_write ),
        .I2(M_AXI_DP_ARREADY),
        .I3(\MEM_DataBus_Addr_reg[0]_0 [12]),
        .I4(reset_bool_for_rst),
        .O(MEM_DataBus_Write_reg_2));
  LUT5 #(
    .INIT(32'h00000F88)) 
    M_AXI_DP_AWVALID_i_i_1
       (.I0(\Use_DBUS.DAXI_Interface_I1/M_AXI_DP_AWVALID_i1 ),
        .I1(\^mem_databus_write ),
        .I2(M_AXI_DP_AWREADY),
        .I3(\MEM_DataBus_Addr_reg[0]_0 [14]),
        .I4(reset_bool_for_rst),
        .O(MEM_DataBus_Write_reg_1));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'h02)) 
    M_AXI_DP_AWVALID_i_i_2
       (.I0(mem_databus_access),
        .I1(DReady),
        .I2(active_access_d1),
        .O(\Use_DBUS.DAXI_Interface_I1/M_AXI_DP_AWVALID_i1 ));
  LUT5 #(
    .INIT(32'h00000F88)) 
    M_AXI_DP_WVALID_i_i_1
       (.I0(\Use_DBUS.DAXI_Interface_I1/M_AXI_DP_AWVALID_i1 ),
        .I1(\^mem_databus_write ),
        .I2(M_AXI_DP_WREADY),
        .I3(\MEM_DataBus_Addr_reg[0]_0 [13]),
        .I4(reset_bool_for_rst),
        .O(MEM_DataBus_Write_reg_0));
  system_microblaze_0_0__PC_Module_gti PC_Module_I
       (.CI(NLW_PC_Module_I_CI_UNCONNECTED),
        .Clk(Clk),
        .D(D),
        .E(\Use_MuxCy[3].OF_Piperun_Stage_n_1 ),
        .IB_Ready(IB_Ready),
        .IReady(IReady),
        .O(O_0),
        .Q(\^Q ),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (PreFetch_Buffer_I1_n_45),
        .\ex_pc_i_reg[31]_0 (of_PipeRun_for_ce),
        .if_missed_fetch_reg(\Using_FPGA.Native_42 ),
        .if_missed_fetch_reg_0(\mem_pc_i_reg[0]_0 ),
        .\if_pc_reg[0]_0 (PC_Module_I_n_0),
        .\if_pc_reg[0]_1 (IF_PC_Write),
        .\if_pc_reg[0]_2 (\^Performance_Debug_Control.dbg_state_nohalt_reg [158:127]),
        .\if_pc_reg[10]_0 (PC_Module_I_n_55),
        .\if_pc_reg[11]_0 (PC_Module_I_n_54),
        .\if_pc_reg[12]_0 (PC_Module_I_n_53),
        .\if_pc_reg[13]_0 (PC_Module_I_n_52),
        .\if_pc_reg[14]_0 (PC_Module_I_n_51),
        .\if_pc_reg[15]_0 (PC_Module_I_n_50),
        .\if_pc_reg[16]_0 (PC_Module_I_n_49),
        .\if_pc_reg[17]_0 (PC_Module_I_n_48),
        .\if_pc_reg[18]_0 (PC_Module_I_n_47),
        .\if_pc_reg[19]_0 (PC_Module_I_n_46),
        .\if_pc_reg[1]_0 (PC_Module_I_n_64),
        .\if_pc_reg[20]_0 (PC_Module_I_n_45),
        .\if_pc_reg[21]_0 (PC_Module_I_n_44),
        .\if_pc_reg[22]_0 (PC_Module_I_n_43),
        .\if_pc_reg[23]_0 (PC_Module_I_n_42),
        .\if_pc_reg[24]_0 (PC_Module_I_n_41),
        .\if_pc_reg[25]_0 (PC_Module_I_n_40),
        .\if_pc_reg[26]_0 (PC_Module_I_n_39),
        .\if_pc_reg[27]_0 (PC_Module_I_n_38),
        .\if_pc_reg[28]_0 (PC_Module_I_n_37),
        .\if_pc_reg[2]_0 (PC_Module_I_n_63),
        .\if_pc_reg[30]_0 ({p_1_in3_in,PC_Module_I_n_35}),
        .\if_pc_reg[3]_0 (PC_Module_I_n_62),
        .\if_pc_reg[4]_0 (PC_Module_I_n_61),
        .\if_pc_reg[5]_0 (PC_Module_I_n_60),
        .\if_pc_reg[6]_0 (PC_Module_I_n_59),
        .\if_pc_reg[7]_0 (PC_Module_I_n_58),
        .\if_pc_reg[8]_0 (PC_Module_I_n_57),
        .\if_pc_reg[9]_0 (PC_Module_I_n_56),
        .if_pre_buffer_addr(if_pre_buffer_addr),
        .if_sel_input({if_sel_input[0],if_sel_input[4]}),
        .lopt(lopt_7),
        .lopt_1(lopt_8),
        .lopt_2(lopt_9),
        .lopt_3(lopt_10),
        .\mem_pc_i_reg[0]_0 (\mem_pc_i_reg[0] ),
        .sync_reset(reset_bool_for_rst),
        .wb_exception(wb_exception));
  LUT3 #(
    .INIT(8'h80)) 
    \Performance_Debug_Control.dbg_brki_hit_i_1 
       (.I0(wb_exception),
        .I1(\^Q [1]),
        .I2(\^Q [0]),
        .O(wb_Halted));
  LUT4 #(
    .INIT(16'hFF80)) 
    \Performance_Debug_Control.dbg_freeze_nohalt_i_2 
       (.I0(\^Q [0]),
        .I1(\^Q [1]),
        .I2(wb_exception),
        .I3(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .O(dbg_stop_instr_fetch_nohalt0__0));
  LUT4 #(
    .INIT(16'hFF80)) 
    \Performance_Debug_Control.dbg_stop_i_i_3 
       (.I0(\^Q [0]),
        .I1(\^Q [1]),
        .I2(wb_exception),
        .I3(reset_bool_for_rst),
        .O(dbg_stop_i));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_i_3 
       (.I0(wb_Halted),
        .I1(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 ),
        .I2(reset_bool_for_rst),
        .O(dbg_halt_reset_mode_reg));
  system_microblaze_0_0__PreFetch_Buffer_gti PreFetch_Buffer_I1
       (.Clk(Clk),
        .D({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1]}),
        .D224_out(D224_out),
        .Dbg_Clean_Stop0(Dbg_Clean_Stop0),
        .E(E),
        .EX_Is_Div_Instr(EX_Is_Div_Instr),
        .\EX_Op1_reg[0] (D),
        .\EX_Op2_reg[0] (\EX_Op2_reg[0] ),
        .\EX_Op2_reg[0]_0 (ex_read_imm_reg_i_1_n_0),
        .\EX_Op3[0]_i_5 (wb_valid_reg_0),
        .\EX_Op3[0]_i_6 (\ex_gpr_write_addr_reg_n_0_[4] ),
        .\EX_Op3_reg[0] (EX_Fwd[0]),
        .\EX_Op3_reg[0]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [26]),
        .\EX_Op3_reg[10] (EX_Fwd[10]),
        .\EX_Op3_reg[10]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [16]),
        .\EX_Op3_reg[11] (EX_Fwd[11]),
        .\EX_Op3_reg[11]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [15]),
        .\EX_Op3_reg[12] (EX_Fwd[12]),
        .\EX_Op3_reg[12]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [14]),
        .\EX_Op3_reg[13] (EX_Fwd[13]),
        .\EX_Op3_reg[13]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [13]),
        .\EX_Op3_reg[14] (EX_Fwd[14]),
        .\EX_Op3_reg[14]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [12]),
        .\EX_Op3_reg[15] (EX_Fwd[15]),
        .\EX_Op3_reg[15]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [11]),
        .\EX_Op3_reg[16] (\MEM_DataBus_Addr_reg[0]_0 [7:0]),
        .\EX_Op3_reg[16]_0 (EX_Fwd[16]),
        .\EX_Op3_reg[17] (EX_Fwd[17]),
        .\EX_Op3_reg[18] (EX_Fwd[18]),
        .\EX_Op3_reg[19] (EX_Fwd[19]),
        .\EX_Op3_reg[1] (EX_Fwd[1]),
        .\EX_Op3_reg[1]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [25]),
        .\EX_Op3_reg[20] (EX_Fwd[20]),
        .\EX_Op3_reg[21] (EX_Fwd[21]),
        .\EX_Op3_reg[22] (EX_Fwd[22]),
        .\EX_Op3_reg[23] (EX_Fwd[23]),
        .\EX_Op3_reg[24] (EX_Fwd[24]),
        .\EX_Op3_reg[24]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [10]),
        .\EX_Op3_reg[25] (EX_Fwd[25]),
        .\EX_Op3_reg[25]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [9]),
        .\EX_Op3_reg[26] (EX_Fwd[26]),
        .\EX_Op3_reg[26]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [8]),
        .\EX_Op3_reg[27] (EX_Fwd[27]),
        .\EX_Op3_reg[27]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [7]),
        .\EX_Op3_reg[28] (EX_Fwd[28]),
        .\EX_Op3_reg[28]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [6]),
        .\EX_Op3_reg[29] (EX_Fwd[29]),
        .\EX_Op3_reg[29]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [5]),
        .\EX_Op3_reg[2] (EX_Fwd[2]),
        .\EX_Op3_reg[2]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [24]),
        .\EX_Op3_reg[30] (EX_Fwd[30]),
        .\EX_Op3_reg[30]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [4]),
        .\EX_Op3_reg[31] (EX_Fwd[31]),
        .\EX_Op3_reg[31]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [3]),
        .\EX_Op3_reg[3] (EX_Fwd[3]),
        .\EX_Op3_reg[3]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [23]),
        .\EX_Op3_reg[4] (EX_Fwd[4]),
        .\EX_Op3_reg[4]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [22]),
        .\EX_Op3_reg[5] (EX_Fwd[5]),
        .\EX_Op3_reg[5]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [21]),
        .\EX_Op3_reg[6] (EX_Fwd[6]),
        .\EX_Op3_reg[6]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [20]),
        .\EX_Op3_reg[7] (EX_Fwd[7]),
        .\EX_Op3_reg[7]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [19]),
        .\EX_Op3_reg[8] (EX_Fwd[8]),
        .\EX_Op3_reg[8]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [18]),
        .\EX_Op3_reg[9] (EX_Fwd[9]),
        .\EX_Op3_reg[9]_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [17]),
        .EX_SWAP_Instr(EX_SWAP_Instr),
        .GPR_Op1(GPR_Op1),
        .GPR_Op2(GPR_Op2),
        .GPR_Op3(GPR_Op3),
        .I0(I0),
        .I139_out(I139_out),
        .I1_1(I1_1),
        .I4(I4),
        .I5(I5),
        .IB_Ready(IB_Ready),
        .IReady(IReady),
        .IReady_0(PreFetch_Buffer_I1_n_45),
        .MEM_Fwd(MEM_Fwd),
        .\Performance_Debug_Control.ex_brki_hit_reg (\Performance_Debug_Control.ex_brki_hit_reg ),
        .Q(\^Q ),
        .\Serial_Dbg_Intf.control_reg_reg[8] (\Serial_Dbg_Intf.control_reg_reg[8] ),
        .\Using_FPGA.Native (of_gpr_op3_rd_addr[2]),
        .\Using_FPGA.Native_0 (of_gpr_op3_rd_addr[3]),
        .\Using_FPGA.Native_1 (of_gpr_op3_rd_addr[4]),
        .\Using_FPGA.Native_10 (of_imm_data[4]),
        .\Using_FPGA.Native_11 (of_imm_data[5]),
        .\Using_FPGA.Native_12 (of_imm_data[6]),
        .\Using_FPGA.Native_13 (of_imm_data[7]),
        .\Using_FPGA.Native_14 (of_imm_data[8]),
        .\Using_FPGA.Native_15 ({of_imm_data[9],of_imm_data[10]}),
        .\Using_FPGA.Native_16 (of_imm_data[11]),
        .\Using_FPGA.Native_17 (of_imm_data[12]),
        .\Using_FPGA.Native_18 (of_imm_data[13]),
        .\Using_FPGA.Native_19 (of_imm_data[14]),
        .\Using_FPGA.Native_2 (of_gpr_op1_rd_addr[0]),
        .\Using_FPGA.Native_20 (of_imm_data[15]),
        .\Using_FPGA.Native_21 ({if_sel_input[0],if_sel_input[4]}),
        .\Using_FPGA.Native_22 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_23 (PreFetch_Buffer_I1_n_48),
        .\Using_FPGA.Native_24 (IF_PC_Write),
        .\Using_FPGA.Native_25 (\^Performance_Debug_Control.dbg_state_nohalt_reg [159]),
        .\Using_FPGA.Native_26 (\^Performance_Debug_Control.dbg_state_nohalt_reg [160]),
        .\Using_FPGA.Native_27 (PreFetch_Buffer_I1_n_59),
        .\Using_FPGA.Native_28 ({PreFetch_Buffer_I1_n_64,PreFetch_Buffer_I1_n_65}),
        .\Using_FPGA.Native_29 (PreFetch_Buffer_I1_n_66),
        .\Using_FPGA.Native_3 (of_gpr_op1_rd_addr[1]),
        .\Using_FPGA.Native_30 (PreFetch_Buffer_I1_n_174),
        .\Using_FPGA.Native_31 ({EX_Sext_Op[0],EX_Sext_Op[1]}),
        .\Using_FPGA.Native_32 (PreFetch_Buffer_I1_n_180),
        .\Using_FPGA.Native_33 (PreFetch_Buffer_I1_n_181),
        .\Using_FPGA.Native_34 (PreFetch_Buffer_I1_n_187),
        .\Using_FPGA.Native_35 (PreFetch_Buffer_I1_n_188),
        .\Using_FPGA.Native_36 (PreFetch_Buffer_I1_n_189),
        .\Using_FPGA.Native_37 (PreFetch_Buffer_I1_n_190),
        .\Using_FPGA.Native_38 (PreFetch_Buffer_I1_n_191),
        .\Using_FPGA.Native_39 (PreFetch_Buffer_I1_n_193),
        .\Using_FPGA.Native_4 (of_gpr_op1_rd_addr[2]),
        .\Using_FPGA.Native_40 (\Using_FPGA.Native_2 ),
        .\Using_FPGA.Native_41 (PreFetch_Buffer_I1_n_195),
        .\Using_FPGA.Native_42 (PreFetch_Buffer_I1_n_196),
        .\Using_FPGA.Native_43 (PreFetch_Buffer_I1_n_197),
        .\Using_FPGA.Native_44 (\Using_FPGA.Native_3 ),
        .\Using_FPGA.Native_45 (\Using_FPGA.Native_4 ),
        .\Using_FPGA.Native_46 (\Using_FPGA.Native_5 ),
        .\Using_FPGA.Native_47 (\Using_FPGA.Native_6 ),
        .\Using_FPGA.Native_48 (\Using_FPGA.Native_7 ),
        .\Using_FPGA.Native_49 (\Using_FPGA.Native_8 ),
        .\Using_FPGA.Native_5 (of_gpr_op1_rd_addr[3]),
        .\Using_FPGA.Native_50 (\Using_FPGA.Native_9 ),
        .\Using_FPGA.Native_51 (\Using_FPGA.Native_10 ),
        .\Using_FPGA.Native_52 (\Using_FPGA.Native_11 ),
        .\Using_FPGA.Native_53 (\Using_FPGA.Native_12 ),
        .\Using_FPGA.Native_54 (\Using_FPGA.Native_13 ),
        .\Using_FPGA.Native_55 (\Using_FPGA.Native_14 ),
        .\Using_FPGA.Native_56 (\Using_FPGA.Native_15 ),
        .\Using_FPGA.Native_57 (\Using_FPGA.Native_16 ),
        .\Using_FPGA.Native_58 (\Using_FPGA.Native_17 ),
        .\Using_FPGA.Native_59 (\Using_FPGA.Native_18 ),
        .\Using_FPGA.Native_6 (of_imm_data[0]),
        .\Using_FPGA.Native_60 (\Using_FPGA.Native_19 ),
        .\Using_FPGA.Native_61 (\Using_FPGA.Native_20 ),
        .\Using_FPGA.Native_62 (\Using_FPGA.Native_21 ),
        .\Using_FPGA.Native_63 (\Using_FPGA.Native_22 ),
        .\Using_FPGA.Native_64 (\Using_FPGA.Native_23 ),
        .\Using_FPGA.Native_65 (\Using_FPGA.Native_24 ),
        .\Using_FPGA.Native_66 (\Using_FPGA.Native_25 ),
        .\Using_FPGA.Native_67 (\Using_FPGA.Native_26 ),
        .\Using_FPGA.Native_68 (\Using_FPGA.Native_27 ),
        .\Using_FPGA.Native_69 (\Using_FPGA.Native_28 ),
        .\Using_FPGA.Native_7 (of_imm_data[1]),
        .\Using_FPGA.Native_70 (\Using_FPGA.Native_29 ),
        .\Using_FPGA.Native_71 (\Using_FPGA.Native_30 ),
        .\Using_FPGA.Native_72 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_73 (\Using_FPGA.Native_32 ),
        .\Using_FPGA.Native_74 (\Using_FPGA.Native_33 ),
        .\Using_FPGA.Native_75 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_76 (\mem_pc_i_reg[0]_0 ),
        .\Using_FPGA.Native_77 (\Using_FPGA.Native_42 ),
        .\Using_FPGA.Native_8 (of_imm_data[2]),
        .\Using_FPGA.Native_9 (of_imm_data[3]),
        .\Using_FPGA.Native_i_6__0 ({mem_gpr_write_addr[0],mem_gpr_write_addr[1],mem_gpr_write_addr[2],mem_gpr_write_addr[3],mem_gpr_write_addr[4]}),
        .\Using_FPGA.Native_i_6__0_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [31:27]),
        .\Using_FPGA.Native_i_6__0_1 ({\ex_gpr_write_addr_reg_n_0_[0] ,I2}),
        .ex_Exception_Taken(ex_Exception_Taken),
        .ex_MSR(ex_MSR),
        .ex_branch_with_delayslot(ex_branch_with_delayslot),
        .ex_branch_with_delayslot_i_reg_0(wb_Halted),
        .ex_branch_with_delayslot_reg(PreFetch_Buffer_I1_n_192),
        .ex_enable_sext_shift_i0(ex_enable_sext_shift_i0),
        .ex_gpr_write_dbg(ex_gpr_write_dbg),
        .ex_gpr_write_reg(PreFetch_Buffer_I1_n_49),
        .ex_gpr_write_reg_0(ex_gpr_write_reg_n_0),
        .ex_is_div_instr_I_reg(PreFetch_Buffer_I1_n_50),
        .ex_is_multi_or_load_instr0(ex_is_multi_or_load_instr0),
        .ex_jump(ex_jump),
        .ex_jump_nodelay(ex_jump_nodelay),
        .ex_jump_q(ex_jump_q),
        .ex_load_shift_carry0(ex_load_shift_carry0),
        .ex_mbar_decode(ex_mbar_decode),
        .ex_mbar_decode_cmb(ex_mbar_decode_cmb),
        .ex_mbar_is_sleep(ex_mbar_is_sleep),
        .ex_mbar_is_sleep_cmb(ex_mbar_is_sleep_cmb),
        .ex_move_to_MSR_instr93_out(ex_move_to_MSR_instr93_out),
        .ex_op1_cmp_eq(ex_op1_cmp_eq),
        .ex_op1_cmp_eq1(ex_op1_cmp_eq1),
        .ex_op1_cmp_eq_n5_out(ex_op1_cmp_eq_n5_out),
        .ex_sel_alu_i0(ex_sel_alu_i0),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg_0),
        .ex_sel_alu_i_reg_0(ex_sel_alu_i_reg_1),
        .ex_sel_alu_i_reg_1(ex_sel_alu_i_reg_2),
        .ex_set_bip(ex_set_bip),
        .ex_valid_jump_reg(PreFetch_Buffer_I1_n_185),
        .ex_valid_jump_reg_0(of_PipeRun_for_ce),
        .ex_valid_jump_reg_1(\Using_FPGA.Native_1 ),
        .ex_valid_jump_reg_2(ex_valid_jump),
        .ex_valid_reg(PreFetch_Buffer_I1_n_186),
        .ex_valid_reg_0(ex_valid),
        .force12_out(force12_out),
        .force_Val10_out(force_Val10_out),
        .if_fetch_for_timing_optimization1(if_fetch_for_timing_optimization1),
        .if_fetch_in_progress(if_fetch_in_progress),
        .if_fetch_in_progress_reg(PreFetch_Buffer_I1_n_183),
        .if_fetch_in_progress_reg_0({\^Performance_Debug_Control.dbg_state_nohalt_reg [161],\^Performance_Debug_Control.dbg_state_nohalt_reg [32]}),
        .if_fetch_in_progress_reg_1(if_fetch_in_progress_reg_0),
        .if_missed_fetch(if_missed_fetch),
        .if_pre_buffer_addr(if_pre_buffer_addr),
        .in({Y[0],Y[1],Y[2],Y[3],Y[4],Y[5],Y[6],Y[7],Y[8],Y[9],Y[10],Y[21],Y[22],Y[23],Y[24],Y[25],Y[26],Y[27],Y[28],Y[29],Y[30],Y[31],in,Y[11],Y[12],Y[13],Y[14],Y[15],Y[16],Y[17],Y[18],Y[19],Y[20]}),
        .in0(if_fetch_without_full_or_jump),
        .mem_exception_from_ex(mem_exception_from_ex),
        .mem_gpr_write(mem_gpr_write),
        .mem_is_multi_or_load_instr(mem_is_multi_or_load_instr),
        .mem_is_multi_or_load_instr_reg(PreFetch_Buffer_I1_n_101),
        .mem_valid_instr(mem_valid_instr),
        .of_Sel_SPR_MSR1(of_Sel_SPR_MSR1),
        .of_Sel_SPR_MSR88_out(of_Sel_SPR_MSR88_out),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr[4]),
        .of_instr_raw({of_instr_raw[0],of_instr_raw[1],of_instr_raw[2],of_instr_raw[3],of_instr_raw[4],of_instr_raw[5]}),
        .of_op1_sel_spr(of_op1_sel_spr),
        .of_predecode_raw(of_predecode_raw),
        .of_read_mem_write_op2_conflict_part1(of_read_mem_write_op2_conflict_part1),
        .of_read_mem_write_op2_conflict_part2(of_read_mem_write_op2_conflict_part2),
        .of_use_op2_s(of_use_op2_s),
        .of_valid(of_valid),
        .out(if_fetch_without_full_or_jump),
        .p_213_in(p_213_in),
        .p_216_in(p_216_in),
        .p_2_in(p_2_in),
        .p_9_in(p_9_in),
        .sync_reset(reset_bool_for_rst),
        .use_Reg_Neg_DI1_out(use_Reg_Neg_DI1_out),
        .use_Reg_Neg_S3_out(use_Reg_Neg_S3_out),
        .wb_exception(wb_exception),
        .wb_exception_i_reg(PreFetch_Buffer_I1_n_184),
        .wb_gpr_write_i(wb_gpr_write_i),
        .wb_reset(wb_reset));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT2 #(
    .INIT(4'hE)) 
    Sleep_INST_0
       (.I0(Sleep_Decode),
        .I1(Sleep_Out),
        .O(Sleep));
  LUT3 #(
    .INIT(8'h2A)) 
    Trace_Exception_Taken_INST_0
       (.I0(wb_exception),
        .I1(\^Q [1]),
        .I2(\^Q [0]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [2]));
  LUT4 #(
    .INIT(16'hEAAA)) 
    Trace_MB_Halted_INST_0
       (.I0(mb_halted_1_reg),
        .I1(\^Q [0]),
        .I2(\^Q [1]),
        .I3(wb_exception),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [161]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[0]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [23]),
        .I1(\^Performance_Debug_Control.dbg_state_nohalt_reg [2]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\LOCKSTEP_Out_reg[3007]_0 ),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [23]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [26]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[10]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [13]),
        .I1(\^Performance_Debug_Control.dbg_state_nohalt_reg [2]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\LOCKSTEP_Out_reg[3017] ),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [13]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [16]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[11]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [12]),
        .I1(\^Performance_Debug_Control.dbg_state_nohalt_reg [2]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\LOCKSTEP_Out_reg[3018] ),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [12]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [15]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[12]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [11]),
        .I1(\^Performance_Debug_Control.dbg_state_nohalt_reg [2]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\LOCKSTEP_Out_reg[3019] ),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [11]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [14]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[13]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [10]),
        .I1(\^Performance_Debug_Control.dbg_state_nohalt_reg [2]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\LOCKSTEP_Out_reg[3020] ),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [10]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [13]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[14]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [9]),
        .I1(\^Performance_Debug_Control.dbg_state_nohalt_reg [2]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\LOCKSTEP_Out_reg[3021] ),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [9]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [12]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[15]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [8]),
        .I1(\^Performance_Debug_Control.dbg_state_nohalt_reg [2]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\LOCKSTEP_Out_reg[3022] ),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [8]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [11]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[1]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [22]),
        .I1(\^Performance_Debug_Control.dbg_state_nohalt_reg [2]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\LOCKSTEP_Out_reg[3008] ),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [22]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [25]));
  LUT6 #(
    .INIT(64'hFBBBFBBBFBBB0888)) 
    \Trace_New_Reg_Value[24]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [7]),
        .I1(wb_exception),
        .I2(\^Q [1]),
        .I3(\^Q [0]),
        .I4(wb_databus_steered_read_data[7]),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [7]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [10]));
  LUT6 #(
    .INIT(64'hFBBBFBBBFBBB0888)) 
    \Trace_New_Reg_Value[25]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [6]),
        .I1(wb_exception),
        .I2(\^Q [1]),
        .I3(\^Q [0]),
        .I4(wb_databus_steered_read_data[6]),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [6]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [9]));
  LUT6 #(
    .INIT(64'hFBBBFBBBFBBB0888)) 
    \Trace_New_Reg_Value[26]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [5]),
        .I1(wb_exception),
        .I2(\^Q [1]),
        .I3(\^Q [0]),
        .I4(wb_databus_steered_read_data[5]),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [5]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [8]));
  LUT6 #(
    .INIT(64'hFBBBFBBBFBBB0888)) 
    \Trace_New_Reg_Value[27]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [4]),
        .I1(wb_exception),
        .I2(\^Q [1]),
        .I3(\^Q [0]),
        .I4(wb_databus_steered_read_data[4]),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [4]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [7]));
  LUT6 #(
    .INIT(64'hFBBBFBBBFBBB0888)) 
    \Trace_New_Reg_Value[28]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [3]),
        .I1(wb_exception),
        .I2(\^Q [1]),
        .I3(\^Q [0]),
        .I4(wb_databus_steered_read_data[3]),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [3]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [6]));
  LUT6 #(
    .INIT(64'hFBBBFBBBFBBB0888)) 
    \Trace_New_Reg_Value[29]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [2]),
        .I1(wb_exception),
        .I2(\^Q [1]),
        .I3(\^Q [0]),
        .I4(wb_databus_steered_read_data[2]),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [2]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [5]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[2]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [21]),
        .I1(\^Performance_Debug_Control.dbg_state_nohalt_reg [2]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\LOCKSTEP_Out_reg[3009] ),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [21]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [24]));
  LUT6 #(
    .INIT(64'hFBBBFBBBFBBB0888)) 
    \Trace_New_Reg_Value[30]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [1]),
        .I1(wb_exception),
        .I2(\^Q [1]),
        .I3(\^Q [0]),
        .I4(wb_databus_steered_read_data[1]),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [1]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [4]));
  LUT6 #(
    .INIT(64'hFBBBFBBBFBBB0888)) 
    \Trace_New_Reg_Value[31]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [0]),
        .I1(wb_exception),
        .I2(\^Q [1]),
        .I3(\^Q [0]),
        .I4(wb_databus_steered_read_data[0]),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [0]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [3]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[3]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [20]),
        .I1(\^Performance_Debug_Control.dbg_state_nohalt_reg [2]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\LOCKSTEP_Out_reg[3010] ),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [20]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [23]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[4]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [19]),
        .I1(\^Performance_Debug_Control.dbg_state_nohalt_reg [2]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\LOCKSTEP_Out_reg[3011] ),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [19]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [22]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[5]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [18]),
        .I1(\^Performance_Debug_Control.dbg_state_nohalt_reg [2]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\LOCKSTEP_Out_reg[3012] ),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [18]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [21]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[6]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [17]),
        .I1(\^Performance_Debug_Control.dbg_state_nohalt_reg [2]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\LOCKSTEP_Out_reg[3013] ),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [17]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [20]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[7]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [16]),
        .I1(\^Performance_Debug_Control.dbg_state_nohalt_reg [2]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\LOCKSTEP_Out_reg[3014] ),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [16]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [19]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[8]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [15]),
        .I1(\^Performance_Debug_Control.dbg_state_nohalt_reg [2]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\LOCKSTEP_Out_reg[3015] ),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [15]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [18]));
  LUT6 #(
    .INIT(64'hBBBBBBBB888B8888)) 
    \Trace_New_Reg_Value[9]_INST_0 
       (.I0(\LOCKSTEP_Out_reg[3007] [14]),
        .I1(\^Performance_Debug_Control.dbg_state_nohalt_reg [2]),
        .I2(wb_doublet_access),
        .I3(wb_byte_access),
        .I4(\LOCKSTEP_Out_reg[3016] ),
        .I5(\LOCKSTEP_Out_reg[3007]_1 [14]),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [17]));
  LUT4 #(
    .INIT(16'hAEAA)) 
    Trace_Reg_Write_INST_0
       (.I0(wb_reset),
        .I1(wb_valid_reg_0),
        .I2(wb_exception),
        .I3(wb_gpr_write_i),
        .O(\^Performance_Debug_Control.dbg_state_nohalt_reg [32]));
  system_microblaze_0_0__carry_and \Use_MuxCy[10].OF_Piperun_Stage 
       (.lopt(lopt_29),
        .lopt_1(lopt_30),
        .of_PipeRun_carry_1(of_PipeRun_carry_1),
        .of_PipeRun_carry_2(\NLW_Use_MuxCy[10].OF_Piperun_Stage_of_PipeRun_carry_2_UNCONNECTED ),
        .use_Reg_Neg_S_reg(\NLW_Use_MuxCy[10].OF_Piperun_Stage_use_Reg_Neg_S_reg_UNCONNECTED ));
  system_microblaze_0_0__carry_and_57 \Use_MuxCy[11].OF_Piperun_Stage 
       (.IB_Ready(IB_Ready),
        .dbg_pause(\NLW_Use_MuxCy[11].OF_Piperun_Stage_dbg_pause_UNCONNECTED ),
        .ex_jump(ex_jump),
        .ex_jump_nodelay(ex_jump_nodelay),
        .ex_jump_nodelay_reg(\Use_MuxCy[11].OF_Piperun_Stage_n_1 ),
        .ex_jump_nodelay_reg_0(PreFetch_Buffer_I1_n_48),
        .if_missed_fetch(if_missed_fetch),
        .of_PipeRun_carry_1(of_PipeRun_carry_1),
        .of_PipeRun_for_ce(of_PipeRun_for_ce),
        .of_read_imm_reg_ii(of_read_imm_reg_ii),
        .of_read_imm_reg_ii_reg(\Use_MuxCy[11].OF_Piperun_Stage_n_2 ),
        .of_read_imm_reg_ii_reg_0(of_read_imm_reg_ii_i_2_n_0),
        .p_9_in(p_9_in),
        .sync_reset(reset_bool_for_rst),
        .wb_exception(wb_exception),
        .wb_exception_i_reg(\Use_MuxCy[11].OF_Piperun_Stage_n_3 ));
  system_microblaze_0_0__carry_and_58 \Use_MuxCy[1].OF_Piperun_Stage 
       (.\Using_FPGA.Native (\NLW_Use_MuxCy[1].OF_Piperun_Stage_Using_FPGA.Native_UNCONNECTED ),
        .lopt(\NLW_Use_MuxCy[1].OF_Piperun_Stage_lopt_UNCONNECTED ),
        .lopt_1(lopt_15),
        .lopt_2(lopt_16),
        .of_PipeRun_carry_10(\NLW_Use_MuxCy[1].OF_Piperun_Stage_of_PipeRun_carry_10_UNCONNECTED ));
  system_microblaze_0_0__carry_and_59 \Use_MuxCy[2].OF_Piperun_Stage 
       (.EX_MBAR_Stall__2(EX_MBAR_Stall__2),
        .\Using_FPGA.Native (\NLW_Use_MuxCy[2].OF_Piperun_Stage_Using_FPGA.Native_UNCONNECTED ),
        .ex_first_cycle(ex_first_cycle),
        .ex_jump_hold(ex_jump_hold),
        .ex_mbar_decode(ex_mbar_decode),
        .ex_mbar_sleep(ex_mbar_sleep),
        .ex_mbar_stall_no_sleep_1(ex_mbar_stall_no_sleep_1),
        .lopt(lopt_17),
        .lopt_1(lopt_18),
        .of_PipeRun_carry_10(\NLW_Use_MuxCy[2].OF_Piperun_Stage_of_PipeRun_carry_10_UNCONNECTED ),
        .of_PipeRun_carry_9(of_PipeRun_carry_9));
  system_microblaze_0_0__carry_and_60 \Use_MuxCy[3].OF_Piperun_Stage 
       (.E(\Use_MuxCy[3].OF_Piperun_Stage_n_1 ),
        .Q(\^Q ),
        .\Using_FPGA.Native (\Using_FPGA.Native_1 ),
        .ex_Write_DCache_decode_reg(of_PipeRun_for_ce),
        .ex_Write_ICache_i(\NLW_Use_MuxCy[3].OF_Piperun_Stage_ex_Write_ICache_i_UNCONNECTED ),
        .ex_Write_ICache_i_cmb(\NLW_Use_MuxCy[3].OF_Piperun_Stage_ex_Write_ICache_i_cmb_UNCONNECTED ),
        .ex_gpr_write_dbg(ex_gpr_write_dbg),
        .ex_write_dcache_instr(ex_write_dcache_instr),
        .in0(ex_Write_DCache_decode_cmb),
        .lopt(\NLW_Use_MuxCy[3].OF_Piperun_Stage_lopt_UNCONNECTED ),
        .lopt_1(lopt_20),
        .lopt_2(PreFetch_Buffer_I1_n_193),
        .lopt_3(\NLW_Use_MuxCy[3].OF_Piperun_Stage_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_22),
        .lopt_5(A),
        .lopt_6(lopt_23),
        .lopt_7(lopt_24),
        .lopt_8(\Using_FPGA_4.of_read_mem_write_op1_conflict_INST2_n_0 ),
        .mem_gpr_write(mem_gpr_write),
        .mem_gpr_write_dbg(mem_gpr_write_dbg),
        .mem_gpr_write_dbg_reg(\Use_MuxCy[3].OF_Piperun_Stage_n_4 ),
        .mem_gpr_write_reg(\Use_MuxCy[3].OF_Piperun_Stage_n_5 ),
        .mem_gpr_write_reg_0(ex_gpr_write_reg_n_0),
        .\mem_pc_i_reg[0] (\mem_pc_i_reg[0]_0 ),
        .of_PipeRun_carry_9(of_PipeRun_carry_9),
        .sync_reset(reset_bool_for_rst),
        .wb_exception(wb_exception));
  system_microblaze_0_0__carry_and_61 \Use_MuxCy[4].OF_Piperun_Stage 
       (.\Using_FPGA.Native (\NLW_Use_MuxCy[4].OF_Piperun_Stage_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Use_MuxCy[4].OF_Piperun_Stage_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(\NLW_Use_MuxCy[4].OF_Piperun_Stage_lopt_UNCONNECTED ),
        .lopt_1(lopt_20),
        .of_PipeRun_carry_7(\NLW_Use_MuxCy[4].OF_Piperun_Stage_of_PipeRun_carry_7_UNCONNECTED ));
  system_microblaze_0_0__carry_and_62 \Use_MuxCy[5].OF_Piperun_Stage 
       (.A(\NLW_Use_MuxCy[5].OF_Piperun_Stage_A_UNCONNECTED ),
        .lopt(\NLW_Use_MuxCy[5].OF_Piperun_Stage_lopt_UNCONNECTED ),
        .lopt_1(lopt_22),
        .of_PipeRun_carry_6(\NLW_Use_MuxCy[5].OF_Piperun_Stage_of_PipeRun_carry_6_UNCONNECTED ),
        .of_PipeRun_carry_7(\NLW_Use_MuxCy[5].OF_Piperun_Stage_of_PipeRun_carry_7_UNCONNECTED ));
  system_microblaze_0_0__carry_and_63 \Use_MuxCy[6].OF_Piperun_Stage 
       (.\Using_FPGA.Native (\NLW_Use_MuxCy[6].OF_Piperun_Stage_Using_FPGA.Native_UNCONNECTED ),
        .lopt(lopt_23),
        .lopt_1(lopt_24),
        .of_PipeRun_carry_5(of_PipeRun_carry_5),
        .of_PipeRun_carry_6(\NLW_Use_MuxCy[6].OF_Piperun_Stage_of_PipeRun_carry_6_UNCONNECTED ));
  system_microblaze_0_0__carry_and_64 \Use_MuxCy[7].OF_Piperun_Stage 
       (.\Using_FPGA.Native (\Using_FPGA_4.of_read_ex_write_op2_conflict_INST1_n_0 ),
        .lopt(\NLW_Use_MuxCy[7].OF_Piperun_Stage_lopt_UNCONNECTED ),
        .lopt_1(lopt_26),
        .lopt_2(PreFetch_Buffer_I1_n_101),
        .lopt_3(\NLW_Use_MuxCy[7].OF_Piperun_Stage_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_28),
        .lopt_5(\Using_FPGA_4.of_read_ex_write_op3_conflict_INST1_n_0 ),
        .lopt_6(lopt_29),
        .lopt_7(lopt_30),
        .lopt_8(\Using_FPGA_4.of_read_mem_write_op3_conflict_INST1_n_0 ),
        .of_PipeRun_carry_4(\NLW_Use_MuxCy[7].OF_Piperun_Stage_of_PipeRun_carry_4_UNCONNECTED ),
        .of_PipeRun_carry_5(of_PipeRun_carry_5));
  system_microblaze_0_0__carry_and_65 \Use_MuxCy[8].OF_Piperun_Stage 
       (.\Using_FPGA.Native (\NLW_Use_MuxCy[8].OF_Piperun_Stage_Using_FPGA.Native_UNCONNECTED ),
        .lopt(\NLW_Use_MuxCy[8].OF_Piperun_Stage_lopt_UNCONNECTED ),
        .lopt_1(lopt_26),
        .of_PipeRun_carry_3(\NLW_Use_MuxCy[8].OF_Piperun_Stage_of_PipeRun_carry_3_UNCONNECTED ),
        .of_PipeRun_carry_4(\NLW_Use_MuxCy[8].OF_Piperun_Stage_of_PipeRun_carry_4_UNCONNECTED ));
  system_microblaze_0_0__carry_and_66 \Use_MuxCy[9].OF_Piperun_Stage 
       (.\Using_FPGA.Native (\NLW_Use_MuxCy[9].OF_Piperun_Stage_Using_FPGA.Native_UNCONNECTED ),
        .lopt(\NLW_Use_MuxCy[9].OF_Piperun_Stage_lopt_UNCONNECTED ),
        .lopt_1(lopt_28),
        .of_PipeRun_carry_2(\NLW_Use_MuxCy[9].OF_Piperun_Stage_of_PipeRun_carry_2_UNCONNECTED ),
        .of_PipeRun_carry_3(\NLW_Use_MuxCy[9].OF_Piperun_Stage_of_PipeRun_carry_3_UNCONNECTED ));
  system_microblaze_0_0__MB_FDRE \Using_FPGA.Gen_Bits[28].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .D(mem_exception_kind[28]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .ex_exception_no_load_store_mask(ex_exception_no_load_store_mask),
        .mem_exception_from_ex(mem_exception_from_ex),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_FDRE_67 \Using_FPGA.Gen_Bits[31].MEM_EX_Result_Inst 
       (.Clk(Clk),
        .D(mem_exception_kind[31]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .ex_exception_no_load_store_mask(ex_exception_no_load_store_mask),
        .mem_exception_from_ex(mem_exception_from_ex),
        .sync_reset(reset_bool_for_rst));
  LUT2 #(
    .INIT(4'h8)) 
    \Using_FPGA.Native_i_12 
       (.I0(mem_gpr_write),
        .I1(mem_valid_instr),
        .O(p_213_in));
  LUT2 #(
    .INIT(4'h8)) 
    \Using_FPGA.Native_i_15 
       (.I0(ex_gpr_write_reg_n_0),
        .I1(ex_valid),
        .O(p_216_in));
  LUT4 #(
    .INIT(16'h007F)) 
    \Using_FPGA.Native_i_1__100 
       (.I0(wb_exception),
        .I1(\^Q [1]),
        .I2(\^Q [0]),
        .I3(\mem_pc_i_reg[0]_0 ),
        .O(wb_exception_i_reg_0));
  LUT2 #(
    .INIT(4'hE)) 
    \Using_FPGA.Native_i_1__48 
       (.I0(reset_bool_for_rst),
        .I1(EX_Is_Div_Instr),
        .O(R));
  LUT4 #(
    .INIT(16'h0020)) 
    \Using_FPGA.Native_i_1__60 
       (.I0(\EX_ALU_Op_reg[0]_0 [0]),
        .I1(EX_ALU_Sel_Logic),
        .I2(\EX_ALU_Op_reg[0]_0 [1]),
        .I3(ex_use_carry),
        .O(DI_0));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__61 
       (.I0(ex_databus_addr[0]),
        .I1(swap_result[0]),
        .I2(ex_swap_instr),
        .I3(\Data_Flow_I/Shift_Logic_Module_I/O ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[31]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__62 
       (.I0(ex_databus_addr[1]),
        .I1(swap_result[1]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__1_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[30]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__63 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [18]),
        .I1(swap_result[2]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__2_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[29]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__64 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [19]),
        .I1(swap_result[3]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__3_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[28]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__65 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [20]),
        .I1(swap_result[4]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__4_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[27]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__66 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [21]),
        .I1(swap_result[5]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__5_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[26]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__67 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [22]),
        .I1(swap_result[6]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__6_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[25]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__68 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [23]),
        .I1(swap_result[7]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__7_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[24]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__69 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [24]),
        .I1(swap_result[8]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__8_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[23]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__70 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [25]),
        .I1(swap_result[9]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__9_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[22]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__71 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [26]),
        .I1(swap_result[10]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__10_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[21]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__72 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [27]),
        .I1(swap_result[11]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__11_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[20]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__73 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [28]),
        .I1(swap_result[12]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__12_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[19]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__74 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [29]),
        .I1(swap_result[13]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__13_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[18]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__75 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [30]),
        .I1(swap_result[14]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__14_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[17]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__76 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [31]),
        .I1(swap_result[15]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__15_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[16]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__77 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [32]),
        .I1(swap_result[16]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__16_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[15]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__78 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [33]),
        .I1(swap_result[17]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__17_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[14]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__79 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [34]),
        .I1(swap_result[18]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__18_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[13]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__80 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [35]),
        .I1(swap_result[19]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__19_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[12]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__81 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [36]),
        .I1(swap_result[20]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__20_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[11]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__82 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [37]),
        .I1(swap_result[21]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__21_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[10]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__83 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [38]),
        .I1(swap_result[22]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__22_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[9]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__84 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [39]),
        .I1(swap_result[23]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__23_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[8]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__85 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [40]),
        .I1(swap_result_reg[7]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__24_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[7]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__86 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [41]),
        .I1(swap_result_reg[6]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__25_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[6]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__87 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [42]),
        .I1(swap_result_reg[5]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__26_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[5]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__88 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [43]),
        .I1(swap_result_reg[4]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__27_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[4]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__89 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [44]),
        .I1(swap_result_reg[3]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__28_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[3]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__90 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [45]),
        .I1(swap_result_reg[2]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__29_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[2]));
  LUT5 #(
    .INIT(32'hAAAACFC0)) 
    \Using_FPGA.Native_i_1__91 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [46]),
        .I1(swap_result_reg[1]),
        .I2(ex_swap_instr),
        .I3(\Using_FPGA.Native_i_3__30_n_0 ),
        .I4(ex_sel_alu),
        .O(EX_Fwd[1]));
  LUT3 #(
    .INIT(8'hAC)) 
    \Using_FPGA.Native_i_2__82 
       (.I0(\MEM_DataBus_Addr_reg[0]_0 [47]),
        .I1(\Data_Flow_I/EX_Shift_Logic_Result ),
        .I2(ex_sel_alu),
        .O(EX_Fwd[0]));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__0 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [0]),
        .I2(\EX_Sext_Op_reg[0]_0 [1]),
        .I3(\EX_Sext_Op_reg[0]_0 [0]),
        .I4(\Using_FPGA.Native_41 [1]),
        .O(\Data_Flow_I/Shift_Logic_Module_I/O ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__1 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [1]),
        .I2(\EX_Sext_Op_reg[0]_0 [1]),
        .I3(\EX_Sext_Op_reg[0]_0 [0]),
        .I4(\Using_FPGA.Native_41 [2]),
        .O(\Using_FPGA.Native_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'hA88A088AA8800880)) 
    \Using_FPGA.Native_i_3__10 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [10]),
        .I2(\EX_Sext_Op_reg[0]_0 [0]),
        .I3(\EX_Sext_Op_reg[0]_0 [1]),
        .I4(\Using_FPGA.Native_41 [11]),
        .I5(out),
        .O(\Using_FPGA.Native_i_3__10_n_0 ));
  LUT6 #(
    .INIT(64'hA88A088AA8800880)) 
    \Using_FPGA.Native_i_3__11 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [11]),
        .I2(\EX_Sext_Op_reg[0]_0 [0]),
        .I3(\EX_Sext_Op_reg[0]_0 [1]),
        .I4(\Using_FPGA.Native_41 [12]),
        .I5(out),
        .O(\Using_FPGA.Native_i_3__11_n_0 ));
  LUT6 #(
    .INIT(64'hA88A088AA8800880)) 
    \Using_FPGA.Native_i_3__12 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [12]),
        .I2(\EX_Sext_Op_reg[0]_0 [0]),
        .I3(\EX_Sext_Op_reg[0]_0 [1]),
        .I4(\Using_FPGA.Native_41 [13]),
        .I5(out),
        .O(\Using_FPGA.Native_i_3__12_n_0 ));
  LUT6 #(
    .INIT(64'hA88A088AA8800880)) 
    \Using_FPGA.Native_i_3__13 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [13]),
        .I2(\EX_Sext_Op_reg[0]_0 [0]),
        .I3(\EX_Sext_Op_reg[0]_0 [1]),
        .I4(\Using_FPGA.Native_41 [14]),
        .I5(out),
        .O(\Using_FPGA.Native_i_3__13_n_0 ));
  LUT6 #(
    .INIT(64'hA88A088AA8800880)) 
    \Using_FPGA.Native_i_3__14 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [14]),
        .I2(\EX_Sext_Op_reg[0]_0 [0]),
        .I3(\EX_Sext_Op_reg[0]_0 [1]),
        .I4(\Using_FPGA.Native_41 [15]),
        .I5(out),
        .O(\Using_FPGA.Native_i_3__14_n_0 ));
  LUT6 #(
    .INIT(64'hA88A088AA8800880)) 
    \Using_FPGA.Native_i_3__15 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [15]),
        .I2(\EX_Sext_Op_reg[0]_0 [0]),
        .I3(\EX_Sext_Op_reg[0]_0 [1]),
        .I4(\Using_FPGA.Native_41 [16]),
        .I5(out),
        .O(\Using_FPGA.Native_i_3__15_n_0 ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__16 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [17]),
        .I2(\EX_Sext_Op_reg[0]_0 [0]),
        .I3(\Using_FPGA.Native_41 [16]),
        .I4(\EX_Sext_Op_reg[0]_0 [1]),
        .I5(\Using_FPGA.Native_43 ),
        .O(\Using_FPGA.Native_i_3__16_n_0 ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__17 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [18]),
        .I2(\EX_Sext_Op_reg[0]_0 [0]),
        .I3(\Using_FPGA.Native_41 [17]),
        .I4(\EX_Sext_Op_reg[0]_0 [1]),
        .I5(\Using_FPGA.Native_43 ),
        .O(\Using_FPGA.Native_i_3__17_n_0 ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__18 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [19]),
        .I2(\EX_Sext_Op_reg[0]_0 [0]),
        .I3(\Using_FPGA.Native_41 [18]),
        .I4(\EX_Sext_Op_reg[0]_0 [1]),
        .I5(\Using_FPGA.Native_43 ),
        .O(\Using_FPGA.Native_i_3__18_n_0 ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__19 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [20]),
        .I2(\EX_Sext_Op_reg[0]_0 [0]),
        .I3(\Using_FPGA.Native_41 [19]),
        .I4(\EX_Sext_Op_reg[0]_0 [1]),
        .I5(\Using_FPGA.Native_43 ),
        .O(\Using_FPGA.Native_i_3__19_n_0 ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__2 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [2]),
        .I2(\EX_Sext_Op_reg[0]_0 [1]),
        .I3(\EX_Sext_Op_reg[0]_0 [0]),
        .I4(\Using_FPGA.Native_41 [3]),
        .O(\Using_FPGA.Native_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__20 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [21]),
        .I2(\EX_Sext_Op_reg[0]_0 [0]),
        .I3(\Using_FPGA.Native_41 [20]),
        .I4(\EX_Sext_Op_reg[0]_0 [1]),
        .I5(\Using_FPGA.Native_43 ),
        .O(\Using_FPGA.Native_i_3__20_n_0 ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__21 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [22]),
        .I2(\EX_Sext_Op_reg[0]_0 [0]),
        .I3(\Using_FPGA.Native_41 [21]),
        .I4(\EX_Sext_Op_reg[0]_0 [1]),
        .I5(\Using_FPGA.Native_43 ),
        .O(\Using_FPGA.Native_i_3__21_n_0 ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__22 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [23]),
        .I2(\EX_Sext_Op_reg[0]_0 [0]),
        .I3(\Using_FPGA.Native_41 [22]),
        .I4(\EX_Sext_Op_reg[0]_0 [1]),
        .I5(\Using_FPGA.Native_43 ),
        .O(\Using_FPGA.Native_i_3__22_n_0 ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__23 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [24]),
        .I2(\EX_Sext_Op_reg[0]_0 [0]),
        .I3(\Using_FPGA.Native_41 [23]),
        .I4(\EX_Sext_Op_reg[0]_0 [1]),
        .I5(\Using_FPGA.Native_43 ),
        .O(\Using_FPGA.Native_i_3__23_n_0 ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__24 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [25]),
        .I2(\EX_Sext_Op_reg[0]_0 [0]),
        .I3(\Using_FPGA.Native_41 [24]),
        .I4(\EX_Sext_Op_reg[0]_0 [1]),
        .I5(\Using_FPGA.Native_43 ),
        .O(\Using_FPGA.Native_i_3__24_n_0 ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__25 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [26]),
        .I2(\EX_Sext_Op_reg[0]_0 [0]),
        .I3(\Using_FPGA.Native_41 [25]),
        .I4(\EX_Sext_Op_reg[0]_0 [1]),
        .I5(\Using_FPGA.Native_43 ),
        .O(\Using_FPGA.Native_i_3__25_n_0 ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__26 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [27]),
        .I2(\EX_Sext_Op_reg[0]_0 [0]),
        .I3(\Using_FPGA.Native_41 [26]),
        .I4(\EX_Sext_Op_reg[0]_0 [1]),
        .I5(\Using_FPGA.Native_43 ),
        .O(\Using_FPGA.Native_i_3__26_n_0 ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__27 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [28]),
        .I2(\EX_Sext_Op_reg[0]_0 [0]),
        .I3(\Using_FPGA.Native_41 [27]),
        .I4(\EX_Sext_Op_reg[0]_0 [1]),
        .I5(\Using_FPGA.Native_43 ),
        .O(\Using_FPGA.Native_i_3__27_n_0 ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__28 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [29]),
        .I2(\EX_Sext_Op_reg[0]_0 [0]),
        .I3(\Using_FPGA.Native_41 [28]),
        .I4(\EX_Sext_Op_reg[0]_0 [1]),
        .I5(\Using_FPGA.Native_43 ),
        .O(\Using_FPGA.Native_i_3__28_n_0 ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__29 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [30]),
        .I2(\EX_Sext_Op_reg[0]_0 [0]),
        .I3(\Using_FPGA.Native_41 [29]),
        .I4(\EX_Sext_Op_reg[0]_0 [1]),
        .I5(\Using_FPGA.Native_43 ),
        .O(\Using_FPGA.Native_i_3__29_n_0 ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__3 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [3]),
        .I2(\EX_Sext_Op_reg[0]_0 [1]),
        .I3(\EX_Sext_Op_reg[0]_0 [0]),
        .I4(\Using_FPGA.Native_41 [4]),
        .O(\Using_FPGA.Native_i_3__3_n_0 ));
  LUT6 #(
    .INIT(64'h8A80AAAA8A800000)) 
    \Using_FPGA.Native_i_3__30 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [31]),
        .I2(\EX_Sext_Op_reg[0]_0 [0]),
        .I3(\Using_FPGA.Native_41 [30]),
        .I4(\EX_Sext_Op_reg[0]_0 [1]),
        .I5(\Using_FPGA.Native_43 ),
        .O(\Using_FPGA.Native_i_3__30_n_0 ));
  LUT6 #(
    .INIT(64'hB888B8B8B8888888)) 
    \Using_FPGA.Native_i_3__31 
       (.I0(swap_result_reg[0]),
        .I1(ex_swap_instr),
        .I2(ex_Enable_Sext_Shift),
        .I3(\Using_FPGA.Native_i_5__0_n_0 ),
        .I4(\EX_Sext_Op_reg[0]_0 [1]),
        .I5(\Using_FPGA.Native_43 ),
        .O(\Data_Flow_I/EX_Shift_Logic_Result ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__4 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [4]),
        .I2(\EX_Sext_Op_reg[0]_0 [1]),
        .I3(\EX_Sext_Op_reg[0]_0 [0]),
        .I4(\Using_FPGA.Native_41 [5]),
        .O(\Using_FPGA.Native_i_3__4_n_0 ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__5 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [5]),
        .I2(\EX_Sext_Op_reg[0]_0 [1]),
        .I3(\EX_Sext_Op_reg[0]_0 [0]),
        .I4(\Using_FPGA.Native_41 [6]),
        .O(\Using_FPGA.Native_i_3__5_n_0 ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__6 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [6]),
        .I2(\EX_Sext_Op_reg[0]_0 [1]),
        .I3(\EX_Sext_Op_reg[0]_0 [0]),
        .I4(\Using_FPGA.Native_41 [7]),
        .O(\Using_FPGA.Native_i_3__6_n_0 ));
  LUT5 #(
    .INIT(32'hA8880888)) 
    \Using_FPGA.Native_i_3__7 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [7]),
        .I2(\EX_Sext_Op_reg[0]_0 [1]),
        .I3(\EX_Sext_Op_reg[0]_0 [0]),
        .I4(\Using_FPGA.Native_41 [8]),
        .O(\Using_FPGA.Native_i_3__7_n_0 ));
  LUT6 #(
    .INIT(64'hA88A088AA8800880)) 
    \Using_FPGA.Native_i_3__8 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [8]),
        .I2(\EX_Sext_Op_reg[0]_0 [0]),
        .I3(\EX_Sext_Op_reg[0]_0 [1]),
        .I4(\Using_FPGA.Native_41 [9]),
        .I5(out),
        .O(\Using_FPGA.Native_i_3__8_n_0 ));
  LUT6 #(
    .INIT(64'hA88A088AA8800880)) 
    \Using_FPGA.Native_i_3__9 
       (.I0(ex_Enable_Sext_Shift),
        .I1(\Using_FPGA.Native_41 [9]),
        .I2(\EX_Sext_Op_reg[0]_0 [0]),
        .I3(\EX_Sext_Op_reg[0]_0 [1]),
        .I4(\Using_FPGA.Native_41 [10]),
        .I5(out),
        .O(\Using_FPGA.Native_i_3__9_n_0 ));
  LUT5 #(
    .INIT(32'h0DFF0800)) 
    \Using_FPGA.Native_i_5__0 
       (.I0(ex_shift_op[1]),
        .I1(ex_MSR[1]),
        .I2(ex_shift_op[0]),
        .I3(\EX_Sext_Op_reg[0]_0 [0]),
        .I4(\Using_FPGA.Native_41 [31]),
        .O(\Using_FPGA.Native_i_5__0_n_0 ));
  system_microblaze_0_0__MB_FDRE_68 \Using_FPGA_2.ex_byte_access_i_Inst 
       (.Clk(Clk),
        .\MEM_DataBus_Write_Data_reg[0] (\MEM_DataBus_Write_Data_reg[0] ),
        .\MEM_DataBus_Write_Data_reg[0]_0 (ex_reverse_mem_access),
        .\MEM_DataBus_Write_Data_reg[0]_1 (ex_doublet_access),
        .\Using_FPGA.Native_0 (ex_byte_access),
        .\Using_FPGA.Native_1 (\^Performance_Debug_Control.dbg_state_nohalt_reg [126:103]),
        .\Using_FPGA.Native_2 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_3 (PreFetch_Buffer_I1_n_180),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_FDRE_69 \Using_FPGA_2.ex_doublet_access_i_Inst 
       (.Clk(Clk),
        .\MEM_DataBus_Byte_Enable_reg[0] (ex_byte_access),
        .\MEM_DataBus_Byte_Enable_reg[0]_0 (\MEM_DataBus_Byte_Enable_reg[0] ),
        .\MEM_DataBus_Byte_Enable_reg[0]_1 (\Using_FPGA.Native_41 [0]),
        .\MEM_DataBus_Byte_Enable_reg[0]_2 (ex_reverse_mem_access),
        .\MEM_DataBus_Byte_Enable_reg[0]_3 (\MEM_DataBus_Byte_Enable_reg[0]_0 ),
        .\Using_FPGA.Native_0 (ex_doublet_access),
        .\Using_FPGA.Native_1 (\^Performance_Debug_Control.dbg_state_nohalt_reg [101:98]),
        .\Using_FPGA.Native_2 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_3 (PreFetch_Buffer_I1_n_181),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_FDRE_70 \Using_FPGA_2.ex_is_load_instr_Inst 
       (.Clk(Clk),
        .MEM_Sel_MEM_Res_I_reg(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_MEM_Sel_MEM_Res_I_reg_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\^ex_is_load_instr_s ),
        .\Using_FPGA.Native_1 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_2 (PreFetch_Buffer_I1_n_195),
        .ex_Sel_SPR_BTR(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_BTR_UNCONNECTED ),
        .ex_Sel_SPR_EAR(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_EAR_UNCONNECTED ),
        .ex_Sel_SPR_EAR_reg(\Using_FPGA_2.ex_is_load_instr_Inst_n_2 ),
        .ex_Sel_SPR_EDR(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_EDR_UNCONNECTED ),
        .ex_Sel_SPR_FSR(\NLW_Using_FPGA_2.ex_is_load_instr_Inst_ex_Sel_SPR_FSR_UNCONNECTED ),
        .ex_is_multi_instr2(ex_is_multi_instr2),
        .mem_is_multi_or_load_instr0(mem_is_multi_or_load_instr0),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_FDRE_71 \Using_FPGA_2.ex_is_lwx_instr_Inst 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (PreFetch_Buffer_I1_n_174),
        .\Using_FPGA.Native_i_2__20 (mem_Exception_Taken),
        .\Using_LWX_SWX_instr.ex_reservation_reg (\Using_FPGA_2.ex_is_lwx_instr_Inst_n_1 ),
        .\Using_LWX_SWX_instr.ex_reservation_reg_0 (\Using_FPGA_2.ex_is_swx_instr_Inst_n_1 ),
        .ex_MSR_Load_LWX_SWX_C(ex_MSR_Load_LWX_SWX_C),
        .ex_is_swx_instr_s(ex_is_swx_instr_s),
        .ex_load_store_instr_s(ex_load_store_instr_s),
        .ex_reservation(ex_reservation),
        .p_227_in(p_227_in),
        .p_232_in(p_232_in),
        .sync_reset(reset_bool_for_rst),
        .wb_exception(wb_exception));
  system_microblaze_0_0__MB_FDRE_72 \Using_FPGA_2.ex_is_swx_instr_Inst 
       (.Clk(Clk),
        .D224_out(D224_out),
        .\Using_FPGA.Native_0 (\^Performance_Debug_Control.dbg_state_nohalt_reg [102]),
        .\Using_FPGA.Native_1 (of_PipeRun_for_ce),
        .\Using_LWX_SWX_instr.ex_reservation_reg (wb_Halted),
        .\Using_LWX_SWX_instr.ex_reservation_reg_0 (\Using_FPGA.Native_1 ),
        .ex_MSR_Set_SW_BIP(ex_MSR_Set_SW_BIP),
        .ex_is_load_instr_s(\^ex_is_load_instr_s ),
        .ex_is_swx_instr_s(ex_is_swx_instr_s),
        .ex_load_store_instr_s(ex_load_store_instr_s),
        .ex_reservation(ex_reservation),
        .ex_swx_access__0(ex_swx_access__0),
        .p_227_in(p_227_in),
        .p_232_in(p_232_in),
        .sync_reset(reset_bool_for_rst),
        .wb_exception(wb_exception),
        .wb_exception_i_reg(\Using_FPGA_2.ex_is_swx_instr_Inst_n_1 ));
  system_microblaze_0_0__MB_FDRE_73 \Using_FPGA_2.ex_load_store_instr_Inst 
       (.Clk(Clk),
        .D_AS(mem_Exception_Taken),
        .MEM_DataBus_Access_reg(\Using_FPGA_2.ex_load_store_instr_Inst_n_1 ),
        .MEM_DataBus_Access_reg_0(mem_databus_access),
        .MEM_DataBus_Access_reg_1(\Using_FPGA.Native_0 ),
        .MEM_DataBus_Access_reg_2(\Using_FPGA.Native_1 ),
        .SRI(SRI),
        .\Using_FPGA.Native_0 (\Using_FPGA_2.ex_load_store_instr_Inst_n_4 ),
        .\Using_FPGA.Native_1 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_2 (PreFetch_Buffer_I1_n_187),
        .ex_is_swx_instr_s(ex_is_swx_instr_s),
        .ex_load_store_instr_s(ex_load_store_instr_s),
        .ex_reservation(ex_reservation),
        .ex_swx_access__0(ex_swx_access__0),
        .mem_exception_from_ex(mem_exception_from_ex),
        .mem_load_store_access_reg(\Using_FPGA.Native_40 ),
        .mem_load_store_access_reg_0(\Using_FPGA.Native_39 ),
        .mem_load_store_access_reg_1(ex_valid),
        .mem_valid_instr(mem_valid_instr),
        .p_227_in(p_227_in),
        .p_232_in(p_232_in),
        .sync_reset(reset_bool_for_rst),
        .wb_exception(wb_exception));
  system_microblaze_0_0__MB_FDRE_74 \Using_FPGA_2.ex_reverse_mem_access_inst 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (PreFetch_Buffer_I1_n_196),
        .ex_reverse_mem_access(ex_reverse_mem_access),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_FDRE_75 \Using_FPGA_3.ex_clear_MSR_BIP_instr_Inst 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA_3.of_clear_MSR_BIP_hold_Inst_n_0 ),
        .\Using_FPGA.Native_2 (ex_set_bip_reg_0),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_38 ),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_1 ),
        .ex_MSR(ex_MSR[2]),
        .ex_set_bip_reg(ex_set_bip_reg_1),
        .p_232_in(p_232_in),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_FDR \Using_FPGA_3.of_clear_MSR_BIP_hold_Inst 
       (.Clk(Clk),
        .I0(I0),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_reg (\Using_FPGA_3.of_clear_MSR_BIP_hold_Inst_n_0 ),
        .Q({ex_opcode[0],ex_opcode[1],ex_opcode[2],ex_opcode[3],ex_opcode[4],ex_opcode[5]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_39 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_40 ),
        .\Using_FPGA.Native_2 (ex_valid),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_4 (of_PipeRun_for_ce),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_LUT6__parameterized8 \Using_FPGA_4.of_read_ex_write_op1_conflict_INST1 
       (.D({\ex_gpr_write_addr_reg_n_0_[0] ,I2,I4}),
        .O(O),
        .of_predecode_raw({of_predecode_raw[1],of_predecode_raw[2],of_predecode_raw[3]}));
  system_microblaze_0_0__MB_LUT6__parameterized10 \Using_FPGA_4.of_read_ex_write_op1_conflict_INST2 
       (.A(A),
        .D(\ex_gpr_write_addr_reg_n_0_[4] ),
        .I0(I0),
        .O(O),
        .\Using_FPGA.Native_i_1__59_0 (ex_gpr_write_reg_n_0),
        .\Using_FPGA.Native_i_1__59_1 (ex_valid),
        .ex_is_multi_or_load_instr(ex_is_multi_or_load_instr),
        .of_predecode_raw({of_predecode_raw[4],of_predecode_raw[5]}));
  system_microblaze_0_0__MB_LUT6__parameterized8_76 \Using_FPGA_4.of_read_ex_write_op2_conflict_INST1 
       (.D({\ex_gpr_write_addr_reg_n_0_[0] ,I2,I4}),
        .ex_is_multi_or_load_instr(ex_is_multi_or_load_instr),
        .ex_is_multi_or_load_instr_reg(\Using_FPGA_4.of_read_ex_write_op2_conflict_INST1_n_0 ),
        .of_predecode_raw({of_predecode_raw[6],of_predecode_raw[7],of_predecode_raw[8]}),
        .of_read_ex_write_op2_conflict_part2(of_read_ex_write_op2_conflict_part2),
        .of_use_op2_s(of_use_op2_s));
  system_microblaze_0_0__MB_LUT6__parameterized10_77 \Using_FPGA_4.of_read_ex_write_op2_conflict_INST2 
       (.D(\ex_gpr_write_addr_reg_n_0_[4] ),
        .I0(I0),
        .\Using_FPGA.Native_i_1__11 (ex_gpr_write_reg_n_0),
        .\Using_FPGA.Native_i_1__11_0 (ex_valid),
        .of_predecode_raw({of_predecode_raw[9],of_predecode_raw[10]}),
        .of_read_ex_write_op2_conflict_part2(of_read_ex_write_op2_conflict_part2));
  system_microblaze_0_0__MB_LUT6__parameterized8_78 \Using_FPGA_4.of_read_ex_write_op3_conflict_INST1 
       (.D({\ex_gpr_write_addr_reg_n_0_[0] ,I2,I4}),
        .\Using_FPGA.Native_i_1__57_0 ({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1]}),
        .\Using_FPGA.Native_i_1__57_1 (of_gpr_op3_rd_addr[2]),
        .ex_is_multi_or_load_instr(ex_is_multi_or_load_instr),
        .ex_is_multi_or_load_instr_reg(\Using_FPGA_4.of_read_ex_write_op3_conflict_INST1_n_0 ),
        .of_predecode_raw(of_predecode_raw[0]),
        .of_read_ex_write_op3_conflict_part2(of_read_ex_write_op3_conflict_part2));
  system_microblaze_0_0__MB_LUT6__parameterized10_79 \Using_FPGA_4.of_read_ex_write_op3_conflict_INST2 
       (.D(\ex_gpr_write_addr_reg_n_0_[4] ),
        .I0(I0),
        .\Using_FPGA.Native_i_1__57 (of_gpr_op3_rd_addr[3]),
        .\Using_FPGA.Native_i_1__57_0 (of_gpr_op3_rd_addr[4]),
        .\Using_FPGA.Native_i_1__57_1 (ex_gpr_write_reg_n_0),
        .\Using_FPGA.Native_i_1__57_2 (ex_valid),
        .of_read_ex_write_op3_conflict_part2(of_read_ex_write_op3_conflict_part2));
  system_microblaze_0_0__MB_LUT6__parameterized8_80 \Using_FPGA_4.of_read_mem_write_op1_conflict_INST1 
       (.Q({mem_gpr_write_addr[0],mem_gpr_write_addr[1],mem_gpr_write_addr[2]}),
        .of_predecode_raw({of_predecode_raw[1],of_predecode_raw[2],of_predecode_raw[3]}),
        .of_read_mem_write_op1_conflict_part1(of_read_mem_write_op1_conflict_part1));
  system_microblaze_0_0__MB_LUT6__parameterized10_81 \Using_FPGA_4.of_read_mem_write_op1_conflict_INST2 
       (.Q({mem_gpr_write_addr[3],mem_gpr_write_addr[4]}),
        .mem_gpr_write(mem_gpr_write),
        .mem_is_multi_or_load_instr(mem_is_multi_or_load_instr),
        .mem_is_multi_or_load_instr_reg(\Using_FPGA_4.of_read_mem_write_op1_conflict_INST2_n_0 ),
        .mem_valid_instr(mem_valid_instr),
        .of_predecode_raw({of_predecode_raw[4],of_predecode_raw[5]}),
        .of_read_mem_write_op1_conflict_part1(of_read_mem_write_op1_conflict_part1));
  system_microblaze_0_0__MB_LUT6__parameterized8_82 \Using_FPGA_4.of_read_mem_write_op2_conflict_INST1 
       (.Q({mem_gpr_write_addr[0],mem_gpr_write_addr[1],mem_gpr_write_addr[2]}),
        .of_predecode_raw({of_predecode_raw[6],of_predecode_raw[7],of_predecode_raw[8]}),
        .of_read_mem_write_op2_conflict_part1(of_read_mem_write_op2_conflict_part1));
  system_microblaze_0_0__MB_LUT6__parameterized10_83 \Using_FPGA_4.of_read_mem_write_op2_conflict_INST2 
       (.Q({mem_gpr_write_addr[3],mem_gpr_write_addr[4]}),
        .mem_gpr_write(mem_gpr_write),
        .mem_valid_instr(mem_valid_instr),
        .of_predecode_raw({of_predecode_raw[9],of_predecode_raw[10]}),
        .of_read_mem_write_op2_conflict_part2(of_read_mem_write_op2_conflict_part2));
  system_microblaze_0_0__MB_LUT6__parameterized8_84 \Using_FPGA_4.of_read_mem_write_op3_conflict_INST1 
       (.D({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1]}),
        .Q({mem_gpr_write_addr[0],mem_gpr_write_addr[1],mem_gpr_write_addr[2]}),
        .\Using_FPGA.Native_0 (\Using_FPGA_4.of_read_mem_write_op3_conflict_INST1_n_0 ),
        .\Using_FPGA.Native_i_1__56_0 (of_gpr_op3_rd_addr[2]),
        .mem_is_multi_or_load_instr(mem_is_multi_or_load_instr),
        .of_predecode_raw(of_predecode_raw[0]),
        .of_read_mem_write_op3_conflict_part2(of_read_mem_write_op3_conflict_part2));
  system_microblaze_0_0__MB_LUT6__parameterized10_85 \Using_FPGA_4.of_read_mem_write_op3_conflict_INST2 
       (.Q({mem_gpr_write_addr[3],mem_gpr_write_addr[4]}),
        .\Using_FPGA.Native_i_1__56 (of_gpr_op3_rd_addr[3]),
        .\Using_FPGA.Native_i_1__56_0 (of_gpr_op3_rd_addr[4]),
        .mem_gpr_write(mem_gpr_write),
        .mem_valid_instr(mem_valid_instr),
        .of_read_mem_write_op3_conflict_part2(of_read_mem_write_op3_conflict_part2));
  FDRE #(
    .INIT(1'b0)) 
    \Using_LWX_SWX_instr.ex_reservation_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA_2.ex_is_lwx_instr_Inst_n_1 ),
        .Q(ex_reservation),
        .R(1'b0));
  system_microblaze_0_0__carry_and_86 \Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1 
       (.\Using_FPGA.Native (\NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_Using_FPGA.Native_UNCONNECTED ),
        .if_pc_incr_carry0(\NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_if_pc_incr_carry0_UNCONNECTED ),
        .if_pc_incr_carry1(\NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_if_pc_incr_carry1_UNCONNECTED ),
        .lopt(\NLW_Using_PC_Incr_Dbg_or_Prot.if_pc_incr_carry_and_1_lopt_UNCONNECTED ),
        .lopt_1(lopt_4));
  FDRE #(
    .INIT(1'b0)) 
    WB_Byte_Access_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(mem_byte_access),
        .Q(wb_byte_access),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    WB_DelaySlot_Instr_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(mem_delayslot_instr),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    WB_Doublet_Access_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(mem_doublet_access),
        .Q(wb_doublet_access),
        .R(reset_bool_for_rst));
  LUT2 #(
    .INIT(4'hB)) 
    \WB_MEM_Result[0]_i_1 
       (.I0(reset_bool_for_rst),
        .I1(mem_Sel_MEM_Res),
        .O(SR));
  FDRE #(
    .INIT(1'b0)) 
    WB_PC_Valid_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(mem_valid_instr),
        .Q(wb_pc_valid),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    WB_Read_Imm_Reg_1_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(mem_read_imm_reg_1),
        .Q(wb_read_imm_reg_1),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    WB_Read_Imm_Reg_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(mem_read_imm_reg),
        .Q(wb_read_imm_reg),
        .R(reset_bool_for_rst));
  LUT6 #(
    .INIT(64'h0000000000220322)) 
    active_access_i_1
       (.I0(\Use_DBUS.DAXI_Interface_I1/M_AXI_DP_AWVALID_i1 ),
        .I1(\^LOCKSTEP_Master_Out [2]),
        .I2(M_AXI_DP_BVALID),
        .I3(active_access),
        .I4(M_AXI_DP_RVALID),
        .I5(reset_bool_for_rst),
        .O(M_AXI_DP_BVALID_0));
  LUT5 #(
    .INIT(32'hEEEEEEE0)) 
    active_wakeup_i_1
       (.I0(wakeup_i[0]),
        .I1(wakeup_i[1]),
        .I2(Sleep_Decode),
        .I3(\^Hibernate ),
        .I4(\^Suspend ),
        .O(active_wakeup0));
  FDRE #(
    .INIT(1'b0)) 
    active_wakeup_reg
       (.C(Clk),
        .CE(1'b1),
        .D(active_wakeup0),
        .Q(active_wakeup),
        .R(reset_bool_for_rst));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[0]_i_2 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [26]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(\MEM_DataBus_Addr_reg[0]_0 [11]),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg_0[23]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[10]_i_1 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [16]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(\data_rd_reg_reg[10] ),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg_0[13]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[11]_i_1 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [15]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(\data_rd_reg_reg[11] ),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg_0[12]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[12]_i_1 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [14]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(\data_rd_reg_reg[12] ),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg_0[11]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[13]_i_1 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [13]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(\data_rd_reg_reg[13] ),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg_0[10]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[14]_i_1 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [12]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(\data_rd_reg_reg[14] ),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg_0[9]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[15]_i_1 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [11]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(\data_rd_reg_reg[15] ),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg_0[8]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[1]_i_1 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [25]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(\data_rd_reg_reg[1] ),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg_0[22]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[24]_i_1 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [10]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(\data_rd_reg_reg[24] ),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg_0[7]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[25]_i_1 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [9]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(\data_rd_reg_reg[25] ),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg_0[6]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[26]_i_1 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [8]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(\data_rd_reg_reg[26] ),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg_0[5]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[27]_i_1 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [7]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(\data_rd_reg_reg[27] ),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg_0[4]));
  LUT6 #(
    .INIT(64'hBF80BFBFBF808080)) 
    \data_rd_reg[28]_i_1 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [6]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(\MEM_DataBus_Addr_reg[0]_0 [10]),
        .I4(read_register_MSR_1),
        .I5(\data_rd_reg_reg[28] ),
        .O(wb_gpr_write_dbg_reg_0[3]));
  LUT6 #(
    .INIT(64'hBF80BFBFBF808080)) 
    \data_rd_reg[29]_i_1 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [5]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(\MEM_DataBus_Addr_reg[0]_0 [9]),
        .I4(read_register_MSR_1),
        .I5(\data_rd_reg_reg[29] ),
        .O(wb_gpr_write_dbg_reg_0[2]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[2]_i_1 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [24]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(\data_rd_reg_reg[2] ),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg_0[21]));
  LUT6 #(
    .INIT(64'hBF80BFBFBF808080)) 
    \data_rd_reg[30]_i_1 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [4]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(\MEM_DataBus_Addr_reg[0]_0 [8]),
        .I4(read_register_MSR_1),
        .I5(\data_rd_reg_reg[30] ),
        .O(wb_gpr_write_dbg_reg_0[1]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[31]_i_1 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [3]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(DI),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg_0[0]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[3]_i_1 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [23]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(\data_rd_reg_reg[3] ),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg_0[20]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[4]_i_1 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [22]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(\data_rd_reg_reg[4] ),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg_0[19]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[5]_i_1 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [21]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(\data_rd_reg_reg[5] ),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg_0[18]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[6]_i_1 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [20]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(\data_rd_reg_reg[6] ),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg_0[17]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[7]_i_1 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [19]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(\data_rd_reg_reg[7] ),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg_0[16]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[8]_i_1 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [18]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(\data_rd_reg_reg[8] ),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg_0[15]));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[9]_i_1 
       (.I0(\^Performance_Debug_Control.dbg_state_nohalt_reg [17]),
        .I1(wb_gpr_write_dbg),
        .I2(if_fetch_in_progress_reg_0),
        .I3(\data_rd_reg_reg[9] ),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg_0[14]));
  FDRE #(
    .INIT(1'b0)) 
    ex_Write_DCache_decode_reg
       (.C(Clk),
        .CE(1'b1),
        .D(ex_Write_DCache_decode_cmb),
        .Q(ex_write_dcache_instr),
        .R(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    ex_alu_sel_logic_i_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_197),
        .Q(EX_ALU_Sel_Logic),
        .S(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_branch_with_delayslot_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_48),
        .Q(ex_branch_with_delayslot),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_delayslot_Instr_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_delayslot_Instr0),
        .Q(ex_delayslot_Instr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_enable_alu_i_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_66),
        .Q(EX_Enable_ALU),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_enable_sext_shift_i_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_enable_sext_shift_i0),
        .Q(ex_Enable_Sext_Shift),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_first_cycle_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\Use_MuxCy[11].OF_Piperun_Stage_n_3 ),
        .Q(ex_first_cycle),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ex_gpr_write_addr_reg[0] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_gpr_op3_rd_addr[0]),
        .Q(\ex_gpr_write_addr_reg_n_0_[0] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_gpr_write_addr_reg[1] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_gpr_op3_rd_addr[1]),
        .Q(I2),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_gpr_write_addr_reg[2] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_gpr_op3_rd_addr[2]),
        .Q(I4),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_gpr_write_addr_reg[3] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_gpr_op3_rd_addr[3]),
        .Q(I0),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_gpr_write_addr_reg[4] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_gpr_op3_rd_addr[4]),
        .Q(\ex_gpr_write_addr_reg_n_0_[4] ),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_gpr_write_dbg_reg
       (.C(Clk),
        .CE(1'b1),
        .D(PreFetch_Buffer_I1_n_184),
        .Q(ex_gpr_write_dbg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ex_gpr_write_reg
       (.C(Clk),
        .CE(1'b1),
        .D(PreFetch_Buffer_I1_n_49),
        .Q(ex_gpr_write_reg_n_0),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0000002E)) 
    ex_hibernate_i_i_1
       (.I0(\^Hibernate ),
        .I1(ex_sleep_i0),
        .I2(p_1_in118_in),
        .I3(reset_bool_for_rst),
        .I4(active_wakeup),
        .O(ex_hibernate_i_i_1_n_0));
  LUT6 #(
    .INIT(64'hAA2AAA2AAA2AAAAA)) 
    ex_hibernate_i_i_2
       (.I0(ex_mbar_sleep),
        .I1(p_232_in),
        .I2(ex_mbar_decode),
        .I3(ex_jump_hold),
        .I4(ex_mbar_stall_no_sleep_1),
        .I5(ex_first_cycle),
        .O(ex_sleep_i0));
  FDRE #(
    .INIT(1'b0)) 
    ex_hibernate_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(ex_hibernate_i_i_1_n_0),
        .Q(\^Hibernate ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ex_instr_reg[6] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_gpr_op3_rd_addr[0]),
        .Q(p_1_in118_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \ex_instr_reg[7] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_gpr_op3_rd_addr[1]),
        .Q(p_0_in117_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ex_is_div_instr_I_reg
       (.C(Clk),
        .CE(1'b1),
        .D(PreFetch_Buffer_I1_n_50),
        .Q(EX_Is_Div_Instr),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ex_is_multi_instr2_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_Sel_SPR_MSR1),
        .Q(ex_is_multi_instr2),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_is_multi_or_load_instr_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_is_multi_or_load_instr0),
        .Q(ex_is_multi_or_load_instr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_jump_hold_reg
       (.C(Clk),
        .CE(1'b1),
        .D(jump_logic_I1_n_5),
        .Q(ex_jump_hold),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ex_jump_nodelay_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\Use_MuxCy[11].OF_Piperun_Stage_n_1 ),
        .Q(ex_jump_nodelay),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ex_load_alu_carry_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(PreFetch_Buffer_I1_n_191),
        .Q(ex_load_alu_carry_reg_0),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_load_shift_carry_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_load_shift_carry0),
        .Q(ex_load_shift_carry),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_mbar_decode_reg
       (.C(Clk),
        .CE(1'b1),
        .D(ex_mbar_decode_cmb),
        .Q(ex_mbar_decode),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_mbar_is_sleep_reg
       (.C(Clk),
        .CE(1'b1),
        .D(ex_mbar_is_sleep_cmb),
        .Q(ex_mbar_is_sleep),
        .R(reset_bool_for_rst));
  LUT6 #(
    .INIT(64'h000000000000EAAA)) 
    ex_mbar_sleep_i_1
       (.I0(ex_mbar_sleep),
        .I1(ex_mbar_is_sleep),
        .I2(p_233_in),
        .I3(ex_first_cycle),
        .I4(active_wakeup),
        .I5(reset_bool_for_rst),
        .O(ex_mbar_sleep_i_1_n_0));
  LUT4 #(
    .INIT(16'hA200)) 
    ex_mbar_sleep_i_2
       (.I0(ex_mbar_decode),
        .I1(\Using_FPGA.Native_39 ),
        .I2(\Using_FPGA.Native_40 ),
        .I3(ex_valid),
        .O(p_233_in));
  FDRE #(
    .INIT(1'b0)) 
    ex_mbar_sleep_reg
       (.C(Clk),
        .CE(1'b1),
        .D(ex_mbar_sleep_i_1_n_0),
        .Q(ex_mbar_sleep),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT4 #(
    .INIT(16'h4F44)) 
    ex_mbar_stall_no_sleep_1_i_1
       (.I0(\ex_gpr_write_addr_reg_n_0_[4] ),
        .I1(if_fetch_in_progress),
        .I2(I0),
        .I3(mem_valid_instr),
        .O(ex_mbar_stall_no_sleep_10));
  FDRE #(
    .INIT(1'b0)) 
    ex_mbar_stall_no_sleep_1_reg
       (.C(Clk),
        .CE(1'b1),
        .D(ex_mbar_stall_no_sleep_10),
        .Q(ex_mbar_stall_no_sleep_1),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_mfsmsr_i_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_Sel_SPR_MSR88_out),
        .Q(ex_mfsmsr_i),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_move_to_MSR_instr_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_move_to_MSR_instr93_out),
        .Q(ex_move_to_MSR_instr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_opcode_reg[0] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_instr_raw[0]),
        .Q(ex_opcode[0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_opcode_reg[1] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_instr_raw[1]),
        .Q(ex_opcode[1]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_opcode_reg[2] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_instr_raw[2]),
        .Q(ex_opcode[2]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_opcode_reg[3] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_instr_raw[3]),
        .Q(ex_opcode[3]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_opcode_reg[4] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_instr_raw[4]),
        .Q(ex_opcode[4]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_opcode_reg[5] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(of_instr_raw[5]),
        .Q(ex_opcode[5]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_read_imm_reg_1_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_read_imm_reg),
        .Q(ex_read_imm_reg_1),
        .R(reset_bool_for_rst));
  LUT5 #(
    .INIT(32'h00002AAA)) 
    ex_read_imm_reg_i_1
       (.I0(of_read_imm_reg_ii),
        .I1(wb_exception),
        .I2(\^Q [1]),
        .I3(\^Q [0]),
        .I4(\mem_pc_i_reg[0]_0 ),
        .O(ex_read_imm_reg_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ex_read_imm_reg_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_read_imm_reg_i_1_n_0),
        .Q(ex_read_imm_reg),
        .R(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    ex_sel_alu_i_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_sel_alu_i0),
        .Q(ex_sel_alu),
        .S(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    ex_set_bip_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_set_bip),
        .Q(ex_set_bip_reg_0),
        .R(reset_bool_for_rst));
  LUT5 #(
    .INIT(32'h0000002E)) 
    ex_sleep_i_i_1
       (.I0(Sleep_Decode),
        .I1(ex_sleep_i0),
        .I2(p_0_in117_in),
        .I3(reset_bool_for_rst),
        .I4(active_wakeup),
        .O(ex_sleep_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ex_sleep_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(ex_sleep_i_i_1_n_0),
        .Q(Sleep_Decode),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h000000000000E222)) 
    ex_suspend_i_i_1
       (.I0(\^Suspend ),
        .I1(ex_sleep_i0),
        .I2(p_1_in118_in),
        .I3(p_0_in117_in),
        .I4(reset_bool_for_rst),
        .I5(active_wakeup),
        .O(ex_suspend_i_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ex_suspend_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(ex_suspend_i_i_1_n_0),
        .Q(\^Suspend ),
        .R(1'b0));
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    ex_valid_jump_reg
       (.C(Clk),
        .CE(1'b1),
        .D(PreFetch_Buffer_I1_n_185),
        .Q(ex_valid_jump),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ex_valid_reg
       (.C(Clk),
        .CE(1'b1),
        .D(PreFetch_Buffer_I1_n_186),
        .Q(ex_valid),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFBBB333308880000)) 
    exception_i_2
       (.I0(if_fetch_in_progress_reg_0),
        .I1(wb_valid_reg_0),
        .I2(\^Q [0]),
        .I3(\^Q [1]),
        .I4(wb_exception),
        .I5(exception_reg),
        .O(\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg ));
  FDRE #(
    .INIT(1'b0)) 
    if_fetch_in_progress_reg
       (.C(Clk),
        .CE(1'b1),
        .D(PreFetch_Buffer_I1_n_183),
        .Q(if_fetch_in_progress),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    if_missed_fetch_reg
       (.C(Clk),
        .CE(1'b1),
        .D(jump_logic_I1_n_41),
        .Q(if_missed_fetch),
        .R(1'b0));
  system_microblaze_0_0__carry_and_87 if_pc_incr_carry_and_0
       (.if_missed_fetch(if_missed_fetch),
        .if_pc_incr_carry0(NLW_if_pc_incr_carry_and_0_if_pc_incr_carry0_UNCONNECTED),
        .lopt(NLW_if_pc_incr_carry_and_0_lopt_UNCONNECTED),
        .lopt_1(lopt_4),
        .lopt_2(\Using_FPGA.Native_35 ),
        .lopt_3(NLW_if_pc_incr_carry_and_0_lopt_3_UNCONNECTED),
        .lopt_4(lopt_6),
        .lopt_5(if_fetch_for_timing_optimization1),
        .lopt_6(lopt_7),
        .lopt_7(lopt_8),
        .lopt_8(lopt_9),
        .lopt_9(lopt_10));
  system_microblaze_0_0__carry_and_88 if_pc_incr_carry_and_3
       (.CI(NLW_if_pc_incr_carry_and_3_CI_UNCONNECTED),
        .if_fetch_for_timing_optimization1(NLW_if_pc_incr_carry_and_3_if_fetch_for_timing_optimization1_UNCONNECTED),
        .if_pc_incr_carry1(NLW_if_pc_incr_carry_and_3_if_pc_incr_carry1_UNCONNECTED),
        .lopt(NLW_if_pc_incr_carry_and_3_lopt_UNCONNECTED),
        .lopt_1(lopt_6));
  system_microblaze_0_0__jump_logic jump_logic_I1
       (.Clk(Clk),
        .EX_MBAR_Stall__2(EX_MBAR_Stall__2),
        .I5(I5),
        .IB_Ready(IB_Ready),
        .LOCKSTEP_Master_Out(\^LOCKSTEP_Master_Out [1]),
        .O(O_0),
        .Q(\^Q ),
        .\Using_FPGA.Native (jump_logic_I1_n_42),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_36 ),
        .\Using_FPGA.Native_1 (PreFetch_Buffer_I1_n_192),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_37 ),
        .ex_branch_with_delayslot(ex_branch_with_delayslot),
        .ex_databus_addr(ex_databus_addr),
        .ex_delayslot_Instr0(ex_delayslot_Instr0),
        .ex_first_cycle(ex_first_cycle),
        .ex_jump(ex_jump),
        .ex_jump_hold(ex_jump_hold),
        .ex_jump_hold_reg(jump_logic_I1_n_5),
        .ex_jump_hold_reg_0(\Using_FPGA.Native_1 ),
        .ex_jump_q(ex_jump_q),
        .ex_mbar_decode(ex_mbar_decode),
        .ex_mbar_sleep(ex_mbar_sleep),
        .ex_mbar_stall_no_sleep_1(ex_mbar_stall_no_sleep_1),
        .ex_op1_cmp_eq(ex_op1_cmp_eq),
        .ex_op1_cmp_eq1(ex_op1_cmp_eq1),
        .ex_op1_cmp_eq_n5_out(ex_op1_cmp_eq_n5_out),
        .ex_op1_cmp_equal(ex_op1_cmp_equal),
        .ex_op1_cmp_equal_n(ex_op1_cmp_equal_n),
        .ex_op1_zero(NLW_jump_logic_I1_ex_op1_zero_UNCONNECTED),
        .force12_out(force12_out),
        .force_Val10_out(force_Val10_out),
        .force_Val2_N_reg_0(PreFetch_Buffer_I1_n_59),
        .if_missed_fetch(if_missed_fetch),
        .if_missed_fetch_reg(jump_logic_I1_n_41),
        .if_missed_fetch_reg_0(\^Performance_Debug_Control.dbg_state_nohalt_reg [159]),
        .\if_pc_reg[0] (\^Performance_Debug_Control.dbg_state_nohalt_reg [158:127]),
        .\if_pc_reg[0]_0 (\MEM_DataBus_Addr_reg[0]_0 [47:18]),
        .\if_pc_reg[0]_1 (PC_Module_I_n_0),
        .\if_pc_reg[10] (PC_Module_I_n_55),
        .\if_pc_reg[11] (PC_Module_I_n_54),
        .\if_pc_reg[12] (PC_Module_I_n_53),
        .\if_pc_reg[13] (PC_Module_I_n_52),
        .\if_pc_reg[14] (PC_Module_I_n_51),
        .\if_pc_reg[15] (PC_Module_I_n_50),
        .\if_pc_reg[16] (PC_Module_I_n_49),
        .\if_pc_reg[17] (PC_Module_I_n_48),
        .\if_pc_reg[18] (PC_Module_I_n_47),
        .\if_pc_reg[19] (PC_Module_I_n_46),
        .\if_pc_reg[1] (PC_Module_I_n_64),
        .\if_pc_reg[20] (PC_Module_I_n_45),
        .\if_pc_reg[21] (PC_Module_I_n_44),
        .\if_pc_reg[22] (PC_Module_I_n_43),
        .\if_pc_reg[23] (PC_Module_I_n_42),
        .\if_pc_reg[24] (PC_Module_I_n_41),
        .\if_pc_reg[25] (PC_Module_I_n_40),
        .\if_pc_reg[26] (PC_Module_I_n_39),
        .\if_pc_reg[27] (PC_Module_I_n_38),
        .\if_pc_reg[28] (PC_Module_I_n_37),
        .\if_pc_reg[2] (PC_Module_I_n_63),
        .\if_pc_reg[30] ({p_1_in3_in,PC_Module_I_n_35}),
        .\if_pc_reg[3] (PC_Module_I_n_62),
        .\if_pc_reg[4] (PC_Module_I_n_61),
        .\if_pc_reg[5] (PC_Module_I_n_60),
        .\if_pc_reg[6] (PC_Module_I_n_59),
        .\if_pc_reg[7] (PC_Module_I_n_58),
        .\if_pc_reg[8] (PC_Module_I_n_57),
        .\if_pc_reg[9] (PC_Module_I_n_56),
        .keep_jump_taken_with_ds(keep_jump_taken_with_ds),
        .keep_jump_taken_with_ds_reg(jump_logic_I1_n_7),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .mem_jump_taken0(NLW_jump_logic_I1_mem_jump_taken0_UNCONNECTED),
        .of_valid(of_valid),
        .out(ex_valid_jump),
        .sync_reset(reset_bool_for_rst),
        .use_Reg_Neg_DI1_out(use_Reg_Neg_DI1_out),
        .use_Reg_Neg_S3_out(use_Reg_Neg_S3_out),
        .use_Reg_Neg_S_reg_0(of_PipeRun_for_ce),
        .wb_exception(wb_exception));
  FDRE #(
    .INIT(1'b0)) 
    keep_jump_taken_with_ds_reg
       (.C(Clk),
        .CE(1'b1),
        .D(jump_logic_I1_n_7),
        .Q(keep_jump_taken_with_ds),
        .R(1'b0));
  system_microblaze_0_0__carry_and_89 mem_PipeRun_carry_and
       (.\Using_FPGA.Native (\Using_FPGA.Native_0 ),
        .flush_pipe(flush_pipe),
        .lopt(lopt_11),
        .lopt_1(lopt_12),
        .lopt_2(lopt_13),
        .mem_exception_from_ex(mem_exception_from_ex),
        .mem_gpr_write(mem_gpr_write),
        .mem_gpr_write_dbg(mem_gpr_write_dbg),
        .mem_valid_instr(mem_valid_instr),
        .mem_valid_reg(mem_PipeRun_carry_and_n_1),
        .mem_valid_reg_0(ex_valid),
        .mem_valid_reg_1(\Using_FPGA.Native_1 ),
        .mem_wait_on_ready_N(NLW_mem_PipeRun_carry_and_mem_wait_on_ready_N_UNCONNECTED),
        .sync_reset(reset_bool_for_rst),
        .wb_exception(wb_exception),
        .wb_gpr_write_dbg0(wb_gpr_write_dbg0),
        .wb_gpr_write_i0(wb_gpr_write_i0),
        .wb_piperun(wb_piperun),
        .wb_valid_reg(mem_PipeRun_carry_and_n_2),
        .wb_valid_reg_0(wb_valid_reg_0));
  LUT5 #(
    .INIT(32'h00000888)) 
    mem_Write_DCache_i_1
       (.I0(ex_write_dcache_instr),
        .I1(p_232_in),
        .I2(mem_exception_from_ex),
        .I3(mem_valid_instr),
        .I4(wb_exception),
        .O(mem_Write_DCache_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    mem_Write_DCache_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(mem_Write_DCache_i_1_n_0),
        .Q(mem_Write_DCache),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_byte_access_i_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(ex_byte_access),
        .Q(mem_byte_access),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_delayslot_instr_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(ex_delayslot_Instr),
        .Q(mem_delayslot_instr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_doublet_access_i_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(ex_doublet_access),
        .Q(mem_doublet_access),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_exception_from_ex_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(ex_Exception_Taken),
        .Q(mem_exception_from_ex),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_gpr_write_addr_reg[0] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\ex_gpr_write_addr_reg_n_0_[0] ),
        .Q(mem_gpr_write_addr[0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_gpr_write_addr_reg[1] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(I2),
        .Q(mem_gpr_write_addr[1]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_gpr_write_addr_reg[2] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(I4),
        .Q(mem_gpr_write_addr[2]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_gpr_write_addr_reg[3] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(I0),
        .Q(mem_gpr_write_addr[3]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_gpr_write_addr_reg[4] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\ex_gpr_write_addr_reg_n_0_[4] ),
        .Q(mem_gpr_write_addr[4]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_gpr_write_dbg_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\Use_MuxCy[3].OF_Piperun_Stage_n_4 ),
        .Q(mem_gpr_write_dbg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    mem_gpr_write_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\Use_MuxCy[3].OF_Piperun_Stage_n_5 ),
        .Q(mem_gpr_write),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    mem_is_msr_instr_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(ex_mfsmsr_i),
        .Q(mem_sel_msr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_is_multi_or_load_instr_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(mem_is_multi_or_load_instr0),
        .Q(mem_is_multi_or_load_instr),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_load_store_access_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA_2.ex_load_store_instr_Inst_n_4 ),
        .Q(mem_load_store_access),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_read_imm_reg_1_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(ex_read_imm_reg_1),
        .Q(mem_read_imm_reg_1),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    mem_read_imm_reg_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(ex_read_imm_reg),
        .Q(mem_read_imm_reg),
        .R(reset_bool_for_rst));
  LUT2 #(
    .INIT(4'hE)) 
    mem_valid_i_2
       (.I0(reset_bool_for_rst),
        .I1(wb_exception),
        .O(flush_pipe));
  FDRE #(
    .INIT(1'b0)) 
    mem_valid_reg
       (.C(Clk),
        .CE(1'b1),
        .D(mem_PipeRun_carry_and_n_1),
        .Q(mem_valid_instr),
        .R(1'b0));
  system_microblaze_0_0__carry_or mem_wait_on_ready_N_carry_or
       (.MEM_DataBus_Ready(MEM_DataBus_Ready),
        .lopt(lopt_11),
        .lopt_1(lopt_12),
        .lopt_2(lopt_13),
        .lopt_3(NLW_mem_wait_on_ready_N_carry_or_lopt_3_UNCONNECTED),
        .lopt_4(lopt_15),
        .lopt_5(lopt_16),
        .lopt_6(lopt_17),
        .lopt_7(lopt_18),
        .lopt_8(jump_logic_I1_n_42),
        .mem_Write_DCache(mem_Write_DCache),
        .mem_load_store_access(mem_load_store_access),
        .mem_valid_instr(mem_valid_instr),
        .mem_wait_on_ready_N(NLW_mem_wait_on_ready_N_carry_or_mem_wait_on_ready_N_UNCONNECTED));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFEA)) 
    of_read_imm_reg_ii_i_2
       (.I0(\^LOCKSTEP_Master_Out [0]),
        .I1(mem_valid_instr),
        .I2(mem_exception_from_ex),
        .I3(wb_exception),
        .I4(reset_bool_for_rst),
        .I5(ex_Exception_Taken),
        .O(of_read_imm_reg_ii_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    of_read_imm_reg_ii_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\Use_MuxCy[11].OF_Piperun_Stage_n_2 ),
        .Q(of_read_imm_reg_ii),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h02)) 
    sign_byte_inferred_i_1
       (.I0(\Using_FPGA.Native_41 [7]),
        .I1(\EX_Sext_Op_reg[0]_0 [0]),
        .I2(\EX_Sext_Op_reg[0]_0 [1]),
        .O(in0));
  FDRE #(
    .INIT(1'b0)) 
    wb_PipeRun_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA.Native_0 ),
        .Q(wb_piperun),
        .R(reset_bool_for_rst));
  LUT2 #(
    .INIT(4'h8)) 
    wb_exception_i_i_1
       (.I0(mem_exception_from_ex),
        .I1(mem_valid_instr),
        .O(mem_Exception_Taken));
  FDRE #(
    .INIT(1'b0)) 
    wb_exception_i_reg
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(mem_Exception_Taken),
        .Q(wb_exception),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \wb_exception_kind_i_reg[28] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(mem_exception_kind[28]),
        .Q(\^Q [1]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \wb_exception_kind_i_reg[31] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(mem_exception_kind[31]),
        .Q(\^Q [0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \wb_gpr_write_addr_reg[0] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(mem_gpr_write_addr[0]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [31]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \wb_gpr_write_addr_reg[1] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(mem_gpr_write_addr[1]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [30]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \wb_gpr_write_addr_reg[2] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(mem_gpr_write_addr[2]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [29]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \wb_gpr_write_addr_reg[3] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(mem_gpr_write_addr[3]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [28]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \wb_gpr_write_addr_reg[4] 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(mem_gpr_write_addr[4]),
        .Q(\^Performance_Debug_Control.dbg_state_nohalt_reg [27]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    wb_gpr_write_dbg_reg
       (.C(Clk),
        .CE(1'b1),
        .D(wb_gpr_write_dbg0),
        .Q(wb_gpr_write_dbg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    wb_gpr_write_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(wb_gpr_write_i0),
        .Q(wb_gpr_write_i),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    wb_reset_reg
       (.C(Clk),
        .CE(1'b1),
        .D(reset_bool_for_rst),
        .Q(wb_reset),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    wb_valid_reg
       (.C(Clk),
        .CE(1'b1),
        .D(mem_PipeRun_carry_and_n_2),
        .Q(wb_valid_reg_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_AND2B1L" *) 
module system_microblaze_0_0__MB_AND2B1L
   (D,
    E,
    SRI);
  output [0:0]D;
  input [0:0]E;
  input SRI;

  wire [0:0]D;
  wire [0:0]E;
  wire SRI;

  (* BOX_TYPE = "PRIMITIVE" *) 
  AND2B1L #(
    .IS_SRI_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.DI(E),
        .O(D),
        .SRI(SRI));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR
   (\Performance_Debug_Control.ex_dbg_pc_hit_i_reg ,
    sync_reset,
    Clk,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    I0,
    Q,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Performance_Debug_Control.ex_dbg_pc_hit_i_reg ;
  input sync_reset;
  input Clk;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input I0;
  input [5:0]Q;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire Clk;
  wire I0;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_reg ;
  wire [5:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_i_1__96_n_0 ;
  wire of_clear_MSR_BIP__0;
  wire of_clear_MSR_BIP_hold_s;
  wire of_set_MSR_EE1;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA.Native_i_1__96_n_0 ),
        .Q(of_clear_MSR_BIP_hold_s),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'hFFFFFFFFA2000000)) 
    \Using_FPGA.Native_i_1__8 
       (.I0(of_set_MSR_EE1),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .I4(I0),
        .I5(of_clear_MSR_BIP_hold_s),
        .O(\Performance_Debug_Control.ex_dbg_pc_hit_i_reg ));
  LUT4 #(
    .INIT(16'h00EA)) 
    \Using_FPGA.Native_i_1__96 
       (.I0(of_clear_MSR_BIP_hold_s),
        .I1(of_clear_MSR_BIP__0),
        .I2(\Using_FPGA.Native_3 ),
        .I3(\Using_FPGA.Native_4 ),
        .O(\Using_FPGA.Native_i_1__96_n_0 ));
  LUT5 #(
    .INIT(32'h80880000)) 
    \Using_FPGA.Native_i_2__22 
       (.I0(I0),
        .I1(\Using_FPGA.Native_2 ),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_0 ),
        .I4(of_set_MSR_EE1),
        .O(of_clear_MSR_BIP__0));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    \Using_FPGA.Native_i_2__81 
       (.I0(Q[1]),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(Q[5]),
        .I5(Q[2]),
        .O(of_set_MSR_EE1));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE
   (D,
    sync_reset,
    \Using_FPGA.Native_0 ,
    ex_exception_no_load_store_mask,
    Clk,
    mem_exception_from_ex);
  output [0:0]D;
  input sync_reset;
  input \Using_FPGA.Native_0 ;
  input ex_exception_no_load_store_mask;
  input Clk;
  input mem_exception_from_ex;

  wire Clk;
  wire [0:0]D;
  wire \Using_FPGA.Native_0 ;
  wire ex_exception_no_load_store_mask;
  wire mem_exception_from_ex;
  wire [28:28]mem_exception_kind_i;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(ex_exception_no_load_store_mask),
        .Q(mem_exception_kind_i),
        .R(sync_reset));
  LUT2 #(
    .INIT(4'h8)) 
    \wb_exception_kind_i[28]_i_1 
       (.I0(mem_exception_from_ex),
        .I1(mem_exception_kind_i),
        .O(D));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_309
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output [0:0]\Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_312
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_315
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_318
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_321
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_324
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_327
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_330
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_333
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_336
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_339
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_342
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_345
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_348
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_351
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_354
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_357
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_360
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_363
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_366
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_369
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_372
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_375
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_378
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_381
   (DI,
    \Using_FPGA.Native_0 ,
    O5,
    Clk);
  output DI;
  input \Using_FPGA.Native_0 ;
  input O5;
  input Clk;

  wire Clk;
  wire DI;
  wire O5;
  wire \Using_FPGA.Native_0 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(O5),
        .Q(DI),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_384
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_387
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_390
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_393
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_396
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_399
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_402
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk);
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_457
   (\Using_FPGA.Native_0 ,
    R,
    \Using_FPGA.Native_1 ,
    EX_Fwd,
    Clk);
  output [0:0]\Using_FPGA.Native_0 ;
  input R;
  input \Using_FPGA.Native_1 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(EX_Fwd),
        .Q(\Using_FPGA.Native_0 ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_458
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [10:10]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[10]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_459
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [11:11]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[11]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_460
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [12:12]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[12]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_461
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [13:13]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[13]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_462
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [14:14]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[14]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_463
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [15:15]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[15]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_464
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [16:16]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[16]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_465
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [17:17]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[17]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_466
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [18:18]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[18]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_467
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [19:19]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[19]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_468
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [1:1]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[1]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_469
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [20:20]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[20]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_470
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [21:21]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[21]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_471
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [22:22]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[22]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_472
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [23:23]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[23]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_473
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [24:24]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[24]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_474
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [25:25]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[25]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_475
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [26:26]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[26]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_476
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [27:27]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[27]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_477
   (\Using_FPGA.Native_0 ,
    R,
    \Using_FPGA.Native_1 ,
    EX_Fwd,
    Clk);
  output [0:0]\Using_FPGA.Native_0 ;
  input R;
  input \Using_FPGA.Native_1 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(EX_Fwd),
        .Q(\Using_FPGA.Native_0 ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_478
   (\Using_FPGA.Native_0 ,
    R,
    \Using_FPGA.Native_1 ,
    EX_Fwd,
    Clk);
  output [0:0]\Using_FPGA.Native_0 ;
  input R;
  input \Using_FPGA.Native_1 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(EX_Fwd),
        .Q(\Using_FPGA.Native_0 ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_479
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [2:2]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[2]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_480
   (\Using_FPGA.Native_0 ,
    R,
    \Using_FPGA.Native_1 ,
    EX_Fwd,
    Clk);
  output [0:0]\Using_FPGA.Native_0 ;
  input R;
  input \Using_FPGA.Native_1 ;
  input [0:0]EX_Fwd;
  input Clk;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire R;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(EX_Fwd),
        .Q(\Using_FPGA.Native_0 ),
        .R(R));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_481
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [31:31]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[31]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_482
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [3:3]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[3]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_483
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [4:4]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[4]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_484
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [5:5]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[5]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_485
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [6:6]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[6]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_486
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [7:7]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[7]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_487
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [8:8]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[8]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_488
   (MEM_Fwd,
    R,
    \Using_FPGA.Native_0 ,
    EX_Fwd,
    Clk,
    mem_sel_msr);
  output [0:0]MEM_Fwd;
  input R;
  input \Using_FPGA.Native_0 ;
  input [0:0]EX_Fwd;
  input Clk;
  input mem_sel_msr;

  wire Clk;
  wire [0:0]EX_Fwd;
  wire [9:9]MEM_EX_Result;
  wire [0:0]MEM_Fwd;
  wire R;
  wire \Using_FPGA.Native_0 ;
  wire mem_sel_msr;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(EX_Fwd),
        .Q(MEM_EX_Result),
        .R(R));
  LUT2 #(
    .INIT(4'h2)) 
    \WB_MEM_Result[9]_i_1 
       (.I0(MEM_EX_Result),
        .I1(mem_sel_msr),
        .O(MEM_Fwd));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_67
   (D,
    sync_reset,
    \Using_FPGA.Native_0 ,
    ex_exception_no_load_store_mask,
    Clk,
    mem_exception_from_ex);
  output [0:0]D;
  input sync_reset;
  input \Using_FPGA.Native_0 ;
  input ex_exception_no_load_store_mask;
  input Clk;
  input mem_exception_from_ex;

  wire Clk;
  wire [0:0]D;
  wire \Using_FPGA.Native_0 ;
  wire ex_exception_no_load_store_mask;
  wire mem_exception_from_ex;
  wire [31:31]mem_exception_kind_i;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(ex_exception_no_load_store_mask),
        .Q(mem_exception_kind_i),
        .R(sync_reset));
  LUT2 #(
    .INIT(4'h8)) 
    \wb_exception_kind_i[31]_i_1 
       (.I0(mem_exception_from_ex),
        .I1(mem_exception_kind_i),
        .O(D));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_68
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    sync_reset,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    Clk,
    \MEM_DataBus_Write_Data_reg[0] ,
    \MEM_DataBus_Write_Data_reg[0]_0 ,
    \MEM_DataBus_Write_Data_reg[0]_1 );
  output \Using_FPGA.Native_0 ;
  output [23:0]\Using_FPGA.Native_1 ;
  input sync_reset;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input Clk;
  input [31:0]\MEM_DataBus_Write_Data_reg[0] ;
  input \MEM_DataBus_Write_Data_reg[0]_0 ;
  input \MEM_DataBus_Write_Data_reg[0]_1 ;

  wire Clk;
  wire [31:0]\MEM_DataBus_Write_Data_reg[0] ;
  wire \MEM_DataBus_Write_Data_reg[0]_0 ;
  wire \MEM_DataBus_Write_Data_reg[0]_1 ;
  wire \Using_FPGA.Native_0 ;
  wire [23:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire sync_reset;

  LUT6 #(
    .INIT(64'hFF00EF45FF00EA40)) 
    \Data_Write[0]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [15]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_1 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [7]),
        .I4(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I5(\MEM_DataBus_Write_Data_reg[0] [31]),
        .O(\Using_FPGA.Native_1 [23]));
  LUT6 #(
    .INIT(64'hDD88CDCDDD88C8C8)) 
    \Data_Write[10]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [5]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_1 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [13]),
        .I4(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I5(\MEM_DataBus_Write_Data_reg[0] [21]),
        .O(\Using_FPGA.Native_1 [13]));
  LUT6 #(
    .INIT(64'hDD88CDCDDD88C8C8)) 
    \Data_Write[11]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [4]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_1 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [12]),
        .I4(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I5(\MEM_DataBus_Write_Data_reg[0] [20]),
        .O(\Using_FPGA.Native_1 [12]));
  LUT6 #(
    .INIT(64'hDD88CDCDDD88C8C8)) 
    \Data_Write[12]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [3]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_1 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [11]),
        .I4(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I5(\MEM_DataBus_Write_Data_reg[0] [19]),
        .O(\Using_FPGA.Native_1 [11]));
  LUT6 #(
    .INIT(64'hDD88CDCDDD88C8C8)) 
    \Data_Write[13]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [2]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_1 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [10]),
        .I4(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I5(\MEM_DataBus_Write_Data_reg[0] [18]),
        .O(\Using_FPGA.Native_1 [10]));
  LUT6 #(
    .INIT(64'hDD88CDCDDD88C8C8)) 
    \Data_Write[14]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [1]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_1 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [9]),
        .I4(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I5(\MEM_DataBus_Write_Data_reg[0] [17]),
        .O(\Using_FPGA.Native_1 [9]));
  LUT6 #(
    .INIT(64'hDD88CDCDDD88C8C8)) 
    \Data_Write[15]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [0]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_1 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [8]),
        .I4(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I5(\MEM_DataBus_Write_Data_reg[0] [16]),
        .O(\Using_FPGA.Native_1 [8]));
  LUT6 #(
    .INIT(64'hFF00EF45FF00EA40)) 
    \Data_Write[1]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [14]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_1 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [6]),
        .I4(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I5(\MEM_DataBus_Write_Data_reg[0] [30]),
        .O(\Using_FPGA.Native_1 [22]));
  LUT4 #(
    .INIT(16'hEF40)) 
    \Data_Write[24]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [31]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [7]),
        .O(\Using_FPGA.Native_1 [7]));
  LUT4 #(
    .INIT(16'hEF40)) 
    \Data_Write[25]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [30]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [6]),
        .O(\Using_FPGA.Native_1 [6]));
  LUT4 #(
    .INIT(16'hEF40)) 
    \Data_Write[26]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [29]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [5]),
        .O(\Using_FPGA.Native_1 [5]));
  LUT4 #(
    .INIT(16'hEF40)) 
    \Data_Write[27]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [28]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [4]),
        .O(\Using_FPGA.Native_1 [4]));
  LUT4 #(
    .INIT(16'hEF40)) 
    \Data_Write[28]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [27]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [3]),
        .O(\Using_FPGA.Native_1 [3]));
  LUT4 #(
    .INIT(16'hEF40)) 
    \Data_Write[29]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [26]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [2]),
        .O(\Using_FPGA.Native_1 [2]));
  LUT6 #(
    .INIT(64'hFF00EF45FF00EA40)) 
    \Data_Write[2]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [13]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_1 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [5]),
        .I4(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I5(\MEM_DataBus_Write_Data_reg[0] [29]),
        .O(\Using_FPGA.Native_1 [21]));
  LUT4 #(
    .INIT(16'hEF40)) 
    \Data_Write[30]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [25]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [1]),
        .O(\Using_FPGA.Native_1 [1]));
  LUT4 #(
    .INIT(16'hEF40)) 
    \Data_Write[31]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [24]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [0]),
        .O(\Using_FPGA.Native_1 [0]));
  LUT6 #(
    .INIT(64'hFF00EF45FF00EA40)) 
    \Data_Write[3]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [12]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_1 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [4]),
        .I4(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I5(\MEM_DataBus_Write_Data_reg[0] [28]),
        .O(\Using_FPGA.Native_1 [20]));
  LUT6 #(
    .INIT(64'hFF00EF45FF00EA40)) 
    \Data_Write[4]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [11]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_1 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [3]),
        .I4(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I5(\MEM_DataBus_Write_Data_reg[0] [27]),
        .O(\Using_FPGA.Native_1 [19]));
  LUT6 #(
    .INIT(64'hFF00EF45FF00EA40)) 
    \Data_Write[5]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [10]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_1 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [2]),
        .I4(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I5(\MEM_DataBus_Write_Data_reg[0] [26]),
        .O(\Using_FPGA.Native_1 [18]));
  LUT6 #(
    .INIT(64'hFF00EF45FF00EA40)) 
    \Data_Write[6]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [9]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_1 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [1]),
        .I4(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I5(\MEM_DataBus_Write_Data_reg[0] [25]),
        .O(\Using_FPGA.Native_1 [17]));
  LUT6 #(
    .INIT(64'hFF00EF45FF00EA40)) 
    \Data_Write[7]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [8]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_1 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [0]),
        .I4(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I5(\MEM_DataBus_Write_Data_reg[0] [24]),
        .O(\Using_FPGA.Native_1 [16]));
  LUT6 #(
    .INIT(64'hDD88CDCDDD88C8C8)) 
    \Data_Write[8]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [7]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_1 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [15]),
        .I4(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I5(\MEM_DataBus_Write_Data_reg[0] [23]),
        .O(\Using_FPGA.Native_1 [15]));
  LUT6 #(
    .INIT(64'hDD88CDCDDD88C8C8)) 
    \Data_Write[9]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Write_Data_reg[0] [6]),
        .I2(\MEM_DataBus_Write_Data_reg[0]_1 ),
        .I3(\MEM_DataBus_Write_Data_reg[0] [14]),
        .I4(\MEM_DataBus_Write_Data_reg[0]_0 ),
        .I5(\MEM_DataBus_Write_Data_reg[0] [22]),
        .O(\Using_FPGA.Native_1 [14]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_2 ),
        .D(\Using_FPGA.Native_3 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_69
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    sync_reset,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    Clk,
    \MEM_DataBus_Byte_Enable_reg[0] ,
    \MEM_DataBus_Byte_Enable_reg[0]_0 ,
    \MEM_DataBus_Byte_Enable_reg[0]_1 ,
    \MEM_DataBus_Byte_Enable_reg[0]_2 ,
    \MEM_DataBus_Byte_Enable_reg[0]_3 );
  output \Using_FPGA.Native_0 ;
  output [3:0]\Using_FPGA.Native_1 ;
  input sync_reset;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input Clk;
  input \MEM_DataBus_Byte_Enable_reg[0] ;
  input [0:0]\MEM_DataBus_Byte_Enable_reg[0]_0 ;
  input [0:0]\MEM_DataBus_Byte_Enable_reg[0]_1 ;
  input \MEM_DataBus_Byte_Enable_reg[0]_2 ;
  input \MEM_DataBus_Byte_Enable_reg[0]_3 ;

  wire Clk;
  wire \MEM_DataBus_Byte_Enable_reg[0] ;
  wire [0:0]\MEM_DataBus_Byte_Enable_reg[0]_0 ;
  wire [0:0]\MEM_DataBus_Byte_Enable_reg[0]_1 ;
  wire \MEM_DataBus_Byte_Enable_reg[0]_2 ;
  wire \MEM_DataBus_Byte_Enable_reg[0]_3 ;
  wire \Using_FPGA.Native_0 ;
  wire [3:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire sync_reset;

  LUT6 #(
    .INIT(64'h00005555C33CFFFF)) 
    \Byte_Enable[0]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Byte_Enable_reg[0]_0 ),
        .I2(\MEM_DataBus_Byte_Enable_reg[0]_1 ),
        .I3(\MEM_DataBus_Byte_Enable_reg[0]_2 ),
        .I4(\MEM_DataBus_Byte_Enable_reg[0] ),
        .I5(\MEM_DataBus_Byte_Enable_reg[0]_3 ),
        .O(\Using_FPGA.Native_1 [3]));
  LUT6 #(
    .INIT(64'h111111113FF3F33F)) 
    \Byte_Enable[1]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Byte_Enable_reg[0] ),
        .I2(\MEM_DataBus_Byte_Enable_reg[0]_0 ),
        .I3(\MEM_DataBus_Byte_Enable_reg[0]_1 ),
        .I4(\MEM_DataBus_Byte_Enable_reg[0]_2 ),
        .I5(\MEM_DataBus_Byte_Enable_reg[0]_3 ),
        .O(\Using_FPGA.Native_1 [2]));
  LUT6 #(
    .INIT(64'hC33CFFFF00005555)) 
    \Byte_Enable[2]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Byte_Enable_reg[0]_0 ),
        .I2(\MEM_DataBus_Byte_Enable_reg[0]_1 ),
        .I3(\MEM_DataBus_Byte_Enable_reg[0]_2 ),
        .I4(\MEM_DataBus_Byte_Enable_reg[0] ),
        .I5(\MEM_DataBus_Byte_Enable_reg[0]_3 ),
        .O(\Using_FPGA.Native_1 [1]));
  LUT6 #(
    .INIT(64'h3FF3F33F11111111)) 
    \Byte_Enable[3]_INST_0 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\MEM_DataBus_Byte_Enable_reg[0] ),
        .I2(\MEM_DataBus_Byte_Enable_reg[0]_0 ),
        .I3(\MEM_DataBus_Byte_Enable_reg[0]_1 ),
        .I4(\MEM_DataBus_Byte_Enable_reg[0]_2 ),
        .I5(\MEM_DataBus_Byte_Enable_reg[0]_3 ),
        .O(\Using_FPGA.Native_1 [0]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_2 ),
        .D(\Using_FPGA.Native_3 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_70
   (\Using_FPGA.Native_0 ,
    mem_is_multi_or_load_instr0,
    ex_Sel_SPR_EAR_reg,
    sync_reset,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk,
    ex_is_multi_instr2,
    ex_Sel_SPR_EAR,
    ex_Sel_SPR_FSR,
    ex_Sel_SPR_EDR,
    ex_Sel_SPR_BTR,
    MEM_Sel_MEM_Res_I_reg);
  output \Using_FPGA.Native_0 ;
  output mem_is_multi_or_load_instr0;
  output ex_Sel_SPR_EAR_reg;
  input sync_reset;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;
  input ex_is_multi_instr2;
  input ex_Sel_SPR_EAR;
  input ex_Sel_SPR_FSR;
  input ex_Sel_SPR_EDR;
  input ex_Sel_SPR_BTR;
  input MEM_Sel_MEM_Res_I_reg;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire ex_Sel_SPR_EAR_reg;
  wire ex_is_multi_instr2;
  wire mem_is_multi_or_load_instr0;
  wire sync_reset;

  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT1 #(
    .INIT(2'h1)) 
    MEM_Sel_MEM_Res_I_i_1
       (.I0(\Using_FPGA.Native_0 ),
        .O(ex_Sel_SPR_EAR_reg));
  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT2 #(
    .INIT(4'hE)) 
    mem_is_multi_or_load_instr_i_1
       (.I0(ex_is_multi_instr2),
        .I1(\Using_FPGA.Native_0 ),
        .O(mem_is_multi_or_load_instr0));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_71
   (ex_MSR_Load_LWX_SWX_C,
    \Using_LWX_SWX_instr.ex_reservation_reg ,
    sync_reset,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Clk,
    ex_is_swx_instr_s,
    ex_load_store_instr_s,
    wb_exception,
    \Using_FPGA.Native_i_2__20 ,
    p_232_in,
    ex_reservation,
    p_227_in,
    \Using_LWX_SWX_instr.ex_reservation_reg_0 );
  output ex_MSR_Load_LWX_SWX_C;
  output \Using_LWX_SWX_instr.ex_reservation_reg ;
  input sync_reset;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Clk;
  input ex_is_swx_instr_s;
  input ex_load_store_instr_s;
  input wb_exception;
  input \Using_FPGA.Native_i_2__20 ;
  input p_232_in;
  input ex_reservation;
  input p_227_in;
  input \Using_LWX_SWX_instr.ex_reservation_reg_0 ;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_i_2__20 ;
  wire \Using_LWX_SWX_instr.ex_reservation_reg ;
  wire \Using_LWX_SWX_instr.ex_reservation_reg_0 ;
  wire ex_MSR_Load_LWX_SWX_C;
  wire ex_is_lwx_instr_s;
  wire ex_is_swx_instr_s;
  wire ex_load_store_instr_s;
  wire ex_reservation;
  wire p_227_in;
  wire p_232_in;
  wire sync_reset;
  wire wb_exception;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\Using_FPGA.Native_1 ),
        .Q(ex_is_lwx_instr_s),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'h000000E000000000)) 
    \Using_FPGA.Native_i_6 
       (.I0(ex_is_lwx_instr_s),
        .I1(ex_is_swx_instr_s),
        .I2(ex_load_store_instr_s),
        .I3(wb_exception),
        .I4(\Using_FPGA.Native_i_2__20 ),
        .I5(p_232_in),
        .O(ex_MSR_Load_LWX_SWX_C));
  LUT5 #(
    .INIT(32'h000000EA)) 
    \Using_LWX_SWX_instr.ex_reservation_i_1 
       (.I0(ex_reservation),
        .I1(ex_is_lwx_instr_s),
        .I2(p_227_in),
        .I3(\Using_LWX_SWX_instr.ex_reservation_reg_0 ),
        .I4(sync_reset),
        .O(\Using_LWX_SWX_instr.ex_reservation_reg ));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_72
   (ex_is_swx_instr_s,
    wb_exception_i_reg,
    \Using_FPGA.Native_0 ,
    ex_swx_access__0,
    sync_reset,
    \Using_FPGA.Native_1 ,
    D224_out,
    Clk,
    wb_exception,
    \Using_LWX_SWX_instr.ex_reservation_reg ,
    ex_MSR_Set_SW_BIP,
    \Using_LWX_SWX_instr.ex_reservation_reg_0 ,
    p_227_in,
    ex_reservation,
    ex_load_store_instr_s,
    ex_is_load_instr_s,
    p_232_in);
  output ex_is_swx_instr_s;
  output wb_exception_i_reg;
  output [0:0]\Using_FPGA.Native_0 ;
  output ex_swx_access__0;
  input sync_reset;
  input \Using_FPGA.Native_1 ;
  input D224_out;
  input Clk;
  input wb_exception;
  input \Using_LWX_SWX_instr.ex_reservation_reg ;
  input ex_MSR_Set_SW_BIP;
  input \Using_LWX_SWX_instr.ex_reservation_reg_0 ;
  input p_227_in;
  input ex_reservation;
  input ex_load_store_instr_s;
  input ex_is_load_instr_s;
  input p_232_in;

  wire Clk;
  wire D224_out;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_LWX_SWX_instr.ex_reservation_reg ;
  wire \Using_LWX_SWX_instr.ex_reservation_reg_0 ;
  wire ex_MSR_Set_SW_BIP;
  wire ex_is_load_instr_s;
  wire ex_is_swx_instr_s;
  wire ex_load_store_instr_s;
  wire ex_reservation;
  wire ex_swx_access__0;
  wire p_227_in;
  wire p_232_in;
  wire sync_reset;
  wire wb_exception;
  wire wb_exception_i_reg;

  LUT2 #(
    .INIT(4'hB)) 
    MEM_DataBus_Access_i_3
       (.I0(ex_reservation),
        .I1(ex_is_swx_instr_s),
        .O(ex_swx_access__0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(D224_out),
        .Q(ex_is_swx_instr_s),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'hFFF2F2F2F2F2F2F2)) 
    \Using_LWX_SWX_instr.ex_reservation_i_2 
       (.I0(wb_exception),
        .I1(\Using_LWX_SWX_instr.ex_reservation_reg ),
        .I2(ex_MSR_Set_SW_BIP),
        .I3(ex_is_swx_instr_s),
        .I4(\Using_LWX_SWX_instr.ex_reservation_reg_0 ),
        .I5(p_227_in),
        .O(wb_exception_i_reg));
  LUT5 #(
    .INIT(32'h00D00000)) 
    Write_Strobe_INST_0
       (.I0(ex_is_swx_instr_s),
        .I1(ex_reservation),
        .I2(ex_load_store_instr_s),
        .I3(ex_is_load_instr_s),
        .I4(p_232_in),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_73
   (ex_load_store_instr_s,
    MEM_DataBus_Access_reg,
    p_227_in,
    SRI,
    \Using_FPGA.Native_0 ,
    sync_reset,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    Clk,
    MEM_DataBus_Access_reg_0,
    ex_swx_access__0,
    MEM_DataBus_Access_reg_1,
    MEM_DataBus_Access_reg_2,
    p_232_in,
    D_AS,
    wb_exception,
    ex_reservation,
    ex_is_swx_instr_s,
    mem_valid_instr,
    mem_exception_from_ex,
    mem_load_store_access_reg,
    mem_load_store_access_reg_0,
    mem_load_store_access_reg_1);
  output ex_load_store_instr_s;
  output MEM_DataBus_Access_reg;
  output p_227_in;
  output SRI;
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input Clk;
  input MEM_DataBus_Access_reg_0;
  input ex_swx_access__0;
  input MEM_DataBus_Access_reg_1;
  input MEM_DataBus_Access_reg_2;
  input p_232_in;
  input D_AS;
  input wb_exception;
  input ex_reservation;
  input ex_is_swx_instr_s;
  input mem_valid_instr;
  input mem_exception_from_ex;
  input mem_load_store_access_reg;
  input mem_load_store_access_reg_0;
  input mem_load_store_access_reg_1;

  wire Clk;
  wire D_AS;
  wire MEM_DataBus_Access_reg;
  wire MEM_DataBus_Access_reg_0;
  wire MEM_DataBus_Access_reg_1;
  wire MEM_DataBus_Access_reg_2;
  wire SRI;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire ex_is_swx_instr_s;
  wire ex_load_store_instr_s;
  wire ex_reservation;
  wire ex_swx_access__0;
  wire mem_exception_from_ex;
  wire mem_load_store_access_reg;
  wire mem_load_store_access_reg_0;
  wire mem_load_store_access_reg_1;
  wire mem_valid_instr;
  wire p_227_in;
  wire p_232_in;
  wire sync_reset;
  wire wb_exception;

  LUT6 #(
    .INIT(64'h00000000C0C000AA)) 
    MEM_DataBus_Access_i_1
       (.I0(MEM_DataBus_Access_reg_0),
        .I1(p_227_in),
        .I2(ex_swx_access__0),
        .I3(MEM_DataBus_Access_reg_1),
        .I4(MEM_DataBus_Access_reg_2),
        .I5(sync_reset),
        .O(MEM_DataBus_Access_reg));
  LUT5 #(
    .INIT(32'h002A0000)) 
    MEM_DataBus_Access_i_2
       (.I0(p_232_in),
        .I1(mem_valid_instr),
        .I2(mem_exception_from_ex),
        .I3(wb_exception),
        .I4(ex_load_store_instr_s),
        .O(p_227_in));
  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_1 ),
        .D(\Using_FPGA.Native_2 ),
        .Q(ex_load_store_instr_s),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'hFDFFFFFFFDFFFDFF)) 
    \Using_FPGA.Native_i_1__5 
       (.I0(p_232_in),
        .I1(D_AS),
        .I2(wb_exception),
        .I3(ex_load_store_instr_s),
        .I4(ex_reservation),
        .I5(ex_is_swx_instr_s),
        .O(SRI));
  LUT6 #(
    .INIT(64'h8A008A8A8A8A8A8A)) 
    mem_load_store_access_i_1
       (.I0(ex_load_store_instr_s),
        .I1(ex_reservation),
        .I2(ex_is_swx_instr_s),
        .I3(mem_load_store_access_reg),
        .I4(mem_load_store_access_reg_0),
        .I5(mem_load_store_access_reg_1),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_74
   (ex_reverse_mem_access,
    sync_reset,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Clk);
  output ex_reverse_mem_access;
  input sync_reset;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_reverse_mem_access;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\Using_FPGA.Native_1 ),
        .Q(ex_reverse_mem_access),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDRE" *) 
module system_microblaze_0_0__MB_FDRE_75
   (ex_set_bip_reg,
    sync_reset,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    Clk,
    \Using_FPGA.Native_2 ,
    p_232_in,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    ex_MSR);
  output ex_set_bip_reg;
  input sync_reset;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input Clk;
  input \Using_FPGA.Native_2 ;
  input p_232_in;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input [0:0]ex_MSR;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire [0:0]ex_MSR;
  wire ex_clear_MSR_BIP_instr_s;
  wire ex_set_bip_reg;
  wire p_232_in;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  FDRE #(
    .INIT(1'b0),
    .IS_C_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_R_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(\Using_FPGA.Native_0 ),
        .D(\Using_FPGA.Native_1 ),
        .Q(ex_clear_MSR_BIP_instr_s),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'hBFA0FFFFBFA00000)) 
    \Using_FPGA.Native_i_1__7 
       (.I0(\Using_FPGA.Native_2 ),
        .I1(ex_clear_MSR_BIP_instr_s),
        .I2(p_232_in),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(ex_MSR),
        .O(ex_set_bip_reg));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_112
   (addr,
    sync_reset,
    sel_input_iii_3,
    Clk);
  output [0:0]addr;
  input sync_reset;
  input sel_input_iii_3;
  input Clk;

  wire Clk;
  wire [0:0]addr;
  wire sel_input_iii_3;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(sel_input_iii_3),
        .Q(addr),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_113
   (if_sel_input,
    addr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    if_fetch_for_timing_optimization1,
    if_fetch_in_progress_reg,
    sync_reset,
    sel_input_iii_2,
    Clk,
    \Serial_Dbg_Intf.status_reg_reg[25] ,
    ex_jump,
    out,
    IB_Ready,
    if_fetch_in_progress,
    in0,
    if_fetch_in_progress_reg_0,
    if_fetch_in_progress_reg_1);
  output [0:0]if_sel_input;
  output [0:0]addr;
  output [0:0]\Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  output [0:0]\Using_FPGA.Native_2 ;
  output if_fetch_for_timing_optimization1;
  output if_fetch_in_progress_reg;
  input sync_reset;
  input sel_input_iii_2;
  input Clk;
  input [0:0]\Serial_Dbg_Intf.status_reg_reg[25] ;
  input ex_jump;
  input out;
  input IB_Ready;
  input if_fetch_in_progress;
  input in0;
  input [0:0]if_fetch_in_progress_reg_0;
  input if_fetch_in_progress_reg_1;

  wire Clk;
  wire IB_Ready;
  wire [0:0]\Serial_Dbg_Intf.status_reg_reg[25] ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]addr;
  wire ex_jump;
  wire if_fetch_for_timing_optimization1;
  wire if_fetch_in_progress;
  wire if_fetch_in_progress_reg;
  wire [0:0]if_fetch_in_progress_reg_0;
  wire if_fetch_in_progress_reg_1;
  wire [0:0]if_sel_input;
  wire in0;
  wire out;
  wire sel_input_iii_2;
  wire sync_reset;

  LUT5 #(
    .INIT(32'hFFFFAB00)) 
    IFetch_INST_0
       (.I0(ex_jump),
        .I1(if_sel_input),
        .I2(\Serial_Dbg_Intf.status_reg_reg[25] ),
        .I3(in0),
        .I4(if_fetch_in_progress),
        .O(\Using_FPGA.Native_2 ));
  LUT6 #(
    .INIT(64'h888A0000888A888A)) 
    I_AS_INST_0
       (.I0(out),
        .I1(ex_jump),
        .I2(if_sel_input),
        .I3(\Serial_Dbg_Intf.status_reg_reg[25] ),
        .I4(IB_Ready),
        .I5(if_fetch_in_progress),
        .O(\Using_FPGA.Native_1 ));
  LUT2 #(
    .INIT(4'h2)) 
    \PC_Buffer_reg[3][31]_srl4_i_2 
       (.I0(if_sel_input),
        .I1(\Serial_Dbg_Intf.status_reg_reg[25] ),
        .O(addr));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(sel_input_iii_2),
        .Q(if_sel_input),
        .R(sync_reset));
  LUT2 #(
    .INIT(4'h1)) 
    \Using_FPGA.Native_i_1 
       (.I0(if_sel_input),
        .I1(\Serial_Dbg_Intf.status_reg_reg[25] ),
        .O(if_fetch_for_timing_optimization1));
  LUT6 #(
    .INIT(64'h00000000000000F2)) 
    if_fetch_in_progress_i_1
       (.I0(if_fetch_in_progress),
        .I1(IB_Ready),
        .I2(\Using_FPGA.Native_1 ),
        .I3(if_fetch_in_progress_reg_0),
        .I4(if_fetch_in_progress_reg_1),
        .I5(sync_reset),
        .O(if_fetch_in_progress_reg));
  LUT2 #(
    .INIT(4'hE)) 
    \if_pc[0]_i_1 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_jump),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_115
   (if_sel_input,
    sync_reset,
    sel_input_iii_1,
    Clk);
  output [0:0]if_sel_input;
  input sync_reset;
  input sel_input_iii_1;
  input Clk;

  wire Clk;
  wire [0:0]if_sel_input;
  wire sel_input_iii_1;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(sel_input_iii_1),
        .Q(if_sel_input),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_117
   (\Using_FPGA.Native_0 ,
    I187_out,
    I1,
    I191_out,
    I13_out,
    I195_out,
    I17_out,
    I199_out,
    I111_out,
    I1103_out,
    I115_out,
    I1107_out,
    I119_out,
    I1111_out,
    I123_out,
    I1115_out,
    I127_out,
    I1119_out,
    I131_out,
    I1123_out,
    I135_out,
    I143_out,
    I147_out,
    I151_out,
    I155_out,
    I159_out,
    I163_out,
    I167_out,
    I171_out,
    I175_out,
    I179_out,
    I183_out,
    I1127_out,
    I1131_out,
    I1135_out,
    I1139_out,
    I1143_out,
    I1147_out,
    I1151_out,
    I1155_out,
    I1159_out,
    I1163_out,
    I1167_out,
    sync_reset,
    sel_input_i_1,
    Clk,
    out,
    in);
  output \Using_FPGA.Native_0 ;
  output I187_out;
  output I1;
  output I191_out;
  output I13_out;
  output I195_out;
  output I17_out;
  output I199_out;
  output I111_out;
  output I1103_out;
  output I115_out;
  output I1107_out;
  output I119_out;
  output I1111_out;
  output I123_out;
  output I1115_out;
  output I127_out;
  output I1119_out;
  output I131_out;
  output I1123_out;
  output I135_out;
  output I143_out;
  output I147_out;
  output I151_out;
  output I155_out;
  output I159_out;
  output I163_out;
  output I167_out;
  output I171_out;
  output I175_out;
  output I179_out;
  output I183_out;
  output I1127_out;
  output I1131_out;
  output I1135_out;
  output I1139_out;
  output I1143_out;
  output I1147_out;
  output I1151_out;
  output I1155_out;
  output I1159_out;
  output I1163_out;
  output I1167_out;
  input sync_reset;
  input sel_input_i_1;
  input Clk;
  input [41:0]out;
  input [31:0]in;

  wire Clk;
  wire I1;
  wire I1103_out;
  wire I1107_out;
  wire I1111_out;
  wire I1115_out;
  wire I1119_out;
  wire I111_out;
  wire I1123_out;
  wire I1127_out;
  wire I1131_out;
  wire I1135_out;
  wire I1139_out;
  wire I1143_out;
  wire I1147_out;
  wire I1151_out;
  wire I1155_out;
  wire I1159_out;
  wire I115_out;
  wire I1163_out;
  wire I1167_out;
  wire I119_out;
  wire I123_out;
  wire I127_out;
  wire I131_out;
  wire I135_out;
  wire I13_out;
  wire I143_out;
  wire I147_out;
  wire I151_out;
  wire I155_out;
  wire I159_out;
  wire I163_out;
  wire I167_out;
  wire I171_out;
  wire I175_out;
  wire I179_out;
  wire I17_out;
  wire I183_out;
  wire I187_out;
  wire I191_out;
  wire I195_out;
  wire I199_out;
  wire \Using_FPGA.Native_0 ;
  wire [31:0]in;
  wire [41:0]out;
  wire sel_input_i_1;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(sel_input_i_1),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2 
       (.I0(out[21]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[0]),
        .O(I187_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__0 
       (.I0(out[0]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[0]),
        .O(I1));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__1 
       (.I0(out[22]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[1]),
        .O(I191_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__10 
       (.I0(out[5]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[5]),
        .O(I119_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__11 
       (.I0(out[27]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[6]),
        .O(I1111_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__12 
       (.I0(out[6]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[6]),
        .O(I123_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__13 
       (.I0(out[28]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[7]),
        .O(I1115_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__14 
       (.I0(out[7]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[7]),
        .O(I127_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__15 
       (.I0(out[29]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[8]),
        .O(I1119_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__16 
       (.I0(out[8]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[8]),
        .O(I131_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__17 
       (.I0(out[30]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[9]),
        .O(I1123_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__18 
       (.I0(out[9]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[9]),
        .O(I135_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__2 
       (.I0(out[1]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[1]),
        .O(I13_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__3 
       (.I0(out[23]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[2]),
        .O(I195_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__4 
       (.I0(out[2]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[2]),
        .O(I17_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__5 
       (.I0(out[24]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[3]),
        .O(I199_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__59 
       (.I0(out[10]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[10]),
        .O(I143_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__6 
       (.I0(out[3]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[3]),
        .O(I111_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__60 
       (.I0(out[11]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[11]),
        .O(I147_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__61 
       (.I0(out[12]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[12]),
        .O(I151_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__62 
       (.I0(out[13]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[13]),
        .O(I155_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__63 
       (.I0(out[14]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[14]),
        .O(I159_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__64 
       (.I0(out[15]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[15]),
        .O(I163_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__65 
       (.I0(out[16]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[16]),
        .O(I167_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__66 
       (.I0(out[17]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[17]),
        .O(I171_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__67 
       (.I0(out[18]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[18]),
        .O(I175_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__68 
       (.I0(out[19]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[19]),
        .O(I179_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__69 
       (.I0(out[20]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[20]),
        .O(I183_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__7 
       (.I0(out[25]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[4]),
        .O(I1103_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__70 
       (.I0(out[31]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[21]),
        .O(I1127_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__71 
       (.I0(out[32]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[22]),
        .O(I1131_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__72 
       (.I0(out[33]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[23]),
        .O(I1135_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__73 
       (.I0(out[34]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[24]),
        .O(I1139_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__74 
       (.I0(out[35]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[25]),
        .O(I1143_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__75 
       (.I0(out[36]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[26]),
        .O(I1147_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__76 
       (.I0(out[37]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[27]),
        .O(I1151_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__77 
       (.I0(out[38]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[28]),
        .O(I1155_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__78 
       (.I0(out[39]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[29]),
        .O(I1159_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__79 
       (.I0(out[40]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[30]),
        .O(I1163_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__8 
       (.I0(out[4]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[4]),
        .O(I115_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__80 
       (.I0(out[41]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[31]),
        .O(I1167_out));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__9 
       (.I0(out[26]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(in[5]),
        .O(I1107_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_119
   (\Using_FPGA.Native_0 ,
    OF_Op1_Sel_SPR_PC0__0,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    sync_reset,
    of_instr_ii_42,
    Clk,
    \Using_FPGA.Native_6 ,
    EX_Use_Carry_reg,
    \Using_FPGA.Native_7 ,
    ex_jump_nodelay,
    ex_jump,
    EX_CMP_Op_reg,
    EX_Unsigned_Op_reg,
    EX_ALU_Op1142_out__0,
    EX_Unsigned_Op_reg_0);
  output \Using_FPGA.Native_0 ;
  output OF_Op1_Sel_SPR_PC0__0;
  output \Using_FPGA.Native_1 ;
  output \Using_FPGA.Native_2 ;
  output \Using_FPGA.Native_3 ;
  output \Using_FPGA.Native_4 ;
  output \Using_FPGA.Native_5 ;
  input sync_reset;
  input of_instr_ii_42;
  input Clk;
  input \Using_FPGA.Native_6 ;
  input EX_Use_Carry_reg;
  input \Using_FPGA.Native_7 ;
  input ex_jump_nodelay;
  input ex_jump;
  input EX_CMP_Op_reg;
  input EX_Unsigned_Op_reg;
  input EX_ALU_Op1142_out__0;
  input EX_Unsigned_Op_reg_0;

  wire Clk;
  wire EX_ALU_Op1142_out__0;
  wire EX_CMP_Op_reg;
  wire EX_Unsigned_Op_reg;
  wire EX_Unsigned_Op_reg_0;
  wire EX_Use_Carry_reg;
  wire OF_Op1_Sel_SPR_PC0__0;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire ex_jump;
  wire ex_jump_nodelay;
  wire of_instr_ii_42;
  wire sync_reset;

  LUT5 #(
    .INIT(32'h00000010)) 
    EX_CMP_Op_i_1
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_7 ),
        .I2(EX_CMP_Op_reg),
        .I3(EX_Unsigned_Op_reg),
        .I4(EX_ALU_Op1142_out__0),
        .O(\Using_FPGA.Native_2 ));
  LUT5 #(
    .INIT(32'h00000010)) 
    EX_Unsigned_Op_i_1
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_7 ),
        .I2(EX_Unsigned_Op_reg_0),
        .I3(EX_Unsigned_Op_reg),
        .I4(EX_ALU_Op1142_out__0),
        .O(\Using_FPGA.Native_3 ));
  LUT4 #(
    .INIT(16'h0010)) 
    EX_Use_Carry_i_1
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_7 ),
        .I2(EX_Use_Carry_reg),
        .I3(EX_ALU_Op1142_out__0),
        .O(\Using_FPGA.Native_4 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_42),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \Using_FPGA.Native_i_1__103 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_7 ),
        .I2(\Using_FPGA.Native_6 ),
        .O(\Using_FPGA.Native_5 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT4 #(
    .INIT(16'h0888)) 
    \Using_FPGA.Native_i_1__97 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_7 ),
        .I2(ex_jump_nodelay),
        .I3(ex_jump),
        .O(\Using_FPGA.Native_1 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \Using_FPGA.Native_i_5__1 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_6 ),
        .I2(EX_Use_Carry_reg),
        .I3(\Using_FPGA.Native_7 ),
        .O(OF_Op1_Sel_SPR_PC0__0));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_121
   (\Using_FPGA.Native_0 ,
    \mem_gpr_write_addr_reg[4] ,
    \wb_gpr_write_addr_reg[4] ,
    \ex_gpr_write_addr_reg[4] ,
    sync_reset,
    of_instr_ii_32,
    Clk,
    \EX_Op3[0]_i_4 ,
    \EX_Op3[0]_i_6 ,
    \EX_Op3[0]_i_6_0 ,
    \EX_Op3[0]_i_5 ,
    \EX_Op3[0]_i_6_1 ,
    I4,
    I0);
  output \Using_FPGA.Native_0 ;
  output \mem_gpr_write_addr_reg[4] ;
  output \wb_gpr_write_addr_reg[4] ;
  output \ex_gpr_write_addr_reg[4] ;
  input sync_reset;
  input of_instr_ii_32;
  input Clk;
  input [2:0]\EX_Op3[0]_i_4 ;
  input \EX_Op3[0]_i_6 ;
  input \EX_Op3[0]_i_6_0 ;
  input [2:0]\EX_Op3[0]_i_5 ;
  input \EX_Op3[0]_i_6_1 ;
  input I4;
  input I0;

  wire Clk;
  wire [2:0]\EX_Op3[0]_i_4 ;
  wire [2:0]\EX_Op3[0]_i_5 ;
  wire \EX_Op3[0]_i_6 ;
  wire \EX_Op3[0]_i_6_0 ;
  wire \EX_Op3[0]_i_6_1 ;
  wire I0;
  wire I4;
  wire \Using_FPGA.Native_0 ;
  wire \ex_gpr_write_addr_reg[4] ;
  wire \mem_gpr_write_addr_reg[4] ;
  wire of_instr_ii_32;
  wire sync_reset;
  wire \wb_gpr_write_addr_reg[4] ;

  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \EX_Op3[0]_i_11 
       (.I0(\EX_Op3[0]_i_6_1 ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\EX_Op3[0]_i_6 ),
        .I3(I4),
        .I4(\EX_Op3[0]_i_6_0 ),
        .I5(I0),
        .O(\ex_gpr_write_addr_reg[4] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \EX_Op3[0]_i_7 
       (.I0(\EX_Op3[0]_i_4 [0]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\EX_Op3[0]_i_6 ),
        .I3(\EX_Op3[0]_i_4 [2]),
        .I4(\EX_Op3[0]_i_6_0 ),
        .I5(\EX_Op3[0]_i_4 [1]),
        .O(\mem_gpr_write_addr_reg[4] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \EX_Op3[0]_i_9 
       (.I0(\EX_Op3[0]_i_5 [0]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\EX_Op3[0]_i_6 ),
        .I3(\EX_Op3[0]_i_5 [2]),
        .I4(\EX_Op3[0]_i_6_0 ),
        .I5(\EX_Op3[0]_i_5 [1]),
        .O(\wb_gpr_write_addr_reg[4] ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_32),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_123
   (\Using_FPGA.Native_0 ,
    sync_reset,
    of_instr_ii_31,
    Clk);
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input of_instr_ii_31;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_31;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_31),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_125
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    EX_ALU_Op1142_out__0,
    \Using_FPGA.Native_2 ,
    ex_set_bip0__1,
    sync_reset,
    of_instr_ii_30,
    Clk,
    \EX_ALU_Op_reg[1] ,
    ex_enable_alu_i_reg,
    \EX_ALU_Op_reg[1]_0 ,
    ex_enable_alu_i_reg_0,
    ex_enable_alu_i_reg_1,
    ex_enable_alu_i_reg_2,
    ex_enable_alu_i_reg_3,
    p_28_in,
    ex_set_bip_reg,
    ex_set_bip_reg_0);
  output \Using_FPGA.Native_0 ;
  output [0:0]\Using_FPGA.Native_1 ;
  output EX_ALU_Op1142_out__0;
  output \Using_FPGA.Native_2 ;
  output ex_set_bip0__1;
  input sync_reset;
  input of_instr_ii_30;
  input Clk;
  input \EX_ALU_Op_reg[1] ;
  input ex_enable_alu_i_reg;
  input \EX_ALU_Op_reg[1]_0 ;
  input ex_enable_alu_i_reg_0;
  input ex_enable_alu_i_reg_1;
  input ex_enable_alu_i_reg_2;
  input ex_enable_alu_i_reg_3;
  input p_28_in;
  input ex_set_bip_reg;
  input ex_set_bip_reg_0;

  wire Clk;
  wire EX_ALU_Op1142_out__0;
  wire \EX_ALU_Op_reg[1] ;
  wire \EX_ALU_Op_reg[1]_0 ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire ex_enable_alu_i_reg;
  wire ex_enable_alu_i_reg_0;
  wire ex_enable_alu_i_reg_1;
  wire ex_enable_alu_i_reg_2;
  wire ex_enable_alu_i_reg_3;
  wire ex_set_bip0__1;
  wire ex_set_bip_reg;
  wire ex_set_bip_reg_0;
  wire of_instr_ii_30;
  wire p_28_in;
  wire sync_reset;

  LUT6 #(
    .INIT(64'hAAAAAAAEAEAEAEEE)) 
    \EX_ALU_Op[1]_i_1 
       (.I0(EX_ALU_Op1142_out__0),
        .I1(\EX_ALU_Op_reg[1] ),
        .I2(ex_enable_alu_i_reg),
        .I3(\EX_ALU_Op_reg[1]_0 ),
        .I4(ex_enable_alu_i_reg_0),
        .I5(ex_enable_alu_i_reg_1),
        .O(\Using_FPGA.Native_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    EX_CMP_Op_i_2
       (.I0(\Using_FPGA.Native_0 ),
        .I1(p_28_in),
        .O(EX_ALU_Op1142_out__0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_30),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFEBFFFF)) 
    ex_enable_alu_i_i_1
       (.I0(EX_ALU_Op1142_out__0),
        .I1(ex_enable_alu_i_reg_1),
        .I2(ex_enable_alu_i_reg),
        .I3(ex_enable_alu_i_reg_2),
        .I4(ex_enable_alu_i_reg_3),
        .I5(ex_enable_alu_i_reg_0),
        .O(\Using_FPGA.Native_2 ));
  LUT3 #(
    .INIT(8'h08)) 
    ex_set_bip_i_2
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_set_bip_reg),
        .I2(ex_set_bip_reg_0),
        .O(ex_set_bip0__1));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_127
   (\Using_FPGA.Native_0 ,
    sync_reset,
    of_instr_ii_29,
    Clk);
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input of_instr_ii_29;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_29;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_29),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_129
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    sync_reset,
    of_instr_ii_28,
    Clk,
    p_1_in26_in,
    ex_mbar_decode_reg,
    ex_mbar_decode,
    ex_mbar_decode_reg_0);
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  input sync_reset;
  input of_instr_ii_28;
  input Clk;
  input p_1_in26_in;
  input ex_mbar_decode_reg;
  input ex_mbar_decode;
  input ex_mbar_decode_reg_0;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_mbar_decode;
  wire ex_mbar_decode_reg;
  wire ex_mbar_decode_reg_0;
  wire of_instr_ii_28;
  wire p_1_in26_in;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_28),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT5 #(
    .INIT(32'h80808F80)) 
    ex_mbar_decode_cmb_inferred_i_1
       (.I0(\Using_FPGA.Native_0 ),
        .I1(p_1_in26_in),
        .I2(ex_mbar_decode_reg),
        .I3(ex_mbar_decode),
        .I4(ex_mbar_decode_reg_0),
        .O(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_131
   (of_gpr_op1_rd_addr,
    sync_reset,
    of_instr_ii_27,
    Clk);
  output [0:0]of_gpr_op1_rd_addr;
  input sync_reset;
  input of_instr_ii_27;
  input Clk;

  wire Clk;
  wire [0:0]of_gpr_op1_rd_addr;
  wire of_instr_ii_27;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_27),
        .Q(of_gpr_op1_rd_addr),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_133
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \imm_reg_reg[15] ,
    \imm_reg_reg[14] ,
    \imm_reg_reg[13] ,
    \imm_reg_reg[12] ,
    \imm_reg_reg[11] ,
    \imm_reg_reg[10] ,
    \imm_reg_reg[9] ,
    \imm_reg_reg[8] ,
    \imm_reg_reg[7] ,
    \imm_reg_reg[6] ,
    \imm_reg_reg[5] ,
    \imm_reg_reg[4] ,
    \imm_reg_reg[3] ,
    \imm_reg_reg[2] ,
    \imm_reg_reg[1] ,
    \imm_reg_reg[0] ,
    sync_reset,
    of_instr_ii_26,
    Clk,
    of_op2_sel_imm,
    GPR_Op2,
    \EX_Op2_reg[0] ,
    \EX_Op2_reg[0]_0 );
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  output \imm_reg_reg[15] ;
  output \imm_reg_reg[14] ;
  output \imm_reg_reg[13] ;
  output \imm_reg_reg[12] ;
  output \imm_reg_reg[11] ;
  output \imm_reg_reg[10] ;
  output \imm_reg_reg[9] ;
  output \imm_reg_reg[8] ;
  output \imm_reg_reg[7] ;
  output \imm_reg_reg[6] ;
  output \imm_reg_reg[5] ;
  output \imm_reg_reg[4] ;
  output \imm_reg_reg[3] ;
  output \imm_reg_reg[2] ;
  output \imm_reg_reg[1] ;
  output \imm_reg_reg[0] ;
  input sync_reset;
  input of_instr_ii_26;
  input Clk;
  input of_op2_sel_imm;
  input [16:0]GPR_Op2;
  input [15:0]\EX_Op2_reg[0] ;
  input \EX_Op2_reg[0]_0 ;

  wire Clk;
  wire [15:0]\EX_Op2_reg[0] ;
  wire \EX_Op2_reg[0]_0 ;
  wire [16:0]GPR_Op2;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \imm_reg_reg[0] ;
  wire \imm_reg_reg[10] ;
  wire \imm_reg_reg[11] ;
  wire \imm_reg_reg[12] ;
  wire \imm_reg_reg[13] ;
  wire \imm_reg_reg[14] ;
  wire \imm_reg_reg[15] ;
  wire \imm_reg_reg[1] ;
  wire \imm_reg_reg[2] ;
  wire \imm_reg_reg[3] ;
  wire \imm_reg_reg[4] ;
  wire \imm_reg_reg[5] ;
  wire \imm_reg_reg[6] ;
  wire \imm_reg_reg[7] ;
  wire \imm_reg_reg[8] ;
  wire \imm_reg_reg[9] ;
  wire of_instr_ii_26;
  wire of_op2_sel_imm;
  wire sync_reset;

  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \EX_Op2[0]_i_2 
       (.I0(\EX_Op2_reg[0] [15]),
        .I1(\EX_Op2_reg[0]_0 ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(of_op2_sel_imm),
        .I4(GPR_Op2[16]),
        .O(\imm_reg_reg[0] ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \EX_Op2[10]_i_2 
       (.I0(\EX_Op2_reg[0] [5]),
        .I1(\EX_Op2_reg[0]_0 ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(of_op2_sel_imm),
        .I4(GPR_Op2[6]),
        .O(\imm_reg_reg[10] ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \EX_Op2[11]_i_2 
       (.I0(\EX_Op2_reg[0] [4]),
        .I1(\EX_Op2_reg[0]_0 ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(of_op2_sel_imm),
        .I4(GPR_Op2[5]),
        .O(\imm_reg_reg[11] ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \EX_Op2[12]_i_2 
       (.I0(\EX_Op2_reg[0] [3]),
        .I1(\EX_Op2_reg[0]_0 ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(of_op2_sel_imm),
        .I4(GPR_Op2[4]),
        .O(\imm_reg_reg[12] ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \EX_Op2[13]_i_2 
       (.I0(\EX_Op2_reg[0] [2]),
        .I1(\EX_Op2_reg[0]_0 ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(of_op2_sel_imm),
        .I4(GPR_Op2[3]),
        .O(\imm_reg_reg[13] ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \EX_Op2[14]_i_2 
       (.I0(\EX_Op2_reg[0] [1]),
        .I1(\EX_Op2_reg[0]_0 ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(of_op2_sel_imm),
        .I4(GPR_Op2[2]),
        .O(\imm_reg_reg[14] ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \EX_Op2[15]_i_2 
       (.I0(\EX_Op2_reg[0] [0]),
        .I1(\EX_Op2_reg[0]_0 ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(of_op2_sel_imm),
        .I4(GPR_Op2[1]),
        .O(\imm_reg_reg[15] ));
  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[16]_i_2 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(of_op2_sel_imm),
        .I2(GPR_Op2[0]),
        .O(\Using_FPGA.Native_1 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \EX_Op2[1]_i_2 
       (.I0(\EX_Op2_reg[0] [14]),
        .I1(\EX_Op2_reg[0]_0 ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(of_op2_sel_imm),
        .I4(GPR_Op2[15]),
        .O(\imm_reg_reg[1] ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \EX_Op2[2]_i_2 
       (.I0(\EX_Op2_reg[0] [13]),
        .I1(\EX_Op2_reg[0]_0 ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(of_op2_sel_imm),
        .I4(GPR_Op2[14]),
        .O(\imm_reg_reg[2] ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \EX_Op2[3]_i_2 
       (.I0(\EX_Op2_reg[0] [12]),
        .I1(\EX_Op2_reg[0]_0 ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(of_op2_sel_imm),
        .I4(GPR_Op2[13]),
        .O(\imm_reg_reg[3] ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \EX_Op2[4]_i_2 
       (.I0(\EX_Op2_reg[0] [11]),
        .I1(\EX_Op2_reg[0]_0 ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(of_op2_sel_imm),
        .I4(GPR_Op2[12]),
        .O(\imm_reg_reg[4] ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \EX_Op2[5]_i_2 
       (.I0(\EX_Op2_reg[0] [10]),
        .I1(\EX_Op2_reg[0]_0 ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(of_op2_sel_imm),
        .I4(GPR_Op2[11]),
        .O(\imm_reg_reg[5] ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \EX_Op2[6]_i_2 
       (.I0(\EX_Op2_reg[0] [9]),
        .I1(\EX_Op2_reg[0]_0 ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(of_op2_sel_imm),
        .I4(GPR_Op2[10]),
        .O(\imm_reg_reg[6] ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \EX_Op2[7]_i_2 
       (.I0(\EX_Op2_reg[0] [8]),
        .I1(\EX_Op2_reg[0]_0 ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(of_op2_sel_imm),
        .I4(GPR_Op2[9]),
        .O(\imm_reg_reg[7] ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \EX_Op2[8]_i_2 
       (.I0(\EX_Op2_reg[0] [7]),
        .I1(\EX_Op2_reg[0]_0 ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(of_op2_sel_imm),
        .I4(GPR_Op2[8]),
        .O(\imm_reg_reg[8] ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \EX_Op2[9]_i_2 
       (.I0(\EX_Op2_reg[0] [6]),
        .I1(\EX_Op2_reg[0]_0 ),
        .I2(\Using_FPGA.Native_0 ),
        .I3(of_op2_sel_imm),
        .I4(GPR_Op2[7]),
        .O(\imm_reg_reg[9] ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_26),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_135
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    sync_reset,
    of_instr_ii_25,
    Clk,
    of_op2_sel_imm,
    GPR_Op2,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3 ,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0 );
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  output \Using_FPGA.Native_2 ;
  input sync_reset;
  input of_instr_ii_25;
  input Clk;
  input of_op2_sel_imm;
  input [0:0]GPR_Op2;
  input \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3 ;
  input \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0 ;

  wire Clk;
  wire [0:0]GPR_Op2;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0 ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire of_instr_ii_25;
  wire of_op2_sel_imm;
  wire sync_reset;

  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[17]_i_2 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(of_op2_sel_imm),
        .I2(GPR_Op2),
        .O(\Using_FPGA.Native_1 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_7 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3 ),
        .I2(\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0 ),
        .O(\Using_FPGA.Native_2 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_25),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_137
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    sync_reset,
    of_instr_ii_24,
    Clk,
    of_op2_sel_imm,
    GPR_Op2);
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  input sync_reset;
  input of_instr_ii_24;
  input Clk;
  input of_op2_sel_imm;
  input [0:0]GPR_Op2;

  wire Clk;
  wire [0:0]GPR_Op2;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_instr_ii_24;
  wire of_op2_sel_imm;
  wire sync_reset;

  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[18]_i_2 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(of_op2_sel_imm),
        .I2(GPR_Op2),
        .O(\Using_FPGA.Native_1 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_24),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_139
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    sync_reset,
    of_instr_ii_23,
    Clk,
    of_op2_sel_imm,
    GPR_Op2);
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  input sync_reset;
  input of_instr_ii_23;
  input Clk;
  input of_op2_sel_imm;
  input [0:0]GPR_Op2;

  wire Clk;
  wire [0:0]GPR_Op2;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_instr_ii_23;
  wire of_op2_sel_imm;
  wire sync_reset;

  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[19]_i_2 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(of_op2_sel_imm),
        .I2(GPR_Op2),
        .O(\Using_FPGA.Native_1 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_23),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_141
   (\Using_FPGA.Native_0 ,
    ex_gpr_write_reg,
    \Using_FPGA.Native_1 ,
    p_28_in,
    mem_is_multi_or_load_instr_reg,
    \Using_FPGA.Native_2 ,
    of_op2_sel_imm,
    wb_exception_i_reg,
    \Using_FPGA.Native_3 ,
    ex_set_bip,
    sync_reset,
    of_instr_ii_41,
    Clk,
    ex_gpr_write_reg_0,
    ex_gpr_write_reg_1,
    ex_gpr_write111_out__0,
    wb_exception,
    ex_set_bip_reg,
    \EX_ALU_Op_reg[0] ,
    ex_set_bip_reg_0,
    ex_set_bip_reg_1,
    EX_ALU_Op1142_out__0,
    ex_gpr_write_dbg_reg,
    p_1_in30_in,
    ex_gpr_write_dbg_reg_0,
    ex_gpr_write_i_2_0,
    ex_gpr_write_i_2_1,
    ex_gpr_write_i_2_2,
    of_read_mem_write_op2_conflict_part2,
    mem_is_multi_or_load_instr,
    of_read_mem_write_op2_conflict_part1,
    ex_set_bip_reg_2,
    \EX_Op2[0]_i_2 ,
    ex_gpr_write_dbg_reg_1,
    ex_gpr_write_dbg,
    ex_set_bip0__1);
  output \Using_FPGA.Native_0 ;
  output ex_gpr_write_reg;
  output [0:0]\Using_FPGA.Native_1 ;
  output p_28_in;
  output mem_is_multi_or_load_instr_reg;
  output \Using_FPGA.Native_2 ;
  output of_op2_sel_imm;
  output wb_exception_i_reg;
  output \Using_FPGA.Native_3 ;
  output ex_set_bip;
  input sync_reset;
  input of_instr_ii_41;
  input Clk;
  input ex_gpr_write_reg_0;
  input ex_gpr_write_reg_1;
  input ex_gpr_write111_out__0;
  input wb_exception;
  input ex_set_bip_reg;
  input \EX_ALU_Op_reg[0] ;
  input ex_set_bip_reg_0;
  input ex_set_bip_reg_1;
  input EX_ALU_Op1142_out__0;
  input ex_gpr_write_dbg_reg;
  input p_1_in30_in;
  input ex_gpr_write_dbg_reg_0;
  input ex_gpr_write_i_2_0;
  input ex_gpr_write_i_2_1;
  input ex_gpr_write_i_2_2;
  input of_read_mem_write_op2_conflict_part2;
  input mem_is_multi_or_load_instr;
  input of_read_mem_write_op2_conflict_part1;
  input ex_set_bip_reg_2;
  input \EX_Op2[0]_i_2 ;
  input ex_gpr_write_dbg_reg_1;
  input ex_gpr_write_dbg;
  input ex_set_bip0__1;

  wire Clk;
  wire EX_ALU_Op1142_out__0;
  wire \EX_ALU_Op_reg[0] ;
  wire \EX_Op2[0]_i_2 ;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire ex_gpr_write;
  wire ex_gpr_write111_out__0;
  wire ex_gpr_write_dbg;
  wire ex_gpr_write_dbg108_in;
  wire ex_gpr_write_dbg_reg;
  wire ex_gpr_write_dbg_reg_0;
  wire ex_gpr_write_dbg_reg_1;
  wire ex_gpr_write_i_2_0;
  wire ex_gpr_write_i_2_1;
  wire ex_gpr_write_i_2_2;
  wire ex_gpr_write_i_5_n_0;
  wire ex_gpr_write_i_6_n_0;
  wire ex_gpr_write_reg;
  wire ex_gpr_write_reg_0;
  wire ex_gpr_write_reg_1;
  wire ex_set_bip;
  wire ex_set_bip0__1;
  wire ex_set_bip_reg;
  wire ex_set_bip_reg_0;
  wire ex_set_bip_reg_1;
  wire ex_set_bip_reg_2;
  wire mem_is_multi_or_load_instr;
  wire mem_is_multi_or_load_instr_reg;
  wire of_instr_ii_41;
  wire of_op2_sel_imm;
  wire of_read_mem_write_op2_conflict_part1;
  wire of_read_mem_write_op2_conflict_part2;
  wire p_1_in30_in;
  wire p_28_in;
  wire sync_reset;
  wire wb_exception;
  wire wb_exception_i_reg;

  LUT6 #(
    .INIT(64'h00000000FFFFFFF9)) 
    \EX_ALU_Op[0]_i_1 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_set_bip_reg),
        .I2(\EX_ALU_Op_reg[0] ),
        .I3(ex_set_bip_reg_0),
        .I4(ex_set_bip_reg_1),
        .I5(EX_ALU_Op1142_out__0),
        .O(\Using_FPGA.Native_1 ));
  LUT5 #(
    .INIT(32'h00004000)) 
    EX_CMP_Op_i_3
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_set_bip_reg_0),
        .I2(ex_set_bip_reg_1),
        .I3(ex_set_bip_reg),
        .I4(ex_set_bip_reg_2),
        .O(p_28_in));
  LUT6 #(
    .INIT(64'hFFFFFFFF00004000)) 
    \EX_Op2[0]_i_5 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_set_bip_reg),
        .I2(ex_set_bip_reg_2),
        .I3(ex_set_bip_reg_1),
        .I4(ex_set_bip_reg_0),
        .I5(\EX_Op2[0]_i_2 ),
        .O(of_op2_sel_imm));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_41),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \Using_FPGA.Native_i_1__12 
       (.I0(\Using_FPGA.Native_2 ),
        .I1(of_read_mem_write_op2_conflict_part2),
        .I2(mem_is_multi_or_load_instr),
        .I3(of_read_mem_write_op2_conflict_part1),
        .O(mem_is_multi_or_load_instr_reg));
  LUT5 #(
    .INIT(32'h33332333)) 
    \Using_FPGA.Native_i_2__116 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\EX_Op2[0]_i_2 ),
        .I2(ex_set_bip_reg),
        .I3(ex_set_bip_reg_1),
        .I4(ex_set_bip_reg_0),
        .O(\Using_FPGA.Native_2 ));
  LUT4 #(
    .INIT(16'h0006)) 
    ex_alu_sel_logic_i_i_1
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_set_bip_reg),
        .I2(ex_set_bip_reg_1),
        .I3(EX_ALU_Op1142_out__0),
        .O(\Using_FPGA.Native_3 ));
  LUT6 #(
    .INIT(64'h0200020302000200)) 
    ex_gpr_write_dbg_i_1
       (.I0(ex_gpr_write),
        .I1(wb_exception),
        .I2(sync_reset),
        .I3(ex_gpr_write_reg_1),
        .I4(ex_gpr_write_dbg_reg_1),
        .I5(ex_gpr_write_dbg),
        .O(wb_exception_i_reg));
  LUT6 #(
    .INIT(64'h00000000000000E2)) 
    ex_gpr_write_i_1
       (.I0(ex_gpr_write_reg_0),
        .I1(ex_gpr_write_reg_1),
        .I2(ex_gpr_write),
        .I3(ex_gpr_write111_out__0),
        .I4(sync_reset),
        .I5(wb_exception),
        .O(ex_gpr_write_reg));
  LUT4 #(
    .INIT(16'h0A2A)) 
    ex_gpr_write_i_2
       (.I0(ex_gpr_write_dbg108_in),
        .I1(ex_gpr_write_dbg_reg),
        .I2(p_1_in30_in),
        .I3(ex_gpr_write_dbg_reg_0),
        .O(ex_gpr_write));
  LUT6 #(
    .INIT(64'h8888888888888BBB)) 
    ex_gpr_write_i_4
       (.I0(ex_gpr_write_i_2_0),
        .I1(p_28_in),
        .I2(ex_gpr_write_i_2_1),
        .I3(ex_gpr_write_i_2_2),
        .I4(ex_gpr_write_i_5_n_0),
        .I5(ex_gpr_write_i_6_n_0),
        .O(ex_gpr_write_dbg108_in));
  LUT5 #(
    .INIT(32'h40000000)) 
    ex_gpr_write_i_5
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_set_bip_reg_0),
        .I2(ex_set_bip_reg_1),
        .I3(ex_set_bip_reg_2),
        .I4(ex_set_bip_reg),
        .O(ex_gpr_write_i_5_n_0));
  LUT6 #(
    .INIT(64'h08000800CC008800)) 
    ex_gpr_write_i_6
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_set_bip_reg),
        .I2(ex_set_bip_reg_2),
        .I3(ex_set_bip_reg_1),
        .I4(\EX_Op2[0]_i_2 ),
        .I5(ex_set_bip_reg_0),
        .O(ex_gpr_write_i_6_n_0));
  LUT6 #(
    .INIT(64'h1000000000000000)) 
    ex_set_bip_i_1
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_set_bip_reg_2),
        .I2(ex_set_bip0__1),
        .I3(ex_set_bip_reg_0),
        .I4(ex_set_bip_reg_1),
        .I5(ex_set_bip_reg),
        .O(ex_set_bip));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_143
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    sync_reset,
    of_instr_ii_22,
    Clk,
    of_op2_sel_imm,
    GPR_Op2,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0 ,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_1 ,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_2 ,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_2 ,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_2_0 ,
    ex_set_bip0__1,
    p_1_in26_in,
    of_Imm180);
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  output \Using_FPGA.Native_2 ;
  input sync_reset;
  input of_instr_ii_22;
  input Clk;
  input of_op2_sel_imm;
  input [0:0]GPR_Op2;
  input \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0 ;
  input \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_1 ;
  input \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_2 ;
  input \Performance_Debug_Control.ex_dbg_pc_hit_i_i_2 ;
  input \Performance_Debug_Control.ex_dbg_pc_hit_i_i_2_0 ;
  input ex_set_bip0__1;
  input p_1_in26_in;
  input of_Imm180;

  wire Clk;
  wire [0:0]GPR_Op2;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_i_2 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_i_2_0 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_1 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_2 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_i_6_n_0 ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire ex_set_bip0__1;
  wire of_Imm180;
  wire of_instr_ii_22;
  wire of_op2_sel_imm;
  wire p_1_in26_in;
  wire sync_reset;

  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[20]_i_2 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(of_op2_sel_imm),
        .I2(GPR_Op2),
        .O(\Using_FPGA.Native_1 ));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3 
       (.I0(\Performance_Debug_Control.ex_dbg_pc_hit_i_i_6_n_0 ),
        .I1(\Performance_Debug_Control.ex_dbg_pc_hit_i_i_2 ),
        .I2(\Performance_Debug_Control.ex_dbg_pc_hit_i_i_2_0 ),
        .I3(ex_set_bip0__1),
        .I4(p_1_in26_in),
        .I5(of_Imm180),
        .O(\Using_FPGA.Native_2 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_6 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0 ),
        .I2(\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_1 ),
        .I3(\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_2 ),
        .O(\Performance_Debug_Control.ex_dbg_pc_hit_i_i_6_n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_22),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_145
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    sync_reset,
    of_instr_ii_21,
    Clk,
    of_op2_sel_imm,
    GPR_Op2,
    \Performance_Debug_Control.ex_brki_hit_reg ,
    \Performance_Debug_Control.ex_brki_hit_reg_0 ,
    \Performance_Debug_Control.ex_brki_hit_reg_1 ,
    \Performance_Debug_Control.ex_brki_hit_reg_2 );
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  output \Using_FPGA.Native_2 ;
  input sync_reset;
  input of_instr_ii_21;
  input Clk;
  input of_op2_sel_imm;
  input [0:0]GPR_Op2;
  input \Performance_Debug_Control.ex_brki_hit_reg ;
  input \Performance_Debug_Control.ex_brki_hit_reg_0 ;
  input \Performance_Debug_Control.ex_brki_hit_reg_1 ;
  input \Performance_Debug_Control.ex_brki_hit_reg_2 ;

  wire Clk;
  wire [0:0]GPR_Op2;
  wire \Performance_Debug_Control.ex_brki_hit_reg ;
  wire \Performance_Debug_Control.ex_brki_hit_reg_0 ;
  wire \Performance_Debug_Control.ex_brki_hit_reg_1 ;
  wire \Performance_Debug_Control.ex_brki_hit_reg_2 ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire of_instr_ii_21;
  wire of_op2_sel_imm;
  wire sync_reset;

  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[21]_i_2 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(of_op2_sel_imm),
        .I2(GPR_Op2),
        .O(\Using_FPGA.Native_1 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \Performance_Debug_Control.ex_brki_hit_i_3 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.ex_brki_hit_reg ),
        .I2(\Performance_Debug_Control.ex_brki_hit_reg_0 ),
        .I3(\Performance_Debug_Control.ex_brki_hit_reg_1 ),
        .I4(\Performance_Debug_Control.ex_brki_hit_reg_2 ),
        .O(\Using_FPGA.Native_2 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_21),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_147
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    sync_reset,
    of_instr_ii_20,
    Clk,
    of_op2_sel_imm,
    GPR_Op2,
    \Using_FPGA.Native_3 );
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  output \Using_FPGA.Native_2 ;
  input sync_reset;
  input of_instr_ii_20;
  input Clk;
  input of_op2_sel_imm;
  input [0:0]GPR_Op2;
  input \Using_FPGA.Native_3 ;

  wire Clk;
  wire [0:0]GPR_Op2;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire of_instr_ii_20;
  wire of_op2_sel_imm;
  wire sync_reset;

  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[22]_i_2 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(of_op2_sel_imm),
        .I2(GPR_Op2),
        .O(\Using_FPGA.Native_1 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_20),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_1__104 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_3 ),
        .O(\Using_FPGA.Native_2 ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_149
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    sync_reset,
    of_instr_ii_19,
    Clk,
    of_op2_sel_imm,
    GPR_Op2);
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  input sync_reset;
  input of_instr_ii_19;
  input Clk;
  input of_op2_sel_imm;
  input [0:0]GPR_Op2;

  wire Clk;
  wire [0:0]GPR_Op2;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_instr_ii_19;
  wire of_op2_sel_imm;
  wire sync_reset;

  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[23]_i_2 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(of_op2_sel_imm),
        .I2(GPR_Op2),
        .O(\Using_FPGA.Native_1 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_19),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_151
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    sync_reset,
    of_instr_ii_18,
    Clk,
    of_op2_sel_imm,
    GPR_Op2,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3 ,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0 ,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_1 );
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  output \Using_FPGA.Native_2 ;
  input sync_reset;
  input of_instr_ii_18;
  input Clk;
  input of_op2_sel_imm;
  input [0:0]GPR_Op2;
  input \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3 ;
  input \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0 ;
  input \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_1 ;

  wire Clk;
  wire [0:0]GPR_Op2;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_1 ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire of_instr_ii_18;
  wire of_op2_sel_imm;
  wire sync_reset;

  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[24]_i_2 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(of_op2_sel_imm),
        .I2(GPR_Op2),
        .O(\Using_FPGA.Native_1 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \Performance_Debug_Control.ex_brki_hit_i_5 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3 ),
        .I2(\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0 ),
        .I3(\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_1 ),
        .O(\Using_FPGA.Native_2 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_18),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_153
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    sync_reset,
    of_instr_ii_17,
    Clk,
    of_op2_sel_imm,
    GPR_Op2);
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  input sync_reset;
  input of_instr_ii_17;
  input Clk;
  input of_op2_sel_imm;
  input [0:0]GPR_Op2;

  wire Clk;
  wire [0:0]GPR_Op2;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_instr_ii_17;
  wire of_op2_sel_imm;
  wire sync_reset;

  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[25]_i_2 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(of_op2_sel_imm),
        .I2(GPR_Op2),
        .O(\Using_FPGA.Native_1 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_17),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_155
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    sync_reset,
    of_instr_ii_16,
    Clk,
    of_op2_sel_imm,
    GPR_Op2,
    \EX_Sext_Op_reg[0] );
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  output \Using_FPGA.Native_2 ;
  input sync_reset;
  input of_instr_ii_16;
  input Clk;
  input of_op2_sel_imm;
  input [0:0]GPR_Op2;
  input \EX_Sext_Op_reg[0] ;

  wire Clk;
  wire \EX_Sext_Op_reg[0] ;
  wire [0:0]GPR_Op2;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire of_instr_ii_16;
  wire of_op2_sel_imm;
  wire sync_reset;

  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[26]_i_2 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(of_op2_sel_imm),
        .I2(GPR_Op2),
        .O(\Using_FPGA.Native_1 ));
  LUT2 #(
    .INIT(4'h8)) 
    \EX_Sext_Op[0]_i_2 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\EX_Sext_Op_reg[0] ),
        .O(\Using_FPGA.Native_2 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_16),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_157
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Serial_Dbg_Intf.control_reg_reg[8] ,
    of_Imm180,
    sync_reset,
    of_instr_ii_15,
    Clk,
    of_op2_sel_imm,
    GPR_Op2,
    \Performance_Debug_Control.ex_brki_hit_reg ,
    \Performance_Debug_Control.ex_brki_hit_reg_0 ,
    \Performance_Debug_Control.ex_brki_hit_reg_1 ,
    \Performance_Debug_Control.ex_brki_hit_reg_2 ,
    \Performance_Debug_Control.ex_brki_hit_reg_3 ,
    p_1_in26_in,
    \Performance_Debug_Control.ex_brki_hit_reg_4 ,
    \Performance_Debug_Control.ex_brki_hit_reg_5 ,
    \Performance_Debug_Control.ex_brki_hit_reg_6 ,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3 ,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0 ,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_1 ,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_2 );
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  output \Serial_Dbg_Intf.control_reg_reg[8] ;
  output of_Imm180;
  input sync_reset;
  input of_instr_ii_15;
  input Clk;
  input of_op2_sel_imm;
  input [0:0]GPR_Op2;
  input [0:0]\Performance_Debug_Control.ex_brki_hit_reg ;
  input \Performance_Debug_Control.ex_brki_hit_reg_0 ;
  input \Performance_Debug_Control.ex_brki_hit_reg_1 ;
  input \Performance_Debug_Control.ex_brki_hit_reg_2 ;
  input \Performance_Debug_Control.ex_brki_hit_reg_3 ;
  input p_1_in26_in;
  input \Performance_Debug_Control.ex_brki_hit_reg_4 ;
  input \Performance_Debug_Control.ex_brki_hit_reg_5 ;
  input \Performance_Debug_Control.ex_brki_hit_reg_6 ;
  input \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3 ;
  input \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0 ;
  input \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_1 ;
  input \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_2 ;

  wire Clk;
  wire [0:0]GPR_Op2;
  wire \Performance_Debug_Control.ex_brki_hit_i_2_n_0 ;
  wire [0:0]\Performance_Debug_Control.ex_brki_hit_reg ;
  wire \Performance_Debug_Control.ex_brki_hit_reg_0 ;
  wire \Performance_Debug_Control.ex_brki_hit_reg_1 ;
  wire \Performance_Debug_Control.ex_brki_hit_reg_2 ;
  wire \Performance_Debug_Control.ex_brki_hit_reg_3 ;
  wire \Performance_Debug_Control.ex_brki_hit_reg_4 ;
  wire \Performance_Debug_Control.ex_brki_hit_reg_5 ;
  wire \Performance_Debug_Control.ex_brki_hit_reg_6 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_1 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_2 ;
  wire \Serial_Dbg_Intf.control_reg_reg[8] ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_Imm180;
  wire of_instr_ii_15;
  wire of_op2_sel_imm;
  wire p_1_in26_in;
  wire sync_reset;

  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[27]_i_2 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(of_op2_sel_imm),
        .I2(GPR_Op2),
        .O(\Using_FPGA.Native_1 ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \Performance_Debug_Control.ex_brki_hit_i_1 
       (.I0(\Performance_Debug_Control.ex_brki_hit_reg ),
        .I1(\Performance_Debug_Control.ex_brki_hit_i_2_n_0 ),
        .I2(\Performance_Debug_Control.ex_brki_hit_reg_0 ),
        .I3(\Performance_Debug_Control.ex_brki_hit_reg_1 ),
        .I4(\Performance_Debug_Control.ex_brki_hit_reg_2 ),
        .I5(\Performance_Debug_Control.ex_brki_hit_reg_3 ),
        .O(\Serial_Dbg_Intf.control_reg_reg[8] ));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    \Performance_Debug_Control.ex_brki_hit_i_2 
       (.I0(of_Imm180),
        .I1(p_1_in26_in),
        .I2(\Performance_Debug_Control.ex_brki_hit_reg_4 ),
        .I3(\Performance_Debug_Control.ex_brki_hit_reg_5 ),
        .I4(\Performance_Debug_Control.ex_brki_hit_reg_6 ),
        .O(\Performance_Debug_Control.ex_brki_hit_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000020)) 
    \Performance_Debug_Control.ex_brki_hit_i_4 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3 ),
        .I2(\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0 ),
        .I3(\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_1 ),
        .I4(\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_2 ),
        .O(of_Imm180));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_15),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_159
   (\Using_FPGA.Native_0 ,
    ex_move_to_MSR_instr93_out,
    \Using_FPGA.Native_1 ,
    sync_reset,
    of_instr_ii_14,
    Clk,
    ex_move_to_MSR_instr_reg,
    ex_move_to_MSR_instr_reg_0,
    ex_move_to_MSR_instr_reg_1,
    ex_move_to_MSR_instr_reg_2,
    ex_move_to_MSR_instr_reg_3,
    of_op2_sel_imm,
    GPR_Op2);
  output \Using_FPGA.Native_0 ;
  output ex_move_to_MSR_instr93_out;
  output \Using_FPGA.Native_1 ;
  input sync_reset;
  input of_instr_ii_14;
  input Clk;
  input ex_move_to_MSR_instr_reg;
  input ex_move_to_MSR_instr_reg_0;
  input ex_move_to_MSR_instr_reg_1;
  input ex_move_to_MSR_instr_reg_2;
  input ex_move_to_MSR_instr_reg_3;
  input of_op2_sel_imm;
  input [0:0]GPR_Op2;

  wire Clk;
  wire [0:0]GPR_Op2;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_move_to_MSR_instr93_out;
  wire ex_move_to_MSR_instr_reg;
  wire ex_move_to_MSR_instr_reg_0;
  wire ex_move_to_MSR_instr_reg_1;
  wire ex_move_to_MSR_instr_reg_2;
  wire ex_move_to_MSR_instr_reg_3;
  wire of_instr_ii_14;
  wire of_op2_sel_imm;
  wire sync_reset;

  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[28]_i_2 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(of_op2_sel_imm),
        .I2(GPR_Op2),
        .O(\Using_FPGA.Native_1 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_14),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    ex_move_to_MSR_instr_i_1
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_move_to_MSR_instr_reg),
        .I2(ex_move_to_MSR_instr_reg_0),
        .I3(ex_move_to_MSR_instr_reg_1),
        .I4(ex_move_to_MSR_instr_reg_2),
        .I5(ex_move_to_MSR_instr_reg_3),
        .O(ex_move_to_MSR_instr93_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_161
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    sync_reset,
    of_instr_ii_13,
    Clk,
    of_op2_sel_imm,
    GPR_Op2);
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  input sync_reset;
  input of_instr_ii_13;
  input Clk;
  input of_op2_sel_imm;
  input [0:0]GPR_Op2;

  wire Clk;
  wire [0:0]GPR_Op2;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_instr_ii_13;
  wire of_op2_sel_imm;
  wire sync_reset;

  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[29]_i_2 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(of_op2_sel_imm),
        .I2(GPR_Op2),
        .O(\Using_FPGA.Native_1 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_13),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_163
   (\Using_FPGA.Native_0 ,
    p_1_in26_in,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    sync_reset,
    of_instr_ii_40,
    Clk,
    ex_mbar_decode_reg,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    ex_mbar_decode_reg_0,
    ex_mbar_decode_reg_1,
    \EX_ALU_Op_reg[0] );
  output \Using_FPGA.Native_0 ;
  output p_1_in26_in;
  output \Using_FPGA.Native_1 ;
  output \Using_FPGA.Native_2 ;
  output \Using_FPGA.Native_3 ;
  input sync_reset;
  input of_instr_ii_40;
  input Clk;
  input ex_mbar_decode_reg;
  input \Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input ex_mbar_decode_reg_0;
  input ex_mbar_decode_reg_1;
  input \EX_ALU_Op_reg[0] ;

  wire Clk;
  wire \EX_ALU_Op_reg[0] ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire ex_mbar_decode_reg;
  wire ex_mbar_decode_reg_0;
  wire ex_mbar_decode_reg_1;
  wire of_instr_ii_40;
  wire p_1_in26_in;
  wire sync_reset;

  LUT3 #(
    .INIT(8'h04)) 
    \EX_ALU_Op[0]_i_2 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\EX_ALU_Op_reg[0] ),
        .I2(ex_mbar_decode_reg),
        .O(\Using_FPGA.Native_2 ));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \EX_Sext_Op[1]_i_2 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_mbar_decode_reg_1),
        .I2(\Using_FPGA.Native_5 ),
        .I3(ex_mbar_decode_reg),
        .O(\Using_FPGA.Native_3 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_40),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hEF)) 
    \Using_FPGA.Native_i_2__115 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_4 ),
        .I2(\Using_FPGA.Native_5 ),
        .O(\Using_FPGA.Native_1 ));
  LUT6 #(
    .INIT(64'h0000000008000000)) 
    ex_mbar_decode_cmb_inferred_i_2
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_mbar_decode_reg),
        .I2(\Using_FPGA.Native_4 ),
        .I3(\Using_FPGA.Native_5 ),
        .I4(ex_mbar_decode_reg_0),
        .I5(ex_mbar_decode_reg_1),
        .O(p_1_in26_in));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_165
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    p_2_in,
    sync_reset,
    of_instr_ii_12,
    Clk,
    of_op2_sel_imm,
    GPR_Op2);
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  output p_2_in;
  input sync_reset;
  input of_instr_ii_12;
  input Clk;
  input of_op2_sel_imm;
  input [0:0]GPR_Op2;

  wire Clk;
  wire [0:0]GPR_Op2;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_instr_ii_12;
  wire of_op2_sel_imm;
  wire p_2_in;
  wire sync_reset;

  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[30]_i_2 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(of_op2_sel_imm),
        .I2(GPR_Op2),
        .O(\Using_FPGA.Native_1 ));
  LUT1 #(
    .INIT(2'h1)) 
    EX_SWAP_BYTE_Instr_i_1
       (.I0(\Using_FPGA.Native_0 ),
        .O(p_2_in));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_12),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_167
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    sync_reset,
    of_instr_ii_11,
    Clk,
    of_op2_sel_imm,
    GPR_Op2);
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  input sync_reset;
  input of_instr_ii_11;
  input Clk;
  input of_op2_sel_imm;
  input [0:0]GPR_Op2;

  wire Clk;
  wire [0:0]GPR_Op2;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_instr_ii_11;
  wire of_op2_sel_imm;
  wire sync_reset;

  LUT3 #(
    .INIT(8'hB8)) 
    \EX_Op2[31]_i_2 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(of_op2_sel_imm),
        .I2(GPR_Op2),
        .O(\Using_FPGA.Native_1 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_11),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_169
   (\Using_FPGA.Native_0 ,
    mem_valid_reg,
    of_read_ex_write_op3_conflict__1,
    wb_gpr_write_i_reg,
    sync_reset,
    of_instr_ii_10,
    Clk,
    mem_valid_instr,
    mem_gpr_write,
    p_216_in,
    \EX_Op3[0]_i_3 ,
    \EX_Op3[0]_i_3_0 ,
    \EX_Op3[0]_i_3_1 ,
    \EX_Op3[0]_i_3_2 ,
    wb_gpr_write_i,
    wb_exception,
    \EX_Op3[0]_i_5 ,
    wb_reset);
  output \Using_FPGA.Native_0 ;
  output mem_valid_reg;
  output of_read_ex_write_op3_conflict__1;
  output wb_gpr_write_i_reg;
  input sync_reset;
  input of_instr_ii_10;
  input Clk;
  input mem_valid_instr;
  input mem_gpr_write;
  input p_216_in;
  input [0:0]\EX_Op3[0]_i_3 ;
  input \EX_Op3[0]_i_3_0 ;
  input \EX_Op3[0]_i_3_1 ;
  input \EX_Op3[0]_i_3_2 ;
  input wb_gpr_write_i;
  input wb_exception;
  input \EX_Op3[0]_i_5 ;
  input wb_reset;

  wire Clk;
  wire [0:0]\EX_Op3[0]_i_3 ;
  wire \EX_Op3[0]_i_3_0 ;
  wire \EX_Op3[0]_i_3_1 ;
  wire \EX_Op3[0]_i_3_2 ;
  wire \EX_Op3[0]_i_5 ;
  wire \Using_FPGA.Native_0 ;
  wire mem_gpr_write;
  wire mem_valid_instr;
  wire mem_valid_reg;
  wire of_instr_ii_10;
  wire of_read_ex_write_op3_conflict__1;
  wire p_216_in;
  wire sync_reset;
  wire wb_exception;
  wire wb_gpr_write_i;
  wire wb_gpr_write_i_reg;
  wire wb_reset;

  LUT5 #(
    .INIT(32'hFF200000)) 
    \EX_Op3[0]_i_10 
       (.I0(wb_gpr_write_i),
        .I1(wb_exception),
        .I2(\EX_Op3[0]_i_5 ),
        .I3(wb_reset),
        .I4(\Using_FPGA.Native_0 ),
        .O(wb_gpr_write_i_reg));
  LUT6 #(
    .INIT(64'h8008000000000000)) 
    \EX_Op3[0]_i_6 
       (.I0(p_216_in),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\EX_Op3[0]_i_3 ),
        .I3(\EX_Op3[0]_i_3_0 ),
        .I4(\EX_Op3[0]_i_3_1 ),
        .I5(\EX_Op3[0]_i_3_2 ),
        .O(of_read_ex_write_op3_conflict__1));
  LUT3 #(
    .INIT(8'h80)) 
    \EX_Op3[0]_i_8 
       (.I0(mem_valid_instr),
        .I1(mem_gpr_write),
        .I2(\Using_FPGA.Native_0 ),
        .O(mem_valid_reg));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_10),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_171
   (\Using_FPGA.Native_0 ,
    ex_sel_alu_i_reg,
    sync_reset,
    of_instr_ii_9,
    Clk,
    \EX_Branch_CMP_Op1_reg[0] ,
    GPR_Op1,
    \EX_Branch_CMP_Op1_reg[0]_0 ,
    MEM_Fwd,
    \EX_Branch_CMP_Op1_reg[1] ,
    \EX_Branch_CMP_Op1_reg[1]_0 ,
    \EX_Branch_CMP_Op1_reg[2] ,
    \EX_Branch_CMP_Op1_reg[2]_0 ,
    \EX_Branch_CMP_Op1_reg[3] ,
    \EX_Branch_CMP_Op1_reg[3]_0 ,
    \EX_Branch_CMP_Op1_reg[4] ,
    \EX_Branch_CMP_Op1_reg[4]_0 ,
    \EX_Branch_CMP_Op1_reg[5] ,
    \EX_Branch_CMP_Op1_reg[5]_0 ,
    \EX_Branch_CMP_Op1_reg[6] ,
    \EX_Branch_CMP_Op1_reg[6]_0 ,
    \EX_Branch_CMP_Op1_reg[7] ,
    \EX_Branch_CMP_Op1_reg[7]_0 ,
    \EX_Branch_CMP_Op1_reg[8] ,
    \EX_Branch_CMP_Op1_reg[8]_0 ,
    \EX_Branch_CMP_Op1_reg[9] ,
    \EX_Branch_CMP_Op1_reg[9]_0 ,
    \EX_Branch_CMP_Op1_reg[10] ,
    \EX_Branch_CMP_Op1_reg[10]_0 ,
    \EX_Branch_CMP_Op1_reg[11] ,
    \EX_Branch_CMP_Op1_reg[11]_0 ,
    \EX_Branch_CMP_Op1_reg[12] ,
    \EX_Branch_CMP_Op1_reg[12]_0 ,
    \EX_Branch_CMP_Op1_reg[13] ,
    \EX_Branch_CMP_Op1_reg[13]_0 ,
    \EX_Branch_CMP_Op1_reg[14] ,
    \EX_Branch_CMP_Op1_reg[14]_0 ,
    \EX_Branch_CMP_Op1_reg[15] ,
    \EX_Branch_CMP_Op1_reg[15]_0 ,
    \EX_Branch_CMP_Op1_reg[16] ,
    \EX_Branch_CMP_Op1_reg[16]_0 ,
    \EX_Branch_CMP_Op1_reg[17] ,
    \EX_Branch_CMP_Op1_reg[18] ,
    \EX_Branch_CMP_Op1_reg[19] ,
    \EX_Branch_CMP_Op1_reg[20] ,
    \EX_Branch_CMP_Op1_reg[21] ,
    \EX_Branch_CMP_Op1_reg[22] ,
    \EX_Branch_CMP_Op1_reg[23] ,
    \EX_Branch_CMP_Op1_reg[24] ,
    \EX_Branch_CMP_Op1_reg[24]_0 ,
    \EX_Branch_CMP_Op1_reg[25] ,
    \EX_Branch_CMP_Op1_reg[25]_0 ,
    \EX_Branch_CMP_Op1_reg[26] ,
    \EX_Branch_CMP_Op1_reg[26]_0 ,
    \EX_Branch_CMP_Op1_reg[27] ,
    \EX_Branch_CMP_Op1_reg[27]_0 ,
    \EX_Branch_CMP_Op1_reg[28] ,
    \EX_Branch_CMP_Op1_reg[28]_0 ,
    \EX_Branch_CMP_Op1_reg[29] ,
    \EX_Branch_CMP_Op1_reg[29]_0 ,
    \EX_Branch_CMP_Op1_reg[30] ,
    \EX_Branch_CMP_Op1_reg[30]_0 ,
    \EX_Branch_CMP_Op1_reg[31] ,
    \EX_Branch_CMP_Op1_reg[31]_0 ,
    \Using_FPGA.Native_i_6__0_0 ,
    \Using_FPGA.Native_i_6__0_1 ,
    \Using_FPGA.Native_i_6__0_2 ,
    p_213_in,
    \Using_FPGA.Native_i_6__0_3 ,
    \Using_FPGA.Native_i_6__0_4 ,
    \Using_FPGA.Native_i_6__0_5 ,
    \Using_FPGA.Native_i_6__0_6 ,
    \Using_FPGA.Native_i_6__0_7 ,
    p_216_in);
  output \Using_FPGA.Native_0 ;
  output [31:0]ex_sel_alu_i_reg;
  input sync_reset;
  input of_instr_ii_9;
  input Clk;
  input \EX_Branch_CMP_Op1_reg[0] ;
  input [0:31]GPR_Op1;
  input \EX_Branch_CMP_Op1_reg[0]_0 ;
  input [0:31]MEM_Fwd;
  input \EX_Branch_CMP_Op1_reg[1] ;
  input \EX_Branch_CMP_Op1_reg[1]_0 ;
  input \EX_Branch_CMP_Op1_reg[2] ;
  input \EX_Branch_CMP_Op1_reg[2]_0 ;
  input \EX_Branch_CMP_Op1_reg[3] ;
  input \EX_Branch_CMP_Op1_reg[3]_0 ;
  input \EX_Branch_CMP_Op1_reg[4] ;
  input \EX_Branch_CMP_Op1_reg[4]_0 ;
  input \EX_Branch_CMP_Op1_reg[5] ;
  input \EX_Branch_CMP_Op1_reg[5]_0 ;
  input \EX_Branch_CMP_Op1_reg[6] ;
  input \EX_Branch_CMP_Op1_reg[6]_0 ;
  input \EX_Branch_CMP_Op1_reg[7] ;
  input \EX_Branch_CMP_Op1_reg[7]_0 ;
  input \EX_Branch_CMP_Op1_reg[8] ;
  input \EX_Branch_CMP_Op1_reg[8]_0 ;
  input \EX_Branch_CMP_Op1_reg[9] ;
  input \EX_Branch_CMP_Op1_reg[9]_0 ;
  input \EX_Branch_CMP_Op1_reg[10] ;
  input \EX_Branch_CMP_Op1_reg[10]_0 ;
  input \EX_Branch_CMP_Op1_reg[11] ;
  input \EX_Branch_CMP_Op1_reg[11]_0 ;
  input \EX_Branch_CMP_Op1_reg[12] ;
  input \EX_Branch_CMP_Op1_reg[12]_0 ;
  input \EX_Branch_CMP_Op1_reg[13] ;
  input \EX_Branch_CMP_Op1_reg[13]_0 ;
  input \EX_Branch_CMP_Op1_reg[14] ;
  input \EX_Branch_CMP_Op1_reg[14]_0 ;
  input \EX_Branch_CMP_Op1_reg[15] ;
  input \EX_Branch_CMP_Op1_reg[15]_0 ;
  input \EX_Branch_CMP_Op1_reg[16] ;
  input [7:0]\EX_Branch_CMP_Op1_reg[16]_0 ;
  input \EX_Branch_CMP_Op1_reg[17] ;
  input \EX_Branch_CMP_Op1_reg[18] ;
  input \EX_Branch_CMP_Op1_reg[19] ;
  input \EX_Branch_CMP_Op1_reg[20] ;
  input \EX_Branch_CMP_Op1_reg[21] ;
  input \EX_Branch_CMP_Op1_reg[22] ;
  input \EX_Branch_CMP_Op1_reg[23] ;
  input \EX_Branch_CMP_Op1_reg[24] ;
  input \EX_Branch_CMP_Op1_reg[24]_0 ;
  input \EX_Branch_CMP_Op1_reg[25] ;
  input \EX_Branch_CMP_Op1_reg[25]_0 ;
  input \EX_Branch_CMP_Op1_reg[26] ;
  input \EX_Branch_CMP_Op1_reg[26]_0 ;
  input \EX_Branch_CMP_Op1_reg[27] ;
  input \EX_Branch_CMP_Op1_reg[27]_0 ;
  input \EX_Branch_CMP_Op1_reg[28] ;
  input \EX_Branch_CMP_Op1_reg[28]_0 ;
  input \EX_Branch_CMP_Op1_reg[29] ;
  input \EX_Branch_CMP_Op1_reg[29]_0 ;
  input \EX_Branch_CMP_Op1_reg[30] ;
  input \EX_Branch_CMP_Op1_reg[30]_0 ;
  input \EX_Branch_CMP_Op1_reg[31] ;
  input \EX_Branch_CMP_Op1_reg[31]_0 ;
  input [1:0]\Using_FPGA.Native_i_6__0_0 ;
  input \Using_FPGA.Native_i_6__0_1 ;
  input \Using_FPGA.Native_i_6__0_2 ;
  input p_213_in;
  input [1:0]\Using_FPGA.Native_i_6__0_3 ;
  input \Using_FPGA.Native_i_6__0_4 ;
  input [0:0]\Using_FPGA.Native_i_6__0_5 ;
  input [1:0]\Using_FPGA.Native_i_6__0_6 ;
  input \Using_FPGA.Native_i_6__0_7 ;
  input p_216_in;

  wire Clk;
  wire \EX_Branch_CMP_Op1_reg[0] ;
  wire \EX_Branch_CMP_Op1_reg[0]_0 ;
  wire \EX_Branch_CMP_Op1_reg[10] ;
  wire \EX_Branch_CMP_Op1_reg[10]_0 ;
  wire \EX_Branch_CMP_Op1_reg[11] ;
  wire \EX_Branch_CMP_Op1_reg[11]_0 ;
  wire \EX_Branch_CMP_Op1_reg[12] ;
  wire \EX_Branch_CMP_Op1_reg[12]_0 ;
  wire \EX_Branch_CMP_Op1_reg[13] ;
  wire \EX_Branch_CMP_Op1_reg[13]_0 ;
  wire \EX_Branch_CMP_Op1_reg[14] ;
  wire \EX_Branch_CMP_Op1_reg[14]_0 ;
  wire \EX_Branch_CMP_Op1_reg[15] ;
  wire \EX_Branch_CMP_Op1_reg[15]_0 ;
  wire \EX_Branch_CMP_Op1_reg[16] ;
  wire [7:0]\EX_Branch_CMP_Op1_reg[16]_0 ;
  wire \EX_Branch_CMP_Op1_reg[17] ;
  wire \EX_Branch_CMP_Op1_reg[18] ;
  wire \EX_Branch_CMP_Op1_reg[19] ;
  wire \EX_Branch_CMP_Op1_reg[1] ;
  wire \EX_Branch_CMP_Op1_reg[1]_0 ;
  wire \EX_Branch_CMP_Op1_reg[20] ;
  wire \EX_Branch_CMP_Op1_reg[21] ;
  wire \EX_Branch_CMP_Op1_reg[22] ;
  wire \EX_Branch_CMP_Op1_reg[23] ;
  wire \EX_Branch_CMP_Op1_reg[24] ;
  wire \EX_Branch_CMP_Op1_reg[24]_0 ;
  wire \EX_Branch_CMP_Op1_reg[25] ;
  wire \EX_Branch_CMP_Op1_reg[25]_0 ;
  wire \EX_Branch_CMP_Op1_reg[26] ;
  wire \EX_Branch_CMP_Op1_reg[26]_0 ;
  wire \EX_Branch_CMP_Op1_reg[27] ;
  wire \EX_Branch_CMP_Op1_reg[27]_0 ;
  wire \EX_Branch_CMP_Op1_reg[28] ;
  wire \EX_Branch_CMP_Op1_reg[28]_0 ;
  wire \EX_Branch_CMP_Op1_reg[29] ;
  wire \EX_Branch_CMP_Op1_reg[29]_0 ;
  wire \EX_Branch_CMP_Op1_reg[2] ;
  wire \EX_Branch_CMP_Op1_reg[2]_0 ;
  wire \EX_Branch_CMP_Op1_reg[30] ;
  wire \EX_Branch_CMP_Op1_reg[30]_0 ;
  wire \EX_Branch_CMP_Op1_reg[31] ;
  wire \EX_Branch_CMP_Op1_reg[31]_0 ;
  wire \EX_Branch_CMP_Op1_reg[3] ;
  wire \EX_Branch_CMP_Op1_reg[3]_0 ;
  wire \EX_Branch_CMP_Op1_reg[4] ;
  wire \EX_Branch_CMP_Op1_reg[4]_0 ;
  wire \EX_Branch_CMP_Op1_reg[5] ;
  wire \EX_Branch_CMP_Op1_reg[5]_0 ;
  wire \EX_Branch_CMP_Op1_reg[6] ;
  wire \EX_Branch_CMP_Op1_reg[6]_0 ;
  wire \EX_Branch_CMP_Op1_reg[7] ;
  wire \EX_Branch_CMP_Op1_reg[7]_0 ;
  wire \EX_Branch_CMP_Op1_reg[8] ;
  wire \EX_Branch_CMP_Op1_reg[8]_0 ;
  wire \EX_Branch_CMP_Op1_reg[9] ;
  wire \EX_Branch_CMP_Op1_reg[9]_0 ;
  wire [0:31]GPR_Op1;
  wire [0:31]MEM_Fwd;
  wire \Using_FPGA.Native_0 ;
  wire [1:0]\Using_FPGA.Native_i_6__0_0 ;
  wire \Using_FPGA.Native_i_6__0_1 ;
  wire \Using_FPGA.Native_i_6__0_2 ;
  wire [1:0]\Using_FPGA.Native_i_6__0_3 ;
  wire \Using_FPGA.Native_i_6__0_4 ;
  wire [0:0]\Using_FPGA.Native_i_6__0_5 ;
  wire [1:0]\Using_FPGA.Native_i_6__0_6 ;
  wire \Using_FPGA.Native_i_6__0_7 ;
  wire [31:0]ex_sel_alu_i_reg;
  wire of_instr_ii_9;
  wire [0:1]of_op1_sel;
  wire of_read_ex_write_op1_conflict__0;
  wire of_read_mem_write_op1_conflict__0;
  wire of_read_wb_write_op1_conflict__0;
  wire p_213_in;
  wire p_216_in;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_9),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'h9000009000000000)) 
    \Using_FPGA.Native_i_10 
       (.I0(\Using_FPGA.Native_i_6__0_6 [1]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_i_6__0_7 ),
        .I3(\Using_FPGA.Native_i_6__0_2 ),
        .I4(\Using_FPGA.Native_i_6__0_6 [0]),
        .I5(p_216_in),
        .O(of_read_ex_write_op1_conflict__0));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__13 
       (.I0(\EX_Branch_CMP_Op1_reg[1] ),
        .I1(GPR_Op1[1]),
        .I2(\EX_Branch_CMP_Op1_reg[1]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[1]),
        .O(ex_sel_alu_i_reg[30]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__14 
       (.I0(\EX_Branch_CMP_Op1_reg[2] ),
        .I1(GPR_Op1[2]),
        .I2(\EX_Branch_CMP_Op1_reg[2]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[2]),
        .O(ex_sel_alu_i_reg[29]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__15 
       (.I0(\EX_Branch_CMP_Op1_reg[3] ),
        .I1(GPR_Op1[3]),
        .I2(\EX_Branch_CMP_Op1_reg[3]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[3]),
        .O(ex_sel_alu_i_reg[28]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__16 
       (.I0(\EX_Branch_CMP_Op1_reg[4] ),
        .I1(GPR_Op1[4]),
        .I2(\EX_Branch_CMP_Op1_reg[4]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[4]),
        .O(ex_sel_alu_i_reg[27]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__17 
       (.I0(\EX_Branch_CMP_Op1_reg[5] ),
        .I1(GPR_Op1[5]),
        .I2(\EX_Branch_CMP_Op1_reg[5]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[5]),
        .O(ex_sel_alu_i_reg[26]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__18 
       (.I0(\EX_Branch_CMP_Op1_reg[6] ),
        .I1(GPR_Op1[6]),
        .I2(\EX_Branch_CMP_Op1_reg[6]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[6]),
        .O(ex_sel_alu_i_reg[25]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__19 
       (.I0(\EX_Branch_CMP_Op1_reg[7] ),
        .I1(GPR_Op1[7]),
        .I2(\EX_Branch_CMP_Op1_reg[7]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[7]),
        .O(ex_sel_alu_i_reg[24]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__20 
       (.I0(\EX_Branch_CMP_Op1_reg[8] ),
        .I1(GPR_Op1[8]),
        .I2(\EX_Branch_CMP_Op1_reg[8]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[8]),
        .O(ex_sel_alu_i_reg[23]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__21 
       (.I0(\EX_Branch_CMP_Op1_reg[9] ),
        .I1(GPR_Op1[9]),
        .I2(\EX_Branch_CMP_Op1_reg[9]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[9]),
        .O(ex_sel_alu_i_reg[22]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__22 
       (.I0(\EX_Branch_CMP_Op1_reg[10] ),
        .I1(GPR_Op1[10]),
        .I2(\EX_Branch_CMP_Op1_reg[10]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[10]),
        .O(ex_sel_alu_i_reg[21]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__23 
       (.I0(\EX_Branch_CMP_Op1_reg[11] ),
        .I1(GPR_Op1[11]),
        .I2(\EX_Branch_CMP_Op1_reg[11]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[11]),
        .O(ex_sel_alu_i_reg[20]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__24 
       (.I0(\EX_Branch_CMP_Op1_reg[12] ),
        .I1(GPR_Op1[12]),
        .I2(\EX_Branch_CMP_Op1_reg[12]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[12]),
        .O(ex_sel_alu_i_reg[19]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__25 
       (.I0(\EX_Branch_CMP_Op1_reg[13] ),
        .I1(GPR_Op1[13]),
        .I2(\EX_Branch_CMP_Op1_reg[13]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[13]),
        .O(ex_sel_alu_i_reg[18]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__26 
       (.I0(\EX_Branch_CMP_Op1_reg[14] ),
        .I1(GPR_Op1[14]),
        .I2(\EX_Branch_CMP_Op1_reg[14]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[14]),
        .O(ex_sel_alu_i_reg[17]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__27 
       (.I0(\EX_Branch_CMP_Op1_reg[15] ),
        .I1(GPR_Op1[15]),
        .I2(\EX_Branch_CMP_Op1_reg[15]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[15]),
        .O(ex_sel_alu_i_reg[16]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__28 
       (.I0(\EX_Branch_CMP_Op1_reg[16] ),
        .I1(GPR_Op1[16]),
        .I2(\EX_Branch_CMP_Op1_reg[16]_0 [7]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[16]),
        .O(ex_sel_alu_i_reg[15]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__29 
       (.I0(\EX_Branch_CMP_Op1_reg[17] ),
        .I1(GPR_Op1[17]),
        .I2(\EX_Branch_CMP_Op1_reg[16]_0 [6]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[17]),
        .O(ex_sel_alu_i_reg[14]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__30 
       (.I0(\EX_Branch_CMP_Op1_reg[18] ),
        .I1(GPR_Op1[18]),
        .I2(\EX_Branch_CMP_Op1_reg[16]_0 [5]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[18]),
        .O(ex_sel_alu_i_reg[13]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__31 
       (.I0(\EX_Branch_CMP_Op1_reg[19] ),
        .I1(GPR_Op1[19]),
        .I2(\EX_Branch_CMP_Op1_reg[16]_0 [4]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[19]),
        .O(ex_sel_alu_i_reg[12]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__32 
       (.I0(\EX_Branch_CMP_Op1_reg[20] ),
        .I1(GPR_Op1[20]),
        .I2(\EX_Branch_CMP_Op1_reg[16]_0 [3]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[20]),
        .O(ex_sel_alu_i_reg[11]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__33 
       (.I0(\EX_Branch_CMP_Op1_reg[21] ),
        .I1(GPR_Op1[21]),
        .I2(\EX_Branch_CMP_Op1_reg[16]_0 [2]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[21]),
        .O(ex_sel_alu_i_reg[10]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__34 
       (.I0(\EX_Branch_CMP_Op1_reg[22] ),
        .I1(GPR_Op1[22]),
        .I2(\EX_Branch_CMP_Op1_reg[16]_0 [1]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[22]),
        .O(ex_sel_alu_i_reg[9]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__35 
       (.I0(\EX_Branch_CMP_Op1_reg[23] ),
        .I1(GPR_Op1[23]),
        .I2(\EX_Branch_CMP_Op1_reg[16]_0 [0]),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[23]),
        .O(ex_sel_alu_i_reg[8]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__36 
       (.I0(\EX_Branch_CMP_Op1_reg[24] ),
        .I1(GPR_Op1[24]),
        .I2(\EX_Branch_CMP_Op1_reg[24]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[24]),
        .O(ex_sel_alu_i_reg[7]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__37 
       (.I0(\EX_Branch_CMP_Op1_reg[25] ),
        .I1(GPR_Op1[25]),
        .I2(\EX_Branch_CMP_Op1_reg[25]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[25]),
        .O(ex_sel_alu_i_reg[6]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__38 
       (.I0(\EX_Branch_CMP_Op1_reg[26] ),
        .I1(GPR_Op1[26]),
        .I2(\EX_Branch_CMP_Op1_reg[26]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[26]),
        .O(ex_sel_alu_i_reg[5]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__39 
       (.I0(\EX_Branch_CMP_Op1_reg[27] ),
        .I1(GPR_Op1[27]),
        .I2(\EX_Branch_CMP_Op1_reg[27]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[27]),
        .O(ex_sel_alu_i_reg[4]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__40 
       (.I0(\EX_Branch_CMP_Op1_reg[28] ),
        .I1(GPR_Op1[28]),
        .I2(\EX_Branch_CMP_Op1_reg[28]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[28]),
        .O(ex_sel_alu_i_reg[3]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__41 
       (.I0(\EX_Branch_CMP_Op1_reg[29] ),
        .I1(GPR_Op1[29]),
        .I2(\EX_Branch_CMP_Op1_reg[29]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[29]),
        .O(ex_sel_alu_i_reg[2]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__42 
       (.I0(\EX_Branch_CMP_Op1_reg[30] ),
        .I1(GPR_Op1[30]),
        .I2(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[30]),
        .O(ex_sel_alu_i_reg[1]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_1__43 
       (.I0(\EX_Branch_CMP_Op1_reg[31] ),
        .I1(GPR_Op1[31]),
        .I2(\EX_Branch_CMP_Op1_reg[31]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[31]),
        .O(ex_sel_alu_i_reg[0]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \Using_FPGA.Native_i_2__24 
       (.I0(\EX_Branch_CMP_Op1_reg[0] ),
        .I1(GPR_Op1[0]),
        .I2(\EX_Branch_CMP_Op1_reg[0]_0 ),
        .I3(of_op1_sel[0]),
        .I4(of_op1_sel[1]),
        .I5(MEM_Fwd[0]),
        .O(ex_sel_alu_i_reg[31]));
  LUT3 #(
    .INIT(8'h0E)) 
    \Using_FPGA.Native_i_6__0 
       (.I0(of_read_mem_write_op1_conflict__0),
        .I1(of_read_wb_write_op1_conflict__0),
        .I2(of_read_ex_write_op1_conflict__0),
        .O(of_op1_sel[0]));
  LUT3 #(
    .INIT(8'hF4)) 
    \Using_FPGA.Native_i_7 
       (.I0(of_read_mem_write_op1_conflict__0),
        .I1(of_read_wb_write_op1_conflict__0),
        .I2(of_read_ex_write_op1_conflict__0),
        .O(of_op1_sel[1]));
  LUT6 #(
    .INIT(64'h9000009000000000)) 
    \Using_FPGA.Native_i_8 
       (.I0(\Using_FPGA.Native_i_6__0_0 [1]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_i_6__0_1 ),
        .I3(\Using_FPGA.Native_i_6__0_2 ),
        .I4(\Using_FPGA.Native_i_6__0_0 [0]),
        .I5(p_213_in),
        .O(of_read_mem_write_op1_conflict__0));
  LUT6 #(
    .INIT(64'h9000009000000000)) 
    \Using_FPGA.Native_i_9 
       (.I0(\Using_FPGA.Native_i_6__0_3 [1]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_i_6__0_4 ),
        .I3(\Using_FPGA.Native_i_6__0_2 ),
        .I4(\Using_FPGA.Native_i_6__0_3 [0]),
        .I5(\Using_FPGA.Native_i_6__0_5 ),
        .O(of_read_wb_write_op1_conflict__0));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_173
   (of_predecode_raw,
    sync_reset,
    of_instr_ii_8,
    Clk);
  output [0:0]of_predecode_raw;
  input sync_reset;
  input of_instr_ii_8;
  input Clk;

  wire Clk;
  wire of_instr_ii_8;
  wire [0:0]of_predecode_raw;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_8),
        .Q(of_predecode_raw),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_175
   (\Using_FPGA.Native_0 ,
    sync_reset,
    of_instr_ii_7,
    Clk);
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input of_instr_ii_7;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_7;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_7),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_177
   (\Using_FPGA.Native_0 ,
    sync_reset,
    of_instr_ii_6,
    Clk);
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input of_instr_ii_6;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_6;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_6),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_179
   (\Using_FPGA.Native_0 ,
    \mem_gpr_write_addr_reg[4] ,
    \wb_gpr_write_addr_reg[4] ,
    \ex_gpr_write_addr_reg[4] ,
    sync_reset,
    of_instr_ii_5,
    Clk,
    \Using_FPGA.Native_i_8 ,
    \Using_FPGA.Native_i_8_0 ,
    \Using_FPGA.Native_i_8_1 ,
    \Using_FPGA.Native_i_9 ,
    \Using_FPGA.Native_i_10 ,
    I4,
    I0);
  output \Using_FPGA.Native_0 ;
  output \mem_gpr_write_addr_reg[4] ;
  output \wb_gpr_write_addr_reg[4] ;
  output \ex_gpr_write_addr_reg[4] ;
  input sync_reset;
  input of_instr_ii_5;
  input Clk;
  input [2:0]\Using_FPGA.Native_i_8 ;
  input \Using_FPGA.Native_i_8_0 ;
  input \Using_FPGA.Native_i_8_1 ;
  input [2:0]\Using_FPGA.Native_i_9 ;
  input \Using_FPGA.Native_i_10 ;
  input I4;
  input I0;

  wire Clk;
  wire I0;
  wire I4;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_i_10 ;
  wire [2:0]\Using_FPGA.Native_i_8 ;
  wire \Using_FPGA.Native_i_8_0 ;
  wire \Using_FPGA.Native_i_8_1 ;
  wire [2:0]\Using_FPGA.Native_i_9 ;
  wire \ex_gpr_write_addr_reg[4] ;
  wire \mem_gpr_write_addr_reg[4] ;
  wire of_instr_ii_5;
  wire sync_reset;
  wire \wb_gpr_write_addr_reg[4] ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_5),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native_i_11 
       (.I0(\Using_FPGA.Native_i_8 [0]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_i_8_0 ),
        .I3(\Using_FPGA.Native_i_8 [2]),
        .I4(\Using_FPGA.Native_i_8_1 ),
        .I5(\Using_FPGA.Native_i_8 [1]),
        .O(\mem_gpr_write_addr_reg[4] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native_i_13 
       (.I0(\Using_FPGA.Native_i_9 [0]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_i_8_0 ),
        .I3(\Using_FPGA.Native_i_9 [2]),
        .I4(\Using_FPGA.Native_i_8_1 ),
        .I5(\Using_FPGA.Native_i_9 [1]),
        .O(\wb_gpr_write_addr_reg[4] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native_i_14 
       (.I0(\Using_FPGA.Native_i_10 ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\Using_FPGA.Native_i_8_0 ),
        .I3(I4),
        .I4(\Using_FPGA.Native_i_8_1 ),
        .I5(I0),
        .O(\ex_gpr_write_addr_reg[4] ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_181
   (\Using_FPGA.Native_0 ,
    ex_sel_alu_i_reg,
    sync_reset,
    of_instr_ii_4,
    Clk,
    \EX_Op2_reg[31] ,
    \EX_Op2_reg[31]_0 ,
    \EX_Op2_reg[31]_1 ,
    MEM_Fwd,
    \EX_Op2_reg[30] ,
    \EX_Op2_reg[30]_0 ,
    \EX_Op2_reg[30]_1 ,
    \EX_Op2_reg[29] ,
    \EX_Op2_reg[29]_0 ,
    \EX_Op2_reg[29]_1 ,
    \EX_Op2_reg[28] ,
    \EX_Op2_reg[28]_0 ,
    \EX_Op2_reg[28]_1 ,
    \EX_Op2_reg[27] ,
    \EX_Op2_reg[27]_0 ,
    \EX_Op2_reg[27]_1 ,
    \EX_Op2_reg[26] ,
    \EX_Op2_reg[26]_0 ,
    \EX_Op2_reg[26]_1 ,
    \EX_Op2_reg[25] ,
    \EX_Op2_reg[25]_0 ,
    \EX_Op2_reg[25]_1 ,
    \EX_Op2_reg[24] ,
    \EX_Op2_reg[24]_0 ,
    \EX_Op2_reg[24]_1 ,
    \EX_Op2_reg[23] ,
    \EX_Op2_reg[23]_0 ,
    \EX_Op2_reg[16] ,
    \EX_Op2_reg[22] ,
    \EX_Op2_reg[22]_0 ,
    \EX_Op2_reg[21] ,
    \EX_Op2_reg[21]_0 ,
    \EX_Op2_reg[20] ,
    \EX_Op2_reg[20]_0 ,
    \EX_Op2_reg[19] ,
    \EX_Op2_reg[19]_0 ,
    \EX_Op2_reg[18] ,
    \EX_Op2_reg[18]_0 ,
    \EX_Op2_reg[17] ,
    \EX_Op2_reg[17]_0 ,
    \EX_Op2_reg[16]_0 ,
    \EX_Op2_reg[16]_1 ,
    \EX_Op2_reg[15] ,
    \EX_Op2_reg[15]_0 ,
    \EX_Op2_reg[15]_1 ,
    \EX_Op2_reg[14] ,
    \EX_Op2_reg[14]_0 ,
    \EX_Op2_reg[14]_1 ,
    \EX_Op2_reg[13] ,
    \EX_Op2_reg[13]_0 ,
    \EX_Op2_reg[13]_1 ,
    \EX_Op2_reg[12] ,
    \EX_Op2_reg[12]_0 ,
    \EX_Op2_reg[12]_1 ,
    \EX_Op2_reg[11] ,
    \EX_Op2_reg[11]_0 ,
    \EX_Op2_reg[11]_1 ,
    \EX_Op2_reg[10] ,
    \EX_Op2_reg[10]_0 ,
    \EX_Op2_reg[10]_1 ,
    \EX_Op2_reg[9] ,
    \EX_Op2_reg[9]_0 ,
    \EX_Op2_reg[9]_1 ,
    \EX_Op2_reg[8] ,
    \EX_Op2_reg[8]_0 ,
    \EX_Op2_reg[8]_1 ,
    \EX_Op2_reg[7] ,
    \EX_Op2_reg[7]_0 ,
    \EX_Op2_reg[7]_1 ,
    \EX_Op2_reg[6] ,
    \EX_Op2_reg[6]_0 ,
    \EX_Op2_reg[6]_1 ,
    \EX_Op2_reg[5] ,
    \EX_Op2_reg[5]_0 ,
    \EX_Op2_reg[5]_1 ,
    \EX_Op2_reg[4] ,
    \EX_Op2_reg[4]_0 ,
    \EX_Op2_reg[4]_1 ,
    \EX_Op2_reg[3] ,
    \EX_Op2_reg[3]_0 ,
    \EX_Op2_reg[3]_1 ,
    \EX_Op2_reg[2] ,
    \EX_Op2_reg[2]_0 ,
    \EX_Op2_reg[2]_1 ,
    \EX_Op2_reg[1] ,
    \EX_Op2_reg[1]_0 ,
    \EX_Op2_reg[1]_1 ,
    \EX_Op2_reg[0] ,
    \EX_Op2_reg[0]_0 ,
    \EX_Op2_reg[0]_1 ,
    of_use_op2_s,
    \EX_Op2[0]_i_3_0 ,
    \EX_Op2[0]_i_3_1 ,
    \EX_Op2[0]_i_3_2 ,
    p_213_in,
    \EX_Op2[0]_i_3_3 ,
    \EX_Op2[0]_i_3_4 ,
    p_216_in,
    \EX_Op2[0]_i_3_5 ,
    \EX_Op2[0]_i_3_6 ,
    \EX_Op2[0]_i_3_7 );
  output \Using_FPGA.Native_0 ;
  output [31:0]ex_sel_alu_i_reg;
  input sync_reset;
  input of_instr_ii_4;
  input Clk;
  input \EX_Op2_reg[31] ;
  input \EX_Op2_reg[31]_0 ;
  input \EX_Op2_reg[31]_1 ;
  input [0:31]MEM_Fwd;
  input \EX_Op2_reg[30] ;
  input \EX_Op2_reg[30]_0 ;
  input \EX_Op2_reg[30]_1 ;
  input \EX_Op2_reg[29] ;
  input \EX_Op2_reg[29]_0 ;
  input \EX_Op2_reg[29]_1 ;
  input \EX_Op2_reg[28] ;
  input \EX_Op2_reg[28]_0 ;
  input \EX_Op2_reg[28]_1 ;
  input \EX_Op2_reg[27] ;
  input \EX_Op2_reg[27]_0 ;
  input \EX_Op2_reg[27]_1 ;
  input \EX_Op2_reg[26] ;
  input \EX_Op2_reg[26]_0 ;
  input \EX_Op2_reg[26]_1 ;
  input \EX_Op2_reg[25] ;
  input \EX_Op2_reg[25]_0 ;
  input \EX_Op2_reg[25]_1 ;
  input \EX_Op2_reg[24] ;
  input \EX_Op2_reg[24]_0 ;
  input \EX_Op2_reg[24]_1 ;
  input \EX_Op2_reg[23] ;
  input \EX_Op2_reg[23]_0 ;
  input [7:0]\EX_Op2_reg[16] ;
  input \EX_Op2_reg[22] ;
  input \EX_Op2_reg[22]_0 ;
  input \EX_Op2_reg[21] ;
  input \EX_Op2_reg[21]_0 ;
  input \EX_Op2_reg[20] ;
  input \EX_Op2_reg[20]_0 ;
  input \EX_Op2_reg[19] ;
  input \EX_Op2_reg[19]_0 ;
  input \EX_Op2_reg[18] ;
  input \EX_Op2_reg[18]_0 ;
  input \EX_Op2_reg[17] ;
  input \EX_Op2_reg[17]_0 ;
  input \EX_Op2_reg[16]_0 ;
  input \EX_Op2_reg[16]_1 ;
  input \EX_Op2_reg[15] ;
  input \EX_Op2_reg[15]_0 ;
  input \EX_Op2_reg[15]_1 ;
  input \EX_Op2_reg[14] ;
  input \EX_Op2_reg[14]_0 ;
  input \EX_Op2_reg[14]_1 ;
  input \EX_Op2_reg[13] ;
  input \EX_Op2_reg[13]_0 ;
  input \EX_Op2_reg[13]_1 ;
  input \EX_Op2_reg[12] ;
  input \EX_Op2_reg[12]_0 ;
  input \EX_Op2_reg[12]_1 ;
  input \EX_Op2_reg[11] ;
  input \EX_Op2_reg[11]_0 ;
  input \EX_Op2_reg[11]_1 ;
  input \EX_Op2_reg[10] ;
  input \EX_Op2_reg[10]_0 ;
  input \EX_Op2_reg[10]_1 ;
  input \EX_Op2_reg[9] ;
  input \EX_Op2_reg[9]_0 ;
  input \EX_Op2_reg[9]_1 ;
  input \EX_Op2_reg[8] ;
  input \EX_Op2_reg[8]_0 ;
  input \EX_Op2_reg[8]_1 ;
  input \EX_Op2_reg[7] ;
  input \EX_Op2_reg[7]_0 ;
  input \EX_Op2_reg[7]_1 ;
  input \EX_Op2_reg[6] ;
  input \EX_Op2_reg[6]_0 ;
  input \EX_Op2_reg[6]_1 ;
  input \EX_Op2_reg[5] ;
  input \EX_Op2_reg[5]_0 ;
  input \EX_Op2_reg[5]_1 ;
  input \EX_Op2_reg[4] ;
  input \EX_Op2_reg[4]_0 ;
  input \EX_Op2_reg[4]_1 ;
  input \EX_Op2_reg[3] ;
  input \EX_Op2_reg[3]_0 ;
  input \EX_Op2_reg[3]_1 ;
  input \EX_Op2_reg[2] ;
  input \EX_Op2_reg[2]_0 ;
  input \EX_Op2_reg[2]_1 ;
  input \EX_Op2_reg[1] ;
  input \EX_Op2_reg[1]_0 ;
  input \EX_Op2_reg[1]_1 ;
  input \EX_Op2_reg[0] ;
  input \EX_Op2_reg[0]_0 ;
  input \EX_Op2_reg[0]_1 ;
  input of_use_op2_s;
  input [1:0]\EX_Op2[0]_i_3_0 ;
  input \EX_Op2[0]_i_3_1 ;
  input \EX_Op2[0]_i_3_2 ;
  input p_213_in;
  input [1:0]\EX_Op2[0]_i_3_3 ;
  input \EX_Op2[0]_i_3_4 ;
  input p_216_in;
  input [1:0]\EX_Op2[0]_i_3_5 ;
  input \EX_Op2[0]_i_3_6 ;
  input [0:0]\EX_Op2[0]_i_3_7 ;

  wire Clk;
  wire [1:0]\EX_Op2[0]_i_3_0 ;
  wire \EX_Op2[0]_i_3_1 ;
  wire \EX_Op2[0]_i_3_2 ;
  wire [1:0]\EX_Op2[0]_i_3_3 ;
  wire \EX_Op2[0]_i_3_4 ;
  wire [1:0]\EX_Op2[0]_i_3_5 ;
  wire \EX_Op2[0]_i_3_6 ;
  wire [0:0]\EX_Op2[0]_i_3_7 ;
  wire \EX_Op2_reg[0] ;
  wire \EX_Op2_reg[0]_0 ;
  wire \EX_Op2_reg[0]_1 ;
  wire \EX_Op2_reg[10] ;
  wire \EX_Op2_reg[10]_0 ;
  wire \EX_Op2_reg[10]_1 ;
  wire \EX_Op2_reg[11] ;
  wire \EX_Op2_reg[11]_0 ;
  wire \EX_Op2_reg[11]_1 ;
  wire \EX_Op2_reg[12] ;
  wire \EX_Op2_reg[12]_0 ;
  wire \EX_Op2_reg[12]_1 ;
  wire \EX_Op2_reg[13] ;
  wire \EX_Op2_reg[13]_0 ;
  wire \EX_Op2_reg[13]_1 ;
  wire \EX_Op2_reg[14] ;
  wire \EX_Op2_reg[14]_0 ;
  wire \EX_Op2_reg[14]_1 ;
  wire \EX_Op2_reg[15] ;
  wire \EX_Op2_reg[15]_0 ;
  wire \EX_Op2_reg[15]_1 ;
  wire [7:0]\EX_Op2_reg[16] ;
  wire \EX_Op2_reg[16]_0 ;
  wire \EX_Op2_reg[16]_1 ;
  wire \EX_Op2_reg[17] ;
  wire \EX_Op2_reg[17]_0 ;
  wire \EX_Op2_reg[18] ;
  wire \EX_Op2_reg[18]_0 ;
  wire \EX_Op2_reg[19] ;
  wire \EX_Op2_reg[19]_0 ;
  wire \EX_Op2_reg[1] ;
  wire \EX_Op2_reg[1]_0 ;
  wire \EX_Op2_reg[1]_1 ;
  wire \EX_Op2_reg[20] ;
  wire \EX_Op2_reg[20]_0 ;
  wire \EX_Op2_reg[21] ;
  wire \EX_Op2_reg[21]_0 ;
  wire \EX_Op2_reg[22] ;
  wire \EX_Op2_reg[22]_0 ;
  wire \EX_Op2_reg[23] ;
  wire \EX_Op2_reg[23]_0 ;
  wire \EX_Op2_reg[24] ;
  wire \EX_Op2_reg[24]_0 ;
  wire \EX_Op2_reg[24]_1 ;
  wire \EX_Op2_reg[25] ;
  wire \EX_Op2_reg[25]_0 ;
  wire \EX_Op2_reg[25]_1 ;
  wire \EX_Op2_reg[26] ;
  wire \EX_Op2_reg[26]_0 ;
  wire \EX_Op2_reg[26]_1 ;
  wire \EX_Op2_reg[27] ;
  wire \EX_Op2_reg[27]_0 ;
  wire \EX_Op2_reg[27]_1 ;
  wire \EX_Op2_reg[28] ;
  wire \EX_Op2_reg[28]_0 ;
  wire \EX_Op2_reg[28]_1 ;
  wire \EX_Op2_reg[29] ;
  wire \EX_Op2_reg[29]_0 ;
  wire \EX_Op2_reg[29]_1 ;
  wire \EX_Op2_reg[2] ;
  wire \EX_Op2_reg[2]_0 ;
  wire \EX_Op2_reg[2]_1 ;
  wire \EX_Op2_reg[30] ;
  wire \EX_Op2_reg[30]_0 ;
  wire \EX_Op2_reg[30]_1 ;
  wire \EX_Op2_reg[31] ;
  wire \EX_Op2_reg[31]_0 ;
  wire \EX_Op2_reg[31]_1 ;
  wire \EX_Op2_reg[3] ;
  wire \EX_Op2_reg[3]_0 ;
  wire \EX_Op2_reg[3]_1 ;
  wire \EX_Op2_reg[4] ;
  wire \EX_Op2_reg[4]_0 ;
  wire \EX_Op2_reg[4]_1 ;
  wire \EX_Op2_reg[5] ;
  wire \EX_Op2_reg[5]_0 ;
  wire \EX_Op2_reg[5]_1 ;
  wire \EX_Op2_reg[6] ;
  wire \EX_Op2_reg[6]_0 ;
  wire \EX_Op2_reg[6]_1 ;
  wire \EX_Op2_reg[7] ;
  wire \EX_Op2_reg[7]_0 ;
  wire \EX_Op2_reg[7]_1 ;
  wire \EX_Op2_reg[8] ;
  wire \EX_Op2_reg[8]_0 ;
  wire \EX_Op2_reg[8]_1 ;
  wire \EX_Op2_reg[9] ;
  wire \EX_Op2_reg[9]_0 ;
  wire \EX_Op2_reg[9]_1 ;
  wire [0:31]MEM_Fwd;
  wire \Using_FPGA.Native_0 ;
  wire [31:0]ex_sel_alu_i_reg;
  wire of_instr_ii_4;
  wire [0:1]of_op2_sel;
  wire of_read_ex_write_op2_conflict__0;
  wire of_read_mem_write_op2_conflict__0;
  wire of_read_wb_write_op2_conflict__0;
  wire of_use_op2_s;
  wire p_213_in;
  wire p_216_in;
  wire sync_reset;

  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[0]_i_1 
       (.I0(\EX_Op2_reg[0] ),
        .I1(\EX_Op2_reg[0]_0 ),
        .I2(\EX_Op2_reg[0]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[0]),
        .O(ex_sel_alu_i_reg[31]));
  LUT4 #(
    .INIT(16'h00A8)) 
    \EX_Op2[0]_i_3 
       (.I0(of_use_op2_s),
        .I1(of_read_wb_write_op2_conflict__0),
        .I2(of_read_mem_write_op2_conflict__0),
        .I3(of_read_ex_write_op2_conflict__0),
        .O(of_op2_sel[0]));
  LUT4 #(
    .INIT(16'hAE00)) 
    \EX_Op2[0]_i_4 
       (.I0(of_read_ex_write_op2_conflict__0),
        .I1(of_read_wb_write_op2_conflict__0),
        .I2(of_read_mem_write_op2_conflict__0),
        .I3(of_use_op2_s),
        .O(of_op2_sel[1]));
  LUT6 #(
    .INIT(64'h9000009000000000)) 
    \EX_Op2[0]_i_6 
       (.I0(\EX_Op2[0]_i_3_5 [1]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\EX_Op2[0]_i_3_6 ),
        .I3(\EX_Op2[0]_i_3_2 ),
        .I4(\EX_Op2[0]_i_3_5 [0]),
        .I5(\EX_Op2[0]_i_3_7 ),
        .O(of_read_wb_write_op2_conflict__0));
  LUT6 #(
    .INIT(64'h9000009000000000)) 
    \EX_Op2[0]_i_7 
       (.I0(\EX_Op2[0]_i_3_0 [1]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\EX_Op2[0]_i_3_1 ),
        .I3(\EX_Op2[0]_i_3_2 ),
        .I4(\EX_Op2[0]_i_3_0 [0]),
        .I5(p_213_in),
        .O(of_read_mem_write_op2_conflict__0));
  LUT6 #(
    .INIT(64'h9000009000000000)) 
    \EX_Op2[0]_i_8 
       (.I0(\EX_Op2[0]_i_3_3 [1]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\EX_Op2[0]_i_3_4 ),
        .I3(\EX_Op2[0]_i_3_2 ),
        .I4(\EX_Op2[0]_i_3_3 [0]),
        .I5(p_216_in),
        .O(of_read_ex_write_op2_conflict__0));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[10]_i_1 
       (.I0(\EX_Op2_reg[10] ),
        .I1(\EX_Op2_reg[10]_0 ),
        .I2(\EX_Op2_reg[10]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[10]),
        .O(ex_sel_alu_i_reg[21]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[11]_i_1 
       (.I0(\EX_Op2_reg[11] ),
        .I1(\EX_Op2_reg[11]_0 ),
        .I2(\EX_Op2_reg[11]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[11]),
        .O(ex_sel_alu_i_reg[20]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[12]_i_1 
       (.I0(\EX_Op2_reg[12] ),
        .I1(\EX_Op2_reg[12]_0 ),
        .I2(\EX_Op2_reg[12]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[12]),
        .O(ex_sel_alu_i_reg[19]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[13]_i_1 
       (.I0(\EX_Op2_reg[13] ),
        .I1(\EX_Op2_reg[13]_0 ),
        .I2(\EX_Op2_reg[13]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[13]),
        .O(ex_sel_alu_i_reg[18]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[14]_i_1 
       (.I0(\EX_Op2_reg[14] ),
        .I1(\EX_Op2_reg[14]_0 ),
        .I2(\EX_Op2_reg[14]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[14]),
        .O(ex_sel_alu_i_reg[17]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[15]_i_1 
       (.I0(\EX_Op2_reg[15] ),
        .I1(\EX_Op2_reg[15]_0 ),
        .I2(\EX_Op2_reg[15]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[15]),
        .O(ex_sel_alu_i_reg[16]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[16]_i_1 
       (.I0(\EX_Op2_reg[16]_0 ),
        .I1(\EX_Op2_reg[16]_1 ),
        .I2(\EX_Op2_reg[16] [7]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[16]),
        .O(ex_sel_alu_i_reg[15]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[17]_i_1 
       (.I0(\EX_Op2_reg[17] ),
        .I1(\EX_Op2_reg[17]_0 ),
        .I2(\EX_Op2_reg[16] [6]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[17]),
        .O(ex_sel_alu_i_reg[14]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[18]_i_1 
       (.I0(\EX_Op2_reg[18] ),
        .I1(\EX_Op2_reg[18]_0 ),
        .I2(\EX_Op2_reg[16] [5]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[18]),
        .O(ex_sel_alu_i_reg[13]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[19]_i_1 
       (.I0(\EX_Op2_reg[19] ),
        .I1(\EX_Op2_reg[19]_0 ),
        .I2(\EX_Op2_reg[16] [4]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[19]),
        .O(ex_sel_alu_i_reg[12]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[1]_i_1 
       (.I0(\EX_Op2_reg[1] ),
        .I1(\EX_Op2_reg[1]_0 ),
        .I2(\EX_Op2_reg[1]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[1]),
        .O(ex_sel_alu_i_reg[30]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[20]_i_1 
       (.I0(\EX_Op2_reg[20] ),
        .I1(\EX_Op2_reg[20]_0 ),
        .I2(\EX_Op2_reg[16] [3]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[20]),
        .O(ex_sel_alu_i_reg[11]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[21]_i_1 
       (.I0(\EX_Op2_reg[21] ),
        .I1(\EX_Op2_reg[21]_0 ),
        .I2(\EX_Op2_reg[16] [2]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[21]),
        .O(ex_sel_alu_i_reg[10]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[22]_i_1 
       (.I0(\EX_Op2_reg[22] ),
        .I1(\EX_Op2_reg[22]_0 ),
        .I2(\EX_Op2_reg[16] [1]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[22]),
        .O(ex_sel_alu_i_reg[9]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[23]_i_1 
       (.I0(\EX_Op2_reg[23] ),
        .I1(\EX_Op2_reg[23]_0 ),
        .I2(\EX_Op2_reg[16] [0]),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[23]),
        .O(ex_sel_alu_i_reg[8]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[24]_i_1 
       (.I0(\EX_Op2_reg[24] ),
        .I1(\EX_Op2_reg[24]_0 ),
        .I2(\EX_Op2_reg[24]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[24]),
        .O(ex_sel_alu_i_reg[7]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[25]_i_1 
       (.I0(\EX_Op2_reg[25] ),
        .I1(\EX_Op2_reg[25]_0 ),
        .I2(\EX_Op2_reg[25]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[25]),
        .O(ex_sel_alu_i_reg[6]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[26]_i_1 
       (.I0(\EX_Op2_reg[26] ),
        .I1(\EX_Op2_reg[26]_0 ),
        .I2(\EX_Op2_reg[26]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[26]),
        .O(ex_sel_alu_i_reg[5]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[27]_i_1 
       (.I0(\EX_Op2_reg[27] ),
        .I1(\EX_Op2_reg[27]_0 ),
        .I2(\EX_Op2_reg[27]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[27]),
        .O(ex_sel_alu_i_reg[4]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[28]_i_1 
       (.I0(\EX_Op2_reg[28] ),
        .I1(\EX_Op2_reg[28]_0 ),
        .I2(\EX_Op2_reg[28]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[28]),
        .O(ex_sel_alu_i_reg[3]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[29]_i_1 
       (.I0(\EX_Op2_reg[29] ),
        .I1(\EX_Op2_reg[29]_0 ),
        .I2(\EX_Op2_reg[29]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[29]),
        .O(ex_sel_alu_i_reg[2]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[2]_i_1 
       (.I0(\EX_Op2_reg[2] ),
        .I1(\EX_Op2_reg[2]_0 ),
        .I2(\EX_Op2_reg[2]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[2]),
        .O(ex_sel_alu_i_reg[29]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[30]_i_1 
       (.I0(\EX_Op2_reg[30] ),
        .I1(\EX_Op2_reg[30]_0 ),
        .I2(\EX_Op2_reg[30]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[30]),
        .O(ex_sel_alu_i_reg[1]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[31]_i_1 
       (.I0(\EX_Op2_reg[31] ),
        .I1(\EX_Op2_reg[31]_0 ),
        .I2(\EX_Op2_reg[31]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[31]),
        .O(ex_sel_alu_i_reg[0]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[3]_i_1 
       (.I0(\EX_Op2_reg[3] ),
        .I1(\EX_Op2_reg[3]_0 ),
        .I2(\EX_Op2_reg[3]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[3]),
        .O(ex_sel_alu_i_reg[28]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[4]_i_1 
       (.I0(\EX_Op2_reg[4] ),
        .I1(\EX_Op2_reg[4]_0 ),
        .I2(\EX_Op2_reg[4]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[4]),
        .O(ex_sel_alu_i_reg[27]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[5]_i_1 
       (.I0(\EX_Op2_reg[5] ),
        .I1(\EX_Op2_reg[5]_0 ),
        .I2(\EX_Op2_reg[5]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[5]),
        .O(ex_sel_alu_i_reg[26]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[6]_i_1 
       (.I0(\EX_Op2_reg[6] ),
        .I1(\EX_Op2_reg[6]_0 ),
        .I2(\EX_Op2_reg[6]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[6]),
        .O(ex_sel_alu_i_reg[25]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[7]_i_1 
       (.I0(\EX_Op2_reg[7] ),
        .I1(\EX_Op2_reg[7]_0 ),
        .I2(\EX_Op2_reg[7]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[7]),
        .O(ex_sel_alu_i_reg[24]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[8]_i_1 
       (.I0(\EX_Op2_reg[8] ),
        .I1(\EX_Op2_reg[8]_0 ),
        .I2(\EX_Op2_reg[8]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[8]),
        .O(ex_sel_alu_i_reg[23]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op2[9]_i_1 
       (.I0(\EX_Op2_reg[9] ),
        .I1(\EX_Op2_reg[9]_0 ),
        .I2(\EX_Op2_reg[9]_1 ),
        .I3(of_op2_sel[0]),
        .I4(of_op2_sel[1]),
        .I5(MEM_Fwd[9]),
        .O(ex_sel_alu_i_reg[22]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_4),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_183
   (of_predecode_raw,
    sync_reset,
    of_instr_ii_3,
    Clk);
  output [0:0]of_predecode_raw;
  input sync_reset;
  input of_instr_ii_3;
  input Clk;

  wire Clk;
  wire of_instr_ii_3;
  wire [0:0]of_predecode_raw;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_3),
        .Q(of_predecode_raw),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_185
   (\Using_FPGA.Native_0 ,
    ex_branch_with_delayslot_i_reg,
    \Using_FPGA.Native_1 ,
    ex_op1_cmp_eq_n5_out,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    use_Reg_Neg_DI1_out,
    force_Val10_out,
    use_Reg_Neg_S3_out,
    force12_out,
    ex_sel_alu_i0,
    \Using_FPGA.Native_4 ,
    ex_enable_sext_shift_i0,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    sync_reset,
    of_instr_ii_39,
    Clk,
    ex_branch_with_delayslot_i,
    ex_branch_with_delayslot_i_reg_0,
    ex_branch_with_delayslot_i_reg_1,
    ex_op1_cmp_eq_n_reg,
    ex_op1_cmp_eq_n_reg_0,
    ex_op1_cmp_eq_n_reg_1,
    force2_reg,
    force2_reg_0,
    force2_reg_1,
    force2_reg_2,
    \EX_Sext_Op_reg[0] ,
    ex_sel_alu_i_reg,
    \EX_Sext_Op_reg[0]_0 ,
    \EX_Sext_Op_reg[0]_1 ,
    ex_branch_with_delayslot_reg,
    ex_branch_with_delayslot_reg_0,
    EX_ALU_Op1142_out__0);
  output \Using_FPGA.Native_0 ;
  output ex_branch_with_delayslot_i_reg;
  output \Using_FPGA.Native_1 ;
  output ex_op1_cmp_eq_n5_out;
  output \Using_FPGA.Native_2 ;
  output \Using_FPGA.Native_3 ;
  output use_Reg_Neg_DI1_out;
  output force_Val10_out;
  output use_Reg_Neg_S3_out;
  output force12_out;
  output ex_sel_alu_i0;
  output [0:0]\Using_FPGA.Native_4 ;
  output ex_enable_sext_shift_i0;
  output \Using_FPGA.Native_5 ;
  output \Using_FPGA.Native_6 ;
  input sync_reset;
  input of_instr_ii_39;
  input Clk;
  input ex_branch_with_delayslot_i;
  input ex_branch_with_delayslot_i_reg_0;
  input ex_branch_with_delayslot_i_reg_1;
  input ex_op1_cmp_eq_n_reg;
  input ex_op1_cmp_eq_n_reg_0;
  input ex_op1_cmp_eq_n_reg_1;
  input force2_reg;
  input force2_reg_0;
  input force2_reg_1;
  input force2_reg_2;
  input \EX_Sext_Op_reg[0] ;
  input ex_sel_alu_i_reg;
  input \EX_Sext_Op_reg[0]_0 ;
  input \EX_Sext_Op_reg[0]_1 ;
  input ex_branch_with_delayslot_reg;
  input ex_branch_with_delayslot_reg_0;
  input EX_ALU_Op1142_out__0;

  wire Clk;
  wire EX_ALU_Op1142_out__0;
  wire \EX_Sext_Op_reg[0] ;
  wire \EX_Sext_Op_reg[0]_0 ;
  wire \EX_Sext_Op_reg[0]_1 ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire [0:0]\Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire ex_branch_with_delayslot_i;
  wire ex_branch_with_delayslot_i_2_n_0;
  wire ex_branch_with_delayslot_i_reg;
  wire ex_branch_with_delayslot_i_reg_0;
  wire ex_branch_with_delayslot_i_reg_1;
  wire ex_branch_with_delayslot_reg;
  wire ex_branch_with_delayslot_reg_0;
  wire ex_enable_sext_shift_i0;
  wire ex_op1_cmp_eq_n5_out;
  wire ex_op1_cmp_eq_n_reg;
  wire ex_op1_cmp_eq_n_reg_0;
  wire ex_op1_cmp_eq_n_reg_1;
  wire ex_sel_alu_i0;
  wire ex_sel_alu_i_reg;
  wire force12_out;
  wire force2_reg;
  wire force2_reg_0;
  wire force2_reg_1;
  wire force2_reg_2;
  wire force_Val10_out;
  wire of_instr_ii_39;
  wire sync_reset;
  wire use_Reg_Neg_DI1_out;
  wire use_Reg_Neg_S3_out;

  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF7FFF)) 
    \EX_Sext_Op[0]_i_1 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\EX_Sext_Op_reg[0]_0 ),
        .I2(force2_reg),
        .I3(\EX_Sext_Op_reg[0]_1 ),
        .I4(force2_reg_1),
        .I5(\EX_Sext_Op_reg[0] ),
        .O(\Using_FPGA.Native_4 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_39),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'h0008)) 
    \Using_FPGA.Native_i_2__114 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(force2_reg),
        .I2(force2_reg_0),
        .I3(\EX_Sext_Op_reg[0] ),
        .O(\Using_FPGA.Native_5 ));
  LUT3 #(
    .INIT(8'h08)) 
    ex_branch_with_delayslot_i_1
       (.I0(ex_branch_with_delayslot_i_2_n_0),
        .I1(force2_reg),
        .I2(force2_reg_1),
        .O(\Using_FPGA.Native_1 ));
  LUT6 #(
    .INIT(64'hAA80A0800A800080)) 
    ex_branch_with_delayslot_i_2
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_branch_with_delayslot_reg),
        .I2(force2_reg_2),
        .I3(force2_reg_0),
        .I4(\EX_Sext_Op_reg[0] ),
        .I5(ex_branch_with_delayslot_reg_0),
        .O(ex_branch_with_delayslot_i_2_n_0));
  LUT5 #(
    .INIT(32'h000000E2)) 
    ex_branch_with_delayslot_i_i_1
       (.I0(ex_branch_with_delayslot_i),
        .I1(ex_branch_with_delayslot_i_reg_0),
        .I2(\Using_FPGA.Native_1 ),
        .I3(ex_branch_with_delayslot_i_reg_1),
        .I4(sync_reset),
        .O(ex_branch_with_delayslot_i_reg));
  LUT3 #(
    .INIT(8'h20)) 
    ex_enable_sext_shift_i_i_1
       (.I0(\Using_FPGA.Native_0 ),
        .I1(force2_reg_1),
        .I2(force2_reg),
        .O(ex_enable_sext_shift_i0));
  LUT4 #(
    .INIT(16'h0001)) 
    ex_load_alu_carry_i_1
       (.I0(\Using_FPGA.Native_0 ),
        .I1(force2_reg),
        .I2(force2_reg_1),
        .I3(EX_ALU_Op1142_out__0),
        .O(\Using_FPGA.Native_6 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT4 #(
    .INIT(16'h0220)) 
    ex_op1_cmp_eq_n_i_1
       (.I0(\Using_FPGA.Native_2 ),
        .I1(ex_op1_cmp_eq_n_reg),
        .I2(ex_op1_cmp_eq_n_reg_0),
        .I3(ex_op1_cmp_eq_n_reg_1),
        .O(ex_op1_cmp_eq_n5_out));
  LUT4 #(
    .INIT(16'h51FF)) 
    ex_sel_alu_i_i_1
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_sel_alu_i_reg),
        .I2(\EX_Sext_Op_reg[0] ),
        .I3(force2_reg),
        .O(ex_sel_alu_i0));
  LUT3 #(
    .INIT(8'h02)) 
    force1_i_1
       (.I0(\Using_FPGA.Native_2 ),
        .I1(ex_op1_cmp_eq_n_reg),
        .I2(ex_op1_cmp_eq_n_reg_1),
        .O(force12_out));
  LUT5 #(
    .INIT(32'h08000000)) 
    force2_i_1
       (.I0(\Using_FPGA.Native_0 ),
        .I1(force2_reg_2),
        .I2(force2_reg_1),
        .I3(force2_reg_0),
        .I4(force2_reg),
        .O(\Using_FPGA.Native_2 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'h20)) 
    force_Val1_i_1
       (.I0(\Using_FPGA.Native_2 ),
        .I1(ex_op1_cmp_eq_n_reg_1),
        .I2(ex_op1_cmp_eq_n_reg),
        .O(force_Val10_out));
  LUT6 #(
    .INIT(64'hFFF7FF7FFFF7FFFF)) 
    force_Val2_N_i_1
       (.I0(\Using_FPGA.Native_0 ),
        .I1(force2_reg),
        .I2(force2_reg_0),
        .I3(force2_reg_1),
        .I4(force2_reg_2),
        .I5(\EX_Sext_Op_reg[0] ),
        .O(\Using_FPGA.Native_3 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT4 #(
    .INIT(16'h0820)) 
    use_Reg_Neg_DI_i_1
       (.I0(\Using_FPGA.Native_2 ),
        .I1(ex_op1_cmp_eq_n_reg_1),
        .I2(ex_op1_cmp_eq_n_reg),
        .I3(ex_op1_cmp_eq_n_reg_0),
        .O(use_Reg_Neg_DI1_out));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT4 #(
    .INIT(16'h0820)) 
    use_Reg_Neg_S_i_1
       (.I0(\Using_FPGA.Native_2 ),
        .I1(ex_op1_cmp_eq_n_reg),
        .I2(ex_op1_cmp_eq_n_reg_1),
        .I3(ex_op1_cmp_eq_n_reg_0),
        .O(use_Reg_Neg_S3_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_187
   (\Using_FPGA.Native_0 ,
    sync_reset,
    of_instr_ii_2,
    Clk);
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input of_instr_ii_2;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_2;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_2),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_189
   (\Using_FPGA.Native_0 ,
    sync_reset,
    of_instr_ii_1,
    Clk);
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input of_instr_ii_1;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_1;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_1),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_191
   (\Using_FPGA.Native_0 ,
    \mem_gpr_write_addr_reg[4] ,
    \wb_gpr_write_addr_reg[4] ,
    \ex_gpr_write_addr_reg[4] ,
    sync_reset,
    of_instr_ii_0,
    Clk,
    \EX_Op2[0]_i_7 ,
    \EX_Op2[0]_i_7_0 ,
    \EX_Op2[0]_i_7_1 ,
    \EX_Op2[0]_i_6 ,
    \EX_Op2[0]_i_8 ,
    I4,
    I0);
  output \Using_FPGA.Native_0 ;
  output \mem_gpr_write_addr_reg[4] ;
  output \wb_gpr_write_addr_reg[4] ;
  output \ex_gpr_write_addr_reg[4] ;
  input sync_reset;
  input of_instr_ii_0;
  input Clk;
  input [2:0]\EX_Op2[0]_i_7 ;
  input \EX_Op2[0]_i_7_0 ;
  input \EX_Op2[0]_i_7_1 ;
  input [2:0]\EX_Op2[0]_i_6 ;
  input \EX_Op2[0]_i_8 ;
  input I4;
  input I0;

  wire Clk;
  wire [2:0]\EX_Op2[0]_i_6 ;
  wire [2:0]\EX_Op2[0]_i_7 ;
  wire \EX_Op2[0]_i_7_0 ;
  wire \EX_Op2[0]_i_7_1 ;
  wire \EX_Op2[0]_i_8 ;
  wire I0;
  wire I4;
  wire \Using_FPGA.Native_0 ;
  wire \ex_gpr_write_addr_reg[4] ;
  wire \mem_gpr_write_addr_reg[4] ;
  wire of_instr_ii_0;
  wire sync_reset;
  wire \wb_gpr_write_addr_reg[4] ;

  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \EX_Op2[0]_i_10 
       (.I0(\EX_Op2[0]_i_7 [0]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\EX_Op2[0]_i_7_0 ),
        .I3(\EX_Op2[0]_i_7 [2]),
        .I4(\EX_Op2[0]_i_7_1 ),
        .I5(\EX_Op2[0]_i_7 [1]),
        .O(\mem_gpr_write_addr_reg[4] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \EX_Op2[0]_i_11 
       (.I0(\EX_Op2[0]_i_8 ),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\EX_Op2[0]_i_7_0 ),
        .I3(I4),
        .I4(\EX_Op2[0]_i_7_1 ),
        .I5(I0),
        .O(\ex_gpr_write_addr_reg[4] ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \EX_Op2[0]_i_9 
       (.I0(\EX_Op2[0]_i_6 [0]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\EX_Op2[0]_i_7_0 ),
        .I3(\EX_Op2[0]_i_6 [2]),
        .I4(\EX_Op2[0]_i_7_1 ),
        .I5(\EX_Op2[0]_i_6 [1]),
        .O(\wb_gpr_write_addr_reg[4] ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_0),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_193
   (\Using_FPGA.Native_0 ,
    of_Sel_SPR_MSR1,
    \Using_FPGA.Native_1 ,
    EX_SWAP_Instr,
    ex_load_shift_carry0,
    p_1_in30_in,
    \Using_FPGA.Native_2 ,
    D224_out,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    p_9_in,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \Using_FPGA.Native_13 ,
    \Using_FPGA.Native_14 ,
    \Using_FPGA.Native_15 ,
    \Using_FPGA.Native_16 ,
    \Using_FPGA.Native_17 ,
    \Using_FPGA.Native_18 ,
    \Using_FPGA.Native_19 ,
    \Using_FPGA.Native_20 ,
    \Using_FPGA.Native_21 ,
    \Using_FPGA.Native_22 ,
    \Using_FPGA.Native_23 ,
    \Using_FPGA.Native_24 ,
    \Using_FPGA.Native_25 ,
    \Using_FPGA.Native_26 ,
    \Using_FPGA.Native_27 ,
    \Using_FPGA.Native_28 ,
    \Using_FPGA.Native_29 ,
    \Using_FPGA.Native_30 ,
    \Using_FPGA.Native_31 ,
    \Using_FPGA.Native_32 ,
    \Using_FPGA.Native_33 ,
    \Using_FPGA.Native_34 ,
    \Using_FPGA.Native_35 ,
    I1_1,
    of_Sel_SPR_MSR88_out,
    ex_is_multi_or_load_instr0,
    of_op1_sel_spr,
    sync_reset,
    of_instr_ii_38,
    Clk,
    ex_is_multi_instr2_reg,
    \Using_FPGA.Native_36 ,
    EX_SWAP_Instr_reg,
    EX_SWAP_Instr_reg_0,
    EX_SWAP_Instr_reg_1,
    EX_SWAP_Instr_reg_2,
    ex_is_multi_or_load_instr_reg,
    ex_is_multi_or_load_instr_reg_0,
    \Using_FPGA.Native_37 ,
    \Using_FPGA.Native_38 ,
    \Using_FPGA.Native_39 ,
    \EX_Sext_Op_reg[1] ,
    ex_load_shift_carry_reg,
    ex_is_multi_or_load_instr_reg_1,
    OF_Op1_Sel_SPR_PC0__0,
    \EX_Op1_reg[0] ,
    ex_MSR,
    ex_mfsmsr_i_reg,
    ex_mfsmsr_i_reg_0,
    ex_mfsmsr_i_reg_1);
  output \Using_FPGA.Native_0 ;
  output of_Sel_SPR_MSR1;
  output \Using_FPGA.Native_1 ;
  output EX_SWAP_Instr;
  output ex_load_shift_carry0;
  output p_1_in30_in;
  output \Using_FPGA.Native_2 ;
  output D224_out;
  output [0:0]\Using_FPGA.Native_3 ;
  output \Using_FPGA.Native_4 ;
  output p_9_in;
  output \Using_FPGA.Native_5 ;
  output \Using_FPGA.Native_6 ;
  output \Using_FPGA.Native_7 ;
  output \Using_FPGA.Native_8 ;
  output \Using_FPGA.Native_9 ;
  output \Using_FPGA.Native_10 ;
  output \Using_FPGA.Native_11 ;
  output \Using_FPGA.Native_12 ;
  output \Using_FPGA.Native_13 ;
  output \Using_FPGA.Native_14 ;
  output \Using_FPGA.Native_15 ;
  output \Using_FPGA.Native_16 ;
  output \Using_FPGA.Native_17 ;
  output \Using_FPGA.Native_18 ;
  output \Using_FPGA.Native_19 ;
  output \Using_FPGA.Native_20 ;
  output \Using_FPGA.Native_21 ;
  output \Using_FPGA.Native_22 ;
  output \Using_FPGA.Native_23 ;
  output \Using_FPGA.Native_24 ;
  output \Using_FPGA.Native_25 ;
  output \Using_FPGA.Native_26 ;
  output \Using_FPGA.Native_27 ;
  output \Using_FPGA.Native_28 ;
  output \Using_FPGA.Native_29 ;
  output \Using_FPGA.Native_30 ;
  output \Using_FPGA.Native_31 ;
  output \Using_FPGA.Native_32 ;
  output \Using_FPGA.Native_33 ;
  output \Using_FPGA.Native_34 ;
  output \Using_FPGA.Native_35 ;
  output I1_1;
  output of_Sel_SPR_MSR88_out;
  output ex_is_multi_or_load_instr0;
  output of_op1_sel_spr;
  input sync_reset;
  input of_instr_ii_38;
  input Clk;
  input ex_is_multi_instr2_reg;
  input \Using_FPGA.Native_36 ;
  input EX_SWAP_Instr_reg;
  input EX_SWAP_Instr_reg_0;
  input EX_SWAP_Instr_reg_1;
  input EX_SWAP_Instr_reg_2;
  input ex_is_multi_or_load_instr_reg;
  input ex_is_multi_or_load_instr_reg_0;
  input \Using_FPGA.Native_37 ;
  input \Using_FPGA.Native_38 ;
  input \Using_FPGA.Native_39 ;
  input \EX_Sext_Op_reg[1] ;
  input ex_load_shift_carry_reg;
  input ex_is_multi_or_load_instr_reg_1;
  input OF_Op1_Sel_SPR_PC0__0;
  input [31:0]\EX_Op1_reg[0] ;
  input [2:0]ex_MSR;
  input ex_mfsmsr_i_reg;
  input ex_mfsmsr_i_reg_0;
  input ex_mfsmsr_i_reg_1;

  wire Clk;
  wire D224_out;
  wire [31:0]\EX_Op1_reg[0] ;
  wire EX_SWAP_Instr;
  wire EX_SWAP_Instr_reg;
  wire EX_SWAP_Instr_reg_0;
  wire EX_SWAP_Instr_reg_1;
  wire EX_SWAP_Instr_reg_2;
  wire \EX_Sext_Op_reg[1] ;
  wire I1_1;
  wire OF_Op1_Sel_SPR_PC0__0;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_16 ;
  wire \Using_FPGA.Native_17 ;
  wire \Using_FPGA.Native_18 ;
  wire \Using_FPGA.Native_19 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_20 ;
  wire \Using_FPGA.Native_21 ;
  wire \Using_FPGA.Native_22 ;
  wire \Using_FPGA.Native_23 ;
  wire \Using_FPGA.Native_24 ;
  wire \Using_FPGA.Native_25 ;
  wire \Using_FPGA.Native_26 ;
  wire \Using_FPGA.Native_27 ;
  wire \Using_FPGA.Native_28 ;
  wire \Using_FPGA.Native_29 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_30 ;
  wire \Using_FPGA.Native_31 ;
  wire \Using_FPGA.Native_32 ;
  wire \Using_FPGA.Native_33 ;
  wire \Using_FPGA.Native_34 ;
  wire \Using_FPGA.Native_35 ;
  wire \Using_FPGA.Native_36 ;
  wire \Using_FPGA.Native_37 ;
  wire \Using_FPGA.Native_38 ;
  wire \Using_FPGA.Native_39 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire [2:0]ex_MSR;
  wire ex_is_multi_instr2_reg;
  wire ex_is_multi_or_load_instr0;
  wire ex_is_multi_or_load_instr_reg;
  wire ex_is_multi_or_load_instr_reg_0;
  wire ex_is_multi_or_load_instr_reg_1;
  wire ex_load_shift_carry0;
  wire ex_load_shift_carry_reg;
  wire ex_mfsmsr_i_reg;
  wire ex_mfsmsr_i_reg_0;
  wire ex_mfsmsr_i_reg_1;
  wire of_Sel_SPR_MSR1;
  wire of_Sel_SPR_MSR88_out;
  wire of_instr_ii_38;
  wire of_op1_sel_spr;
  wire p_1_in30_in;
  wire p_9_in;
  wire sync_reset;

  LUT6 #(
    .INIT(64'h0000000010000000)) 
    EX_SWAP_Instr_i_1
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_36 ),
        .I2(EX_SWAP_Instr_reg),
        .I3(EX_SWAP_Instr_reg_0),
        .I4(EX_SWAP_Instr_reg_1),
        .I5(EX_SWAP_Instr_reg_2),
        .O(EX_SWAP_Instr));
  LUT6 #(
    .INIT(64'h0000000010111111)) 
    \EX_Sext_Op[1]_i_1 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_36 ),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(EX_SWAP_Instr_reg_0),
        .I4(EX_SWAP_Instr_reg_1),
        .I5(EX_SWAP_Instr_reg_2),
        .O(\Using_FPGA.Native_3 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_38),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hF2)) 
    \Using_FPGA.Native_i_1__180 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(OF_Op1_Sel_SPR_PC0__0),
        .O(of_op1_sel_spr));
  LUT5 #(
    .INIT(32'h00080000)) 
    \Using_FPGA.Native_i_1__44 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_is_multi_or_load_instr_reg),
        .I2(ex_is_multi_or_load_instr_reg_0),
        .I3(\Using_FPGA.Native_37 ),
        .I4(\Using_FPGA.Native_38 ),
        .O(\Using_FPGA.Native_2 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \Using_FPGA.Native_i_1__45 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_39 ),
        .I2(ex_is_multi_or_load_instr_reg),
        .I3(\Using_FPGA.Native_38 ),
        .O(D224_out));
  LUT2 #(
    .INIT(4'h1)) 
    \Using_FPGA.Native_i_1__53 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_36 ),
        .O(\Using_FPGA.Native_4 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__117 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [14]),
        .O(\Using_FPGA.Native_5 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__118 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [9]),
        .O(\Using_FPGA.Native_6 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__119 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [10]),
        .O(\Using_FPGA.Native_7 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__120 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [11]),
        .O(\Using_FPGA.Native_8 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__121 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [12]),
        .O(\Using_FPGA.Native_9 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__122 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [13]),
        .O(\Using_FPGA.Native_10 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__123 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [23]),
        .O(\Using_FPGA.Native_11 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__124 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [8]),
        .O(\Using_FPGA.Native_12 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__125 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [26]),
        .O(\Using_FPGA.Native_13 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__126 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [18]),
        .O(\Using_FPGA.Native_14 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__127 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [27]),
        .O(\Using_FPGA.Native_15 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__128 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [19]),
        .O(\Using_FPGA.Native_16 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__129 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [28]),
        .O(\Using_FPGA.Native_17 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__130 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [20]),
        .O(\Using_FPGA.Native_18 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__131 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [4]),
        .O(\Using_FPGA.Native_19 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__132 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [29]),
        .O(\Using_FPGA.Native_20 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__133 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [21]),
        .O(\Using_FPGA.Native_21 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__134 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [5]),
        .O(\Using_FPGA.Native_22 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__135 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [30]),
        .O(\Using_FPGA.Native_23 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__136 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [22]),
        .O(\Using_FPGA.Native_24 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__137 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [6]),
        .O(\Using_FPGA.Native_25 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__138 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [25]),
        .O(\Using_FPGA.Native_26 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__139 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [17]),
        .O(\Using_FPGA.Native_27 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__140 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [24]),
        .O(\Using_FPGA.Native_28 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__141 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [16]),
        .O(\Using_FPGA.Native_29 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__142 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [7]),
        .O(\Using_FPGA.Native_30 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__143 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [15]),
        .O(\Using_FPGA.Native_31 ));
  LUT5 #(
    .INIT(32'hFF020000)) 
    \Using_FPGA.Native_i_2__144 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [0]),
        .O(\Using_FPGA.Native_32 ));
  LUT6 #(
    .INIT(64'hFFFF00FDFF020000)) 
    \Using_FPGA.Native_i_2__145 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [1]),
        .I5(ex_MSR[0]),
        .O(\Using_FPGA.Native_33 ));
  LUT6 #(
    .INIT(64'hFFFF00FDFF020000)) 
    \Using_FPGA.Native_i_2__146 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [2]),
        .I5(ex_MSR[1]),
        .O(\Using_FPGA.Native_34 ));
  LUT6 #(
    .INIT(64'hFFFF00FDFF020000)) 
    \Using_FPGA.Native_i_2__147 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [3]),
        .I5(ex_MSR[2]),
        .O(\Using_FPGA.Native_35 ));
  LUT6 #(
    .INIT(64'hFFFF00FDFF020000)) 
    \Using_FPGA.Native_i_3__32 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(OF_Op1_Sel_SPR_PC0__0),
        .I4(\EX_Op1_reg[0] [31]),
        .I5(ex_MSR[1]),
        .O(I1_1));
  LUT6 #(
    .INIT(64'h0000000010000000)) 
    \Using_FPGA.Native_i_4__1 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_load_shift_carry_reg),
        .I2(ex_is_multi_or_load_instr_reg_0),
        .I3(\Using_FPGA.Native_36 ),
        .I4(ex_is_multi_or_load_instr_reg_1),
        .I5(ex_is_multi_or_load_instr_reg),
        .O(\Using_FPGA.Native_1 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h2)) 
    ex_is_multi_instr2_i_1
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .O(of_Sel_SPR_MSR1));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT5 #(
    .INIT(32'h2F22FF22)) 
    ex_is_multi_or_load_instr_i_1
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(ex_is_multi_or_load_instr_reg_1),
        .I3(ex_is_multi_or_load_instr_reg),
        .I4(ex_is_multi_or_load_instr_reg_0),
        .O(ex_is_multi_or_load_instr0));
  LUT3 #(
    .INIT(8'h2A)) 
    ex_load_shift_carry_i_1
       (.I0(p_1_in30_in),
        .I1(EX_SWAP_Instr_reg_0),
        .I2(EX_SWAP_Instr_reg_1),
        .O(ex_load_shift_carry0));
  LUT6 #(
    .INIT(64'h0000000000000040)) 
    ex_load_shift_carry_i_2
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_is_multi_or_load_instr_reg_0),
        .I2(ex_is_multi_or_load_instr_reg_1),
        .I3(\Using_FPGA.Native_36 ),
        .I4(ex_load_shift_carry_reg),
        .I5(ex_is_multi_or_load_instr_reg),
        .O(p_1_in30_in));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    ex_mfsmsr_i_i_1
       (.I0(\Using_FPGA.Native_1 ),
        .I1(ex_is_multi_instr2_reg),
        .I2(\EX_Sext_Op_reg[1] ),
        .I3(ex_mfsmsr_i_reg),
        .I4(ex_mfsmsr_i_reg_0),
        .I5(ex_mfsmsr_i_reg_1),
        .O(of_Sel_SPR_MSR88_out));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    \imm_reg[0]_i_2 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_load_shift_carry_reg),
        .I2(ex_is_multi_or_load_instr_reg_0),
        .I3(\Using_FPGA.Native_36 ),
        .I4(ex_is_multi_or_load_instr_reg_1),
        .I5(ex_is_multi_or_load_instr_reg),
        .O(p_9_in));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_195
   (\Using_FPGA.Native_0 ,
    ex_is_div_instr_I_reg,
    \Using_FPGA.Native_1 ,
    sync_reset,
    of_instr_ii_37,
    Clk,
    EX_Is_Div_Instr,
    ex_is_div_instr_I_reg_0,
    ex_is_div_instr_I_reg_1,
    ex_is_div_instr_I_reg_2,
    \Using_FPGA.Native_2 ,
    ex_is_div_instr_I_reg_3,
    ex_is_div_instr_I_reg_4);
  output \Using_FPGA.Native_0 ;
  output ex_is_div_instr_I_reg;
  output \Using_FPGA.Native_1 ;
  input sync_reset;
  input of_instr_ii_37;
  input Clk;
  input EX_Is_Div_Instr;
  input ex_is_div_instr_I_reg_0;
  input ex_is_div_instr_I_reg_1;
  input ex_is_div_instr_I_reg_2;
  input \Using_FPGA.Native_2 ;
  input ex_is_div_instr_I_reg_3;
  input ex_is_div_instr_I_reg_4;

  wire Clk;
  wire EX_Is_Div_Instr;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire ex_is_div_instr_I0;
  wire ex_is_div_instr_I_reg;
  wire ex_is_div_instr_I_reg_0;
  wire ex_is_div_instr_I_reg_1;
  wire ex_is_div_instr_I_reg_2;
  wire ex_is_div_instr_I_reg_3;
  wire ex_is_div_instr_I_reg_4;
  wire of_instr_ii_37;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_37),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_1__54 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_2 ),
        .O(\Using_FPGA.Native_1 ));
  LUT5 #(
    .INIT(32'h0000CC0A)) 
    ex_is_div_instr_I_i_1
       (.I0(EX_Is_Div_Instr),
        .I1(ex_is_div_instr_I0),
        .I2(ex_is_div_instr_I_reg_0),
        .I3(ex_is_div_instr_I_reg_1),
        .I4(sync_reset),
        .O(ex_is_div_instr_I_reg));
  LUT5 #(
    .INIT(32'h00100000)) 
    ex_is_div_instr_I_i_2
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_is_div_instr_I_reg_2),
        .I2(\Using_FPGA.Native_2 ),
        .I3(ex_is_div_instr_I_reg_3),
        .I4(ex_is_div_instr_I_reg_4),
        .O(ex_is_div_instr_I0));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_197
   (\Using_FPGA.Native_0 ,
    ex_sel_alu_i_reg,
    \Using_FPGA.Native_1 ,
    sync_reset,
    of_instr_ii_36,
    Clk,
    \EX_Op3_reg[0] ,
    GPR_Op3,
    \EX_Op3_reg[0]_0 ,
    MEM_Fwd,
    \EX_Op3_reg[1] ,
    \EX_Op3_reg[1]_0 ,
    \EX_Op3_reg[2] ,
    \EX_Op3_reg[2]_0 ,
    \EX_Op3_reg[3] ,
    \EX_Op3_reg[3]_0 ,
    \EX_Op3_reg[4] ,
    \EX_Op3_reg[4]_0 ,
    \EX_Op3_reg[5] ,
    \EX_Op3_reg[5]_0 ,
    \EX_Op3_reg[6] ,
    \EX_Op3_reg[6]_0 ,
    \EX_Op3_reg[7] ,
    \EX_Op3_reg[7]_0 ,
    \EX_Op3_reg[8] ,
    \EX_Op3_reg[8]_0 ,
    \EX_Op3_reg[9] ,
    \EX_Op3_reg[9]_0 ,
    \EX_Op3_reg[10] ,
    \EX_Op3_reg[10]_0 ,
    \EX_Op3_reg[11] ,
    \EX_Op3_reg[11]_0 ,
    \EX_Op3_reg[12] ,
    \EX_Op3_reg[12]_0 ,
    \EX_Op3_reg[13] ,
    \EX_Op3_reg[13]_0 ,
    \EX_Op3_reg[14] ,
    \EX_Op3_reg[14]_0 ,
    \EX_Op3_reg[15] ,
    \EX_Op3_reg[15]_0 ,
    \EX_Op3_reg[16] ,
    \EX_Op3_reg[16]_0 ,
    \EX_Op3_reg[17] ,
    \EX_Op3_reg[18] ,
    \EX_Op3_reg[19] ,
    \EX_Op3_reg[20] ,
    \EX_Op3_reg[21] ,
    \EX_Op3_reg[22] ,
    \EX_Op3_reg[23] ,
    \EX_Op3_reg[24] ,
    \EX_Op3_reg[24]_0 ,
    \EX_Op3_reg[25] ,
    \EX_Op3_reg[25]_0 ,
    \EX_Op3_reg[26] ,
    \EX_Op3_reg[26]_0 ,
    \EX_Op3_reg[27] ,
    \EX_Op3_reg[27]_0 ,
    \EX_Op3_reg[28] ,
    \EX_Op3_reg[28]_0 ,
    \EX_Op3_reg[29] ,
    \EX_Op3_reg[29]_0 ,
    \EX_Op3_reg[30] ,
    \EX_Op3_reg[30]_0 ,
    \EX_Op3_reg[31] ,
    \EX_Op3_reg[31]_0 ,
    of_read_ex_write_op3_conflict__1,
    \EX_Op3[0]_i_2_0 ,
    \EX_Op3[0]_i_2_1 ,
    \EX_Op3[0]_i_2_2 ,
    \EX_Op3[0]_i_2_3 ,
    \EX_Op3[0]_i_2_4 ,
    \EX_Op3[0]_i_2_5 ,
    \EX_Op3[0]_i_2_6 ,
    \EX_Op3[0]_i_6 );
  output \Using_FPGA.Native_0 ;
  output [31:0]ex_sel_alu_i_reg;
  output \Using_FPGA.Native_1 ;
  input sync_reset;
  input of_instr_ii_36;
  input Clk;
  input \EX_Op3_reg[0] ;
  input [0:31]GPR_Op3;
  input \EX_Op3_reg[0]_0 ;
  input [0:31]MEM_Fwd;
  input \EX_Op3_reg[1] ;
  input \EX_Op3_reg[1]_0 ;
  input \EX_Op3_reg[2] ;
  input \EX_Op3_reg[2]_0 ;
  input \EX_Op3_reg[3] ;
  input \EX_Op3_reg[3]_0 ;
  input \EX_Op3_reg[4] ;
  input \EX_Op3_reg[4]_0 ;
  input \EX_Op3_reg[5] ;
  input \EX_Op3_reg[5]_0 ;
  input \EX_Op3_reg[6] ;
  input \EX_Op3_reg[6]_0 ;
  input \EX_Op3_reg[7] ;
  input \EX_Op3_reg[7]_0 ;
  input \EX_Op3_reg[8] ;
  input \EX_Op3_reg[8]_0 ;
  input \EX_Op3_reg[9] ;
  input \EX_Op3_reg[9]_0 ;
  input \EX_Op3_reg[10] ;
  input \EX_Op3_reg[10]_0 ;
  input \EX_Op3_reg[11] ;
  input \EX_Op3_reg[11]_0 ;
  input \EX_Op3_reg[12] ;
  input \EX_Op3_reg[12]_0 ;
  input \EX_Op3_reg[13] ;
  input \EX_Op3_reg[13]_0 ;
  input \EX_Op3_reg[14] ;
  input \EX_Op3_reg[14]_0 ;
  input \EX_Op3_reg[15] ;
  input \EX_Op3_reg[15]_0 ;
  input \EX_Op3_reg[16] ;
  input [7:0]\EX_Op3_reg[16]_0 ;
  input \EX_Op3_reg[17] ;
  input \EX_Op3_reg[18] ;
  input \EX_Op3_reg[19] ;
  input \EX_Op3_reg[20] ;
  input \EX_Op3_reg[21] ;
  input \EX_Op3_reg[22] ;
  input \EX_Op3_reg[23] ;
  input \EX_Op3_reg[24] ;
  input \EX_Op3_reg[24]_0 ;
  input \EX_Op3_reg[25] ;
  input \EX_Op3_reg[25]_0 ;
  input \EX_Op3_reg[26] ;
  input \EX_Op3_reg[26]_0 ;
  input \EX_Op3_reg[27] ;
  input \EX_Op3_reg[27]_0 ;
  input \EX_Op3_reg[28] ;
  input \EX_Op3_reg[28]_0 ;
  input \EX_Op3_reg[29] ;
  input \EX_Op3_reg[29]_0 ;
  input \EX_Op3_reg[30] ;
  input \EX_Op3_reg[30]_0 ;
  input \EX_Op3_reg[31] ;
  input \EX_Op3_reg[31]_0 ;
  input of_read_ex_write_op3_conflict__1;
  input [1:0]\EX_Op3[0]_i_2_0 ;
  input \EX_Op3[0]_i_2_1 ;
  input \EX_Op3[0]_i_2_2 ;
  input \EX_Op3[0]_i_2_3 ;
  input [1:0]\EX_Op3[0]_i_2_4 ;
  input \EX_Op3[0]_i_2_5 ;
  input \EX_Op3[0]_i_2_6 ;
  input [0:0]\EX_Op3[0]_i_6 ;

  wire Clk;
  wire [1:0]\EX_Op3[0]_i_2_0 ;
  wire \EX_Op3[0]_i_2_1 ;
  wire \EX_Op3[0]_i_2_2 ;
  wire \EX_Op3[0]_i_2_3 ;
  wire [1:0]\EX_Op3[0]_i_2_4 ;
  wire \EX_Op3[0]_i_2_5 ;
  wire \EX_Op3[0]_i_2_6 ;
  wire [0:0]\EX_Op3[0]_i_6 ;
  wire \EX_Op3_reg[0] ;
  wire \EX_Op3_reg[0]_0 ;
  wire \EX_Op3_reg[10] ;
  wire \EX_Op3_reg[10]_0 ;
  wire \EX_Op3_reg[11] ;
  wire \EX_Op3_reg[11]_0 ;
  wire \EX_Op3_reg[12] ;
  wire \EX_Op3_reg[12]_0 ;
  wire \EX_Op3_reg[13] ;
  wire \EX_Op3_reg[13]_0 ;
  wire \EX_Op3_reg[14] ;
  wire \EX_Op3_reg[14]_0 ;
  wire \EX_Op3_reg[15] ;
  wire \EX_Op3_reg[15]_0 ;
  wire \EX_Op3_reg[16] ;
  wire [7:0]\EX_Op3_reg[16]_0 ;
  wire \EX_Op3_reg[17] ;
  wire \EX_Op3_reg[18] ;
  wire \EX_Op3_reg[19] ;
  wire \EX_Op3_reg[1] ;
  wire \EX_Op3_reg[1]_0 ;
  wire \EX_Op3_reg[20] ;
  wire \EX_Op3_reg[21] ;
  wire \EX_Op3_reg[22] ;
  wire \EX_Op3_reg[23] ;
  wire \EX_Op3_reg[24] ;
  wire \EX_Op3_reg[24]_0 ;
  wire \EX_Op3_reg[25] ;
  wire \EX_Op3_reg[25]_0 ;
  wire \EX_Op3_reg[26] ;
  wire \EX_Op3_reg[26]_0 ;
  wire \EX_Op3_reg[27] ;
  wire \EX_Op3_reg[27]_0 ;
  wire \EX_Op3_reg[28] ;
  wire \EX_Op3_reg[28]_0 ;
  wire \EX_Op3_reg[29] ;
  wire \EX_Op3_reg[29]_0 ;
  wire \EX_Op3_reg[2] ;
  wire \EX_Op3_reg[2]_0 ;
  wire \EX_Op3_reg[30] ;
  wire \EX_Op3_reg[30]_0 ;
  wire \EX_Op3_reg[31] ;
  wire \EX_Op3_reg[31]_0 ;
  wire \EX_Op3_reg[3] ;
  wire \EX_Op3_reg[3]_0 ;
  wire \EX_Op3_reg[4] ;
  wire \EX_Op3_reg[4]_0 ;
  wire \EX_Op3_reg[5] ;
  wire \EX_Op3_reg[5]_0 ;
  wire \EX_Op3_reg[6] ;
  wire \EX_Op3_reg[6]_0 ;
  wire \EX_Op3_reg[7] ;
  wire \EX_Op3_reg[7]_0 ;
  wire \EX_Op3_reg[8] ;
  wire \EX_Op3_reg[8]_0 ;
  wire \EX_Op3_reg[9] ;
  wire \EX_Op3_reg[9]_0 ;
  wire [0:31]GPR_Op3;
  wire [0:31]MEM_Fwd;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [31:0]ex_sel_alu_i_reg;
  wire of_instr_ii_36;
  wire [0:1]of_op3_sel;
  wire of_read_ex_write_op3_conflict__1;
  wire of_read_mem_write_op3_conflict__1;
  wire of_read_wb_write_op3_conflict__1;
  wire sync_reset;

  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[0]_i_1 
       (.I0(\EX_Op3_reg[0] ),
        .I1(GPR_Op3[0]),
        .I2(\EX_Op3_reg[0]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[0]),
        .O(ex_sel_alu_i_reg[31]));
  LUT2 #(
    .INIT(4'h9)) 
    \EX_Op3[0]_i_12 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\EX_Op3[0]_i_6 ),
        .O(\Using_FPGA.Native_1 ));
  LUT3 #(
    .INIT(8'h0E)) 
    \EX_Op3[0]_i_2 
       (.I0(of_read_mem_write_op3_conflict__1),
        .I1(of_read_wb_write_op3_conflict__1),
        .I2(of_read_ex_write_op3_conflict__1),
        .O(of_op3_sel[0]));
  LUT3 #(
    .INIT(8'hF4)) 
    \EX_Op3[0]_i_3 
       (.I0(of_read_mem_write_op3_conflict__1),
        .I1(of_read_wb_write_op3_conflict__1),
        .I2(of_read_ex_write_op3_conflict__1),
        .O(of_op3_sel[1]));
  LUT6 #(
    .INIT(64'h9000009000000000)) 
    \EX_Op3[0]_i_4 
       (.I0(\EX_Op3[0]_i_2_0 [1]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\EX_Op3[0]_i_2_1 ),
        .I3(\EX_Op3[0]_i_2_2 ),
        .I4(\EX_Op3[0]_i_2_0 [0]),
        .I5(\EX_Op3[0]_i_2_3 ),
        .O(of_read_mem_write_op3_conflict__1));
  LUT6 #(
    .INIT(64'h9000009000000000)) 
    \EX_Op3[0]_i_5 
       (.I0(\EX_Op3[0]_i_2_4 [1]),
        .I1(\Using_FPGA.Native_0 ),
        .I2(\EX_Op3[0]_i_2_5 ),
        .I3(\EX_Op3[0]_i_2_2 ),
        .I4(\EX_Op3[0]_i_2_4 [0]),
        .I5(\EX_Op3[0]_i_2_6 ),
        .O(of_read_wb_write_op3_conflict__1));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[10]_i_1 
       (.I0(\EX_Op3_reg[10] ),
        .I1(GPR_Op3[10]),
        .I2(\EX_Op3_reg[10]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[10]),
        .O(ex_sel_alu_i_reg[21]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[11]_i_1 
       (.I0(\EX_Op3_reg[11] ),
        .I1(GPR_Op3[11]),
        .I2(\EX_Op3_reg[11]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[11]),
        .O(ex_sel_alu_i_reg[20]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[12]_i_1 
       (.I0(\EX_Op3_reg[12] ),
        .I1(GPR_Op3[12]),
        .I2(\EX_Op3_reg[12]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[12]),
        .O(ex_sel_alu_i_reg[19]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[13]_i_1 
       (.I0(\EX_Op3_reg[13] ),
        .I1(GPR_Op3[13]),
        .I2(\EX_Op3_reg[13]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[13]),
        .O(ex_sel_alu_i_reg[18]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[14]_i_1 
       (.I0(\EX_Op3_reg[14] ),
        .I1(GPR_Op3[14]),
        .I2(\EX_Op3_reg[14]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[14]),
        .O(ex_sel_alu_i_reg[17]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[15]_i_1 
       (.I0(\EX_Op3_reg[15] ),
        .I1(GPR_Op3[15]),
        .I2(\EX_Op3_reg[15]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[15]),
        .O(ex_sel_alu_i_reg[16]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[16]_i_1 
       (.I0(\EX_Op3_reg[16] ),
        .I1(GPR_Op3[16]),
        .I2(\EX_Op3_reg[16]_0 [7]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[16]),
        .O(ex_sel_alu_i_reg[15]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[17]_i_1 
       (.I0(\EX_Op3_reg[17] ),
        .I1(GPR_Op3[17]),
        .I2(\EX_Op3_reg[16]_0 [6]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[17]),
        .O(ex_sel_alu_i_reg[14]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[18]_i_1 
       (.I0(\EX_Op3_reg[18] ),
        .I1(GPR_Op3[18]),
        .I2(\EX_Op3_reg[16]_0 [5]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[18]),
        .O(ex_sel_alu_i_reg[13]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[19]_i_1 
       (.I0(\EX_Op3_reg[19] ),
        .I1(GPR_Op3[19]),
        .I2(\EX_Op3_reg[16]_0 [4]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[19]),
        .O(ex_sel_alu_i_reg[12]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[1]_i_1 
       (.I0(\EX_Op3_reg[1] ),
        .I1(GPR_Op3[1]),
        .I2(\EX_Op3_reg[1]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[1]),
        .O(ex_sel_alu_i_reg[30]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[20]_i_1 
       (.I0(\EX_Op3_reg[20] ),
        .I1(GPR_Op3[20]),
        .I2(\EX_Op3_reg[16]_0 [3]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[20]),
        .O(ex_sel_alu_i_reg[11]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[21]_i_1 
       (.I0(\EX_Op3_reg[21] ),
        .I1(GPR_Op3[21]),
        .I2(\EX_Op3_reg[16]_0 [2]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[21]),
        .O(ex_sel_alu_i_reg[10]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[22]_i_1 
       (.I0(\EX_Op3_reg[22] ),
        .I1(GPR_Op3[22]),
        .I2(\EX_Op3_reg[16]_0 [1]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[22]),
        .O(ex_sel_alu_i_reg[9]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[23]_i_1 
       (.I0(\EX_Op3_reg[23] ),
        .I1(GPR_Op3[23]),
        .I2(\EX_Op3_reg[16]_0 [0]),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[23]),
        .O(ex_sel_alu_i_reg[8]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[24]_i_1 
       (.I0(\EX_Op3_reg[24] ),
        .I1(GPR_Op3[24]),
        .I2(\EX_Op3_reg[24]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[24]),
        .O(ex_sel_alu_i_reg[7]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[25]_i_1 
       (.I0(\EX_Op3_reg[25] ),
        .I1(GPR_Op3[25]),
        .I2(\EX_Op3_reg[25]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[25]),
        .O(ex_sel_alu_i_reg[6]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[26]_i_1 
       (.I0(\EX_Op3_reg[26] ),
        .I1(GPR_Op3[26]),
        .I2(\EX_Op3_reg[26]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[26]),
        .O(ex_sel_alu_i_reg[5]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[27]_i_1 
       (.I0(\EX_Op3_reg[27] ),
        .I1(GPR_Op3[27]),
        .I2(\EX_Op3_reg[27]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[27]),
        .O(ex_sel_alu_i_reg[4]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[28]_i_1 
       (.I0(\EX_Op3_reg[28] ),
        .I1(GPR_Op3[28]),
        .I2(\EX_Op3_reg[28]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[28]),
        .O(ex_sel_alu_i_reg[3]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[29]_i_1 
       (.I0(\EX_Op3_reg[29] ),
        .I1(GPR_Op3[29]),
        .I2(\EX_Op3_reg[29]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[29]),
        .O(ex_sel_alu_i_reg[2]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[2]_i_1 
       (.I0(\EX_Op3_reg[2] ),
        .I1(GPR_Op3[2]),
        .I2(\EX_Op3_reg[2]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[2]),
        .O(ex_sel_alu_i_reg[29]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[30]_i_1 
       (.I0(\EX_Op3_reg[30] ),
        .I1(GPR_Op3[30]),
        .I2(\EX_Op3_reg[30]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[30]),
        .O(ex_sel_alu_i_reg[1]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[31]_i_1 
       (.I0(\EX_Op3_reg[31] ),
        .I1(GPR_Op3[31]),
        .I2(\EX_Op3_reg[31]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[31]),
        .O(ex_sel_alu_i_reg[0]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[3]_i_1 
       (.I0(\EX_Op3_reg[3] ),
        .I1(GPR_Op3[3]),
        .I2(\EX_Op3_reg[3]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[3]),
        .O(ex_sel_alu_i_reg[28]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[4]_i_1 
       (.I0(\EX_Op3_reg[4] ),
        .I1(GPR_Op3[4]),
        .I2(\EX_Op3_reg[4]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[4]),
        .O(ex_sel_alu_i_reg[27]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[5]_i_1 
       (.I0(\EX_Op3_reg[5] ),
        .I1(GPR_Op3[5]),
        .I2(\EX_Op3_reg[5]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[5]),
        .O(ex_sel_alu_i_reg[26]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[6]_i_1 
       (.I0(\EX_Op3_reg[6] ),
        .I1(GPR_Op3[6]),
        .I2(\EX_Op3_reg[6]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[6]),
        .O(ex_sel_alu_i_reg[25]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[7]_i_1 
       (.I0(\EX_Op3_reg[7] ),
        .I1(GPR_Op3[7]),
        .I2(\EX_Op3_reg[7]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[7]),
        .O(ex_sel_alu_i_reg[24]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[8]_i_1 
       (.I0(\EX_Op3_reg[8] ),
        .I1(GPR_Op3[8]),
        .I2(\EX_Op3_reg[8]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[8]),
        .O(ex_sel_alu_i_reg[23]));
  LUT6 #(
    .INIT(64'hF0AAFFCCF0AA00CC)) 
    \EX_Op3[9]_i_1 
       (.I0(\EX_Op3_reg[9] ),
        .I1(GPR_Op3[9]),
        .I2(\EX_Op3_reg[9]_0 ),
        .I3(of_op3_sel[0]),
        .I4(of_op3_sel[1]),
        .I5(MEM_Fwd[9]),
        .O(ex_sel_alu_i_reg[22]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_36),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_199
   (\Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    sync_reset,
    of_instr_ii_35,
    Clk,
    ex_mbar_is_sleep_reg,
    ex_mbar_is_sleep_reg_0,
    ex_mbar_is_sleep);
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  input sync_reset;
  input of_instr_ii_35;
  input Clk;
  input ex_mbar_is_sleep_reg;
  input ex_mbar_is_sleep_reg_0;
  input ex_mbar_is_sleep;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_mbar_is_sleep;
  wire ex_mbar_is_sleep_reg;
  wire ex_mbar_is_sleep_reg_0;
  wire of_instr_ii_35;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_35),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hEFE0)) 
    ex_mbar_is_sleep_cmb_inferred_i_1
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_mbar_is_sleep_reg),
        .I2(ex_mbar_is_sleep_reg_0),
        .I3(ex_mbar_is_sleep),
        .O(\Using_FPGA.Native_1 ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_201
   (\Using_FPGA.Native_0 ,
    ex_op1_cmp_eq,
    ex_gpr_write111_out__0,
    sync_reset,
    of_instr_ii_34,
    Clk,
    ex_op1_cmp_eq_reg,
    ex_op1_cmp_eq_reg_0,
    ex_op1_cmp_eq1,
    ex_gpr_write_reg,
    ex_gpr_write_reg_0,
    ex_gpr_write_reg_1);
  output \Using_FPGA.Native_0 ;
  output ex_op1_cmp_eq;
  output ex_gpr_write111_out__0;
  input sync_reset;
  input of_instr_ii_34;
  input Clk;
  input ex_op1_cmp_eq_reg;
  input ex_op1_cmp_eq_reg_0;
  input ex_op1_cmp_eq1;
  input ex_gpr_write_reg;
  input ex_gpr_write_reg_0;
  input ex_gpr_write_reg_1;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire ex_gpr_write111_out__0;
  wire ex_gpr_write_reg;
  wire ex_gpr_write_reg_0;
  wire ex_gpr_write_reg_1;
  wire ex_op1_cmp_eq;
  wire ex_op1_cmp_eq1;
  wire ex_op1_cmp_eq_reg;
  wire ex_op1_cmp_eq_reg_0;
  wire of_instr_ii_34;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_34),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    ex_gpr_write_i_3
       (.I0(ex_gpr_write_reg),
        .I1(\Using_FPGA.Native_0 ),
        .I2(ex_op1_cmp_eq_reg_0),
        .I3(ex_op1_cmp_eq_reg),
        .I4(ex_gpr_write_reg_0),
        .I5(ex_gpr_write_reg_1),
        .O(ex_gpr_write111_out__0));
  LUT4 #(
    .INIT(16'hF9FF)) 
    ex_op1_cmp_eq_i_1
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_op1_cmp_eq_reg),
        .I2(ex_op1_cmp_eq_reg_0),
        .I3(ex_op1_cmp_eq1),
        .O(ex_op1_cmp_eq));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_203
   (\Using_FPGA.Native_0 ,
    sync_reset,
    of_instr_ii_33,
    Clk);
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input of_instr_ii_33;
  input Clk;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_33;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_instr_ii_33),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_205
   (\Using_FPGA.Native_0 ,
    E,
    ex_valid_jump_reg,
    ex_valid_reg,
    ex_branch_with_delayslot_reg,
    \Using_FPGA.Native_1 ,
    Dbg_Clean_Stop0,
    sync_reset,
    of_Valid_II,
    Clk,
    p_9_in,
    ex_valid_jump_reg_0,
    ex_valid_jump_reg_1,
    ex_valid_jump_reg_2,
    wb_exception,
    ex_valid_reg_0,
    ex_Exception_Taken,
    mem_valid_instr,
    mem_exception_from_ex,
    ex_jump_nodelay,
    ex_jump,
    ex_branch_with_delayslot,
    ex_jump_q,
    Q,
    Dbg_Clean_Stop_reg);
  output \Using_FPGA.Native_0 ;
  output [0:0]E;
  output ex_valid_jump_reg;
  output ex_valid_reg;
  output ex_branch_with_delayslot_reg;
  output \Using_FPGA.Native_1 ;
  output Dbg_Clean_Stop0;
  input sync_reset;
  input of_Valid_II;
  input Clk;
  input p_9_in;
  input ex_valid_jump_reg_0;
  input ex_valid_jump_reg_1;
  input ex_valid_jump_reg_2;
  input wb_exception;
  input ex_valid_reg_0;
  input ex_Exception_Taken;
  input mem_valid_instr;
  input mem_exception_from_ex;
  input ex_jump_nodelay;
  input ex_jump;
  input ex_branch_with_delayslot;
  input ex_jump_q;
  input [1:0]Q;
  input Dbg_Clean_Stop_reg;

  wire Clk;
  wire Dbg_Clean_Stop0;
  wire Dbg_Clean_Stop_reg;
  wire [0:0]E;
  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire ex_Exception_Taken;
  wire ex_branch_with_delayslot;
  wire ex_branch_with_delayslot_reg;
  wire ex_jump;
  wire ex_jump_nodelay;
  wire ex_jump_q;
  wire ex_valid_i_2_n_0;
  wire ex_valid_jump_reg;
  wire ex_valid_jump_reg_0;
  wire ex_valid_jump_reg_1;
  wire ex_valid_jump_reg_2;
  wire ex_valid_reg;
  wire ex_valid_reg_0;
  wire mem_exception_from_ex;
  wire mem_valid_instr;
  wire of_Valid_II;
  wire p_9_in;
  wire sync_reset;
  wire wb_exception;

  LUT5 #(
    .INIT(32'hF000F777)) 
    Dbg_Clean_Stop_i_1
       (.I0(\Using_FPGA.Native_0 ),
        .I1(p_9_in),
        .I2(ex_jump_nodelay),
        .I3(ex_jump),
        .I4(Dbg_Clean_Stop_reg),
        .O(Dbg_Clean_Stop0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_Valid_II),
        .Q(\Using_FPGA.Native_0 ),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'h0D)) 
    \Using_FPGA.Native_i_1__101 
       (.I0(ex_branch_with_delayslot),
        .I1(\Using_FPGA.Native_0 ),
        .I2(ex_jump_q),
        .O(ex_branch_with_delayslot_reg));
  LUT4 #(
    .INIT(16'h2AAA)) 
    \Using_FPGA.Native_i_1__102 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(wb_exception),
        .O(\Using_FPGA.Native_1 ));
  LUT6 #(
    .INIT(64'h000000000000CC0A)) 
    ex_valid_i_1
       (.I0(ex_valid_reg_0),
        .I1(ex_valid_i_2_n_0),
        .I2(ex_valid_jump_reg_1),
        .I3(ex_valid_jump_reg_2),
        .I4(sync_reset),
        .I5(wb_exception),
        .O(ex_valid_reg));
  LUT6 #(
    .INIT(64'h0000150015001500)) 
    ex_valid_i_2
       (.I0(ex_Exception_Taken),
        .I1(mem_valid_instr),
        .I2(mem_exception_from_ex),
        .I3(\Using_FPGA.Native_0 ),
        .I4(ex_jump_nodelay),
        .I5(ex_jump),
        .O(ex_valid_i_2_n_0));
  LUT6 #(
    .INIT(64'h000000000000CC0A)) 
    ex_valid_jump_i_1
       (.I0(ex_valid_jump_reg_0),
        .I1(ex_valid_i_2_n_0),
        .I2(ex_valid_jump_reg_1),
        .I3(ex_valid_jump_reg_2),
        .I4(sync_reset),
        .I5(wb_exception),
        .O(ex_valid_jump_reg));
  LUT2 #(
    .INIT(4'h8)) 
    \imm_reg[0]_i_1 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(p_9_in),
        .O(E));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_206
   (D,
    I0125_out,
    sync_reset,
    of_pc_ii_31,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I0125_out;
  input sync_reset;
  input of_pc_ii_31;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I0125_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_31;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_31),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__128 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I0125_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_208
   (D,
    I085_out,
    sync_reset,
    of_pc_ii_21,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I085_out;
  input sync_reset;
  input of_pc_ii_21;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I085_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_21;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_21),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__138 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I085_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_210
   (D,
    I081_out,
    sync_reset,
    of_pc_ii_20,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I081_out;
  input sync_reset;
  input of_pc_ii_20;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I081_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_20;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_20),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__139 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I081_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_212
   (D,
    I077_out,
    sync_reset,
    of_pc_ii_19,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I077_out;
  input sync_reset;
  input of_pc_ii_19;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I077_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_19;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_19),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__140 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I077_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_214
   (D,
    I073_out,
    sync_reset,
    of_pc_ii_18,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I073_out;
  input sync_reset;
  input of_pc_ii_18;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I073_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_18;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_18),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__141 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I073_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_216
   (D,
    I069_out,
    sync_reset,
    of_pc_ii_17,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I069_out;
  input sync_reset;
  input of_pc_ii_17;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I069_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_17;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_17),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__142 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I069_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_218
   (D,
    I065_out,
    sync_reset,
    of_pc_ii_16,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I065_out;
  input sync_reset;
  input of_pc_ii_16;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I065_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_16;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_16),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__143 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I065_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_220
   (D,
    I061_out,
    sync_reset,
    of_pc_ii_15,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I061_out;
  input sync_reset;
  input of_pc_ii_15;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I061_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_15;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_15),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__144 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I061_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_222
   (D,
    I057_out,
    sync_reset,
    of_pc_ii_14,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I057_out;
  input sync_reset;
  input of_pc_ii_14;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I057_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_14;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_14),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__145 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I057_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_224
   (D,
    I053_out,
    sync_reset,
    of_pc_ii_13,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I053_out;
  input sync_reset;
  input of_pc_ii_13;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I053_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_13;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_13),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__146 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I053_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_226
   (D,
    I049_out,
    sync_reset,
    of_pc_ii_12,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I049_out;
  input sync_reset;
  input of_pc_ii_12;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I049_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_12;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_12),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__147 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I049_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_228
   (D,
    I0121_out,
    sync_reset,
    of_pc_ii_30,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I0121_out;
  input sync_reset;
  input of_pc_ii_30;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I0121_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_30;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_30),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__129 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I0121_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_230
   (D,
    I045_out,
    sync_reset,
    of_pc_ii_11,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I045_out;
  input sync_reset;
  input of_pc_ii_11;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I045_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_11;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_11),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__148 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I045_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_232
   (D,
    I041_out,
    sync_reset,
    of_pc_ii_10,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I041_out;
  input sync_reset;
  input of_pc_ii_10;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I041_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_10;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_10),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__149 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I041_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_234
   (D,
    I037_out,
    sync_reset,
    of_pc_ii_9,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I037_out;
  input sync_reset;
  input of_pc_ii_9;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I037_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_9;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_9),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__150 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I037_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_236
   (D,
    I033_out,
    sync_reset,
    of_pc_ii_8,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I033_out;
  input sync_reset;
  input of_pc_ii_8;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I033_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_8;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_8),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__151 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I033_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_238
   (D,
    I029_out,
    sync_reset,
    of_pc_ii_7,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I029_out;
  input sync_reset;
  input of_pc_ii_7;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I029_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_7;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_7),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__152 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I029_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_240
   (D,
    I025_out,
    sync_reset,
    of_pc_ii_6,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I025_out;
  input sync_reset;
  input of_pc_ii_6;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I025_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_6;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_6),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__153 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I025_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_242
   (D,
    I021_out,
    sync_reset,
    of_pc_ii_5,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I021_out;
  input sync_reset;
  input of_pc_ii_5;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I021_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_5;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_5),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__154 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I021_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_244
   (D,
    I017_out,
    sync_reset,
    of_pc_ii_4,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I017_out;
  input sync_reset;
  input of_pc_ii_4;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I017_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_4;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_4),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__155 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I017_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_246
   (D,
    I013_out,
    sync_reset,
    of_pc_ii_3,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I013_out;
  input sync_reset;
  input of_pc_ii_3;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I013_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_3;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_3),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__156 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I013_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_248
   (D,
    I09_out,
    sync_reset,
    of_pc_ii_2,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I09_out;
  input sync_reset;
  input of_pc_ii_2;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I09_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_2;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_2),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__157 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I09_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_250
   (D,
    I0117_out,
    sync_reset,
    of_pc_ii_29,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I0117_out;
  input sync_reset;
  input of_pc_ii_29;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I0117_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_29;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_29),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__130 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I0117_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_252
   (D,
    I05_out,
    sync_reset,
    of_pc_ii_1,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I05_out;
  input sync_reset;
  input of_pc_ii_1;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I05_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_1;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_1),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__158 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I05_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_254
   (D,
    I0,
    sync_reset,
    of_pc_ii_0,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I0;
  input sync_reset;
  input of_pc_ii_0;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I0;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_0;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_0),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__159 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I0));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_256
   (D,
    I0113_out,
    sync_reset,
    of_pc_ii_28,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I0113_out;
  input sync_reset;
  input of_pc_ii_28;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I0113_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_28;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_28),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__131 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I0113_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_258
   (D,
    I0109_out,
    sync_reset,
    of_pc_ii_27,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I0109_out;
  input sync_reset;
  input of_pc_ii_27;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I0109_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_27;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_27),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__132 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I0109_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_260
   (D,
    I0105_out,
    sync_reset,
    of_pc_ii_26,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I0105_out;
  input sync_reset;
  input of_pc_ii_26;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I0105_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_26;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_26),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__133 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I0105_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_262
   (D,
    I0101_out,
    sync_reset,
    of_pc_ii_25,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I0101_out;
  input sync_reset;
  input of_pc_ii_25;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I0101_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_25;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_25),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__134 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I0101_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_264
   (D,
    I097_out,
    sync_reset,
    of_pc_ii_24,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I097_out;
  input sync_reset;
  input of_pc_ii_24;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I097_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_24;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_24),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__135 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I097_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_266
   (D,
    I093_out,
    sync_reset,
    of_pc_ii_23,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I093_out;
  input sync_reset;
  input of_pc_ii_23;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I093_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_23;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_23),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__136 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I093_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_268
   (D,
    I089_out,
    sync_reset,
    of_pc_ii_22,
    Clk,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    Q);
  output [0:0]D;
  output I089_out;
  input sync_reset;
  input of_pc_ii_22;
  input Clk;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input [0:0]Q;

  wire Clk;
  wire [0:0]D;
  wire I089_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]if_sel_input;
  wire of_pc_ii_22;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(of_pc_ii_22),
        .Q(D),
        .R(sync_reset));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__137 
       (.I0(if_sel_input),
        .I1(\Using_FPGA.Native_0 ),
        .I2(D),
        .I3(Q),
        .O(I089_out));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_301
   (mem_MSR,
    MEM_Fwd,
    \Using_FPGA.Native_0 ,
    sync_reset,
    \Using_FPGA.Native_1 ,
    Clk,
    mem_sel_msr,
    \WB_MEM_Result_reg[28] ,
    wb_piperun,
    \wb_MSR_i_reg[28] );
  output [0:0]mem_MSR;
  output [0:0]MEM_Fwd;
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input \Using_FPGA.Native_1 ;
  input Clk;
  input mem_sel_msr;
  input [0:0]\WB_MEM_Result_reg[28] ;
  input wb_piperun;
  input [0:0]\wb_MSR_i_reg[28] ;

  wire Clk;
  wire [0:0]MEM_Fwd;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\WB_MEM_Result_reg[28] ;
  wire [0:0]mem_MSR;
  wire mem_sel_msr;
  wire sync_reset;
  wire [0:0]\wb_MSR_i_reg[28] ;
  wire wb_piperun;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA.Native_1 ),
        .Q(mem_MSR),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \WB_MEM_Result[28]_i_1 
       (.I0(mem_MSR),
        .I1(mem_sel_msr),
        .I2(\WB_MEM_Result_reg[28] ),
        .O(MEM_Fwd));
  LUT3 #(
    .INIT(8'hB8)) 
    \wb_MSR_i[28]_i_1 
       (.I0(mem_MSR),
        .I1(wb_piperun),
        .I2(\wb_MSR_i_reg[28] ),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_302
   (mem_MSR,
    MEM_Fwd,
    \Using_FPGA.Native_0 ,
    sync_reset,
    \Using_FPGA.Native_1 ,
    Clk,
    mem_sel_msr,
    \WB_MEM_Result_reg[0] ,
    wb_piperun,
    \wb_MSR_i_reg[29] );
  output [0:0]mem_MSR;
  output [1:0]MEM_Fwd;
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input \Using_FPGA.Native_1 ;
  input Clk;
  input mem_sel_msr;
  input [1:0]\WB_MEM_Result_reg[0] ;
  input wb_piperun;
  input [0:0]\wb_MSR_i_reg[29] ;

  wire Clk;
  wire [1:0]MEM_Fwd;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [1:0]\WB_MEM_Result_reg[0] ;
  wire [0:0]mem_MSR;
  wire mem_sel_msr;
  wire sync_reset;
  wire [0:0]\wb_MSR_i_reg[29] ;
  wire wb_piperun;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA.Native_1 ),
        .Q(mem_MSR),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \WB_MEM_Result[0]_i_2 
       (.I0(mem_MSR),
        .I1(mem_sel_msr),
        .I2(\WB_MEM_Result_reg[0] [1]),
        .O(MEM_Fwd[1]));
  LUT3 #(
    .INIT(8'hB8)) 
    \WB_MEM_Result[29]_i_1 
       (.I0(mem_MSR),
        .I1(mem_sel_msr),
        .I2(\WB_MEM_Result_reg[0] [0]),
        .O(MEM_Fwd[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \wb_MSR_i[29]_i_1 
       (.I0(mem_MSR),
        .I1(wb_piperun),
        .I2(\wb_MSR_i_reg[29] ),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_303
   (mem_MSR,
    MEM_Fwd,
    \Using_FPGA.Native_0 ,
    sync_reset,
    \Using_FPGA.Native_1 ,
    Clk,
    mem_sel_msr,
    \WB_MEM_Result_reg[30] ,
    wb_piperun,
    \wb_MSR_i_reg[30] );
  output [0:0]mem_MSR;
  output [0:0]MEM_Fwd;
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input \Using_FPGA.Native_1 ;
  input Clk;
  input mem_sel_msr;
  input [0:0]\WB_MEM_Result_reg[30] ;
  input wb_piperun;
  input [0:0]\wb_MSR_i_reg[30] ;

  wire Clk;
  wire [0:0]MEM_Fwd;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\WB_MEM_Result_reg[30] ;
  wire [0:0]mem_MSR;
  wire mem_sel_msr;
  wire sync_reset;
  wire [0:0]\wb_MSR_i_reg[30] ;
  wire wb_piperun;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA.Native_1 ),
        .Q(mem_MSR),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \WB_MEM_Result[30]_i_1 
       (.I0(mem_MSR),
        .I1(mem_sel_msr),
        .I2(\WB_MEM_Result_reg[30] ),
        .O(MEM_Fwd));
  LUT3 #(
    .INIT(8'hB8)) 
    \wb_MSR_i[30]_i_1 
       (.I0(mem_MSR),
        .I1(wb_piperun),
        .I2(\wb_MSR_i_reg[30] ),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_304
   (ex_MSR,
    \Using_FPGA.Native_0 ,
    sync_reset,
    \Using_FPGA.Native_1 ,
    Clk,
    \Using_FPGA.Native_2 ,
    mem_MSR);
  output [0:0]ex_MSR;
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input \Using_FPGA.Native_1 ;
  input Clk;
  input \Using_FPGA.Native_2 ;
  input [0:0]mem_MSR;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire [0:0]ex_MSR;
  wire [0:0]mem_MSR;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA.Native_1 ),
        .Q(ex_MSR),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__94 
       (.I0(ex_MSR),
        .I1(\Using_FPGA.Native_2 ),
        .I2(mem_MSR),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_305
   (ex_MSR,
    \Using_FPGA.Native_0 ,
    sync_reset,
    \Using_FPGA.Native_1 ,
    Clk,
    \Using_FPGA.Native_2 ,
    mem_MSR);
  output [0:0]ex_MSR;
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input \Using_FPGA.Native_1 ;
  input Clk;
  input \Using_FPGA.Native_2 ;
  input [0:0]mem_MSR;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire [0:0]ex_MSR;
  wire [0:0]mem_MSR;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA.Native_1 ),
        .Q(ex_MSR),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__93 
       (.I0(ex_MSR),
        .I1(\Using_FPGA.Native_2 ),
        .I2(mem_MSR),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDR" *) 
module system_microblaze_0_0__MB_FDR_306
   (ex_MSR,
    \Using_FPGA.Native_0 ,
    sync_reset,
    \Using_FPGA.Native_1 ,
    Clk,
    \Using_FPGA.Native_2 ,
    mem_MSR);
  output [0:0]ex_MSR;
  output \Using_FPGA.Native_0 ;
  input sync_reset;
  input \Using_FPGA.Native_1 ;
  input Clk;
  input \Using_FPGA.Native_2 ;
  input [0:0]mem_MSR;

  wire Clk;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire [0:0]ex_MSR;
  wire [0:0]mem_MSR;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(\Using_FPGA.Native_1 ),
        .Q(ex_MSR),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_1__92 
       (.I0(ex_MSR),
        .I1(\Using_FPGA.Native_2 ),
        .I2(mem_MSR),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_FDS" *) 
module system_microblaze_0_0__MB_FDS
   (\Using_FPGA.Native_0 ,
    I041_out,
    I045_out,
    I049_out,
    I053_out,
    I057_out,
    I061_out,
    I065_out,
    I069_out,
    I073_out,
    I077_out,
    I081_out,
    I085_out,
    I0129_out,
    I0133_out,
    I0137_out,
    I0141_out,
    I0145_out,
    I0149_out,
    I0153_out,
    I0157_out,
    I0161_out,
    I0165_out,
    I0169_out,
    I0125_out,
    I0121_out,
    I0117_out,
    I0113_out,
    I0109_out,
    I0105_out,
    I0101_out,
    I097_out,
    I093_out,
    I089_out,
    I037_out,
    I033_out,
    I029_out,
    I025_out,
    I021_out,
    I017_out,
    I013_out,
    I09_out,
    I05_out,
    I0_0,
    sync_reset,
    sel_input_i_0,
    Clk,
    \Using_FPGA.Native_1 ,
    of_predecode_raw,
    in,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \Using_FPGA.Native_13 ,
    \Using_FPGA.Native_14 ,
    \Using_FPGA.Native_15 ,
    \Using_FPGA.Native_16 ,
    \Using_FPGA.Native_17 ,
    \Using_FPGA.Native_18 ,
    \Using_FPGA.Native_19 ,
    \Using_FPGA.Native_20 ,
    \Using_FPGA.Native_21 ,
    \Using_FPGA.Native_22 ,
    \Using_FPGA.Native_23 ,
    \Using_FPGA.Native_24 ,
    \Using_FPGA.Native_25 ,
    \Using_FPGA.Native_26 ,
    \Using_FPGA.Native_27 ,
    of_gpr_op1_rd_addr,
    \Using_FPGA.Native_28 ,
    \Using_FPGA.Native_29 ,
    \Using_FPGA.Native_30 ,
    \Using_FPGA.Native_31 ,
    \Using_FPGA.Native_32 );
  output \Using_FPGA.Native_0 ;
  output I041_out;
  output I045_out;
  output I049_out;
  output I053_out;
  output I057_out;
  output I061_out;
  output I065_out;
  output I069_out;
  output I073_out;
  output I077_out;
  output I081_out;
  output I085_out;
  output I0129_out;
  output I0133_out;
  output I0137_out;
  output I0141_out;
  output I0145_out;
  output I0149_out;
  output I0153_out;
  output I0157_out;
  output I0161_out;
  output I0165_out;
  output I0169_out;
  output I0125_out;
  output I0121_out;
  output I0117_out;
  output I0113_out;
  output I0109_out;
  output I0105_out;
  output I0101_out;
  output I097_out;
  output I093_out;
  output I089_out;
  output I037_out;
  output I033_out;
  output I029_out;
  output I025_out;
  output I021_out;
  output I017_out;
  output I013_out;
  output I09_out;
  output I05_out;
  output I0_0;
  input sync_reset;
  input sel_input_i_0;
  input Clk;
  input \Using_FPGA.Native_1 ;
  input [0:10]of_predecode_raw;
  input [31:0]in;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input \Using_FPGA.Native_6 ;
  input \Using_FPGA.Native_7 ;
  input \Using_FPGA.Native_8 ;
  input \Using_FPGA.Native_9 ;
  input \Using_FPGA.Native_10 ;
  input \Using_FPGA.Native_11 ;
  input \Using_FPGA.Native_12 ;
  input \Using_FPGA.Native_13 ;
  input \Using_FPGA.Native_14 ;
  input \Using_FPGA.Native_15 ;
  input \Using_FPGA.Native_16 ;
  input \Using_FPGA.Native_17 ;
  input \Using_FPGA.Native_18 ;
  input \Using_FPGA.Native_19 ;
  input \Using_FPGA.Native_20 ;
  input \Using_FPGA.Native_21 ;
  input \Using_FPGA.Native_22 ;
  input \Using_FPGA.Native_23 ;
  input \Using_FPGA.Native_24 ;
  input \Using_FPGA.Native_25 ;
  input \Using_FPGA.Native_26 ;
  input \Using_FPGA.Native_27 ;
  input [0:0]of_gpr_op1_rd_addr;
  input \Using_FPGA.Native_28 ;
  input \Using_FPGA.Native_29 ;
  input \Using_FPGA.Native_30 ;
  input \Using_FPGA.Native_31 ;
  input \Using_FPGA.Native_32 ;

  wire Clk;
  wire I0101_out;
  wire I0105_out;
  wire I0109_out;
  wire I0113_out;
  wire I0117_out;
  wire I0121_out;
  wire I0125_out;
  wire I0129_out;
  wire I0133_out;
  wire I0137_out;
  wire I013_out;
  wire I0141_out;
  wire I0145_out;
  wire I0149_out;
  wire I0153_out;
  wire I0157_out;
  wire I0161_out;
  wire I0165_out;
  wire I0169_out;
  wire I017_out;
  wire I021_out;
  wire I025_out;
  wire I029_out;
  wire I033_out;
  wire I037_out;
  wire I041_out;
  wire I045_out;
  wire I049_out;
  wire I053_out;
  wire I057_out;
  wire I05_out;
  wire I061_out;
  wire I065_out;
  wire I069_out;
  wire I073_out;
  wire I077_out;
  wire I081_out;
  wire I085_out;
  wire I089_out;
  wire I093_out;
  wire I097_out;
  wire I09_out;
  wire I0_0;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_16 ;
  wire \Using_FPGA.Native_17 ;
  wire \Using_FPGA.Native_18 ;
  wire \Using_FPGA.Native_19 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_20 ;
  wire \Using_FPGA.Native_21 ;
  wire \Using_FPGA.Native_22 ;
  wire \Using_FPGA.Native_23 ;
  wire \Using_FPGA.Native_24 ;
  wire \Using_FPGA.Native_25 ;
  wire \Using_FPGA.Native_26 ;
  wire \Using_FPGA.Native_27 ;
  wire \Using_FPGA.Native_28 ;
  wire \Using_FPGA.Native_29 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_30 ;
  wire \Using_FPGA.Native_31 ;
  wire \Using_FPGA.Native_32 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire [31:0]in;
  wire [0:0]of_gpr_op1_rd_addr;
  wire [0:10]of_predecode_raw;
  wire sel_input_i_0;
  wire sync_reset;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDS" *) 
  FDSE #(
    .INIT(1'b1)) 
    \Using_FPGA.Native 
       (.C(Clk),
        .CE(1'b1),
        .D(sel_input_i_0),
        .Q(\Using_FPGA.Native_0 ),
        .S(sync_reset));
  LUT6 #(
    .INIT(64'hF870707070707070)) 
    \Using_FPGA.Native_i_1__105 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(of_predecode_raw[0]),
        .I3(in[31]),
        .I4(in[30]),
        .I5(in[28]),
        .O(I041_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__106 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_2 ),
        .I3(in[10]),
        .O(I045_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__107 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_3 ),
        .I3(in[11]),
        .O(I049_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__108 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_4 ),
        .I3(in[12]),
        .O(I053_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__109 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_5 ),
        .I3(in[13]),
        .O(I057_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__110 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_6 ),
        .I3(in[14]),
        .O(I061_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__111 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_7 ),
        .I3(in[15]),
        .O(I065_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__112 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_8 ),
        .I3(in[16]),
        .O(I069_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__113 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_9 ),
        .I3(in[17]),
        .O(I073_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__114 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_10 ),
        .I3(in[18]),
        .O(I077_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__115 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_11 ),
        .I3(in[19]),
        .O(I081_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__116 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_12 ),
        .I3(in[20]),
        .O(I085_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__117 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_13 ),
        .I3(in[21]),
        .O(I0129_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__118 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_14 ),
        .I3(in[22]),
        .O(I0133_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__119 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_15 ),
        .I3(in[23]),
        .O(I0137_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__120 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_16 ),
        .I3(in[24]),
        .O(I0141_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__121 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_17 ),
        .I3(in[25]),
        .O(I0145_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__122 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_18 ),
        .I3(in[26]),
        .O(I0149_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__123 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_19 ),
        .I3(in[27]),
        .O(I0153_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__124 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_20 ),
        .I3(in[28]),
        .O(I0157_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__125 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_21 ),
        .I3(in[29]),
        .O(I0161_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__126 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_22 ),
        .I3(in[30]),
        .O(I0165_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__127 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_23 ),
        .I3(in[31]),
        .O(I0169_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__160 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_24 ),
        .I3(in[9]),
        .O(I0125_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__161 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_25 ),
        .I3(in[8]),
        .O(I0121_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__162 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_26 ),
        .I3(in[7]),
        .O(I0117_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__163 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_27 ),
        .I3(in[6]),
        .O(I0113_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__164 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(of_gpr_op1_rd_addr),
        .I3(in[5]),
        .O(I0109_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__165 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_28 ),
        .I3(in[4]),
        .O(I0105_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__166 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_29 ),
        .I3(in[3]),
        .O(I0101_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__167 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_30 ),
        .I3(in[2]),
        .O(I097_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__168 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_31 ),
        .I3(in[1]),
        .O(I093_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__169 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_32 ),
        .I3(in[0]),
        .O(I089_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__170 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(of_predecode_raw[1]),
        .I3(in[9]),
        .O(I037_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__171 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(of_predecode_raw[2]),
        .I3(in[8]),
        .O(I033_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__172 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(of_predecode_raw[3]),
        .I3(in[7]),
        .O(I029_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__173 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(of_predecode_raw[4]),
        .I3(in[6]),
        .O(I025_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__174 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(of_predecode_raw[5]),
        .I3(in[5]),
        .O(I021_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__175 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(of_predecode_raw[6]),
        .I3(in[4]),
        .O(I017_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__176 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(of_predecode_raw[7]),
        .I3(in[3]),
        .O(I013_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__177 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(of_predecode_raw[8]),
        .I3(in[2]),
        .O(I09_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__178 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(of_predecode_raw[9]),
        .I3(in[1]),
        .O(I05_out));
  LUT4 #(
    .INIT(16'hF870)) 
    \Using_FPGA.Native_i_1__179 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(of_predecode_raw[10]),
        .I3(in[0]),
        .O(I0_0));
endmodule

(* ORIG_REF_NAME = "MB_LUT4" *) 
module system_microblaze_0_0__MB_LUT4
   (S,
    Q,
    \MEM_DataBus_Addr_reg[0] ,
    I2,
    alu_AddSub_1);
  output S;
  input [0:0]Q;
  input [0:0]\MEM_DataBus_Addr_reg[0] ;
  input I2;
  input alu_AddSub_1;

  wire I2;
  wire [0:0]Q;
  wire S;
  wire alu_AddSub_1;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(I2),
        .I2(alu_AddSub_1),
        .O(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module system_microblaze_0_0__MB_LUT6
   (sel_input_iii_3,
    if_sel_input,
    addr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    I5);
  output sel_input_iii_3;
  input [0:0]if_sel_input;
  input [0:0]addr;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input I5;

  wire I5;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]addr;
  wire [0:0]if_sel_input;
  wire sel_input_iii_3;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT5 #(
    .INIT(32'h0000C0AC)) 
    \Using_FPGA.Native 
       (.I0(if_sel_input),
        .I1(addr),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(I5),
        .O(sel_input_iii_3));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module system_microblaze_0_0__MB_LUT6_114
   (sel_input_iii_2,
    if_sel_input,
    addr,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    I5);
  output sel_input_iii_2;
  input [1:0]if_sel_input;
  input [0:0]addr;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input I5;

  wire I5;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]addr;
  wire [1:0]if_sel_input;
  wire sel_input_iii_2;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00000000CCF0AACC)) 
    \Using_FPGA.Native 
       (.I0(if_sel_input[0]),
        .I1(if_sel_input[1]),
        .I2(addr),
        .I3(\Using_FPGA.Native_0 ),
        .I4(\Using_FPGA.Native_1 ),
        .I5(I5),
        .O(sel_input_iii_2));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module system_microblaze_0_0__MB_LUT6_116
   (sel_input_iii_1,
    \Using_FPGA.Native_0 ,
    if_sel_input,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    I5);
  output sel_input_iii_1;
  input \Using_FPGA.Native_0 ;
  input [1:0]if_sel_input;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input I5;

  wire I5;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire [1:0]if_sel_input;
  wire sel_input_iii_1;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00000000CCF0AACC)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(if_sel_input[0]),
        .I2(if_sel_input[1]),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(I5),
        .O(sel_input_iii_1));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module system_microblaze_0_0__MB_LUT6_118
   (sel_input_iii_0,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    if_sel_input,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    I5);
  output sel_input_iii_0;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input I5;

  wire I5;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire [0:0]if_sel_input;
  wire sel_input_iii_0;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00000000CCF0AACC)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(if_sel_input),
        .I3(\Using_FPGA.Native_2 ),
        .I4(\Using_FPGA.Native_3 ),
        .I5(I5),
        .O(sel_input_iii_0));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[9] ,
    \MEM_DataBus_Addr_reg[9]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[9] ;
  input [0:0]\MEM_DataBus_Addr_reg[9]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[9] ;
  wire [0:0]\MEM_DataBus_Addr_reg[9]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[9] [1]),
        .I2(\MEM_DataBus_Addr_reg[9]_0 ),
        .I3(\MEM_DataBus_Addr_reg[9] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_521
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[8] ,
    \MEM_DataBus_Addr_reg[8]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[8] ;
  input [0:0]\MEM_DataBus_Addr_reg[8]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[8] ;
  wire [0:0]\MEM_DataBus_Addr_reg[8]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[8] [1]),
        .I2(\MEM_DataBus_Addr_reg[8]_0 ),
        .I3(\MEM_DataBus_Addr_reg[8] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_523
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[7] ,
    \MEM_DataBus_Addr_reg[7]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[7] ;
  input [0:0]\MEM_DataBus_Addr_reg[7]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[7] ;
  wire [0:0]\MEM_DataBus_Addr_reg[7]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[7] [1]),
        .I2(\MEM_DataBus_Addr_reg[7]_0 ),
        .I3(\MEM_DataBus_Addr_reg[7] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_525
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[6] ,
    \MEM_DataBus_Addr_reg[6]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[6] ;
  input [0:0]\MEM_DataBus_Addr_reg[6]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[6] ;
  wire [0:0]\MEM_DataBus_Addr_reg[6]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[6] [1]),
        .I2(\MEM_DataBus_Addr_reg[6]_0 ),
        .I3(\MEM_DataBus_Addr_reg[6] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_527
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[5] ,
    \MEM_DataBus_Addr_reg[5]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[5] ;
  input [0:0]\MEM_DataBus_Addr_reg[5]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[5] ;
  wire [0:0]\MEM_DataBus_Addr_reg[5]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[5] [1]),
        .I2(\MEM_DataBus_Addr_reg[5]_0 ),
        .I3(\MEM_DataBus_Addr_reg[5] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_529
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[4] ,
    \MEM_DataBus_Addr_reg[4]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[4] ;
  input [0:0]\MEM_DataBus_Addr_reg[4]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[4] ;
  wire [0:0]\MEM_DataBus_Addr_reg[4]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[4] [1]),
        .I2(\MEM_DataBus_Addr_reg[4]_0 ),
        .I3(\MEM_DataBus_Addr_reg[4] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_531
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[3] ,
    \MEM_DataBus_Addr_reg[3]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[3] ;
  input [0:0]\MEM_DataBus_Addr_reg[3]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[3] ;
  wire [0:0]\MEM_DataBus_Addr_reg[3]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[3] [1]),
        .I2(\MEM_DataBus_Addr_reg[3]_0 ),
        .I3(\MEM_DataBus_Addr_reg[3] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_533
   (DI,
    S,
    Q,
    \Using_FPGA.Native_I2 ,
    \Using_FPGA.Native_I2_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\Using_FPGA.Native_I2 ;
  input [0:0]\Using_FPGA.Native_I2_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]Q;
  wire S;
  wire [1:0]\Using_FPGA.Native_I2 ;
  wire [0:0]\Using_FPGA.Native_I2_0 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\Using_FPGA.Native_I2 [1]),
        .I2(\Using_FPGA.Native_I2_0 ),
        .I3(\Using_FPGA.Native_I2 [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_535
   (DI,
    S,
    Q,
    \Using_FPGA.Native_I2 ,
    \Using_FPGA.Native_I2_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\Using_FPGA.Native_I2 ;
  input [0:0]\Using_FPGA.Native_I2_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]Q;
  wire S;
  wire [1:0]\Using_FPGA.Native_I2 ;
  wire [0:0]\Using_FPGA.Native_I2_0 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\Using_FPGA.Native_I2 [1]),
        .I2(\Using_FPGA.Native_I2_0 ),
        .I3(\Using_FPGA.Native_I2 [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_537
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[2] ,
    \MEM_DataBus_Addr_reg[2]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[2] ;
  input [0:0]\MEM_DataBus_Addr_reg[2]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[2] ;
  wire [0:0]\MEM_DataBus_Addr_reg[2]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[2] [1]),
        .I2(\MEM_DataBus_Addr_reg[2]_0 ),
        .I3(\MEM_DataBus_Addr_reg[2] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_539
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[29] ,
    \MEM_DataBus_Addr_reg[29]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[29] ;
  input [0:0]\MEM_DataBus_Addr_reg[29]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[29] ;
  wire [0:0]\MEM_DataBus_Addr_reg[29]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[29] [1]),
        .I2(\MEM_DataBus_Addr_reg[29]_0 ),
        .I3(\MEM_DataBus_Addr_reg[29] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_541
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[28] ,
    \MEM_DataBus_Addr_reg[28]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[28] ;
  input [0:0]\MEM_DataBus_Addr_reg[28]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[28] ;
  wire [0:0]\MEM_DataBus_Addr_reg[28]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[28] [1]),
        .I2(\MEM_DataBus_Addr_reg[28]_0 ),
        .I3(\MEM_DataBus_Addr_reg[28] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_543
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[27] ,
    \MEM_DataBus_Addr_reg[27]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[27] ;
  input [0:0]\MEM_DataBus_Addr_reg[27]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[27] ;
  wire [0:0]\MEM_DataBus_Addr_reg[27]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[27] [1]),
        .I2(\MEM_DataBus_Addr_reg[27]_0 ),
        .I3(\MEM_DataBus_Addr_reg[27] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_545
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[26] ,
    \MEM_DataBus_Addr_reg[26]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[26] ;
  input [0:0]\MEM_DataBus_Addr_reg[26]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[26] ;
  wire [0:0]\MEM_DataBus_Addr_reg[26]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[26] [1]),
        .I2(\MEM_DataBus_Addr_reg[26]_0 ),
        .I3(\MEM_DataBus_Addr_reg[26] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_547
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[25] ,
    \MEM_DataBus_Addr_reg[25]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[25] ;
  input [0:0]\MEM_DataBus_Addr_reg[25]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[25] ;
  wire [0:0]\MEM_DataBus_Addr_reg[25]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[25] [1]),
        .I2(\MEM_DataBus_Addr_reg[25]_0 ),
        .I3(\MEM_DataBus_Addr_reg[25] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_549
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[24] ,
    \MEM_DataBus_Addr_reg[24]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[24] ;
  input [0:0]\MEM_DataBus_Addr_reg[24]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[24] ;
  wire [0:0]\MEM_DataBus_Addr_reg[24]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[24] [1]),
        .I2(\MEM_DataBus_Addr_reg[24]_0 ),
        .I3(\MEM_DataBus_Addr_reg[24] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_551
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[23] ,
    \MEM_DataBus_Addr_reg[23]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[23] ;
  input [0:0]\MEM_DataBus_Addr_reg[23]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[23] ;
  wire [0:0]\MEM_DataBus_Addr_reg[23]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[23] [1]),
        .I2(\MEM_DataBus_Addr_reg[23]_0 ),
        .I3(\MEM_DataBus_Addr_reg[23] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_553
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[22] ,
    \MEM_DataBus_Addr_reg[22]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[22] ;
  input [0:0]\MEM_DataBus_Addr_reg[22]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[22] ;
  wire [0:0]\MEM_DataBus_Addr_reg[22]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[22] [1]),
        .I2(\MEM_DataBus_Addr_reg[22]_0 ),
        .I3(\MEM_DataBus_Addr_reg[22] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_555
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[21] ,
    \MEM_DataBus_Addr_reg[21]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[21] ;
  input [0:0]\MEM_DataBus_Addr_reg[21]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[21] ;
  wire [0:0]\MEM_DataBus_Addr_reg[21]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[21] [1]),
        .I2(\MEM_DataBus_Addr_reg[21]_0 ),
        .I3(\MEM_DataBus_Addr_reg[21] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_557
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[20] ,
    \MEM_DataBus_Addr_reg[20]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[20] ;
  input [0:0]\MEM_DataBus_Addr_reg[20]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[20] ;
  wire [0:0]\MEM_DataBus_Addr_reg[20]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[20] [1]),
        .I2(\MEM_DataBus_Addr_reg[20]_0 ),
        .I3(\MEM_DataBus_Addr_reg[20] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_559
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[1] ,
    \MEM_DataBus_Addr_reg[1]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[1] ;
  input [0:0]\MEM_DataBus_Addr_reg[1]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[1] ;
  wire [0:0]\MEM_DataBus_Addr_reg[1]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[1] [1]),
        .I2(\MEM_DataBus_Addr_reg[1]_0 ),
        .I3(\MEM_DataBus_Addr_reg[1] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_561
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[19] ,
    \MEM_DataBus_Addr_reg[19]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[19] ;
  input [0:0]\MEM_DataBus_Addr_reg[19]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[19] ;
  wire [0:0]\MEM_DataBus_Addr_reg[19]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[19] [1]),
        .I2(\MEM_DataBus_Addr_reg[19]_0 ),
        .I3(\MEM_DataBus_Addr_reg[19] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_563
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[18] ,
    \MEM_DataBus_Addr_reg[18]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[18] ;
  input [0:0]\MEM_DataBus_Addr_reg[18]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[18] ;
  wire [0:0]\MEM_DataBus_Addr_reg[18]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[18] [1]),
        .I2(\MEM_DataBus_Addr_reg[18]_0 ),
        .I3(\MEM_DataBus_Addr_reg[18] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_565
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[17] ,
    \MEM_DataBus_Addr_reg[17]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[17] ;
  input [0:0]\MEM_DataBus_Addr_reg[17]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[17] ;
  wire [0:0]\MEM_DataBus_Addr_reg[17]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[17] [1]),
        .I2(\MEM_DataBus_Addr_reg[17]_0 ),
        .I3(\MEM_DataBus_Addr_reg[17] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_567
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[16] ,
    \MEM_DataBus_Addr_reg[16]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[16] ;
  input [0:0]\MEM_DataBus_Addr_reg[16]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[16] ;
  wire [0:0]\MEM_DataBus_Addr_reg[16]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[16] [1]),
        .I2(\MEM_DataBus_Addr_reg[16]_0 ),
        .I3(\MEM_DataBus_Addr_reg[16] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_569
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[15] ,
    \MEM_DataBus_Addr_reg[15]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[15] ;
  input [0:0]\MEM_DataBus_Addr_reg[15]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[15] ;
  wire [0:0]\MEM_DataBus_Addr_reg[15]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[15] [1]),
        .I2(\MEM_DataBus_Addr_reg[15]_0 ),
        .I3(\MEM_DataBus_Addr_reg[15] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_571
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[14] ,
    \MEM_DataBus_Addr_reg[14]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[14] ;
  input [0:0]\MEM_DataBus_Addr_reg[14]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[14] ;
  wire [0:0]\MEM_DataBus_Addr_reg[14]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[14] [1]),
        .I2(\MEM_DataBus_Addr_reg[14]_0 ),
        .I3(\MEM_DataBus_Addr_reg[14] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_573
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[13] ,
    \MEM_DataBus_Addr_reg[13]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[13] ;
  input [0:0]\MEM_DataBus_Addr_reg[13]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[13] ;
  wire [0:0]\MEM_DataBus_Addr_reg[13]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[13] [1]),
        .I2(\MEM_DataBus_Addr_reg[13]_0 ),
        .I3(\MEM_DataBus_Addr_reg[13] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_575
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[12] ,
    \MEM_DataBus_Addr_reg[12]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[12] ;
  input [0:0]\MEM_DataBus_Addr_reg[12]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[12] ;
  wire [0:0]\MEM_DataBus_Addr_reg[12]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[12] [1]),
        .I2(\MEM_DataBus_Addr_reg[12]_0 ),
        .I3(\MEM_DataBus_Addr_reg[12] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_577
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[11] ,
    \MEM_DataBus_Addr_reg[11]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[11] ;
  input [0:0]\MEM_DataBus_Addr_reg[11]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[11] ;
  wire [0:0]\MEM_DataBus_Addr_reg[11]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[11] [1]),
        .I2(\MEM_DataBus_Addr_reg[11]_0 ),
        .I3(\MEM_DataBus_Addr_reg[11] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2_579
   (DI,
    S,
    Q,
    \MEM_DataBus_Addr_reg[10] ,
    \MEM_DataBus_Addr_reg[10]_0 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output DI;
  output S;
  input [0:0]Q;
  input [1:0]\MEM_DataBus_Addr_reg[10] ;
  input [0:0]\MEM_DataBus_Addr_reg[10]_0 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire DI;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [1:0]\MEM_DataBus_Addr_reg[10] ;
  wire [0:0]\MEM_DataBus_Addr_reg[10]_0 ;
  wire [0:0]Q;
  wire S;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\MEM_DataBus_Addr_reg[10] [1]),
        .I2(\MEM_DataBus_Addr_reg[10]_0 ),
        .I3(\MEM_DataBus_Addr_reg[10] [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O5(DI),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized1
   (muxcy_di,
    muxcy_sel);
  output muxcy_di;
  output muxcy_sel;

  wire ONE;
  wire ZERO;

  assign muxcy_di = ZERO;
  assign muxcy_sel = ONE;
  (* OPT_MODIFIED = "PROPCONST" *) 
  GND GND_1
       (.G(ZERO));
  (* OPT_MODIFIED = "PROPCONST" *) 
  VCC VCC_1
       (.P(ONE));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized3
   (Y,
    I139_out,
    in,
    Instr,
    LOCKSTEP_Master_Out,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 );
  output [1:0]Y;
  output I139_out;
  output [0:0]in;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input [1:0]\Using_FPGA.Native_2 ;

  wire I139_out;
  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire [1:0]\Using_FPGA.Native_2 ;
  wire [1:0]Y;
  wire [0:0]in;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
  LUT5 #(
    .INIT(32'hE2222222)) 
    \Using_FPGA.Native_i_2__58 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Y[1]),
        .I3(\Using_FPGA.Native_2 [1]),
        .I4(\Using_FPGA.Native_2 [0]),
        .O(I139_out));
  LUT3 #(
    .INIT(8'h80)) 
    \ibuffer_reg[2][32]_srl3_i_1 
       (.I0(Y[1]),
        .I1(\Using_FPGA.Native_2 [1]),
        .I2(\Using_FPGA.Native_2 [0]),
        .O(in));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized3_10
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized3_11
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized3_12
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized3_13
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized3_14
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized3_15
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized3_16
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized3_2
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized3_3
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized3_4
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized3_5
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized3_6
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized3_7
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized3_8
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized3_9
   (Y,
    Instr,
    LOCKSTEP_Master_Out);
  output [1:0]Y;
  input [1:0]Instr;
  input [2:0]LOCKSTEP_Master_Out;

  wire [1:0]Instr;
  wire [2:0]LOCKSTEP_Master_Out;
  wire [1:0]Y;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'hFF00F0F0CCCCAAAA)) 
    \Using_FPGA.Native 
       (.I0(Instr[1]),
        .I1(LOCKSTEP_Master_Out[1]),
        .I2(Instr[0]),
        .I3(LOCKSTEP_Master_Out[0]),
        .I4(LOCKSTEP_Master_Out[2]),
        .I5(1'b1),
        .O5(Y[1]),
        .O6(Y[0]));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5
   (\Using_FPGA.Native_0 ,
    addr_AddSub_31,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output addr_AddSub_31;
  input [0:0]\Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire addr_AddSub_31;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(addr_AddSub_31));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_310
   (\Using_FPGA.Native_0 ,
    S,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output S;
  input \Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_313
   (\Using_FPGA.Native_0 ,
    S,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output S;
  input \Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_316
   (\Using_FPGA.Native_0 ,
    S,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output S;
  input \Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_319
   (\Using_FPGA.Native_0 ,
    S,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output S;
  input \Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_322
   (\Using_FPGA.Native_0 ,
    S,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output S;
  input \Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_325
   (\Using_FPGA.Native_0 ,
    S,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output S;
  input \Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_328
   (\Using_FPGA.Native_0 ,
    S,
    DI,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 );
  output \Using_FPGA.Native_0 ;
  output S;
  input DI;
  input [0:0]\Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;

  wire DI;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .I4(\Using_FPGA.Native_3 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_331
   (\Using_FPGA.Native_0 ,
    S,
    DI,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 );
  output \Using_FPGA.Native_0 ;
  output S;
  input DI;
  input [0:0]\Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;

  wire DI;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .I4(\Using_FPGA.Native_3 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_334
   (\Using_FPGA.Native_0 ,
    S,
    DI,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 );
  output \Using_FPGA.Native_0 ;
  output S;
  input DI;
  input [0:0]\Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;

  wire DI;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .I4(\Using_FPGA.Native_3 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_337
   (\Using_FPGA.Native_0 ,
    S,
    DI,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 );
  output \Using_FPGA.Native_0 ;
  output S;
  input DI;
  input [0:0]\Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;

  wire DI;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .I4(\Using_FPGA.Native_3 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_340
   (\Using_FPGA.Native_0 ,
    S,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output S;
  input \Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_343
   (\Using_FPGA.Native_0 ,
    S,
    DI,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 );
  output \Using_FPGA.Native_0 ;
  output S;
  input DI;
  input [0:0]\Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;

  wire DI;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .I4(\Using_FPGA.Native_3 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_346
   (\Using_FPGA.Native_0 ,
    S,
    DI,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 );
  output \Using_FPGA.Native_0 ;
  output S;
  input DI;
  input [0:0]\Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;

  wire DI;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .I4(\Using_FPGA.Native_3 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_349
   (\Using_FPGA.Native_0 ,
    S,
    DI,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 );
  output \Using_FPGA.Native_0 ;
  output S;
  input DI;
  input [0:0]\Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;

  wire DI;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .I4(\Using_FPGA.Native_3 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_352
   (\Using_FPGA.Native_0 ,
    S,
    DI,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 );
  output \Using_FPGA.Native_0 ;
  output S;
  input DI;
  input [0:0]\Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;

  wire DI;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_2 ),
        .I4(\Using_FPGA.Native_3 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_355
   (\Using_FPGA.Native_0 ,
    S,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output S;
  input \Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_358
   (\Using_FPGA.Native_0 ,
    S,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output S;
  input \Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_361
   (\Using_FPGA.Native_0 ,
    S,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output S;
  input \Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_364
   (\Using_FPGA.Native_0 ,
    S,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output S;
  input \Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_367
   (\Using_FPGA.Native_0 ,
    S,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output S;
  input \Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_370
   (\Using_FPGA.Native_0 ,
    S,
    \Using_FPGA.Native_1 ,
    I1_1,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output S;
  input \Using_FPGA.Native_1 ;
  input I1_1;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire I1_1;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT6_2 #(
    .INIT(64'h69696969FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(I1_1),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_373
   (\Using_FPGA.Native_0 ,
    S,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output S;
  input \Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_376
   (\Using_FPGA.Native_0 ,
    S,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output S;
  input \Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_379
   (O5,
    S,
    DI,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 );
  output O5;
  output S;
  input DI;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;

  wire DI;
  wire O5;
  wire S;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(DI),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_0 ),
        .I3(\Using_FPGA.Native_1 ),
        .I4(\Using_FPGA.Native_2 ),
        .I5(1'b1),
        .O5(O5),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_382
   (\Using_FPGA.Native_0 ,
    S,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output S;
  input \Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_385
   (\Using_FPGA.Native_0 ,
    S,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output S;
  input \Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_388
   (\Using_FPGA.Native_0 ,
    S,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output S;
  input \Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_391
   (\Using_FPGA.Native_0 ,
    S,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output S;
  input \Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_394
   (\Using_FPGA.Native_0 ,
    S,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output S;
  input \Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_397
   (\Using_FPGA.Native_0 ,
    S,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output S;
  input \Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6_2" *) 
module system_microblaze_0_0__MB_LUT6_2__parameterized5_400
   (\Using_FPGA.Native_0 ,
    S,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 );
  output \Using_FPGA.Native_0 ;
  output S;
  input \Using_FPGA.Native_1 ;
  input [0:0]\Using_FPGA.Native_2 ;
  input [0:0]\Using_FPGA.Native_3 ;
  input \Using_FPGA.Native_4 ;

  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  wire [0:0]\Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6_2 #(
    .INIT(64'h96969696FF00AAAA)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_1 ),
        .I1(1'b0),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(\Using_FPGA.Native_4 ),
        .I5(1'b1),
        .O5(\Using_FPGA.Native_0 ),
        .O6(S));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module system_microblaze_0_0__MB_LUT6__parameterized10
   (A,
    I0,
    of_predecode_raw,
    D,
    \Using_FPGA.Native_i_1__59_0 ,
    \Using_FPGA.Native_i_1__59_1 ,
    ex_is_multi_or_load_instr,
    O);
  output A;
  input I0;
  input [1:0]of_predecode_raw;
  input [0:0]D;
  input \Using_FPGA.Native_i_1__59_0 ;
  input \Using_FPGA.Native_i_1__59_1 ;
  input ex_is_multi_or_load_instr;
  input O;

  wire A;
  wire [0:0]D;
  wire I0;
  wire O;
  wire \Using_FPGA.Native_i_1__59_0 ;
  wire \Using_FPGA.Native_i_1__59_1 ;
  wire ex_is_multi_or_load_instr;
  wire [1:0]of_predecode_raw;
  wire of_read_ex_write_op1_conflict_part2;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \Using_FPGA.Native 
       (.I0(I0),
        .I1(of_predecode_raw[1]),
        .I2(D),
        .I3(of_predecode_raw[0]),
        .I4(\Using_FPGA.Native_i_1__59_0 ),
        .I5(\Using_FPGA.Native_i_1__59_1 ),
        .O(of_read_ex_write_op1_conflict_part2));
  LUT3 #(
    .INIT(8'h7F)) 
    \Using_FPGA.Native_i_1__59 
       (.I0(of_read_ex_write_op1_conflict_part2),
        .I1(ex_is_multi_or_load_instr),
        .I2(O),
        .O(A));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module system_microblaze_0_0__MB_LUT6__parameterized10_77
   (of_read_ex_write_op2_conflict_part2,
    I0,
    of_predecode_raw,
    D,
    \Using_FPGA.Native_i_1__11 ,
    \Using_FPGA.Native_i_1__11_0 );
  output of_read_ex_write_op2_conflict_part2;
  input I0;
  input [1:0]of_predecode_raw;
  input [0:0]D;
  input \Using_FPGA.Native_i_1__11 ;
  input \Using_FPGA.Native_i_1__11_0 ;

  wire [0:0]D;
  wire I0;
  wire \Using_FPGA.Native_i_1__11 ;
  wire \Using_FPGA.Native_i_1__11_0 ;
  wire [1:0]of_predecode_raw;
  wire of_read_ex_write_op2_conflict_part2;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \Using_FPGA.Native 
       (.I0(I0),
        .I1(of_predecode_raw[1]),
        .I2(D),
        .I3(of_predecode_raw[0]),
        .I4(\Using_FPGA.Native_i_1__11 ),
        .I5(\Using_FPGA.Native_i_1__11_0 ),
        .O(of_read_ex_write_op2_conflict_part2));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module system_microblaze_0_0__MB_LUT6__parameterized10_79
   (of_read_ex_write_op3_conflict_part2,
    I0,
    \Using_FPGA.Native_i_1__57 ,
    D,
    \Using_FPGA.Native_i_1__57_0 ,
    \Using_FPGA.Native_i_1__57_1 ,
    \Using_FPGA.Native_i_1__57_2 );
  output of_read_ex_write_op3_conflict_part2;
  input I0;
  input \Using_FPGA.Native_i_1__57 ;
  input [0:0]D;
  input \Using_FPGA.Native_i_1__57_0 ;
  input \Using_FPGA.Native_i_1__57_1 ;
  input \Using_FPGA.Native_i_1__57_2 ;

  wire [0:0]D;
  wire I0;
  wire \Using_FPGA.Native_i_1__57 ;
  wire \Using_FPGA.Native_i_1__57_0 ;
  wire \Using_FPGA.Native_i_1__57_1 ;
  wire \Using_FPGA.Native_i_1__57_2 ;
  wire of_read_ex_write_op3_conflict_part2;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \Using_FPGA.Native 
       (.I0(I0),
        .I1(\Using_FPGA.Native_i_1__57 ),
        .I2(D),
        .I3(\Using_FPGA.Native_i_1__57_0 ),
        .I4(\Using_FPGA.Native_i_1__57_1 ),
        .I5(\Using_FPGA.Native_i_1__57_2 ),
        .O(of_read_ex_write_op3_conflict_part2));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module system_microblaze_0_0__MB_LUT6__parameterized10_81
   (mem_is_multi_or_load_instr_reg,
    Q,
    of_predecode_raw,
    mem_gpr_write,
    mem_valid_instr,
    mem_is_multi_or_load_instr,
    of_read_mem_write_op1_conflict_part1);
  output mem_is_multi_or_load_instr_reg;
  input [1:0]Q;
  input [1:0]of_predecode_raw;
  input mem_gpr_write;
  input mem_valid_instr;
  input mem_is_multi_or_load_instr;
  input of_read_mem_write_op1_conflict_part1;

  wire [1:0]Q;
  wire mem_gpr_write;
  wire mem_is_multi_or_load_instr;
  wire mem_is_multi_or_load_instr_reg;
  wire mem_valid_instr;
  wire [1:0]of_predecode_raw;
  wire of_read_mem_write_op1_conflict_part1;
  wire of_read_mem_write_op1_conflict_part2;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \Using_FPGA.Native 
       (.I0(Q[1]),
        .I1(of_predecode_raw[1]),
        .I2(Q[0]),
        .I3(of_predecode_raw[0]),
        .I4(mem_gpr_write),
        .I5(mem_valid_instr),
        .O(of_read_mem_write_op1_conflict_part2));
  LUT3 #(
    .INIT(8'h7F)) 
    \Using_FPGA.Native_i_1__58 
       (.I0(of_read_mem_write_op1_conflict_part2),
        .I1(mem_is_multi_or_load_instr),
        .I2(of_read_mem_write_op1_conflict_part1),
        .O(mem_is_multi_or_load_instr_reg));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module system_microblaze_0_0__MB_LUT6__parameterized10_83
   (of_read_mem_write_op2_conflict_part2,
    Q,
    of_predecode_raw,
    mem_gpr_write,
    mem_valid_instr);
  output of_read_mem_write_op2_conflict_part2;
  input [1:0]Q;
  input [1:0]of_predecode_raw;
  input mem_gpr_write;
  input mem_valid_instr;

  wire [1:0]Q;
  wire mem_gpr_write;
  wire mem_valid_instr;
  wire [1:0]of_predecode_raw;
  wire of_read_mem_write_op2_conflict_part2;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \Using_FPGA.Native 
       (.I0(Q[1]),
        .I1(of_predecode_raw[1]),
        .I2(Q[0]),
        .I3(of_predecode_raw[0]),
        .I4(mem_gpr_write),
        .I5(mem_valid_instr),
        .O(of_read_mem_write_op2_conflict_part2));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module system_microblaze_0_0__MB_LUT6__parameterized10_85
   (of_read_mem_write_op3_conflict_part2,
    Q,
    \Using_FPGA.Native_i_1__56 ,
    \Using_FPGA.Native_i_1__56_0 ,
    mem_gpr_write,
    mem_valid_instr);
  output of_read_mem_write_op3_conflict_part2;
  input [1:0]Q;
  input \Using_FPGA.Native_i_1__56 ;
  input \Using_FPGA.Native_i_1__56_0 ;
  input mem_gpr_write;
  input mem_valid_instr;

  wire [1:0]Q;
  wire \Using_FPGA.Native_i_1__56 ;
  wire \Using_FPGA.Native_i_1__56_0 ;
  wire mem_gpr_write;
  wire mem_valid_instr;
  wire of_read_mem_write_op3_conflict_part2;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000000000)) 
    \Using_FPGA.Native 
       (.I0(Q[1]),
        .I1(\Using_FPGA.Native_i_1__56 ),
        .I2(Q[0]),
        .I3(\Using_FPGA.Native_i_1__56_0 ),
        .I4(mem_gpr_write),
        .I5(mem_valid_instr),
        .O(of_read_mem_write_op3_conflict_part2));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module system_microblaze_0_0__MB_LUT6__parameterized12
   (alu_AddSub_1,
    Q,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    EX_ALU_Sel_Logic,
    EX_Enable_ALU);
  output alu_AddSub_1;
  input [0:0]Q;
  input [1:0]\Using_FPGA.Native_0 ;
  input [0:0]\Using_FPGA.Native_1 ;
  input EX_ALU_Sel_Logic;
  input EX_Enable_ALU;

  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:0]Q;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire [0:0]\Using_FPGA.Native_1 ;
  wire alu_AddSub_1;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h607AA67800008888)) 
    \Using_FPGA.Native 
       (.I0(Q),
        .I1(\Using_FPGA.Native_0 [1]),
        .I2(\Using_FPGA.Native_1 ),
        .I3(\Using_FPGA.Native_0 [0]),
        .I4(EX_ALU_Sel_Logic),
        .I5(EX_Enable_ALU),
        .O(alu_AddSub_1));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module system_microblaze_0_0__MB_LUT6__parameterized2
   (sel_input_delayslot,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    if_sel_input,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    I5);
  output sel_input_delayslot;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input [0:0]if_sel_input;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input I5;

  wire I5;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire [0:0]if_sel_input;
  wire sel_input_delayslot;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h0000FFFFCCF0AACC)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(if_sel_input),
        .I3(\Using_FPGA.Native_2 ),
        .I4(\Using_FPGA.Native_3 ),
        .I5(I5),
        .O(sel_input_delayslot));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module system_microblaze_0_0__MB_LUT6__parameterized4
   (sel_input_i_0,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    S,
    I5);
  output sel_input_i_0;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input S;
  input I5;

  wire I5;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire sel_input_i_0;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'hFF00FFFFAE0AAE0A)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(S),
        .I5(I5),
        .O(sel_input_i_0));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module system_microblaze_0_0__MB_LUT6__parameterized6
   (of_Valid_II,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    S,
    I5);
  output of_Valid_II;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input S;
  input I5;

  wire I5;
  wire S;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire of_Valid_II;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h00FF000051F551F5)) 
    \Using_FPGA.Native 
       (.I0(\Using_FPGA.Native_0 ),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(S),
        .I5(I5),
        .O(of_Valid_II));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module system_microblaze_0_0__MB_LUT6__parameterized8
   (O,
    D,
    of_predecode_raw);
  output O;
  input [2:0]D;
  input [2:0]of_predecode_raw;

  wire [2:0]D;
  wire O;
  wire [2:0]of_predecode_raw;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native 
       (.I0(D[2]),
        .I1(of_predecode_raw[2]),
        .I2(D[1]),
        .I3(of_predecode_raw[1]),
        .I4(D[0]),
        .I5(of_predecode_raw[0]),
        .O(O));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module system_microblaze_0_0__MB_LUT6__parameterized8_76
   (ex_is_multi_or_load_instr_reg,
    D,
    of_predecode_raw,
    of_read_ex_write_op2_conflict_part2,
    ex_is_multi_or_load_instr,
    of_use_op2_s);
  output ex_is_multi_or_load_instr_reg;
  input [2:0]D;
  input [2:0]of_predecode_raw;
  input of_read_ex_write_op2_conflict_part2;
  input ex_is_multi_or_load_instr;
  input of_use_op2_s;

  wire [2:0]D;
  wire ex_is_multi_or_load_instr;
  wire ex_is_multi_or_load_instr_reg;
  wire [2:0]of_predecode_raw;
  wire of_read_ex_write_op2_conflict_part1;
  wire of_read_ex_write_op2_conflict_part2;
  wire of_use_op2_s;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native 
       (.I0(D[2]),
        .I1(of_predecode_raw[2]),
        .I2(D[1]),
        .I3(of_predecode_raw[1]),
        .I4(D[0]),
        .I5(of_predecode_raw[0]),
        .O(of_read_ex_write_op2_conflict_part1));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \Using_FPGA.Native_i_1__11 
       (.I0(of_read_ex_write_op2_conflict_part1),
        .I1(of_read_ex_write_op2_conflict_part2),
        .I2(ex_is_multi_or_load_instr),
        .I3(of_use_op2_s),
        .O(ex_is_multi_or_load_instr_reg));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module system_microblaze_0_0__MB_LUT6__parameterized8_78
   (ex_is_multi_or_load_instr_reg,
    D,
    \Using_FPGA.Native_i_1__57_0 ,
    \Using_FPGA.Native_i_1__57_1 ,
    of_read_ex_write_op3_conflict_part2,
    ex_is_multi_or_load_instr,
    of_predecode_raw);
  output ex_is_multi_or_load_instr_reg;
  input [2:0]D;
  input [1:0]\Using_FPGA.Native_i_1__57_0 ;
  input \Using_FPGA.Native_i_1__57_1 ;
  input of_read_ex_write_op3_conflict_part2;
  input ex_is_multi_or_load_instr;
  input [0:0]of_predecode_raw;

  wire [2:0]D;
  wire [1:0]\Using_FPGA.Native_i_1__57_0 ;
  wire \Using_FPGA.Native_i_1__57_1 ;
  wire ex_is_multi_or_load_instr;
  wire ex_is_multi_or_load_instr_reg;
  wire [0:0]of_predecode_raw;
  wire of_read_ex_write_op3_conflict_part1;
  wire of_read_ex_write_op3_conflict_part2;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native 
       (.I0(D[2]),
        .I1(\Using_FPGA.Native_i_1__57_0 [1]),
        .I2(D[1]),
        .I3(\Using_FPGA.Native_i_1__57_0 [0]),
        .I4(D[0]),
        .I5(\Using_FPGA.Native_i_1__57_1 ),
        .O(of_read_ex_write_op3_conflict_part1));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \Using_FPGA.Native_i_1__57 
       (.I0(of_read_ex_write_op3_conflict_part1),
        .I1(of_read_ex_write_op3_conflict_part2),
        .I2(ex_is_multi_or_load_instr),
        .I3(of_predecode_raw),
        .O(ex_is_multi_or_load_instr_reg));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module system_microblaze_0_0__MB_LUT6__parameterized8_80
   (of_read_mem_write_op1_conflict_part1,
    Q,
    of_predecode_raw);
  output of_read_mem_write_op1_conflict_part1;
  input [2:0]Q;
  input [2:0]of_predecode_raw;

  wire [2:0]Q;
  wire [2:0]of_predecode_raw;
  wire of_read_mem_write_op1_conflict_part1;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native 
       (.I0(Q[2]),
        .I1(of_predecode_raw[2]),
        .I2(Q[1]),
        .I3(of_predecode_raw[1]),
        .I4(Q[0]),
        .I5(of_predecode_raw[0]),
        .O(of_read_mem_write_op1_conflict_part1));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module system_microblaze_0_0__MB_LUT6__parameterized8_82
   (of_read_mem_write_op2_conflict_part1,
    Q,
    of_predecode_raw);
  output of_read_mem_write_op2_conflict_part1;
  input [2:0]Q;
  input [2:0]of_predecode_raw;

  wire [2:0]Q;
  wire [2:0]of_predecode_raw;
  wire of_read_mem_write_op2_conflict_part1;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native 
       (.I0(Q[2]),
        .I1(of_predecode_raw[2]),
        .I2(Q[1]),
        .I3(of_predecode_raw[1]),
        .I4(Q[0]),
        .I5(of_predecode_raw[0]),
        .O(of_read_mem_write_op2_conflict_part1));
endmodule

(* ORIG_REF_NAME = "MB_LUT6" *) 
module system_microblaze_0_0__MB_LUT6__parameterized8_84
   (\Using_FPGA.Native_0 ,
    Q,
    D,
    \Using_FPGA.Native_i_1__56_0 ,
    of_predecode_raw,
    mem_is_multi_or_load_instr,
    of_read_mem_write_op3_conflict_part2);
  output \Using_FPGA.Native_0 ;
  input [2:0]Q;
  input [1:0]D;
  input \Using_FPGA.Native_i_1__56_0 ;
  input [0:0]of_predecode_raw;
  input mem_is_multi_or_load_instr;
  input of_read_mem_write_op3_conflict_part2;

  wire [1:0]D;
  wire [2:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_i_1__56_0 ;
  wire mem_is_multi_or_load_instr;
  wire [0:0]of_predecode_raw;
  wire of_read_mem_write_op3_conflict_part1;
  wire of_read_mem_write_op3_conflict_part2;

  (* BOX_TYPE = "PRIMITIVE" *) 
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \Using_FPGA.Native 
       (.I0(Q[2]),
        .I1(D[1]),
        .I2(Q[1]),
        .I3(D[0]),
        .I4(Q[0]),
        .I5(\Using_FPGA.Native_i_1__56_0 ),
        .O(of_read_mem_write_op3_conflict_part1));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \Using_FPGA.Native_i_1__56 
       (.I0(of_read_mem_write_op3_conflict_part1),
        .I1(of_predecode_raw),
        .I2(mem_is_multi_or_load_instr),
        .I3(of_read_mem_write_op3_conflict_part2),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MULT_AND" *) 
module system_microblaze_0_0__MB_MULT_AND
   (DI,
    I0,
    \Using_FPGA.Native_I1 );
  output DI;
  input I0;
  input [0:0]\Using_FPGA.Native_I1 ;

  wire DI;
  wire I0;
  wire [0:0]\Using_FPGA.Native_I1 ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "MULT_AND" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Using_FPGA.Native 
       (.I0(I0),
        .I1(\Using_FPGA.Native_I1 ),
        .O(DI));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY
   (carry_7,
    SRL16_Sel_7,
    Q,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output carry_7;
  input SRL16_Sel_7;
  input [0:0]Q;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire [0:0]Q;
  wire SRL16_Sel_7;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire lopt_9;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_8;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(1'b0),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(Q),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_9,\^lopt_6 ,\^lopt_3 ,SRL16_Sel_7}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_100
   (if_pc_incr_carry1,
    \Using_FPGA.Native_0 ,
    if_pc_incr_carry0,
    lopt,
    lopt_1);
  output if_pc_incr_carry1;
  input \Using_FPGA.Native_0 ;
  input if_pc_incr_carry0;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_101
   (of_PipeRun_carry_2,
    \Using_FPGA.Native_0 ,
    of_PipeRun_carry_3,
    lopt,
    lopt_1);
  output of_PipeRun_carry_2;
  input \Using_FPGA.Native_0 ;
  input of_PipeRun_carry_3;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_102
   (of_PipeRun_carry_3,
    \Using_FPGA.Native_0 ,
    of_PipeRun_carry_4,
    lopt,
    lopt_1);
  output of_PipeRun_carry_3;
  input \Using_FPGA.Native_0 ;
  input of_PipeRun_carry_4;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_103
   (of_PipeRun_carry_4,
    \Using_FPGA.Native_0 ,
    of_PipeRun_carry_5,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output of_PipeRun_carry_4;
  input \Using_FPGA.Native_0 ;
  input of_PipeRun_carry_5;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire \Using_FPGA.Native_0 ;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire lopt_9;
  wire of_PipeRun_carry_5;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_8;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(of_PipeRun_carry_5),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_9,\^lopt_6 ,\^lopt_3 ,\Using_FPGA.Native_0 }));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_104
   (of_PipeRun_carry_5,
    \Using_FPGA.Native_0 ,
    of_PipeRun_carry_6,
    lopt,
    lopt_1);
  output of_PipeRun_carry_5;
  input \Using_FPGA.Native_0 ;
  input of_PipeRun_carry_6;
  input lopt;
  output lopt_1;

  wire \<const0> ;
  wire of_PipeRun_carry_5;

  assign lopt_1 = \<const0> ;
  assign of_PipeRun_carry_5 = lopt;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_105
   (of_PipeRun_carry_6,
    A,
    of_PipeRun_carry_7,
    lopt,
    lopt_1);
  output of_PipeRun_carry_6;
  input A;
  input of_PipeRun_carry_7;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_106
   (of_PipeRun_carry_7,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    lopt,
    lopt_1);
  output of_PipeRun_carry_7;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_107
   (\Using_FPGA.Native_0 ,
    E,
    in0,
    ex_Write_ICache_i_reg,
    mem_gpr_write_dbg_reg,
    mem_gpr_write_reg,
    of_PipeRun_carry_9,
    \mem_pc_i_reg[0] ,
    Q,
    wb_exception,
    ex_Write_DCache_decode_reg,
    ex_write_dcache_instr,
    ex_Write_ICache_i,
    mem_gpr_write_dbg,
    ex_gpr_write_dbg,
    sync_reset,
    mem_gpr_write,
    mem_gpr_write_reg_0,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output \Using_FPGA.Native_0 ;
  output [0:0]E;
  output in0;
  output ex_Write_ICache_i_reg;
  output mem_gpr_write_dbg_reg;
  output mem_gpr_write_reg;
  input of_PipeRun_carry_9;
  input \mem_pc_i_reg[0] ;
  input [1:0]Q;
  input wb_exception;
  input ex_Write_DCache_decode_reg;
  input ex_write_dcache_instr;
  input ex_Write_ICache_i;
  input mem_gpr_write_dbg;
  input ex_gpr_write_dbg;
  input sync_reset;
  input mem_gpr_write;
  input mem_gpr_write_reg_0;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire [0:0]E;
  wire [1:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire ex_Write_DCache_decode_reg;
  wire ex_gpr_write_dbg;
  wire ex_write_dcache_instr;
  wire in0;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire lopt_9;
  wire mem_gpr_write;
  wire mem_gpr_write_dbg;
  wire mem_gpr_write_dbg_reg;
  wire mem_gpr_write_reg;
  wire mem_gpr_write_reg_0;
  wire \mem_pc_i_reg[0] ;
  wire of_PipeRun_carry_9;
  wire sync_reset;
  wire wb_exception;
  wire [2:1]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_8;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(of_PipeRun_carry_9),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:1],\Using_FPGA.Native_0 }),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_9,\^lopt_6 ,\^lopt_3 ,1'b1}));
  LUT3 #(
    .INIT(8'h10)) 
    ex_Write_DCache_decode_cmb_inferred_i_1
       (.I0(\Using_FPGA.Native_0 ),
        .I1(ex_Write_DCache_decode_reg),
        .I2(ex_write_dcache_instr),
        .O(in0));
  LUT5 #(
    .INIT(32'h000000E2)) 
    mem_gpr_write_dbg_i_1
       (.I0(mem_gpr_write_dbg),
        .I1(\Using_FPGA.Native_0 ),
        .I2(ex_gpr_write_dbg),
        .I3(wb_exception),
        .I4(sync_reset),
        .O(mem_gpr_write_dbg_reg));
  LUT5 #(
    .INIT(32'h000000E2)) 
    mem_gpr_write_i_1
       (.I0(mem_gpr_write),
        .I1(\Using_FPGA.Native_0 ),
        .I2(mem_gpr_write_reg_0),
        .I3(wb_exception),
        .I4(sync_reset),
        .O(mem_gpr_write_reg));
  LUT5 #(
    .INIT(32'h15550000)) 
    \mem_pc_i[0]_i_1 
       (.I0(\mem_pc_i_reg[0] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(wb_exception),
        .I4(\Using_FPGA.Native_0 ),
        .O(E));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_108
   (of_PipeRun_carry_9,
    EX_MBAR_Stall__2,
    \Using_FPGA.Native_0 ,
    of_PipeRun_carry_10,
    ex_mbar_sleep,
    ex_jump_hold,
    ex_mbar_decode,
    ex_first_cycle,
    ex_mbar_stall_no_sleep_1,
    lopt,
    lopt_1);
  output of_PipeRun_carry_9;
  output EX_MBAR_Stall__2;
  input \Using_FPGA.Native_0 ;
  input of_PipeRun_carry_10;
  input ex_mbar_sleep;
  input ex_jump_hold;
  input ex_mbar_decode;
  input ex_first_cycle;
  input ex_mbar_stall_no_sleep_1;
  input lopt;
  output lopt_1;

  wire \<const0> ;
  wire EX_MBAR_Stall__2;
  wire ex_first_cycle;
  wire ex_jump_hold;
  wire ex_mbar_decode;
  wire ex_mbar_sleep;
  wire ex_mbar_stall_no_sleep_1;
  wire of_PipeRun_carry_9;

  assign lopt_1 = \<const0> ;
  assign of_PipeRun_carry_9 = lopt;
  GND GND
       (.G(\<const0> ));
  LUT5 #(
    .INIT(32'hBABABAAA)) 
    \Using_FPGA.Native_i_2__23 
       (.I0(ex_mbar_sleep),
        .I1(ex_jump_hold),
        .I2(ex_mbar_decode),
        .I3(ex_first_cycle),
        .I4(ex_mbar_stall_no_sleep_1),
        .O(EX_MBAR_Stall__2));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_109
   (of_PipeRun_carry_10,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1,
    lopt_2);
  output of_PipeRun_carry_10;
  input \Using_FPGA.Native_0 ;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire \<const0> ;
  wire \<const1> ;

  assign lopt_1 = \<const0> ;
  assign lopt_2 = \<const1> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_110
   (of_pause_reg,
    ex_jump_nodelay_reg,
    of_read_imm_reg_ii_reg,
    wb_exception_i_reg,
    of_PipeRun_carry_1,
    ex_jump_nodelay,
    ex_jump,
    ex_jump_nodelay_reg_0,
    IB_Ready,
    if_missed_fetch,
    of_read_imm_reg_ii,
    p_9_in,
    of_read_imm_reg_ii_reg_0,
    dbg_pause,
    wb_exception,
    sync_reset);
  output of_pause_reg;
  output ex_jump_nodelay_reg;
  output of_read_imm_reg_ii_reg;
  output wb_exception_i_reg;
  input of_PipeRun_carry_1;
  input ex_jump_nodelay;
  input ex_jump;
  input ex_jump_nodelay_reg_0;
  input IB_Ready;
  input if_missed_fetch;
  input of_read_imm_reg_ii;
  input p_9_in;
  input of_read_imm_reg_ii_reg_0;
  input dbg_pause;
  input wb_exception;
  input sync_reset;

  wire IB_Ready;
  wire ex_jump;
  wire ex_jump_nodelay;
  wire ex_jump_nodelay_reg;
  wire ex_jump_nodelay_reg_0;
  wire if_missed_fetch;
  wire of_PipeRun_carry_1;
  wire of_pause_reg;
  wire of_read_imm_reg_ii;
  wire of_read_imm_reg_ii_reg;
  wire of_read_imm_reg_ii_reg_0;
  wire p_9_in;
  wire sync_reset;
  wire wb_exception;
  wire wb_exception_i_reg;
  wire [3:1]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO PROPCONST" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(of_PipeRun_carry_1),
        .CO({\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [3:1],of_pause_reg}),
        .CYINIT(1'b0),
        .DI({\NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED [3:1],1'b1}));
  LUT3 #(
    .INIT(8'h02)) 
    ex_first_cycle_i_1
       (.I0(of_pause_reg),
        .I1(wb_exception),
        .I2(sync_reset),
        .O(wb_exception_i_reg));
  LUT6 #(
    .INIT(64'h0000226E226E226E)) 
    ex_jump_nodelay_i_1
       (.I0(ex_jump_nodelay),
        .I1(of_pause_reg),
        .I2(ex_jump),
        .I3(ex_jump_nodelay_reg_0),
        .I4(IB_Ready),
        .I5(if_missed_fetch),
        .O(ex_jump_nodelay_reg));
  LUT6 #(
    .INIT(64'h000000002EEE2222)) 
    of_read_imm_reg_ii_i_1
       (.I0(of_read_imm_reg_ii),
        .I1(of_pause_reg),
        .I2(ex_jump),
        .I3(ex_jump_nodelay),
        .I4(p_9_in),
        .I5(of_read_imm_reg_ii_reg_0),
        .O(of_read_imm_reg_ii_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_111
   (of_PipeRun_carry_1,
    use_Reg_Neg_S_reg,
    of_PipeRun_carry_2,
    lopt,
    lopt_1);
  output of_PipeRun_carry_1;
  input use_Reg_Neg_S_reg;
  input of_PipeRun_carry_2;
  input lopt;
  output lopt_1;

  wire \<const0> ;
  wire of_PipeRun_carry_1;

  assign lopt_1 = \<const0> ;
  assign of_PipeRun_carry_1 = lopt;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_299
   (ex_pre_alu_carry,
    muxcy_sel,
    muxcy_di,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9);
  output ex_pre_alu_carry;
  input muxcy_sel;
  input muxcy_di;
  input \Using_FPGA.Native_0 ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;

  wire \Using_FPGA.Native_0 ;
  wire lopt_10;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire muxcy_di;
  wire muxcy_sel;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_10;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(1'b0),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(\Using_FPGA.Native_0 ),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,muxcy_di}),
        .O({lopt_10,\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [2:0]}),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,muxcy_sel}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_300
   (ex_alu_carryin,
    ex_pre_alu_carry,
    lopt,
    lopt_1,
    lopt_2);
  output ex_alu_carryin;
  input ex_pre_alu_carry;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire \<const0> ;
  wire \<const1> ;

  assign lopt_1 = \<const0> ;
  assign lopt_2 = \<const1> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_307
   (CI,
    \Using_FPGA.Native_I2 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output CI;
  input [0:0]\Using_FPGA.Native_I2 ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]\Using_FPGA.Native_I2 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(1'b0),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [0]}),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,\Using_FPGA.Native_I2 }));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_31
   (carry_6,
    SRL16_Sel_6,
    carry_7,
    lopt,
    lopt_1);
  output carry_6;
  input SRL16_Sel_6;
  input carry_7;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_33
   (carry_5,
    SRL16_Sel_5,
    carry_6,
    lopt,
    lopt_1);
  output carry_5;
  input SRL16_Sel_5;
  input carry_6;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_35
   (carry_4,
    SRL16_Sel_4,
    carry_5,
    lopt,
    lopt_1);
  output carry_4;
  input SRL16_Sel_4;
  input carry_5;
  input lopt;
  output lopt_1;

  wire \<const0> ;
  wire carry_4;

  assign carry_4 = lopt;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_37
   (carry_3,
    SRL16_Sel_3,
    carry_4,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output carry_3;
  input SRL16_Sel_3;
  input carry_4;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire SRL16_Sel_3;
  wire carry_4;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire lopt_9;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_8;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(carry_4),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_9,\^lopt_6 ,\^lopt_3 ,SRL16_Sel_3}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_39
   (carry_2,
    SRL16_Sel_2,
    carry_3,
    lopt,
    lopt_1);
  output carry_2;
  input SRL16_Sel_2;
  input carry_3;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_403
   (zero_CI_6,
    ex_op1_cmp_equal,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6);
  output zero_CI_6;
  input ex_op1_cmp_equal;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  output lopt_5;
  input lopt_6;

  wire ex_op1_cmp_equal;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire lopt_7;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign lopt_5 = \^lopt_6 ;
  assign lopt_7 = lopt_6;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(1'b0),
        .CO({\^lopt_6 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({\^lopt_2 ,\^lopt_2 ,\^lopt_2 ,1'b0}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_7,\^lopt_5 ,\^lopt_3 ,ex_op1_cmp_equal}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_406
   (zero_CI_2,
    \Using_FPGA.Native_0 ,
    ex_op1_cmp_equal_n,
    zero_CI_3,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6);
  output zero_CI_2;
  input \Using_FPGA.Native_0 ;
  input ex_op1_cmp_equal_n;
  input zero_CI_3;
  output lopt;
  input lopt_1;
  output lopt_2;
  input lopt_3;
  output lopt_4;
  input lopt_5;
  input lopt_6;

  wire \Using_FPGA.Native_0 ;
  wire ex_op1_cmp_equal_n;
  wire \^lopt_2 ;
  wire \^lopt_4 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire lopt_7;
  wire zero_CI_3;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_4  = lopt_3;
  assign \^lopt_6  = lopt_5;
  assign lopt_4 = \^lopt_5 ;
  assign lopt_7 = lopt_6;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(zero_CI_3),
        .CO({\^lopt_5 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_6 ,ex_op1_cmp_equal_n,ex_op1_cmp_equal_n,ex_op1_cmp_equal_n}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_7,\^lopt_4 ,\^lopt_2 ,\Using_FPGA.Native_0 }));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_407
   (zero_CI_3,
    \Using_FPGA.Native_0 ,
    ex_op1_cmp_equal_n,
    zero_CI_4,
    lopt);
  output zero_CI_3;
  input \Using_FPGA.Native_0 ;
  input ex_op1_cmp_equal_n;
  input zero_CI_4;
  input lopt;

  wire zero_CI_3;

  assign zero_CI_3 = lopt;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_41
   (carry_1,
    SRL16_Sel_1,
    carry_2,
    lopt,
    lopt_1);
  output carry_1;
  input SRL16_Sel_1;
  input carry_2;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_43
   (carry_0,
    SRL16_Sel_0,
    carry_1,
    lopt,
    lopt_1);
  output carry_0;
  input SRL16_Sel_0;
  input carry_1;
  input lopt;
  output lopt_1;

  wire \<const0> ;
  wire carry_0;

  assign carry_0 = lopt;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_45
   (Hit,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ,
    single_Step_N_reg,
    carry_0,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ,
    Q,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1 ,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_2 ,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_3 ,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_2_0 ,
    force_stop_i,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg ,
    mem_Exception_Taken,
    ex_Exception_Taken,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_4 ,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0 ,
    single_Step_N);
  output Hit;
  output \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  output single_Step_N_reg;
  input carry_0;
  input \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ;
  input [0:0]Q;
  input \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1 ;
  input \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_2 ;
  input \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_3 ;
  input \Performance_Debug_Control.ex_dbg_pc_hit_i_i_2_0 ;
  input force_stop_i;
  input \Performance_Debug_Control.ex_dbg_pc_hit_i_reg ;
  input mem_Exception_Taken;
  input ex_Exception_Taken;
  input \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_4 ;
  input \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0 ;
  input single_Step_N;

  wire Hit;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_i_2_0 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_i_5_n_0 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_reg ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_2 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_3 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_4 ;
  wire [0:0]Q;
  wire carry_0;
  wire ex_Exception_Taken;
  wire ex_dbg_pc_hit_i027_out;
  wire force_stop_i;
  wire mem_Exception_Taken;
  wire single_Step_N;
  wire single_Step_N_reg;
  wire [3:1]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED ;

  LUT6 #(
    .INIT(64'hFFFFDF55FFFF0000)) 
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_1 
       (.I0(\Performance_Debug_Control.ex_dbg_pc_hit_i_reg ),
        .I1(mem_Exception_Taken),
        .I2(ex_Exception_Taken),
        .I3(\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_4 ),
        .I4(ex_dbg_pc_hit_i027_out),
        .I5(\Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0 ),
        .O(\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ));
  LUT6 #(
    .INIT(64'hFFFFFFEA00000000)) 
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_2 
       (.I0(\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ),
        .I1(Q),
        .I2(\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1 ),
        .I3(\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_2 ),
        .I4(\Performance_Debug_Control.ex_dbg_pc_hit_i_i_5_n_0 ),
        .I5(\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_3 ),
        .O(ex_dbg_pc_hit_i027_out));
  LUT3 #(
    .INIT(8'hF4)) 
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_5 
       (.I0(\Performance_Debug_Control.ex_dbg_pc_hit_i_i_2_0 ),
        .I1(Hit),
        .I2(force_stop_i),
        .O(\Performance_Debug_Control.ex_dbg_pc_hit_i_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h55555555CCCC0CCC)) 
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_i_1 
       (.I0(single_Step_N),
        .I1(\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_4 ),
        .I2(\Performance_Debug_Control.ex_dbg_pc_hit_i_reg ),
        .I3(ex_Exception_Taken),
        .I4(mem_Exception_Taken),
        .I5(ex_dbg_pc_hit_i027_out),
        .O(single_Step_N_reg));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(carry_0),
        .CO({\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [3:1],Hit}),
        .CYINIT(1'b0),
        .DI({\NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED [3:1],1'b1}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED [3:1],1'b1}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_90
   (mem_wait_on_ready_N,
    MEM_DataBus_Ready,
    mem_load_store_access,
    mem_Write_DCache,
    mem_valid_instr,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output mem_wait_on_ready_N;
  input MEM_DataBus_Ready;
  input mem_load_store_access;
  input mem_Write_DCache;
  input mem_valid_instr;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire MEM_DataBus_Ready;
  wire \Using_FPGA.Native_i_1__99_n_0 ;
  wire \^lopt_1 ;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire lopt_9;
  wire mem_Write_DCache;
  wire mem_load_store_access;
  wire mem_valid_instr;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign lopt = \^lopt_1 ;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_8;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(1'b0),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2],\^lopt_1 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(MEM_DataBus_Ready),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b1}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_9,\^lopt_6 ,\^lopt_3 ,\Using_FPGA.Native_i_1__99_n_0 }));
  LUT3 #(
    .INIT(8'hE0)) 
    \Using_FPGA.Native_i_1__99 
       (.I0(mem_load_store_access),
        .I1(mem_Write_DCache),
        .I2(mem_valid_instr),
        .O(\Using_FPGA.Native_i_1__99_n_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_91
   (\Using_FPGA.Native_0 ,
    mem_valid_reg,
    wb_valid_reg,
    wb_gpr_write_dbg0,
    wb_gpr_write_i0,
    mem_wait_on_ready_N,
    mem_valid_instr,
    mem_exception_from_ex,
    mem_valid_reg_0,
    mem_valid_reg_1,
    flush_pipe,
    wb_valid_reg_0,
    wb_piperun,
    sync_reset,
    wb_exception,
    mem_gpr_write_dbg,
    mem_gpr_write,
    lopt,
    lopt_1,
    lopt_2);
  output \Using_FPGA.Native_0 ;
  output mem_valid_reg;
  output wb_valid_reg;
  output wb_gpr_write_dbg0;
  output wb_gpr_write_i0;
  input mem_wait_on_ready_N;
  input mem_valid_instr;
  input mem_exception_from_ex;
  input mem_valid_reg_0;
  input mem_valid_reg_1;
  input flush_pipe;
  input wb_valid_reg_0;
  input wb_piperun;
  input sync_reset;
  input wb_exception;
  input mem_gpr_write_dbg;
  input mem_gpr_write;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire \<const0> ;
  wire \<const1> ;
  wire \Using_FPGA.Native_0 ;
  wire flush_pipe;
  wire mem_exception_from_ex;
  wire mem_gpr_write;
  wire mem_gpr_write_dbg;
  wire mem_valid_instr;
  wire mem_valid_reg;
  wire mem_valid_reg_0;
  wire mem_valid_reg_1;
  wire sync_reset;
  wire wb_exception;
  wire wb_gpr_write_dbg0;
  wire wb_gpr_write_i0;
  wire wb_piperun;
  wire wb_valid_reg;
  wire wb_valid_reg_0;

  assign \Using_FPGA.Native_0  = lopt;
  assign lopt_1 = \<const0> ;
  assign lopt_2 = \<const1> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
  LUT6 #(
    .INIT(64'h00000000707000AA)) 
    mem_valid_i_1
       (.I0(mem_valid_instr),
        .I1(mem_exception_from_ex),
        .I2(mem_valid_reg_0),
        .I3(\Using_FPGA.Native_0 ),
        .I4(mem_valid_reg_1),
        .I5(flush_pipe),
        .O(mem_valid_reg));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    wb_gpr_write_dbg_i_1
       (.I0(sync_reset),
        .I1(wb_exception),
        .I2(\Using_FPGA.Native_0 ),
        .I3(mem_gpr_write_dbg),
        .O(wb_gpr_write_dbg0));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    wb_gpr_write_i_i_1
       (.I0(sync_reset),
        .I1(wb_exception),
        .I2(\Using_FPGA.Native_0 ),
        .I3(mem_gpr_write),
        .O(wb_gpr_write_i0));
  LUT5 #(
    .INIT(32'h0000CC0A)) 
    wb_valid_i_1
       (.I0(wb_valid_reg_0),
        .I1(mem_valid_instr),
        .I2(wb_piperun),
        .I3(\Using_FPGA.Native_0 ),
        .I4(sync_reset),
        .O(wb_valid_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_92
   (jump_carry1,
    S,
    DI,
    ex_op1_zero,
    lopt);
  output jump_carry1;
  input S;
  input DI;
  input ex_op1_zero;
  input lopt;

  wire jump_carry1;

  assign jump_carry1 = lopt;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_93
   (jump_carry2,
    jump_carry1,
    out,
    force_Val2_N,
    force2,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output jump_carry2;
  input jump_carry1;
  input out;
  input force_Val2_N;
  input force2;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire force2;
  wire force_DI2;
  wire force_Val2_N;
  wire force_jump2;
  wire jump_carry1;
  wire \^lopt_1 ;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire lopt_9;
  wire out;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign lopt = \^lopt_1 ;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_8;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(jump_carry1),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2],\^lopt_1 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,force_DI2}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({lopt_9,\^lopt_6 ,\^lopt_3 ,force_jump2}));
  LUT2 #(
    .INIT(4'h8)) 
    \Using_FPGA.Native_i_1__2 
       (.I0(out),
        .I1(force2),
        .O(force_jump2));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_2__19 
       (.I0(out),
        .I1(force_Val2_N),
        .O(force_DI2));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_94
   (ex_jump_wanted,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    jump_carry2,
    of_valid,
    ex_branch_with_delayslot,
    EX_MBAR_Stall__2,
    lopt,
    lopt_1);
  output ex_jump_wanted;
  output \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input jump_carry2;
  input of_valid;
  input ex_branch_with_delayslot;
  input EX_MBAR_Stall__2;
  input lopt;
  output lopt_1;

  wire \<const0> ;
  wire EX_MBAR_Stall__2;
  wire \Using_FPGA.Native_0 ;
  wire ex_branch_with_delayslot;
  wire \^ex_jump_wanted ;
  wire of_valid;

  assign \^ex_jump_wanted  = lopt;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT4 #(
    .INIT(16'h55DF)) 
    \Using_FPGA.Native_i_1__98 
       (.I0(\^ex_jump_wanted ),
        .I1(of_valid),
        .I2(ex_branch_with_delayslot),
        .I3(EX_MBAR_Stall__2),
        .O(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_95
   (jump_carry4,
    \Using_FPGA.Native_0 ,
    ex_jump_wanted,
    lopt,
    lopt_1);
  output jump_carry4;
  input \Using_FPGA.Native_0 ;
  input ex_jump_wanted;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_96
   (jump_carry5,
    jump_carry4,
    lopt,
    lopt_1,
    lopt_2);
  output jump_carry5;
  input jump_carry4;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire \<const0> ;
  wire \<const1> ;
  wire jump_carry5;

  assign jump_carry5 = lopt;
  assign lopt_1 = \<const0> ;
  assign lopt_2 = \<const1> ;
  GND GND
       (.G(\<const0> ));
  VCC VCC
       (.P(\<const1> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_97
   (in0,
    I5,
    ex_jump_hold_reg,
    ex_delayslot_Instr0,
    keep_jump_taken_with_ds_reg,
    mem_jump_taken0,
    \if_pc_reg[0] ,
    if_missed_fetch_reg,
    ex_jump_q_reg,
    jump_carry5,
    Q,
    wb_exception,
    ex_jump_hold,
    ex_jump_hold_reg_0,
    sync_reset,
    ex_mbar_stall_no_sleep_1,
    ex_first_cycle,
    ex_mbar_decode,
    ex_mbar_sleep,
    keep_jump_taken_with_ds,
    ex_branch_with_delayslot,
    keep_jump_taken_with_ds_reg_0,
    ex_databus_addr,
    \if_pc_reg[30] ,
    \if_pc_reg[0]_0 ,
    O,
    \if_pc_reg[28] ,
    \if_pc_reg[27] ,
    \if_pc_reg[26] ,
    \if_pc_reg[25] ,
    \if_pc_reg[24] ,
    \if_pc_reg[23] ,
    \if_pc_reg[22] ,
    \if_pc_reg[21] ,
    \if_pc_reg[20] ,
    \if_pc_reg[19] ,
    \if_pc_reg[18] ,
    \if_pc_reg[17] ,
    \if_pc_reg[16] ,
    \if_pc_reg[15] ,
    \if_pc_reg[14] ,
    \if_pc_reg[13] ,
    \if_pc_reg[12] ,
    \if_pc_reg[11] ,
    \if_pc_reg[10] ,
    \if_pc_reg[9] ,
    \if_pc_reg[8] ,
    \if_pc_reg[7] ,
    \if_pc_reg[6] ,
    \if_pc_reg[5] ,
    \if_pc_reg[4] ,
    \if_pc_reg[3] ,
    \if_pc_reg[2] ,
    \if_pc_reg[1] ,
    \if_pc_reg[0]_1 ,
    if_missed_fetch,
    if_missed_fetch_reg_0,
    IB_Ready,
    LOCKSTEP_Master_Out,
    ex_jump_q);
  output in0;
  output I5;
  output ex_jump_hold_reg;
  output ex_delayslot_Instr0;
  output keep_jump_taken_with_ds_reg;
  output mem_jump_taken0;
  output [31:0]\if_pc_reg[0] ;
  output if_missed_fetch_reg;
  output ex_jump_q_reg;
  input jump_carry5;
  input [1:0]Q;
  input wb_exception;
  input ex_jump_hold;
  input ex_jump_hold_reg_0;
  input sync_reset;
  input ex_mbar_stall_no_sleep_1;
  input ex_first_cycle;
  input ex_mbar_decode;
  input ex_mbar_sleep;
  input keep_jump_taken_with_ds;
  input ex_branch_with_delayslot;
  input keep_jump_taken_with_ds_reg_0;
  input [1:0]ex_databus_addr;
  input [1:0]\if_pc_reg[30] ;
  input [29:0]\if_pc_reg[0]_0 ;
  input O;
  input \if_pc_reg[28] ;
  input \if_pc_reg[27] ;
  input \if_pc_reg[26] ;
  input \if_pc_reg[25] ;
  input \if_pc_reg[24] ;
  input \if_pc_reg[23] ;
  input \if_pc_reg[22] ;
  input \if_pc_reg[21] ;
  input \if_pc_reg[20] ;
  input \if_pc_reg[19] ;
  input \if_pc_reg[18] ;
  input \if_pc_reg[17] ;
  input \if_pc_reg[16] ;
  input \if_pc_reg[15] ;
  input \if_pc_reg[14] ;
  input \if_pc_reg[13] ;
  input \if_pc_reg[12] ;
  input \if_pc_reg[11] ;
  input \if_pc_reg[10] ;
  input \if_pc_reg[9] ;
  input \if_pc_reg[8] ;
  input \if_pc_reg[7] ;
  input \if_pc_reg[6] ;
  input \if_pc_reg[5] ;
  input \if_pc_reg[4] ;
  input \if_pc_reg[3] ;
  input \if_pc_reg[2] ;
  input \if_pc_reg[1] ;
  input \if_pc_reg[0]_1 ;
  input if_missed_fetch;
  input [0:0]if_missed_fetch_reg_0;
  input IB_Ready;
  input [0:0]LOCKSTEP_Master_Out;
  input ex_jump_q;

  wire I5;
  wire IB_Ready;
  wire [0:0]LOCKSTEP_Master_Out;
  wire O;
  wire [1:0]Q;
  wire \Using_FPGA.Native_i_1__10_n_0 ;
  wire ex_branch_with_delayslot;
  wire [1:0]ex_databus_addr;
  wire ex_delayslot_Instr0;
  wire ex_first_cycle;
  wire ex_jump_hold;
  wire ex_jump_hold_reg;
  wire ex_jump_hold_reg_0;
  wire ex_jump_q;
  wire ex_jump_q_reg;
  wire ex_mbar_decode;
  wire ex_mbar_sleep;
  wire ex_mbar_stall_no_sleep_1;
  wire if_missed_fetch;
  wire if_missed_fetch_reg;
  wire [0:0]if_missed_fetch_reg_0;
  wire [31:0]\if_pc_reg[0] ;
  wire [29:0]\if_pc_reg[0]_0 ;
  wire \if_pc_reg[0]_1 ;
  wire \if_pc_reg[10] ;
  wire \if_pc_reg[11] ;
  wire \if_pc_reg[12] ;
  wire \if_pc_reg[13] ;
  wire \if_pc_reg[14] ;
  wire \if_pc_reg[15] ;
  wire \if_pc_reg[16] ;
  wire \if_pc_reg[17] ;
  wire \if_pc_reg[18] ;
  wire \if_pc_reg[19] ;
  wire \if_pc_reg[1] ;
  wire \if_pc_reg[20] ;
  wire \if_pc_reg[21] ;
  wire \if_pc_reg[22] ;
  wire \if_pc_reg[23] ;
  wire \if_pc_reg[24] ;
  wire \if_pc_reg[25] ;
  wire \if_pc_reg[26] ;
  wire \if_pc_reg[27] ;
  wire \if_pc_reg[28] ;
  wire \if_pc_reg[2] ;
  wire [1:0]\if_pc_reg[30] ;
  wire \if_pc_reg[3] ;
  wire \if_pc_reg[4] ;
  wire \if_pc_reg[5] ;
  wire \if_pc_reg[6] ;
  wire \if_pc_reg[7] ;
  wire \if_pc_reg[8] ;
  wire \if_pc_reg[9] ;
  wire in0;
  wire jump_carry5;
  wire keep_jump_taken_with_ds;
  wire keep_jump_taken_with_ds_reg;
  wire keep_jump_taken_with_ds_reg_0;
  wire sync_reset;
  wire wb_exception;
  wire [3:1]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[0]_INST_0 
       (.I0(\if_pc_reg[0]_0 [29]),
        .I1(in0),
        .I2(\if_pc_reg[0]_1 ),
        .O(\if_pc_reg[0] [31]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[10]_INST_0 
       (.I0(\if_pc_reg[0]_0 [19]),
        .I1(in0),
        .I2(\if_pc_reg[10] ),
        .O(\if_pc_reg[0] [21]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[11]_INST_0 
       (.I0(\if_pc_reg[0]_0 [18]),
        .I1(in0),
        .I2(\if_pc_reg[11] ),
        .O(\if_pc_reg[0] [20]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[12]_INST_0 
       (.I0(\if_pc_reg[0]_0 [17]),
        .I1(in0),
        .I2(\if_pc_reg[12] ),
        .O(\if_pc_reg[0] [19]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[13]_INST_0 
       (.I0(\if_pc_reg[0]_0 [16]),
        .I1(in0),
        .I2(\if_pc_reg[13] ),
        .O(\if_pc_reg[0] [18]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[14]_INST_0 
       (.I0(\if_pc_reg[0]_0 [15]),
        .I1(in0),
        .I2(\if_pc_reg[14] ),
        .O(\if_pc_reg[0] [17]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[15]_INST_0 
       (.I0(\if_pc_reg[0]_0 [14]),
        .I1(in0),
        .I2(\if_pc_reg[15] ),
        .O(\if_pc_reg[0] [16]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[16]_INST_0 
       (.I0(\if_pc_reg[0]_0 [13]),
        .I1(in0),
        .I2(\if_pc_reg[16] ),
        .O(\if_pc_reg[0] [15]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[17]_INST_0 
       (.I0(\if_pc_reg[0]_0 [12]),
        .I1(in0),
        .I2(\if_pc_reg[17] ),
        .O(\if_pc_reg[0] [14]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[18]_INST_0 
       (.I0(\if_pc_reg[0]_0 [11]),
        .I1(in0),
        .I2(\if_pc_reg[18] ),
        .O(\if_pc_reg[0] [13]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[19]_INST_0 
       (.I0(\if_pc_reg[0]_0 [10]),
        .I1(in0),
        .I2(\if_pc_reg[19] ),
        .O(\if_pc_reg[0] [12]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[1]_INST_0 
       (.I0(\if_pc_reg[0]_0 [28]),
        .I1(in0),
        .I2(\if_pc_reg[1] ),
        .O(\if_pc_reg[0] [30]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[20]_INST_0 
       (.I0(\if_pc_reg[0]_0 [9]),
        .I1(in0),
        .I2(\if_pc_reg[20] ),
        .O(\if_pc_reg[0] [11]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[21]_INST_0 
       (.I0(\if_pc_reg[0]_0 [8]),
        .I1(in0),
        .I2(\if_pc_reg[21] ),
        .O(\if_pc_reg[0] [10]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[22]_INST_0 
       (.I0(\if_pc_reg[0]_0 [7]),
        .I1(in0),
        .I2(\if_pc_reg[22] ),
        .O(\if_pc_reg[0] [9]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[23]_INST_0 
       (.I0(\if_pc_reg[0]_0 [6]),
        .I1(in0),
        .I2(\if_pc_reg[23] ),
        .O(\if_pc_reg[0] [8]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[24]_INST_0 
       (.I0(\if_pc_reg[0]_0 [5]),
        .I1(in0),
        .I2(\if_pc_reg[24] ),
        .O(\if_pc_reg[0] [7]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[25]_INST_0 
       (.I0(\if_pc_reg[0]_0 [4]),
        .I1(in0),
        .I2(\if_pc_reg[25] ),
        .O(\if_pc_reg[0] [6]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[26]_INST_0 
       (.I0(\if_pc_reg[0]_0 [3]),
        .I1(in0),
        .I2(\if_pc_reg[26] ),
        .O(\if_pc_reg[0] [5]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[27]_INST_0 
       (.I0(\if_pc_reg[0]_0 [2]),
        .I1(in0),
        .I2(\if_pc_reg[27] ),
        .O(\if_pc_reg[0] [4]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[28]_INST_0 
       (.I0(\if_pc_reg[0]_0 [1]),
        .I1(in0),
        .I2(\if_pc_reg[28] ),
        .O(\if_pc_reg[0] [3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[29]_INST_0 
       (.I0(\if_pc_reg[0]_0 [0]),
        .I1(in0),
        .I2(O),
        .O(\if_pc_reg[0] [2]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[2]_INST_0 
       (.I0(\if_pc_reg[0]_0 [27]),
        .I1(in0),
        .I2(\if_pc_reg[2] ),
        .O(\if_pc_reg[0] [29]));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[30]_INST_0 
       (.I0(ex_databus_addr[1]),
        .I1(in0),
        .I2(\if_pc_reg[30] [1]),
        .O(\if_pc_reg[0] [1]));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[31]_INST_0 
       (.I0(ex_databus_addr[0]),
        .I1(in0),
        .I2(\if_pc_reg[30] [0]),
        .O(\if_pc_reg[0] [0]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[3]_INST_0 
       (.I0(\if_pc_reg[0]_0 [26]),
        .I1(in0),
        .I2(\if_pc_reg[3] ),
        .O(\if_pc_reg[0] [28]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[4]_INST_0 
       (.I0(\if_pc_reg[0]_0 [25]),
        .I1(in0),
        .I2(\if_pc_reg[4] ),
        .O(\if_pc_reg[0] [27]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[5]_INST_0 
       (.I0(\if_pc_reg[0]_0 [24]),
        .I1(in0),
        .I2(\if_pc_reg[5] ),
        .O(\if_pc_reg[0] [26]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[6]_INST_0 
       (.I0(\if_pc_reg[0]_0 [23]),
        .I1(in0),
        .I2(\if_pc_reg[6] ),
        .O(\if_pc_reg[0] [25]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[7]_INST_0 
       (.I0(\if_pc_reg[0]_0 [22]),
        .I1(in0),
        .I2(\if_pc_reg[7] ),
        .O(\if_pc_reg[0] [24]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[8]_INST_0 
       (.I0(\if_pc_reg[0]_0 [21]),
        .I1(in0),
        .I2(\if_pc_reg[8] ),
        .O(\if_pc_reg[0] [23]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \Instr_Addr[9]_INST_0 
       (.I0(\if_pc_reg[0]_0 [20]),
        .I1(in0),
        .I2(\if_pc_reg[9] ),
        .O(\if_pc_reg[0] [22]));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(jump_carry5),
        .CO({\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [3:1],in0}),
        .CYINIT(1'b0),
        .DI({\NLW_Using_FPGA.Native_CARRY4_DI_UNCONNECTED [3:1],1'b0}),
        .O(\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [3:0]),
        .S({\NLW_Using_FPGA.Native_CARRY4_S_UNCONNECTED [3:1],\Using_FPGA.Native_i_1__10_n_0 }));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT4 #(
    .INIT(16'hEAAA)) 
    \Using_FPGA.Native_i_1__1 
       (.I0(in0),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(wb_exception),
        .O(I5));
  LUT5 #(
    .INIT(32'h0000FF1F)) 
    \Using_FPGA.Native_i_1__10 
       (.I0(ex_mbar_stall_no_sleep_1),
        .I1(ex_first_cycle),
        .I2(ex_mbar_decode),
        .I3(ex_jump_hold),
        .I4(ex_mbar_sleep),
        .O(\Using_FPGA.Native_i_1__10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'hEA)) 
    ex_delayslot_Instr_i_1
       (.I0(keep_jump_taken_with_ds),
        .I1(ex_branch_with_delayslot),
        .I2(in0),
        .O(ex_delayslot_Instr0));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT4 #(
    .INIT(16'h000E)) 
    ex_jump_hold_i_1
       (.I0(ex_jump_hold),
        .I1(in0),
        .I2(ex_jump_hold_reg_0),
        .I3(sync_reset),
        .O(ex_jump_hold_reg));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    ex_jump_q_i_1
       (.I0(ex_jump_q),
        .I1(in0),
        .I2(ex_jump_hold_reg_0),
        .O(ex_jump_q_reg));
  LUT6 #(
    .INIT(64'h000000000000020E)) 
    if_missed_fetch_i_1
       (.I0(in0),
        .I1(if_missed_fetch),
        .I2(if_missed_fetch_reg_0),
        .I3(IB_Ready),
        .I4(LOCKSTEP_Master_Out),
        .I5(sync_reset),
        .O(if_missed_fetch_reg));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT5 #(
    .INIT(32'h000000EA)) 
    keep_jump_taken_with_ds_i_1
       (.I0(keep_jump_taken_with_ds),
        .I1(in0),
        .I2(ex_branch_with_delayslot),
        .I3(sync_reset),
        .I4(keep_jump_taken_with_ds_reg_0),
        .O(keep_jump_taken_with_ds_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_98
   (CI,
    if_fetch_for_timing_optimization1,
    if_pc_incr_carry1,
    lopt,
    lopt_1);
  output CI;
  input if_fetch_for_timing_optimization1;
  input if_pc_incr_carry1;
  input lopt;
  output lopt_1;

  wire \<const0> ;

  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY" *) 
module system_microblaze_0_0__MB_MUXCY_99
   (if_pc_incr_carry0,
    if_missed_fetch,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9);
  output if_pc_incr_carry0;
  input if_missed_fetch;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;

  wire if_missed_fetch;
  wire if_valid;
  wire lopt_10;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED ;
  wire [2:0]\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = lopt_10;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_CARRY4 
       (.CI(1'b0),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_10,\NLW_Using_FPGA.Native_CARRY4_O_UNCONNECTED [2:0]}),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,if_valid}));
  LUT1 #(
    .INIT(2'h1)) 
    \Using_FPGA.Native_i_1__51 
       (.I0(if_missed_fetch),
        .O(if_valid));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY
   (\if_pc_reg[0] ,
    Q,
    LO);
  output \if_pc_reg[0] ;
  input [0:0]Q;
  input LO;

  wire LO;
  wire [0:0]Q;
  wire \if_pc_reg[0] ;
  wire [3:0]\NLW_Using_FPGA.Native_I2_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_I2_CARRY4_DI_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_I2_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_I2_CARRY4_S_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  CARRY4 \Using_FPGA.Native_I2_CARRY4 
       (.CI(LO),
        .CO(\NLW_Using_FPGA.Native_I2_CARRY4_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI(\NLW_Using_FPGA.Native_I2_CARRY4_DI_UNCONNECTED [3:0]),
        .O({\NLW_Using_FPGA.Native_I2_CARRY4_O_UNCONNECTED [3:1],\if_pc_reg[0] }),
        .S({\NLW_Using_FPGA.Native_I2_CARRY4_S_UNCONNECTED [3:1],Q}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_270
   (LO,
    \if_pc_reg[10] ,
    Q,
    \if_pc_reg[10]_0 ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[10] ;
  input [0:0]Q;
  input \if_pc_reg[10]_0 ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[10] ;

  assign \if_pc_reg[10]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_271
   (LO,
    \if_pc_reg[11] ,
    Q,
    \if_pc_reg[11]_0 ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[11] ;
  input [0:0]Q;
  input \if_pc_reg[11]_0 ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[11] ;

  assign \if_pc_reg[11]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_272
   (LO,
    \if_pc_reg[12] ,
    Q,
    \if_pc_reg[12]_0 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output \if_pc_reg[12] ;
  input [0:0]Q;
  input \if_pc_reg[12]_0 ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]Q;
  wire \if_pc_reg[12] ;
  wire \if_pc_reg[12]_0 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\if_pc_reg[12]_0 ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\if_pc_reg[12] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,Q}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_273
   (LO,
    \if_pc_reg[13] ,
    Q,
    \if_pc_reg[13]_0 ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[13] ;
  input [0:0]Q;
  input \if_pc_reg[13]_0 ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire \if_pc_reg[13] ;

  assign LO = lopt;
  assign \if_pc_reg[13]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_274
   (LO,
    \if_pc_reg[14] ,
    Q,
    \if_pc_reg[14]_0 ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[14] ;
  input [0:0]Q;
  input \if_pc_reg[14]_0 ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[14] ;

  assign \if_pc_reg[14]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_275
   (LO,
    \if_pc_reg[15] ,
    Q,
    \if_pc_reg[15]_0 ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[15] ;
  input [0:0]Q;
  input \if_pc_reg[15]_0 ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[15] ;

  assign \if_pc_reg[15]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_276
   (LO,
    \if_pc_reg[16] ,
    Q,
    \if_pc_reg[16]_0 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output \if_pc_reg[16] ;
  input [0:0]Q;
  input \if_pc_reg[16]_0 ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]Q;
  wire \if_pc_reg[16] ;
  wire \if_pc_reg[16]_0 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\if_pc_reg[16]_0 ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\if_pc_reg[16] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,Q}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_277
   (LO,
    \if_pc_reg[17] ,
    Q,
    \if_pc_reg[17]_0 ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[17] ;
  input [0:0]Q;
  input \if_pc_reg[17]_0 ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire \if_pc_reg[17] ;

  assign LO = lopt;
  assign \if_pc_reg[17]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_278
   (LO,
    \if_pc_reg[18] ,
    Q,
    \if_pc_reg[18]_0 ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[18] ;
  input [0:0]Q;
  input \if_pc_reg[18]_0 ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[18] ;

  assign \if_pc_reg[18]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_279
   (LO,
    \if_pc_reg[19] ,
    Q,
    \if_pc_reg[19]_0 ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[19] ;
  input [0:0]Q;
  input \if_pc_reg[19]_0 ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[19] ;

  assign \if_pc_reg[19]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_280
   (LO,
    \if_pc_reg[1] ,
    Q,
    \if_pc_reg[1]_0 ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[1] ;
  input [0:0]Q;
  input \if_pc_reg[1]_0 ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire \if_pc_reg[1] ;

  assign LO = lopt;
  assign \if_pc_reg[1]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_281
   (LO,
    \if_pc_reg[20] ,
    Q,
    \if_pc_reg[20]_0 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output \if_pc_reg[20] ;
  input [0:0]Q;
  input \if_pc_reg[20]_0 ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]Q;
  wire \if_pc_reg[20] ;
  wire \if_pc_reg[20]_0 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\if_pc_reg[20]_0 ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\if_pc_reg[20] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,Q}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_282
   (LO,
    \if_pc_reg[21] ,
    Q,
    \if_pc_reg[21]_0 ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[21] ;
  input [0:0]Q;
  input \if_pc_reg[21]_0 ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire \if_pc_reg[21] ;

  assign LO = lopt;
  assign \if_pc_reg[21]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_283
   (LO,
    \if_pc_reg[22] ,
    Q,
    \if_pc_reg[22]_0 ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[22] ;
  input [0:0]Q;
  input \if_pc_reg[22]_0 ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[22] ;

  assign \if_pc_reg[22]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_284
   (LO,
    \if_pc_reg[23] ,
    Q,
    \if_pc_reg[23]_0 ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[23] ;
  input [0:0]Q;
  input \if_pc_reg[23]_0 ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[23] ;

  assign \if_pc_reg[23]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_285
   (LO,
    \if_pc_reg[24] ,
    Q,
    \if_pc_reg[24]_0 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output \if_pc_reg[24] ;
  input [0:0]Q;
  input \if_pc_reg[24]_0 ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]Q;
  wire \if_pc_reg[24] ;
  wire \if_pc_reg[24]_0 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\if_pc_reg[24]_0 ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\if_pc_reg[24] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,Q}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_286
   (LO,
    \if_pc_reg[25] ,
    Q,
    \if_pc_reg[25]_0 ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[25] ;
  input [0:0]Q;
  input \if_pc_reg[25]_0 ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire \if_pc_reg[25] ;

  assign LO = lopt;
  assign \if_pc_reg[25]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_287
   (LO,
    \if_pc_reg[26] ,
    Q,
    \if_pc_reg[26]_0 ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[26] ;
  input [0:0]Q;
  input \if_pc_reg[26]_0 ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[26] ;

  assign \if_pc_reg[26]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_288
   (LO,
    \if_pc_reg[27] ,
    Q,
    \if_pc_reg[27]_0 ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[27] ;
  input [0:0]Q;
  input \if_pc_reg[27]_0 ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[27] ;

  assign \if_pc_reg[27]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_289
   (LO,
    \if_pc_reg[28] ,
    Q,
    \if_pc_reg[28]_0 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output \if_pc_reg[28] ;
  input [0:0]Q;
  input \if_pc_reg[28]_0 ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]Q;
  wire \if_pc_reg[28] ;
  wire \if_pc_reg[28]_0 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\if_pc_reg[28]_0 ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\if_pc_reg[28] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,Q}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_290
   (LO,
    O,
    Q,
    CI,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output O;
  input [0:0]Q;
  input CI;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire O;

  assign LO = lopt;
  assign O = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_291
   (LO,
    \if_pc_reg[2] ,
    Q,
    \if_pc_reg[2]_0 ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[2] ;
  input [0:0]Q;
  input \if_pc_reg[2]_0 ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[2] ;

  assign \if_pc_reg[2]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_292
   (LO,
    \if_pc_reg[3] ,
    Q,
    \if_pc_reg[3]_0 ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[3] ;
  input [0:0]Q;
  input \if_pc_reg[3]_0 ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[3] ;

  assign \if_pc_reg[3]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_293
   (LO,
    \if_pc_reg[4] ,
    Q,
    \if_pc_reg[4]_0 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output \if_pc_reg[4] ;
  input [0:0]Q;
  input \if_pc_reg[4]_0 ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]Q;
  wire \if_pc_reg[4] ;
  wire \if_pc_reg[4]_0 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\if_pc_reg[4]_0 ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\if_pc_reg[4] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,Q}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_294
   (LO,
    \if_pc_reg[5] ,
    Q,
    \if_pc_reg[5]_0 ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[5] ;
  input [0:0]Q;
  input \if_pc_reg[5]_0 ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire \if_pc_reg[5] ;

  assign LO = lopt;
  assign \if_pc_reg[5]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_295
   (LO,
    \if_pc_reg[6] ,
    Q,
    \if_pc_reg[6]_0 ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[6] ;
  input [0:0]Q;
  input \if_pc_reg[6]_0 ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[6] ;

  assign \if_pc_reg[6]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_296
   (LO,
    \if_pc_reg[7] ,
    Q,
    \if_pc_reg[7]_0 ,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[7] ;
  input [0:0]Q;
  input \if_pc_reg[7]_0 ;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire \if_pc_reg[7] ;

  assign \if_pc_reg[7]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_297
   (LO,
    \if_pc_reg[8] ,
    Q,
    \if_pc_reg[8]_0 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output \if_pc_reg[8] ;
  input [0:0]Q;
  input \if_pc_reg[8]_0 ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire [0:0]Q;
  wire \if_pc_reg[8] ;
  wire \if_pc_reg[8]_0 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\if_pc_reg[8]_0 ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,1'b0}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\if_pc_reg[8] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,Q}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_298
   (LO,
    \if_pc_reg[9] ,
    Q,
    CI,
    lopt,
    lopt_1,
    lopt_2);
  output LO;
  output \if_pc_reg[9] ;
  input [0:0]Q;
  input CI;
  input lopt;
  output lopt_1;
  input lopt_2;

  wire \<const0> ;
  wire LO;
  wire \if_pc_reg[9] ;

  assign LO = lopt;
  assign \if_pc_reg[9]  = lopt_2;
  assign lopt_1 = \<const0> ;
  GND GND
       (.G(\<const0> ));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_308
   (\Using_FPGA.Native ,
    addr_AddSub_31,
    LO);
  output [0:0]\Using_FPGA.Native ;
  input addr_AddSub_31;
  input LO;

  wire LO;
  wire [0:0]\Using_FPGA.Native ;
  wire addr_AddSub_31;
  wire [3:0]\NLW_Using_FPGA.Native_I2_CARRY4_CO_UNCONNECTED ;
  wire [3:0]\NLW_Using_FPGA.Native_I2_CARRY4_DI_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_I2_CARRY4_O_UNCONNECTED ;
  wire [3:1]\NLW_Using_FPGA.Native_I2_CARRY4_S_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  CARRY4 \Using_FPGA.Native_I2_CARRY4 
       (.CI(LO),
        .CO(\NLW_Using_FPGA.Native_I2_CARRY4_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI(\NLW_Using_FPGA.Native_I2_CARRY4_DI_UNCONNECTED [3:0]),
        .O({\NLW_Using_FPGA.Native_I2_CARRY4_O_UNCONNECTED [3:1],\Using_FPGA.Native }),
        .S({\NLW_Using_FPGA.Native_I2_CARRY4_S_UNCONNECTED [3:1],addr_AddSub_31}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_311
   (LO,
    \Using_FPGA.Native ,
    S,
    \Using_FPGA.Native_I2_0 ,
    \LOCKSTEP_Out_reg[3017] ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\Using_FPGA.Native ;
  input S;
  input \Using_FPGA.Native_I2_0 ;
  input \LOCKSTEP_Out_reg[3017] ;
  input lopt;
  input lopt_1;

  wire [0:0]\Using_FPGA.Native ;

  assign \Using_FPGA.Native  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_314
   (LO,
    \Using_FPGA.Native ,
    S,
    \Using_FPGA.Native_I2_0 ,
    \LOCKSTEP_Out_reg[3018] ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\Using_FPGA.Native ;
  input S;
  input \Using_FPGA.Native_I2_0 ;
  input \LOCKSTEP_Out_reg[3018] ;
  input lopt;
  input lopt_1;

  wire [0:0]\Using_FPGA.Native ;

  assign \Using_FPGA.Native  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_317
   (LO,
    \Using_FPGA.Native ,
    S,
    \Using_FPGA.Native_I2_0 ,
    \LOCKSTEP_Out_reg[3019] ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output [0:0]\Using_FPGA.Native ;
  input S;
  input \Using_FPGA.Native_I2_0 ;
  input \LOCKSTEP_Out_reg[3019] ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire \LOCKSTEP_Out_reg[3019] ;
  wire S;
  wire [0:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_I2_0 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\LOCKSTEP_Out_reg[3019] ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,\Using_FPGA.Native_I2_0 }),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\Using_FPGA.Native }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_320
   (LO,
    \Using_FPGA.Native ,
    S,
    \Using_FPGA.Native_I2_0 ,
    \LOCKSTEP_Out_reg[3020] ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\Using_FPGA.Native ;
  input S;
  input \Using_FPGA.Native_I2_0 ;
  input \LOCKSTEP_Out_reg[3020] ;
  input lopt;
  input lopt_1;

  wire LO;
  wire [0:0]\Using_FPGA.Native ;

  assign LO = lopt;
  assign \Using_FPGA.Native  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_323
   (LO,
    \Using_FPGA.Native ,
    S,
    \Using_FPGA.Native_I2_0 ,
    \LOCKSTEP_Out_reg[3021] ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\Using_FPGA.Native ;
  input S;
  input \Using_FPGA.Native_I2_0 ;
  input \LOCKSTEP_Out_reg[3021] ;
  input lopt;
  input lopt_1;

  wire [0:0]\Using_FPGA.Native ;

  assign \Using_FPGA.Native  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_326
   (LO,
    \Using_FPGA.Native ,
    S,
    \Using_FPGA.Native_I2_0 ,
    \LOCKSTEP_Out_reg[3022] ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\Using_FPGA.Native ;
  input S;
  input \Using_FPGA.Native_I2_0 ;
  input \LOCKSTEP_Out_reg[3022] ;
  input lopt;
  input lopt_1;

  wire [0:0]\Using_FPGA.Native ;

  assign \Using_FPGA.Native  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_329
   (wb_gpr_write_dbg_reg,
    WB_Byte_Access_reg,
    LO,
    wb_gpr_write_dbg,
    \data_rd_reg_reg[16] ,
    DI,
    read_register_MSR_1,
    \LOCKSTEP_Out_reg[3023] ,
    wb_byte_access,
    \LOCKSTEP_Out_reg[3023]_0 ,
    Q,
    S,
    \LOCKSTEP_Out_reg[3023]_1 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output [0:0]wb_gpr_write_dbg_reg;
  output [0:0]WB_Byte_Access_reg;
  output LO;
  input wb_gpr_write_dbg;
  input \data_rd_reg_reg[16] ;
  input DI;
  input read_register_MSR_1;
  input \LOCKSTEP_Out_reg[3023] ;
  input wb_byte_access;
  input \LOCKSTEP_Out_reg[3023]_0 ;
  input [0:0]Q;
  input S;
  input \LOCKSTEP_Out_reg[3023]_1 ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire \LOCKSTEP_Out_reg[3023] ;
  wire \LOCKSTEP_Out_reg[3023]_0 ;
  wire \LOCKSTEP_Out_reg[3023]_1 ;
  wire [0:0]Q;
  wire S;
  wire [0:0]WB_Byte_Access_reg;
  wire \data_rd_reg_reg[16] ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire read_register_MSR_1;
  wire wb_byte_access;
  wire [16:16]wb_excep_return_addr;
  wire wb_gpr_write_dbg;
  wire [0:0]wb_gpr_write_dbg_reg;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  LUT5 #(
    .INIT(32'hBBBB8B88)) 
    \Trace_New_Reg_Value[16]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\LOCKSTEP_Out_reg[3023] ),
        .I2(wb_byte_access),
        .I3(\LOCKSTEP_Out_reg[3023]_0 ),
        .I4(Q),
        .O(WB_Byte_Access_reg));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\LOCKSTEP_Out_reg[3023]_1 ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,wb_excep_return_addr}),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[16]_i_1 
       (.I0(WB_Byte_Access_reg),
        .I1(wb_gpr_write_dbg),
        .I2(\data_rd_reg_reg[16] ),
        .I3(DI),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_332
   (wb_gpr_write_dbg_reg,
    WB_Byte_Access_reg,
    LO,
    wb_gpr_write_dbg,
    \data_rd_reg_reg[17] ,
    DI,
    read_register_MSR_1,
    \LOCKSTEP_Out_reg[3024] ,
    wb_byte_access,
    \LOCKSTEP_Out_reg[3024]_0 ,
    Q,
    S,
    \LOCKSTEP_Out_reg[3024]_1 ,
    lopt,
    lopt_1);
  output [0:0]wb_gpr_write_dbg_reg;
  output [0:0]WB_Byte_Access_reg;
  output LO;
  input wb_gpr_write_dbg;
  input \data_rd_reg_reg[17] ;
  input DI;
  input read_register_MSR_1;
  input \LOCKSTEP_Out_reg[3024] ;
  input wb_byte_access;
  input \LOCKSTEP_Out_reg[3024]_0 ;
  input [0:0]Q;
  input S;
  input \LOCKSTEP_Out_reg[3024]_1 ;
  input lopt;
  input lopt_1;

  wire DI;
  wire LO;
  wire \LOCKSTEP_Out_reg[3024] ;
  wire \LOCKSTEP_Out_reg[3024]_0 ;
  wire [0:0]Q;
  wire [0:0]WB_Byte_Access_reg;
  wire \data_rd_reg_reg[17] ;
  wire read_register_MSR_1;
  wire wb_byte_access;
  wire [17:17]wb_excep_return_addr;
  wire wb_gpr_write_dbg;
  wire [0:0]wb_gpr_write_dbg_reg;

  assign LO = lopt;
  assign wb_excep_return_addr = lopt_1;
  LUT5 #(
    .INIT(32'hBBBB8B88)) 
    \Trace_New_Reg_Value[17]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\LOCKSTEP_Out_reg[3024] ),
        .I2(wb_byte_access),
        .I3(\LOCKSTEP_Out_reg[3024]_0 ),
        .I4(Q),
        .O(WB_Byte_Access_reg));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[17]_i_1 
       (.I0(WB_Byte_Access_reg),
        .I1(wb_gpr_write_dbg),
        .I2(\data_rd_reg_reg[17] ),
        .I3(DI),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_335
   (wb_gpr_write_dbg_reg,
    WB_Byte_Access_reg,
    LO,
    wb_gpr_write_dbg,
    \data_rd_reg_reg[18] ,
    DI,
    read_register_MSR_1,
    \LOCKSTEP_Out_reg[3025] ,
    wb_byte_access,
    \LOCKSTEP_Out_reg[3025]_0 ,
    Q,
    S,
    \LOCKSTEP_Out_reg[3025]_1 ,
    lopt,
    lopt_1);
  output [0:0]wb_gpr_write_dbg_reg;
  output [0:0]WB_Byte_Access_reg;
  output LO;
  input wb_gpr_write_dbg;
  input \data_rd_reg_reg[18] ;
  input DI;
  input read_register_MSR_1;
  input \LOCKSTEP_Out_reg[3025] ;
  input wb_byte_access;
  input \LOCKSTEP_Out_reg[3025]_0 ;
  input [0:0]Q;
  input S;
  input \LOCKSTEP_Out_reg[3025]_1 ;
  input lopt;
  input lopt_1;

  wire DI;
  wire \LOCKSTEP_Out_reg[3025] ;
  wire \LOCKSTEP_Out_reg[3025]_0 ;
  wire [0:0]Q;
  wire [0:0]WB_Byte_Access_reg;
  wire \data_rd_reg_reg[18] ;
  wire read_register_MSR_1;
  wire wb_byte_access;
  wire [18:18]wb_excep_return_addr;
  wire wb_gpr_write_dbg;
  wire [0:0]wb_gpr_write_dbg_reg;

  assign wb_excep_return_addr = lopt_1;
  LUT5 #(
    .INIT(32'hBBBB8B88)) 
    \Trace_New_Reg_Value[18]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\LOCKSTEP_Out_reg[3025] ),
        .I2(wb_byte_access),
        .I3(\LOCKSTEP_Out_reg[3025]_0 ),
        .I4(Q),
        .O(WB_Byte_Access_reg));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[18]_i_1 
       (.I0(WB_Byte_Access_reg),
        .I1(wb_gpr_write_dbg),
        .I2(\data_rd_reg_reg[18] ),
        .I3(DI),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_338
   (wb_gpr_write_dbg_reg,
    WB_Byte_Access_reg,
    LO,
    wb_gpr_write_dbg,
    \data_rd_reg_reg[19] ,
    DI,
    read_register_MSR_1,
    \LOCKSTEP_Out_reg[3026] ,
    wb_byte_access,
    \LOCKSTEP_Out_reg[3026]_0 ,
    Q,
    S,
    \LOCKSTEP_Out_reg[3026]_1 ,
    lopt,
    lopt_1);
  output [0:0]wb_gpr_write_dbg_reg;
  output [0:0]WB_Byte_Access_reg;
  output LO;
  input wb_gpr_write_dbg;
  input \data_rd_reg_reg[19] ;
  input DI;
  input read_register_MSR_1;
  input \LOCKSTEP_Out_reg[3026] ;
  input wb_byte_access;
  input \LOCKSTEP_Out_reg[3026]_0 ;
  input [0:0]Q;
  input S;
  input \LOCKSTEP_Out_reg[3026]_1 ;
  input lopt;
  input lopt_1;

  wire DI;
  wire \LOCKSTEP_Out_reg[3026] ;
  wire \LOCKSTEP_Out_reg[3026]_0 ;
  wire [0:0]Q;
  wire [0:0]WB_Byte_Access_reg;
  wire \data_rd_reg_reg[19] ;
  wire read_register_MSR_1;
  wire wb_byte_access;
  wire [19:19]wb_excep_return_addr;
  wire wb_gpr_write_dbg;
  wire [0:0]wb_gpr_write_dbg_reg;

  assign wb_excep_return_addr = lopt_1;
  LUT5 #(
    .INIT(32'hBBBB8B88)) 
    \Trace_New_Reg_Value[19]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\LOCKSTEP_Out_reg[3026] ),
        .I2(wb_byte_access),
        .I3(\LOCKSTEP_Out_reg[3026]_0 ),
        .I4(Q),
        .O(WB_Byte_Access_reg));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[19]_i_1 
       (.I0(WB_Byte_Access_reg),
        .I1(wb_gpr_write_dbg),
        .I2(\data_rd_reg_reg[19] ),
        .I3(DI),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_341
   (LO,
    \Using_FPGA.Native ,
    S,
    \Using_FPGA.Native_I2_0 ,
    \LOCKSTEP_Out_reg[3008] ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\Using_FPGA.Native ;
  input S;
  input \Using_FPGA.Native_I2_0 ;
  input \LOCKSTEP_Out_reg[3008] ;
  input lopt;
  input lopt_1;

  wire LO;
  wire [0:0]\Using_FPGA.Native ;

  assign LO = lopt;
  assign \Using_FPGA.Native  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_344
   (wb_gpr_write_dbg_reg,
    WB_Byte_Access_reg,
    LO,
    wb_gpr_write_dbg,
    \data_rd_reg_reg[20] ,
    DI,
    read_register_MSR_1,
    \LOCKSTEP_Out_reg[3027] ,
    wb_byte_access,
    \LOCKSTEP_Out_reg[3027]_0 ,
    Q,
    S,
    \LOCKSTEP_Out_reg[3027]_1 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output [0:0]wb_gpr_write_dbg_reg;
  output [0:0]WB_Byte_Access_reg;
  output LO;
  input wb_gpr_write_dbg;
  input \data_rd_reg_reg[20] ;
  input DI;
  input read_register_MSR_1;
  input \LOCKSTEP_Out_reg[3027] ;
  input wb_byte_access;
  input \LOCKSTEP_Out_reg[3027]_0 ;
  input [0:0]Q;
  input S;
  input \LOCKSTEP_Out_reg[3027]_1 ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire \LOCKSTEP_Out_reg[3027] ;
  wire \LOCKSTEP_Out_reg[3027]_0 ;
  wire \LOCKSTEP_Out_reg[3027]_1 ;
  wire [0:0]Q;
  wire S;
  wire [0:0]WB_Byte_Access_reg;
  wire \data_rd_reg_reg[20] ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire read_register_MSR_1;
  wire wb_byte_access;
  wire [20:20]wb_excep_return_addr;
  wire wb_gpr_write_dbg;
  wire [0:0]wb_gpr_write_dbg_reg;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  LUT5 #(
    .INIT(32'hBBBB8B88)) 
    \Trace_New_Reg_Value[20]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\LOCKSTEP_Out_reg[3027] ),
        .I2(wb_byte_access),
        .I3(\LOCKSTEP_Out_reg[3027]_0 ),
        .I4(Q),
        .O(WB_Byte_Access_reg));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\LOCKSTEP_Out_reg[3027]_1 ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,wb_excep_return_addr}),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[20]_i_1 
       (.I0(WB_Byte_Access_reg),
        .I1(wb_gpr_write_dbg),
        .I2(\data_rd_reg_reg[20] ),
        .I3(DI),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_347
   (wb_gpr_write_dbg_reg,
    WB_Byte_Access_reg,
    LO,
    wb_gpr_write_dbg,
    \data_rd_reg_reg[21] ,
    DI,
    read_register_MSR_1,
    \LOCKSTEP_Out_reg[3028] ,
    wb_byte_access,
    \LOCKSTEP_Out_reg[3028]_0 ,
    Q,
    S,
    \LOCKSTEP_Out_reg[3028]_1 ,
    lopt,
    lopt_1);
  output [0:0]wb_gpr_write_dbg_reg;
  output [0:0]WB_Byte_Access_reg;
  output LO;
  input wb_gpr_write_dbg;
  input \data_rd_reg_reg[21] ;
  input DI;
  input read_register_MSR_1;
  input \LOCKSTEP_Out_reg[3028] ;
  input wb_byte_access;
  input \LOCKSTEP_Out_reg[3028]_0 ;
  input [0:0]Q;
  input S;
  input \LOCKSTEP_Out_reg[3028]_1 ;
  input lopt;
  input lopt_1;

  wire DI;
  wire LO;
  wire \LOCKSTEP_Out_reg[3028] ;
  wire \LOCKSTEP_Out_reg[3028]_0 ;
  wire [0:0]Q;
  wire [0:0]WB_Byte_Access_reg;
  wire \data_rd_reg_reg[21] ;
  wire read_register_MSR_1;
  wire wb_byte_access;
  wire [21:21]wb_excep_return_addr;
  wire wb_gpr_write_dbg;
  wire [0:0]wb_gpr_write_dbg_reg;

  assign LO = lopt;
  assign wb_excep_return_addr = lopt_1;
  LUT5 #(
    .INIT(32'hBBBB8B88)) 
    \Trace_New_Reg_Value[21]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\LOCKSTEP_Out_reg[3028] ),
        .I2(wb_byte_access),
        .I3(\LOCKSTEP_Out_reg[3028]_0 ),
        .I4(Q),
        .O(WB_Byte_Access_reg));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[21]_i_1 
       (.I0(WB_Byte_Access_reg),
        .I1(wb_gpr_write_dbg),
        .I2(\data_rd_reg_reg[21] ),
        .I3(DI),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_350
   (wb_gpr_write_dbg_reg,
    WB_Byte_Access_reg,
    LO,
    wb_gpr_write_dbg,
    \data_rd_reg_reg[22] ,
    DI,
    read_register_MSR_1,
    \LOCKSTEP_Out_reg[3029] ,
    wb_byte_access,
    \LOCKSTEP_Out_reg[3029]_0 ,
    Q,
    S,
    \LOCKSTEP_Out_reg[3029]_1 ,
    lopt,
    lopt_1);
  output [0:0]wb_gpr_write_dbg_reg;
  output [0:0]WB_Byte_Access_reg;
  output LO;
  input wb_gpr_write_dbg;
  input \data_rd_reg_reg[22] ;
  input DI;
  input read_register_MSR_1;
  input \LOCKSTEP_Out_reg[3029] ;
  input wb_byte_access;
  input \LOCKSTEP_Out_reg[3029]_0 ;
  input [0:0]Q;
  input S;
  input \LOCKSTEP_Out_reg[3029]_1 ;
  input lopt;
  input lopt_1;

  wire DI;
  wire \LOCKSTEP_Out_reg[3029] ;
  wire \LOCKSTEP_Out_reg[3029]_0 ;
  wire [0:0]Q;
  wire [0:0]WB_Byte_Access_reg;
  wire \data_rd_reg_reg[22] ;
  wire read_register_MSR_1;
  wire wb_byte_access;
  wire [22:22]wb_excep_return_addr;
  wire wb_gpr_write_dbg;
  wire [0:0]wb_gpr_write_dbg_reg;

  assign wb_excep_return_addr = lopt_1;
  LUT5 #(
    .INIT(32'hBBBB8B88)) 
    \Trace_New_Reg_Value[22]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\LOCKSTEP_Out_reg[3029] ),
        .I2(wb_byte_access),
        .I3(\LOCKSTEP_Out_reg[3029]_0 ),
        .I4(Q),
        .O(WB_Byte_Access_reg));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[22]_i_1 
       (.I0(WB_Byte_Access_reg),
        .I1(wb_gpr_write_dbg),
        .I2(\data_rd_reg_reg[22] ),
        .I3(DI),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_353
   (wb_gpr_write_dbg_reg,
    WB_Byte_Access_reg,
    LO,
    wb_gpr_write_dbg,
    \data_rd_reg_reg[23] ,
    DI,
    read_register_MSR_1,
    \LOCKSTEP_Out_reg[3030] ,
    wb_byte_access,
    \LOCKSTEP_Out_reg[3030]_0 ,
    Q,
    S,
    \LOCKSTEP_Out_reg[3030]_1 ,
    lopt,
    lopt_1);
  output [0:0]wb_gpr_write_dbg_reg;
  output [0:0]WB_Byte_Access_reg;
  output LO;
  input wb_gpr_write_dbg;
  input \data_rd_reg_reg[23] ;
  input DI;
  input read_register_MSR_1;
  input \LOCKSTEP_Out_reg[3030] ;
  input wb_byte_access;
  input \LOCKSTEP_Out_reg[3030]_0 ;
  input [0:0]Q;
  input S;
  input \LOCKSTEP_Out_reg[3030]_1 ;
  input lopt;
  input lopt_1;

  wire DI;
  wire \LOCKSTEP_Out_reg[3030] ;
  wire \LOCKSTEP_Out_reg[3030]_0 ;
  wire [0:0]Q;
  wire [0:0]WB_Byte_Access_reg;
  wire \data_rd_reg_reg[23] ;
  wire read_register_MSR_1;
  wire wb_byte_access;
  wire [23:23]wb_excep_return_addr;
  wire wb_gpr_write_dbg;
  wire [0:0]wb_gpr_write_dbg_reg;

  assign wb_excep_return_addr = lopt_1;
  LUT5 #(
    .INIT(32'hBBBB8B88)) 
    \Trace_New_Reg_Value[23]_INST_0 
       (.I0(wb_excep_return_addr),
        .I1(\LOCKSTEP_Out_reg[3030] ),
        .I2(wb_byte_access),
        .I3(\LOCKSTEP_Out_reg[3030]_0 ),
        .I4(Q),
        .O(WB_Byte_Access_reg));
  LUT5 #(
    .INIT(32'h8080BF80)) 
    \data_rd_reg[23]_i_1 
       (.I0(WB_Byte_Access_reg),
        .I1(wb_gpr_write_dbg),
        .I2(\data_rd_reg_reg[23] ),
        .I3(DI),
        .I4(read_register_MSR_1),
        .O(wb_gpr_write_dbg_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_356
   (LO,
    \Using_FPGA.Native ,
    S,
    \Using_FPGA.Native_I2_0 ,
    \LOCKSTEP_Out_reg[3031] ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output [0:0]\Using_FPGA.Native ;
  input S;
  input \Using_FPGA.Native_I2_0 ;
  input \LOCKSTEP_Out_reg[3031] ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire \LOCKSTEP_Out_reg[3031] ;
  wire S;
  wire [0:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_I2_0 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\LOCKSTEP_Out_reg[3031] ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,\Using_FPGA.Native_I2_0 }),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\Using_FPGA.Native }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_359
   (LO,
    \Using_FPGA.Native ,
    S,
    \Using_FPGA.Native_I2_0 ,
    \LOCKSTEP_Out_reg[3032] ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\Using_FPGA.Native ;
  input S;
  input \Using_FPGA.Native_I2_0 ;
  input \LOCKSTEP_Out_reg[3032] ;
  input lopt;
  input lopt_1;

  wire LO;
  wire [0:0]\Using_FPGA.Native ;

  assign LO = lopt;
  assign \Using_FPGA.Native  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_362
   (LO,
    \Using_FPGA.Native ,
    S,
    \Using_FPGA.Native_I2_0 ,
    \LOCKSTEP_Out_reg[3033] ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\Using_FPGA.Native ;
  input S;
  input \Using_FPGA.Native_I2_0 ;
  input \LOCKSTEP_Out_reg[3033] ;
  input lopt;
  input lopt_1;

  wire [0:0]\Using_FPGA.Native ;

  assign \Using_FPGA.Native  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_365
   (LO,
    \Using_FPGA.Native ,
    S,
    \Using_FPGA.Native_I2_0 ,
    \LOCKSTEP_Out_reg[3034] ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\Using_FPGA.Native ;
  input S;
  input \Using_FPGA.Native_I2_0 ;
  input \LOCKSTEP_Out_reg[3034] ;
  input lopt;
  input lopt_1;

  wire [0:0]\Using_FPGA.Native ;

  assign \Using_FPGA.Native  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_368
   (LO,
    \Using_FPGA.Native ,
    S,
    \Using_FPGA.Native_I2_0 ,
    \LOCKSTEP_Out_reg[3035] ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output [0:0]\Using_FPGA.Native ;
  input S;
  input \Using_FPGA.Native_I2_0 ;
  input \LOCKSTEP_Out_reg[3035] ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire \LOCKSTEP_Out_reg[3035] ;
  wire S;
  wire [0:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_I2_0 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\LOCKSTEP_Out_reg[3035] ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,\Using_FPGA.Native_I2_0 }),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\Using_FPGA.Native }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_371
   (LO,
    \Using_FPGA.Native ,
    S,
    \Using_FPGA.Native_I2_0 ,
    \LOCKSTEP_Out_reg[3036] ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\Using_FPGA.Native ;
  input S;
  input \Using_FPGA.Native_I2_0 ;
  input \LOCKSTEP_Out_reg[3036] ;
  input lopt;
  input lopt_1;

  wire LO;
  wire [0:0]\Using_FPGA.Native ;

  assign LO = lopt;
  assign \Using_FPGA.Native  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_374
   (LO,
    \Using_FPGA.Native ,
    S,
    \Using_FPGA.Native_I2_0 ,
    \LOCKSTEP_Out_reg[3009] ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\Using_FPGA.Native ;
  input S;
  input \Using_FPGA.Native_I2_0 ;
  input \LOCKSTEP_Out_reg[3009] ;
  input lopt;
  input lopt_1;

  wire [0:0]\Using_FPGA.Native ;

  assign \Using_FPGA.Native  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_377
   (LO,
    \Using_FPGA.Native ,
    S,
    \Using_FPGA.Native_I2_0 ,
    \LOCKSTEP_Out_reg[3037] ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\Using_FPGA.Native ;
  input S;
  input \Using_FPGA.Native_I2_0 ;
  input \LOCKSTEP_Out_reg[3037] ;
  input lopt;
  input lopt_1;

  wire [0:0]\Using_FPGA.Native ;

  assign \Using_FPGA.Native  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_380
   (LO,
    \Using_FPGA.Native ,
    S,
    DI,
    CI,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\Using_FPGA.Native ;
  input S;
  input DI;
  input CI;
  input lopt;
  input lopt_1;

  wire [0:0]\Using_FPGA.Native ;

  assign \Using_FPGA.Native  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_383
   (LO,
    \Using_FPGA.Native ,
    S,
    \Using_FPGA.Native_I2_0 ,
    \LOCKSTEP_Out_reg[3010] ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\Using_FPGA.Native ;
  input S;
  input \Using_FPGA.Native_I2_0 ;
  input \LOCKSTEP_Out_reg[3010] ;
  input lopt;
  input lopt_1;

  wire [0:0]\Using_FPGA.Native ;

  assign \Using_FPGA.Native  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_386
   (LO,
    \Using_FPGA.Native ,
    S,
    \Using_FPGA.Native_I2_0 ,
    \LOCKSTEP_Out_reg[3011] ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output [0:0]\Using_FPGA.Native ;
  input S;
  input \Using_FPGA.Native_I2_0 ;
  input \LOCKSTEP_Out_reg[3011] ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire \LOCKSTEP_Out_reg[3011] ;
  wire S;
  wire [0:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_I2_0 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\LOCKSTEP_Out_reg[3011] ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,\Using_FPGA.Native_I2_0 }),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\Using_FPGA.Native }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_389
   (LO,
    \Using_FPGA.Native ,
    S,
    \Using_FPGA.Native_I2_0 ,
    \LOCKSTEP_Out_reg[3012] ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\Using_FPGA.Native ;
  input S;
  input \Using_FPGA.Native_I2_0 ;
  input \LOCKSTEP_Out_reg[3012] ;
  input lopt;
  input lopt_1;

  wire LO;
  wire [0:0]\Using_FPGA.Native ;

  assign LO = lopt;
  assign \Using_FPGA.Native  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_392
   (LO,
    \Using_FPGA.Native ,
    S,
    \Using_FPGA.Native_I2_0 ,
    \LOCKSTEP_Out_reg[3013] ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\Using_FPGA.Native ;
  input S;
  input \Using_FPGA.Native_I2_0 ;
  input \LOCKSTEP_Out_reg[3013] ;
  input lopt;
  input lopt_1;

  wire [0:0]\Using_FPGA.Native ;

  assign \Using_FPGA.Native  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_395
   (LO,
    \Using_FPGA.Native ,
    S,
    \Using_FPGA.Native_I2_0 ,
    \LOCKSTEP_Out_reg[3014] ,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\Using_FPGA.Native ;
  input S;
  input \Using_FPGA.Native_I2_0 ;
  input \LOCKSTEP_Out_reg[3014] ;
  input lopt;
  input lopt_1;

  wire [0:0]\Using_FPGA.Native ;

  assign \Using_FPGA.Native  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_398
   (LO,
    \Using_FPGA.Native ,
    S,
    \Using_FPGA.Native_I2_0 ,
    \LOCKSTEP_Out_reg[3015] ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output LO;
  output [0:0]\Using_FPGA.Native ;
  input S;
  input \Using_FPGA.Native_I2_0 ;
  input \LOCKSTEP_Out_reg[3015] ;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire \LOCKSTEP_Out_reg[3015] ;
  wire S;
  wire [0:0]\Using_FPGA.Native ;
  wire \Using_FPGA.Native_I2_0 ;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(\LOCKSTEP_Out_reg[3015] ),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,\Using_FPGA.Native_I2_0 }),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\Using_FPGA.Native }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_401
   (LO,
    \Using_FPGA.Native ,
    S,
    \Using_FPGA.Native_I2_0 ,
    CI,
    lopt,
    lopt_1);
  output LO;
  output [0:0]\Using_FPGA.Native ;
  input S;
  input \Using_FPGA.Native_I2_0 ;
  input CI;
  input lopt;
  input lopt_1;

  wire LO;
  wire [0:0]\Using_FPGA.Native ;

  assign LO = lopt;
  assign \Using_FPGA.Native  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_520
   (EX_CarryOut,
    \EX_Op2_reg[9] ,
    S,
    DI,
    EX_CarryIn,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[9] ;
  input S;
  input DI;
  input EX_CarryIn;
  input lopt;
  input lopt_1;

  wire [0:0]\EX_Op2_reg[9] ;

  assign \EX_Op2_reg[9]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_522
   (EX_CarryOut,
    \EX_Op2_reg[8] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[8] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\EX_Op2_reg[8] ;

  assign \EX_Op2_reg[8]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_524
   (EX_CarryOut,
    \EX_Op2_reg[7] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[7] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire EX_CarryOut;
  wire [0:0]\EX_Op2_reg[7] ;

  assign EX_CarryOut = lopt;
  assign \EX_Op2_reg[7]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_526
   (EX_CarryOut,
    \EX_Op2_reg[6] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[6] ;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire [0:0]\EX_Op2_reg[6] ;
  wire LO;
  wire S;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\EX_Op2_reg[6] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_528
   (EX_CarryOut,
    \EX_Op2_reg[5] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[5] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\EX_Op2_reg[5] ;

  assign \EX_Op2_reg[5]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_530
   (EX_CarryOut,
    \EX_Op2_reg[4] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[4] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\EX_Op2_reg[4] ;

  assign \EX_Op2_reg[4]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_532
   (EX_CarryOut,
    \EX_Op2_reg[3] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[3] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire EX_CarryOut;
  wire [0:0]\EX_Op2_reg[3] ;

  assign EX_CarryOut = lopt;
  assign \EX_Op2_reg[3]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_534
   (EX_CarryOut,
    ex_databus_addr,
    S,
    DI,
    EX_CarryIn,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]ex_databus_addr;
  input S;
  input DI;
  input EX_CarryIn;
  input lopt;
  input lopt_1;

  wire EX_CarryOut;
  wire [0:0]ex_databus_addr;

  assign EX_CarryOut = lopt;
  assign ex_databus_addr = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_536
   (EX_CarryOut,
    ex_databus_addr,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]ex_databus_addr;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire LO;
  wire S;
  wire [0:0]ex_databus_addr;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,ex_databus_addr}),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_538
   (EX_CarryOut,
    \EX_Op2_reg[2] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[2] ;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;

  wire DI;
  wire [0:0]\EX_Op2_reg[2] ;
  wire LO;
  wire S;
  wire \^lopt_10 ;
  wire lopt_11;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;
  wire [2:2]\NLW_Using_FPGA.Native_I1_CARRY4_O_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = lopt_11;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_11,\NLW_Using_FPGA.Native_I1_CARRY4_O_UNCONNECTED [2],\^lopt_10 ,\EX_Op2_reg[2] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_540
   (EX_CarryOut,
    \EX_Op2_reg[29] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[29] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\EX_Op2_reg[29] ;

  assign \EX_Op2_reg[29]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_542
   (EX_CarryOut,
    \EX_Op2_reg[28] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[28] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\EX_Op2_reg[28] ;

  assign \EX_Op2_reg[28]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_544
   (EX_CarryOut,
    \EX_Op2_reg[27] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[27] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire EX_CarryOut;
  wire [0:0]\EX_Op2_reg[27] ;

  assign EX_CarryOut = lopt;
  assign \EX_Op2_reg[27]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_546
   (EX_CarryOut,
    \EX_Op2_reg[26] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[26] ;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire [0:0]\EX_Op2_reg[26] ;
  wire LO;
  wire S;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\EX_Op2_reg[26] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_548
   (EX_CarryOut,
    \EX_Op2_reg[25] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[25] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\EX_Op2_reg[25] ;

  assign \EX_Op2_reg[25]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_550
   (EX_CarryOut,
    \EX_Op2_reg[24] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[24] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\EX_Op2_reg[24] ;

  assign \EX_Op2_reg[24]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_552
   (EX_CarryOut,
    \EX_Op2_reg[23] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[23] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire EX_CarryOut;
  wire [0:0]\EX_Op2_reg[23] ;

  assign EX_CarryOut = lopt;
  assign \EX_Op2_reg[23]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_554
   (EX_CarryOut,
    \EX_Op2_reg[22] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[22] ;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire [0:0]\EX_Op2_reg[22] ;
  wire LO;
  wire S;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\EX_Op2_reg[22] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_556
   (EX_CarryOut,
    \EX_Op2_reg[21] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[21] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\EX_Op2_reg[21] ;

  assign \EX_Op2_reg[21]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_558
   (EX_CarryOut,
    \EX_Op2_reg[20] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[20] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\EX_Op2_reg[20] ;

  assign \EX_Op2_reg[20]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_560
   (EX_CarryOut,
    \EX_Op2_reg[1] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[1] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\EX_Op2_reg[1] ;

  assign \EX_Op2_reg[1]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_562
   (EX_CarryOut,
    \EX_Op2_reg[19] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[19] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire EX_CarryOut;
  wire [0:0]\EX_Op2_reg[19] ;

  assign EX_CarryOut = lopt;
  assign \EX_Op2_reg[19]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_564
   (EX_CarryOut,
    \EX_Op2_reg[18] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[18] ;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire [0:0]\EX_Op2_reg[18] ;
  wire LO;
  wire S;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\EX_Op2_reg[18] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_566
   (EX_CarryOut,
    \EX_Op2_reg[17] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[17] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\EX_Op2_reg[17] ;

  assign \EX_Op2_reg[17]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_568
   (EX_CarryOut,
    \EX_Op2_reg[16] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[16] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\EX_Op2_reg[16] ;

  assign \EX_Op2_reg[16]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_570
   (EX_CarryOut,
    \EX_Op2_reg[15] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[15] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire EX_CarryOut;
  wire [0:0]\EX_Op2_reg[15] ;

  assign EX_CarryOut = lopt;
  assign \EX_Op2_reg[15]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_572
   (EX_CarryOut,
    \EX_Op2_reg[14] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[14] ;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire [0:0]\EX_Op2_reg[14] ;
  wire LO;
  wire S;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\EX_Op2_reg[14] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_574
   (EX_CarryOut,
    \EX_Op2_reg[13] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[13] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\EX_Op2_reg[13] ;

  assign \EX_Op2_reg[13]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_576
   (EX_CarryOut,
    \EX_Op2_reg[12] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[12] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire [0:0]\EX_Op2_reg[12] ;

  assign \EX_Op2_reg[12]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_578
   (EX_CarryOut,
    \EX_Op2_reg[11] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[11] ;
  input S;
  input DI;
  input LO;
  input lopt;
  input lopt_1;

  wire EX_CarryOut;
  wire [0:0]\EX_Op2_reg[11] ;

  assign EX_CarryOut = lopt;
  assign \EX_Op2_reg[11]  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_580
   (EX_CarryOut,
    \EX_Op2_reg[10] ,
    S,
    DI,
    LO,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9,
    lopt_10,
    lopt_11);
  output EX_CarryOut;
  output [0:0]\EX_Op2_reg[10] ;
  input S;
  input DI;
  input LO;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;
  output lopt_10;
  output lopt_11;

  wire DI;
  wire [0:0]\EX_Op2_reg[10] ;
  wire LO;
  wire S;
  wire \^lopt_10 ;
  wire \^lopt_11 ;
  wire lopt_12;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire \^lopt_5 ;
  wire \^lopt_6 ;
  wire \^lopt_7 ;
  wire \^lopt_8 ;
  wire \^lopt_9 ;
  wire [2:0]\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED ;

  assign \^lopt_2  = lopt_1;
  assign \^lopt_3  = lopt_2;
  assign \^lopt_5  = lopt_4;
  assign \^lopt_6  = lopt_5;
  assign \^lopt_8  = lopt_7;
  assign \^lopt_9  = lopt_8;
  assign lopt_10 = \^lopt_11 ;
  assign lopt_11 = lopt_12;
  assign lopt_6 = \^lopt_7 ;
  assign lopt_9 = \^lopt_10 ;
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO SWEEP" *) 
  (* XILINX_LEGACY_PRIM = "(MUXCY,XORCY)" *) 
  (* XILINX_TRANSFORM_PINMAP = "LO:O" *) 
  CARRY4 \Using_FPGA.Native_I1_CARRY4 
       (.CI(LO),
        .CO({\^lopt_7 ,\NLW_Using_FPGA.Native_I1_CARRY4_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\^lopt_8 ,\^lopt_5 ,\^lopt_2 ,DI}),
        .O({lopt_12,\^lopt_11 ,\^lopt_10 ,\EX_Op2_reg[10] }),
        .S({\^lopt_9 ,\^lopt_6 ,\^lopt_3 ,S}));
endmodule

(* ORIG_REF_NAME = "MB_MUXCY_XORCY" *) 
module system_microblaze_0_0__MB_MUXCY_XORCY_581
   (\EX_Op2_reg[0] ,
    \EX_Op2_reg[0]_0 ,
    S,
    DI,
    CI,
    lopt,
    lopt_1);
  output \EX_Op2_reg[0] ;
  output [0:0]\EX_Op2_reg[0]_0 ;
  input S;
  input DI;
  input CI;
  input lopt;
  input lopt_1;

  wire \EX_Op2_reg[0] ;
  wire [0:0]\EX_Op2_reg[0]_0 ;

  assign \EX_Op2_reg[0]  = lopt;
  assign \EX_Op2_reg[0]_0  = lopt_1;
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7
   (sel_input_i_1,
    S,
    sel_input_iii_0,
    sel_input_delayslot,
    ex_branch_with_delayslot_i,
    Q,
    wb_exception);
  output sel_input_i_1;
  output S;
  input sel_input_iii_0;
  input sel_input_delayslot;
  input ex_branch_with_delayslot_i;
  input [1:0]Q;
  input wb_exception;

  wire [1:0]Q;
  wire S;
  wire ex_branch_with_delayslot_i;
  wire sel_input_delayslot;
  wire sel_input_i_1;
  wire sel_input_iii_0;
  wire wb_exception;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(sel_input_iii_0),
        .I1(sel_input_delayslot),
        .O(sel_input_i_1),
        .S(S));
  LUT4 #(
    .INIT(16'h2AAA)) 
    \Using_FPGA.Native_i_1__0 
       (.I0(ex_branch_with_delayslot_i),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(wb_exception),
        .O(S));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_120
   (of_instr_ii_42,
    \Using_FPGA.Native_0 ,
    I0169_out,
    I1167_out);
  output of_instr_ii_42;
  input \Using_FPGA.Native_0 ;
  input I0169_out;
  input I1167_out;

  wire I0169_out;
  wire I1167_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_42;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0169_out),
        .I1(I1167_out),
        .O(of_instr_ii_42),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_122
   (of_instr_ii_32,
    \Using_FPGA.Native_0 ,
    I0129_out,
    I1127_out);
  output of_instr_ii_32;
  input \Using_FPGA.Native_0 ;
  input I0129_out;
  input I1127_out;

  wire I0129_out;
  wire I1127_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_32;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0129_out),
        .I1(I1127_out),
        .O(of_instr_ii_32),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_124
   (of_instr_ii_31,
    \Using_FPGA.Native_0 ,
    I0125_out,
    I1123_out);
  output of_instr_ii_31;
  input \Using_FPGA.Native_0 ;
  input I0125_out;
  input I1123_out;

  wire I0125_out;
  wire I1123_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_31;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0125_out),
        .I1(I1123_out),
        .O(of_instr_ii_31),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_126
   (of_instr_ii_30,
    \Using_FPGA.Native_0 ,
    I0121_out,
    I1119_out);
  output of_instr_ii_30;
  input \Using_FPGA.Native_0 ;
  input I0121_out;
  input I1119_out;

  wire I0121_out;
  wire I1119_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_30;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0121_out),
        .I1(I1119_out),
        .O(of_instr_ii_30),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_128
   (of_instr_ii_29,
    \Using_FPGA.Native_0 ,
    I0117_out,
    I1115_out);
  output of_instr_ii_29;
  input \Using_FPGA.Native_0 ;
  input I0117_out;
  input I1115_out;

  wire I0117_out;
  wire I1115_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_29;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0117_out),
        .I1(I1115_out),
        .O(of_instr_ii_29),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_130
   (of_instr_ii_28,
    \Using_FPGA.Native_0 ,
    I0113_out,
    I1111_out);
  output of_instr_ii_28;
  input \Using_FPGA.Native_0 ;
  input I0113_out;
  input I1111_out;

  wire I0113_out;
  wire I1111_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_28;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0113_out),
        .I1(I1111_out),
        .O(of_instr_ii_28),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_132
   (of_instr_ii_27,
    \Using_FPGA.Native_0 ,
    I0109_out,
    I1107_out);
  output of_instr_ii_27;
  input \Using_FPGA.Native_0 ;
  input I0109_out;
  input I1107_out;

  wire I0109_out;
  wire I1107_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_27;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0109_out),
        .I1(I1107_out),
        .O(of_instr_ii_27),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_134
   (of_instr_ii_26,
    \Using_FPGA.Native_0 ,
    I0105_out,
    I1103_out);
  output of_instr_ii_26;
  input \Using_FPGA.Native_0 ;
  input I0105_out;
  input I1103_out;

  wire I0105_out;
  wire I1103_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_26;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0105_out),
        .I1(I1103_out),
        .O(of_instr_ii_26),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_136
   (of_instr_ii_25,
    \Using_FPGA.Native_0 ,
    I0101_out,
    I199_out);
  output of_instr_ii_25;
  input \Using_FPGA.Native_0 ;
  input I0101_out;
  input I199_out;

  wire I0101_out;
  wire I199_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_25;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0101_out),
        .I1(I199_out),
        .O(of_instr_ii_25),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_138
   (of_instr_ii_24,
    \Using_FPGA.Native_0 ,
    I097_out,
    I195_out);
  output of_instr_ii_24;
  input \Using_FPGA.Native_0 ;
  input I097_out;
  input I195_out;

  wire I097_out;
  wire I195_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_24;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I097_out),
        .I1(I195_out),
        .O(of_instr_ii_24),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_140
   (of_instr_ii_23,
    \Using_FPGA.Native_0 ,
    I093_out,
    I191_out);
  output of_instr_ii_23;
  input \Using_FPGA.Native_0 ;
  input I093_out;
  input I191_out;

  wire I093_out;
  wire I191_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_23;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I093_out),
        .I1(I191_out),
        .O(of_instr_ii_23),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_142
   (of_instr_ii_41,
    \Using_FPGA.Native_0 ,
    I0165_out,
    I1163_out);
  output of_instr_ii_41;
  input \Using_FPGA.Native_0 ;
  input I0165_out;
  input I1163_out;

  wire I0165_out;
  wire I1163_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_41;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0165_out),
        .I1(I1163_out),
        .O(of_instr_ii_41),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_144
   (of_instr_ii_22,
    \Using_FPGA.Native_0 ,
    I089_out,
    I187_out);
  output of_instr_ii_22;
  input \Using_FPGA.Native_0 ;
  input I089_out;
  input I187_out;

  wire I089_out;
  wire I187_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_22;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I089_out),
        .I1(I187_out),
        .O(of_instr_ii_22),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_146
   (of_instr_ii_21,
    \Using_FPGA.Native_0 ,
    I085_out,
    I183_out);
  output of_instr_ii_21;
  input \Using_FPGA.Native_0 ;
  input I085_out;
  input I183_out;

  wire I085_out;
  wire I183_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_21;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I085_out),
        .I1(I183_out),
        .O(of_instr_ii_21),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_148
   (of_instr_ii_20,
    \Using_FPGA.Native_0 ,
    I081_out,
    I179_out);
  output of_instr_ii_20;
  input \Using_FPGA.Native_0 ;
  input I081_out;
  input I179_out;

  wire I081_out;
  wire I179_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_20;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I081_out),
        .I1(I179_out),
        .O(of_instr_ii_20),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_150
   (of_instr_ii_19,
    \Using_FPGA.Native_0 ,
    I077_out,
    I175_out);
  output of_instr_ii_19;
  input \Using_FPGA.Native_0 ;
  input I077_out;
  input I175_out;

  wire I077_out;
  wire I175_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_19;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I077_out),
        .I1(I175_out),
        .O(of_instr_ii_19),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_152
   (of_instr_ii_18,
    \Using_FPGA.Native_0 ,
    I073_out,
    I171_out);
  output of_instr_ii_18;
  input \Using_FPGA.Native_0 ;
  input I073_out;
  input I171_out;

  wire I073_out;
  wire I171_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_18;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I073_out),
        .I1(I171_out),
        .O(of_instr_ii_18),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_154
   (of_instr_ii_17,
    \Using_FPGA.Native_0 ,
    I069_out,
    I167_out);
  output of_instr_ii_17;
  input \Using_FPGA.Native_0 ;
  input I069_out;
  input I167_out;

  wire I069_out;
  wire I167_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_17;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I069_out),
        .I1(I167_out),
        .O(of_instr_ii_17),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_156
   (of_instr_ii_16,
    \Using_FPGA.Native_0 ,
    I065_out,
    I163_out);
  output of_instr_ii_16;
  input \Using_FPGA.Native_0 ;
  input I065_out;
  input I163_out;

  wire I065_out;
  wire I163_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_16;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I065_out),
        .I1(I163_out),
        .O(of_instr_ii_16),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_158
   (of_instr_ii_15,
    \Using_FPGA.Native_0 ,
    I061_out,
    I159_out);
  output of_instr_ii_15;
  input \Using_FPGA.Native_0 ;
  input I061_out;
  input I159_out;

  wire I061_out;
  wire I159_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_15;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I061_out),
        .I1(I159_out),
        .O(of_instr_ii_15),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_160
   (of_instr_ii_14,
    \Using_FPGA.Native_0 ,
    I057_out,
    I155_out);
  output of_instr_ii_14;
  input \Using_FPGA.Native_0 ;
  input I057_out;
  input I155_out;

  wire I057_out;
  wire I155_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_14;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I057_out),
        .I1(I155_out),
        .O(of_instr_ii_14),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_162
   (of_instr_ii_13,
    \Using_FPGA.Native_0 ,
    I053_out,
    I151_out);
  output of_instr_ii_13;
  input \Using_FPGA.Native_0 ;
  input I053_out;
  input I151_out;

  wire I053_out;
  wire I151_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_13;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I053_out),
        .I1(I151_out),
        .O(of_instr_ii_13),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_164
   (of_instr_ii_40,
    \Using_FPGA.Native_0 ,
    I0161_out,
    I1159_out);
  output of_instr_ii_40;
  input \Using_FPGA.Native_0 ;
  input I0161_out;
  input I1159_out;

  wire I0161_out;
  wire I1159_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_40;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0161_out),
        .I1(I1159_out),
        .O(of_instr_ii_40),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_166
   (of_instr_ii_12,
    \Using_FPGA.Native_0 ,
    I049_out,
    I147_out);
  output of_instr_ii_12;
  input \Using_FPGA.Native_0 ;
  input I049_out;
  input I147_out;

  wire I049_out;
  wire I147_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_12;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I049_out),
        .I1(I147_out),
        .O(of_instr_ii_12),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_168
   (of_instr_ii_11,
    \Using_FPGA.Native_0 ,
    I045_out,
    I143_out);
  output of_instr_ii_11;
  input \Using_FPGA.Native_0 ;
  input I045_out;
  input I143_out;

  wire I045_out;
  wire I143_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_11;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I045_out),
        .I1(I143_out),
        .O(of_instr_ii_11),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_170
   (of_instr_ii_10,
    \Using_FPGA.Native_0 ,
    I041_out,
    I139_out);
  output of_instr_ii_10;
  input \Using_FPGA.Native_0 ;
  input I041_out;
  input I139_out;

  wire I041_out;
  wire I139_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_10;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I041_out),
        .I1(I139_out),
        .O(of_instr_ii_10),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_172
   (of_instr_ii_9,
    \Using_FPGA.Native_0 ,
    I037_out,
    I135_out);
  output of_instr_ii_9;
  input \Using_FPGA.Native_0 ;
  input I037_out;
  input I135_out;

  wire I037_out;
  wire I135_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_9;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I037_out),
        .I1(I135_out),
        .O(of_instr_ii_9),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_174
   (of_instr_ii_8,
    \Using_FPGA.Native_0 ,
    I033_out,
    I131_out);
  output of_instr_ii_8;
  input \Using_FPGA.Native_0 ;
  input I033_out;
  input I131_out;

  wire I033_out;
  wire I131_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_8;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I033_out),
        .I1(I131_out),
        .O(of_instr_ii_8),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_176
   (of_instr_ii_7,
    \Using_FPGA.Native_0 ,
    I029_out,
    I127_out);
  output of_instr_ii_7;
  input \Using_FPGA.Native_0 ;
  input I029_out;
  input I127_out;

  wire I029_out;
  wire I127_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_7;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I029_out),
        .I1(I127_out),
        .O(of_instr_ii_7),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_178
   (of_instr_ii_6,
    \Using_FPGA.Native_0 ,
    I025_out,
    I123_out);
  output of_instr_ii_6;
  input \Using_FPGA.Native_0 ;
  input I025_out;
  input I123_out;

  wire I025_out;
  wire I123_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_6;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I025_out),
        .I1(I123_out),
        .O(of_instr_ii_6),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_180
   (of_instr_ii_5,
    \Using_FPGA.Native_0 ,
    I021_out,
    I119_out);
  output of_instr_ii_5;
  input \Using_FPGA.Native_0 ;
  input I021_out;
  input I119_out;

  wire I021_out;
  wire I119_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_5;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I021_out),
        .I1(I119_out),
        .O(of_instr_ii_5),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_182
   (of_instr_ii_4,
    \Using_FPGA.Native_0 ,
    I017_out,
    I115_out);
  output of_instr_ii_4;
  input \Using_FPGA.Native_0 ;
  input I017_out;
  input I115_out;

  wire I017_out;
  wire I115_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_4;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I017_out),
        .I1(I115_out),
        .O(of_instr_ii_4),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_184
   (of_instr_ii_3,
    \Using_FPGA.Native_0 ,
    I013_out,
    I111_out);
  output of_instr_ii_3;
  input \Using_FPGA.Native_0 ;
  input I013_out;
  input I111_out;

  wire I013_out;
  wire I111_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_3;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I013_out),
        .I1(I111_out),
        .O(of_instr_ii_3),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_186
   (of_instr_ii_39,
    \Using_FPGA.Native_0 ,
    I0157_out,
    I1155_out);
  output of_instr_ii_39;
  input \Using_FPGA.Native_0 ;
  input I0157_out;
  input I1155_out;

  wire I0157_out;
  wire I1155_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_39;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0157_out),
        .I1(I1155_out),
        .O(of_instr_ii_39),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_188
   (of_instr_ii_2,
    \Using_FPGA.Native_0 ,
    I09_out,
    I17_out);
  output of_instr_ii_2;
  input \Using_FPGA.Native_0 ;
  input I09_out;
  input I17_out;

  wire I09_out;
  wire I17_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_2;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I09_out),
        .I1(I17_out),
        .O(of_instr_ii_2),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_190
   (of_instr_ii_1,
    \Using_FPGA.Native_0 ,
    I05_out,
    I13_out);
  output of_instr_ii_1;
  input \Using_FPGA.Native_0 ;
  input I05_out;
  input I13_out;

  wire I05_out;
  wire I13_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_1;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I05_out),
        .I1(I13_out),
        .O(of_instr_ii_1),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_192
   (of_instr_ii_0,
    IReady_0,
    \Using_FPGA.Native_0 ,
    I0_0,
    I1,
    IReady,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    if_missed_fetch);
  output of_instr_ii_0;
  output IReady_0;
  input \Using_FPGA.Native_0 ;
  input I0_0;
  input I1;
  input IReady;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input if_missed_fetch;

  wire I0_0;
  wire I1;
  wire IReady;
  wire IReady_0;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire if_missed_fetch;
  wire of_instr_ii_0;

  LUT5 #(
    .INIT(32'h0000FF02)) 
    \PC_Buffer_reg[3][31]_srl4_i_1 
       (.I0(IReady),
        .I1(\Using_FPGA.Native_1 ),
        .I2(\Using_FPGA.Native_2 ),
        .I3(\Using_FPGA.Native_3 ),
        .I4(if_missed_fetch),
        .O(IReady_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0_0),
        .I1(I1),
        .O(of_instr_ii_0),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_194
   (of_instr_ii_38,
    \Using_FPGA.Native_0 ,
    I0153_out,
    I1151_out);
  output of_instr_ii_38;
  input \Using_FPGA.Native_0 ;
  input I0153_out;
  input I1151_out;

  wire I0153_out;
  wire I1151_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_38;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0153_out),
        .I1(I1151_out),
        .O(of_instr_ii_38),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_196
   (of_instr_ii_37,
    \Using_FPGA.Native_0 ,
    I0149_out,
    I1147_out);
  output of_instr_ii_37;
  input \Using_FPGA.Native_0 ;
  input I0149_out;
  input I1147_out;

  wire I0149_out;
  wire I1147_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_37;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0149_out),
        .I1(I1147_out),
        .O(of_instr_ii_37),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_198
   (of_instr_ii_36,
    \Using_FPGA.Native_0 ,
    I0145_out,
    I1143_out);
  output of_instr_ii_36;
  input \Using_FPGA.Native_0 ;
  input I0145_out;
  input I1143_out;

  wire I0145_out;
  wire I1143_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_36;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0145_out),
        .I1(I1143_out),
        .O(of_instr_ii_36),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_200
   (of_instr_ii_35,
    \Using_FPGA.Native_0 ,
    I0141_out,
    I1139_out);
  output of_instr_ii_35;
  input \Using_FPGA.Native_0 ;
  input I0141_out;
  input I1139_out;

  wire I0141_out;
  wire I1139_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_35;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0141_out),
        .I1(I1139_out),
        .O(of_instr_ii_35),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_202
   (of_instr_ii_34,
    \Using_FPGA.Native_0 ,
    I0137_out,
    I1135_out);
  output of_instr_ii_34;
  input \Using_FPGA.Native_0 ;
  input I0137_out;
  input I1135_out;

  wire I0137_out;
  wire I1135_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_34;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0137_out),
        .I1(I1135_out),
        .O(of_instr_ii_34),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_204
   (of_instr_ii_33,
    \Using_FPGA.Native_0 ,
    I0133_out,
    I1131_out);
  output of_instr_ii_33;
  input \Using_FPGA.Native_0 ;
  input I0133_out;
  input I1131_out;

  wire I0133_out;
  wire I1131_out;
  wire \Using_FPGA.Native_0 ;
  wire of_instr_ii_33;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0133_out),
        .I1(I1131_out),
        .O(of_instr_ii_33),
        .S(\Using_FPGA.Native_0 ));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_207
   (of_pc_ii_31,
    \Using_FPGA.Native_0 ,
    I0125_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_31;
  input \Using_FPGA.Native_0 ;
  input I0125_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I0125_out;
  wire I1123_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_31;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0125_out),
        .I1(I1123_out),
        .O(of_pc_ii_31),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__57 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I1123_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_209
   (of_pc_ii_21,
    \Using_FPGA.Native_0 ,
    I085_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_21;
  input \Using_FPGA.Native_0 ;
  input I085_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I085_out;
  wire I183_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_21;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I085_out),
        .I1(I183_out),
        .O(of_pc_ii_21),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__47 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I183_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_211
   (of_pc_ii_20,
    \Using_FPGA.Native_0 ,
    I081_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_20;
  input \Using_FPGA.Native_0 ;
  input I081_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I081_out;
  wire I179_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_20;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I081_out),
        .I1(I179_out),
        .O(of_pc_ii_20),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__46 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I179_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_213
   (of_pc_ii_19,
    \Using_FPGA.Native_0 ,
    I077_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_19;
  input \Using_FPGA.Native_0 ;
  input I077_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I077_out;
  wire I175_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_19;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I077_out),
        .I1(I175_out),
        .O(of_pc_ii_19),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__45 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I175_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_215
   (of_pc_ii_18,
    \Using_FPGA.Native_0 ,
    I073_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_18;
  input \Using_FPGA.Native_0 ;
  input I073_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I073_out;
  wire I171_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_18;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I073_out),
        .I1(I171_out),
        .O(of_pc_ii_18),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__44 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I171_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_217
   (of_pc_ii_17,
    \Using_FPGA.Native_0 ,
    I069_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_17;
  input \Using_FPGA.Native_0 ;
  input I069_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I069_out;
  wire I167_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_17;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I069_out),
        .I1(I167_out),
        .O(of_pc_ii_17),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__43 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I167_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_219
   (of_pc_ii_16,
    \Using_FPGA.Native_0 ,
    I065_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_16;
  input \Using_FPGA.Native_0 ;
  input I065_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I065_out;
  wire I163_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_16;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I065_out),
        .I1(I163_out),
        .O(of_pc_ii_16),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__42 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I163_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_221
   (of_pc_ii_15,
    \Using_FPGA.Native_0 ,
    I061_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_15;
  input \Using_FPGA.Native_0 ;
  input I061_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I061_out;
  wire I159_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_15;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I061_out),
        .I1(I159_out),
        .O(of_pc_ii_15),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__41 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I159_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_223
   (of_pc_ii_14,
    \Using_FPGA.Native_0 ,
    I057_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_14;
  input \Using_FPGA.Native_0 ;
  input I057_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I057_out;
  wire I155_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_14;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I057_out),
        .I1(I155_out),
        .O(of_pc_ii_14),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__40 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I155_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_225
   (of_pc_ii_13,
    \Using_FPGA.Native_0 ,
    I053_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_13;
  input \Using_FPGA.Native_0 ;
  input I053_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I053_out;
  wire I151_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_13;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I053_out),
        .I1(I151_out),
        .O(of_pc_ii_13),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__39 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I151_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_227
   (of_pc_ii_12,
    \Using_FPGA.Native_0 ,
    I049_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_12;
  input \Using_FPGA.Native_0 ;
  input I049_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I049_out;
  wire I147_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_12;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I049_out),
        .I1(I147_out),
        .O(of_pc_ii_12),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__38 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I147_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_229
   (of_pc_ii_30,
    \Using_FPGA.Native_0 ,
    I0121_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_30;
  input \Using_FPGA.Native_0 ;
  input I0121_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I0121_out;
  wire I1119_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_30;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0121_out),
        .I1(I1119_out),
        .O(of_pc_ii_30),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__56 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I1119_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_231
   (of_pc_ii_11,
    \Using_FPGA.Native_0 ,
    I045_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_11;
  input \Using_FPGA.Native_0 ;
  input I045_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I045_out;
  wire I143_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_11;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I045_out),
        .I1(I143_out),
        .O(of_pc_ii_11),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__37 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I143_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_233
   (of_pc_ii_10,
    \Using_FPGA.Native_0 ,
    I041_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_10;
  input \Using_FPGA.Native_0 ;
  input I041_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I041_out;
  wire I139_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_10;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I041_out),
        .I1(I139_out),
        .O(of_pc_ii_10),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__36 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I139_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_235
   (of_pc_ii_9,
    \Using_FPGA.Native_0 ,
    I037_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_9;
  input \Using_FPGA.Native_0 ;
  input I037_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I037_out;
  wire I135_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_9;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I037_out),
        .I1(I135_out),
        .O(of_pc_ii_9),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__35 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I135_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_237
   (of_pc_ii_8,
    \Using_FPGA.Native_0 ,
    I033_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_8;
  input \Using_FPGA.Native_0 ;
  input I033_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I033_out;
  wire I131_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_8;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I033_out),
        .I1(I131_out),
        .O(of_pc_ii_8),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__34 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I131_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_239
   (of_pc_ii_7,
    \Using_FPGA.Native_0 ,
    I029_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_7;
  input \Using_FPGA.Native_0 ;
  input I029_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I029_out;
  wire I127_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_7;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I029_out),
        .I1(I127_out),
        .O(of_pc_ii_7),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__33 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I127_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_241
   (of_pc_ii_6,
    \Using_FPGA.Native_0 ,
    I025_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_6;
  input \Using_FPGA.Native_0 ;
  input I025_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I025_out;
  wire I123_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_6;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I025_out),
        .I1(I123_out),
        .O(of_pc_ii_6),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__32 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I123_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_243
   (of_pc_ii_5,
    \Using_FPGA.Native_0 ,
    I021_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_5;
  input \Using_FPGA.Native_0 ;
  input I021_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I021_out;
  wire I119_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_5;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I021_out),
        .I1(I119_out),
        .O(of_pc_ii_5),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__31 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I119_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_245
   (of_pc_ii_4,
    \Using_FPGA.Native_0 ,
    I017_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_4;
  input \Using_FPGA.Native_0 ;
  input I017_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I017_out;
  wire I115_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_4;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I017_out),
        .I1(I115_out),
        .O(of_pc_ii_4),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__30 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I115_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_247
   (of_pc_ii_3,
    \Using_FPGA.Native_0 ,
    I013_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_3;
  input \Using_FPGA.Native_0 ;
  input I013_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I013_out;
  wire I111_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_3;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I013_out),
        .I1(I111_out),
        .O(of_pc_ii_3),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__29 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I111_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_249
   (of_pc_ii_2,
    \Using_FPGA.Native_0 ,
    I09_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_2;
  input \Using_FPGA.Native_0 ;
  input I09_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I09_out;
  wire I17_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_2;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I09_out),
        .I1(I17_out),
        .O(of_pc_ii_2),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__28 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I17_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_251
   (of_pc_ii_29,
    \Using_FPGA.Native_0 ,
    I0117_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_29;
  input \Using_FPGA.Native_0 ;
  input I0117_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I0117_out;
  wire I1115_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_29;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0117_out),
        .I1(I1115_out),
        .O(of_pc_ii_29),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__55 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I1115_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_253
   (of_pc_ii_1,
    \Using_FPGA.Native_0 ,
    I05_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_1;
  input \Using_FPGA.Native_0 ;
  input I05_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I05_out;
  wire I13_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_1;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I05_out),
        .I1(I13_out),
        .O(of_pc_ii_1),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__27 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I13_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_255
   (of_pc_ii_0,
    \Using_FPGA.Native_0 ,
    I0,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_0;
  input \Using_FPGA.Native_0 ;
  input I0;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I0;
  wire I1;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_0;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0),
        .I1(I1),
        .O(of_pc_ii_0),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__26 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I1));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_257
   (of_pc_ii_28,
    \Using_FPGA.Native_0 ,
    I0113_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_28;
  input \Using_FPGA.Native_0 ;
  input I0113_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I0113_out;
  wire I1111_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_28;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0113_out),
        .I1(I1111_out),
        .O(of_pc_ii_28),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__54 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I1111_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_259
   (of_pc_ii_27,
    \Using_FPGA.Native_0 ,
    I0109_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_27;
  input \Using_FPGA.Native_0 ;
  input I0109_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I0109_out;
  wire I1107_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_27;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0109_out),
        .I1(I1107_out),
        .O(of_pc_ii_27),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__53 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I1107_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_261
   (of_pc_ii_26,
    \Using_FPGA.Native_0 ,
    I0105_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_26;
  input \Using_FPGA.Native_0 ;
  input I0105_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I0105_out;
  wire I1103_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_26;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0105_out),
        .I1(I1103_out),
        .O(of_pc_ii_26),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__52 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I1103_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_263
   (of_pc_ii_25,
    \Using_FPGA.Native_0 ,
    I0101_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_25;
  input \Using_FPGA.Native_0 ;
  input I0101_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I0101_out;
  wire I199_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_25;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I0101_out),
        .I1(I199_out),
        .O(of_pc_ii_25),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__51 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I199_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_265
   (of_pc_ii_24,
    \Using_FPGA.Native_0 ,
    I097_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_24;
  input \Using_FPGA.Native_0 ;
  input I097_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I097_out;
  wire I195_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_24;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I097_out),
        .I1(I195_out),
        .O(of_pc_ii_24),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__50 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I195_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_267
   (of_pc_ii_23,
    \Using_FPGA.Native_0 ,
    I093_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_23;
  input \Using_FPGA.Native_0 ;
  input I093_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I093_out;
  wire I191_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_23;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I093_out),
        .I1(I191_out),
        .O(of_pc_ii_23),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__49 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I191_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_269
   (of_pc_ii_22,
    \Using_FPGA.Native_0 ,
    I089_out,
    out,
    \Using_FPGA.Native_1 ,
    Q);
  output of_pc_ii_22;
  input \Using_FPGA.Native_0 ;
  input I089_out;
  input [0:0]out;
  input \Using_FPGA.Native_1 ;
  input [0:0]Q;

  wire I089_out;
  wire I187_out;
  wire [0:0]Q;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire of_pc_ii_22;
  wire [0:0]out;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(I089_out),
        .I1(I187_out),
        .O(of_pc_ii_22),
        .S(\Using_FPGA.Native_0 ));
  LUT3 #(
    .INIT(8'hE2)) 
    \Using_FPGA.Native_i_2__48 
       (.I0(out),
        .I1(\Using_FPGA.Native_1 ),
        .I2(Q),
        .O(I187_out));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_425
   (D,
    swap_result_reg,
    of_op1_sel_spr,
    \EX_Op1_reg[0] ,
    I1,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result_reg;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[0] ;
  input I1;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[0] ;
  wire I1;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result_reg;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[0] ),
        .I1(I1),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_4__0 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_426
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[10] ,
    \EX_Op1_reg[10]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[10] ;
  input \EX_Op1_reg[10]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[10] ;
  wire \EX_Op1_reg[10]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[10] ),
        .I1(\EX_Op1_reg[10]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__104 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_427
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[11] ,
    \EX_Op1_reg[11]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[11] ;
  input \EX_Op1_reg[11]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[11] ;
  wire \EX_Op1_reg[11]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[11] ),
        .I1(\EX_Op1_reg[11]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__103 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_428
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[12] ,
    \EX_Op1_reg[12]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[12] ;
  input \EX_Op1_reg[12]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[12] ;
  wire \EX_Op1_reg[12]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[12] ),
        .I1(\EX_Op1_reg[12]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__102 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_429
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[13] ,
    \EX_Op1_reg[13]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[13] ;
  input \EX_Op1_reg[13]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[13] ;
  wire \EX_Op1_reg[13]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[13] ),
        .I1(\EX_Op1_reg[13]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__101 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_430
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[14] ,
    \EX_Op1_reg[14]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[14] ;
  input \EX_Op1_reg[14]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[14] ;
  wire \EX_Op1_reg[14]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[14] ),
        .I1(\EX_Op1_reg[14]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__100 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_431
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[15] ,
    \EX_Op1_reg[15]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[15] ;
  input \EX_Op1_reg[15]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[15] ;
  wire \EX_Op1_reg[15]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[15] ),
        .I1(\EX_Op1_reg[15]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__99 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_432
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[16] ,
    \EX_Op1_reg[16]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[16] ;
  input \EX_Op1_reg[16]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[16] ;
  wire \EX_Op1_reg[16]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[16] ),
        .I1(\EX_Op1_reg[16]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__98 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_433
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[17] ,
    \EX_Op1_reg[17]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[17] ;
  input \EX_Op1_reg[17]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[17] ;
  wire \EX_Op1_reg[17]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[17] ),
        .I1(\EX_Op1_reg[17]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__97 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_434
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[18] ,
    \EX_Op1_reg[18]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[18] ;
  input \EX_Op1_reg[18]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[18] ;
  wire \EX_Op1_reg[18]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[18] ),
        .I1(\EX_Op1_reg[18]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__96 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_435
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[19] ,
    \EX_Op1_reg[19]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[19] ;
  input \EX_Op1_reg[19]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[19] ;
  wire \EX_Op1_reg[19]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[19] ),
        .I1(\EX_Op1_reg[19]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__95 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_436
   (D,
    swap_result_reg,
    of_op1_sel_spr,
    \EX_Op1_reg[1] ,
    \EX_Op1_reg[1]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result_reg;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[1] ;
  input \EX_Op1_reg[1]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[1] ;
  wire \EX_Op1_reg[1]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result_reg;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[1] ),
        .I1(\EX_Op1_reg[1]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__113 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_437
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[20] ,
    \EX_Op1_reg[20]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[20] ;
  input \EX_Op1_reg[20]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[20] ;
  wire \EX_Op1_reg[20]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[20] ),
        .I1(\EX_Op1_reg[20]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__94 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_438
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[21] ,
    \EX_Op1_reg[21]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[21] ;
  input \EX_Op1_reg[21]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[21] ;
  wire \EX_Op1_reg[21]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[21] ),
        .I1(\EX_Op1_reg[21]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__93 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_439
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[22] ,
    \EX_Op1_reg[22]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[22] ;
  input \EX_Op1_reg[22]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[22] ;
  wire \EX_Op1_reg[22]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[22] ),
        .I1(\EX_Op1_reg[22]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__92 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_440
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[23] ,
    \EX_Op1_reg[23]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[23] ;
  input \EX_Op1_reg[23]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[23] ;
  wire \EX_Op1_reg[23]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[23] ),
        .I1(\EX_Op1_reg[23]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__91 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_441
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[24] ,
    \EX_Op1_reg[24]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[24] ;
  input \EX_Op1_reg[24]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[24] ;
  wire \EX_Op1_reg[24]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[24] ),
        .I1(\EX_Op1_reg[24]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__90 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_442
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[25] ,
    \EX_Op1_reg[25]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[25] ;
  input \EX_Op1_reg[25]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[25] ;
  wire \EX_Op1_reg[25]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[25] ),
        .I1(\EX_Op1_reg[25]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__89 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_443
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[26] ,
    \EX_Op1_reg[26]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[26] ;
  input \EX_Op1_reg[26]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[26] ;
  wire \EX_Op1_reg[26]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[26] ),
        .I1(\EX_Op1_reg[26]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__88 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_444
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[27] ,
    \EX_Op1_reg[27]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[27] ;
  input \EX_Op1_reg[27]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[27] ;
  wire \EX_Op1_reg[27]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[27] ),
        .I1(\EX_Op1_reg[27]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__87 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_445
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[28] ,
    \EX_Op1_reg[28]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[28] ;
  input \EX_Op1_reg[28]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[28] ;
  wire \EX_Op1_reg[28]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[28] ),
        .I1(\EX_Op1_reg[28]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__86 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_446
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[29] ,
    \EX_Op1_reg[29]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[29] ;
  input \EX_Op1_reg[29]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[29] ;
  wire \EX_Op1_reg[29]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[29] ),
        .I1(\EX_Op1_reg[29]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__85 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_447
   (D,
    swap_result_reg,
    of_op1_sel_spr,
    \EX_Op1_reg[2] ,
    \EX_Op1_reg[2]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result_reg;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[2] ;
  input \EX_Op1_reg[2]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[2] ;
  wire \EX_Op1_reg[2]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result_reg;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[2] ),
        .I1(\EX_Op1_reg[2]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__112 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_448
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[30] ,
    \EX_Op1_reg[30]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[30] ;
  input \EX_Op1_reg[30]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[30] ;
  wire \EX_Op1_reg[30]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[30] ),
        .I1(\EX_Op1_reg[30]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__84 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_449
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[31] ,
    \EX_Op1_reg[31]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[31] ;
  input \EX_Op1_reg[31]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[31] ;
  wire \EX_Op1_reg[31]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[31] ),
        .I1(\EX_Op1_reg[31]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__83 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_450
   (D,
    swap_result_reg,
    of_op1_sel_spr,
    \EX_Op1_reg[3] ,
    \EX_Op1_reg[3]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result_reg;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[3] ;
  input \EX_Op1_reg[3]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[3] ;
  wire \EX_Op1_reg[3]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result_reg;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[3] ),
        .I1(\EX_Op1_reg[3]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__111 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_451
   (D,
    swap_result_reg,
    of_op1_sel_spr,
    \EX_Op1_reg[4] ,
    \EX_Op1_reg[4]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result_reg;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[4] ;
  input \EX_Op1_reg[4]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[4] ;
  wire \EX_Op1_reg[4]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result_reg;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[4] ),
        .I1(\EX_Op1_reg[4]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__110 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_452
   (D,
    swap_result_reg,
    of_op1_sel_spr,
    \EX_Op1_reg[5] ,
    \EX_Op1_reg[5]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result_reg;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[5] ;
  input \EX_Op1_reg[5]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[5] ;
  wire \EX_Op1_reg[5]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result_reg;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[5] ),
        .I1(\EX_Op1_reg[5]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__109 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_453
   (D,
    swap_result_reg,
    of_op1_sel_spr,
    \EX_Op1_reg[6] ,
    \EX_Op1_reg[6]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result_reg;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[6] ;
  input \EX_Op1_reg[6]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[6] ;
  wire \EX_Op1_reg[6]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result_reg;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[6] ),
        .I1(\EX_Op1_reg[6]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__108 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_454
   (D,
    swap_result_reg,
    of_op1_sel_spr,
    \EX_Op1_reg[7] ,
    \EX_Op1_reg[7]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result_reg;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[7] ;
  input \EX_Op1_reg[7]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[7] ;
  wire \EX_Op1_reg[7]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result_reg;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[7] ),
        .I1(\EX_Op1_reg[7]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__107 
       (.I0(Q[0]),
        .I1(ex_swap_byte_instr),
        .I2(Q[1]),
        .O(swap_result_reg));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_455
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[8] ,
    \EX_Op1_reg[8]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[8] ;
  input \EX_Op1_reg[8]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[8] ;
  wire \EX_Op1_reg[8]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[8] ),
        .I1(\EX_Op1_reg[8]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__106 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_MUXF7" *) 
module system_microblaze_0_0__MB_MUXF7_456
   (D,
    swap_result,
    of_op1_sel_spr,
    \EX_Op1_reg[9] ,
    \EX_Op1_reg[9]_0 ,
    Q,
    ex_swap_byte_instr);
  output [0:0]D;
  output [0:0]swap_result;
  input of_op1_sel_spr;
  input [0:0]\EX_Op1_reg[9] ;
  input \EX_Op1_reg[9]_0 ;
  input [1:0]Q;
  input ex_swap_byte_instr;

  wire [0:0]D;
  wire [0:0]\EX_Op1_reg[9] ;
  wire \EX_Op1_reg[9]_0 ;
  wire [1:0]Q;
  wire ex_swap_byte_instr;
  wire of_op1_sel_spr;
  wire [0:0]swap_result;

  (* BOX_TYPE = "PRIMITIVE" *) 
  MUXF7 \Using_FPGA.Native 
       (.I0(\EX_Op1_reg[9] ),
        .I1(\EX_Op1_reg[9]_0 ),
        .O(D),
        .S(of_op1_sel_spr));
  LUT3 #(
    .INIT(8'hB8)) 
    \Using_FPGA.Native_i_2__105 
       (.I0(Q[1]),
        .I1(ex_swap_byte_instr),
        .I2(Q[0]),
        .O(swap_result));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module system_microblaze_0_0__MB_RAM32M
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    DID,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \EX_Branch_CMP_Op1_reg[0] );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]DID;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\EX_Branch_CMP_Op1_reg[0] ;

  wire Clk;
  wire [1:0]DID;
  wire [4:0]\EX_Branch_CMP_Op1_reg[0] ;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\EX_Branch_CMP_Op1_reg[0] ),
        .DIA(DID),
        .DIB(DID),
        .DIC(DID),
        .DID(DID),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module system_microblaze_0_0__MB_RAM32M_410
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \EX_Branch_CMP_Op1_reg[20] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \EX_Branch_CMP_Op1_reg[20]_0 );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\EX_Branch_CMP_Op1_reg[20] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\EX_Branch_CMP_Op1_reg[20]_0 ;

  wire Clk;
  wire [1:0]\EX_Branch_CMP_Op1_reg[20] ;
  wire [4:0]\EX_Branch_CMP_Op1_reg[20]_0 ;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\EX_Branch_CMP_Op1_reg[20]_0 ),
        .DIA(\EX_Branch_CMP_Op1_reg[20] ),
        .DIB(\EX_Branch_CMP_Op1_reg[20] ),
        .DIC(\EX_Branch_CMP_Op1_reg[20] ),
        .DID(\EX_Branch_CMP_Op1_reg[20] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module system_microblaze_0_0__MB_RAM32M_411
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \EX_Branch_CMP_Op1_reg[22] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \EX_Branch_CMP_Op1_reg[22]_0 );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\EX_Branch_CMP_Op1_reg[22] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\EX_Branch_CMP_Op1_reg[22]_0 ;

  wire Clk;
  wire [1:0]\EX_Branch_CMP_Op1_reg[22] ;
  wire [4:0]\EX_Branch_CMP_Op1_reg[22]_0 ;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\EX_Branch_CMP_Op1_reg[22]_0 ),
        .DIA(\EX_Branch_CMP_Op1_reg[22] ),
        .DIB(\EX_Branch_CMP_Op1_reg[22] ),
        .DIC(\EX_Branch_CMP_Op1_reg[22] ),
        .DID(\EX_Branch_CMP_Op1_reg[22] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module system_microblaze_0_0__MB_RAM32M_412
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \EX_Branch_CMP_Op1_reg[24] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \EX_Branch_CMP_Op1_reg[24]_0 );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\EX_Branch_CMP_Op1_reg[24] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\EX_Branch_CMP_Op1_reg[24]_0 ;

  wire Clk;
  wire [1:0]\EX_Branch_CMP_Op1_reg[24] ;
  wire [4:0]\EX_Branch_CMP_Op1_reg[24]_0 ;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\EX_Branch_CMP_Op1_reg[24]_0 ),
        .DIA(\EX_Branch_CMP_Op1_reg[24] ),
        .DIB(\EX_Branch_CMP_Op1_reg[24] ),
        .DIC(\EX_Branch_CMP_Op1_reg[24] ),
        .DID(\EX_Branch_CMP_Op1_reg[24] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module system_microblaze_0_0__MB_RAM32M_413
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \EX_Branch_CMP_Op1_reg[26] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \EX_Branch_CMP_Op1_reg[26]_0 );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\EX_Branch_CMP_Op1_reg[26] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\EX_Branch_CMP_Op1_reg[26]_0 ;

  wire Clk;
  wire [1:0]\EX_Branch_CMP_Op1_reg[26] ;
  wire [4:0]\EX_Branch_CMP_Op1_reg[26]_0 ;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\EX_Branch_CMP_Op1_reg[26]_0 ),
        .DIA(\EX_Branch_CMP_Op1_reg[26] ),
        .DIB(\EX_Branch_CMP_Op1_reg[26] ),
        .DIC(\EX_Branch_CMP_Op1_reg[26] ),
        .DID(\EX_Branch_CMP_Op1_reg[26] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module system_microblaze_0_0__MB_RAM32M_414
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \EX_Branch_CMP_Op1_reg[28] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \EX_Branch_CMP_Op1_reg[28]_0 );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\EX_Branch_CMP_Op1_reg[28] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\EX_Branch_CMP_Op1_reg[28]_0 ;

  wire Clk;
  wire [1:0]\EX_Branch_CMP_Op1_reg[28] ;
  wire [4:0]\EX_Branch_CMP_Op1_reg[28]_0 ;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\EX_Branch_CMP_Op1_reg[28]_0 ),
        .DIA(\EX_Branch_CMP_Op1_reg[28] ),
        .DIB(\EX_Branch_CMP_Op1_reg[28] ),
        .DIC(\EX_Branch_CMP_Op1_reg[28] ),
        .DID(\EX_Branch_CMP_Op1_reg[28] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module system_microblaze_0_0__MB_RAM32M_415
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \EX_Branch_CMP_Op1_reg[30] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \EX_Branch_CMP_Op1_reg[30]_0 );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\EX_Branch_CMP_Op1_reg[30] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\EX_Branch_CMP_Op1_reg[30]_0 ;

  wire Clk;
  wire [1:0]\EX_Branch_CMP_Op1_reg[30] ;
  wire [4:0]\EX_Branch_CMP_Op1_reg[30]_0 ;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\EX_Branch_CMP_Op1_reg[30]_0 ),
        .DIA(\EX_Branch_CMP_Op1_reg[30] ),
        .DIB(\EX_Branch_CMP_Op1_reg[30] ),
        .DIC(\EX_Branch_CMP_Op1_reg[30] ),
        .DID(\EX_Branch_CMP_Op1_reg[30] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module system_microblaze_0_0__MB_RAM32M_416
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \EX_Branch_CMP_Op1_reg[2] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \EX_Branch_CMP_Op1_reg[2]_0 );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\EX_Branch_CMP_Op1_reg[2] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\EX_Branch_CMP_Op1_reg[2]_0 ;

  wire Clk;
  wire [1:0]\EX_Branch_CMP_Op1_reg[2] ;
  wire [4:0]\EX_Branch_CMP_Op1_reg[2]_0 ;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\EX_Branch_CMP_Op1_reg[2]_0 ),
        .DIA(\EX_Branch_CMP_Op1_reg[2] ),
        .DIB(\EX_Branch_CMP_Op1_reg[2] ),
        .DIC(\EX_Branch_CMP_Op1_reg[2] ),
        .DID(\EX_Branch_CMP_Op1_reg[2] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module system_microblaze_0_0__MB_RAM32M_417
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \EX_Branch_CMP_Op1_reg[4] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \EX_Branch_CMP_Op1_reg[4]_0 );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\EX_Branch_CMP_Op1_reg[4] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\EX_Branch_CMP_Op1_reg[4]_0 ;

  wire Clk;
  wire [1:0]\EX_Branch_CMP_Op1_reg[4] ;
  wire [4:0]\EX_Branch_CMP_Op1_reg[4]_0 ;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\EX_Branch_CMP_Op1_reg[4]_0 ),
        .DIA(\EX_Branch_CMP_Op1_reg[4] ),
        .DIB(\EX_Branch_CMP_Op1_reg[4] ),
        .DIC(\EX_Branch_CMP_Op1_reg[4] ),
        .DID(\EX_Branch_CMP_Op1_reg[4] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module system_microblaze_0_0__MB_RAM32M_418
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \EX_Branch_CMP_Op1_reg[6] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \EX_Branch_CMP_Op1_reg[6]_0 );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\EX_Branch_CMP_Op1_reg[6] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\EX_Branch_CMP_Op1_reg[6]_0 ;

  wire Clk;
  wire [1:0]\EX_Branch_CMP_Op1_reg[6] ;
  wire [4:0]\EX_Branch_CMP_Op1_reg[6]_0 ;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\EX_Branch_CMP_Op1_reg[6]_0 ),
        .DIA(\EX_Branch_CMP_Op1_reg[6] ),
        .DIB(\EX_Branch_CMP_Op1_reg[6] ),
        .DIC(\EX_Branch_CMP_Op1_reg[6] ),
        .DID(\EX_Branch_CMP_Op1_reg[6] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module system_microblaze_0_0__MB_RAM32M_419
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \EX_Branch_CMP_Op1_reg[8] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \EX_Branch_CMP_Op1_reg[8]_0 );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\EX_Branch_CMP_Op1_reg[8] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\EX_Branch_CMP_Op1_reg[8]_0 ;

  wire Clk;
  wire [1:0]\EX_Branch_CMP_Op1_reg[8] ;
  wire [4:0]\EX_Branch_CMP_Op1_reg[8]_0 ;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\EX_Branch_CMP_Op1_reg[8]_0 ),
        .DIA(\EX_Branch_CMP_Op1_reg[8] ),
        .DIB(\EX_Branch_CMP_Op1_reg[8] ),
        .DIC(\EX_Branch_CMP_Op1_reg[8] ),
        .DID(\EX_Branch_CMP_Op1_reg[8] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module system_microblaze_0_0__MB_RAM32M_420
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \EX_Branch_CMP_Op1_reg[10] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \EX_Branch_CMP_Op1_reg[10]_0 );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\EX_Branch_CMP_Op1_reg[10] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\EX_Branch_CMP_Op1_reg[10]_0 ;

  wire Clk;
  wire [1:0]\EX_Branch_CMP_Op1_reg[10] ;
  wire [4:0]\EX_Branch_CMP_Op1_reg[10]_0 ;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\EX_Branch_CMP_Op1_reg[10]_0 ),
        .DIA(\EX_Branch_CMP_Op1_reg[10] ),
        .DIB(\EX_Branch_CMP_Op1_reg[10] ),
        .DIC(\EX_Branch_CMP_Op1_reg[10] ),
        .DID(\EX_Branch_CMP_Op1_reg[10] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module system_microblaze_0_0__MB_RAM32M_421
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \EX_Branch_CMP_Op1_reg[12] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \EX_Branch_CMP_Op1_reg[12]_0 );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\EX_Branch_CMP_Op1_reg[12] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\EX_Branch_CMP_Op1_reg[12]_0 ;

  wire Clk;
  wire [1:0]\EX_Branch_CMP_Op1_reg[12] ;
  wire [4:0]\EX_Branch_CMP_Op1_reg[12]_0 ;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\EX_Branch_CMP_Op1_reg[12]_0 ),
        .DIA(\EX_Branch_CMP_Op1_reg[12] ),
        .DIB(\EX_Branch_CMP_Op1_reg[12] ),
        .DIC(\EX_Branch_CMP_Op1_reg[12] ),
        .DID(\EX_Branch_CMP_Op1_reg[12] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module system_microblaze_0_0__MB_RAM32M_422
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \EX_Branch_CMP_Op1_reg[14] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \EX_Branch_CMP_Op1_reg[14]_0 );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\EX_Branch_CMP_Op1_reg[14] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\EX_Branch_CMP_Op1_reg[14]_0 ;

  wire Clk;
  wire [1:0]\EX_Branch_CMP_Op1_reg[14] ;
  wire [4:0]\EX_Branch_CMP_Op1_reg[14]_0 ;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\EX_Branch_CMP_Op1_reg[14]_0 ),
        .DIA(\EX_Branch_CMP_Op1_reg[14] ),
        .DIB(\EX_Branch_CMP_Op1_reg[14] ),
        .DIC(\EX_Branch_CMP_Op1_reg[14] ),
        .DID(\EX_Branch_CMP_Op1_reg[14] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module system_microblaze_0_0__MB_RAM32M_423
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \EX_Branch_CMP_Op1_reg[16] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \EX_Branch_CMP_Op1_reg[16]_0 );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\EX_Branch_CMP_Op1_reg[16] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\EX_Branch_CMP_Op1_reg[16]_0 ;

  wire Clk;
  wire [1:0]\EX_Branch_CMP_Op1_reg[16] ;
  wire [4:0]\EX_Branch_CMP_Op1_reg[16]_0 ;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\EX_Branch_CMP_Op1_reg[16]_0 ),
        .DIA(\EX_Branch_CMP_Op1_reg[16] ),
        .DIB(\EX_Branch_CMP_Op1_reg[16] ),
        .DIC(\EX_Branch_CMP_Op1_reg[16] ),
        .DID(\EX_Branch_CMP_Op1_reg[16] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_RAM32M" *) 
module system_microblaze_0_0__MB_RAM32M_424
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    \EX_Branch_CMP_Op1_reg[18] ,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \EX_Branch_CMP_Op1_reg[18]_0 );
  output [1:0]GPR_Op1;
  output [1:0]GPR_Op2;
  output [1:0]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]\EX_Branch_CMP_Op1_reg[18] ;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\EX_Branch_CMP_Op1_reg[18]_0 ;

  wire Clk;
  wire [1:0]\EX_Branch_CMP_Op1_reg[18] ;
  wire [4:0]\EX_Branch_CMP_Op1_reg[18]_0 ;
  wire [1:0]GPR_Op1;
  wire [1:0]GPR_Op2;
  wire [1:0]GPR_Op3;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;
  wire [1:0]\NLW_Using_FPGA.Native_DOD_UNCONNECTED ;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "SWEEP" *) 
  RAM32M #(
    .INIT_A(64'h0000000000000000),
    .INIT_B(64'h0000000000000000),
    .INIT_C(64'h0000000000000000),
    .INIT_D(64'h0000000000000000),
    .IS_WCLK_INVERTED(1'b0)) 
    \Using_FPGA.Native 
       (.ADDRA({of_gpr_op1_rd_addr[0],of_gpr_op1_rd_addr[1],of_gpr_op1_rd_addr[2],of_gpr_op1_rd_addr[3],of_gpr_op1_rd_addr[4]}),
        .ADDRB(of_imm_data),
        .ADDRC({of_gpr_op3_rd_addr[0],of_gpr_op3_rd_addr[1],of_gpr_op3_rd_addr[2],of_gpr_op3_rd_addr[3],of_gpr_op3_rd_addr[4]}),
        .ADDRD(\EX_Branch_CMP_Op1_reg[18]_0 ),
        .DIA(\EX_Branch_CMP_Op1_reg[18] ),
        .DIB(\EX_Branch_CMP_Op1_reg[18] ),
        .DIC(\EX_Branch_CMP_Op1_reg[18] ),
        .DID(\EX_Branch_CMP_Op1_reg[18] ),
        .DOA(GPR_Op1),
        .DOB(GPR_Op2),
        .DOC(GPR_Op3),
        .DOD(\NLW_Using_FPGA.Native_DOD_UNCONNECTED [1:0]),
        .WCLK(Clk),
        .WE(WB_GPR_Wr));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module system_microblaze_0_0__MB_SRL16E
   (Q_0,
    Q,
    Dbg_Clk);
  output Q_0;
  input [3:0]Q;
  input Dbg_Clk;

  wire Dbg_Clk;
  wire [3:0]Q;
  wire Q_0;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.SRL16E_1/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h001B),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(Dbg_Clk),
        .D(1'b0),
        .Q(Q_0));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module system_microblaze_0_0__MB_SRL16E__parameterized3
   (tdo_config_word1_13,
    Q,
    Dbg_Clk);
  output tdo_config_word1_13;
  input [3:0]Q;
  input Dbg_Clk;

  wire Dbg_Clk;
  wire [3:0]Q;
  wire tdo_config_word1_13;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[1].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'hFFFF),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(Dbg_Clk),
        .D(1'b0),
        .Q(tdo_config_word1_13));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module system_microblaze_0_0__MB_SRL16E__parameterized3_21
   (tdo_config_word1_9,
    Q,
    Dbg_Clk);
  output tdo_config_word1_9;
  input [3:0]Q;
  input Dbg_Clk;

  wire Dbg_Clk;
  wire [3:0]Q;
  wire tdo_config_word1_9;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[5].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'hFFFF),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(Dbg_Clk),
        .D(1'b0),
        .Q(tdo_config_word1_9));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module system_microblaze_0_0__MB_SRL16E__parameterized5
   (\Serial_Dbg_Intf.shift_count_reg[6] ,
    Q,
    Dbg_Clk,
    Dbg_TDO_INST_0_i_5,
    tdo_config_word1_13,
    tdo_config_word1_14,
    Q_0);
  output \Serial_Dbg_Intf.shift_count_reg[6] ;
  input [6:0]Q;
  input Dbg_Clk;
  input Dbg_TDO_INST_0_i_5;
  input tdo_config_word1_13;
  input tdo_config_word1_14;
  input Q_0;

  wire Dbg_Clk;
  wire Dbg_TDO_INST_0_i_24_n_0;
  wire Dbg_TDO_INST_0_i_5;
  wire [6:0]Q;
  wire Q_0;
  wire \Serial_Dbg_Intf.shift_count_reg[6] ;
  wire tdo_config_word1_12;
  wire tdo_config_word1_13;

  MUXF7 Dbg_TDO_INST_0_i_13
       (.I0(Dbg_TDO_INST_0_i_24_n_0),
        .I1(Dbg_TDO_INST_0_i_5),
        .O(\Serial_Dbg_Intf.shift_count_reg[6] ),
        .S(Q[6]));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT5 #(
    .INIT(32'hA0CFA0C0)) 
    Dbg_TDO_INST_0_i_24
       (.I0(tdo_config_word1_12),
        .I1(tdo_config_word1_13),
        .I2(Q[5]),
        .I3(Q[4]),
        .I4(Q_0),
        .O(Dbg_TDO_INST_0_i_24_n_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[2].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h3FFF),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(Dbg_Clk),
        .D(1'b0),
        .Q(tdo_config_word1_12));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module system_microblaze_0_0__MB_SRL16E__parameterized5_22
   (\Serial_Dbg_Intf.shift_count_reg[5] ,
    Q,
    Dbg_Clk,
    tdo_config_word1_9,
    tdo_config_word1_10,
    tdo_config_word1_11);
  output \Serial_Dbg_Intf.shift_count_reg[5] ;
  input [5:0]Q;
  input Dbg_Clk;
  input tdo_config_word1_9;
  input tdo_config_word1_10;
  input tdo_config_word1_11;

  wire Dbg_Clk;
  wire [5:0]Q;
  wire \Serial_Dbg_Intf.shift_count_reg[5] ;
  wire tdo_config_word1_8;
  wire tdo_config_word1_9;

  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT4 #(
    .INIT(16'hA0C0)) 
    Dbg_TDO_INST_0_i_25
       (.I0(tdo_config_word1_8),
        .I1(tdo_config_word1_9),
        .I2(Q[5]),
        .I3(Q[4]),
        .O(\Serial_Dbg_Intf.shift_count_reg[5] ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.The_Cache_Addresses[6].SRL16E_Cache_I/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h3FFF),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(Dbg_Clk),
        .D(1'b0),
        .Q(tdo_config_word1_8));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module system_microblaze_0_0__MB_SRL16E__parameterized7
   (tdo_config_word1_5,
    Q,
    Dbg_Clk);
  output tdo_config_word1_5;
  input [3:0]Q;
  input Dbg_Clk;

  wire Dbg_Clk;
  wire [3:0]Q;
  wire tdo_config_word1_5;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.SRL16E_3/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h0064),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(Dbg_Clk),
        .D(1'b0),
        .Q(tdo_config_word1_5));
endmodule

(* ORIG_REF_NAME = "MB_SRL16E" *) 
module system_microblaze_0_0__MB_SRL16E__parameterized9
   (Dbg_TDO,
    Q,
    Dbg_Clk,
    Data_Read_Reg_En,
    TDO_Data_Reg__31,
    Dbg_TDO_INST_0_i_2_0,
    Config_Reg_En,
    TDO_Instr_Reg,
    Instr_Insert_Reg_En,
    tdo_config_word1_0,
    tdo_config_word1_1,
    tdo_config_word1_5,
    tdo_config_word1_6,
    tdo_config_word1_7,
    Status_Reg_En,
    TDO_Status_Reg__17);
  output Dbg_TDO;
  input [7:0]Q;
  input Dbg_Clk;
  input Data_Read_Reg_En;
  input TDO_Data_Reg__31;
  input Dbg_TDO_INST_0_i_2_0;
  input Config_Reg_En;
  input TDO_Instr_Reg;
  input Instr_Insert_Reg_En;
  input tdo_config_word1_0;
  input tdo_config_word1_1;
  input tdo_config_word1_5;
  input tdo_config_word1_6;
  input tdo_config_word1_7;
  input Status_Reg_En;
  input TDO_Status_Reg__17;

  wire Config_Reg_En;
  wire Data_Read_Reg_En;
  wire Dbg_Clk;
  wire Dbg_TDO;
  wire Dbg_TDO_INST_0_i_12_n_0;
  wire Dbg_TDO_INST_0_i_23_n_0;
  wire Dbg_TDO_INST_0_i_2_0;
  wire Dbg_TDO_INST_0_i_2_n_0;
  wire Dbg_TDO_INST_0_i_5_n_0;
  wire Instr_Insert_Reg_En;
  wire [7:0]Q;
  wire Status_Reg_En;
  wire TDO_Data_Reg__31;
  wire TDO_Instr_Reg;
  wire TDO_Status_Reg__17;
  wire tdo_config_word1_4;
  wire tdo_config_word1_5;

  LUT3 #(
    .INIT(8'hE4)) 
    Dbg_TDO_INST_0
       (.I0(Status_Reg_En),
        .I1(Dbg_TDO_INST_0_i_2_n_0),
        .I2(TDO_Status_Reg__17),
        .O(Dbg_TDO));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT2 #(
    .INIT(4'h2)) 
    Dbg_TDO_INST_0_i_12
       (.I0(Dbg_TDO_INST_0_i_23_n_0),
        .I1(Q[6]),
        .O(Dbg_TDO_INST_0_i_12_n_0));
  MUXF7 Dbg_TDO_INST_0_i_2
       (.I0(Dbg_TDO_INST_0_i_5_n_0),
        .I1(TDO_Data_Reg__31),
        .O(Dbg_TDO_INST_0_i_2_n_0),
        .S(Data_Read_Reg_En));
  (* OPT_MODIFIED = "PROPCONST" *) 
  LUT4 #(
    .INIT(16'hA0C0)) 
    Dbg_TDO_INST_0_i_23
       (.I0(tdo_config_word1_4),
        .I1(tdo_config_word1_5),
        .I2(Q[5]),
        .I3(Q[4]),
        .O(Dbg_TDO_INST_0_i_23_n_0));
  LUT6 #(
    .INIT(64'hB8FFB800B800B800)) 
    Dbg_TDO_INST_0_i_5
       (.I0(Dbg_TDO_INST_0_i_12_n_0),
        .I1(Q[7]),
        .I2(Dbg_TDO_INST_0_i_2_0),
        .I3(Config_Reg_En),
        .I4(TDO_Instr_Reg),
        .I5(Instr_Insert_Reg_En),
        .O(Dbg_TDO_INST_0_i_5_n_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Serial_Dbg_Intf.SRL16E_4/Use_unisim.MB_SRL16E_I1 " *) 
  SRL16E #(
    .INIT(16'h2500),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16E_I1 
       (.A0(Q[0]),
        .A1(Q[1]),
        .A2(Q[2]),
        .A3(Q[3]),
        .CE(1'b0),
        .CLK(Dbg_Clk),
        .D(1'b0),
        .Q(tdo_config_word1_4));
endmodule

(* ORIG_REF_NAME = "MB_SRLC16E" *) 
module system_microblaze_0_0__MB_SRLC16E
   (SRL16_Sel_7,
    which_pc__0,
    SRL16_MC15_7,
    Address,
    Dbg_Clk,
    Dbg_Reg_En);
  output SRL16_Sel_7;
  output which_pc__0;
  input SRL16_MC15_7;
  input [3:0]Address;
  input Dbg_Clk;
  input [0:7]Dbg_Reg_En;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire [0:7]Dbg_Reg_En;
  wire SRL16_MC15_7;
  wire SRL16_Sel_7;
  wire \Use_unisim.MB_SRL16CE_I1_i_2_n_0 ;
  wire \Use_unisim.MB_SRL16CE_I1_i_3_n_0 ;
  wire which_pc__0;

  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "RETARGET" *) 
  (* XILINX_LEGACY_PRIM = "SRLC16E" *) 
  SRL16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc__0),
        .CLK(Dbg_Clk),
        .D(SRL16_MC15_7),
        .Q(SRL16_Sel_7));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \Use_unisim.MB_SRL16CE_I1_i_1 
       (.I0(Dbg_Reg_En[2]),
        .I1(Dbg_Reg_En[7]),
        .I2(\Use_unisim.MB_SRL16CE_I1_i_2_n_0 ),
        .I3(Dbg_Reg_En[6]),
        .I4(Dbg_Reg_En[3]),
        .I5(\Use_unisim.MB_SRL16CE_I1_i_3_n_0 ),
        .O(which_pc__0));
  LUT2 #(
    .INIT(4'hE)) 
    \Use_unisim.MB_SRL16CE_I1_i_2 
       (.I0(Dbg_Reg_En[1]),
        .I1(Dbg_Reg_En[0]),
        .O(\Use_unisim.MB_SRL16CE_I1_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \Use_unisim.MB_SRL16CE_I1_i_3 
       (.I0(Dbg_Reg_En[4]),
        .I1(Dbg_Reg_En[5]),
        .O(\Use_unisim.MB_SRL16CE_I1_i_3_n_0 ));
endmodule

(* ORIG_REF_NAME = "MB_SRLC16E" *) 
module system_microblaze_0_0__MB_SRLC16E_32
   (SRL16_Sel_6,
    SRL16_MC15_7,
    which_pc__0,
    SRL16_MC15_6,
    Address,
    Dbg_Clk);
  output SRL16_Sel_6;
  output SRL16_MC15_7;
  input which_pc__0;
  input SRL16_MC15_6;
  input [3:0]Address;
  input Dbg_Clk;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire SRL16_MC15_6;
  wire SRL16_MC15_7;
  wire SRL16_Sel_6;
  wire which_pc__0;

  (* BOX_TYPE = "PRIMITIVE" *) 
  SRLC16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc__0),
        .CLK(Dbg_Clk),
        .D(SRL16_MC15_6),
        .Q(SRL16_Sel_6),
        .Q15(SRL16_MC15_7));
endmodule

(* ORIG_REF_NAME = "MB_SRLC16E" *) 
module system_microblaze_0_0__MB_SRLC16E_34
   (SRL16_Sel_5,
    SRL16_MC15_6,
    which_pc__0,
    SRL16_MC15_5,
    Address,
    Dbg_Clk);
  output SRL16_Sel_5;
  output SRL16_MC15_6;
  input which_pc__0;
  input SRL16_MC15_5;
  input [3:0]Address;
  input Dbg_Clk;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire SRL16_MC15_5;
  wire SRL16_MC15_6;
  wire SRL16_Sel_5;
  wire which_pc__0;

  (* BOX_TYPE = "PRIMITIVE" *) 
  SRLC16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc__0),
        .CLK(Dbg_Clk),
        .D(SRL16_MC15_5),
        .Q(SRL16_Sel_5),
        .Q15(SRL16_MC15_6));
endmodule

(* ORIG_REF_NAME = "MB_SRLC16E" *) 
module system_microblaze_0_0__MB_SRLC16E_36
   (SRL16_Sel_4,
    SRL16_MC15_5,
    which_pc__0,
    SRL16_MC15_4,
    Address,
    Dbg_Clk);
  output SRL16_Sel_4;
  output SRL16_MC15_5;
  input which_pc__0;
  input SRL16_MC15_4;
  input [3:0]Address;
  input Dbg_Clk;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire SRL16_MC15_4;
  wire SRL16_MC15_5;
  wire SRL16_Sel_4;
  wire which_pc__0;

  (* BOX_TYPE = "PRIMITIVE" *) 
  SRLC16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc__0),
        .CLK(Dbg_Clk),
        .D(SRL16_MC15_4),
        .Q(SRL16_Sel_4),
        .Q15(SRL16_MC15_5));
endmodule

(* ORIG_REF_NAME = "MB_SRLC16E" *) 
module system_microblaze_0_0__MB_SRLC16E_38
   (SRL16_Sel_3,
    SRL16_MC15_4,
    which_pc__0,
    SRL16_MC15_3,
    Address,
    Dbg_Clk);
  output SRL16_Sel_3;
  output SRL16_MC15_4;
  input which_pc__0;
  input SRL16_MC15_3;
  input [3:0]Address;
  input Dbg_Clk;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire SRL16_MC15_3;
  wire SRL16_MC15_4;
  wire SRL16_Sel_3;
  wire which_pc__0;

  (* BOX_TYPE = "PRIMITIVE" *) 
  SRLC16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc__0),
        .CLK(Dbg_Clk),
        .D(SRL16_MC15_3),
        .Q(SRL16_Sel_3),
        .Q15(SRL16_MC15_4));
endmodule

(* ORIG_REF_NAME = "MB_SRLC16E" *) 
module system_microblaze_0_0__MB_SRLC16E_40
   (SRL16_Sel_2,
    SRL16_MC15_3,
    which_pc__0,
    SRL16_MC15_2,
    Address,
    Dbg_Clk);
  output SRL16_Sel_2;
  output SRL16_MC15_3;
  input which_pc__0;
  input SRL16_MC15_2;
  input [3:0]Address;
  input Dbg_Clk;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire SRL16_MC15_2;
  wire SRL16_MC15_3;
  wire SRL16_Sel_2;
  wire which_pc__0;

  (* BOX_TYPE = "PRIMITIVE" *) 
  SRLC16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc__0),
        .CLK(Dbg_Clk),
        .D(SRL16_MC15_2),
        .Q(SRL16_Sel_2),
        .Q15(SRL16_MC15_3));
endmodule

(* ORIG_REF_NAME = "MB_SRLC16E" *) 
module system_microblaze_0_0__MB_SRLC16E_42
   (SRL16_Sel_1,
    SRL16_MC15_2,
    which_pc__0,
    SRL16_MC15_1,
    Address,
    Dbg_Clk);
  output SRL16_Sel_1;
  output SRL16_MC15_2;
  input which_pc__0;
  input SRL16_MC15_1;
  input [3:0]Address;
  input Dbg_Clk;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire SRL16_MC15_1;
  wire SRL16_MC15_2;
  wire SRL16_Sel_1;
  wire which_pc__0;

  (* BOX_TYPE = "PRIMITIVE" *) 
  SRLC16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc__0),
        .CLK(Dbg_Clk),
        .D(SRL16_MC15_1),
        .Q(SRL16_Sel_1),
        .Q15(SRL16_MC15_2));
endmodule

(* ORIG_REF_NAME = "MB_SRLC16E" *) 
module system_microblaze_0_0__MB_SRLC16E_44
   (SRL16_Sel_0,
    SRL16_MC15_1,
    which_pc__0,
    Dbg_TDI,
    Address,
    Dbg_Clk);
  output SRL16_Sel_0;
  output SRL16_MC15_1;
  input which_pc__0;
  input Dbg_TDI;
  input [3:0]Address;
  input Dbg_Clk;

  wire [3:0]Address;
  wire Dbg_Clk;
  wire Dbg_TDI;
  wire SRL16_MC15_1;
  wire SRL16_Sel_0;
  wire which_pc__0;

  (* BOX_TYPE = "PRIMITIVE" *) 
  SRLC16E #(
    .INIT(16'h0000),
    .IS_CLK_INVERTED(1'b0)) 
    \Use_unisim.MB_SRL16CE_I1 
       (.A0(Address[0]),
        .A1(Address[1]),
        .A2(Address[2]),
        .A3(Address[3]),
        .CE(which_pc__0),
        .CLK(Dbg_Clk),
        .D(Dbg_TDI),
        .Q(SRL16_Sel_0),
        .Q15(SRL16_MC15_1));
endmodule

(* C_ADDR_TAG_BITS = "17" *) (* C_ALLOW_DCACHE_WR = "1" *) (* C_ALLOW_ICACHE_WR = "1" *) 
(* C_AREA_OPTIMIZED = "0" *) (* C_ASYNC_INTERRUPT = "1" *) (* C_ASYNC_WAKEUP = "3" *) 
(* C_AVOID_PRIMITIVES = "0" *) (* C_BASE_VECTORS = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) (* C_BRANCH_TARGET_CACHE_SIZE = "0" *) 
(* C_CACHE_BYTE_SIZE = "8192" *) (* C_DADDR_SIZE = "32" *) (* C_DATA_SIZE = "32" *) 
(* C_DCACHE_ADDR_TAG = "17" *) (* C_DCACHE_ALWAYS_USED = "1" *) (* C_DCACHE_BASEADDR = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
(* C_DCACHE_BYTE_SIZE = "8192" *) (* C_DCACHE_DATA_WIDTH = "0" *) (* C_DCACHE_FORCE_TAG_LUTRAM = "0" *) 
(* C_DCACHE_HIGHADDR = "64'b0000000000000000000000000000000000111111111111111111111111111111" *) (* C_DCACHE_LINE_LEN = "4" *) (* C_DCACHE_USE_WRITEBACK = "0" *) 
(* C_DCACHE_VICTIMS = "0" *) (* C_DEBUG_COUNTER_WIDTH = "32" *) (* C_DEBUG_ENABLED = "1" *) 
(* C_DEBUG_EVENT_COUNTERS = "5" *) (* C_DEBUG_EXTERNAL_TRACE = "0" *) (* C_DEBUG_INTERFACE = "0" *) 
(* C_DEBUG_LATENCY_COUNTERS = "1" *) (* C_DEBUG_PROFILE_SIZE = "0" *) (* C_DEBUG_TRACE_ASYNC_RESET = "0" *) 
(* C_DEBUG_TRACE_SIZE = "8192" *) (* C_DIV_ZERO_EXCEPTION = "0" *) (* C_DYNAMIC_BUS_SIZING = "0" *) 
(* C_D_AXI = "1" *) (* C_D_LMB = "1" *) (* C_D_LMB_PROTOCOL = "0" *) 
(* C_ECC_USE_CE_EXCEPTION = "0" *) (* C_EDGE_IS_POSITIVE = "1" *) (* C_ENDIANNESS = "1" *) 
(* C_FAMILY = "spartan7" *) (* C_FAULT_TOLERANT = "0" *) (* C_FPU_EXCEPTION = "0" *) 
(* C_FREQ = "200000000" *) (* C_FSL_EXCEPTION = "0" *) (* C_FSL_LINKS = "0" *) 
(* C_IADDR_SIZE = "32" *) (* C_ICACHE_ALWAYS_USED = "1" *) (* C_ICACHE_BASEADDR = "64'b0000000000000000000000000000000000000000000000000000000000000000" *) 
(* C_ICACHE_DATA_WIDTH = "0" *) (* C_ICACHE_FORCE_TAG_LUTRAM = "0" *) (* C_ICACHE_HIGHADDR = "64'b0000000000000000000000000000000000111111111111111111111111111111" *) 
(* C_ICACHE_LINE_LEN = "4" *) (* C_ICACHE_STREAMS = "0" *) (* C_ICACHE_VICTIMS = "0" *) 
(* C_ILL_OPCODE_EXCEPTION = "0" *) (* C_IMPRECISE_EXCEPTIONS = "0" *) (* C_INSTANCE = "system_microblaze_0_0" *) 
(* C_INSTR_SIZE = "32" *) (* C_INTERCONNECT = "2" *) (* C_INTERRUPT_IS_EDGE = "0" *) 
(* C_I_AXI = "0" *) (* C_I_LMB = "1" *) (* C_I_LMB_PROTOCOL = "0" *) 
(* C_LMB_DATA_SIZE = "32" *) (* C_LOCKSTEP_MASTER = "0" *) (* C_LOCKSTEP_SLAVE = "0" *) 
(* C_M0_AXIS_DATA_WIDTH = "32" *) (* C_M10_AXIS_DATA_WIDTH = "32" *) (* C_M11_AXIS_DATA_WIDTH = "32" *) 
(* C_M12_AXIS_DATA_WIDTH = "32" *) (* C_M13_AXIS_DATA_WIDTH = "32" *) (* C_M14_AXIS_DATA_WIDTH = "32" *) 
(* C_M15_AXIS_DATA_WIDTH = "32" *) (* C_M1_AXIS_DATA_WIDTH = "32" *) (* C_M2_AXIS_DATA_WIDTH = "32" *) 
(* C_M3_AXIS_DATA_WIDTH = "32" *) (* C_M4_AXIS_DATA_WIDTH = "32" *) (* C_M5_AXIS_DATA_WIDTH = "32" *) 
(* C_M6_AXIS_DATA_WIDTH = "32" *) (* C_M7_AXIS_DATA_WIDTH = "32" *) (* C_M8_AXIS_DATA_WIDTH = "32" *) 
(* C_M9_AXIS_DATA_WIDTH = "32" *) (* C_MMU_DTLB_SIZE = "4" *) (* C_MMU_ITLB_SIZE = "2" *) 
(* C_MMU_PRIVILEGED_INSTR = "0" *) (* C_MMU_TLB_ACCESS = "3" *) (* C_MMU_ZONES = "16" *) 
(* C_M_AXI_DC_ADDR_WIDTH = "32" *) (* C_M_AXI_DC_ARUSER_WIDTH = "5" *) (* C_M_AXI_DC_AWUSER_WIDTH = "5" *) 
(* C_M_AXI_DC_BUSER_WIDTH = "1" *) (* C_M_AXI_DC_DATA_WIDTH = "32" *) (* C_M_AXI_DC_EXCLUSIVE_ACCESS = "0" *) 
(* C_M_AXI_DC_RUSER_WIDTH = "1" *) (* C_M_AXI_DC_THREAD_ID_WIDTH = "1" *) (* C_M_AXI_DC_USER_VALUE = "31" *) 
(* C_M_AXI_DC_WUSER_WIDTH = "1" *) (* C_M_AXI_DP_ADDR_WIDTH = "32" *) (* C_M_AXI_DP_DATA_WIDTH = "32" *) 
(* C_M_AXI_DP_EXCLUSIVE_ACCESS = "0" *) (* C_M_AXI_DP_THREAD_ID_WIDTH = "1" *) (* C_M_AXI_D_BUS_EXCEPTION = "0" *) 
(* C_M_AXI_IC_ADDR_WIDTH = "32" *) (* C_M_AXI_IC_ARUSER_WIDTH = "5" *) (* C_M_AXI_IC_AWUSER_WIDTH = "5" *) 
(* C_M_AXI_IC_BUSER_WIDTH = "1" *) (* C_M_AXI_IC_DATA_WIDTH = "32" *) (* C_M_AXI_IC_RUSER_WIDTH = "1" *) 
(* C_M_AXI_IC_THREAD_ID_WIDTH = "1" *) (* C_M_AXI_IC_USER_VALUE = "31" *) (* C_M_AXI_IC_WUSER_WIDTH = "1" *) 
(* C_M_AXI_IP_ADDR_WIDTH = "32" *) (* C_M_AXI_IP_DATA_WIDTH = "32" *) (* C_M_AXI_IP_THREAD_ID_WIDTH = "1" *) 
(* C_M_AXI_I_BUS_EXCEPTION = "0" *) (* C_NUMBER_OF_PC_BRK = "1" *) (* C_NUMBER_OF_RD_ADDR_BRK = "0" *) 
(* C_NUMBER_OF_WR_ADDR_BRK = "0" *) (* C_NUM_SYNC_FF_CLK = "2" *) (* C_NUM_SYNC_FF_CLK_DEBUG = "2" *) 
(* C_NUM_SYNC_FF_CLK_IRQ = "1" *) (* C_NUM_SYNC_FF_DBG_CLK = "1" *) (* C_NUM_SYNC_FF_DBG_TRACE_CLK = "2" *) 
(* C_OPCODE_0x0_ILLEGAL = "0" *) (* C_OPTIMIZATION = "0" *) (* C_PC_WIDTH = "32" *) 
(* C_PIADDR_SIZE = "32" *) (* C_PVR = "0" *) (* C_PVR_USER1 = "8'b00000000" *) 
(* C_PVR_USER2 = "0" *) (* C_RESET_MSR = "0" *) (* C_S0_AXIS_DATA_WIDTH = "32" *) 
(* C_S10_AXIS_DATA_WIDTH = "32" *) (* C_S11_AXIS_DATA_WIDTH = "32" *) (* C_S12_AXIS_DATA_WIDTH = "32" *) 
(* C_S13_AXIS_DATA_WIDTH = "32" *) (* C_S14_AXIS_DATA_WIDTH = "32" *) (* C_S15_AXIS_DATA_WIDTH = "32" *) 
(* C_S1_AXIS_DATA_WIDTH = "32" *) (* C_S2_AXIS_DATA_WIDTH = "32" *) (* C_S3_AXIS_DATA_WIDTH = "32" *) 
(* C_S4_AXIS_DATA_WIDTH = "32" *) (* C_S5_AXIS_DATA_WIDTH = "32" *) (* C_S6_AXIS_DATA_WIDTH = "32" *) 
(* C_S7_AXIS_DATA_WIDTH = "32" *) (* C_S8_AXIS_DATA_WIDTH = "32" *) (* C_S9_AXIS_DATA_WIDTH = "32" *) 
(* C_SCO = "0" *) (* C_UNALIGNED_EXCEPTIONS = "0" *) (* C_USE_BARREL = "0" *) 
(* C_USE_BRANCH_TARGET_CACHE = "0" *) (* C_USE_CONFIG_RESET = "0" *) (* C_USE_DCACHE = "0" *) 
(* C_USE_DIV = "0" *) (* C_USE_EXTENDED_FSL_INSTR = "0" *) (* C_USE_EXT_BRK = "0" *) 
(* C_USE_EXT_NM_BRK = "0" *) (* C_USE_FPU = "0" *) (* C_USE_HW_MUL = "0" *) 
(* C_USE_ICACHE = "0" *) (* C_USE_INTERRUPT = "0" *) (* C_USE_MMU = "0" *) 
(* C_USE_MSR_INSTR = "0" *) (* C_USE_NON_SECURE = "0" *) (* C_USE_PCMP_INSTR = "0" *) 
(* C_USE_REORDER_INSTR = "1" *) (* C_USE_STACK_PROTECTION = "0" *) (* DowngradeIPIdentifiedWarnings = "yes" *) 
(* G_TEMPLATE_LIST = "0" *) (* ORIG_REF_NAME = "MicroBlaze" *) 
module system_microblaze_0_0__MicroBlaze
   (RAM_To,
    RAM_From,
    Clk,
    Reset,
    Mb_Reset,
    Config_Reset,
    Scan_Reset_Sel,
    Scan_Reset,
    Scan_En,
    Reset_Mode,
    Non_Secure,
    Interrupt,
    Interrupt_Address,
    Interrupt_Ack,
    Ext_BRK,
    Ext_NM_BRK,
    Pause,
    Pause_Ack,
    Dbg_Continue,
    Dbg_Stop,
    Dbg_Intr,
    MB_Halted,
    MB_Error,
    Wakeup,
    Sleep,
    Hibernate,
    Suspend,
    Dbg_Wakeup,
    LOCKSTEP_Slave_In,
    LOCKSTEP_Master_Out,
    LOCKSTEP_Out,
    Instr_Addr,
    Instr,
    IFetch,
    I_AS,
    IReady,
    IWAIT,
    ICE,
    IUE,
    M_AXI_IP_AWID,
    M_AXI_IP_AWADDR,
    M_AXI_IP_AWLEN,
    M_AXI_IP_AWSIZE,
    M_AXI_IP_AWBURST,
    M_AXI_IP_AWLOCK,
    M_AXI_IP_AWCACHE,
    M_AXI_IP_AWPROT,
    M_AXI_IP_AWQOS,
    M_AXI_IP_AWVALID,
    M_AXI_IP_AWREADY,
    M_AXI_IP_WDATA,
    M_AXI_IP_WSTRB,
    M_AXI_IP_WLAST,
    M_AXI_IP_WVALID,
    M_AXI_IP_WREADY,
    M_AXI_IP_BID,
    M_AXI_IP_BRESP,
    M_AXI_IP_BVALID,
    M_AXI_IP_BREADY,
    M_AXI_IP_ARID,
    M_AXI_IP_ARADDR,
    M_AXI_IP_ARLEN,
    M_AXI_IP_ARSIZE,
    M_AXI_IP_ARBURST,
    M_AXI_IP_ARLOCK,
    M_AXI_IP_ARCACHE,
    M_AXI_IP_ARPROT,
    M_AXI_IP_ARQOS,
    M_AXI_IP_ARVALID,
    M_AXI_IP_ARREADY,
    M_AXI_IP_RID,
    M_AXI_IP_RDATA,
    M_AXI_IP_RRESP,
    M_AXI_IP_RLAST,
    M_AXI_IP_RVALID,
    M_AXI_IP_RREADY,
    Data_Addr,
    Data_Read,
    Data_Write,
    D_AS,
    Read_Strobe,
    Write_Strobe,
    DReady,
    DWait,
    DCE,
    DUE,
    Byte_Enable,
    M_AXI_DP_AWID,
    M_AXI_DP_AWADDR,
    M_AXI_DP_AWLEN,
    M_AXI_DP_AWSIZE,
    M_AXI_DP_AWBURST,
    M_AXI_DP_AWLOCK,
    M_AXI_DP_AWCACHE,
    M_AXI_DP_AWPROT,
    M_AXI_DP_AWQOS,
    M_AXI_DP_AWVALID,
    M_AXI_DP_AWREADY,
    M_AXI_DP_WDATA,
    M_AXI_DP_WSTRB,
    M_AXI_DP_WLAST,
    M_AXI_DP_WVALID,
    M_AXI_DP_WREADY,
    M_AXI_DP_BID,
    M_AXI_DP_BRESP,
    M_AXI_DP_BVALID,
    M_AXI_DP_BREADY,
    M_AXI_DP_ARID,
    M_AXI_DP_ARADDR,
    M_AXI_DP_ARLEN,
    M_AXI_DP_ARSIZE,
    M_AXI_DP_ARBURST,
    M_AXI_DP_ARLOCK,
    M_AXI_DP_ARCACHE,
    M_AXI_DP_ARPROT,
    M_AXI_DP_ARQOS,
    M_AXI_DP_ARVALID,
    M_AXI_DP_ARREADY,
    M_AXI_DP_RID,
    M_AXI_DP_RDATA,
    M_AXI_DP_RRESP,
    M_AXI_DP_RLAST,
    M_AXI_DP_RVALID,
    M_AXI_DP_RREADY,
    Dbg_Disable,
    Dbg_Clk,
    Dbg_TDI,
    Dbg_TDO,
    Dbg_Reg_En,
    Dbg_Shift,
    Dbg_Capture,
    Dbg_Update,
    Debug_Rst,
    Dbg_Trig_In,
    Dbg_Trig_Ack_In,
    Dbg_Trig_Out,
    Dbg_Trig_Ack_Out,
    Dbg_Trace_Clk,
    Dbg_Trace_Data,
    Dbg_Trace_Ready,
    Dbg_Trace_Valid,
    Dbg_AWADDR,
    Dbg_AWVALID,
    Dbg_AWREADY,
    Dbg_WDATA,
    Dbg_WVALID,
    Dbg_WREADY,
    Dbg_BRESP,
    Dbg_BVALID,
    Dbg_BREADY,
    Dbg_ARADDR,
    Dbg_ARVALID,
    Dbg_ARREADY,
    Dbg_RDATA,
    Dbg_RRESP,
    Dbg_RVALID,
    Dbg_RREADY,
    DEBUG_ACLK,
    DEBUG_ARESETN,
    Trace_Instruction,
    Trace_Valid_Instr,
    Trace_PC,
    Trace_Reg_Write,
    Trace_Reg_Addr,
    Trace_MSR_Reg,
    Trace_PID_Reg,
    Trace_New_Reg_Value,
    Trace_Exception_Taken,
    Trace_Exception_Kind,
    Trace_Jump_Taken,
    Trace_Delay_Slot,
    Trace_Data_Address,
    Trace_Data_Write_Value,
    Trace_Data_Byte_Enable,
    Trace_Data_Access,
    Trace_Data_Read,
    Trace_Data_Write,
    Trace_DCache_Req,
    Trace_DCache_Hit,
    Trace_DCache_Rdy,
    Trace_DCache_Read,
    Trace_ICache_Req,
    Trace_ICache_Hit,
    Trace_ICache_Rdy,
    Trace_OF_PipeRun,
    Trace_EX_PipeRun,
    Trace_MEM_PipeRun,
    Trace_MB_Halted,
    Trace_Jump_Hit,
    M0_AXIS_TLAST,
    M0_AXIS_TDATA,
    M0_AXIS_TVALID,
    M0_AXIS_TREADY,
    M1_AXIS_TLAST,
    M1_AXIS_TDATA,
    M1_AXIS_TVALID,
    M1_AXIS_TREADY,
    M2_AXIS_TLAST,
    M2_AXIS_TDATA,
    M2_AXIS_TVALID,
    M2_AXIS_TREADY,
    M3_AXIS_TLAST,
    M3_AXIS_TDATA,
    M3_AXIS_TVALID,
    M3_AXIS_TREADY,
    M4_AXIS_TLAST,
    M4_AXIS_TDATA,
    M4_AXIS_TVALID,
    M4_AXIS_TREADY,
    M5_AXIS_TLAST,
    M5_AXIS_TDATA,
    M5_AXIS_TVALID,
    M5_AXIS_TREADY,
    M6_AXIS_TLAST,
    M6_AXIS_TDATA,
    M6_AXIS_TVALID,
    M6_AXIS_TREADY,
    M7_AXIS_TLAST,
    M7_AXIS_TDATA,
    M7_AXIS_TVALID,
    M7_AXIS_TREADY,
    M8_AXIS_TLAST,
    M8_AXIS_TDATA,
    M8_AXIS_TVALID,
    M8_AXIS_TREADY,
    M9_AXIS_TLAST,
    M9_AXIS_TDATA,
    M9_AXIS_TVALID,
    M9_AXIS_TREADY,
    M10_AXIS_TLAST,
    M10_AXIS_TDATA,
    M10_AXIS_TVALID,
    M10_AXIS_TREADY,
    M11_AXIS_TLAST,
    M11_AXIS_TDATA,
    M11_AXIS_TVALID,
    M11_AXIS_TREADY,
    M12_AXIS_TLAST,
    M12_AXIS_TDATA,
    M12_AXIS_TVALID,
    M12_AXIS_TREADY,
    M13_AXIS_TLAST,
    M13_AXIS_TDATA,
    M13_AXIS_TVALID,
    M13_AXIS_TREADY,
    M14_AXIS_TLAST,
    M14_AXIS_TDATA,
    M14_AXIS_TVALID,
    M14_AXIS_TREADY,
    M15_AXIS_TLAST,
    M15_AXIS_TDATA,
    M15_AXIS_TVALID,
    M15_AXIS_TREADY,
    S0_AXIS_TLAST,
    S0_AXIS_TDATA,
    S0_AXIS_TVALID,
    S0_AXIS_TREADY,
    S1_AXIS_TLAST,
    S1_AXIS_TDATA,
    S1_AXIS_TVALID,
    S1_AXIS_TREADY,
    S2_AXIS_TLAST,
    S2_AXIS_TDATA,
    S2_AXIS_TVALID,
    S2_AXIS_TREADY,
    S3_AXIS_TLAST,
    S3_AXIS_TDATA,
    S3_AXIS_TVALID,
    S3_AXIS_TREADY,
    S4_AXIS_TLAST,
    S4_AXIS_TDATA,
    S4_AXIS_TVALID,
    S4_AXIS_TREADY,
    S5_AXIS_TLAST,
    S5_AXIS_TDATA,
    S5_AXIS_TVALID,
    S5_AXIS_TREADY,
    S6_AXIS_TLAST,
    S6_AXIS_TDATA,
    S6_AXIS_TVALID,
    S6_AXIS_TREADY,
    S7_AXIS_TLAST,
    S7_AXIS_TDATA,
    S7_AXIS_TVALID,
    S7_AXIS_TREADY,
    S8_AXIS_TLAST,
    S8_AXIS_TDATA,
    S8_AXIS_TVALID,
    S8_AXIS_TREADY,
    S9_AXIS_TLAST,
    S9_AXIS_TDATA,
    S9_AXIS_TVALID,
    S9_AXIS_TREADY,
    S10_AXIS_TLAST,
    S10_AXIS_TDATA,
    S10_AXIS_TVALID,
    S10_AXIS_TREADY,
    S11_AXIS_TLAST,
    S11_AXIS_TDATA,
    S11_AXIS_TVALID,
    S11_AXIS_TREADY,
    S12_AXIS_TLAST,
    S12_AXIS_TDATA,
    S12_AXIS_TVALID,
    S12_AXIS_TREADY,
    S13_AXIS_TLAST,
    S13_AXIS_TDATA,
    S13_AXIS_TVALID,
    S13_AXIS_TREADY,
    S14_AXIS_TLAST,
    S14_AXIS_TDATA,
    S14_AXIS_TVALID,
    S14_AXIS_TREADY,
    S15_AXIS_TLAST,
    S15_AXIS_TDATA,
    S15_AXIS_TVALID,
    S15_AXIS_TREADY,
    M_AXI_IC_AWID,
    M_AXI_IC_AWADDR,
    M_AXI_IC_AWLEN,
    M_AXI_IC_AWSIZE,
    M_AXI_IC_AWBURST,
    M_AXI_IC_AWLOCK,
    M_AXI_IC_AWCACHE,
    M_AXI_IC_AWPROT,
    M_AXI_IC_AWQOS,
    M_AXI_IC_AWVALID,
    M_AXI_IC_AWREADY,
    M_AXI_IC_AWUSER,
    M_AXI_IC_AWDOMAIN,
    M_AXI_IC_AWSNOOP,
    M_AXI_IC_AWBAR,
    M_AXI_IC_WDATA,
    M_AXI_IC_WSTRB,
    M_AXI_IC_WLAST,
    M_AXI_IC_WVALID,
    M_AXI_IC_WREADY,
    M_AXI_IC_WUSER,
    M_AXI_IC_BID,
    M_AXI_IC_BRESP,
    M_AXI_IC_BVALID,
    M_AXI_IC_BREADY,
    M_AXI_IC_BUSER,
    M_AXI_IC_WACK,
    M_AXI_IC_ARID,
    M_AXI_IC_ARADDR,
    M_AXI_IC_ARLEN,
    M_AXI_IC_ARSIZE,
    M_AXI_IC_ARBURST,
    M_AXI_IC_ARLOCK,
    M_AXI_IC_ARCACHE,
    M_AXI_IC_ARPROT,
    M_AXI_IC_ARQOS,
    M_AXI_IC_ARVALID,
    M_AXI_IC_ARREADY,
    M_AXI_IC_ARUSER,
    M_AXI_IC_ARDOMAIN,
    M_AXI_IC_ARSNOOP,
    M_AXI_IC_ARBAR,
    M_AXI_IC_RID,
    M_AXI_IC_RDATA,
    M_AXI_IC_RRESP,
    M_AXI_IC_RLAST,
    M_AXI_IC_RVALID,
    M_AXI_IC_RREADY,
    M_AXI_IC_RUSER,
    M_AXI_IC_RACK,
    M_AXI_IC_ACVALID,
    M_AXI_IC_ACADDR,
    M_AXI_IC_ACSNOOP,
    M_AXI_IC_ACPROT,
    M_AXI_IC_ACREADY,
    M_AXI_IC_CRVALID,
    M_AXI_IC_CRRESP,
    M_AXI_IC_CRREADY,
    M_AXI_IC_CDVALID,
    M_AXI_IC_CDDATA,
    M_AXI_IC_CDLAST,
    M_AXI_IC_CDREADY,
    M_AXI_DC_AWID,
    M_AXI_DC_AWADDR,
    M_AXI_DC_AWLEN,
    M_AXI_DC_AWSIZE,
    M_AXI_DC_AWBURST,
    M_AXI_DC_AWLOCK,
    M_AXI_DC_AWCACHE,
    M_AXI_DC_AWPROT,
    M_AXI_DC_AWQOS,
    M_AXI_DC_AWVALID,
    M_AXI_DC_AWREADY,
    M_AXI_DC_AWUSER,
    M_AXI_DC_AWDOMAIN,
    M_AXI_DC_AWSNOOP,
    M_AXI_DC_AWBAR,
    M_AXI_DC_WDATA,
    M_AXI_DC_WSTRB,
    M_AXI_DC_WLAST,
    M_AXI_DC_WVALID,
    M_AXI_DC_WREADY,
    M_AXI_DC_WUSER,
    M_AXI_DC_BRESP,
    M_AXI_DC_BID,
    M_AXI_DC_BVALID,
    M_AXI_DC_BREADY,
    M_AXI_DC_BUSER,
    M_AXI_DC_WACK,
    M_AXI_DC_ARID,
    M_AXI_DC_ARADDR,
    M_AXI_DC_ARLEN,
    M_AXI_DC_ARSIZE,
    M_AXI_DC_ARBURST,
    M_AXI_DC_ARLOCK,
    M_AXI_DC_ARCACHE,
    M_AXI_DC_ARPROT,
    M_AXI_DC_ARQOS,
    M_AXI_DC_ARVALID,
    M_AXI_DC_ARREADY,
    M_AXI_DC_ARUSER,
    M_AXI_DC_ARDOMAIN,
    M_AXI_DC_ARSNOOP,
    M_AXI_DC_ARBAR,
    M_AXI_DC_RID,
    M_AXI_DC_RDATA,
    M_AXI_DC_RRESP,
    M_AXI_DC_RLAST,
    M_AXI_DC_RVALID,
    M_AXI_DC_RREADY,
    M_AXI_DC_RUSER,
    M_AXI_DC_RACK,
    M_AXI_DC_ACVALID,
    M_AXI_DC_ACADDR,
    M_AXI_DC_ACSNOOP,
    M_AXI_DC_ACPROT,
    M_AXI_DC_ACREADY,
    M_AXI_DC_CRVALID,
    M_AXI_DC_CRRESP,
    M_AXI_DC_CRREADY,
    M_AXI_DC_CDVALID,
    M_AXI_DC_CDDATA,
    M_AXI_DC_CDLAST,
    M_AXI_DC_CDREADY);
  input [255:0]RAM_To;
  output [255:0]RAM_From;
  input Clk;
  input Reset;
  input Mb_Reset;
  input Config_Reset;
  input Scan_Reset_Sel;
  input Scan_Reset;
  input Scan_En;
  input [0:1]Reset_Mode;
  input [0:3]Non_Secure;
  input Interrupt;
  input [0:31]Interrupt_Address;
  output [0:1]Interrupt_Ack;
  input Ext_BRK;
  input Ext_NM_BRK;
  input Pause;
  output Pause_Ack;
  output Dbg_Continue;
  input Dbg_Stop;
  output Dbg_Intr;
  output MB_Halted;
  output MB_Error;
  input [0:1]Wakeup;
  output Sleep;
  output Hibernate;
  output Suspend;
  output Dbg_Wakeup;
  input [0:4095]LOCKSTEP_Slave_In;
  output [0:4095]LOCKSTEP_Master_Out;
  output [0:4095]LOCKSTEP_Out;
  output [0:31]Instr_Addr;
  input [0:31]Instr;
  output IFetch;
  output I_AS;
  input IReady;
  input IWAIT;
  input ICE;
  input IUE;
  output [0:0]M_AXI_IP_AWID;
  output [31:0]M_AXI_IP_AWADDR;
  output [7:0]M_AXI_IP_AWLEN;
  output [2:0]M_AXI_IP_AWSIZE;
  output [1:0]M_AXI_IP_AWBURST;
  output M_AXI_IP_AWLOCK;
  output [3:0]M_AXI_IP_AWCACHE;
  output [2:0]M_AXI_IP_AWPROT;
  output [3:0]M_AXI_IP_AWQOS;
  output M_AXI_IP_AWVALID;
  input M_AXI_IP_AWREADY;
  output [31:0]M_AXI_IP_WDATA;
  output [3:0]M_AXI_IP_WSTRB;
  output M_AXI_IP_WLAST;
  output M_AXI_IP_WVALID;
  input M_AXI_IP_WREADY;
  input [0:0]M_AXI_IP_BID;
  input [1:0]M_AXI_IP_BRESP;
  input M_AXI_IP_BVALID;
  output M_AXI_IP_BREADY;
  output [0:0]M_AXI_IP_ARID;
  output [31:0]M_AXI_IP_ARADDR;
  output [7:0]M_AXI_IP_ARLEN;
  output [2:0]M_AXI_IP_ARSIZE;
  output [1:0]M_AXI_IP_ARBURST;
  output M_AXI_IP_ARLOCK;
  output [3:0]M_AXI_IP_ARCACHE;
  output [2:0]M_AXI_IP_ARPROT;
  output [3:0]M_AXI_IP_ARQOS;
  output M_AXI_IP_ARVALID;
  input M_AXI_IP_ARREADY;
  input [0:0]M_AXI_IP_RID;
  input [31:0]M_AXI_IP_RDATA;
  input [1:0]M_AXI_IP_RRESP;
  input M_AXI_IP_RLAST;
  input M_AXI_IP_RVALID;
  output M_AXI_IP_RREADY;
  output [0:31]Data_Addr;
  input [0:31]Data_Read;
  output [0:31]Data_Write;
  output D_AS;
  output Read_Strobe;
  output Write_Strobe;
  input DReady;
  input DWait;
  input DCE;
  input DUE;
  output [0:3]Byte_Enable;
  output [0:0]M_AXI_DP_AWID;
  output [31:0]M_AXI_DP_AWADDR;
  output [7:0]M_AXI_DP_AWLEN;
  output [2:0]M_AXI_DP_AWSIZE;
  output [1:0]M_AXI_DP_AWBURST;
  output M_AXI_DP_AWLOCK;
  output [3:0]M_AXI_DP_AWCACHE;
  output [2:0]M_AXI_DP_AWPROT;
  output [3:0]M_AXI_DP_AWQOS;
  output M_AXI_DP_AWVALID;
  input M_AXI_DP_AWREADY;
  output [31:0]M_AXI_DP_WDATA;
  output [3:0]M_AXI_DP_WSTRB;
  output M_AXI_DP_WLAST;
  output M_AXI_DP_WVALID;
  input M_AXI_DP_WREADY;
  input [0:0]M_AXI_DP_BID;
  input [1:0]M_AXI_DP_BRESP;
  input M_AXI_DP_BVALID;
  output M_AXI_DP_BREADY;
  output [0:0]M_AXI_DP_ARID;
  output [31:0]M_AXI_DP_ARADDR;
  output [7:0]M_AXI_DP_ARLEN;
  output [2:0]M_AXI_DP_ARSIZE;
  output [1:0]M_AXI_DP_ARBURST;
  output M_AXI_DP_ARLOCK;
  output [3:0]M_AXI_DP_ARCACHE;
  output [2:0]M_AXI_DP_ARPROT;
  output [3:0]M_AXI_DP_ARQOS;
  output M_AXI_DP_ARVALID;
  input M_AXI_DP_ARREADY;
  input [0:0]M_AXI_DP_RID;
  input [31:0]M_AXI_DP_RDATA;
  input [1:0]M_AXI_DP_RRESP;
  input M_AXI_DP_RLAST;
  input M_AXI_DP_RVALID;
  output M_AXI_DP_RREADY;
  input Dbg_Disable;
  input Dbg_Clk;
  input Dbg_TDI;
  output Dbg_TDO;
  input [0:7]Dbg_Reg_En;
  input Dbg_Shift;
  input Dbg_Capture;
  input Dbg_Update;
  input Debug_Rst;
  output [0:7]Dbg_Trig_In;
  input [0:7]Dbg_Trig_Ack_In;
  input [0:7]Dbg_Trig_Out;
  output [0:7]Dbg_Trig_Ack_Out;
  input Dbg_Trace_Clk;
  output [0:35]Dbg_Trace_Data;
  input Dbg_Trace_Ready;
  output Dbg_Trace_Valid;
  input [14:2]Dbg_AWADDR;
  input Dbg_AWVALID;
  output Dbg_AWREADY;
  input [31:0]Dbg_WDATA;
  input Dbg_WVALID;
  output Dbg_WREADY;
  output [1:0]Dbg_BRESP;
  output Dbg_BVALID;
  input Dbg_BREADY;
  input [14:2]Dbg_ARADDR;
  input Dbg_ARVALID;
  output Dbg_ARREADY;
  output [31:0]Dbg_RDATA;
  output [1:0]Dbg_RRESP;
  output Dbg_RVALID;
  input Dbg_RREADY;
  input DEBUG_ACLK;
  input DEBUG_ARESETN;
  (* mark_debug = "false" *) output [0:31]Trace_Instruction;
  (* mark_debug = "false" *) output Trace_Valid_Instr;
  (* mark_debug = "false" *) output [0:31]Trace_PC;
  (* mark_debug = "false" *) output Trace_Reg_Write;
  (* mark_debug = "false" *) output [0:4]Trace_Reg_Addr;
  (* mark_debug = "false" *) output [0:14]Trace_MSR_Reg;
  (* mark_debug = "false" *) output [0:7]Trace_PID_Reg;
  (* mark_debug = "false" *) output [0:31]Trace_New_Reg_Value;
  (* mark_debug = "false" *) output Trace_Exception_Taken;
  (* mark_debug = "false" *) output [0:4]Trace_Exception_Kind;
  (* mark_debug = "false" *) output Trace_Jump_Taken;
  (* mark_debug = "false" *) output Trace_Delay_Slot;
  (* mark_debug = "false" *) output [0:31]Trace_Data_Address;
  (* mark_debug = "false" *) output [0:31]Trace_Data_Write_Value;
  (* mark_debug = "false" *) output [0:3]Trace_Data_Byte_Enable;
  (* mark_debug = "false" *) output Trace_Data_Access;
  (* mark_debug = "false" *) output Trace_Data_Read;
  (* mark_debug = "false" *) output Trace_Data_Write;
  (* mark_debug = "false" *) output Trace_DCache_Req;
  (* mark_debug = "false" *) output Trace_DCache_Hit;
  (* mark_debug = "false" *) output Trace_DCache_Rdy;
  (* mark_debug = "false" *) output Trace_DCache_Read;
  (* mark_debug = "false" *) output Trace_ICache_Req;
  (* mark_debug = "false" *) output Trace_ICache_Hit;
  (* mark_debug = "false" *) output Trace_ICache_Rdy;
  (* mark_debug = "false" *) output Trace_OF_PipeRun;
  (* mark_debug = "false" *) output Trace_EX_PipeRun;
  (* mark_debug = "false" *) output Trace_MEM_PipeRun;
  (* mark_debug = "false" *) output Trace_MB_Halted;
  (* mark_debug = "false" *) output Trace_Jump_Hit;
  output M0_AXIS_TLAST;
  output [31:0]M0_AXIS_TDATA;
  output M0_AXIS_TVALID;
  input M0_AXIS_TREADY;
  output M1_AXIS_TLAST;
  output [31:0]M1_AXIS_TDATA;
  output M1_AXIS_TVALID;
  input M1_AXIS_TREADY;
  output M2_AXIS_TLAST;
  output [31:0]M2_AXIS_TDATA;
  output M2_AXIS_TVALID;
  input M2_AXIS_TREADY;
  output M3_AXIS_TLAST;
  output [31:0]M3_AXIS_TDATA;
  output M3_AXIS_TVALID;
  input M3_AXIS_TREADY;
  output M4_AXIS_TLAST;
  output [31:0]M4_AXIS_TDATA;
  output M4_AXIS_TVALID;
  input M4_AXIS_TREADY;
  output M5_AXIS_TLAST;
  output [31:0]M5_AXIS_TDATA;
  output M5_AXIS_TVALID;
  input M5_AXIS_TREADY;
  output M6_AXIS_TLAST;
  output [31:0]M6_AXIS_TDATA;
  output M6_AXIS_TVALID;
  input M6_AXIS_TREADY;
  output M7_AXIS_TLAST;
  output [31:0]M7_AXIS_TDATA;
  output M7_AXIS_TVALID;
  input M7_AXIS_TREADY;
  output M8_AXIS_TLAST;
  output [31:0]M8_AXIS_TDATA;
  output M8_AXIS_TVALID;
  input M8_AXIS_TREADY;
  output M9_AXIS_TLAST;
  output [31:0]M9_AXIS_TDATA;
  output M9_AXIS_TVALID;
  input M9_AXIS_TREADY;
  output M10_AXIS_TLAST;
  output [31:0]M10_AXIS_TDATA;
  output M10_AXIS_TVALID;
  input M10_AXIS_TREADY;
  output M11_AXIS_TLAST;
  output [31:0]M11_AXIS_TDATA;
  output M11_AXIS_TVALID;
  input M11_AXIS_TREADY;
  output M12_AXIS_TLAST;
  output [31:0]M12_AXIS_TDATA;
  output M12_AXIS_TVALID;
  input M12_AXIS_TREADY;
  output M13_AXIS_TLAST;
  output [31:0]M13_AXIS_TDATA;
  output M13_AXIS_TVALID;
  input M13_AXIS_TREADY;
  output M14_AXIS_TLAST;
  output [31:0]M14_AXIS_TDATA;
  output M14_AXIS_TVALID;
  input M14_AXIS_TREADY;
  output M15_AXIS_TLAST;
  output [31:0]M15_AXIS_TDATA;
  output M15_AXIS_TVALID;
  input M15_AXIS_TREADY;
  input S0_AXIS_TLAST;
  input [31:0]S0_AXIS_TDATA;
  input S0_AXIS_TVALID;
  output S0_AXIS_TREADY;
  input S1_AXIS_TLAST;
  input [31:0]S1_AXIS_TDATA;
  input S1_AXIS_TVALID;
  output S1_AXIS_TREADY;
  input S2_AXIS_TLAST;
  input [31:0]S2_AXIS_TDATA;
  input S2_AXIS_TVALID;
  output S2_AXIS_TREADY;
  input S3_AXIS_TLAST;
  input [31:0]S3_AXIS_TDATA;
  input S3_AXIS_TVALID;
  output S3_AXIS_TREADY;
  input S4_AXIS_TLAST;
  input [31:0]S4_AXIS_TDATA;
  input S4_AXIS_TVALID;
  output S4_AXIS_TREADY;
  input S5_AXIS_TLAST;
  input [31:0]S5_AXIS_TDATA;
  input S5_AXIS_TVALID;
  output S5_AXIS_TREADY;
  input S6_AXIS_TLAST;
  input [31:0]S6_AXIS_TDATA;
  input S6_AXIS_TVALID;
  output S6_AXIS_TREADY;
  input S7_AXIS_TLAST;
  input [31:0]S7_AXIS_TDATA;
  input S7_AXIS_TVALID;
  output S7_AXIS_TREADY;
  input S8_AXIS_TLAST;
  input [31:0]S8_AXIS_TDATA;
  input S8_AXIS_TVALID;
  output S8_AXIS_TREADY;
  input S9_AXIS_TLAST;
  input [31:0]S9_AXIS_TDATA;
  input S9_AXIS_TVALID;
  output S9_AXIS_TREADY;
  input S10_AXIS_TLAST;
  input [31:0]S10_AXIS_TDATA;
  input S10_AXIS_TVALID;
  output S10_AXIS_TREADY;
  input S11_AXIS_TLAST;
  input [31:0]S11_AXIS_TDATA;
  input S11_AXIS_TVALID;
  output S11_AXIS_TREADY;
  input S12_AXIS_TLAST;
  input [31:0]S12_AXIS_TDATA;
  input S12_AXIS_TVALID;
  output S12_AXIS_TREADY;
  input S13_AXIS_TLAST;
  input [31:0]S13_AXIS_TDATA;
  input S13_AXIS_TVALID;
  output S13_AXIS_TREADY;
  input S14_AXIS_TLAST;
  input [31:0]S14_AXIS_TDATA;
  input S14_AXIS_TVALID;
  output S14_AXIS_TREADY;
  input S15_AXIS_TLAST;
  input [31:0]S15_AXIS_TDATA;
  input S15_AXIS_TVALID;
  output S15_AXIS_TREADY;
  output [0:0]M_AXI_IC_AWID;
  output [31:0]M_AXI_IC_AWADDR;
  output [7:0]M_AXI_IC_AWLEN;
  output [2:0]M_AXI_IC_AWSIZE;
  output [1:0]M_AXI_IC_AWBURST;
  output M_AXI_IC_AWLOCK;
  output [3:0]M_AXI_IC_AWCACHE;
  output [2:0]M_AXI_IC_AWPROT;
  output [3:0]M_AXI_IC_AWQOS;
  output M_AXI_IC_AWVALID;
  input M_AXI_IC_AWREADY;
  output [4:0]M_AXI_IC_AWUSER;
  output [1:0]M_AXI_IC_AWDOMAIN;
  output [2:0]M_AXI_IC_AWSNOOP;
  output [1:0]M_AXI_IC_AWBAR;
  output [31:0]M_AXI_IC_WDATA;
  output [3:0]M_AXI_IC_WSTRB;
  output M_AXI_IC_WLAST;
  output M_AXI_IC_WVALID;
  input M_AXI_IC_WREADY;
  output [0:0]M_AXI_IC_WUSER;
  input [0:0]M_AXI_IC_BID;
  input [1:0]M_AXI_IC_BRESP;
  input M_AXI_IC_BVALID;
  output M_AXI_IC_BREADY;
  input [0:0]M_AXI_IC_BUSER;
  output M_AXI_IC_WACK;
  output [0:0]M_AXI_IC_ARID;
  output [31:0]M_AXI_IC_ARADDR;
  output [7:0]M_AXI_IC_ARLEN;
  output [2:0]M_AXI_IC_ARSIZE;
  output [1:0]M_AXI_IC_ARBURST;
  output M_AXI_IC_ARLOCK;
  output [3:0]M_AXI_IC_ARCACHE;
  output [2:0]M_AXI_IC_ARPROT;
  output [3:0]M_AXI_IC_ARQOS;
  output M_AXI_IC_ARVALID;
  input M_AXI_IC_ARREADY;
  output [4:0]M_AXI_IC_ARUSER;
  output [1:0]M_AXI_IC_ARDOMAIN;
  output [3:0]M_AXI_IC_ARSNOOP;
  output [1:0]M_AXI_IC_ARBAR;
  input [0:0]M_AXI_IC_RID;
  input [31:0]M_AXI_IC_RDATA;
  input [1:0]M_AXI_IC_RRESP;
  input M_AXI_IC_RLAST;
  input M_AXI_IC_RVALID;
  output M_AXI_IC_RREADY;
  input [0:0]M_AXI_IC_RUSER;
  output M_AXI_IC_RACK;
  input M_AXI_IC_ACVALID;
  input [31:0]M_AXI_IC_ACADDR;
  input [3:0]M_AXI_IC_ACSNOOP;
  input [2:0]M_AXI_IC_ACPROT;
  output M_AXI_IC_ACREADY;
  output M_AXI_IC_CRVALID;
  output [4:0]M_AXI_IC_CRRESP;
  input M_AXI_IC_CRREADY;
  output M_AXI_IC_CDVALID;
  output [31:0]M_AXI_IC_CDDATA;
  output M_AXI_IC_CDLAST;
  input M_AXI_IC_CDREADY;
  output [0:0]M_AXI_DC_AWID;
  output [31:0]M_AXI_DC_AWADDR;
  output [7:0]M_AXI_DC_AWLEN;
  output [2:0]M_AXI_DC_AWSIZE;
  output [1:0]M_AXI_DC_AWBURST;
  output M_AXI_DC_AWLOCK;
  output [3:0]M_AXI_DC_AWCACHE;
  output [2:0]M_AXI_DC_AWPROT;
  output [3:0]M_AXI_DC_AWQOS;
  output M_AXI_DC_AWVALID;
  input M_AXI_DC_AWREADY;
  output [4:0]M_AXI_DC_AWUSER;
  output [1:0]M_AXI_DC_AWDOMAIN;
  output [2:0]M_AXI_DC_AWSNOOP;
  output [1:0]M_AXI_DC_AWBAR;
  output [31:0]M_AXI_DC_WDATA;
  output [3:0]M_AXI_DC_WSTRB;
  output M_AXI_DC_WLAST;
  output M_AXI_DC_WVALID;
  input M_AXI_DC_WREADY;
  output [0:0]M_AXI_DC_WUSER;
  input [1:0]M_AXI_DC_BRESP;
  input [0:0]M_AXI_DC_BID;
  input M_AXI_DC_BVALID;
  output M_AXI_DC_BREADY;
  input [0:0]M_AXI_DC_BUSER;
  output M_AXI_DC_WACK;
  output [0:0]M_AXI_DC_ARID;
  output [31:0]M_AXI_DC_ARADDR;
  output [7:0]M_AXI_DC_ARLEN;
  output [2:0]M_AXI_DC_ARSIZE;
  output [1:0]M_AXI_DC_ARBURST;
  output M_AXI_DC_ARLOCK;
  output [3:0]M_AXI_DC_ARCACHE;
  output [2:0]M_AXI_DC_ARPROT;
  output [3:0]M_AXI_DC_ARQOS;
  output M_AXI_DC_ARVALID;
  input M_AXI_DC_ARREADY;
  output [4:0]M_AXI_DC_ARUSER;
  output [1:0]M_AXI_DC_ARDOMAIN;
  output [3:0]M_AXI_DC_ARSNOOP;
  output [1:0]M_AXI_DC_ARBAR;
  input [0:0]M_AXI_DC_RID;
  input [31:0]M_AXI_DC_RDATA;
  input [1:0]M_AXI_DC_RRESP;
  input M_AXI_DC_RLAST;
  input M_AXI_DC_RVALID;
  output M_AXI_DC_RREADY;
  input [0:0]M_AXI_DC_RUSER;
  output M_AXI_DC_RACK;
  input M_AXI_DC_ACVALID;
  input [31:0]M_AXI_DC_ACADDR;
  input [3:0]M_AXI_DC_ACSNOOP;
  input [2:0]M_AXI_DC_ACPROT;
  output M_AXI_DC_ACREADY;
  output M_AXI_DC_CRVALID;
  output [4:0]M_AXI_DC_CRRESP;
  input M_AXI_DC_CRREADY;
  output M_AXI_DC_CDVALID;
  output [31:0]M_AXI_DC_CDDATA;
  output M_AXI_DC_CDLAST;
  input M_AXI_DC_CDREADY;

  wire [0:3]Byte_Enable;
  wire Clk;
  wire Config_Reg_En;
  wire DReady;
  wire D_AS;
  wire [0:31]Data_Addr;
  wire [0:31]Data_Read;
  wire Data_Read_Reg_En;
  wire [0:31]Data_Write;
  wire Dbg_Capture;
  wire Dbg_Clk;
  wire [0:7]Dbg_Reg_En;
  wire Dbg_Shift;
  wire Dbg_TDI;
  wire Dbg_TDO;
  wire Dbg_TDO_INST_0_i_11_n_0;
  wire Dbg_TDO_INST_0_i_26_n_0;
  wire [0:7]Dbg_Trig_Out;
  wire Dbg_Update;
  wire Debug_Rst;
  wire IReady;
  wire I_AS;
  wire [0:31]Instr;
  wire [0:31]Instr_Addr;
  wire [31:0]M_AXI_DP_ARADDR;
  wire M_AXI_DP_ARREADY;
  wire M_AXI_DP_ARVALID;
  wire M_AXI_DP_AWREADY;
  wire M_AXI_DP_AWVALID;
  wire M_AXI_DP_BVALID;
  wire [31:0]M_AXI_DP_RDATA;
  wire M_AXI_DP_RVALID;
  wire [31:0]M_AXI_DP_WDATA;
  wire M_AXI_DP_WREADY;
  wire M_AXI_DP_WVALID;
  wire MicroBlaze_Core_I_n_411;
  wire \Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Status_Reg_En ;
  wire Reset;
  wire [0:1]Wakeup;
  wire Write_Strobe;
  wire NLW_MicroBlaze_Core_I_DWait_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Dbg_Stop_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Hibernate_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Mb_Reset_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Pause_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Pause_Ack_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Scan_En_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Scan_Reset_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Scan_Reset_Sel_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Sleep_UNCONNECTED;
  wire NLW_MicroBlaze_Core_I_Suspend_UNCONNECTED;
  wire \NLW_MicroBlaze_Core_I_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_MicroBlaze_Core_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire NLW_MicroBlaze_Core_I_of_pause_reg_UNCONNECTED;
  wire [356:0]NLW_MicroBlaze_Core_I_D_UNCONNECTED;
  wire [1:0]NLW_MicroBlaze_Core_I_Dbg_Trig_Ack_In_UNCONNECTED;
  wire [1:0]NLW_MicroBlaze_Core_I_Dbg_Trig_Ack_Out_UNCONNECTED;
  wire [1:0]NLW_MicroBlaze_Core_I_Dbg_Trig_In_UNCONNECTED;
  wire [1:1]NLW_MicroBlaze_Core_I_Dbg_Trig_Out_UNCONNECTED;
  wire [40:0]NLW_MicroBlaze_Core_I_LOCKSTEP_Master_Out_UNCONNECTED;
  wire [1:0]NLW_MicroBlaze_Core_I_Q_UNCONNECTED;
  wire [0:1]NLW_MicroBlaze_Core_I_Reset_Mode_UNCONNECTED;

  LUT5 #(
    .INIT(32'h00000040)) 
    Dbg_TDO_INST_0_i_1
       (.I0(MicroBlaze_Core_I_n_411),
        .I1(Dbg_Reg_En[6]),
        .I2(Dbg_Reg_En[7]),
        .I3(Dbg_Reg_En[4]),
        .I4(Dbg_Reg_En[5]),
        .O(\Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Status_Reg_En ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    Dbg_TDO_INST_0_i_11
       (.I0(Dbg_Reg_En[7]),
        .I1(Dbg_Reg_En[4]),
        .I2(Dbg_Reg_En[0]),
        .I3(Dbg_Reg_En[2]),
        .O(Dbg_TDO_INST_0_i_11_n_0));
  LUT5 #(
    .INIT(32'h00004000)) 
    Dbg_TDO_INST_0_i_14
       (.I0(Dbg_Reg_En[1]),
        .I1(Dbg_Reg_En[6]),
        .I2(Dbg_Reg_En[5]),
        .I3(Dbg_Reg_En[7]),
        .I4(Dbg_TDO_INST_0_i_26_n_0),
        .O(Config_Reg_En));
  LUT4 #(
    .INIT(16'hFFFE)) 
    Dbg_TDO_INST_0_i_26
       (.I0(Dbg_Reg_En[3]),
        .I1(Dbg_Reg_En[4]),
        .I2(Dbg_Reg_En[0]),
        .I3(Dbg_Reg_En[2]),
        .O(Dbg_TDO_INST_0_i_26_n_0));
  LUT5 #(
    .INIT(32'h00001000)) 
    Dbg_TDO_INST_0_i_4
       (.I0(Dbg_Reg_En[1]),
        .I1(Dbg_Reg_En[3]),
        .I2(Dbg_Reg_En[5]),
        .I3(Dbg_Reg_En[6]),
        .I4(Dbg_TDO_INST_0_i_11_n_0),
        .O(Data_Read_Reg_En));
  system_microblaze_0_0__MicroBlaze_Core MicroBlaze_Core_I
       (.Clk(Clk),
        .Config_Reg_En(Config_Reg_En),
        .D({NLW_MicroBlaze_Core_I_D_UNCONNECTED[356:355],I_AS,NLW_MicroBlaze_Core_I_D_UNCONNECTED[353:335],Instr_Addr[19],Instr_Addr[20],Instr_Addr[21],Instr_Addr[22],Instr_Addr[23],Instr_Addr[24],Instr_Addr[25],Instr_Addr[26],Instr_Addr[27],Instr_Addr[28],Instr_Addr[29],NLW_MicroBlaze_Core_I_D_UNCONNECTED[323:321],Data_Addr[1],NLW_MicroBlaze_Core_I_D_UNCONNECTED[319:303],Data_Addr[19],Data_Addr[20],Data_Addr[21],Data_Addr[22],Data_Addr[23],Data_Addr[24],Data_Addr[25],Data_Addr[26],Data_Addr[27],Data_Addr[28],Data_Addr[29],NLW_MicroBlaze_Core_I_D_UNCONNECTED[291:290],Data_Write[0],Data_Write[1],Data_Write[2],Data_Write[3],Data_Write[4],Data_Write[5],Data_Write[6],Data_Write[7],Data_Write[8],Data_Write[9],Data_Write[10],Data_Write[11],Data_Write[12],Data_Write[13],Data_Write[14],Data_Write[15],Data_Write[16],Data_Write[17],Data_Write[18],Data_Write[19],Data_Write[20],Data_Write[21],Data_Write[22],Data_Write[23],Data_Write[24],Data_Write[25],Data_Write[26],Data_Write[27],Data_Write[28],Data_Write[29],Data_Write[30],Data_Write[31],D_AS,NLW_MicroBlaze_Core_I_D_UNCONNECTED[256],Write_Strobe,Byte_Enable[0],Byte_Enable[1],Byte_Enable[2],Byte_Enable[3],M_AXI_DP_ARADDR[31:16],NLW_MicroBlaze_Core_I_D_UNCONNECTED[234:228],M_AXI_DP_ARADDR[8:0],M_AXI_DP_AWVALID,M_AXI_DP_WDATA[31:30],NLW_MicroBlaze_Core_I_D_UNCONNECTED[215:197],M_AXI_DP_WDATA[10:0],NLW_MicroBlaze_Core_I_D_UNCONNECTED[185:182],M_AXI_DP_WVALID,M_AXI_DP_ARVALID,NLW_MicroBlaze_Core_I_D_UNCONNECTED[179:0]}),
        .DReady(DReady),
        .DWait(NLW_MicroBlaze_Core_I_DWait_UNCONNECTED),
        .Data_Read(Data_Read),
        .Data_Read_Reg_En(Data_Read_Reg_En),
        .Dbg_Capture(Dbg_Capture),
        .Dbg_Clk(Dbg_Clk),
        .Dbg_Reg_En(Dbg_Reg_En),
        .Dbg_Reg_En_0_sp_1(MicroBlaze_Core_I_n_411),
        .Dbg_Shift(Dbg_Shift),
        .Dbg_Stop(NLW_MicroBlaze_Core_I_Dbg_Stop_UNCONNECTED),
        .Dbg_TDI(Dbg_TDI),
        .Dbg_TDO(Dbg_TDO),
        .Dbg_Trig_Ack_In(NLW_MicroBlaze_Core_I_Dbg_Trig_Ack_In_UNCONNECTED[1:0]),
        .Dbg_Trig_Ack_Out(NLW_MicroBlaze_Core_I_Dbg_Trig_Ack_Out_UNCONNECTED[1:0]),
        .Dbg_Trig_In(NLW_MicroBlaze_Core_I_Dbg_Trig_In_UNCONNECTED[1:0]),
        .Dbg_Trig_Out({NLW_MicroBlaze_Core_I_Dbg_Trig_Out_UNCONNECTED[1],Dbg_Trig_Out[1]}),
        .Dbg_Update(Dbg_Update),
        .Debug_Rst(Debug_Rst),
        .Hibernate(NLW_MicroBlaze_Core_I_Hibernate_UNCONNECTED),
        .IReady(IReady),
        .Instr(Instr),
        .LOCKSTEP_Master_Out(NLW_MicroBlaze_Core_I_LOCKSTEP_Master_Out_UNCONNECTED[40:0]),
        .M_AXI_DP_ARREADY(M_AXI_DP_ARREADY),
        .M_AXI_DP_AWREADY(M_AXI_DP_AWREADY),
        .M_AXI_DP_BVALID(M_AXI_DP_BVALID),
        .M_AXI_DP_RDATA(M_AXI_DP_RDATA),
        .M_AXI_DP_RVALID(M_AXI_DP_RVALID),
        .M_AXI_DP_WREADY(M_AXI_DP_WREADY),
        .Mb_Reset(NLW_MicroBlaze_Core_I_Mb_Reset_UNCONNECTED),
        .Pause(NLW_MicroBlaze_Core_I_Pause_UNCONNECTED),
        .Pause_Ack(NLW_MicroBlaze_Core_I_Pause_Ack_UNCONNECTED),
        .Q(NLW_MicroBlaze_Core_I_Q_UNCONNECTED[1:0]),
        .Reset(Reset),
        .Reset_Mode(NLW_MicroBlaze_Core_I_Reset_Mode_UNCONNECTED[0:1]),
        .Scan_En(NLW_MicroBlaze_Core_I_Scan_En_UNCONNECTED),
        .Scan_Reset(NLW_MicroBlaze_Core_I_Scan_Reset_UNCONNECTED),
        .Scan_Reset_Sel(NLW_MicroBlaze_Core_I_Scan_Reset_Sel_UNCONNECTED),
        .Sleep(NLW_MicroBlaze_Core_I_Sleep_UNCONNECTED),
        .Status_Reg_En(\Performance.Core/Use_Debug_Logic.Master_Core.Debug_Perf/Status_Reg_En ),
        .Suspend(NLW_MicroBlaze_Core_I_Suspend_UNCONNECTED),
        .\Using_FPGA.Native (\NLW_MicroBlaze_Core_I_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_MicroBlaze_Core_I_Using_FPGA.Native_0_UNCONNECTED ),
        .Wakeup(Wakeup),
        .of_pause_reg(NLW_MicroBlaze_Core_I_of_pause_reg_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "MicroBlaze_Core" *) 
module system_microblaze_0_0__MicroBlaze_Core
   (of_pause_reg,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    Q,
    D,
    Pause_Ack,
    Sleep,
    LOCKSTEP_Master_Out,
    Hibernate,
    Suspend,
    Dbg_Trig_In,
    Dbg_Trig_Ack_Out,
    Dbg_Reg_En_0_sp_1,
    Dbg_TDO,
    Clk,
    Dbg_Clk,
    Reset,
    Mb_Reset,
    Debug_Rst,
    Pause,
    Dbg_Update,
    Dbg_Trig_Ack_In,
    Dbg_Trig_Out,
    Dbg_Stop,
    Dbg_Capture,
    M_AXI_DP_BVALID,
    M_AXI_DP_RVALID,
    M_AXI_DP_WREADY,
    M_AXI_DP_AWREADY,
    M_AXI_DP_ARREADY,
    Reset_Mode,
    Data_Read_Reg_En,
    Config_Reg_En,
    IReady,
    Scan_Reset_Sel,
    Scan_Reset,
    Scan_En,
    DReady,
    DWait,
    Dbg_Shift,
    Dbg_Reg_En,
    Status_Reg_En,
    Instr,
    Dbg_TDI,
    Wakeup,
    M_AXI_DP_RDATA,
    Data_Read);
  output of_pause_reg;
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [1:0]Q;
  output [356:0]D;
  output Pause_Ack;
  output Sleep;
  output [40:0]LOCKSTEP_Master_Out;
  output Hibernate;
  output Suspend;
  output [1:0]Dbg_Trig_In;
  output [1:0]Dbg_Trig_Ack_Out;
  output Dbg_Reg_En_0_sp_1;
  output Dbg_TDO;
  input Clk;
  input Dbg_Clk;
  input Reset;
  input Mb_Reset;
  input Debug_Rst;
  input Pause;
  input Dbg_Update;
  input [1:0]Dbg_Trig_Ack_In;
  input [1:0]Dbg_Trig_Out;
  input Dbg_Stop;
  input Dbg_Capture;
  input M_AXI_DP_BVALID;
  input M_AXI_DP_RVALID;
  input M_AXI_DP_WREADY;
  input M_AXI_DP_AWREADY;
  input M_AXI_DP_ARREADY;
  input [0:1]Reset_Mode;
  input Data_Read_Reg_En;
  input Config_Reg_En;
  input IReady;
  input Scan_Reset_Sel;
  input Scan_Reset;
  input Scan_En;
  input DReady;
  input DWait;
  input Dbg_Shift;
  input [0:7]Dbg_Reg_En;
  input Status_Reg_En;
  input [0:31]Instr;
  input Dbg_TDI;
  input [0:1]Wakeup;
  input [31:0]M_AXI_DP_RDATA;
  input [0:31]Data_Read;

  wire Clk;
  wire Config_Reg_En;
  wire [356:0]D;
  wire DReady;
  wire [0:31]Data_Read;
  wire Data_Read_Reg_En;
  wire Dbg_Capture;
  wire Dbg_Clk;
  wire [0:7]Dbg_Reg_En;
  wire Dbg_Reg_En_0_sn_1;
  wire Dbg_Shift;
  wire Dbg_TDI;
  wire Dbg_TDO;
  wire [1:0]Dbg_Trig_Out;
  wire Dbg_Update;
  wire Debug_Rst;
  wire IReady;
  wire [0:31]Instr;
  wire M_AXI_DP_ARREADY;
  wire M_AXI_DP_AWREADY;
  wire M_AXI_DP_BVALID;
  wire [31:0]M_AXI_DP_RDATA;
  wire M_AXI_DP_RVALID;
  wire M_AXI_DP_WREADY;
  wire Reset;
  wire Status_Reg_En;
  wire Synced;
  wire [0:1]Wakeup;
  wire reset_temp__0;
  wire sync_reset;
  wire [0:1]wakeup_i;
  wire \NLW_Performance.Core_DI_UNCONNECTED ;
  wire \NLW_Performance.Core_DWait_UNCONNECTED ;
  wire \NLW_Performance.Core_Dbg_Stop_UNCONNECTED ;
  wire \NLW_Performance.Core_Hibernate_UNCONNECTED ;
  wire \NLW_Performance.Core_Pause_UNCONNECTED ;
  wire \NLW_Performance.Core_Pause_Ack_UNCONNECTED ;
  wire \NLW_Performance.Core_Scan_En_UNCONNECTED ;
  wire \NLW_Performance.Core_Scan_Reset_UNCONNECTED ;
  wire \NLW_Performance.Core_Scan_Reset_Sel_UNCONNECTED ;
  wire \NLW_Performance.Core_Sleep_UNCONNECTED ;
  wire \NLW_Performance.Core_Suspend_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_1_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_10_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_11_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_12_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_13_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_14_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_15_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_16_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_17_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_18_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_19_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_2_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_20_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_21_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_22_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_23_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_24_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_25_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_26_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_27_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_28_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_29_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_3_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_30_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_4_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_5_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_6_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_7_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_8_UNCONNECTED ;
  wire \NLW_Performance.Core_Using_FPGA.Native_9_UNCONNECTED ;
  wire \NLW_Performance.Core_of_pause_reg_UNCONNECTED ;
  wire [325:0]\NLW_Performance.Core_D_UNCONNECTED ;
  wire [1:0]\NLW_Performance.Core_Dbg_Trig_Ack_In_UNCONNECTED ;
  wire [1:0]\NLW_Performance.Core_Dbg_Trig_Ack_Out_UNCONNECTED ;
  wire [1:0]\NLW_Performance.Core_Dbg_Trig_In_UNCONNECTED ;
  wire [1:1]\NLW_Performance.Core_Dbg_Trig_Out_UNCONNECTED ;
  wire [40:0]\NLW_Performance.Core_LOCKSTEP_Master_Out_UNCONNECTED ;
  wire [1:0]\NLW_Performance.Core_Q_UNCONNECTED ;
  wire [0:1]\NLW_Performance.Core_Reset_Mode_UNCONNECTED ;

  assign Dbg_Reg_En_0_sp_1 = Dbg_Reg_En_0_sn_1;
  system_microblaze_0_0__MicroBlaze_GTi \Performance.Core 
       (.Clk(Clk),
        .Config_Reg_En(Config_Reg_En),
        .D({\NLW_Performance.Core_D_UNCONNECTED [325:324],D[354],\NLW_Performance.Core_D_UNCONNECTED [322:304],D[334:324],\NLW_Performance.Core_D_UNCONNECTED [292:290],D[320],\NLW_Performance.Core_D_UNCONNECTED [288:272],D[302:292],\NLW_Performance.Core_D_UNCONNECTED [260:259],D[289:257],\NLW_Performance.Core_D_UNCONNECTED [225],D[255:235],\NLW_Performance.Core_D_UNCONNECTED [203:197],D[227:216],\NLW_Performance.Core_D_UNCONNECTED [184:166],D[196:186],\NLW_Performance.Core_D_UNCONNECTED [154:151],D[181:180],\NLW_Performance.Core_D_UNCONNECTED [148:0]}),
        .DI(\NLW_Performance.Core_DI_UNCONNECTED ),
        .DReady(DReady),
        .DWait(\NLW_Performance.Core_DWait_UNCONNECTED ),
        .Data_Read(Data_Read),
        .Data_Read_Reg_En(Data_Read_Reg_En),
        .Dbg_Capture(Dbg_Capture),
        .Dbg_Clk(Dbg_Clk),
        .Dbg_Reg_En(Dbg_Reg_En),
        .Dbg_Reg_En_0_sp_1(Dbg_Reg_En_0_sn_1),
        .Dbg_Shift(Dbg_Shift),
        .Dbg_Stop(\NLW_Performance.Core_Dbg_Stop_UNCONNECTED ),
        .Dbg_TDI(Dbg_TDI),
        .Dbg_TDO(Dbg_TDO),
        .Dbg_Trig_Ack_In(\NLW_Performance.Core_Dbg_Trig_Ack_In_UNCONNECTED [1:0]),
        .Dbg_Trig_Ack_Out(\NLW_Performance.Core_Dbg_Trig_Ack_Out_UNCONNECTED [1:0]),
        .Dbg_Trig_In(\NLW_Performance.Core_Dbg_Trig_In_UNCONNECTED [1:0]),
        .Dbg_Trig_Out({\NLW_Performance.Core_Dbg_Trig_Out_UNCONNECTED [1],Dbg_Trig_Out[0]}),
        .Dbg_Update(Dbg_Update),
        .Hibernate(\NLW_Performance.Core_Hibernate_UNCONNECTED ),
        .IReady(IReady),
        .Instr(Instr),
        .LOCKSTEP_Master_Out(\NLW_Performance.Core_LOCKSTEP_Master_Out_UNCONNECTED [40:0]),
        .M_AXI_DP_ARREADY(M_AXI_DP_ARREADY),
        .M_AXI_DP_AWREADY(M_AXI_DP_AWREADY),
        .M_AXI_DP_BVALID(M_AXI_DP_BVALID),
        .M_AXI_DP_RDATA(M_AXI_DP_RDATA),
        .M_AXI_DP_RVALID(M_AXI_DP_RVALID),
        .M_AXI_DP_WREADY(M_AXI_DP_WREADY),
        .Pause(\NLW_Performance.Core_Pause_UNCONNECTED ),
        .Pause_Ack(\NLW_Performance.Core_Pause_Ack_UNCONNECTED ),
        .Q(\NLW_Performance.Core_Q_UNCONNECTED [1:0]),
        .Reset_Mode(\NLW_Performance.Core_Reset_Mode_UNCONNECTED [0:1]),
        .Scan_En(\NLW_Performance.Core_Scan_En_UNCONNECTED ),
        .Scan_Reset(\NLW_Performance.Core_Scan_Reset_UNCONNECTED ),
        .Scan_Reset_Sel(\NLW_Performance.Core_Scan_Reset_Sel_UNCONNECTED ),
        .Sleep(\NLW_Performance.Core_Sleep_UNCONNECTED ),
        .Status_Reg_En(Status_Reg_En),
        .Suspend(\NLW_Performance.Core_Suspend_UNCONNECTED ),
        .\Using_FPGA.Native (\NLW_Performance.Core_Using_FPGA.Native_UNCONNECTED ),
        .\Using_FPGA.Native_0 (\NLW_Performance.Core_Using_FPGA.Native_0_UNCONNECTED ),
        .\Using_FPGA.Native_1 (\NLW_Performance.Core_Using_FPGA.Native_1_UNCONNECTED ),
        .\Using_FPGA.Native_10 (\NLW_Performance.Core_Using_FPGA.Native_10_UNCONNECTED ),
        .\Using_FPGA.Native_11 (\NLW_Performance.Core_Using_FPGA.Native_11_UNCONNECTED ),
        .\Using_FPGA.Native_12 (\NLW_Performance.Core_Using_FPGA.Native_12_UNCONNECTED ),
        .\Using_FPGA.Native_13 (\NLW_Performance.Core_Using_FPGA.Native_13_UNCONNECTED ),
        .\Using_FPGA.Native_14 (\NLW_Performance.Core_Using_FPGA.Native_14_UNCONNECTED ),
        .\Using_FPGA.Native_15 (\NLW_Performance.Core_Using_FPGA.Native_15_UNCONNECTED ),
        .\Using_FPGA.Native_16 (\NLW_Performance.Core_Using_FPGA.Native_16_UNCONNECTED ),
        .\Using_FPGA.Native_17 (\NLW_Performance.Core_Using_FPGA.Native_17_UNCONNECTED ),
        .\Using_FPGA.Native_18 (\NLW_Performance.Core_Using_FPGA.Native_18_UNCONNECTED ),
        .\Using_FPGA.Native_19 (\NLW_Performance.Core_Using_FPGA.Native_19_UNCONNECTED ),
        .\Using_FPGA.Native_2 (\NLW_Performance.Core_Using_FPGA.Native_2_UNCONNECTED ),
        .\Using_FPGA.Native_20 (\NLW_Performance.Core_Using_FPGA.Native_20_UNCONNECTED ),
        .\Using_FPGA.Native_21 (\NLW_Performance.Core_Using_FPGA.Native_21_UNCONNECTED ),
        .\Using_FPGA.Native_22 (\NLW_Performance.Core_Using_FPGA.Native_22_UNCONNECTED ),
        .\Using_FPGA.Native_23 (\NLW_Performance.Core_Using_FPGA.Native_23_UNCONNECTED ),
        .\Using_FPGA.Native_24 (\NLW_Performance.Core_Using_FPGA.Native_24_UNCONNECTED ),
        .\Using_FPGA.Native_25 (\NLW_Performance.Core_Using_FPGA.Native_25_UNCONNECTED ),
        .\Using_FPGA.Native_26 (\NLW_Performance.Core_Using_FPGA.Native_26_UNCONNECTED ),
        .\Using_FPGA.Native_27 (\NLW_Performance.Core_Using_FPGA.Native_27_UNCONNECTED ),
        .\Using_FPGA.Native_28 (\NLW_Performance.Core_Using_FPGA.Native_28_UNCONNECTED ),
        .\Using_FPGA.Native_29 (\NLW_Performance.Core_Using_FPGA.Native_29_UNCONNECTED ),
        .\Using_FPGA.Native_3 (\NLW_Performance.Core_Using_FPGA.Native_3_UNCONNECTED ),
        .\Using_FPGA.Native_30 (\NLW_Performance.Core_Using_FPGA.Native_30_UNCONNECTED ),
        .\Using_FPGA.Native_4 (\NLW_Performance.Core_Using_FPGA.Native_4_UNCONNECTED ),
        .\Using_FPGA.Native_5 (\NLW_Performance.Core_Using_FPGA.Native_5_UNCONNECTED ),
        .\Using_FPGA.Native_6 (\NLW_Performance.Core_Using_FPGA.Native_6_UNCONNECTED ),
        .\Using_FPGA.Native_7 (\NLW_Performance.Core_Using_FPGA.Native_7_UNCONNECTED ),
        .\Using_FPGA.Native_8 (\NLW_Performance.Core_Using_FPGA.Native_8_UNCONNECTED ),
        .\Using_FPGA.Native_9 (\NLW_Performance.Core_Using_FPGA.Native_9_UNCONNECTED ),
        .of_pause_reg(\NLW_Performance.Core_of_pause_reg_UNCONNECTED ),
        .sync_reset(sync_reset),
        .wakeup_i(wakeup_i));
  system_microblaze_0_0__mb_sync_bit Reset_DFF
       (.Clk(Clk),
        .out(Synced),
        .reset_temp(reset_temp__0));
  FDRE #(
    .INIT(1'b1)) 
    \Use_Async_Reset.sync_reset_reg 
       (.C(Clk),
        .CE(1'b1),
        .D(Synced),
        .Q(sync_reset),
        .R(1'b0));
  system_microblaze_0_0__mb_sync_bit_0 \Using_Async_Wakeup_0.Wakeup_DFF 
       (.Clk(Clk),
        .SR(sync_reset),
        .Wakeup(Wakeup[0]),
        .out(wakeup_i[0]));
  system_microblaze_0_0__mb_sync_bit_1 \Using_Async_Wakeup_1.Wakeup_DFF 
       (.Clk(Clk),
        .SR(sync_reset),
        .Wakeup(Wakeup[1]),
        .out(wakeup_i[1]));
  (* OPT_MODIFIED = "RETARGET" *) 
  LUT2 #(
    .INIT(4'hE)) 
    reset_temp
       (.I0(Reset),
        .I1(Debug_Rst),
        .O(reset_temp__0));
endmodule

(* ORIG_REF_NAME = "MicroBlaze_GTi" *) 
module system_microblaze_0_0__MicroBlaze_GTi
   (of_pause_reg,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    Q,
    DI,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \Using_FPGA.Native_13 ,
    \Using_FPGA.Native_14 ,
    \Using_FPGA.Native_15 ,
    \Using_FPGA.Native_16 ,
    \Using_FPGA.Native_17 ,
    \Using_FPGA.Native_18 ,
    \Using_FPGA.Native_19 ,
    \Using_FPGA.Native_20 ,
    \Using_FPGA.Native_21 ,
    \Using_FPGA.Native_22 ,
    \Using_FPGA.Native_23 ,
    \Using_FPGA.Native_24 ,
    \Using_FPGA.Native_25 ,
    \Using_FPGA.Native_26 ,
    \Using_FPGA.Native_27 ,
    \Using_FPGA.Native_28 ,
    \Using_FPGA.Native_29 ,
    \Using_FPGA.Native_30 ,
    D,
    Pause_Ack,
    Sleep,
    LOCKSTEP_Master_Out,
    Hibernate,
    Suspend,
    Dbg_Trig_In,
    Dbg_Trig_Ack_Out,
    Dbg_Reg_En_0_sp_1,
    Dbg_TDO,
    sync_reset,
    Clk,
    Dbg_Clk,
    Pause,
    Dbg_Update,
    Dbg_Trig_Ack_In,
    Dbg_Trig_Out,
    Dbg_Stop,
    Dbg_Capture,
    M_AXI_DP_BVALID,
    M_AXI_DP_RVALID,
    M_AXI_DP_WREADY,
    M_AXI_DP_AWREADY,
    M_AXI_DP_ARREADY,
    Reset_Mode,
    Data_Read_Reg_En,
    Config_Reg_En,
    IReady,
    Scan_Reset_Sel,
    Scan_Reset,
    Scan_En,
    DReady,
    DWait,
    Dbg_Shift,
    Dbg_Reg_En,
    wakeup_i,
    Status_Reg_En,
    Instr,
    Dbg_TDI,
    M_AXI_DP_RDATA,
    Data_Read);
  output of_pause_reg;
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output [1:0]Q;
  output DI;
  output \Using_FPGA.Native_1 ;
  output \Using_FPGA.Native_2 ;
  output \Using_FPGA.Native_3 ;
  output \Using_FPGA.Native_4 ;
  output \Using_FPGA.Native_5 ;
  output \Using_FPGA.Native_6 ;
  output \Using_FPGA.Native_7 ;
  output \Using_FPGA.Native_8 ;
  output \Using_FPGA.Native_9 ;
  output \Using_FPGA.Native_10 ;
  output \Using_FPGA.Native_11 ;
  output \Using_FPGA.Native_12 ;
  output \Using_FPGA.Native_13 ;
  output \Using_FPGA.Native_14 ;
  output \Using_FPGA.Native_15 ;
  output \Using_FPGA.Native_16 ;
  output \Using_FPGA.Native_17 ;
  output \Using_FPGA.Native_18 ;
  output \Using_FPGA.Native_19 ;
  output \Using_FPGA.Native_20 ;
  output \Using_FPGA.Native_21 ;
  output \Using_FPGA.Native_22 ;
  output \Using_FPGA.Native_23 ;
  output \Using_FPGA.Native_24 ;
  output \Using_FPGA.Native_25 ;
  output \Using_FPGA.Native_26 ;
  output \Using_FPGA.Native_27 ;
  output \Using_FPGA.Native_28 ;
  output \Using_FPGA.Native_29 ;
  output \Using_FPGA.Native_30 ;
  output [325:0]D;
  output Pause_Ack;
  output Sleep;
  output [40:0]LOCKSTEP_Master_Out;
  output Hibernate;
  output Suspend;
  output [1:0]Dbg_Trig_In;
  output [1:0]Dbg_Trig_Ack_Out;
  output Dbg_Reg_En_0_sp_1;
  output Dbg_TDO;
  input sync_reset;
  input Clk;
  input Dbg_Clk;
  input Pause;
  input Dbg_Update;
  input [1:0]Dbg_Trig_Ack_In;
  input [1:0]Dbg_Trig_Out;
  input Dbg_Stop;
  input Dbg_Capture;
  input M_AXI_DP_BVALID;
  input M_AXI_DP_RVALID;
  input M_AXI_DP_WREADY;
  input M_AXI_DP_AWREADY;
  input M_AXI_DP_ARREADY;
  input [0:1]Reset_Mode;
  input Data_Read_Reg_En;
  input Config_Reg_En;
  input IReady;
  input Scan_Reset_Sel;
  input Scan_Reset;
  input Scan_En;
  input DReady;
  input DWait;
  input Dbg_Shift;
  input [0:7]Dbg_Reg_En;
  input [0:1]wakeup_i;
  input Status_Reg_En;
  input [0:31]Instr;
  input Dbg_TDI;
  input [31:0]M_AXI_DP_RDATA;
  input [0:31]Data_Read;

  wire \ALU_I/DI ;
  wire [0:0]\Byte_Doublet_Handle_gti_I/wb_read_lsb_1_sel ;
  wire [0:1]\Byte_Doublet_Handle_gti_I/wb_read_lsb_sel ;
  wire \Byte_Doublet_Handle_gti_I/wb_read_msb_doublet_sel ;
  wire Clk;
  wire Config_Reg_En;
  wire [325:0]\^D ;
  wire \^DI ;
  wire DReady;
  wire Data_Flow_I_n_184;
  wire Data_Flow_I_n_185;
  wire Data_Flow_I_n_186;
  wire Data_Flow_I_n_187;
  wire Data_Flow_I_n_188;
  wire Data_Flow_I_n_189;
  wire Data_Flow_I_n_190;
  wire Data_Flow_I_n_191;
  wire Data_Flow_I_n_192;
  wire Data_Flow_I_n_193;
  wire Data_Flow_I_n_314;
  wire Data_Flow_I_n_33;
  wire \Data_Flow_Logic_I/R ;
  wire \Data_Flow_Logic_I/WB_MEM_Result0 ;
  wire [0:31]Data_Read;
  wire Data_Read_Reg_En;
  wire Dbg_Capture;
  wire Dbg_Clk;
  wire [0:7]Dbg_Reg_En;
  wire Dbg_Reg_En_0_sn_1;
  wire Dbg_Shift;
  wire Dbg_TDI;
  wire Dbg_TDO;
  wire [1:0]Dbg_Trig_Out;
  wire Dbg_Update;
  wire Decode_I_n_236;
  wire Decode_I_n_247;
  wire Decode_I_n_259;
  wire Decode_I_n_266;
  wire Decode_I_n_367;
  wire Decode_I_n_368;
  wire Decode_I_n_369;
  wire Decode_I_n_370;
  wire Decode_I_n_371;
  wire Decode_I_n_372;
  wire Decode_I_n_373;
  wire Decode_I_n_374;
  wire Decode_I_n_375;
  wire Decode_I_n_376;
  wire Decode_I_n_377;
  wire Decode_I_n_378;
  wire Decode_I_n_379;
  wire Decode_I_n_380;
  wire Decode_I_n_381;
  wire Decode_I_n_382;
  wire Decode_I_n_383;
  wire Decode_I_n_384;
  wire Decode_I_n_385;
  wire Decode_I_n_386;
  wire Decode_I_n_387;
  wire Decode_I_n_388;
  wire Decode_I_n_389;
  wire Decode_I_n_390;
  wire Decode_I_n_391;
  wire Decode_I_n_392;
  wire Decode_I_n_393;
  wire Decode_I_n_394;
  wire Decode_I_n_395;
  wire Decode_I_n_396;
  wire Decode_I_n_397;
  wire Decode_I_n_399;
  wire Decode_I_n_400;
  wire Decode_I_n_401;
  wire Decode_I_n_402;
  wire Decode_I_n_403;
  wire Decode_I_n_404;
  wire Decode_I_n_405;
  wire Decode_I_n_406;
  wire Decode_I_n_407;
  wire Decode_I_n_408;
  wire Decode_I_n_409;
  wire Decode_I_n_410;
  wire Decode_I_n_411;
  wire Decode_I_n_412;
  wire Decode_I_n_413;
  wire Decode_I_n_414;
  wire Decode_I_n_415;
  wire Decode_I_n_416;
  wire Decode_I_n_417;
  wire Decode_I_n_418;
  wire Decode_I_n_419;
  wire Decode_I_n_420;
  wire Decode_I_n_421;
  wire Decode_I_n_422;
  wire Decode_I_n_426;
  wire Decode_I_n_427;
  wire Decode_I_n_428;
  wire Decode_I_n_429;
  wire Decode_I_n_430;
  wire Decode_I_n_433;
  wire Decode_I_n_441;
  wire Decode_I_n_442;
  wire Decode_I_n_443;
  wire Decode_I_n_444;
  wire Decode_I_n_445;
  wire Decode_I_n_446;
  wire Decode_I_n_447;
  wire Decode_I_n_448;
  wire Decode_I_n_449;
  wire Decode_I_n_450;
  wire Decode_I_n_451;
  wire Decode_I_n_452;
  wire Decode_I_n_453;
  wire Decode_I_n_454;
  wire Decode_I_n_455;
  wire Decode_I_n_456;
  wire Decode_I_n_457;
  wire Decode_I_n_458;
  wire Decode_I_n_459;
  wire Decode_I_n_460;
  wire Decode_I_n_461;
  wire Decode_I_n_462;
  wire Decode_I_n_463;
  wire Decode_I_n_464;
  wire Decode_I_n_465;
  wire Decode_I_n_466;
  wire Decode_I_n_467;
  wire Decode_I_n_468;
  wire Decode_I_n_469;
  wire Decode_I_n_470;
  wire Decode_I_n_471;
  wire Decode_I_n_472;
  wire Decode_I_n_473;
  wire Decode_I_n_474;
  wire Decode_I_n_475;
  wire Decode_I_n_478;
  wire EX_ALU_Sel_Logic;
  wire EX_Enable_ALU;
  wire [0:31]EX_Fwd;
  wire IReady;
  wire [0:31]Instr;
  wire [40:0]\^LOCKSTEP_Master_Out ;
  wire MEM_DataBus_Ready;
  wire [0:31]MEM_Fwd;
  wire [0:31]MEM_PC;
  wire M_AXI_DP_ARREADY;
  wire M_AXI_DP_AWREADY;
  wire M_AXI_DP_BVALID;
  wire [31:0]M_AXI_DP_RDATA;
  wire M_AXI_DP_RVALID;
  wire M_AXI_DP_WREADY;
  wire \Operand_Select_I/I0 ;
  wire \Operand_Select_I/I1 ;
  wire [0:15]\Operand_Select_I/imm_reg ;
  wire [0:31]\Operand_Select_I/of_op2 ;
  wire [0:31]\Operand_Select_I/of_op3 ;
  wire \PreFetch_Buffer_I1/I139_out ;
  wire \PreFetch_Buffer_I1/if_predecode_reg0 ;
  wire [1:0]\^Q ;
  wire SRI;
  wire \Shift_Logic_Module_I/I4 ;
  wire \^Sleep ;
  wire Sleep_Out;
  wire Status_Reg_En;
  wire \Use_DBUS.DAXI_Interface_I1_n_14 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_15 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_16 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_17 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_18 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_19 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_20 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_21 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_22 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_23 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_24 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_25 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_26 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_27 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_28 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_29 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_30 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_31 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_32 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_33 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_34 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_35 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_36 ;
  wire \Use_DBUS.DAXI_Interface_I1_n_37 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_38 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_39 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_42 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_43 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_44 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_50 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_58 ;
  wire \Use_Debug_Logic.Master_Core.Debug_Perf_n_59 ;
  wire \^Using_FPGA.Native ;
  wire \^Using_FPGA.Native_0 ;
  wire \^Using_FPGA.Native_1 ;
  wire \^Using_FPGA.Native_16 ;
  wire \^Using_FPGA.Native_17 ;
  wire \^Using_FPGA.Native_18 ;
  wire \^Using_FPGA.Native_19 ;
  wire \^Using_FPGA.Native_2 ;
  wire \^Using_FPGA.Native_20 ;
  wire \^Using_FPGA.Native_21 ;
  wire \^Using_FPGA.Native_22 ;
  wire \^Using_FPGA.Native_23 ;
  wire \^Using_FPGA.Native_24 ;
  wire \^Using_FPGA.Native_25 ;
  wire \^Using_FPGA.Native_26 ;
  wire \^Using_FPGA.Native_27 ;
  wire \^Using_FPGA.Native_28 ;
  wire \^Using_FPGA.Native_29 ;
  wire \^Using_FPGA.Native_3 ;
  wire \^Using_FPGA.Native_30 ;
  wire \^Using_FPGA.Native_4 ;
  wire \^Using_FPGA.Native_5 ;
  wire \^Using_FPGA.Native_6 ;
  wire \^Using_FPGA.Native_7 ;
  wire active_access;
  wire active_access_d1;
  wire dbg_clean_stop;
  wire dbg_stop_i;
  wire dbg_stop_instr_fetch_nohalt0__0;
  wire ex_Exception_Taken;
  wire [28:30]ex_MSR;
  wire ex_MSR_Load_ALU_C;
  wire ex_MSR_Load_LWX_SWX_C;
  wire ex_MSR_Load_Shift_C;
  wire ex_MSR_Set_SW_BIP;
  wire [0:1]ex_alu_op;
  wire ex_byte_access;
  wire ex_cmp_op;
  wire [30:31]ex_databus_addr;
  wire ex_doublet_access;
  wire ex_exception_no_load_store_mask;
  wire ex_load_shift_carry;
  wire ex_move_to_MSR_instr;
  wire [0:31]ex_op1;
  wire ex_op1_cmp_equal;
  wire ex_op1_cmp_equal_n;
  wire ex_op1_neg;
  wire [0:31]ex_op3;
  wire ex_reverse_mem_access;
  wire [0:1]ex_sext_op;
  wire ex_swap_byte_instr;
  wire ex_swx_access__0;
  wire ex_unsigned_op;
  wire ex_use_carry;
  wire ex_valid;
  wire \exception_registers_I1/I1 ;
  wire [0:31]gpr_op1;
  wire [0:31]gpr_op2;
  wire [0:31]gpr_op3;
  wire [0:31]ib_data;
  wire [3:3]if_sel_input;
  wire [1:1]instr_rd_reg;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire mem_Exception_Taken;
  wire mem_byte_access;
  wire mem_databus_access;
  wire mem_doublet_access;
  wire mem_sel_msr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [0:15]of_imm_data;
  wire of_op1_sel_spr;
  wire \^of_pause_reg ;
  wire [0:31]of_pc;
  wire of_write_imm_reg;
  wire p_232_in;
  wire read_register_MSR_1;
  wire [8:31]swap_result;
  wire [0:7]swap_result_reg;
  wire sync_reset;
  wire [0:1]wakeup_i;
  wire wb_Halted;
  wire wb_byte_access;
  wire [24:31]wb_databus_steered_read_data;
  wire [0:31]wb_dlmb_valid_read_data;
  wire wb_dlmb_valid_read_data0;
  wire [0:31]wb_excep_return_addr;
  wire wb_gpr_write_dbg;
  wire [0:31]wb_mem_result;
  wire wb_pc_valid;
  wire wb_piperun;
  wire wb_read_imm_reg;
  wire wb_read_imm_reg_1;
  wire \NLW_Data_Flow_I_Using_FPGA.Native_10_UNCONNECTED ;
  wire \NLW_Data_Flow_I_Using_FPGA.Native_11_UNCONNECTED ;
  wire \NLW_Data_Flow_I_Using_FPGA.Native_12_UNCONNECTED ;
  wire \NLW_Data_Flow_I_Using_FPGA.Native_13_UNCONNECTED ;
  wire \NLW_Data_Flow_I_Using_FPGA.Native_6_UNCONNECTED ;
  wire \NLW_Data_Flow_I_Using_FPGA.Native_7_UNCONNECTED ;
  wire \NLW_Data_Flow_I_Using_FPGA.Native_8_UNCONNECTED ;
  wire \NLW_Data_Flow_I_Using_FPGA.Native_9_UNCONNECTED ;
  wire NLW_Data_Flow_I_ex_op1_zero_UNCONNECTED;
  wire [45:12]\NLW_Data_Flow_I_EX_Op2_reg[0]_UNCONNECTED ;
  wire [25:0]\NLW_Data_Flow_I_MEM_DataBus_Write_Data_reg[0]_UNCONNECTED ;
  wire NLW_Decode_I_DWait_UNCONNECTED;
  wire NLW_Decode_I_Hibernate_UNCONNECTED;
  wire NLW_Decode_I_MEM_DataBus_Read_UNCONNECTED;
  wire NLW_Decode_I_Pause_UNCONNECTED;
  wire NLW_Decode_I_Pause_Ack_UNCONNECTED;
  wire NLW_Decode_I_Scan_En_UNCONNECTED;
  wire NLW_Decode_I_Scan_Reset_UNCONNECTED;
  wire NLW_Decode_I_Scan_Reset_Sel_UNCONNECTED;
  wire NLW_Decode_I_Suspend_UNCONNECTED;
  wire NLW_Decode_I_dbg_pause_UNCONNECTED;
  wire NLW_Decode_I_ex_is_load_instr_s_UNCONNECTED;
  wire NLW_Decode_I_ex_op1_zero_UNCONNECTED;
  wire NLW_Decode_I_mem_databus_write_UNCONNECTED;
  wire NLW_Decode_I_no_sleeping_UNCONNECTED;
  wire [2:0]NLW_Decode_I_LOCKSTEP_Master_Out_UNCONNECTED;
  wire [15:15]\NLW_Decode_I_MEM_DataBus_Addr_reg[0]_0_UNCONNECTED ;
  wire [161:1]\NLW_Decode_I_Performance_Debug_Control.dbg_state_nohalt_reg_UNCONNECTED ;
  wire [0:0]NLW_Decode_I_Q_UNCONNECTED;
  wire [0:1]NLW_Decode_I_Reset_Mode_UNCONNECTED;
  wire \NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Stop_UNCONNECTED ;
  wire \NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Pause_UNCONNECTED ;
  wire \NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Scan_En_UNCONNECTED ;
  wire \NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Scan_Reset_UNCONNECTED ;
  wire \NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Scan_Reset_Sel_UNCONNECTED ;
  wire \NLW_Use_Debug_Logic.Master_Core.Debug_Perf_dbg_pause_UNCONNECTED ;
  wire \NLW_Use_Debug_Logic.Master_Core.Debug_Perf_ex_is_load_instr_s_UNCONNECTED ;
  wire \NLW_Use_Debug_Logic.Master_Core.Debug_Perf_no_sleeping_UNCONNECTED ;
  wire [2:2]\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_D_UNCONNECTED ;
  wire [1:0]\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_Ack_In_UNCONNECTED ;
  wire [1:0]\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_Ack_Out_UNCONNECTED ;
  wire [1:0]\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_In_UNCONNECTED ;
  wire [1:1]\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_Out_UNCONNECTED ;
  wire [37:33]\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_LOCKSTEP_Master_Out_UNCONNECTED ;
  wire [0:0]\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0_UNCONNECTED ;
  wire [0:1]\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Reset_Mode_UNCONNECTED ;

  assign D[323] = \^D [323];
  assign D[303:293] = \^D [303:293];
  assign D[289] = \^D [289];
  assign D[271:261] = \^D [271:261];
  assign D[258:226] = \^D [258:226];
  assign D[224:204] = \^D [224:204];
  assign D[196:185] = \^D [196:185];
  assign D[165:155] = \^D [165:155];
  assign D[150:149] = \^D [150:149];
  assign Dbg_Reg_En_0_sp_1 = Dbg_Reg_En_0_sn_1;
  system_microblaze_0_0__Data_Flow_gti Data_Flow_I
       (.Clk(Clk),
        .D({\Operand_Select_I/I0 ,Decode_I_n_367,Decode_I_n_368,Decode_I_n_369,Decode_I_n_370,Decode_I_n_371,Decode_I_n_372,Decode_I_n_373,Decode_I_n_374,Decode_I_n_375,Decode_I_n_376,Decode_I_n_377,Decode_I_n_378,Decode_I_n_379,Decode_I_n_380,Decode_I_n_381,Decode_I_n_382,Decode_I_n_383,Decode_I_n_384,Decode_I_n_385,Decode_I_n_386,Decode_I_n_387,Decode_I_n_388,Decode_I_n_389,Decode_I_n_390,Decode_I_n_391,Decode_I_n_392,Decode_I_n_393,Decode_I_n_394,Decode_I_n_395,Decode_I_n_396,Decode_I_n_397}),
        .DI(\^DI ),
        .DI_0(\ALU_I/DI ),
        .E(of_write_imm_reg),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .\EX_Branch_CMP_Op1_reg[0] (ex_op1_neg),
        .\EX_Branch_CMP_Op1_reg[0]_0 (\^D [105]),
        .\EX_Branch_CMP_Op1_reg[0]_1 (\^D [104]),
        .\EX_Branch_CMP_Op1_reg[10] (\^D [95]),
        .\EX_Branch_CMP_Op1_reg[10]_0 (\^D [94]),
        .\EX_Branch_CMP_Op1_reg[12] (\^D [93]),
        .\EX_Branch_CMP_Op1_reg[12]_0 (\^D [92]),
        .\EX_Branch_CMP_Op1_reg[14] (\^D [91]),
        .\EX_Branch_CMP_Op1_reg[14]_0 (\^D [90]),
        .\EX_Branch_CMP_Op1_reg[18] (\^D [113:109]),
        .\EX_Branch_CMP_Op1_reg[24] (\^D [81]),
        .\EX_Branch_CMP_Op1_reg[24]_0 (\^D [80]),
        .\EX_Branch_CMP_Op1_reg[26] (\^D [79]),
        .\EX_Branch_CMP_Op1_reg[26]_0 (\^D [78]),
        .\EX_Branch_CMP_Op1_reg[28] (\^D [77]),
        .\EX_Branch_CMP_Op1_reg[28]_0 (\^D [76]),
        .\EX_Branch_CMP_Op1_reg[2] (\^D [103]),
        .\EX_Branch_CMP_Op1_reg[2]_0 (\^D [102]),
        .\EX_Branch_CMP_Op1_reg[30] (\^D [75]),
        .\EX_Branch_CMP_Op1_reg[30]_0 (\^D [74]),
        .\EX_Branch_CMP_Op1_reg[4] (\^D [101]),
        .\EX_Branch_CMP_Op1_reg[4]_0 (\^D [100]),
        .\EX_Branch_CMP_Op1_reg[6] (\^D [99]),
        .\EX_Branch_CMP_Op1_reg[6]_0 (\^D [98]),
        .\EX_Branch_CMP_Op1_reg[8] (\^D [97]),
        .\EX_Branch_CMP_Op1_reg[8]_0 (\^D [96]),
        .EX_Enable_ALU(EX_Enable_ALU),
        .EX_Fwd(EX_Fwd),
        .\EX_Op1_reg[0] ({ex_op1[0],ex_op1[1],ex_op1[2],ex_op1[3],ex_op1[4],ex_op1[5],ex_op1[6],ex_op1[7],ex_op1[8],ex_op1[9],ex_op1[10],ex_op1[11],ex_op1[12],ex_op1[13],ex_op1[14],ex_op1[15],ex_op1[16],ex_op1[17],ex_op1[18],ex_op1[19],ex_op1[20],ex_op1[21],ex_op1[22],ex_op1[23],ex_op1[24],ex_op1[25],ex_op1[26],ex_op1[27],ex_op1[28],ex_op1[29],ex_op1[30],ex_op1[31]}),
        .\EX_Op1_reg[10] (Decode_I_n_461),
        .\EX_Op1_reg[11] (Decode_I_n_458),
        .\EX_Op1_reg[12] (Decode_I_n_456),
        .\EX_Op1_reg[13] (Decode_I_n_454),
        .\EX_Op1_reg[14] (Decode_I_n_467),
        .\EX_Op1_reg[15] (Decode_I_n_469),
        .\EX_Op1_reg[16] (Decode_I_n_471),
        .\EX_Op1_reg[17] (Decode_I_n_445),
        .\EX_Op1_reg[18] (Decode_I_n_450),
        .\EX_Op1_reg[19] (Decode_I_n_449),
        .\EX_Op1_reg[1] (Decode_I_n_463),
        .\EX_Op1_reg[20] (Decode_I_n_448),
        .\EX_Op1_reg[21] (Decode_I_n_447),
        .\EX_Op1_reg[22] (Decode_I_n_446),
        .\EX_Op1_reg[23] (Decode_I_n_452),
        .\EX_Op1_reg[24] (Data_Flow_I_n_33),
        .\EX_Op1_reg[24]_0 (Decode_I_n_470),
        .\EX_Op1_reg[25] (Decode_I_n_465),
        .\EX_Op1_reg[26] (Decode_I_n_462),
        .\EX_Op1_reg[27] (Decode_I_n_459),
        .\EX_Op1_reg[28] (Data_Flow_I_n_184),
        .\EX_Op1_reg[28]_0 (Decode_I_n_475),
        .\EX_Op1_reg[29] (Decode_I_n_474),
        .\EX_Op1_reg[2] (Decode_I_n_460),
        .\EX_Op1_reg[30] (Decode_I_n_473),
        .\EX_Op1_reg[31] (Decode_I_n_472),
        .\EX_Op1_reg[3] (Decode_I_n_457),
        .\EX_Op1_reg[4] (Decode_I_n_455),
        .\EX_Op1_reg[5] (Decode_I_n_453),
        .\EX_Op1_reg[6] (Decode_I_n_466),
        .\EX_Op1_reg[7] (Decode_I_n_468),
        .\EX_Op1_reg[8] (Decode_I_n_451),
        .\EX_Op1_reg[9] (Decode_I_n_464),
        .\EX_Op2_reg[0] ({\^D [290:259],\^D [242:235],\^D [186:185],\NLW_Data_Flow_I_EX_Op2_reg[0]_UNCONNECTED [45:27],\^D [165:155],\NLW_Data_Flow_I_EX_Op2_reg[0]_UNCONNECTED [15:12],\^D [115],\^D [108:106],\^D [89:82]}),
        .\EX_Op2_reg[0]_0 ({\Operand_Select_I/of_op2 [0],\Operand_Select_I/of_op2 [1],\Operand_Select_I/of_op2 [2],\Operand_Select_I/of_op2 [3],\Operand_Select_I/of_op2 [4],\Operand_Select_I/of_op2 [5],\Operand_Select_I/of_op2 [6],\Operand_Select_I/of_op2 [7],\Operand_Select_I/of_op2 [8],\Operand_Select_I/of_op2 [9],\Operand_Select_I/of_op2 [10],\Operand_Select_I/of_op2 [11],\Operand_Select_I/of_op2 [12],\Operand_Select_I/of_op2 [13],\Operand_Select_I/of_op2 [14],\Operand_Select_I/of_op2 [15],\Operand_Select_I/of_op2 [16],\Operand_Select_I/of_op2 [17],\Operand_Select_I/of_op2 [18],\Operand_Select_I/of_op2 [19],\Operand_Select_I/of_op2 [20],\Operand_Select_I/of_op2 [21],\Operand_Select_I/of_op2 [22],\Operand_Select_I/of_op2 [23],\Operand_Select_I/of_op2 [24],\Operand_Select_I/of_op2 [25],\Operand_Select_I/of_op2 [26],\Operand_Select_I/of_op2 [27],\Operand_Select_I/of_op2 [28],\Operand_Select_I/of_op2 [29],\Operand_Select_I/of_op2 [30],\Operand_Select_I/of_op2 [31]}),
        .\EX_Op2_reg[31] (Data_Flow_I_n_185),
        .\EX_Op3_reg[0] ({ex_op3[0],ex_op3[1],ex_op3[2],ex_op3[3],ex_op3[4],ex_op3[5],ex_op3[6],ex_op3[7],ex_op3[8],ex_op3[9],ex_op3[10],ex_op3[11],ex_op3[12],ex_op3[13],ex_op3[14],ex_op3[15],ex_op3[16],ex_op3[17],ex_op3[18],ex_op3[19],ex_op3[20],ex_op3[21],ex_op3[22],ex_op3[23],ex_op3[24],ex_op3[25],ex_op3[26],ex_op3[27],ex_op3[28],ex_op3[29],ex_op3[30],ex_op3[31]}),
        .\EX_Op3_reg[0]_0 ({\Operand_Select_I/of_op3 [0],\Operand_Select_I/of_op3 [1],\Operand_Select_I/of_op3 [2],\Operand_Select_I/of_op3 [3],\Operand_Select_I/of_op3 [4],\Operand_Select_I/of_op3 [5],\Operand_Select_I/of_op3 [6],\Operand_Select_I/of_op3 [7],\Operand_Select_I/of_op3 [8],\Operand_Select_I/of_op3 [9],\Operand_Select_I/of_op3 [10],\Operand_Select_I/of_op3 [11],\Operand_Select_I/of_op3 [12],\Operand_Select_I/of_op3 [13],\Operand_Select_I/of_op3 [14],\Operand_Select_I/of_op3 [15],\Operand_Select_I/of_op3 [16],\Operand_Select_I/of_op3 [17],\Operand_Select_I/of_op3 [18],\Operand_Select_I/of_op3 [19],\Operand_Select_I/of_op3 [20],\Operand_Select_I/of_op3 [21],\Operand_Select_I/of_op3 [22],\Operand_Select_I/of_op3 [23],\Operand_Select_I/of_op3 [24],\Operand_Select_I/of_op3 [25],\Operand_Select_I/of_op3 [26],\Operand_Select_I/of_op3 [27],\Operand_Select_I/of_op3 [28],\Operand_Select_I/of_op3 [29],\Operand_Select_I/of_op3 [30],\Operand_Select_I/of_op3 [31]}),
        .\EX_Op3_reg[31] (\^of_pause_reg ),
        .GPR_Op1(gpr_op1),
        .GPR_Op2(gpr_op2),
        .GPR_Op3(gpr_op3),
        .I1(\Operand_Select_I/I1 ),
        .I1_1(\exception_registers_I1/I1 ),
        .\LOCKSTEP_Out_reg[3023] (\Use_DBUS.DAXI_Interface_I1_n_14 ),
        .\LOCKSTEP_Out_reg[3024] (\Use_DBUS.DAXI_Interface_I1_n_15 ),
        .\LOCKSTEP_Out_reg[3025] (\Use_DBUS.DAXI_Interface_I1_n_16 ),
        .\LOCKSTEP_Out_reg[3026] (\Use_DBUS.DAXI_Interface_I1_n_17 ),
        .\LOCKSTEP_Out_reg[3027] (\Use_DBUS.DAXI_Interface_I1_n_18 ),
        .\LOCKSTEP_Out_reg[3028] (\Use_DBUS.DAXI_Interface_I1_n_19 ),
        .\LOCKSTEP_Out_reg[3029] (\Use_DBUS.DAXI_Interface_I1_n_20 ),
        .\LOCKSTEP_Out_reg[3030] (\^D [73]),
        .\LOCKSTEP_Out_reg[3030]_0 (\Use_DBUS.DAXI_Interface_I1_n_21 ),
        .\MEM_DataBus_Write_Data_reg[0] ({\^D [258:257],\NLW_Data_Flow_I_MEM_DataBus_Write_Data_reg[0]_UNCONNECTED [25:12],\^D [234:227],\NLW_Data_Flow_I_MEM_DataBus_Write_Data_reg[0]_UNCONNECTED [3:0]}),
        .MEM_Fwd(MEM_Fwd),
        .\No_Long.Reverse_Mem_Accesses.wb_read_lsb_sel_reg[0] ({\Byte_Doublet_Handle_gti_I/wb_read_lsb_sel [0],\Byte_Doublet_Handle_gti_I/wb_read_lsb_sel [1]}),
        .Q({ex_alu_op[0],ex_alu_op[1]}),
        .R(\Data_Flow_Logic_I/R ),
        .SR(\Data_Flow_Logic_I/WB_MEM_Result0 ),
        .\Using_FPGA.Native (\^Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_0 (\^Using_FPGA.Native_2 ),
        .\Using_FPGA.Native_1 (\^Using_FPGA.Native_3 ),
        .\Using_FPGA.Native_10 (\NLW_Data_Flow_I_Using_FPGA.Native_10_UNCONNECTED ),
        .\Using_FPGA.Native_11 (\NLW_Data_Flow_I_Using_FPGA.Native_11_UNCONNECTED ),
        .\Using_FPGA.Native_12 (\NLW_Data_Flow_I_Using_FPGA.Native_12_UNCONNECTED ),
        .\Using_FPGA.Native_13 (\NLW_Data_Flow_I_Using_FPGA.Native_13_UNCONNECTED ),
        .\Using_FPGA.Native_14 (\^Using_FPGA.Native_16 ),
        .\Using_FPGA.Native_15 (\^Using_FPGA.Native_17 ),
        .\Using_FPGA.Native_16 (\^Using_FPGA.Native_18 ),
        .\Using_FPGA.Native_17 (\^Using_FPGA.Native_19 ),
        .\Using_FPGA.Native_18 (\^Using_FPGA.Native_20 ),
        .\Using_FPGA.Native_19 (\^Using_FPGA.Native_21 ),
        .\Using_FPGA.Native_2 (\^Using_FPGA.Native_4 ),
        .\Using_FPGA.Native_20 (\^Using_FPGA.Native_22 ),
        .\Using_FPGA.Native_21 (\^Using_FPGA.Native_23 ),
        .\Using_FPGA.Native_22 (\^Using_FPGA.Native_24 ),
        .\Using_FPGA.Native_23 (\^Using_FPGA.Native_25 ),
        .\Using_FPGA.Native_24 (\^Using_FPGA.Native_26 ),
        .\Using_FPGA.Native_25 (\^Using_FPGA.Native_27 ),
        .\Using_FPGA.Native_26 (\^Using_FPGA.Native_28 ),
        .\Using_FPGA.Native_27 (\^Using_FPGA.Native_29 ),
        .\Using_FPGA.Native_28 (\^Using_FPGA.Native_30 ),
        .\Using_FPGA.Native_29 ({wb_excep_return_addr[0],wb_excep_return_addr[1],wb_excep_return_addr[2],wb_excep_return_addr[3],wb_excep_return_addr[4],wb_excep_return_addr[5],wb_excep_return_addr[6],wb_excep_return_addr[7],wb_excep_return_addr[8],wb_excep_return_addr[9],wb_excep_return_addr[10],wb_excep_return_addr[11],wb_excep_return_addr[12],wb_excep_return_addr[13],wb_excep_return_addr[14],wb_excep_return_addr[15],wb_excep_return_addr[24],wb_excep_return_addr[25],wb_excep_return_addr[26],wb_excep_return_addr[27],wb_excep_return_addr[28],wb_excep_return_addr[29],wb_excep_return_addr[30],wb_excep_return_addr[31]}),
        .\Using_FPGA.Native_3 (\^Using_FPGA.Native_5 ),
        .\Using_FPGA.Native_30 (Data_Flow_I_n_314),
        .\Using_FPGA.Native_31 (\^Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_32 (\^Using_FPGA.Native ),
        .\Using_FPGA.Native_33 (Decode_I_n_266),
        .\Using_FPGA.Native_34 (\^Q [1]),
        .\Using_FPGA.Native_35 ({MEM_PC[0],MEM_PC[1],MEM_PC[2],MEM_PC[3],MEM_PC[4],MEM_PC[5],MEM_PC[6],MEM_PC[7],MEM_PC[8],MEM_PC[9],MEM_PC[10],MEM_PC[11],MEM_PC[12],MEM_PC[13],MEM_PC[14],MEM_PC[15],MEM_PC[16],MEM_PC[17],MEM_PC[18],MEM_PC[19],MEM_PC[20],MEM_PC[21],MEM_PC[22],MEM_PC[23],MEM_PC[24],MEM_PC[25],MEM_PC[26],MEM_PC[27],MEM_PC[28],MEM_PC[29],MEM_PC[30],MEM_PC[31]}),
        .\Using_FPGA.Native_36 (Decode_I_n_443),
        .\Using_FPGA.Native_37 (Decode_I_n_247),
        .\Using_FPGA.Native_38 (\^LOCKSTEP_Master_Out [36]),
        .\Using_FPGA.Native_39 (\^LOCKSTEP_Master_Out [32]),
        .\Using_FPGA.Native_4 (\^Using_FPGA.Native_6 ),
        .\Using_FPGA.Native_5 (\^Using_FPGA.Native_7 ),
        .\Using_FPGA.Native_6 (\NLW_Data_Flow_I_Using_FPGA.Native_6_UNCONNECTED ),
        .\Using_FPGA.Native_7 (\NLW_Data_Flow_I_Using_FPGA.Native_7_UNCONNECTED ),
        .\Using_FPGA.Native_8 (\NLW_Data_Flow_I_Using_FPGA.Native_8_UNCONNECTED ),
        .\Using_FPGA.Native_9 (\NLW_Data_Flow_I_Using_FPGA.Native_9_UNCONNECTED ),
        .\Using_FPGA.Native_i_3__31 ({ex_sext_op[0],ex_sext_op[1]}),
        .WB_GPR_Wr(\^D [114]),
        .\WB_MEM_Result_reg[0] ({wb_mem_result[0],wb_mem_result[1],wb_mem_result[2],wb_mem_result[3],wb_mem_result[4],wb_mem_result[5],wb_mem_result[6],wb_mem_result[7],wb_mem_result[8],wb_mem_result[9],wb_mem_result[10],wb_mem_result[11],wb_mem_result[12],wb_mem_result[13],wb_mem_result[14],wb_mem_result[15],wb_mem_result[24],wb_mem_result[25],wb_mem_result[26],wb_mem_result[27],wb_mem_result[28],wb_mem_result[29],wb_mem_result[30],wb_mem_result[31]}),
        .\data_rd_reg_reg[23] (\Use_Debug_Logic.Master_Core.Debug_Perf_n_39 ),
        .ex_MSR({ex_MSR[28],ex_MSR[29],ex_MSR[30]}),
        .ex_MSR_Load_ALU_C(ex_MSR_Load_ALU_C),
        .ex_MSR_Load_LWX_SWX_C(ex_MSR_Load_LWX_SWX_C),
        .ex_MSR_Load_Shift_C(ex_MSR_Load_Shift_C),
        .ex_byte_access(ex_byte_access),
        .ex_cmp_op(ex_cmp_op),
        .ex_databus_addr({ex_databus_addr[30],ex_databus_addr[31]}),
        .ex_doublet_access(ex_doublet_access),
        .ex_move_to_MSR_instr(ex_move_to_MSR_instr),
        .ex_op1_cmp_equal(ex_op1_cmp_equal),
        .ex_op1_cmp_equal_n(ex_op1_cmp_equal_n),
        .ex_op1_zero(NLW_Data_Flow_I_ex_op1_zero_UNCONNECTED),
        .ex_reverse_mem_access(ex_reverse_mem_access),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_swx_access__0(ex_swx_access__0),
        .ex_unsigned_op(ex_unsigned_op),
        .ex_use_carry(ex_use_carry),
        .ex_valid(ex_valid),
        .\imm_reg_reg[0] ({\Operand_Select_I/imm_reg [0],\Operand_Select_I/imm_reg [1],\Operand_Select_I/imm_reg [2],\Operand_Select_I/imm_reg [3],\Operand_Select_I/imm_reg [4],\Operand_Select_I/imm_reg [5],\Operand_Select_I/imm_reg [6],\Operand_Select_I/imm_reg [7],\Operand_Select_I/imm_reg [8],\Operand_Select_I/imm_reg [9],\Operand_Select_I/imm_reg [10],\Operand_Select_I/imm_reg [11],\Operand_Select_I/imm_reg [12],\Operand_Select_I/imm_reg [13],\Operand_Select_I/imm_reg [14],\Operand_Select_I/imm_reg [15]}),
        .in0(Decode_I_n_441),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .mem_byte_access(mem_byte_access),
        .mem_doublet_access(mem_doublet_access),
        .mem_sel_msr(mem_sel_msr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data),
        .of_op1_sel_spr(of_op1_sel_spr),
        .out(\Shift_Logic_Module_I/I4 ),
        .p_232_in(p_232_in),
        .read_register_MSR_1(read_register_MSR_1),
        .swap_result({swap_result[8],swap_result[9],swap_result[10],swap_result[11],swap_result[12],swap_result[13],swap_result[14],swap_result[15],swap_result[16],swap_result[17],swap_result[18],swap_result[19],swap_result[20],swap_result[21],swap_result[22],swap_result[23],swap_result[24],swap_result[25],swap_result[26],swap_result[27],swap_result[28],swap_result[29],swap_result[30],swap_result[31]}),
        .swap_result_reg(swap_result_reg),
        .sync_reset(sync_reset),
        .wb_byte_access(wb_byte_access),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .wb_gpr_write_dbg_reg({Data_Flow_I_n_186,Data_Flow_I_n_187,Data_Flow_I_n_188,Data_Flow_I_n_189,Data_Flow_I_n_190,Data_Flow_I_n_191,Data_Flow_I_n_192,Data_Flow_I_n_193}),
        .wb_piperun(wb_piperun),
        .wb_read_lsb_1_sel(\Byte_Doublet_Handle_gti_I/wb_read_lsb_1_sel ),
        .wb_read_msb_doublet_sel(\Byte_Doublet_Handle_gti_I/wb_read_msb_doublet_sel ));
  system_microblaze_0_0__Decode_gti Decode_I
       (.Clk(Clk),
        .D({of_pc[0],of_pc[1],of_pc[2],of_pc[3],of_pc[4],of_pc[5],of_pc[6],of_pc[7],of_pc[8],of_pc[9],of_pc[10],of_pc[11],of_pc[12],of_pc[13],of_pc[14],of_pc[15],of_pc[16],of_pc[17],of_pc[18],of_pc[19],of_pc[20],of_pc[21],of_pc[22],of_pc[23],of_pc[24],of_pc[25],of_pc[26],of_pc[27],of_pc[28],of_pc[29],of_pc[30],of_pc[31]}),
        .DI(\^DI ),
        .DI_0(\ALU_I/DI ),
        .DReady(DReady),
        .DWait(NLW_Decode_I_DWait_UNCONNECTED),
        .E(of_write_imm_reg),
        .\EX_ALU_Op_reg[0]_0 ({ex_alu_op[0],ex_alu_op[1]}),
        .EX_ALU_Sel_Logic(EX_ALU_Sel_Logic),
        .EX_Enable_ALU(EX_Enable_ALU),
        .EX_Fwd(EX_Fwd),
        .\EX_Op2_reg[0] ({\Operand_Select_I/imm_reg [0],\Operand_Select_I/imm_reg [1],\Operand_Select_I/imm_reg [2],\Operand_Select_I/imm_reg [3],\Operand_Select_I/imm_reg [4],\Operand_Select_I/imm_reg [5],\Operand_Select_I/imm_reg [6],\Operand_Select_I/imm_reg [7],\Operand_Select_I/imm_reg [8],\Operand_Select_I/imm_reg [9],\Operand_Select_I/imm_reg [10],\Operand_Select_I/imm_reg [11],\Operand_Select_I/imm_reg [12],\Operand_Select_I/imm_reg [13],\Operand_Select_I/imm_reg [14],\Operand_Select_I/imm_reg [15]}),
        .\EX_Sext_Op_reg[0]_0 ({ex_sext_op[0],ex_sext_op[1]}),
        .GPR_Op1(gpr_op1),
        .GPR_Op2(gpr_op2),
        .GPR_Op3(gpr_op3),
        .Hibernate(NLW_Decode_I_Hibernate_UNCONNECTED),
        .I1(\exception_registers_I1/I1 ),
        .I139_out(\PreFetch_Buffer_I1/I139_out ),
        .I1_1(\Operand_Select_I/I1 ),
        .IReady(IReady),
        .LOCKSTEP_Master_Out(NLW_Decode_I_LOCKSTEP_Master_Out_UNCONNECTED[2:0]),
        .\LOCKSTEP_Out_reg[3007] ({wb_excep_return_addr[0],wb_excep_return_addr[1],wb_excep_return_addr[2],wb_excep_return_addr[3],wb_excep_return_addr[4],wb_excep_return_addr[5],wb_excep_return_addr[6],wb_excep_return_addr[7],wb_excep_return_addr[8],wb_excep_return_addr[9],wb_excep_return_addr[10],wb_excep_return_addr[11],wb_excep_return_addr[12],wb_excep_return_addr[13],wb_excep_return_addr[14],wb_excep_return_addr[15],wb_excep_return_addr[24],wb_excep_return_addr[25],wb_excep_return_addr[26],wb_excep_return_addr[27],wb_excep_return_addr[28],wb_excep_return_addr[29],wb_excep_return_addr[30],wb_excep_return_addr[31]}),
        .\LOCKSTEP_Out_reg[3007]_0 (\Use_DBUS.DAXI_Interface_I1_n_37 ),
        .\LOCKSTEP_Out_reg[3007]_1 ({wb_mem_result[0],wb_mem_result[1],wb_mem_result[2],wb_mem_result[3],wb_mem_result[4],wb_mem_result[5],wb_mem_result[6],wb_mem_result[7],wb_mem_result[8],wb_mem_result[9],wb_mem_result[10],wb_mem_result[11],wb_mem_result[12],wb_mem_result[13],wb_mem_result[14],wb_mem_result[15],wb_mem_result[24],wb_mem_result[25],wb_mem_result[26],wb_mem_result[27],wb_mem_result[28],wb_mem_result[29],wb_mem_result[30],wb_mem_result[31]}),
        .\LOCKSTEP_Out_reg[3008] (\Use_DBUS.DAXI_Interface_I1_n_36 ),
        .\LOCKSTEP_Out_reg[3009] (\Use_DBUS.DAXI_Interface_I1_n_35 ),
        .\LOCKSTEP_Out_reg[3010] (\Use_DBUS.DAXI_Interface_I1_n_34 ),
        .\LOCKSTEP_Out_reg[3011] (\Use_DBUS.DAXI_Interface_I1_n_33 ),
        .\LOCKSTEP_Out_reg[3012] (\Use_DBUS.DAXI_Interface_I1_n_32 ),
        .\LOCKSTEP_Out_reg[3013] (\Use_DBUS.DAXI_Interface_I1_n_31 ),
        .\LOCKSTEP_Out_reg[3014] (\Use_DBUS.DAXI_Interface_I1_n_30 ),
        .\LOCKSTEP_Out_reg[3015] (\Use_DBUS.DAXI_Interface_I1_n_29 ),
        .\LOCKSTEP_Out_reg[3016] (\Use_DBUS.DAXI_Interface_I1_n_28 ),
        .\LOCKSTEP_Out_reg[3017] (\Use_DBUS.DAXI_Interface_I1_n_27 ),
        .\LOCKSTEP_Out_reg[3018] (\Use_DBUS.DAXI_Interface_I1_n_26 ),
        .\LOCKSTEP_Out_reg[3019] (\Use_DBUS.DAXI_Interface_I1_n_25 ),
        .\LOCKSTEP_Out_reg[3020] (\Use_DBUS.DAXI_Interface_I1_n_24 ),
        .\LOCKSTEP_Out_reg[3021] (\Use_DBUS.DAXI_Interface_I1_n_23 ),
        .\LOCKSTEP_Out_reg[3022] (\Use_DBUS.DAXI_Interface_I1_n_22 ),
        .\MEM_DataBus_Addr_reg[0]_0 ({\^D [290:259],\NLW_Decode_I_MEM_DataBus_Addr_reg[0]_0_UNCONNECTED [15],\^D [187],\^D [150:149],\^D [115],\^D [108:106],\^D [89:82]}),
        .\MEM_DataBus_Byte_Enable_reg[0] (Data_Flow_I_n_185),
        .\MEM_DataBus_Byte_Enable_reg[0]_0 (Data_Flow_I_n_314),
        .MEM_DataBus_Read(NLW_Decode_I_MEM_DataBus_Read_UNCONNECTED),
        .MEM_DataBus_Ready(MEM_DataBus_Ready),
        .\MEM_DataBus_Write_Data_reg[0] ({ex_op3[0],ex_op3[1],ex_op3[2],ex_op3[3],ex_op3[4],ex_op3[5],ex_op3[6],ex_op3[7],ex_op3[8],ex_op3[9],ex_op3[10],ex_op3[11],ex_op3[12],ex_op3[13],ex_op3[14],ex_op3[15],ex_op3[16],ex_op3[17],ex_op3[18],ex_op3[19],ex_op3[20],ex_op3[21],ex_op3[22],ex_op3[23],ex_op3[24],ex_op3[25],ex_op3[26],ex_op3[27],ex_op3[28],ex_op3[29],ex_op3[30],ex_op3[31]}),
        .MEM_DataBus_Write_reg_0(Decode_I_n_427),
        .MEM_DataBus_Write_reg_1(Decode_I_n_428),
        .MEM_DataBus_Write_reg_2(Decode_I_n_429),
        .MEM_Fwd(MEM_Fwd),
        .M_AXI_DP_ARREADY(M_AXI_DP_ARREADY),
        .M_AXI_DP_AWREADY(M_AXI_DP_AWREADY),
        .M_AXI_DP_BVALID(M_AXI_DP_BVALID),
        .M_AXI_DP_BVALID_0(Decode_I_n_426),
        .M_AXI_DP_RVALID(M_AXI_DP_RVALID),
        .M_AXI_DP_WREADY(M_AXI_DP_WREADY),
        .Pause(NLW_Decode_I_Pause_UNCONNECTED),
        .Pause_Ack(NLW_Decode_I_Pause_Ack_UNCONNECTED),
        .\Performance_Debug_Control.dbg_state_nohalt_reg ({\NLW_Decode_I_Performance_Debug_Control.dbg_state_nohalt_reg_UNCONNECTED [161],\^D [324:323],\NLW_Decode_I_Performance_Debug_Control.dbg_state_nohalt_reg_UNCONNECTED [158:140],\^D [303:293],\NLW_Decode_I_Performance_Debug_Control.dbg_state_nohalt_reg_UNCONNECTED [128:127],\^D [258:243],\^D [234:227],\^D [224:204],\NLW_Decode_I_Performance_Debug_Control.dbg_state_nohalt_reg_UNCONNECTED [81:75],\^D [196:188],\NLW_Decode_I_Performance_Debug_Control.dbg_state_nohalt_reg_UNCONNECTED [65:33],\^D [114:109],\^D [105:90],\^D [81:73],\NLW_Decode_I_Performance_Debug_Control.dbg_state_nohalt_reg_UNCONNECTED [1],\^D [71]}),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg (Decode_I_n_442),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_42 ),
        .\Performance_Debug_Control.ex_brki_hit_reg (\Use_Debug_Logic.Master_Core.Debug_Perf_n_58 ),
        .Q({\^Q [1],NLW_Decode_I_Q_UNCONNECTED[0]}),
        .R(\Data_Flow_Logic_I/R ),
        .Reset_Mode(NLW_Decode_I_Reset_Mode_UNCONNECTED[0:1]),
        .SR(\Data_Flow_Logic_I/WB_MEM_Result0 ),
        .SRI(SRI),
        .Scan_En(NLW_Decode_I_Scan_En_UNCONNECTED),
        .Scan_Reset(NLW_Decode_I_Scan_Reset_UNCONNECTED),
        .Scan_Reset_Sel(NLW_Decode_I_Scan_Reset_Sel_UNCONNECTED),
        .\Serial_Dbg_Intf.control_reg_reg[8] (Decode_I_n_433),
        .Sleep(\^Sleep ),
        .Sleep_Out(Sleep_Out),
        .Suspend(NLW_Decode_I_Suspend_UNCONNECTED),
        .\Using_FPGA.Native (if_sel_input),
        .\Using_FPGA.Native_0 (\^Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\^Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_10 (Decode_I_n_452),
        .\Using_FPGA.Native_11 (Decode_I_n_453),
        .\Using_FPGA.Native_12 (Decode_I_n_454),
        .\Using_FPGA.Native_13 (Decode_I_n_455),
        .\Using_FPGA.Native_14 (Decode_I_n_456),
        .\Using_FPGA.Native_15 (Decode_I_n_457),
        .\Using_FPGA.Native_16 (Decode_I_n_458),
        .\Using_FPGA.Native_17 (Decode_I_n_459),
        .\Using_FPGA.Native_18 (Decode_I_n_460),
        .\Using_FPGA.Native_19 (Decode_I_n_461),
        .\Using_FPGA.Native_2 (Decode_I_n_444),
        .\Using_FPGA.Native_20 (Decode_I_n_462),
        .\Using_FPGA.Native_21 (Decode_I_n_463),
        .\Using_FPGA.Native_22 (Decode_I_n_464),
        .\Using_FPGA.Native_23 (Decode_I_n_465),
        .\Using_FPGA.Native_24 (Decode_I_n_466),
        .\Using_FPGA.Native_25 (Decode_I_n_467),
        .\Using_FPGA.Native_26 (Decode_I_n_468),
        .\Using_FPGA.Native_27 (Decode_I_n_469),
        .\Using_FPGA.Native_28 (Decode_I_n_470),
        .\Using_FPGA.Native_29 (Decode_I_n_471),
        .\Using_FPGA.Native_3 (Decode_I_n_445),
        .\Using_FPGA.Native_30 (Decode_I_n_472),
        .\Using_FPGA.Native_31 (Decode_I_n_473),
        .\Using_FPGA.Native_32 (Decode_I_n_474),
        .\Using_FPGA.Native_33 (Decode_I_n_475),
        .\Using_FPGA.Native_34 (Decode_I_n_478),
        .\Using_FPGA.Native_35 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_59 ),
        .\Using_FPGA.Native_36 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_50 ),
        .\Using_FPGA.Native_37 (ex_op1_neg),
        .\Using_FPGA.Native_38 (Data_Flow_I_n_184),
        .\Using_FPGA.Native_39 (\^LOCKSTEP_Master_Out [36]),
        .\Using_FPGA.Native_4 (Decode_I_n_446),
        .\Using_FPGA.Native_40 (\^LOCKSTEP_Master_Out [32]),
        .\Using_FPGA.Native_41 ({ex_op1[0],ex_op1[1],ex_op1[2],ex_op1[3],ex_op1[4],ex_op1[5],ex_op1[6],ex_op1[7],ex_op1[8],ex_op1[9],ex_op1[10],ex_op1[11],ex_op1[12],ex_op1[13],ex_op1[14],ex_op1[15],ex_op1[16],ex_op1[17],ex_op1[18],ex_op1[19],ex_op1[20],ex_op1[21],ex_op1[22],ex_op1[23],ex_op1[24],ex_op1[25],ex_op1[26],ex_op1[27],ex_op1[28],ex_op1[29],ex_op1[30],ex_op1[31]}),
        .\Using_FPGA.Native_42 (\^LOCKSTEP_Master_Out [38]),
        .\Using_FPGA.Native_43 (Data_Flow_I_n_33),
        .\Using_FPGA.Native_5 (Decode_I_n_447),
        .\Using_FPGA.Native_6 (Decode_I_n_448),
        .\Using_FPGA.Native_7 (Decode_I_n_449),
        .\Using_FPGA.Native_8 (Decode_I_n_450),
        .\Using_FPGA.Native_9 (Decode_I_n_451),
        .Y(ib_data),
        .active_access(active_access),
        .active_access_d1(active_access_d1),
        .active_access_reg(\Use_Debug_Logic.Master_Core.Debug_Perf_n_38 ),
        .\data_rd_reg_reg[10] (\^Using_FPGA.Native_21 ),
        .\data_rd_reg_reg[11] (\^Using_FPGA.Native_20 ),
        .\data_rd_reg_reg[12] (\^Using_FPGA.Native_19 ),
        .\data_rd_reg_reg[13] (\^Using_FPGA.Native_18 ),
        .\data_rd_reg_reg[14] (\^Using_FPGA.Native_17 ),
        .\data_rd_reg_reg[15] (\^Using_FPGA.Native_16 ),
        .\data_rd_reg_reg[1] (\^Using_FPGA.Native_30 ),
        .\data_rd_reg_reg[24] (\^Using_FPGA.Native_7 ),
        .\data_rd_reg_reg[25] (\^Using_FPGA.Native_6 ),
        .\data_rd_reg_reg[26] (\^Using_FPGA.Native_5 ),
        .\data_rd_reg_reg[27] (\^Using_FPGA.Native_4 ),
        .\data_rd_reg_reg[28] (\^Using_FPGA.Native_3 ),
        .\data_rd_reg_reg[29] (\^Using_FPGA.Native_2 ),
        .\data_rd_reg_reg[2] (\^Using_FPGA.Native_29 ),
        .\data_rd_reg_reg[30] (\^Using_FPGA.Native_1 ),
        .\data_rd_reg_reg[3] (\^Using_FPGA.Native_28 ),
        .\data_rd_reg_reg[4] (\^Using_FPGA.Native_27 ),
        .\data_rd_reg_reg[5] (\^Using_FPGA.Native_26 ),
        .\data_rd_reg_reg[6] (\^Using_FPGA.Native_25 ),
        .\data_rd_reg_reg[7] (\^Using_FPGA.Native_24 ),
        .\data_rd_reg_reg[8] (\^Using_FPGA.Native_23 ),
        .\data_rd_reg_reg[9] (\^Using_FPGA.Native_22 ),
        .dbg_clean_stop(dbg_clean_stop),
        .dbg_halt_reset_mode_reg(Decode_I_n_430),
        .dbg_pause(NLW_Decode_I_dbg_pause_UNCONNECTED),
        .dbg_stop_i(dbg_stop_i),
        .dbg_stop_instr_fetch_nohalt0__0(dbg_stop_instr_fetch_nohalt0__0),
        .ex_Exception_Taken(ex_Exception_Taken),
        .ex_MSR({ex_MSR[28],ex_MSR[29],ex_MSR[30]}),
        .ex_MSR_Load_LWX_SWX_C(ex_MSR_Load_LWX_SWX_C),
        .ex_MSR_Set_SW_BIP(ex_MSR_Set_SW_BIP),
        .ex_byte_access(ex_byte_access),
        .ex_cmp_op(ex_cmp_op),
        .ex_databus_addr({ex_databus_addr[30],ex_databus_addr[31]}),
        .ex_doublet_access(ex_doublet_access),
        .ex_exception_no_load_store_mask(ex_exception_no_load_store_mask),
        .ex_is_load_instr_s(NLW_Decode_I_ex_is_load_instr_s_UNCONNECTED),
        .ex_load_alu_carry_reg_0(Decode_I_n_247),
        .ex_load_shift_carry(ex_load_shift_carry),
        .ex_move_to_MSR_instr(ex_move_to_MSR_instr),
        .ex_op1_cmp_equal(ex_op1_cmp_equal),
        .ex_op1_cmp_equal_n(ex_op1_cmp_equal_n),
        .ex_op1_zero(NLW_Decode_I_ex_op1_zero_UNCONNECTED),
        .ex_reverse_mem_access(ex_reverse_mem_access),
        .ex_sel_alu_i_reg_0({\Operand_Select_I/of_op2 [0],\Operand_Select_I/of_op2 [1],\Operand_Select_I/of_op2 [2],\Operand_Select_I/of_op2 [3],\Operand_Select_I/of_op2 [4],\Operand_Select_I/of_op2 [5],\Operand_Select_I/of_op2 [6],\Operand_Select_I/of_op2 [7],\Operand_Select_I/of_op2 [8],\Operand_Select_I/of_op2 [9],\Operand_Select_I/of_op2 [10],\Operand_Select_I/of_op2 [11],\Operand_Select_I/of_op2 [12],\Operand_Select_I/of_op2 [13],\Operand_Select_I/of_op2 [14],\Operand_Select_I/of_op2 [15],\Operand_Select_I/of_op2 [16],\Operand_Select_I/of_op2 [17],\Operand_Select_I/of_op2 [18],\Operand_Select_I/of_op2 [19],\Operand_Select_I/of_op2 [20],\Operand_Select_I/of_op2 [21],\Operand_Select_I/of_op2 [22],\Operand_Select_I/of_op2 [23],\Operand_Select_I/of_op2 [24],\Operand_Select_I/of_op2 [25],\Operand_Select_I/of_op2 [26],\Operand_Select_I/of_op2 [27],\Operand_Select_I/of_op2 [28],\Operand_Select_I/of_op2 [29],\Operand_Select_I/of_op2 [30],\Operand_Select_I/of_op2 [31]}),
        .ex_sel_alu_i_reg_1({\Operand_Select_I/of_op3 [0],\Operand_Select_I/of_op3 [1],\Operand_Select_I/of_op3 [2],\Operand_Select_I/of_op3 [3],\Operand_Select_I/of_op3 [4],\Operand_Select_I/of_op3 [5],\Operand_Select_I/of_op3 [6],\Operand_Select_I/of_op3 [7],\Operand_Select_I/of_op3 [8],\Operand_Select_I/of_op3 [9],\Operand_Select_I/of_op3 [10],\Operand_Select_I/of_op3 [11],\Operand_Select_I/of_op3 [12],\Operand_Select_I/of_op3 [13],\Operand_Select_I/of_op3 [14],\Operand_Select_I/of_op3 [15],\Operand_Select_I/of_op3 [16],\Operand_Select_I/of_op3 [17],\Operand_Select_I/of_op3 [18],\Operand_Select_I/of_op3 [19],\Operand_Select_I/of_op3 [20],\Operand_Select_I/of_op3 [21],\Operand_Select_I/of_op3 [22],\Operand_Select_I/of_op3 [23],\Operand_Select_I/of_op3 [24],\Operand_Select_I/of_op3 [25],\Operand_Select_I/of_op3 [26],\Operand_Select_I/of_op3 [27],\Operand_Select_I/of_op3 [28],\Operand_Select_I/of_op3 [29],\Operand_Select_I/of_op3 [30],\Operand_Select_I/of_op3 [31]}),
        .ex_sel_alu_i_reg_2({\Operand_Select_I/I0 ,Decode_I_n_367,Decode_I_n_368,Decode_I_n_369,Decode_I_n_370,Decode_I_n_371,Decode_I_n_372,Decode_I_n_373,Decode_I_n_374,Decode_I_n_375,Decode_I_n_376,Decode_I_n_377,Decode_I_n_378,Decode_I_n_379,Decode_I_n_380,Decode_I_n_381,Decode_I_n_382,Decode_I_n_383,Decode_I_n_384,Decode_I_n_385,Decode_I_n_386,Decode_I_n_387,Decode_I_n_388,Decode_I_n_389,Decode_I_n_390,Decode_I_n_391,Decode_I_n_392,Decode_I_n_393,Decode_I_n_394,Decode_I_n_395,Decode_I_n_396,Decode_I_n_397}),
        .ex_set_bip_reg_0(Decode_I_n_236),
        .ex_set_bip_reg_1(Decode_I_n_266),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .ex_swx_access__0(ex_swx_access__0),
        .ex_unsigned_op(ex_unsigned_op),
        .ex_use_carry(ex_use_carry),
        .ex_valid(ex_valid),
        .exception_reg(instr_rd_reg),
        .if_fetch_in_progress_reg_0(\Use_Debug_Logic.Master_Core.Debug_Perf_n_39 ),
        .in(\PreFetch_Buffer_I1/if_predecode_reg0 ),
        .in0(Decode_I_n_441),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .mb_halted_1_reg(\Use_Debug_Logic.Master_Core.Debug_Perf_n_43 ),
        .mem_Exception_Taken(mem_Exception_Taken),
        .mem_byte_access(mem_byte_access),
        .mem_databus_access(mem_databus_access),
        .mem_databus_write(NLW_Decode_I_mem_databus_write_UNCONNECTED),
        .mem_doublet_access(mem_doublet_access),
        .\mem_pc_i_reg[0] ({MEM_PC[0],MEM_PC[1],MEM_PC[2],MEM_PC[3],MEM_PC[4],MEM_PC[5],MEM_PC[6],MEM_PC[7],MEM_PC[8],MEM_PC[9],MEM_PC[10],MEM_PC[11],MEM_PC[12],MEM_PC[13],MEM_PC[14],MEM_PC[15],MEM_PC[16],MEM_PC[17],MEM_PC[18],MEM_PC[19],MEM_PC[20],MEM_PC[21],MEM_PC[22],MEM_PC[23],MEM_PC[24],MEM_PC[25],MEM_PC[26],MEM_PC[27],MEM_PC[28],MEM_PC[29],MEM_PC[30],MEM_PC[31]}),
        .\mem_pc_i_reg[0]_0 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_44 ),
        .mem_sel_msr(mem_sel_msr),
        .no_sleeping(NLW_Decode_I_no_sleeping_UNCONNECTED),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data),
        .of_op1_sel_spr(of_op1_sel_spr),
        .of_pause_reg_0(\^of_pause_reg ),
        .out(\Shift_Logic_Module_I/I4 ),
        .p_232_in(p_232_in),
        .read_register_MSR_1(read_register_MSR_1),
        .swap_result({swap_result[8],swap_result[9],swap_result[10],swap_result[11],swap_result[12],swap_result[13],swap_result[14],swap_result[15],swap_result[16],swap_result[17],swap_result[18],swap_result[19],swap_result[20],swap_result[21],swap_result[22],swap_result[23],swap_result[24],swap_result[25],swap_result[26],swap_result[27],swap_result[28],swap_result[29],swap_result[30],swap_result[31]}),
        .swap_result_reg(swap_result_reg),
        .sync_reset(sync_reset),
        .wakeup_i(wakeup_i),
        .wb_Halted(wb_Halted),
        .wb_byte_access(wb_byte_access),
        .wb_databus_steered_read_data({wb_databus_steered_read_data[24],wb_databus_steered_read_data[25],wb_databus_steered_read_data[26],wb_databus_steered_read_data[27],wb_databus_steered_read_data[28],wb_databus_steered_read_data[29],wb_databus_steered_read_data[30],wb_databus_steered_read_data[31]}),
        .wb_exception_i_reg_0(Decode_I_n_443),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .wb_gpr_write_dbg_reg_0({Decode_I_n_399,Decode_I_n_400,Decode_I_n_401,Decode_I_n_402,Decode_I_n_403,Decode_I_n_404,Decode_I_n_405,Decode_I_n_406,Decode_I_n_407,Decode_I_n_408,Decode_I_n_409,Decode_I_n_410,Decode_I_n_411,Decode_I_n_412,Decode_I_n_413,Decode_I_n_414,Decode_I_n_415,Decode_I_n_416,Decode_I_n_417,Decode_I_n_418,Decode_I_n_419,Decode_I_n_420,Decode_I_n_421,Decode_I_n_422}),
        .wb_pc_valid(wb_pc_valid),
        .wb_piperun(wb_piperun),
        .wb_read_imm_reg(wb_read_imm_reg),
        .wb_read_imm_reg_1(wb_read_imm_reg_1),
        .wb_valid_reg_0(Decode_I_n_259));
  system_microblaze_0_0__DAXI_interface \Use_DBUS.DAXI_Interface_I1 
       (.Clk(Clk),
        .D({\^D [187],\^D [150:149]}),
        .DReady(DReady),
        .\LOCKSTEP_Out_reg[3031] ({\Byte_Doublet_Handle_gti_I/wb_read_lsb_sel [0],\Byte_Doublet_Handle_gti_I/wb_read_lsb_sel [1]}),
        .MEM_DataBus_Ready(MEM_DataBus_Ready),
        .M_AXI_DP_ARVALID_i_reg_0(Decode_I_n_429),
        .M_AXI_DP_AWVALID_i_reg_0(Decode_I_n_428),
        .M_AXI_DP_BVALID(M_AXI_DP_BVALID),
        .M_AXI_DP_RDATA(M_AXI_DP_RDATA),
        .M_AXI_DP_RVALID(M_AXI_DP_RVALID),
        .M_AXI_DP_WVALID_i_reg_0(Decode_I_n_427),
        .\No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg (\Use_DBUS.DAXI_Interface_I1_n_14 ),
        .\No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_0 (\Use_DBUS.DAXI_Interface_I1_n_15 ),
        .\No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_1 (\Use_DBUS.DAXI_Interface_I1_n_16 ),
        .\No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_2 (\Use_DBUS.DAXI_Interface_I1_n_17 ),
        .\No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_3 (\Use_DBUS.DAXI_Interface_I1_n_18 ),
        .\No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_4 (\Use_DBUS.DAXI_Interface_I1_n_19 ),
        .\No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_5 (\Use_DBUS.DAXI_Interface_I1_n_20 ),
        .\No_Long.Reverse_Mem_Accesses.wb_read_msb_doublet_sel_reg_6 (\Use_DBUS.DAXI_Interface_I1_n_21 ),
        .Q({wb_dlmb_valid_read_data[0],wb_dlmb_valid_read_data[1],wb_dlmb_valid_read_data[2],wb_dlmb_valid_read_data[3],wb_dlmb_valid_read_data[4],wb_dlmb_valid_read_data[5],wb_dlmb_valid_read_data[6],wb_dlmb_valid_read_data[7],wb_dlmb_valid_read_data[8],wb_dlmb_valid_read_data[9],wb_dlmb_valid_read_data[10],wb_dlmb_valid_read_data[11],wb_dlmb_valid_read_data[12],wb_dlmb_valid_read_data[13],wb_dlmb_valid_read_data[14],wb_dlmb_valid_read_data[15],wb_dlmb_valid_read_data[16],wb_dlmb_valid_read_data[17],wb_dlmb_valid_read_data[18],wb_dlmb_valid_read_data[19],wb_dlmb_valid_read_data[20],wb_dlmb_valid_read_data[21],wb_dlmb_valid_read_data[22],wb_dlmb_valid_read_data[23],wb_dlmb_valid_read_data[24],wb_dlmb_valid_read_data[25],wb_dlmb_valid_read_data[26],wb_dlmb_valid_read_data[27],wb_dlmb_valid_read_data[28],wb_dlmb_valid_read_data[29],wb_dlmb_valid_read_data[30],wb_dlmb_valid_read_data[31]}),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[16] (\Use_DBUS.DAXI_Interface_I1_n_29 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[17] (\Use_DBUS.DAXI_Interface_I1_n_28 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[18] (\Use_DBUS.DAXI_Interface_I1_n_27 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[19] (\Use_DBUS.DAXI_Interface_I1_n_26 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[20] (\Use_DBUS.DAXI_Interface_I1_n_25 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[21] (\Use_DBUS.DAXI_Interface_I1_n_24 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[22] (\Use_DBUS.DAXI_Interface_I1_n_23 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[23] (\Use_DBUS.DAXI_Interface_I1_n_22 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[24] (\Use_DBUS.DAXI_Interface_I1_n_37 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[25] (\Use_DBUS.DAXI_Interface_I1_n_36 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[26] (\Use_DBUS.DAXI_Interface_I1_n_35 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[27] (\Use_DBUS.DAXI_Interface_I1_n_34 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[28] (\Use_DBUS.DAXI_Interface_I1_n_33 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[29] (\Use_DBUS.DAXI_Interface_I1_n_32 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[30] (\Use_DBUS.DAXI_Interface_I1_n_31 ),
        .\Use_DLMB.wb_dlmb_valid_read_data_reg[31] (\Use_DBUS.DAXI_Interface_I1_n_30 ),
        .active_access(active_access),
        .active_access_d1(active_access_d1),
        .active_access_reg_0(Decode_I_n_426),
        .sync_reset(sync_reset),
        .wb_databus_steered_read_data({wb_databus_steered_read_data[24],wb_databus_steered_read_data[25],wb_databus_steered_read_data[26],wb_databus_steered_read_data[27],wb_databus_steered_read_data[28],wb_databus_steered_read_data[29],wb_databus_steered_read_data[30],wb_databus_steered_read_data[31]}),
        .wb_read_lsb_1_sel(\Byte_Doublet_Handle_gti_I/wb_read_lsb_1_sel ),
        .wb_read_msb_doublet_sel(\Byte_Doublet_Handle_gti_I/wb_read_msb_doublet_sel ));
  system_microblaze_0_0__MB_AND2B1L \Use_DLMB.Using_Latch_AS_Logic.AND2B1L_I1 
       (.D(\^D [226]),
        .E(\^Using_FPGA.Native ),
        .SRI(SRI));
  LUT2 #(
    .INIT(4'hB)) 
    \Use_DLMB.wb_dlmb_valid_read_data[0]_i_1 
       (.I0(sync_reset),
        .I1(DReady),
        .O(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[0] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[0]),
        .Q(wb_dlmb_valid_read_data[0]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[10] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[10]),
        .Q(wb_dlmb_valid_read_data[10]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[11] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[11]),
        .Q(wb_dlmb_valid_read_data[11]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[12] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[12]),
        .Q(wb_dlmb_valid_read_data[12]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[13] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[13]),
        .Q(wb_dlmb_valid_read_data[13]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[14] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[14]),
        .Q(wb_dlmb_valid_read_data[14]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[15] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[15]),
        .Q(wb_dlmb_valid_read_data[15]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[16] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[16]),
        .Q(wb_dlmb_valid_read_data[16]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[17] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[17]),
        .Q(wb_dlmb_valid_read_data[17]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[18] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[18]),
        .Q(wb_dlmb_valid_read_data[18]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[19] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[19]),
        .Q(wb_dlmb_valid_read_data[19]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[1]),
        .Q(wb_dlmb_valid_read_data[1]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[20] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[20]),
        .Q(wb_dlmb_valid_read_data[20]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[21] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[21]),
        .Q(wb_dlmb_valid_read_data[21]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[22] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[22]),
        .Q(wb_dlmb_valid_read_data[22]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[23] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[23]),
        .Q(wb_dlmb_valid_read_data[23]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[24] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[24]),
        .Q(wb_dlmb_valid_read_data[24]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[25] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[25]),
        .Q(wb_dlmb_valid_read_data[25]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[26] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[26]),
        .Q(wb_dlmb_valid_read_data[26]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[27] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[27]),
        .Q(wb_dlmb_valid_read_data[27]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[28] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[28]),
        .Q(wb_dlmb_valid_read_data[28]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[29] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[29]),
        .Q(wb_dlmb_valid_read_data[29]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[2]),
        .Q(wb_dlmb_valid_read_data[2]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[30] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[30]),
        .Q(wb_dlmb_valid_read_data[30]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[31] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[31]),
        .Q(wb_dlmb_valid_read_data[31]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[3] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[3]),
        .Q(wb_dlmb_valid_read_data[3]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[4] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[4]),
        .Q(wb_dlmb_valid_read_data[4]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[5] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[5]),
        .Q(wb_dlmb_valid_read_data[5]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[6] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[6]),
        .Q(wb_dlmb_valid_read_data[6]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[7] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[7]),
        .Q(wb_dlmb_valid_read_data[7]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[8] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[8]),
        .Q(wb_dlmb_valid_read_data[8]),
        .R(wb_dlmb_valid_read_data0));
  FDRE #(
    .INIT(1'b0)) 
    \Use_DLMB.wb_dlmb_valid_read_data_reg[9] 
       (.C(Clk),
        .CE(1'b1),
        .D(Data_Read[9]),
        .Q(wb_dlmb_valid_read_data[9]),
        .R(wb_dlmb_valid_read_data0));
  system_microblaze_0_0__Debug \Use_Debug_Logic.Master_Core.Debug_Perf 
       (.Address(of_pc),
        .Clk(Clk),
        .Config_Reg_En(Config_Reg_En),
        .D({\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_D_UNCONNECTED [2],\^D [324],\^D [71]}),
        .Data_Read_Reg_En(Data_Read_Reg_En),
        .Dbg_Capture(Dbg_Capture),
        .Dbg_Clk(Dbg_Clk),
        .Dbg_Reg_En(Dbg_Reg_En),
        .Dbg_Reg_En_0_sp_1(Dbg_Reg_En_0_sn_1),
        .Dbg_Shift(Dbg_Shift),
        .Dbg_Stop(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Stop_UNCONNECTED ),
        .Dbg_TDI(Dbg_TDI),
        .Dbg_TDO(Dbg_TDO),
        .Dbg_Trig_Ack_In(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_Ack_In_UNCONNECTED [1:0]),
        .Dbg_Trig_Ack_Out(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_Ack_Out_UNCONNECTED [1:0]),
        .Dbg_Trig_In(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_In_UNCONNECTED [1:0]),
        .Dbg_Trig_Out({\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Dbg_Trig_Out_UNCONNECTED [1],Dbg_Trig_Out[0]}),
        .Dbg_Update(Dbg_Update),
        .E(\^Using_FPGA.Native ),
        .LOCKSTEP_Master_Out({\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_LOCKSTEP_Master_Out_UNCONNECTED [37],\^LOCKSTEP_Master_Out [38],\^LOCKSTEP_Master_Out [36],\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_LOCKSTEP_Master_Out_UNCONNECTED [34:33],\^LOCKSTEP_Master_Out [32:0]}),
        .Pause(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Pause_UNCONNECTED ),
        .\Performance_Debug_Control.dbg_freeze_nohalt_reg_0 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_44 ),
        .\Performance_Debug_Control.dbg_state_nohalt_reg_0 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_43 ),
        .\Performance_Debug_Control.dbg_stop_if_delay_i_reg_0 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_50 ),
        .\Performance_Debug_Control.dbg_stop_if_delay_i_reg_1 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_59 ),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_0 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_39 ),
        .\Performance_Debug_Control.dbg_stop_instr_fetch_nohalt_reg_1 (Decode_I_n_430),
        .\Performance_Debug_Control.ex_brki_hit_reg_0 (Decode_I_n_433),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0 (\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0_UNCONNECTED [0]),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 (Decode_I_n_444),
        .\Performance_Debug_Control.m0_dbg_hit_reg[0]_0 (\^Using_FPGA.Native_0 ),
        .Q(\Use_Debug_Logic.Master_Core.Debug_Perf_n_58 ),
        .Reset_Mode(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Reset_Mode_UNCONNECTED [0:1]),
        .Scan_En(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Scan_En_UNCONNECTED ),
        .Scan_Reset(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Scan_Reset_UNCONNECTED ),
        .Scan_Reset_Sel(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_Scan_Reset_Sel_UNCONNECTED ),
        .\Serial_Dbg_Intf.force_stop_cmd_i_reg_0 (\Use_Debug_Logic.Master_Core.Debug_Perf_n_38 ),
        .\Serial_Dbg_Intf.status_reg_reg[22]_0 (mem_databus_access),
        .Sleep(\^Sleep ),
        .Sleep_Out(Sleep_Out),
        .Status_Reg_En(Status_Reg_En),
        .\Using_FPGA.Native_i_2__20 (Decode_I_n_247),
        .\Using_LWX_SWX_instr.ex_reservation_i_2 (Decode_I_n_236),
        .\data_rd_reg_reg[0]_0 ({Decode_I_n_399,Decode_I_n_400,Decode_I_n_401,Decode_I_n_402,Decode_I_n_403,Decode_I_n_404,Decode_I_n_405,Decode_I_n_406,Decode_I_n_407,Decode_I_n_408,Decode_I_n_409,Decode_I_n_410,Decode_I_n_411,Decode_I_n_412,Decode_I_n_413,Decode_I_n_414,Data_Flow_I_n_186,Data_Flow_I_n_187,Data_Flow_I_n_188,Data_Flow_I_n_189,Data_Flow_I_n_190,Data_Flow_I_n_191,Data_Flow_I_n_192,Data_Flow_I_n_193,Decode_I_n_415,Decode_I_n_416,Decode_I_n_417,Decode_I_n_418,Decode_I_n_419,Decode_I_n_420,Decode_I_n_421,Decode_I_n_422}),
        .dbg_clean_stop(dbg_clean_stop),
        .dbg_halt_reset_mode_reg_0(\Use_Debug_Logic.Master_Core.Debug_Perf_n_42 ),
        .dbg_pause(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_dbg_pause_UNCONNECTED ),
        .dbg_stop_i(dbg_stop_i),
        .dbg_stop_instr_fetch_nohalt0__0(dbg_stop_instr_fetch_nohalt0__0),
        .ex_Exception_Taken(ex_Exception_Taken),
        .ex_MSR_Load_ALU_C(ex_MSR_Load_ALU_C),
        .ex_MSR_Load_Shift_C(ex_MSR_Load_Shift_C),
        .ex_MSR_Set_SW_BIP(ex_MSR_Set_SW_BIP),
        .ex_exception_no_load_store_mask(ex_exception_no_load_store_mask),
        .ex_is_load_instr_s(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_ex_is_load_instr_s_UNCONNECTED ),
        .ex_load_shift_carry(ex_load_shift_carry),
        .ex_valid(ex_valid),
        .exception_reg_0(instr_rd_reg),
        .exception_reg_1(Decode_I_n_442),
        .executing_reg_0(Decode_I_n_259),
        .mem_Exception_Taken(mem_Exception_Taken),
        .no_sleeping(\NLW_Use_Debug_Logic.Master_Core.Debug_Perf_no_sleeping_UNCONNECTED ),
        .p_232_in(p_232_in),
        .read_register_MSR_1(read_register_MSR_1),
        .single_Step_N_reg_0(\^of_pause_reg ),
        .sync_reset(sync_reset),
        .wakeup_i(wakeup_i),
        .wb_Halted(wb_Halted),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .wb_pc_valid(wb_pc_valid),
        .wb_read_imm_reg(wb_read_imm_reg),
        .wb_read_imm_reg_1(wb_read_imm_reg_1));
  system_microblaze_0_0__instr_mux instr_mux_I
       (.I139_out(\PreFetch_Buffer_I1/I139_out ),
        .Instr(Instr),
        .LOCKSTEP_Master_Out({\^LOCKSTEP_Master_Out [38],\^LOCKSTEP_Master_Out [31:0]}),
        .\Using_FPGA.Native (Decode_I_n_478),
        .\Using_FPGA.Native_0 (if_sel_input),
        .Y(ib_data),
        .in(\PreFetch_Buffer_I1/if_predecode_reg0 ));
endmodule

(* ORIG_REF_NAME = "Operand_Select_gti" *) 
module system_microblaze_0_0__Operand_Select_gti
   (ex_load_alu_carry_reg,
    Q,
    \EX_Op1_reg[30]_0 ,
    \EX_Op1_reg[28]_0 ,
    S,
    \EX_Op2_reg[0]_0 ,
    I0,
    \Using_FPGA.Native ,
    I2,
    in0,
    swap_result,
    swap_result_reg,
    \EX_Op3_reg[0]_0 ,
    \EX_Branch_CMP_Op1_reg[30]_0 ,
    \EX_Branch_CMP_Op1_reg[0]_0 ,
    \Using_FPGA.Native_0 ,
    \imm_reg_reg[0]_0 ,
    of_op1_sel_spr,
    D,
    I1,
    \EX_Op1_reg[1]_0 ,
    \EX_Op1_reg[2]_0 ,
    \EX_Op1_reg[3]_0 ,
    \EX_Op1_reg[4]_0 ,
    \EX_Op1_reg[5]_0 ,
    \EX_Op1_reg[6]_0 ,
    \EX_Op1_reg[7]_0 ,
    \EX_Op1_reg[8]_0 ,
    \EX_Op1_reg[9]_0 ,
    \EX_Op1_reg[10]_0 ,
    \EX_Op1_reg[11]_0 ,
    \EX_Op1_reg[12]_0 ,
    \EX_Op1_reg[13]_0 ,
    \EX_Op1_reg[14]_0 ,
    \EX_Op1_reg[15]_0 ,
    \EX_Op1_reg[16]_0 ,
    \EX_Op1_reg[17]_0 ,
    \EX_Op1_reg[18]_0 ,
    \EX_Op1_reg[19]_0 ,
    \EX_Op1_reg[20]_0 ,
    \EX_Op1_reg[21]_0 ,
    \EX_Op1_reg[22]_0 ,
    \EX_Op1_reg[23]_0 ,
    \EX_Op1_reg[24]_0 ,
    \EX_Op1_reg[25]_0 ,
    \EX_Op1_reg[26]_0 ,
    \EX_Op1_reg[27]_0 ,
    \EX_Op1_reg[28]_1 ,
    \EX_Op1_reg[29]_0 ,
    \EX_Op1_reg[30]_1 ,
    \EX_Op1_reg[31]_0 ,
    p_232_in,
    \Using_FPGA.Native_1 ,
    LO,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    ex_MSR_Load_ALU_C,
    ex_swx_access__0,
    ex_MSR_Load_Shift_C,
    ex_MSR_Load_LWX_SWX_C,
    ex_move_to_MSR_instr,
    ex_MSR,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    ex_valid,
    ex_cmp_op,
    EX_ALU_Sel_Logic,
    ex_byte_access,
    ex_doublet_access,
    \Using_FPGA.Native_i_3__31 ,
    ex_swap_byte_instr,
    ex_reverse_mem_access,
    sync_reset,
    E,
    of_imm_data,
    Clk,
    \EX_Op3_reg[31]_0 ,
    \EX_Op2_reg[0]_1 ,
    \EX_Op3_reg[0]_1 );
  output ex_load_alu_carry_reg;
  output [31:0]Q;
  output \EX_Op1_reg[30]_0 ;
  output \EX_Op1_reg[28]_0 ;
  output S;
  output [31:0]\EX_Op2_reg[0]_0 ;
  output I0;
  output [9:0]\Using_FPGA.Native ;
  output I2;
  output in0;
  output [23:0]swap_result;
  output [0:7]swap_result_reg;
  output [31:0]\EX_Op3_reg[0]_0 ;
  output \EX_Branch_CMP_Op1_reg[30]_0 ;
  output [29:0]\EX_Branch_CMP_Op1_reg[0]_0 ;
  output [1:0]\Using_FPGA.Native_0 ;
  output [15:0]\imm_reg_reg[0]_0 ;
  input of_op1_sel_spr;
  input [31:0]D;
  input I1;
  input \EX_Op1_reg[1]_0 ;
  input \EX_Op1_reg[2]_0 ;
  input \EX_Op1_reg[3]_0 ;
  input \EX_Op1_reg[4]_0 ;
  input \EX_Op1_reg[5]_0 ;
  input \EX_Op1_reg[6]_0 ;
  input \EX_Op1_reg[7]_0 ;
  input \EX_Op1_reg[8]_0 ;
  input \EX_Op1_reg[9]_0 ;
  input \EX_Op1_reg[10]_0 ;
  input \EX_Op1_reg[11]_0 ;
  input \EX_Op1_reg[12]_0 ;
  input \EX_Op1_reg[13]_0 ;
  input \EX_Op1_reg[14]_0 ;
  input \EX_Op1_reg[15]_0 ;
  input \EX_Op1_reg[16]_0 ;
  input \EX_Op1_reg[17]_0 ;
  input \EX_Op1_reg[18]_0 ;
  input \EX_Op1_reg[19]_0 ;
  input \EX_Op1_reg[20]_0 ;
  input \EX_Op1_reg[21]_0 ;
  input \EX_Op1_reg[22]_0 ;
  input \EX_Op1_reg[23]_0 ;
  input \EX_Op1_reg[24]_0 ;
  input \EX_Op1_reg[25]_0 ;
  input \EX_Op1_reg[26]_0 ;
  input \EX_Op1_reg[27]_0 ;
  input \EX_Op1_reg[28]_1 ;
  input \EX_Op1_reg[29]_0 ;
  input \EX_Op1_reg[30]_1 ;
  input \EX_Op1_reg[31]_0 ;
  input p_232_in;
  input \Using_FPGA.Native_1 ;
  input LO;
  input \Using_FPGA.Native_2 ;
  input \Using_FPGA.Native_3 ;
  input ex_MSR_Load_ALU_C;
  input ex_swx_access__0;
  input ex_MSR_Load_Shift_C;
  input ex_MSR_Load_LWX_SWX_C;
  input ex_move_to_MSR_instr;
  input [1:0]ex_MSR;
  input \Using_FPGA.Native_4 ;
  input \Using_FPGA.Native_5 ;
  input ex_valid;
  input ex_cmp_op;
  input EX_ALU_Sel_Logic;
  input ex_byte_access;
  input ex_doublet_access;
  input [1:0]\Using_FPGA.Native_i_3__31 ;
  input ex_swap_byte_instr;
  input ex_reverse_mem_access;
  input sync_reset;
  input [0:0]E;
  input [0:15]of_imm_data;
  input Clk;
  input \EX_Op3_reg[31]_0 ;
  input [31:0]\EX_Op2_reg[0]_1 ;
  input [31:0]\EX_Op3_reg[0]_1 ;

  wire Clk;
  wire [31:0]D;
  wire [0:0]E;
  wire EX_ALU_Sel_Logic;
  wire [29:0]\EX_Branch_CMP_Op1_reg[0]_0 ;
  wire \EX_Branch_CMP_Op1_reg[30]_0 ;
  wire \EX_Op1_reg[10]_0 ;
  wire \EX_Op1_reg[11]_0 ;
  wire \EX_Op1_reg[12]_0 ;
  wire \EX_Op1_reg[13]_0 ;
  wire \EX_Op1_reg[14]_0 ;
  wire \EX_Op1_reg[15]_0 ;
  wire \EX_Op1_reg[16]_0 ;
  wire \EX_Op1_reg[17]_0 ;
  wire \EX_Op1_reg[18]_0 ;
  wire \EX_Op1_reg[19]_0 ;
  wire \EX_Op1_reg[1]_0 ;
  wire \EX_Op1_reg[20]_0 ;
  wire \EX_Op1_reg[21]_0 ;
  wire \EX_Op1_reg[22]_0 ;
  wire \EX_Op1_reg[23]_0 ;
  wire \EX_Op1_reg[24]_0 ;
  wire \EX_Op1_reg[25]_0 ;
  wire \EX_Op1_reg[26]_0 ;
  wire \EX_Op1_reg[27]_0 ;
  wire \EX_Op1_reg[28]_0 ;
  wire \EX_Op1_reg[28]_1 ;
  wire \EX_Op1_reg[29]_0 ;
  wire \EX_Op1_reg[2]_0 ;
  wire \EX_Op1_reg[30]_0 ;
  wire \EX_Op1_reg[30]_1 ;
  wire \EX_Op1_reg[31]_0 ;
  wire \EX_Op1_reg[3]_0 ;
  wire \EX_Op1_reg[4]_0 ;
  wire \EX_Op1_reg[5]_0 ;
  wire \EX_Op1_reg[6]_0 ;
  wire \EX_Op1_reg[7]_0 ;
  wire \EX_Op1_reg[8]_0 ;
  wire \EX_Op1_reg[9]_0 ;
  wire [31:0]\EX_Op2_reg[0]_0 ;
  wire [31:0]\EX_Op2_reg[0]_1 ;
  wire [31:0]\EX_Op3_reg[0]_0 ;
  wire [31:0]\EX_Op3_reg[0]_1 ;
  wire \EX_Op3_reg[31]_0 ;
  wire \Gen_Bit[10].MUXF7_I1_n_0 ;
  wire \Gen_Bit[11].MUXF7_I1_n_0 ;
  wire \Gen_Bit[12].MUXF7_I1_n_0 ;
  wire \Gen_Bit[13].MUXF7_I1_n_0 ;
  wire \Gen_Bit[14].MUXF7_I1_n_0 ;
  wire \Gen_Bit[15].MUXF7_I1_n_0 ;
  wire \Gen_Bit[16].MUXF7_I1_n_0 ;
  wire \Gen_Bit[17].MUXF7_I1_n_0 ;
  wire \Gen_Bit[18].MUXF7_I1_n_0 ;
  wire \Gen_Bit[19].MUXF7_I1_n_0 ;
  wire \Gen_Bit[1].MUXF7_I1_n_0 ;
  wire \Gen_Bit[20].MUXF7_I1_n_0 ;
  wire \Gen_Bit[21].MUXF7_I1_n_0 ;
  wire \Gen_Bit[22].MUXF7_I1_n_0 ;
  wire \Gen_Bit[23].MUXF7_I1_n_0 ;
  wire \Gen_Bit[24].MUXF7_I1_n_0 ;
  wire \Gen_Bit[25].MUXF7_I1_n_0 ;
  wire \Gen_Bit[26].MUXF7_I1_n_0 ;
  wire \Gen_Bit[27].MUXF7_I1_n_0 ;
  wire \Gen_Bit[28].MUXF7_I1_n_0 ;
  wire \Gen_Bit[29].MUXF7_I1_n_0 ;
  wire \Gen_Bit[2].MUXF7_I1_n_0 ;
  wire \Gen_Bit[30].MUXF7_I1_n_0 ;
  wire \Gen_Bit[31].MUXF7_I1_n_0 ;
  wire \Gen_Bit[3].MUXF7_I1_n_0 ;
  wire \Gen_Bit[4].MUXF7_I1_n_0 ;
  wire \Gen_Bit[5].MUXF7_I1_n_0 ;
  wire \Gen_Bit[6].MUXF7_I1_n_0 ;
  wire \Gen_Bit[7].MUXF7_I1_n_0 ;
  wire \Gen_Bit[8].MUXF7_I1_n_0 ;
  wire \Gen_Bit[9].MUXF7_I1_n_0 ;
  wire I0;
  wire I1;
  wire I2;
  wire LO;
  wire O;
  wire [31:0]Q;
  wire S;
  wire [9:0]\Using_FPGA.Native ;
  wire [1:0]\Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_i_2__20_n_0 ;
  wire [1:0]\Using_FPGA.Native_i_3__31 ;
  wire \Using_FPGA.Native_i_3_n_0 ;
  wire [1:0]ex_MSR;
  wire ex_MSR_Load_ALU_C;
  wire ex_MSR_Load_LWX_SWX_C;
  wire ex_MSR_Load_Shift_C;
  wire [30:31]ex_branch_cmp_op1;
  wire ex_byte_access;
  wire ex_cmp_op;
  wire ex_doublet_access;
  wire ex_load_alu_carry_reg;
  wire ex_move_to_MSR_instr;
  wire ex_reverse_mem_access;
  wire ex_swap_byte_instr;
  wire ex_swx_access__0;
  wire ex_valid;
  wire [15:0]\imm_reg_reg[0]_0 ;
  wire in0;
  wire [0:15]of_imm_data;
  wire of_op1_sel_spr;
  wire p_232_in;
  wire [23:0]swap_result;
  wire [0:7]swap_result_reg;
  wire sync_reset;

  LUT5 #(
    .INIT(32'h96696969)) 
    \Byte_Enable[0]_INST_0_i_1 
       (.I0(ex_reverse_mem_access),
        .I1(\EX_Op2_reg[0]_0 [1]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\EX_Op2_reg[0]_0 [0]),
        .O(\Using_FPGA.Native_0 [1]));
  LUT6 #(
    .INIT(64'hE00E0EE00EE00EE0)) 
    \Data_Addr[30]_INST_0 
       (.I0(ex_byte_access),
        .I1(ex_doublet_access),
        .I2(\EX_Op2_reg[0]_0 [1]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\EX_Op2_reg[0]_0 [0]),
        .O(\Using_FPGA.Native [9]));
  LUT3 #(
    .INIT(8'h28)) 
    \Data_Addr[31]_INST_0 
       (.I0(ex_byte_access),
        .I1(Q[0]),
        .I2(\EX_Op2_reg[0]_0 [0]),
        .O(\Using_FPGA.Native [8]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Data_Write[16]_INST_0 
       (.I0(\EX_Op3_reg[0]_0 [7]),
        .I1(ex_byte_access),
        .I2(\EX_Op3_reg[0]_0 [23]),
        .I3(ex_reverse_mem_access),
        .I4(\EX_Op3_reg[0]_0 [15]),
        .O(\Using_FPGA.Native [7]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Data_Write[17]_INST_0 
       (.I0(\EX_Op3_reg[0]_0 [6]),
        .I1(ex_byte_access),
        .I2(\EX_Op3_reg[0]_0 [22]),
        .I3(ex_reverse_mem_access),
        .I4(\EX_Op3_reg[0]_0 [14]),
        .O(\Using_FPGA.Native [6]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Data_Write[18]_INST_0 
       (.I0(\EX_Op3_reg[0]_0 [5]),
        .I1(ex_byte_access),
        .I2(\EX_Op3_reg[0]_0 [21]),
        .I3(ex_reverse_mem_access),
        .I4(\EX_Op3_reg[0]_0 [13]),
        .O(\Using_FPGA.Native [5]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Data_Write[19]_INST_0 
       (.I0(\EX_Op3_reg[0]_0 [4]),
        .I1(ex_byte_access),
        .I2(\EX_Op3_reg[0]_0 [20]),
        .I3(ex_reverse_mem_access),
        .I4(\EX_Op3_reg[0]_0 [12]),
        .O(\Using_FPGA.Native [4]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Data_Write[20]_INST_0 
       (.I0(\EX_Op3_reg[0]_0 [3]),
        .I1(ex_byte_access),
        .I2(\EX_Op3_reg[0]_0 [19]),
        .I3(ex_reverse_mem_access),
        .I4(\EX_Op3_reg[0]_0 [11]),
        .O(\Using_FPGA.Native [3]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Data_Write[21]_INST_0 
       (.I0(\EX_Op3_reg[0]_0 [2]),
        .I1(ex_byte_access),
        .I2(\EX_Op3_reg[0]_0 [18]),
        .I3(ex_reverse_mem_access),
        .I4(\EX_Op3_reg[0]_0 [10]),
        .O(\Using_FPGA.Native [2]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Data_Write[22]_INST_0 
       (.I0(\EX_Op3_reg[0]_0 [1]),
        .I1(ex_byte_access),
        .I2(\EX_Op3_reg[0]_0 [17]),
        .I3(ex_reverse_mem_access),
        .I4(\EX_Op3_reg[0]_0 [9]),
        .O(\Using_FPGA.Native [1]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \Data_Write[23]_INST_0 
       (.I0(\EX_Op3_reg[0]_0 [0]),
        .I1(ex_byte_access),
        .I2(\EX_Op3_reg[0]_0 [16]),
        .I3(ex_reverse_mem_access),
        .I4(\EX_Op3_reg[0]_0 [8]),
        .O(\Using_FPGA.Native [0]));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[0] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[31]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [29]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[10] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[21]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [19]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[11] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[20]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [18]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[12] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[19]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [17]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[13] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[18]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [16]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[14] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[17]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[15] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[16]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[16] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[15]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[17] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[14]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[18] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[13]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[19] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[12]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[1] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[30]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [28]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[20] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[11]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [9]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[21] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[10]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[22] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[9]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[23] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[8]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [6]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[24] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[7]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[25] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[6]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[26] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[5]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [3]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[27] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[4]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[28] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[3]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[29] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[2]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[2] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[29]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [27]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[30] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[1]),
        .Q(ex_branch_cmp_op1[30]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[31] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[0]),
        .Q(ex_branch_cmp_op1[31]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[3] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[28]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [26]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[4] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[27]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [25]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[5] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[26]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [24]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[6] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[25]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [23]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[7] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[24]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [22]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[8] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[23]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [21]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Branch_CMP_Op1_reg[9] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(D[22]),
        .Q(\EX_Branch_CMP_Op1_reg[0]_0 [20]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[0] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(O),
        .Q(Q[31]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[10] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[10].MUXF7_I1_n_0 ),
        .Q(Q[21]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[11] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[11].MUXF7_I1_n_0 ),
        .Q(Q[20]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[12] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[12].MUXF7_I1_n_0 ),
        .Q(Q[19]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[13] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[13].MUXF7_I1_n_0 ),
        .Q(Q[18]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[14] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[14].MUXF7_I1_n_0 ),
        .Q(Q[17]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[15] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[15].MUXF7_I1_n_0 ),
        .Q(Q[16]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[16] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[16].MUXF7_I1_n_0 ),
        .Q(Q[15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[17] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[17].MUXF7_I1_n_0 ),
        .Q(Q[14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[18] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[18].MUXF7_I1_n_0 ),
        .Q(Q[13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[19] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[19].MUXF7_I1_n_0 ),
        .Q(Q[12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[1] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[1].MUXF7_I1_n_0 ),
        .Q(Q[30]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[20] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[20].MUXF7_I1_n_0 ),
        .Q(Q[11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[21] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[21].MUXF7_I1_n_0 ),
        .Q(Q[10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[22] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[22].MUXF7_I1_n_0 ),
        .Q(Q[9]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[23] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[23].MUXF7_I1_n_0 ),
        .Q(Q[8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[24] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[24].MUXF7_I1_n_0 ),
        .Q(Q[7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[25] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[25].MUXF7_I1_n_0 ),
        .Q(Q[6]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[26] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[26].MUXF7_I1_n_0 ),
        .Q(Q[5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[27] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[27].MUXF7_I1_n_0 ),
        .Q(Q[4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[28] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[28].MUXF7_I1_n_0 ),
        .Q(Q[3]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[29] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[29].MUXF7_I1_n_0 ),
        .Q(Q[2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[2] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[2].MUXF7_I1_n_0 ),
        .Q(Q[29]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[30] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[30].MUXF7_I1_n_0 ),
        .Q(Q[1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[31] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[31].MUXF7_I1_n_0 ),
        .Q(Q[0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[3] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[3].MUXF7_I1_n_0 ),
        .Q(Q[28]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[4] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[4].MUXF7_I1_n_0 ),
        .Q(Q[27]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[5] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[5].MUXF7_I1_n_0 ),
        .Q(Q[26]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[6] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[6].MUXF7_I1_n_0 ),
        .Q(Q[25]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[7] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[7].MUXF7_I1_n_0 ),
        .Q(Q[24]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[8] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[8].MUXF7_I1_n_0 ),
        .Q(Q[23]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op1_reg[9] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\Gen_Bit[9].MUXF7_I1_n_0 ),
        .Q(Q[22]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[0] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [31]),
        .Q(\EX_Op2_reg[0]_0 [31]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[10] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [21]),
        .Q(\EX_Op2_reg[0]_0 [21]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[11] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [20]),
        .Q(\EX_Op2_reg[0]_0 [20]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[12] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [19]),
        .Q(\EX_Op2_reg[0]_0 [19]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[13] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [18]),
        .Q(\EX_Op2_reg[0]_0 [18]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[14] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [17]),
        .Q(\EX_Op2_reg[0]_0 [17]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[15] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [16]),
        .Q(\EX_Op2_reg[0]_0 [16]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[16] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [15]),
        .Q(\EX_Op2_reg[0]_0 [15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[17] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [14]),
        .Q(\EX_Op2_reg[0]_0 [14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[18] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [13]),
        .Q(\EX_Op2_reg[0]_0 [13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[19] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [12]),
        .Q(\EX_Op2_reg[0]_0 [12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[1] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [30]),
        .Q(\EX_Op2_reg[0]_0 [30]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[20] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [11]),
        .Q(\EX_Op2_reg[0]_0 [11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[21] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [10]),
        .Q(\EX_Op2_reg[0]_0 [10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[22] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [9]),
        .Q(\EX_Op2_reg[0]_0 [9]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[23] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [8]),
        .Q(\EX_Op2_reg[0]_0 [8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[24] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [7]),
        .Q(\EX_Op2_reg[0]_0 [7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[25] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [6]),
        .Q(\EX_Op2_reg[0]_0 [6]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[26] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [5]),
        .Q(\EX_Op2_reg[0]_0 [5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[27] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [4]),
        .Q(\EX_Op2_reg[0]_0 [4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[28] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [3]),
        .Q(\EX_Op2_reg[0]_0 [3]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[29] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [2]),
        .Q(\EX_Op2_reg[0]_0 [2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[2] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [29]),
        .Q(\EX_Op2_reg[0]_0 [29]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[30] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [1]),
        .Q(\EX_Op2_reg[0]_0 [1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[31] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [0]),
        .Q(\EX_Op2_reg[0]_0 [0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[3] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [28]),
        .Q(\EX_Op2_reg[0]_0 [28]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[4] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [27]),
        .Q(\EX_Op2_reg[0]_0 [27]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[5] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [26]),
        .Q(\EX_Op2_reg[0]_0 [26]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[6] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [25]),
        .Q(\EX_Op2_reg[0]_0 [25]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[7] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [24]),
        .Q(\EX_Op2_reg[0]_0 [24]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[8] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [23]),
        .Q(\EX_Op2_reg[0]_0 [23]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op2_reg[9] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op2_reg[0]_1 [22]),
        .Q(\EX_Op2_reg[0]_0 [22]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[0] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [31]),
        .Q(\EX_Op3_reg[0]_0 [31]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[10] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [21]),
        .Q(\EX_Op3_reg[0]_0 [21]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[11] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [20]),
        .Q(\EX_Op3_reg[0]_0 [20]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[12] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [19]),
        .Q(\EX_Op3_reg[0]_0 [19]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[13] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [18]),
        .Q(\EX_Op3_reg[0]_0 [18]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[14] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [17]),
        .Q(\EX_Op3_reg[0]_0 [17]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[15] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [16]),
        .Q(\EX_Op3_reg[0]_0 [16]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[16] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [15]),
        .Q(\EX_Op3_reg[0]_0 [15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[17] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [14]),
        .Q(\EX_Op3_reg[0]_0 [14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[18] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [13]),
        .Q(\EX_Op3_reg[0]_0 [13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[19] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [12]),
        .Q(\EX_Op3_reg[0]_0 [12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[1] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [30]),
        .Q(\EX_Op3_reg[0]_0 [30]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[20] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [11]),
        .Q(\EX_Op3_reg[0]_0 [11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[21] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [10]),
        .Q(\EX_Op3_reg[0]_0 [10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[22] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [9]),
        .Q(\EX_Op3_reg[0]_0 [9]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[23] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [8]),
        .Q(\EX_Op3_reg[0]_0 [8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[24] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [7]),
        .Q(\EX_Op3_reg[0]_0 [7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[25] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [6]),
        .Q(\EX_Op3_reg[0]_0 [6]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[26] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [5]),
        .Q(\EX_Op3_reg[0]_0 [5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[27] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [4]),
        .Q(\EX_Op3_reg[0]_0 [4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[28] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [3]),
        .Q(\EX_Op3_reg[0]_0 [3]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[29] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [2]),
        .Q(\EX_Op3_reg[0]_0 [2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[2] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [29]),
        .Q(\EX_Op3_reg[0]_0 [29]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[30] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [1]),
        .Q(\EX_Op3_reg[0]_0 [1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[31] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [0]),
        .Q(\EX_Op3_reg[0]_0 [0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[3] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [28]),
        .Q(\EX_Op3_reg[0]_0 [28]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[4] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [27]),
        .Q(\EX_Op3_reg[0]_0 [27]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[5] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [26]),
        .Q(\EX_Op3_reg[0]_0 [26]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[6] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [25]),
        .Q(\EX_Op3_reg[0]_0 [25]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[7] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [24]),
        .Q(\EX_Op3_reg[0]_0 [24]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[8] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [23]),
        .Q(\EX_Op3_reg[0]_0 [23]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \EX_Op3_reg[9] 
       (.C(Clk),
        .CE(\EX_Op3_reg[31]_0 ),
        .D(\EX_Op3_reg[0]_1 [22]),
        .Q(\EX_Op3_reg[0]_0 [22]),
        .R(sync_reset));
  system_microblaze_0_0__MB_MUXF7_425 \Gen_Bit[0].MUXF7_I1 
       (.D(O),
        .\EX_Op1_reg[0] (D[31]),
        .I1(I1),
        .Q({Q[15],Q[7]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result_reg(swap_result_reg[0]));
  system_microblaze_0_0__MB_MUXF7_426 \Gen_Bit[10].MUXF7_I1 
       (.D(\Gen_Bit[10].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[10] (D[21]),
        .\EX_Op1_reg[10]_0 (\EX_Op1_reg[10]_0 ),
        .Q({Q[13],Q[5]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[21]));
  system_microblaze_0_0__MB_MUXF7_427 \Gen_Bit[11].MUXF7_I1 
       (.D(\Gen_Bit[11].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[11] (D[20]),
        .\EX_Op1_reg[11]_0 (\EX_Op1_reg[11]_0 ),
        .Q({Q[12],Q[4]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[20]));
  system_microblaze_0_0__MB_MUXF7_428 \Gen_Bit[12].MUXF7_I1 
       (.D(\Gen_Bit[12].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[12] (D[19]),
        .\EX_Op1_reg[12]_0 (\EX_Op1_reg[12]_0 ),
        .Q({Q[11],Q[3]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[19]));
  system_microblaze_0_0__MB_MUXF7_429 \Gen_Bit[13].MUXF7_I1 
       (.D(\Gen_Bit[13].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[13] (D[18]),
        .\EX_Op1_reg[13]_0 (\EX_Op1_reg[13]_0 ),
        .Q({Q[10],Q[2]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[18]));
  system_microblaze_0_0__MB_MUXF7_430 \Gen_Bit[14].MUXF7_I1 
       (.D(\Gen_Bit[14].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[14] (D[17]),
        .\EX_Op1_reg[14]_0 (\EX_Op1_reg[14]_0 ),
        .Q({Q[9],Q[1]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[17]));
  system_microblaze_0_0__MB_MUXF7_431 \Gen_Bit[15].MUXF7_I1 
       (.D(\Gen_Bit[15].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[15] (D[16]),
        .\EX_Op1_reg[15]_0 (\EX_Op1_reg[15]_0 ),
        .Q({Q[8],Q[0]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[16]));
  system_microblaze_0_0__MB_MUXF7_432 \Gen_Bit[16].MUXF7_I1 
       (.D(\Gen_Bit[16].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[16] (D[15]),
        .\EX_Op1_reg[16]_0 (\EX_Op1_reg[16]_0 ),
        .Q({Q[31],Q[23]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[15]));
  system_microblaze_0_0__MB_MUXF7_433 \Gen_Bit[17].MUXF7_I1 
       (.D(\Gen_Bit[17].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[17] (D[14]),
        .\EX_Op1_reg[17]_0 (\EX_Op1_reg[17]_0 ),
        .Q({Q[30],Q[22]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[14]));
  system_microblaze_0_0__MB_MUXF7_434 \Gen_Bit[18].MUXF7_I1 
       (.D(\Gen_Bit[18].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[18] (D[13]),
        .\EX_Op1_reg[18]_0 (\EX_Op1_reg[18]_0 ),
        .Q({Q[29],Q[21]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[13]));
  system_microblaze_0_0__MB_MUXF7_435 \Gen_Bit[19].MUXF7_I1 
       (.D(\Gen_Bit[19].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[19] (D[12]),
        .\EX_Op1_reg[19]_0 (\EX_Op1_reg[19]_0 ),
        .Q({Q[28],Q[20]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[12]));
  system_microblaze_0_0__MB_MUXF7_436 \Gen_Bit[1].MUXF7_I1 
       (.D(\Gen_Bit[1].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[1] (D[30]),
        .\EX_Op1_reg[1]_0 (\EX_Op1_reg[1]_0 ),
        .Q({Q[14],Q[6]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result_reg(swap_result_reg[1]));
  system_microblaze_0_0__MB_MUXF7_437 \Gen_Bit[20].MUXF7_I1 
       (.D(\Gen_Bit[20].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[20] (D[11]),
        .\EX_Op1_reg[20]_0 (\EX_Op1_reg[20]_0 ),
        .Q({Q[27],Q[19]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[11]));
  system_microblaze_0_0__MB_MUXF7_438 \Gen_Bit[21].MUXF7_I1 
       (.D(\Gen_Bit[21].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[21] (D[10]),
        .\EX_Op1_reg[21]_0 (\EX_Op1_reg[21]_0 ),
        .Q({Q[26],Q[18]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[10]));
  system_microblaze_0_0__MB_MUXF7_439 \Gen_Bit[22].MUXF7_I1 
       (.D(\Gen_Bit[22].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[22] (D[9]),
        .\EX_Op1_reg[22]_0 (\EX_Op1_reg[22]_0 ),
        .Q({Q[25],Q[17]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[9]));
  system_microblaze_0_0__MB_MUXF7_440 \Gen_Bit[23].MUXF7_I1 
       (.D(\Gen_Bit[23].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[23] (D[8]),
        .\EX_Op1_reg[23]_0 (\EX_Op1_reg[23]_0 ),
        .Q({Q[24],Q[16]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[8]));
  system_microblaze_0_0__MB_MUXF7_441 \Gen_Bit[24].MUXF7_I1 
       (.D(\Gen_Bit[24].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[24] (D[7]),
        .\EX_Op1_reg[24]_0 (\EX_Op1_reg[24]_0 ),
        .Q({Q[31],Q[23]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[7]));
  system_microblaze_0_0__MB_MUXF7_442 \Gen_Bit[25].MUXF7_I1 
       (.D(\Gen_Bit[25].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[25] (D[6]),
        .\EX_Op1_reg[25]_0 (\EX_Op1_reg[25]_0 ),
        .Q({Q[30],Q[22]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[6]));
  system_microblaze_0_0__MB_MUXF7_443 \Gen_Bit[26].MUXF7_I1 
       (.D(\Gen_Bit[26].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[26] (D[5]),
        .\EX_Op1_reg[26]_0 (\EX_Op1_reg[26]_0 ),
        .Q({Q[29],Q[21]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[5]));
  system_microblaze_0_0__MB_MUXF7_444 \Gen_Bit[27].MUXF7_I1 
       (.D(\Gen_Bit[27].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[27] (D[4]),
        .\EX_Op1_reg[27]_0 (\EX_Op1_reg[27]_0 ),
        .Q({Q[28],Q[20]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[4]));
  system_microblaze_0_0__MB_MUXF7_445 \Gen_Bit[28].MUXF7_I1 
       (.D(\Gen_Bit[28].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[28] (D[3]),
        .\EX_Op1_reg[28]_0 (\EX_Op1_reg[28]_1 ),
        .Q({Q[27],Q[19]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[3]));
  system_microblaze_0_0__MB_MUXF7_446 \Gen_Bit[29].MUXF7_I1 
       (.D(\Gen_Bit[29].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[29] (D[2]),
        .\EX_Op1_reg[29]_0 (\EX_Op1_reg[29]_0 ),
        .Q({Q[26],Q[18]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[2]));
  system_microblaze_0_0__MB_MUXF7_447 \Gen_Bit[2].MUXF7_I1 
       (.D(\Gen_Bit[2].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[2] (D[29]),
        .\EX_Op1_reg[2]_0 (\EX_Op1_reg[2]_0 ),
        .Q({Q[13],Q[5]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result_reg(swap_result_reg[2]));
  system_microblaze_0_0__MB_MUXF7_448 \Gen_Bit[30].MUXF7_I1 
       (.D(\Gen_Bit[30].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[30] (D[1]),
        .\EX_Op1_reg[30]_0 (\EX_Op1_reg[30]_1 ),
        .Q({Q[25],Q[17]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[1]));
  system_microblaze_0_0__MB_MUXF7_449 \Gen_Bit[31].MUXF7_I1 
       (.D(\Gen_Bit[31].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[31] (D[0]),
        .\EX_Op1_reg[31]_0 (\EX_Op1_reg[31]_0 ),
        .Q({Q[24],Q[16]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[0]));
  system_microblaze_0_0__MB_MUXF7_450 \Gen_Bit[3].MUXF7_I1 
       (.D(\Gen_Bit[3].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[3] (D[28]),
        .\EX_Op1_reg[3]_0 (\EX_Op1_reg[3]_0 ),
        .Q({Q[12],Q[4]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result_reg(swap_result_reg[3]));
  system_microblaze_0_0__MB_MUXF7_451 \Gen_Bit[4].MUXF7_I1 
       (.D(\Gen_Bit[4].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[4] (D[27]),
        .\EX_Op1_reg[4]_0 (\EX_Op1_reg[4]_0 ),
        .Q({Q[11],Q[3]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result_reg(swap_result_reg[4]));
  system_microblaze_0_0__MB_MUXF7_452 \Gen_Bit[5].MUXF7_I1 
       (.D(\Gen_Bit[5].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[5] (D[26]),
        .\EX_Op1_reg[5]_0 (\EX_Op1_reg[5]_0 ),
        .Q({Q[10],Q[2]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result_reg(swap_result_reg[5]));
  system_microblaze_0_0__MB_MUXF7_453 \Gen_Bit[6].MUXF7_I1 
       (.D(\Gen_Bit[6].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[6] (D[25]),
        .\EX_Op1_reg[6]_0 (\EX_Op1_reg[6]_0 ),
        .Q({Q[9],Q[1]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result_reg(swap_result_reg[6]));
  system_microblaze_0_0__MB_MUXF7_454 \Gen_Bit[7].MUXF7_I1 
       (.D(\Gen_Bit[7].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[7] (D[24]),
        .\EX_Op1_reg[7]_0 (\EX_Op1_reg[7]_0 ),
        .Q({Q[8],Q[0]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result_reg(swap_result_reg[7]));
  system_microblaze_0_0__MB_MUXF7_455 \Gen_Bit[8].MUXF7_I1 
       (.D(\Gen_Bit[8].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[8] (D[23]),
        .\EX_Op1_reg[8]_0 (\EX_Op1_reg[8]_0 ),
        .Q({Q[15],Q[7]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[23]));
  system_microblaze_0_0__MB_MUXF7_456 \Gen_Bit[9].MUXF7_I1 
       (.D(\Gen_Bit[9].MUXF7_I1_n_0 ),
        .\EX_Op1_reg[9] (D[22]),
        .\EX_Op1_reg[9]_0 (\EX_Op1_reg[9]_0 ),
        .Q({Q[14],Q[6]}),
        .ex_swap_byte_instr(ex_swap_byte_instr),
        .of_op1_sel_spr(of_op1_sel_spr),
        .swap_result(swap_result[22]));
  LUT6 #(
    .INIT(64'hEAAAFFFFEAAA0000)) 
    \Using_FPGA.Native_i_1__4 
       (.I0(\Using_FPGA.Native_i_2__20_n_0 ),
        .I1(p_232_in),
        .I2(\Using_FPGA.Native_1 ),
        .I3(LO),
        .I4(\Using_FPGA.Native_2 ),
        .I5(\Using_FPGA.Native_3 ),
        .O(ex_load_alu_carry_reg));
  LUT4 #(
    .INIT(16'h009F)) 
    \Using_FPGA.Native_i_1__46 
       (.I0(\EX_Op2_reg[0]_0 [31]),
        .I1(Q[31]),
        .I2(ex_cmp_op),
        .I3(EX_ALU_Sel_Logic),
        .O(S));
  LUT2 #(
    .INIT(4'h2)) 
    \Using_FPGA.Native_i_1__47 
       (.I0(\EX_Op2_reg[0]_0 [31]),
        .I1(EX_ALU_Sel_Logic),
        .O(I0));
  LUT3 #(
    .INIT(8'h9F)) 
    \Using_FPGA.Native_i_1__50 
       (.I0(\EX_Op2_reg[0]_0 [31]),
        .I1(Q[31]),
        .I2(ex_cmp_op),
        .O(I2));
  LUT5 #(
    .INIT(32'hBFFF8000)) 
    \Using_FPGA.Native_i_1__6 
       (.I0(Q[1]),
        .I1(p_232_in),
        .I2(ex_move_to_MSR_instr),
        .I3(\Using_FPGA.Native_2 ),
        .I4(ex_MSR[0]),
        .O(\EX_Op1_reg[30]_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \Using_FPGA.Native_i_1__95 
       (.I0(ex_branch_cmp_op1[30]),
        .I1(ex_branch_cmp_op1[31]),
        .O(\EX_Branch_CMP_Op1_reg[30]_0 ));
  LUT6 #(
    .INIT(64'h3030003330302222)) 
    \Using_FPGA.Native_i_2__20 
       (.I0(\Using_FPGA.Native_i_3_n_0 ),
        .I1(ex_MSR_Load_ALU_C),
        .I2(Q[0]),
        .I3(ex_swx_access__0),
        .I4(ex_MSR_Load_Shift_C),
        .I5(ex_MSR_Load_LWX_SWX_C),
        .O(\Using_FPGA.Native_i_2__20_n_0 ));
  LUT6 #(
    .INIT(64'hAEFFFFFFA2000000)) 
    \Using_FPGA.Native_i_2__21 
       (.I0(Q[3]),
        .I1(\Using_FPGA.Native_4 ),
        .I2(\Using_FPGA.Native_5 ),
        .I3(ex_valid),
        .I4(ex_move_to_MSR_instr),
        .I5(ex_MSR[1]),
        .O(\EX_Op1_reg[28]_0 ));
  LUT6 #(
    .INIT(64'hAEFFFFFFA2000000)) 
    \Using_FPGA.Native_i_3 
       (.I0(Q[2]),
        .I1(\Using_FPGA.Native_4 ),
        .I2(\Using_FPGA.Native_5 ),
        .I3(ex_valid),
        .I4(ex_move_to_MSR_instr),
        .I5(\Using_FPGA.Native_3 ),
        .O(\Using_FPGA.Native_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[0] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[0]),
        .Q(\imm_reg_reg[0]_0 [15]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[10] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[10]),
        .Q(\imm_reg_reg[0]_0 [5]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[11] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[11]),
        .Q(\imm_reg_reg[0]_0 [4]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[12] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[12]),
        .Q(\imm_reg_reg[0]_0 [3]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[13] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[13]),
        .Q(\imm_reg_reg[0]_0 [2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[14] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[14]),
        .Q(\imm_reg_reg[0]_0 [1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[15] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[15]),
        .Q(\imm_reg_reg[0]_0 [0]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[1] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[1]),
        .Q(\imm_reg_reg[0]_0 [14]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[2] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[2]),
        .Q(\imm_reg_reg[0]_0 [13]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[3] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[3]),
        .Q(\imm_reg_reg[0]_0 [12]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[4] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[4]),
        .Q(\imm_reg_reg[0]_0 [11]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[5] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[5]),
        .Q(\imm_reg_reg[0]_0 [10]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[6] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[6]),
        .Q(\imm_reg_reg[0]_0 [9]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[7] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[7]),
        .Q(\imm_reg_reg[0]_0 [8]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[8] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[8]),
        .Q(\imm_reg_reg[0]_0 [7]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \imm_reg_reg[9] 
       (.C(Clk),
        .CE(E),
        .D(of_imm_data[9]),
        .Q(\imm_reg_reg[0]_0 [6]),
        .R(sync_reset));
  LUT3 #(
    .INIT(8'h69)) 
    \mem_byte_selects[1]_i_1 
       (.I0(ex_reverse_mem_access),
        .I1(Q[0]),
        .I2(\EX_Op2_reg[0]_0 [0]),
        .O(\Using_FPGA.Native_0 [0]));
  LUT4 #(
    .INIT(16'h00E2)) 
    sign_doublet_inferred_i_1
       (.I0(Q[7]),
        .I1(\Using_FPGA.Native_i_3__31 [0]),
        .I2(Q[15]),
        .I3(\Using_FPGA.Native_i_3__31 [1]),
        .O(in0));
endmodule

(* ORIG_REF_NAME = "PC_Module_gti" *) 
module system_microblaze_0_0__PC_Module_gti
   (\if_pc_reg[0]_0 ,
    D,
    IB_Ready,
    \if_pc_reg[30]_0 ,
    O,
    \if_pc_reg[28]_0 ,
    \if_pc_reg[27]_0 ,
    \if_pc_reg[26]_0 ,
    \if_pc_reg[25]_0 ,
    \if_pc_reg[24]_0 ,
    \if_pc_reg[23]_0 ,
    \if_pc_reg[22]_0 ,
    \if_pc_reg[21]_0 ,
    \if_pc_reg[20]_0 ,
    \if_pc_reg[19]_0 ,
    \if_pc_reg[18]_0 ,
    \if_pc_reg[17]_0 ,
    \if_pc_reg[16]_0 ,
    \if_pc_reg[15]_0 ,
    \if_pc_reg[14]_0 ,
    \if_pc_reg[13]_0 ,
    \if_pc_reg[12]_0 ,
    \if_pc_reg[11]_0 ,
    \if_pc_reg[10]_0 ,
    \if_pc_reg[9]_0 ,
    \if_pc_reg[8]_0 ,
    \if_pc_reg[7]_0 ,
    \if_pc_reg[6]_0 ,
    \if_pc_reg[5]_0 ,
    \if_pc_reg[4]_0 ,
    \if_pc_reg[3]_0 ,
    \if_pc_reg[2]_0 ,
    \if_pc_reg[1]_0 ,
    \mem_pc_i_reg[0]_0 ,
    \ex_pc_i_reg[31]_0 ,
    sync_reset,
    Clk,
    if_missed_fetch_reg,
    if_missed_fetch_reg_0,
    Q,
    wb_exception,
    IReady,
    \Using_FPGA.Native ,
    if_sel_input,
    \Using_FPGA.Native_0 ,
    CI,
    if_pre_buffer_addr,
    E,
    \if_pc_reg[0]_1 ,
    \if_pc_reg[0]_2 ,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output \if_pc_reg[0]_0 ;
  output [31:0]D;
  output IB_Ready;
  output [1:0]\if_pc_reg[30]_0 ;
  output O;
  output \if_pc_reg[28]_0 ;
  output \if_pc_reg[27]_0 ;
  output \if_pc_reg[26]_0 ;
  output \if_pc_reg[25]_0 ;
  output \if_pc_reg[24]_0 ;
  output \if_pc_reg[23]_0 ;
  output \if_pc_reg[22]_0 ;
  output \if_pc_reg[21]_0 ;
  output \if_pc_reg[20]_0 ;
  output \if_pc_reg[19]_0 ;
  output \if_pc_reg[18]_0 ;
  output \if_pc_reg[17]_0 ;
  output \if_pc_reg[16]_0 ;
  output \if_pc_reg[15]_0 ;
  output \if_pc_reg[14]_0 ;
  output \if_pc_reg[13]_0 ;
  output \if_pc_reg[12]_0 ;
  output \if_pc_reg[11]_0 ;
  output \if_pc_reg[10]_0 ;
  output \if_pc_reg[9]_0 ;
  output \if_pc_reg[8]_0 ;
  output \if_pc_reg[7]_0 ;
  output \if_pc_reg[6]_0 ;
  output \if_pc_reg[5]_0 ;
  output \if_pc_reg[4]_0 ;
  output \if_pc_reg[3]_0 ;
  output \if_pc_reg[2]_0 ;
  output \if_pc_reg[1]_0 ;
  output [31:0]\mem_pc_i_reg[0]_0 ;
  input \ex_pc_i_reg[31]_0 ;
  input sync_reset;
  input Clk;
  input if_missed_fetch_reg;
  input if_missed_fetch_reg_0;
  input [1:0]Q;
  input wb_exception;
  input IReady;
  input \Using_FPGA.Native ;
  input [1:0]if_sel_input;
  input \Using_FPGA.Native_0 ;
  input CI;
  input [0:0]if_pre_buffer_addr;
  input [0:0]E;
  input [0:0]\if_pc_reg[0]_1 ;
  input [31:0]\if_pc_reg[0]_2 ;
  input lopt;
  output lopt_1;
  output lopt_2;
  input lopt_3;

  wire Clk;
  wire [31:0]D;
  wire [0:0]E;
  wire I0;
  wire I0101_out;
  wire I0105_out;
  wire I0109_out;
  wire I0113_out;
  wire I0117_out;
  wire I0121_out;
  wire I0125_out;
  wire I013_out;
  wire I017_out;
  wire I021_out;
  wire I025_out;
  wire I029_out;
  wire I033_out;
  wire I037_out;
  wire I041_out;
  wire I045_out;
  wire I049_out;
  wire I053_out;
  wire I057_out;
  wire I05_out;
  wire I061_out;
  wire I065_out;
  wire I069_out;
  wire I073_out;
  wire I077_out;
  wire I081_out;
  wire I085_out;
  wire I089_out;
  wire I093_out;
  wire I097_out;
  wire I09_out;
  wire IB_Ready;
  wire IReady;
  wire LO;
  wire O;
  wire \PC_Buffer_reg[3][31]_srl4_n_0 ;
  wire [1:0]Q;
  wire S;
  wire S102_in;
  wire S107_in;
  wire S112_in;
  wire S117_in;
  wire S122_in;
  wire S127_in;
  wire S12_in;
  wire S132_in;
  wire S137_in;
  wire S142_in;
  wire S147_in;
  wire S152_in;
  wire S17_in;
  wire S22_in;
  wire S27_in;
  wire S32_in;
  wire S37_in;
  wire S42_in;
  wire S47_in;
  wire S52_in;
  wire S57_in;
  wire S62_in;
  wire S67_in;
  wire S72_in;
  wire S77_in;
  wire S82_in;
  wire S87_in;
  wire S92_in;
  wire S97_in;
  wire \Using_FPGA.Incr_PC[13].MUXCY_XOR_I_n_0 ;
  wire \Using_FPGA.Incr_PC[17].MUXCY_XOR_I_n_0 ;
  wire \Using_FPGA.Incr_PC[1].MUXCY_XOR_I_n_0 ;
  wire \Using_FPGA.Incr_PC[21].MUXCY_XOR_I_n_0 ;
  wire \Using_FPGA.Incr_PC[25].MUXCY_XOR_I_n_0 ;
  wire \Using_FPGA.Incr_PC[5].MUXCY_XOR_I_n_0 ;
  wire \Using_FPGA.Incr_PC[9].MUXCY_XOR_I_n_0 ;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire [0:31]ex_pc;
  wire if_missed_fetch_reg;
  wire if_missed_fetch_reg_0;
  wire \if_pc_reg[0]_0 ;
  wire [0:0]\if_pc_reg[0]_1 ;
  wire [31:0]\if_pc_reg[0]_2 ;
  wire \if_pc_reg[10]_0 ;
  wire \if_pc_reg[11]_0 ;
  wire \if_pc_reg[12]_0 ;
  wire \if_pc_reg[13]_0 ;
  wire \if_pc_reg[14]_0 ;
  wire \if_pc_reg[15]_0 ;
  wire \if_pc_reg[16]_0 ;
  wire \if_pc_reg[17]_0 ;
  wire \if_pc_reg[18]_0 ;
  wire \if_pc_reg[19]_0 ;
  wire \if_pc_reg[1]_0 ;
  wire \if_pc_reg[20]_0 ;
  wire \if_pc_reg[21]_0 ;
  wire \if_pc_reg[22]_0 ;
  wire \if_pc_reg[23]_0 ;
  wire \if_pc_reg[24]_0 ;
  wire \if_pc_reg[25]_0 ;
  wire \if_pc_reg[26]_0 ;
  wire \if_pc_reg[27]_0 ;
  wire \if_pc_reg[28]_0 ;
  wire \if_pc_reg[2]_0 ;
  wire [1:0]\if_pc_reg[30]_0 ;
  wire \if_pc_reg[3]_0 ;
  wire \if_pc_reg[4]_0 ;
  wire \if_pc_reg[5]_0 ;
  wire \if_pc_reg[6]_0 ;
  wire \if_pc_reg[7]_0 ;
  wire \if_pc_reg[8]_0 ;
  wire \if_pc_reg[9]_0 ;
  wire [0:0]if_pre_buffer_addr;
  wire [1:0]if_sel_input;
  wire lopt;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_13;
  wire lopt_15;
  wire lopt_16;
  wire lopt_17;
  wire lopt_18;
  wire lopt_19;
  wire \^lopt_2 ;
  wire lopt_20;
  wire lopt_22;
  wire lopt_24;
  wire lopt_25;
  wire lopt_26;
  wire lopt_27;
  wire lopt_28;
  wire lopt_29;
  wire lopt_31;
  wire lopt_33;
  wire lopt_34;
  wire lopt_35;
  wire lopt_36;
  wire lopt_37;
  wire lopt_38;
  wire lopt_4;
  wire lopt_40;
  wire lopt_42;
  wire lopt_43;
  wire lopt_44;
  wire lopt_45;
  wire lopt_46;
  wire lopt_47;
  wire lopt_49;
  wire lopt_51;
  wire lopt_52;
  wire lopt_53;
  wire lopt_54;
  wire lopt_55;
  wire lopt_56;
  wire lopt_58;
  wire lopt_6;
  wire lopt_60;
  wire lopt_61;
  wire lopt_62;
  wire lopt_63;
  wire lopt_64;
  wire lopt_65;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire [31:0]\mem_pc_i_reg[0]_0 ;
  (* DIRECT_ENABLE *) wire of_PipeRun_for_ce;
  wire of_pc_ii_0;
  wire of_pc_ii_1;
  wire of_pc_ii_10;
  wire of_pc_ii_11;
  wire of_pc_ii_12;
  wire of_pc_ii_13;
  wire of_pc_ii_14;
  wire of_pc_ii_15;
  wire of_pc_ii_16;
  wire of_pc_ii_17;
  wire of_pc_ii_18;
  wire of_pc_ii_19;
  wire of_pc_ii_2;
  wire of_pc_ii_20;
  wire of_pc_ii_21;
  wire of_pc_ii_22;
  wire of_pc_ii_23;
  wire of_pc_ii_24;
  wire of_pc_ii_25;
  wire of_pc_ii_26;
  wire of_pc_ii_27;
  wire of_pc_ii_28;
  wire of_pc_ii_29;
  wire of_pc_ii_3;
  wire of_pc_ii_30;
  wire of_pc_ii_31;
  wire of_pc_ii_4;
  wire of_pc_ii_5;
  wire of_pc_ii_6;
  wire of_pc_ii_7;
  wire of_pc_ii_8;
  wire of_pc_ii_9;
  wire p_1_in103_in;
  wire p_1_in108_in;
  wire p_1_in113_in;
  wire p_1_in118_in;
  wire p_1_in123_in;
  wire p_1_in128_in;
  wire p_1_in133_in;
  wire p_1_in138_in;
  wire p_1_in13_in;
  wire p_1_in143_in;
  wire p_1_in148_in;
  wire p_1_in153_in;
  wire p_1_in18_in;
  wire p_1_in23_in;
  wire p_1_in28_in;
  wire p_1_in33_in;
  wire p_1_in38_in;
  wire p_1_in43_in;
  wire p_1_in48_in;
  wire p_1_in53_in;
  wire p_1_in58_in;
  wire p_1_in63_in;
  wire p_1_in68_in;
  wire p_1_in73_in;
  wire p_1_in78_in;
  wire p_1_in83_in;
  wire p_1_in88_in;
  wire p_1_in8_in;
  wire p_1_in93_in;
  wire p_1_in98_in;
  wire p_2_in4_in;
  (* DIRECT_RESET *) wire reset_bool_for_rst;
  wire wb_exception;
  wire \NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_if_pc_reg[10]_0_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_if_pc_reg[11]_0_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[12].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[12].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[12].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[13].MUXCY_XOR_I_if_pc_reg[13]_0_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[13].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_if_pc_reg[14]_0_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_if_pc_reg[15]_0_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[16].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[16].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[16].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[17].MUXCY_XOR_I_if_pc_reg[17]_0_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[17].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_if_pc_reg[18]_0_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_if_pc_reg[19]_0_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[1].MUXCY_XOR_I_if_pc_reg[1]_0_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[1].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[20].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[20].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[20].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[21].MUXCY_XOR_I_if_pc_reg[21]_0_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[21].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_if_pc_reg[22]_0_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_if_pc_reg[23]_0_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[24].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[24].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[24].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[25].MUXCY_XOR_I_if_pc_reg[25]_0_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[25].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_if_pc_reg[26]_0_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_if_pc_reg[27]_0_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[28].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[28].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[28].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[29].MUXCY_XOR_I_CI_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[29].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_if_pc_reg[2]_0_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_if_pc_reg[3]_0_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[4].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[4].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[4].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[5].MUXCY_XOR_I_if_pc_reg[5]_0_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[5].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_if_pc_reg[6]_0_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_if_pc_reg[7]_0_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_Q_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[8].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[8].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[8].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA.Incr_PC[9].MUXCY_XOR_I_CI_UNCONNECTED ;
  wire [0:0]\NLW_Using_FPGA.Incr_PC[9].MUXCY_XOR_I_Q_UNCONNECTED ;

  assign \^lopt_2  = lopt_3;
  assign lopt_2 = S;
  assign of_PipeRun_for_ce = \ex_pc_i_reg[31]_0 ;
  assign reset_bool_for_rst = sync_reset;
  LUT6 #(
    .INIT(64'hABBBBBBBAAAAAAAA)) 
    I_AS_INST_0_i_1
       (.I0(if_missed_fetch_reg),
        .I1(if_missed_fetch_reg_0),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(wb_exception),
        .I5(IReady),
        .O(IB_Ready));
  system_microblaze_0_0__MB_FDR_206 \Instruction_Prefetch_Mux[0].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[31]),
        .I0125_out(I0125_out),
        .Q(S152_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_31(of_pc_ii_31),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_207 \Instruction_Prefetch_Mux[0].PC_Mux_MUXF7 
       (.I0125_out(I0125_out),
        .Q(S152_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_31(of_pc_ii_31),
        .out(p_1_in153_in));
  system_microblaze_0_0__MB_FDR_208 \Instruction_Prefetch_Mux[10].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[21]),
        .I085_out(I085_out),
        .Q(S102_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_21(of_pc_ii_21),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_209 \Instruction_Prefetch_Mux[10].PC_Mux_MUXF7 
       (.I085_out(I085_out),
        .Q(S102_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_21(of_pc_ii_21),
        .out(p_1_in103_in));
  system_microblaze_0_0__MB_FDR_210 \Instruction_Prefetch_Mux[11].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[20]),
        .I081_out(I081_out),
        .Q(S97_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_20(of_pc_ii_20),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_211 \Instruction_Prefetch_Mux[11].PC_Mux_MUXF7 
       (.I081_out(I081_out),
        .Q(S97_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_20(of_pc_ii_20),
        .out(p_1_in98_in));
  system_microblaze_0_0__MB_FDR_212 \Instruction_Prefetch_Mux[12].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[19]),
        .I077_out(I077_out),
        .Q(S92_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_19(of_pc_ii_19),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_213 \Instruction_Prefetch_Mux[12].PC_Mux_MUXF7 
       (.I077_out(I077_out),
        .Q(S92_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_19(of_pc_ii_19),
        .out(p_1_in93_in));
  system_microblaze_0_0__MB_FDR_214 \Instruction_Prefetch_Mux[13].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[18]),
        .I073_out(I073_out),
        .Q(S87_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_18(of_pc_ii_18),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_215 \Instruction_Prefetch_Mux[13].PC_Mux_MUXF7 
       (.I073_out(I073_out),
        .Q(S87_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_18(of_pc_ii_18),
        .out(p_1_in88_in));
  system_microblaze_0_0__MB_FDR_216 \Instruction_Prefetch_Mux[14].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[17]),
        .I069_out(I069_out),
        .Q(S82_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_17(of_pc_ii_17),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_217 \Instruction_Prefetch_Mux[14].PC_Mux_MUXF7 
       (.I069_out(I069_out),
        .Q(S82_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_17(of_pc_ii_17),
        .out(p_1_in83_in));
  system_microblaze_0_0__MB_FDR_218 \Instruction_Prefetch_Mux[15].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[16]),
        .I065_out(I065_out),
        .Q(S77_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_16(of_pc_ii_16),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_219 \Instruction_Prefetch_Mux[15].PC_Mux_MUXF7 
       (.I065_out(I065_out),
        .Q(S77_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_16(of_pc_ii_16),
        .out(p_1_in78_in));
  system_microblaze_0_0__MB_FDR_220 \Instruction_Prefetch_Mux[16].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[15]),
        .I061_out(I061_out),
        .Q(S72_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_15(of_pc_ii_15),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_221 \Instruction_Prefetch_Mux[16].PC_Mux_MUXF7 
       (.I061_out(I061_out),
        .Q(S72_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_15(of_pc_ii_15),
        .out(p_1_in73_in));
  system_microblaze_0_0__MB_FDR_222 \Instruction_Prefetch_Mux[17].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[14]),
        .I057_out(I057_out),
        .Q(S67_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_14(of_pc_ii_14),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_223 \Instruction_Prefetch_Mux[17].PC_Mux_MUXF7 
       (.I057_out(I057_out),
        .Q(S67_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_14(of_pc_ii_14),
        .out(p_1_in68_in));
  system_microblaze_0_0__MB_FDR_224 \Instruction_Prefetch_Mux[18].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[13]),
        .I053_out(I053_out),
        .Q(S62_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_13(of_pc_ii_13),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_225 \Instruction_Prefetch_Mux[18].PC_Mux_MUXF7 
       (.I053_out(I053_out),
        .Q(S62_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_13(of_pc_ii_13),
        .out(p_1_in63_in));
  system_microblaze_0_0__MB_FDR_226 \Instruction_Prefetch_Mux[19].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[12]),
        .I049_out(I049_out),
        .Q(S57_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_12(of_pc_ii_12),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_227 \Instruction_Prefetch_Mux[19].PC_Mux_MUXF7 
       (.I049_out(I049_out),
        .Q(S57_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_12(of_pc_ii_12),
        .out(p_1_in58_in));
  system_microblaze_0_0__MB_FDR_228 \Instruction_Prefetch_Mux[1].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[30]),
        .I0121_out(I0121_out),
        .Q(S147_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_30(of_pc_ii_30),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_229 \Instruction_Prefetch_Mux[1].PC_Mux_MUXF7 
       (.I0121_out(I0121_out),
        .Q(S147_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_30(of_pc_ii_30),
        .out(p_1_in148_in));
  system_microblaze_0_0__MB_FDR_230 \Instruction_Prefetch_Mux[20].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[11]),
        .I045_out(I045_out),
        .Q(S52_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_11(of_pc_ii_11),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_231 \Instruction_Prefetch_Mux[20].PC_Mux_MUXF7 
       (.I045_out(I045_out),
        .Q(S52_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_11(of_pc_ii_11),
        .out(p_1_in53_in));
  system_microblaze_0_0__MB_FDR_232 \Instruction_Prefetch_Mux[21].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[10]),
        .I041_out(I041_out),
        .Q(S47_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_10(of_pc_ii_10),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_233 \Instruction_Prefetch_Mux[21].PC_Mux_MUXF7 
       (.I041_out(I041_out),
        .Q(S47_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_10(of_pc_ii_10),
        .out(p_1_in48_in));
  system_microblaze_0_0__MB_FDR_234 \Instruction_Prefetch_Mux[22].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[9]),
        .I037_out(I037_out),
        .Q(S42_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_9(of_pc_ii_9),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_235 \Instruction_Prefetch_Mux[22].PC_Mux_MUXF7 
       (.I037_out(I037_out),
        .Q(S42_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_9(of_pc_ii_9),
        .out(p_1_in43_in));
  system_microblaze_0_0__MB_FDR_236 \Instruction_Prefetch_Mux[23].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[8]),
        .I033_out(I033_out),
        .Q(S37_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_8(of_pc_ii_8),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_237 \Instruction_Prefetch_Mux[23].PC_Mux_MUXF7 
       (.I033_out(I033_out),
        .Q(S37_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_8(of_pc_ii_8),
        .out(p_1_in38_in));
  system_microblaze_0_0__MB_FDR_238 \Instruction_Prefetch_Mux[24].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[7]),
        .I029_out(I029_out),
        .Q(S32_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_7(of_pc_ii_7),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_239 \Instruction_Prefetch_Mux[24].PC_Mux_MUXF7 
       (.I029_out(I029_out),
        .Q(S32_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_7(of_pc_ii_7),
        .out(p_1_in33_in));
  system_microblaze_0_0__MB_FDR_240 \Instruction_Prefetch_Mux[25].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[6]),
        .I025_out(I025_out),
        .Q(S27_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_6(of_pc_ii_6),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_241 \Instruction_Prefetch_Mux[25].PC_Mux_MUXF7 
       (.I025_out(I025_out),
        .Q(S27_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_6(of_pc_ii_6),
        .out(p_1_in28_in));
  system_microblaze_0_0__MB_FDR_242 \Instruction_Prefetch_Mux[26].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[5]),
        .I021_out(I021_out),
        .Q(S22_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_5(of_pc_ii_5),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_243 \Instruction_Prefetch_Mux[26].PC_Mux_MUXF7 
       (.I021_out(I021_out),
        .Q(S22_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_5(of_pc_ii_5),
        .out(p_1_in23_in));
  system_microblaze_0_0__MB_FDR_244 \Instruction_Prefetch_Mux[27].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[4]),
        .I017_out(I017_out),
        .Q(S17_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_4(of_pc_ii_4),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_245 \Instruction_Prefetch_Mux[27].PC_Mux_MUXF7 
       (.I017_out(I017_out),
        .Q(S17_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_4(of_pc_ii_4),
        .out(p_1_in18_in));
  system_microblaze_0_0__MB_FDR_246 \Instruction_Prefetch_Mux[28].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[3]),
        .I013_out(I013_out),
        .Q(S12_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_3(of_pc_ii_3),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_247 \Instruction_Prefetch_Mux[28].PC_Mux_MUXF7 
       (.I013_out(I013_out),
        .Q(S12_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_3(of_pc_ii_3),
        .out(p_1_in13_in));
  system_microblaze_0_0__MB_FDR_248 \Instruction_Prefetch_Mux[29].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[2]),
        .I09_out(I09_out),
        .Q(S),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_2(of_pc_ii_2),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_249 \Instruction_Prefetch_Mux[29].PC_Mux_MUXF7 
       (.I09_out(I09_out),
        .Q(S),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_2(of_pc_ii_2),
        .out(p_1_in8_in));
  system_microblaze_0_0__MB_FDR_250 \Instruction_Prefetch_Mux[2].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[29]),
        .I0117_out(I0117_out),
        .Q(S142_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_29(of_pc_ii_29),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_251 \Instruction_Prefetch_Mux[2].PC_Mux_MUXF7 
       (.I0117_out(I0117_out),
        .Q(S142_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_29(of_pc_ii_29),
        .out(p_1_in143_in));
  system_microblaze_0_0__MB_FDR_252 \Instruction_Prefetch_Mux[30].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[1]),
        .I05_out(I05_out),
        .Q(\if_pc_reg[30]_0 [1]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_1(of_pc_ii_1),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_253 \Instruction_Prefetch_Mux[30].PC_Mux_MUXF7 
       (.I05_out(I05_out),
        .Q(\if_pc_reg[30]_0 [1]),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_1(of_pc_ii_1),
        .out(p_2_in4_in));
  system_microblaze_0_0__MB_FDR_254 \Instruction_Prefetch_Mux[31].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[0]),
        .I0(I0),
        .Q(\if_pc_reg[30]_0 [0]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_0(of_pc_ii_0),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_255 \Instruction_Prefetch_Mux[31].PC_Mux_MUXF7 
       (.I0(I0),
        .Q(\if_pc_reg[30]_0 [0]),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_0(of_pc_ii_0),
        .out(\PC_Buffer_reg[3][31]_srl4_n_0 ));
  system_microblaze_0_0__MB_FDR_256 \Instruction_Prefetch_Mux[3].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[28]),
        .I0113_out(I0113_out),
        .Q(S137_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_28(of_pc_ii_28),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_257 \Instruction_Prefetch_Mux[3].PC_Mux_MUXF7 
       (.I0113_out(I0113_out),
        .Q(S137_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_28(of_pc_ii_28),
        .out(p_1_in138_in));
  system_microblaze_0_0__MB_FDR_258 \Instruction_Prefetch_Mux[4].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[27]),
        .I0109_out(I0109_out),
        .Q(S132_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_27(of_pc_ii_27),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_259 \Instruction_Prefetch_Mux[4].PC_Mux_MUXF7 
       (.I0109_out(I0109_out),
        .Q(S132_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_27(of_pc_ii_27),
        .out(p_1_in133_in));
  system_microblaze_0_0__MB_FDR_260 \Instruction_Prefetch_Mux[5].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[26]),
        .I0105_out(I0105_out),
        .Q(S127_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_26(of_pc_ii_26),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_261 \Instruction_Prefetch_Mux[5].PC_Mux_MUXF7 
       (.I0105_out(I0105_out),
        .Q(S127_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_26(of_pc_ii_26),
        .out(p_1_in128_in));
  system_microblaze_0_0__MB_FDR_262 \Instruction_Prefetch_Mux[6].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[25]),
        .I0101_out(I0101_out),
        .Q(S122_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_25(of_pc_ii_25),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_263 \Instruction_Prefetch_Mux[6].PC_Mux_MUXF7 
       (.I0101_out(I0101_out),
        .Q(S122_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_25(of_pc_ii_25),
        .out(p_1_in123_in));
  system_microblaze_0_0__MB_FDR_264 \Instruction_Prefetch_Mux[7].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[24]),
        .I097_out(I097_out),
        .Q(S117_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_24(of_pc_ii_24),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_265 \Instruction_Prefetch_Mux[7].PC_Mux_MUXF7 
       (.I097_out(I097_out),
        .Q(S117_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_24(of_pc_ii_24),
        .out(p_1_in118_in));
  system_microblaze_0_0__MB_FDR_266 \Instruction_Prefetch_Mux[8].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[23]),
        .I093_out(I093_out),
        .Q(S112_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_23(of_pc_ii_23),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_267 \Instruction_Prefetch_Mux[8].PC_Mux_MUXF7 
       (.I093_out(I093_out),
        .Q(S112_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_23(of_pc_ii_23),
        .out(p_1_in113_in));
  system_microblaze_0_0__MB_FDR_268 \Instruction_Prefetch_Mux[9].Gen_Instr_DFF 
       (.Clk(Clk),
        .D(D[22]),
        .I089_out(I089_out),
        .Q(S107_in),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .if_sel_input(if_sel_input[0]),
        .of_pc_ii_22(of_pc_ii_22),
        .sync_reset(reset_bool_for_rst));
  system_microblaze_0_0__MB_MUXF7_269 \Instruction_Prefetch_Mux[9].PC_Mux_MUXF7 
       (.I089_out(I089_out),
        .Q(S107_in),
        .\Using_FPGA.Native_0 (of_PipeRun_for_ce),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .of_pc_ii_22(of_pc_ii_22),
        .out(p_1_in108_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][0]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][0]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S152_in),
        .Q(p_1_in153_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][10]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][10]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S102_in),
        .Q(p_1_in103_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][11]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][11]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S97_in),
        .Q(p_1_in98_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][12]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][12]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S92_in),
        .Q(p_1_in93_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][13]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][13]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S87_in),
        .Q(p_1_in88_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][14]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][14]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S82_in),
        .Q(p_1_in83_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][15]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][15]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S77_in),
        .Q(p_1_in78_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][16]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][16]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S72_in),
        .Q(p_1_in73_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][17]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][17]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S67_in),
        .Q(p_1_in68_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][18]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][18]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S62_in),
        .Q(p_1_in63_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][19]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][19]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S57_in),
        .Q(p_1_in58_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][1]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][1]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S147_in),
        .Q(p_1_in148_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][20]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][20]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S52_in),
        .Q(p_1_in53_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][21]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][21]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S47_in),
        .Q(p_1_in48_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][22]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][22]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S42_in),
        .Q(p_1_in43_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][23]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][23]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S37_in),
        .Q(p_1_in38_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][24]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][24]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S32_in),
        .Q(p_1_in33_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][25]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][25]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S27_in),
        .Q(p_1_in28_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][26]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][26]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S22_in),
        .Q(p_1_in23_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][27]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][27]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S17_in),
        .Q(p_1_in18_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][28]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][28]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S12_in),
        .Q(p_1_in13_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][29]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][29]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S),
        .Q(p_1_in8_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][2]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][2]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S142_in),
        .Q(p_1_in143_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][30]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][30]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(\if_pc_reg[30]_0 [1]),
        .Q(p_2_in4_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][31]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][31]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(\if_pc_reg[30]_0 [0]),
        .Q(\PC_Buffer_reg[3][31]_srl4_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][3]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][3]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S137_in),
        .Q(p_1_in138_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][4]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][4]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S132_in),
        .Q(p_1_in133_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][5]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][5]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S127_in),
        .Q(p_1_in128_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][6]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][6]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S122_in),
        .Q(p_1_in123_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][7]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][7]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S117_in),
        .Q(p_1_in118_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][8]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][8]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S112_in),
        .Q(p_1_in113_in));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PC_Module_I/PC_Buffer_reg[3][9]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \PC_Buffer_reg[3][9]_srl4 
       (.A0(if_pre_buffer_addr),
        .A1(if_sel_input[1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(\Using_FPGA.Native_0 ),
        .CLK(Clk),
        .D(S107_in),
        .Q(p_1_in108_in));
  system_microblaze_0_0__MB_MUXCY_XORCY \Using_FPGA.Incr_PC[0].MUXCY_XOR_I 
       (.LO(\Using_FPGA.Incr_PC[1].MUXCY_XOR_I_n_0 ),
        .Q(S152_in),
        .\if_pc_reg[0] (\if_pc_reg[0]_0 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_270 \Using_FPGA.Incr_PC[10].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[10] (\if_pc_reg[10]_0 ),
        .\if_pc_reg[10]_0 (\NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_if_pc_reg[10]_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[10].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_42),
        .lopt_2(lopt_46));
  system_microblaze_0_0__MB_MUXCY_XORCY_271 \Using_FPGA.Incr_PC[11].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[11] (\if_pc_reg[11]_0 ),
        .\if_pc_reg[11]_0 (\NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_if_pc_reg[11]_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[11].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_40),
        .lopt_2(lopt_45));
  system_microblaze_0_0__MB_MUXCY_XORCY_272 \Using_FPGA.Incr_PC[12].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[12].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(S92_in),
        .\if_pc_reg[12] (\if_pc_reg[12]_0 ),
        .\if_pc_reg[12]_0 (\Using_FPGA.Incr_PC[13].MUXCY_XOR_I_n_0 ),
        .lopt(\NLW_Using_FPGA.Incr_PC[12].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_40),
        .lopt_10(lopt_46),
        .lopt_11(lopt_47),
        .lopt_2(S97_in),
        .lopt_3(\NLW_Using_FPGA.Incr_PC[12].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_42),
        .lopt_5(S102_in),
        .lopt_6(lopt_43),
        .lopt_7(lopt_44),
        .lopt_8(S107_in),
        .lopt_9(lopt_45));
  system_microblaze_0_0__MB_MUXCY_XORCY_273 \Using_FPGA.Incr_PC[13].MUXCY_XOR_I 
       (.LO(\Using_FPGA.Incr_PC[13].MUXCY_XOR_I_n_0 ),
        .Q(\NLW_Using_FPGA.Incr_PC[13].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[13] (\if_pc_reg[13]_0 ),
        .\if_pc_reg[13]_0 (\NLW_Using_FPGA.Incr_PC[13].MUXCY_XOR_I_if_pc_reg[13]_0_UNCONNECTED ),
        .lopt(lopt_34),
        .lopt_1(lopt_35),
        .lopt_2(lopt_38));
  system_microblaze_0_0__MB_MUXCY_XORCY_274 \Using_FPGA.Incr_PC[14].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[14] (\if_pc_reg[14]_0 ),
        .\if_pc_reg[14]_0 (\NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_if_pc_reg[14]_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[14].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_33),
        .lopt_2(lopt_37));
  system_microblaze_0_0__MB_MUXCY_XORCY_275 \Using_FPGA.Incr_PC[15].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[15] (\if_pc_reg[15]_0 ),
        .\if_pc_reg[15]_0 (\NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_if_pc_reg[15]_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[15].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_31),
        .lopt_2(lopt_36));
  system_microblaze_0_0__MB_MUXCY_XORCY_276 \Using_FPGA.Incr_PC[16].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[16].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(S72_in),
        .\if_pc_reg[16] (\if_pc_reg[16]_0 ),
        .\if_pc_reg[16]_0 (\Using_FPGA.Incr_PC[17].MUXCY_XOR_I_n_0 ),
        .lopt(\NLW_Using_FPGA.Incr_PC[16].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_31),
        .lopt_10(lopt_37),
        .lopt_11(lopt_38),
        .lopt_2(S77_in),
        .lopt_3(\NLW_Using_FPGA.Incr_PC[16].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_33),
        .lopt_5(S82_in),
        .lopt_6(lopt_34),
        .lopt_7(lopt_35),
        .lopt_8(S87_in),
        .lopt_9(lopt_36));
  system_microblaze_0_0__MB_MUXCY_XORCY_277 \Using_FPGA.Incr_PC[17].MUXCY_XOR_I 
       (.LO(\Using_FPGA.Incr_PC[17].MUXCY_XOR_I_n_0 ),
        .Q(\NLW_Using_FPGA.Incr_PC[17].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[17] (\if_pc_reg[17]_0 ),
        .\if_pc_reg[17]_0 (\NLW_Using_FPGA.Incr_PC[17].MUXCY_XOR_I_if_pc_reg[17]_0_UNCONNECTED ),
        .lopt(lopt_25),
        .lopt_1(lopt_26),
        .lopt_2(lopt_29));
  system_microblaze_0_0__MB_MUXCY_XORCY_278 \Using_FPGA.Incr_PC[18].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[18] (\if_pc_reg[18]_0 ),
        .\if_pc_reg[18]_0 (\NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_if_pc_reg[18]_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[18].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_24),
        .lopt_2(lopt_28));
  system_microblaze_0_0__MB_MUXCY_XORCY_279 \Using_FPGA.Incr_PC[19].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[19] (\if_pc_reg[19]_0 ),
        .\if_pc_reg[19]_0 (\NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_if_pc_reg[19]_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[19].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_22),
        .lopt_2(lopt_27));
  system_microblaze_0_0__MB_MUXCY_XORCY_280 \Using_FPGA.Incr_PC[1].MUXCY_XOR_I 
       (.LO(\Using_FPGA.Incr_PC[1].MUXCY_XOR_I_n_0 ),
        .Q(\NLW_Using_FPGA.Incr_PC[1].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[1] (\if_pc_reg[1]_0 ),
        .\if_pc_reg[1]_0 (\NLW_Using_FPGA.Incr_PC[1].MUXCY_XOR_I_if_pc_reg[1]_0_UNCONNECTED ),
        .lopt(lopt_61),
        .lopt_1(lopt_62),
        .lopt_2(lopt_65));
  system_microblaze_0_0__MB_MUXCY_XORCY_281 \Using_FPGA.Incr_PC[20].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[20].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(S52_in),
        .\if_pc_reg[20] (\if_pc_reg[20]_0 ),
        .\if_pc_reg[20]_0 (\Using_FPGA.Incr_PC[21].MUXCY_XOR_I_n_0 ),
        .lopt(\NLW_Using_FPGA.Incr_PC[20].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_22),
        .lopt_10(lopt_28),
        .lopt_11(lopt_29),
        .lopt_2(S57_in),
        .lopt_3(\NLW_Using_FPGA.Incr_PC[20].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_24),
        .lopt_5(S62_in),
        .lopt_6(lopt_25),
        .lopt_7(lopt_26),
        .lopt_8(S67_in),
        .lopt_9(lopt_27));
  system_microblaze_0_0__MB_MUXCY_XORCY_282 \Using_FPGA.Incr_PC[21].MUXCY_XOR_I 
       (.LO(\Using_FPGA.Incr_PC[21].MUXCY_XOR_I_n_0 ),
        .Q(\NLW_Using_FPGA.Incr_PC[21].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[21] (\if_pc_reg[21]_0 ),
        .\if_pc_reg[21]_0 (\NLW_Using_FPGA.Incr_PC[21].MUXCY_XOR_I_if_pc_reg[21]_0_UNCONNECTED ),
        .lopt(lopt_16),
        .lopt_1(lopt_17),
        .lopt_2(lopt_20));
  system_microblaze_0_0__MB_MUXCY_XORCY_283 \Using_FPGA.Incr_PC[22].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[22] (\if_pc_reg[22]_0 ),
        .\if_pc_reg[22]_0 (\NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_if_pc_reg[22]_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[22].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_15),
        .lopt_2(lopt_19));
  system_microblaze_0_0__MB_MUXCY_XORCY_284 \Using_FPGA.Incr_PC[23].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[23] (\if_pc_reg[23]_0 ),
        .\if_pc_reg[23]_0 (\NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_if_pc_reg[23]_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[23].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_13),
        .lopt_2(lopt_18));
  system_microblaze_0_0__MB_MUXCY_XORCY_285 \Using_FPGA.Incr_PC[24].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[24].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(S32_in),
        .\if_pc_reg[24] (\if_pc_reg[24]_0 ),
        .\if_pc_reg[24]_0 (\Using_FPGA.Incr_PC[25].MUXCY_XOR_I_n_0 ),
        .lopt(\NLW_Using_FPGA.Incr_PC[24].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_13),
        .lopt_10(lopt_19),
        .lopt_11(lopt_20),
        .lopt_2(S37_in),
        .lopt_3(\NLW_Using_FPGA.Incr_PC[24].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_15),
        .lopt_5(S42_in),
        .lopt_6(lopt_16),
        .lopt_7(lopt_17),
        .lopt_8(S47_in),
        .lopt_9(lopt_18));
  system_microblaze_0_0__MB_MUXCY_XORCY_286 \Using_FPGA.Incr_PC[25].MUXCY_XOR_I 
       (.LO(\Using_FPGA.Incr_PC[25].MUXCY_XOR_I_n_0 ),
        .Q(\NLW_Using_FPGA.Incr_PC[25].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[25] (\if_pc_reg[25]_0 ),
        .\if_pc_reg[25]_0 (\NLW_Using_FPGA.Incr_PC[25].MUXCY_XOR_I_if_pc_reg[25]_0_UNCONNECTED ),
        .lopt(lopt_7),
        .lopt_1(lopt_8),
        .lopt_2(lopt_11));
  system_microblaze_0_0__MB_MUXCY_XORCY_287 \Using_FPGA.Incr_PC[26].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[26] (\if_pc_reg[26]_0 ),
        .\if_pc_reg[26]_0 (\NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_if_pc_reg[26]_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[26].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_6),
        .lopt_2(lopt_10));
  system_microblaze_0_0__MB_MUXCY_XORCY_288 \Using_FPGA.Incr_PC[27].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[27] (\if_pc_reg[27]_0 ),
        .\if_pc_reg[27]_0 (\NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_if_pc_reg[27]_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[27].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_4),
        .lopt_2(lopt_9));
  system_microblaze_0_0__MB_MUXCY_XORCY_289 \Using_FPGA.Incr_PC[28].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[28].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(S12_in),
        .\if_pc_reg[28] (\if_pc_reg[28]_0 ),
        .\if_pc_reg[28]_0 (LO),
        .lopt(\NLW_Using_FPGA.Incr_PC[28].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_4),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(S17_in),
        .lopt_3(\NLW_Using_FPGA.Incr_PC[28].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_6),
        .lopt_5(S22_in),
        .lopt_6(lopt_7),
        .lopt_7(lopt_8),
        .lopt_8(S27_in),
        .lopt_9(lopt_9));
  system_microblaze_0_0__MB_MUXCY_XORCY_290 \Using_FPGA.Incr_PC[29].MUXCY_XOR_I 
       (.CI(\NLW_Using_FPGA.Incr_PC[29].MUXCY_XOR_I_CI_UNCONNECTED ),
        .LO(LO),
        .O(O),
        .Q(\NLW_Using_FPGA.Incr_PC[29].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(\^lopt_2 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_291 \Using_FPGA.Incr_PC[2].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[2] (\if_pc_reg[2]_0 ),
        .\if_pc_reg[2]_0 (\NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_if_pc_reg[2]_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[2].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_60),
        .lopt_2(lopt_64));
  system_microblaze_0_0__MB_MUXCY_XORCY_292 \Using_FPGA.Incr_PC[3].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[3] (\if_pc_reg[3]_0 ),
        .\if_pc_reg[3]_0 (\NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_if_pc_reg[3]_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[3].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_58),
        .lopt_2(lopt_63));
  system_microblaze_0_0__MB_MUXCY_XORCY_293 \Using_FPGA.Incr_PC[4].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[4].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(S132_in),
        .\if_pc_reg[4] (\if_pc_reg[4]_0 ),
        .\if_pc_reg[4]_0 (\Using_FPGA.Incr_PC[5].MUXCY_XOR_I_n_0 ),
        .lopt(\NLW_Using_FPGA.Incr_PC[4].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_58),
        .lopt_10(lopt_64),
        .lopt_11(lopt_65),
        .lopt_2(S137_in),
        .lopt_3(\NLW_Using_FPGA.Incr_PC[4].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_60),
        .lopt_5(S142_in),
        .lopt_6(lopt_61),
        .lopt_7(lopt_62),
        .lopt_8(S147_in),
        .lopt_9(lopt_63));
  system_microblaze_0_0__MB_MUXCY_XORCY_294 \Using_FPGA.Incr_PC[5].MUXCY_XOR_I 
       (.LO(\Using_FPGA.Incr_PC[5].MUXCY_XOR_I_n_0 ),
        .Q(\NLW_Using_FPGA.Incr_PC[5].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[5] (\if_pc_reg[5]_0 ),
        .\if_pc_reg[5]_0 (\NLW_Using_FPGA.Incr_PC[5].MUXCY_XOR_I_if_pc_reg[5]_0_UNCONNECTED ),
        .lopt(lopt_52),
        .lopt_1(lopt_53),
        .lopt_2(lopt_56));
  system_microblaze_0_0__MB_MUXCY_XORCY_295 \Using_FPGA.Incr_PC[6].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[6] (\if_pc_reg[6]_0 ),
        .\if_pc_reg[6]_0 (\NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_if_pc_reg[6]_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[6].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_51),
        .lopt_2(lopt_55));
  system_microblaze_0_0__MB_MUXCY_XORCY_296 \Using_FPGA.Incr_PC[7].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(\NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[7] (\if_pc_reg[7]_0 ),
        .\if_pc_reg[7]_0 (\NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_if_pc_reg[7]_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA.Incr_PC[7].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_49),
        .lopt_2(lopt_54));
  system_microblaze_0_0__MB_MUXCY_XORCY_297 \Using_FPGA.Incr_PC[8].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA.Incr_PC[8].MUXCY_XOR_I_LO_UNCONNECTED ),
        .Q(S112_in),
        .\if_pc_reg[8] (\if_pc_reg[8]_0 ),
        .\if_pc_reg[8]_0 (\Using_FPGA.Incr_PC[9].MUXCY_XOR_I_n_0 ),
        .lopt(\NLW_Using_FPGA.Incr_PC[8].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_49),
        .lopt_10(lopt_55),
        .lopt_11(lopt_56),
        .lopt_2(S117_in),
        .lopt_3(\NLW_Using_FPGA.Incr_PC[8].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_51),
        .lopt_5(S122_in),
        .lopt_6(lopt_52),
        .lopt_7(lopt_53),
        .lopt_8(S127_in),
        .lopt_9(lopt_54));
  system_microblaze_0_0__MB_MUXCY_XORCY_298 \Using_FPGA.Incr_PC[9].MUXCY_XOR_I 
       (.CI(\NLW_Using_FPGA.Incr_PC[9].MUXCY_XOR_I_CI_UNCONNECTED ),
        .LO(\Using_FPGA.Incr_PC[9].MUXCY_XOR_I_n_0 ),
        .Q(\NLW_Using_FPGA.Incr_PC[9].MUXCY_XOR_I_Q_UNCONNECTED [0]),
        .\if_pc_reg[9] (\if_pc_reg[9]_0 ),
        .lopt(lopt_43),
        .lopt_1(lopt_44),
        .lopt_2(lopt_47));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[0] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[31]),
        .Q(ex_pc[0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[10] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[21]),
        .Q(ex_pc[10]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[11] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[20]),
        .Q(ex_pc[11]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[12] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[19]),
        .Q(ex_pc[12]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[13] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[18]),
        .Q(ex_pc[13]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[14] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[17]),
        .Q(ex_pc[14]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[15] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[16]),
        .Q(ex_pc[15]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[16] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[15]),
        .Q(ex_pc[16]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[17] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[14]),
        .Q(ex_pc[17]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[18] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[13]),
        .Q(ex_pc[18]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[19] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[12]),
        .Q(ex_pc[19]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[1] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[30]),
        .Q(ex_pc[1]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[20] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[11]),
        .Q(ex_pc[20]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[21] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[10]),
        .Q(ex_pc[21]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[22] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[9]),
        .Q(ex_pc[22]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[23] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[8]),
        .Q(ex_pc[23]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[24] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[7]),
        .Q(ex_pc[24]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[25] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[6]),
        .Q(ex_pc[25]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[26] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[5]),
        .Q(ex_pc[26]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[27] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[4]),
        .Q(ex_pc[27]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[28] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[3]),
        .Q(ex_pc[28]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[29] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[2]),
        .Q(ex_pc[29]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[2] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[29]),
        .Q(ex_pc[2]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[30] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[1]),
        .Q(ex_pc[30]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[31] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[0]),
        .Q(ex_pc[31]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[3] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[28]),
        .Q(ex_pc[3]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[4] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[27]),
        .Q(ex_pc[4]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[5] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[26]),
        .Q(ex_pc[5]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[6] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[25]),
        .Q(ex_pc[6]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[7] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[24]),
        .Q(ex_pc[7]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[8] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[23]),
        .Q(ex_pc[8]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \ex_pc_i_reg[9] 
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(D[22]),
        .Q(ex_pc[9]),
        .R(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[0] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [31]),
        .Q(S152_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[10] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [21]),
        .Q(S102_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[11] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [20]),
        .Q(S97_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[12] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [19]),
        .Q(S92_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[13] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [18]),
        .Q(S87_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[14] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [17]),
        .Q(S82_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[15] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [16]),
        .Q(S77_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[16] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [15]),
        .Q(S72_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[17] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [14]),
        .Q(S67_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[18] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [13]),
        .Q(S62_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[19] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [12]),
        .Q(S57_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[1] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [30]),
        .Q(S147_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[20] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [11]),
        .Q(S52_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[21] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [10]),
        .Q(S47_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[22] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [9]),
        .Q(S42_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[23] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [8]),
        .Q(S37_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[24] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [7]),
        .Q(S32_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[25] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [6]),
        .Q(S27_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[26] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [5]),
        .Q(S22_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[27] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [4]),
        .Q(S17_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[28] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [3]),
        .Q(S12_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[29] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [2]),
        .Q(S),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[2] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [29]),
        .Q(S142_in),
        .S(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \if_pc_reg[30] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [1]),
        .Q(\if_pc_reg[30]_0 [1]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \if_pc_reg[31] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [0]),
        .Q(\if_pc_reg[30]_0 [0]),
        .R(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[3] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [28]),
        .Q(S137_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[4] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [27]),
        .Q(S132_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[5] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [26]),
        .Q(S127_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[6] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [25]),
        .Q(S122_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[7] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [24]),
        .Q(S117_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[8] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [23]),
        .Q(S112_in),
        .S(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    \if_pc_reg[9] 
       (.C(Clk),
        .CE(\if_pc_reg[0]_1 ),
        .D(\if_pc_reg[0]_2 [22]),
        .Q(S107_in),
        .S(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[0] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[0]),
        .Q(\mem_pc_i_reg[0]_0 [31]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[10] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[10]),
        .Q(\mem_pc_i_reg[0]_0 [21]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[11] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[11]),
        .Q(\mem_pc_i_reg[0]_0 [20]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[12] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[12]),
        .Q(\mem_pc_i_reg[0]_0 [19]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[13] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[13]),
        .Q(\mem_pc_i_reg[0]_0 [18]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[14] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[14]),
        .Q(\mem_pc_i_reg[0]_0 [17]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[15] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[15]),
        .Q(\mem_pc_i_reg[0]_0 [16]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[16] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[16]),
        .Q(\mem_pc_i_reg[0]_0 [15]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[17] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[17]),
        .Q(\mem_pc_i_reg[0]_0 [14]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[18] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[18]),
        .Q(\mem_pc_i_reg[0]_0 [13]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[19] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[19]),
        .Q(\mem_pc_i_reg[0]_0 [12]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[1] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[1]),
        .Q(\mem_pc_i_reg[0]_0 [30]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[20] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[20]),
        .Q(\mem_pc_i_reg[0]_0 [11]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[21] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[21]),
        .Q(\mem_pc_i_reg[0]_0 [10]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[22] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[22]),
        .Q(\mem_pc_i_reg[0]_0 [9]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[23] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[23]),
        .Q(\mem_pc_i_reg[0]_0 [8]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[24] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[24]),
        .Q(\mem_pc_i_reg[0]_0 [7]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[25] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[25]),
        .Q(\mem_pc_i_reg[0]_0 [6]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[26] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[26]),
        .Q(\mem_pc_i_reg[0]_0 [5]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[27] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[27]),
        .Q(\mem_pc_i_reg[0]_0 [4]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[28] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[28]),
        .Q(\mem_pc_i_reg[0]_0 [3]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[29] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[29]),
        .Q(\mem_pc_i_reg[0]_0 [2]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[2] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[2]),
        .Q(\mem_pc_i_reg[0]_0 [29]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[30] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[30]),
        .Q(\mem_pc_i_reg[0]_0 [1]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[31] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[31]),
        .Q(\mem_pc_i_reg[0]_0 [0]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[3] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[3]),
        .Q(\mem_pc_i_reg[0]_0 [28]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[4] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[4]),
        .Q(\mem_pc_i_reg[0]_0 [27]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[5] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[5]),
        .Q(\mem_pc_i_reg[0]_0 [26]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[6] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[6]),
        .Q(\mem_pc_i_reg[0]_0 [25]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[7] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[7]),
        .Q(\mem_pc_i_reg[0]_0 [24]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[8] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[8]),
        .Q(\mem_pc_i_reg[0]_0 [23]),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    \mem_pc_i_reg[9] 
       (.C(Clk),
        .CE(E),
        .D(ex_pc[9]),
        .Q(\mem_pc_i_reg[0]_0 [22]),
        .R(reset_bool_for_rst));
endmodule

(* ORIG_REF_NAME = "PreFetch_Buffer_gti" *) 
module system_microblaze_0_0__PreFetch_Buffer_gti
   (of_instr_raw,
    D,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    of_gpr_op1_rd_addr,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \Using_FPGA.Native_13 ,
    \Using_FPGA.Native_14 ,
    \Using_FPGA.Native_15 ,
    \Using_FPGA.Native_16 ,
    \Using_FPGA.Native_17 ,
    \Using_FPGA.Native_18 ,
    \Using_FPGA.Native_19 ,
    \Using_FPGA.Native_20 ,
    of_predecode_raw,
    \Using_FPGA.Native_21 ,
    IReady_0,
    \Using_FPGA.Native_22 ,
    of_valid,
    \Using_FPGA.Native_23 ,
    ex_gpr_write_reg,
    ex_is_div_instr_I_reg,
    if_pre_buffer_addr,
    \Using_FPGA.Native_24 ,
    \Using_FPGA.Native_25 ,
    \Using_FPGA.Native_26 ,
    if_fetch_for_timing_optimization1,
    ex_op1_cmp_eq,
    ex_op1_cmp_eq1,
    ex_op1_cmp_eq_n5_out,
    \Using_FPGA.Native_27 ,
    use_Reg_Neg_DI1_out,
    force_Val10_out,
    use_Reg_Neg_S3_out,
    force12_out,
    \Using_FPGA.Native_28 ,
    \Using_FPGA.Native_29 ,
    ex_move_to_MSR_instr93_out,
    of_Sel_SPR_MSR1,
    ex_sel_alu_i_reg,
    mem_is_multi_or_load_instr_reg,
    of_use_op2_s,
    ex_sel_alu_i_reg_0,
    ex_sel_alu_i_reg_1,
    E,
    p_9_in,
    ex_sel_alu_i0,
    EX_SWAP_Instr,
    ex_load_shift_carry0,
    ex_mbar_is_sleep_cmb,
    ex_mbar_decode_cmb,
    \Using_FPGA.Native_30 ,
    D224_out,
    \Serial_Dbg_Intf.control_reg_reg[8] ,
    p_2_in,
    \Using_FPGA.Native_31 ,
    \Using_FPGA.Native_32 ,
    \Using_FPGA.Native_33 ,
    ex_enable_sext_shift_i0,
    if_fetch_in_progress_reg,
    wb_exception_i_reg,
    ex_valid_jump_reg,
    ex_valid_reg,
    \Using_FPGA.Native_34 ,
    \Using_FPGA.Native_35 ,
    \Using_FPGA.Native_36 ,
    \Using_FPGA.Native_37 ,
    \Using_FPGA.Native_38 ,
    ex_branch_with_delayslot_reg,
    \Using_FPGA.Native_39 ,
    \Using_FPGA.Native_40 ,
    \Using_FPGA.Native_41 ,
    \Using_FPGA.Native_42 ,
    \Using_FPGA.Native_43 ,
    \Using_FPGA.Native_44 ,
    \Using_FPGA.Native_45 ,
    \Using_FPGA.Native_46 ,
    \Using_FPGA.Native_47 ,
    \Using_FPGA.Native_48 ,
    \Using_FPGA.Native_49 ,
    \Using_FPGA.Native_50 ,
    \Using_FPGA.Native_51 ,
    \Using_FPGA.Native_52 ,
    \Using_FPGA.Native_53 ,
    \Using_FPGA.Native_54 ,
    \Using_FPGA.Native_55 ,
    \Using_FPGA.Native_56 ,
    \Using_FPGA.Native_57 ,
    \Using_FPGA.Native_58 ,
    \Using_FPGA.Native_59 ,
    \Using_FPGA.Native_60 ,
    \Using_FPGA.Native_61 ,
    \Using_FPGA.Native_62 ,
    \Using_FPGA.Native_63 ,
    \Using_FPGA.Native_64 ,
    \Using_FPGA.Native_65 ,
    \Using_FPGA.Native_66 ,
    \Using_FPGA.Native_67 ,
    \Using_FPGA.Native_68 ,
    \Using_FPGA.Native_69 ,
    \Using_FPGA.Native_70 ,
    \Using_FPGA.Native_71 ,
    \Using_FPGA.Native_72 ,
    \Using_FPGA.Native_73 ,
    \Using_FPGA.Native_74 ,
    I1_1,
    of_Sel_SPR_MSR88_out,
    ex_is_multi_or_load_instr0,
    of_op1_sel_spr,
    Dbg_Clean_Stop0,
    ex_set_bip,
    \Using_FPGA.Native_75 ,
    ex_valid_jump_reg_0,
    sync_reset,
    Clk,
    I139_out,
    I5,
    ex_branch_with_delayslot_i_reg_0,
    ex_gpr_write_reg_0,
    wb_exception,
    EX_Is_Div_Instr,
    ex_valid_jump_reg_1,
    ex_jump,
    out,
    IB_Ready,
    if_fetch_in_progress,
    in0,
    Q,
    in,
    \EX_Op3_reg[31] ,
    \EX_Op3_reg[31]_0 ,
    MEM_Fwd,
    GPR_Op2,
    \EX_Op3_reg[30] ,
    \EX_Op3_reg[30]_0 ,
    \EX_Op3_reg[29] ,
    \EX_Op3_reg[29]_0 ,
    \EX_Op3_reg[28] ,
    \EX_Op3_reg[28]_0 ,
    \EX_Op3_reg[27] ,
    \EX_Op3_reg[27]_0 ,
    \EX_Op3_reg[26] ,
    \EX_Op3_reg[26]_0 ,
    \EX_Op3_reg[25] ,
    \EX_Op3_reg[25]_0 ,
    \EX_Op3_reg[24] ,
    \EX_Op3_reg[24]_0 ,
    \EX_Op3_reg[23] ,
    \EX_Op3_reg[16] ,
    \EX_Op3_reg[22] ,
    \EX_Op3_reg[21] ,
    \EX_Op3_reg[20] ,
    \EX_Op3_reg[19] ,
    \EX_Op3_reg[18] ,
    \EX_Op3_reg[17] ,
    \EX_Op3_reg[16]_0 ,
    \EX_Op3_reg[15] ,
    \EX_Op3_reg[15]_0 ,
    \EX_Op2_reg[0] ,
    \EX_Op2_reg[0]_0 ,
    \EX_Op3_reg[14] ,
    \EX_Op3_reg[14]_0 ,
    \EX_Op3_reg[13] ,
    \EX_Op3_reg[13]_0 ,
    \EX_Op3_reg[12] ,
    \EX_Op3_reg[12]_0 ,
    \EX_Op3_reg[11] ,
    \EX_Op3_reg[11]_0 ,
    \EX_Op3_reg[10] ,
    \EX_Op3_reg[10]_0 ,
    \EX_Op3_reg[9] ,
    \EX_Op3_reg[9]_0 ,
    \EX_Op3_reg[8] ,
    \EX_Op3_reg[8]_0 ,
    \EX_Op3_reg[7] ,
    \EX_Op3_reg[7]_0 ,
    \EX_Op3_reg[6] ,
    \EX_Op3_reg[6]_0 ,
    \EX_Op3_reg[5] ,
    \EX_Op3_reg[5]_0 ,
    \EX_Op3_reg[4] ,
    \EX_Op3_reg[4]_0 ,
    \EX_Op3_reg[3] ,
    \EX_Op3_reg[3]_0 ,
    \EX_Op3_reg[2] ,
    \EX_Op3_reg[2]_0 ,
    \EX_Op3_reg[1] ,
    \EX_Op3_reg[1]_0 ,
    \EX_Op3_reg[0] ,
    \EX_Op3_reg[0]_0 ,
    of_read_mem_write_op2_conflict_part2,
    mem_is_multi_or_load_instr,
    of_read_mem_write_op2_conflict_part1,
    GPR_Op3,
    \Using_FPGA.Native_i_6__0 ,
    mem_valid_instr,
    mem_gpr_write,
    p_213_in,
    GPR_Op1,
    \Using_FPGA.Native_i_6__0_0 ,
    if_fetch_in_progress_reg_0,
    p_216_in,
    \Using_FPGA.Native_i_6__0_1 ,
    ex_mbar_is_sleep,
    ex_mbar_decode,
    \Performance_Debug_Control.ex_brki_hit_reg ,
    wb_gpr_write_i,
    \EX_Op3[0]_i_5 ,
    wb_reset,
    \EX_Op3[0]_i_6 ,
    I4,
    I0,
    if_fetch_in_progress_reg_1,
    ex_gpr_write_dbg,
    ex_valid_jump_reg_2,
    ex_valid_reg_0,
    ex_Exception_Taken,
    mem_exception_from_ex,
    ex_jump_nodelay,
    IReady,
    \Using_FPGA.Native_76 ,
    \Using_FPGA.Native_77 ,
    if_missed_fetch,
    ex_branch_with_delayslot,
    ex_jump_q,
    \EX_Op1_reg[0] ,
    ex_MSR);
  output [5:0]of_instr_raw;
  output [1:0]D;
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  output \Using_FPGA.Native_2 ;
  output \Using_FPGA.Native_3 ;
  output \Using_FPGA.Native_4 ;
  output \Using_FPGA.Native_5 ;
  output [0:0]of_gpr_op1_rd_addr;
  output \Using_FPGA.Native_6 ;
  output \Using_FPGA.Native_7 ;
  output \Using_FPGA.Native_8 ;
  output \Using_FPGA.Native_9 ;
  output \Using_FPGA.Native_10 ;
  output \Using_FPGA.Native_11 ;
  output \Using_FPGA.Native_12 ;
  output \Using_FPGA.Native_13 ;
  output \Using_FPGA.Native_14 ;
  output [1:0]\Using_FPGA.Native_15 ;
  output \Using_FPGA.Native_16 ;
  output \Using_FPGA.Native_17 ;
  output \Using_FPGA.Native_18 ;
  output \Using_FPGA.Native_19 ;
  output \Using_FPGA.Native_20 ;
  output [0:10]of_predecode_raw;
  output [1:0]\Using_FPGA.Native_21 ;
  output IReady_0;
  output \Using_FPGA.Native_22 ;
  output of_valid;
  output \Using_FPGA.Native_23 ;
  output ex_gpr_write_reg;
  output ex_is_div_instr_I_reg;
  output [0:0]if_pre_buffer_addr;
  output [0:0]\Using_FPGA.Native_24 ;
  output \Using_FPGA.Native_25 ;
  output [0:0]\Using_FPGA.Native_26 ;
  output if_fetch_for_timing_optimization1;
  output ex_op1_cmp_eq;
  output ex_op1_cmp_eq1;
  output ex_op1_cmp_eq_n5_out;
  output \Using_FPGA.Native_27 ;
  output use_Reg_Neg_DI1_out;
  output force_Val10_out;
  output use_Reg_Neg_S3_out;
  output force12_out;
  output [1:0]\Using_FPGA.Native_28 ;
  output \Using_FPGA.Native_29 ;
  output ex_move_to_MSR_instr93_out;
  output of_Sel_SPR_MSR1;
  output [31:0]ex_sel_alu_i_reg;
  output mem_is_multi_or_load_instr_reg;
  output of_use_op2_s;
  output [31:0]ex_sel_alu_i_reg_0;
  output [31:0]ex_sel_alu_i_reg_1;
  output [0:0]E;
  output p_9_in;
  output ex_sel_alu_i0;
  output EX_SWAP_Instr;
  output ex_load_shift_carry0;
  output ex_mbar_is_sleep_cmb;
  output ex_mbar_decode_cmb;
  output \Using_FPGA.Native_30 ;
  output D224_out;
  output \Serial_Dbg_Intf.control_reg_reg[8] ;
  output p_2_in;
  output [1:0]\Using_FPGA.Native_31 ;
  output \Using_FPGA.Native_32 ;
  output \Using_FPGA.Native_33 ;
  output ex_enable_sext_shift_i0;
  output if_fetch_in_progress_reg;
  output wb_exception_i_reg;
  output ex_valid_jump_reg;
  output ex_valid_reg;
  output \Using_FPGA.Native_34 ;
  output \Using_FPGA.Native_35 ;
  output \Using_FPGA.Native_36 ;
  output \Using_FPGA.Native_37 ;
  output \Using_FPGA.Native_38 ;
  output ex_branch_with_delayslot_reg;
  output \Using_FPGA.Native_39 ;
  output \Using_FPGA.Native_40 ;
  output \Using_FPGA.Native_41 ;
  output \Using_FPGA.Native_42 ;
  output \Using_FPGA.Native_43 ;
  output \Using_FPGA.Native_44 ;
  output \Using_FPGA.Native_45 ;
  output \Using_FPGA.Native_46 ;
  output \Using_FPGA.Native_47 ;
  output \Using_FPGA.Native_48 ;
  output \Using_FPGA.Native_49 ;
  output \Using_FPGA.Native_50 ;
  output \Using_FPGA.Native_51 ;
  output \Using_FPGA.Native_52 ;
  output \Using_FPGA.Native_53 ;
  output \Using_FPGA.Native_54 ;
  output \Using_FPGA.Native_55 ;
  output \Using_FPGA.Native_56 ;
  output \Using_FPGA.Native_57 ;
  output \Using_FPGA.Native_58 ;
  output \Using_FPGA.Native_59 ;
  output \Using_FPGA.Native_60 ;
  output \Using_FPGA.Native_61 ;
  output \Using_FPGA.Native_62 ;
  output \Using_FPGA.Native_63 ;
  output \Using_FPGA.Native_64 ;
  output \Using_FPGA.Native_65 ;
  output \Using_FPGA.Native_66 ;
  output \Using_FPGA.Native_67 ;
  output \Using_FPGA.Native_68 ;
  output \Using_FPGA.Native_69 ;
  output \Using_FPGA.Native_70 ;
  output \Using_FPGA.Native_71 ;
  output \Using_FPGA.Native_72 ;
  output \Using_FPGA.Native_73 ;
  output \Using_FPGA.Native_74 ;
  output I1_1;
  output of_Sel_SPR_MSR88_out;
  output ex_is_multi_or_load_instr0;
  output of_op1_sel_spr;
  output Dbg_Clean_Stop0;
  output ex_set_bip;
  output [0:0]\Using_FPGA.Native_75 ;
  input ex_valid_jump_reg_0;
  input sync_reset;
  input Clk;
  input I139_out;
  input I5;
  input ex_branch_with_delayslot_i_reg_0;
  input ex_gpr_write_reg_0;
  input wb_exception;
  input EX_Is_Div_Instr;
  input ex_valid_jump_reg_1;
  input ex_jump;
  input out;
  input IB_Ready;
  input if_fetch_in_progress;
  input in0;
  input [1:0]Q;
  input [32:0]in;
  input \EX_Op3_reg[31] ;
  input \EX_Op3_reg[31]_0 ;
  input [0:31]MEM_Fwd;
  input [0:31]GPR_Op2;
  input \EX_Op3_reg[30] ;
  input \EX_Op3_reg[30]_0 ;
  input \EX_Op3_reg[29] ;
  input \EX_Op3_reg[29]_0 ;
  input \EX_Op3_reg[28] ;
  input \EX_Op3_reg[28]_0 ;
  input \EX_Op3_reg[27] ;
  input \EX_Op3_reg[27]_0 ;
  input \EX_Op3_reg[26] ;
  input \EX_Op3_reg[26]_0 ;
  input \EX_Op3_reg[25] ;
  input \EX_Op3_reg[25]_0 ;
  input \EX_Op3_reg[24] ;
  input \EX_Op3_reg[24]_0 ;
  input \EX_Op3_reg[23] ;
  input [7:0]\EX_Op3_reg[16] ;
  input \EX_Op3_reg[22] ;
  input \EX_Op3_reg[21] ;
  input \EX_Op3_reg[20] ;
  input \EX_Op3_reg[19] ;
  input \EX_Op3_reg[18] ;
  input \EX_Op3_reg[17] ;
  input \EX_Op3_reg[16]_0 ;
  input \EX_Op3_reg[15] ;
  input \EX_Op3_reg[15]_0 ;
  input [15:0]\EX_Op2_reg[0] ;
  input \EX_Op2_reg[0]_0 ;
  input \EX_Op3_reg[14] ;
  input \EX_Op3_reg[14]_0 ;
  input \EX_Op3_reg[13] ;
  input \EX_Op3_reg[13]_0 ;
  input \EX_Op3_reg[12] ;
  input \EX_Op3_reg[12]_0 ;
  input \EX_Op3_reg[11] ;
  input \EX_Op3_reg[11]_0 ;
  input \EX_Op3_reg[10] ;
  input \EX_Op3_reg[10]_0 ;
  input \EX_Op3_reg[9] ;
  input \EX_Op3_reg[9]_0 ;
  input \EX_Op3_reg[8] ;
  input \EX_Op3_reg[8]_0 ;
  input \EX_Op3_reg[7] ;
  input \EX_Op3_reg[7]_0 ;
  input \EX_Op3_reg[6] ;
  input \EX_Op3_reg[6]_0 ;
  input \EX_Op3_reg[5] ;
  input \EX_Op3_reg[5]_0 ;
  input \EX_Op3_reg[4] ;
  input \EX_Op3_reg[4]_0 ;
  input \EX_Op3_reg[3] ;
  input \EX_Op3_reg[3]_0 ;
  input \EX_Op3_reg[2] ;
  input \EX_Op3_reg[2]_0 ;
  input \EX_Op3_reg[1] ;
  input \EX_Op3_reg[1]_0 ;
  input \EX_Op3_reg[0] ;
  input \EX_Op3_reg[0]_0 ;
  input of_read_mem_write_op2_conflict_part2;
  input mem_is_multi_or_load_instr;
  input of_read_mem_write_op2_conflict_part1;
  input [0:31]GPR_Op3;
  input [4:0]\Using_FPGA.Native_i_6__0 ;
  input mem_valid_instr;
  input mem_gpr_write;
  input p_213_in;
  input [0:31]GPR_Op1;
  input [4:0]\Using_FPGA.Native_i_6__0_0 ;
  input [1:0]if_fetch_in_progress_reg_0;
  input p_216_in;
  input [1:0]\Using_FPGA.Native_i_6__0_1 ;
  input ex_mbar_is_sleep;
  input ex_mbar_decode;
  input [0:0]\Performance_Debug_Control.ex_brki_hit_reg ;
  input wb_gpr_write_i;
  input \EX_Op3[0]_i_5 ;
  input wb_reset;
  input \EX_Op3[0]_i_6 ;
  input I4;
  input I0;
  input if_fetch_in_progress_reg_1;
  input ex_gpr_write_dbg;
  input ex_valid_jump_reg_2;
  input ex_valid_reg_0;
  input ex_Exception_Taken;
  input mem_exception_from_ex;
  input ex_jump_nodelay;
  input IReady;
  input \Using_FPGA.Native_76 ;
  input \Using_FPGA.Native_77 ;
  input if_missed_fetch;
  input ex_branch_with_delayslot;
  input ex_jump_q;
  input [31:0]\EX_Op1_reg[0] ;
  input [2:0]ex_MSR;

  wire Clk;
  wire [1:0]D;
  wire D224_out;
  wire Dbg_Clean_Stop0;
  wire [0:0]E;
  wire EX_ALU_Op1142_out__0;
  wire EX_Is_Div_Instr;
  wire [31:0]\EX_Op1_reg[0] ;
  wire [15:0]\EX_Op2_reg[0] ;
  wire \EX_Op2_reg[0]_0 ;
  wire \EX_Op3[0]_i_5 ;
  wire \EX_Op3[0]_i_6 ;
  wire \EX_Op3_reg[0] ;
  wire \EX_Op3_reg[0]_0 ;
  wire \EX_Op3_reg[10] ;
  wire \EX_Op3_reg[10]_0 ;
  wire \EX_Op3_reg[11] ;
  wire \EX_Op3_reg[11]_0 ;
  wire \EX_Op3_reg[12] ;
  wire \EX_Op3_reg[12]_0 ;
  wire \EX_Op3_reg[13] ;
  wire \EX_Op3_reg[13]_0 ;
  wire \EX_Op3_reg[14] ;
  wire \EX_Op3_reg[14]_0 ;
  wire \EX_Op3_reg[15] ;
  wire \EX_Op3_reg[15]_0 ;
  wire [7:0]\EX_Op3_reg[16] ;
  wire \EX_Op3_reg[16]_0 ;
  wire \EX_Op3_reg[17] ;
  wire \EX_Op3_reg[18] ;
  wire \EX_Op3_reg[19] ;
  wire \EX_Op3_reg[1] ;
  wire \EX_Op3_reg[1]_0 ;
  wire \EX_Op3_reg[20] ;
  wire \EX_Op3_reg[21] ;
  wire \EX_Op3_reg[22] ;
  wire \EX_Op3_reg[23] ;
  wire \EX_Op3_reg[24] ;
  wire \EX_Op3_reg[24]_0 ;
  wire \EX_Op3_reg[25] ;
  wire \EX_Op3_reg[25]_0 ;
  wire \EX_Op3_reg[26] ;
  wire \EX_Op3_reg[26]_0 ;
  wire \EX_Op3_reg[27] ;
  wire \EX_Op3_reg[27]_0 ;
  wire \EX_Op3_reg[28] ;
  wire \EX_Op3_reg[28]_0 ;
  wire \EX_Op3_reg[29] ;
  wire \EX_Op3_reg[29]_0 ;
  wire \EX_Op3_reg[2] ;
  wire \EX_Op3_reg[2]_0 ;
  wire \EX_Op3_reg[30] ;
  wire \EX_Op3_reg[30]_0 ;
  wire \EX_Op3_reg[31] ;
  wire \EX_Op3_reg[31]_0 ;
  wire \EX_Op3_reg[3] ;
  wire \EX_Op3_reg[3]_0 ;
  wire \EX_Op3_reg[4] ;
  wire \EX_Op3_reg[4]_0 ;
  wire \EX_Op3_reg[5] ;
  wire \EX_Op3_reg[5]_0 ;
  wire \EX_Op3_reg[6] ;
  wire \EX_Op3_reg[6]_0 ;
  wire \EX_Op3_reg[7] ;
  wire \EX_Op3_reg[7]_0 ;
  wire \EX_Op3_reg[8] ;
  wire \EX_Op3_reg[8]_0 ;
  wire \EX_Op3_reg[9] ;
  wire \EX_Op3_reg[9]_0 ;
  wire EX_SWAP_Instr;
  wire [0:31]GPR_Op1;
  wire [0:31]GPR_Op2;
  wire [0:31]GPR_Op3;
  wire I0;
  wire I0101_out;
  wire I0105_out;
  wire I0109_out;
  wire I0113_out;
  wire I0117_out;
  wire I0121_out;
  wire I0125_out;
  wire I0129_out;
  wire I0133_out;
  wire I0137_out;
  wire I013_out;
  wire I0141_out;
  wire I0145_out;
  wire I0149_out;
  wire I0153_out;
  wire I0157_out;
  wire I0161_out;
  wire I0165_out;
  wire I0169_out;
  wire I017_out;
  wire I021_out;
  wire I025_out;
  wire I029_out;
  wire I033_out;
  wire I037_out;
  wire I041_out;
  wire I045_out;
  wire I049_out;
  wire I053_out;
  wire I057_out;
  wire I05_out;
  wire I061_out;
  wire I065_out;
  wire I069_out;
  wire I073_out;
  wire I077_out;
  wire I081_out;
  wire I085_out;
  wire I089_out;
  wire I093_out;
  wire I097_out;
  wire I09_out;
  wire I0_0;
  wire I1;
  wire I1103_out;
  wire I1107_out;
  wire I1111_out;
  wire I1115_out;
  wire I1119_out;
  wire I111_out;
  wire I1123_out;
  wire I1127_out;
  wire I1131_out;
  wire I1135_out;
  wire I1139_out;
  wire I1143_out;
  wire I1147_out;
  wire I1151_out;
  wire I1155_out;
  wire I1159_out;
  wire I115_out;
  wire I1163_out;
  wire I1167_out;
  wire I119_out;
  wire I123_out;
  wire I127_out;
  wire I131_out;
  wire I135_out;
  wire I139_out;
  wire I13_out;
  wire I143_out;
  wire I147_out;
  wire I151_out;
  wire I155_out;
  wire I159_out;
  wire I163_out;
  wire I167_out;
  wire I171_out;
  wire I175_out;
  wire I179_out;
  wire I17_out;
  wire I183_out;
  wire I187_out;
  wire I191_out;
  wire I195_out;
  wire I199_out;
  wire I1_1;
  wire I4;
  wire I5;
  wire IB_Ready;
  wire IReady;
  wire IReady_0;
  wire \Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_3 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_10 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_11 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_12 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_13 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_14 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_15 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_16 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_17 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_3 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_4 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_5 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_6 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_7 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_8 ;
  wire \Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_9 ;
  wire \Instruction_Prefetch_Mux[17].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[17].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[18].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[19].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[20].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[21].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[21].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[22].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[23].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[24].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[24].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[25].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[26].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[26].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[27].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[28].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[29].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_3 ;
  wire \Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_4 ;
  wire \Instruction_Prefetch_Mux[30].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[31].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_3 ;
  wire \Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_3 ;
  wire \Instruction_Prefetch_Mux[3].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[3].Gen_Instr_DFF_n_13 ;
  wire \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_1 ;
  wire \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_3 ;
  wire \Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_2 ;
  wire \Instruction_Prefetch_Mux[6].Gen_Instr_DFF_n_33 ;
  wire [0:31]MEM_Fwd;
  wire OF_Op1_Sel_SPR_PC0__0;
  wire [0:0]\Performance_Debug_Control.ex_brki_hit_reg ;
  wire [1:0]Q;
  wire S;
  wire \Serial_Dbg_Intf.control_reg_reg[8] ;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_10 ;
  wire \Using_FPGA.Native_11 ;
  wire \Using_FPGA.Native_12 ;
  wire \Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire [1:0]\Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_16 ;
  wire \Using_FPGA.Native_17 ;
  wire \Using_FPGA.Native_18 ;
  wire \Using_FPGA.Native_19 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_20 ;
  wire [1:0]\Using_FPGA.Native_21 ;
  wire \Using_FPGA.Native_22 ;
  wire \Using_FPGA.Native_23 ;
  wire [0:0]\Using_FPGA.Native_24 ;
  wire \Using_FPGA.Native_25 ;
  wire [0:0]\Using_FPGA.Native_26 ;
  wire \Using_FPGA.Native_27 ;
  wire [1:0]\Using_FPGA.Native_28 ;
  wire \Using_FPGA.Native_29 ;
  wire \Using_FPGA.Native_3 ;
  wire \Using_FPGA.Native_30 ;
  wire [1:0]\Using_FPGA.Native_31 ;
  wire \Using_FPGA.Native_32 ;
  wire \Using_FPGA.Native_33 ;
  wire \Using_FPGA.Native_34 ;
  wire \Using_FPGA.Native_35 ;
  wire \Using_FPGA.Native_36 ;
  wire \Using_FPGA.Native_37 ;
  wire \Using_FPGA.Native_38 ;
  wire \Using_FPGA.Native_39 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_40 ;
  wire \Using_FPGA.Native_41 ;
  wire \Using_FPGA.Native_42 ;
  wire \Using_FPGA.Native_43 ;
  wire \Using_FPGA.Native_44 ;
  wire \Using_FPGA.Native_45 ;
  wire \Using_FPGA.Native_46 ;
  wire \Using_FPGA.Native_47 ;
  wire \Using_FPGA.Native_48 ;
  wire \Using_FPGA.Native_49 ;
  wire \Using_FPGA.Native_5 ;
  wire \Using_FPGA.Native_50 ;
  wire \Using_FPGA.Native_51 ;
  wire \Using_FPGA.Native_52 ;
  wire \Using_FPGA.Native_53 ;
  wire \Using_FPGA.Native_54 ;
  wire \Using_FPGA.Native_55 ;
  wire \Using_FPGA.Native_56 ;
  wire \Using_FPGA.Native_57 ;
  wire \Using_FPGA.Native_58 ;
  wire \Using_FPGA.Native_59 ;
  wire \Using_FPGA.Native_6 ;
  wire \Using_FPGA.Native_60 ;
  wire \Using_FPGA.Native_61 ;
  wire \Using_FPGA.Native_62 ;
  wire \Using_FPGA.Native_63 ;
  wire \Using_FPGA.Native_64 ;
  wire \Using_FPGA.Native_65 ;
  wire \Using_FPGA.Native_66 ;
  wire \Using_FPGA.Native_67 ;
  wire \Using_FPGA.Native_68 ;
  wire \Using_FPGA.Native_69 ;
  wire \Using_FPGA.Native_7 ;
  wire \Using_FPGA.Native_70 ;
  wire \Using_FPGA.Native_71 ;
  wire \Using_FPGA.Native_72 ;
  wire \Using_FPGA.Native_73 ;
  wire \Using_FPGA.Native_74 ;
  wire [0:0]\Using_FPGA.Native_75 ;
  wire \Using_FPGA.Native_76 ;
  wire \Using_FPGA.Native_77 ;
  wire \Using_FPGA.Native_8 ;
  wire \Using_FPGA.Native_9 ;
  wire [4:0]\Using_FPGA.Native_i_6__0 ;
  wire [4:0]\Using_FPGA.Native_i_6__0_0 ;
  wire [1:0]\Using_FPGA.Native_i_6__0_1 ;
  wire ex_Exception_Taken;
  wire [2:0]ex_MSR;
  wire ex_branch_with_delayslot;
  wire ex_branch_with_delayslot_i;
  wire ex_branch_with_delayslot_i_reg_0;
  wire ex_branch_with_delayslot_reg;
  wire ex_enable_sext_shift_i0;
  wire ex_gpr_write111_out__0;
  wire ex_gpr_write_dbg;
  wire ex_gpr_write_reg;
  wire ex_gpr_write_reg_0;
  wire ex_is_div_instr_I_reg;
  wire ex_is_multi_or_load_instr0;
  wire ex_jump;
  wire ex_jump_nodelay;
  wire ex_jump_q;
  wire ex_load_shift_carry0;
  wire ex_mbar_decode;
  wire ex_mbar_decode_cmb;
  wire ex_mbar_is_sleep;
  wire ex_mbar_is_sleep_cmb;
  wire ex_move_to_MSR_instr93_out;
  wire ex_op1_cmp_eq;
  wire ex_op1_cmp_eq1;
  wire ex_op1_cmp_eq_n5_out;
  wire ex_sel_alu_i0;
  wire [31:0]ex_sel_alu_i_reg;
  wire [31:0]ex_sel_alu_i_reg_0;
  wire [31:0]ex_sel_alu_i_reg_1;
  wire ex_set_bip;
  wire ex_set_bip0__1;
  wire ex_valid_jump_reg;
  wire ex_valid_jump_reg_0;
  wire ex_valid_jump_reg_1;
  wire ex_valid_jump_reg_2;
  wire ex_valid_reg;
  wire ex_valid_reg_0;
  wire force12_out;
  wire force_Val10_out;
  wire \ibuffer_reg[2][0]_srl3_n_0 ;
  wire \ibuffer_reg[2][10]_srl3_n_0 ;
  wire \ibuffer_reg[2][11]_srl3_n_0 ;
  wire \ibuffer_reg[2][12]_srl3_n_0 ;
  wire \ibuffer_reg[2][13]_srl3_n_0 ;
  wire \ibuffer_reg[2][14]_srl3_n_0 ;
  wire \ibuffer_reg[2][15]_srl3_n_0 ;
  wire \ibuffer_reg[2][16]_srl3_n_0 ;
  wire \ibuffer_reg[2][17]_srl3_n_0 ;
  wire \ibuffer_reg[2][18]_srl3_n_0 ;
  wire \ibuffer_reg[2][19]_srl3_n_0 ;
  wire \ibuffer_reg[2][1]_srl3_n_0 ;
  wire \ibuffer_reg[2][20]_srl3_n_0 ;
  wire \ibuffer_reg[2][21]_srl3_n_0 ;
  wire \ibuffer_reg[2][22]_srl3_n_0 ;
  wire \ibuffer_reg[2][23]_srl3_n_0 ;
  wire \ibuffer_reg[2][24]_srl3_n_0 ;
  wire \ibuffer_reg[2][25]_srl3_n_0 ;
  wire \ibuffer_reg[2][26]_srl3_n_0 ;
  wire \ibuffer_reg[2][27]_srl3_n_0 ;
  wire \ibuffer_reg[2][28]_srl3_n_0 ;
  wire \ibuffer_reg[2][29]_srl3_n_0 ;
  wire \ibuffer_reg[2][2]_srl3_n_0 ;
  wire \ibuffer_reg[2][30]_srl3_n_0 ;
  wire \ibuffer_reg[2][31]_srl3_n_0 ;
  wire \ibuffer_reg[2][33]_srl3_n_0 ;
  wire \ibuffer_reg[2][34]_srl3_n_0 ;
  wire \ibuffer_reg[2][35]_srl3_n_0 ;
  wire \ibuffer_reg[2][36]_srl3_n_0 ;
  wire \ibuffer_reg[2][37]_srl3_n_0 ;
  wire \ibuffer_reg[2][38]_srl3_n_0 ;
  wire \ibuffer_reg[2][39]_srl3_n_0 ;
  wire \ibuffer_reg[2][3]_srl3_n_0 ;
  wire \ibuffer_reg[2][40]_srl3_n_0 ;
  wire \ibuffer_reg[2][41]_srl3_n_0 ;
  wire \ibuffer_reg[2][42]_srl3_n_0 ;
  wire \ibuffer_reg[2][4]_srl3_n_0 ;
  wire \ibuffer_reg[2][5]_srl3_n_0 ;
  wire \ibuffer_reg[2][6]_srl3_n_0 ;
  wire \ibuffer_reg[2][7]_srl3_n_0 ;
  wire \ibuffer_reg[2][8]_srl3_n_0 ;
  wire \ibuffer_reg[2][9]_srl3_n_0 ;
  wire if_fetch_for_timing_optimization1;
  wire if_fetch_in_progress;
  wire if_fetch_in_progress_reg;
  wire [1:0]if_fetch_in_progress_reg_0;
  wire if_fetch_in_progress_reg_1;
  wire if_missed_fetch;
  wire [0:0]if_pre_buffer_addr;
  wire [1:2]if_sel_input;
  wire [32:0]in;
  wire in0;
  wire mem_exception_from_ex;
  wire mem_gpr_write;
  wire mem_is_multi_or_load_instr;
  wire mem_is_multi_or_load_instr_reg;
  wire mem_valid_instr;
  wire of_Imm180;
  wire of_Sel_SPR_MSR1;
  wire of_Sel_SPR_MSR88_out;
  wire of_Valid_II;
  wire [0:0]of_gpr_op1_rd_addr;
  wire of_instr_ii_0;
  wire of_instr_ii_1;
  wire of_instr_ii_10;
  wire of_instr_ii_11;
  wire of_instr_ii_12;
  wire of_instr_ii_13;
  wire of_instr_ii_14;
  wire of_instr_ii_15;
  wire of_instr_ii_16;
  wire of_instr_ii_17;
  wire of_instr_ii_18;
  wire of_instr_ii_19;
  wire of_instr_ii_2;
  wire of_instr_ii_20;
  wire of_instr_ii_21;
  wire of_instr_ii_22;
  wire of_instr_ii_23;
  wire of_instr_ii_24;
  wire of_instr_ii_25;
  wire of_instr_ii_26;
  wire of_instr_ii_27;
  wire of_instr_ii_28;
  wire of_instr_ii_29;
  wire of_instr_ii_3;
  wire of_instr_ii_30;
  wire of_instr_ii_31;
  wire of_instr_ii_32;
  wire of_instr_ii_33;
  wire of_instr_ii_34;
  wire of_instr_ii_35;
  wire of_instr_ii_36;
  wire of_instr_ii_37;
  wire of_instr_ii_38;
  wire of_instr_ii_39;
  wire of_instr_ii_4;
  wire of_instr_ii_40;
  wire of_instr_ii_41;
  wire of_instr_ii_42;
  wire of_instr_ii_5;
  wire of_instr_ii_6;
  wire of_instr_ii_7;
  wire of_instr_ii_8;
  wire of_instr_ii_9;
  wire [5:0]of_instr_raw;
  wire of_op1_sel_spr;
  wire of_op2_sel_imm;
  wire [0:10]of_predecode_raw;
  wire of_read_ex_write_op3_conflict__1;
  wire of_read_mem_write_op2_conflict_part1;
  wire of_read_mem_write_op2_conflict_part2;
  wire of_use_op2_s;
  wire of_valid;
  wire out;
  wire p_1_in26_in;
  wire p_1_in30_in;
  wire p_213_in;
  wire p_216_in;
  wire p_28_in;
  wire p_2_in;
  wire p_9_in;
  wire sel_input_delayslot;
  wire sel_input_i_0;
  wire sel_input_i_1;
  wire sel_input_iii_0;
  wire sel_input_iii_1;
  wire sel_input_iii_2;
  wire sel_input_iii_3;
  wire sync_reset;
  wire use_Reg_Neg_DI1_out;
  wire use_Reg_Neg_S3_out;
  wire wb_exception;
  wire wb_exception_i_reg;
  wire wb_gpr_write_i;
  wire wb_reset;

  system_microblaze_0_0__MB_FDR_112 \Gen_Mux_Select_LUT6[1].Gen_Sel_DFF 
       (.Clk(Clk),
        .addr(\Using_FPGA.Native_21 [1]),
        .sel_input_iii_3(sel_input_iii_3),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_LUT6 \Gen_Mux_Select_LUT6[1].Mux_Select_LUT6 
       (.I5(I5),
        .\Using_FPGA.Native_0 (IReady_0),
        .\Using_FPGA.Native_1 (ex_valid_jump_reg_0),
        .addr(\Using_FPGA.Native_21 [1]),
        .if_sel_input(if_sel_input[1]),
        .sel_input_iii_3(sel_input_iii_3));
  system_microblaze_0_0__MB_FDR_113 \Gen_Mux_Select_LUT6[2].Gen_Sel_DFF 
       (.Clk(Clk),
        .IB_Ready(IB_Ready),
        .\Serial_Dbg_Intf.status_reg_reg[25] (\Using_FPGA.Native_21 [1]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_24 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_25 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_26 ),
        .addr(if_pre_buffer_addr),
        .ex_jump(ex_jump),
        .if_fetch_for_timing_optimization1(if_fetch_for_timing_optimization1),
        .if_fetch_in_progress(if_fetch_in_progress),
        .if_fetch_in_progress_reg(if_fetch_in_progress_reg),
        .if_fetch_in_progress_reg_0(if_fetch_in_progress_reg_0[1]),
        .if_fetch_in_progress_reg_1(if_fetch_in_progress_reg_1),
        .if_sel_input(if_sel_input[1]),
        .in0(in0),
        .out(out),
        .sel_input_iii_2(sel_input_iii_2),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_LUT6_114 \Gen_Mux_Select_LUT6[2].Mux_Select_LUT6 
       (.I5(I5),
        .\Using_FPGA.Native_0 (IReady_0),
        .\Using_FPGA.Native_1 (ex_valid_jump_reg_0),
        .addr(\Using_FPGA.Native_21 [1]),
        .if_sel_input({if_sel_input[1],if_sel_input[2]}),
        .sel_input_iii_2(sel_input_iii_2));
  system_microblaze_0_0__MB_FDR_115 \Gen_Mux_Select_LUT6[3].Gen_Sel_DFF 
       (.Clk(Clk),
        .if_sel_input(if_sel_input[2]),
        .sel_input_iii_1(sel_input_iii_1),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_LUT6_116 \Gen_Mux_Select_LUT6[3].Mux_Select_LUT6 
       (.I5(I5),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_22 ),
        .\Using_FPGA.Native_1 (IReady_0),
        .\Using_FPGA.Native_2 (ex_valid_jump_reg_0),
        .if_sel_input({if_sel_input[1],if_sel_input[2]}),
        .sel_input_iii_1(sel_input_iii_1));
  system_microblaze_0_0__MB_FDR_117 \Gen_Mux_Select_LUT6[4].Gen_Sel_DFF 
       (.Clk(Clk),
        .I1(I1),
        .I1103_out(I1103_out),
        .I1107_out(I1107_out),
        .I1111_out(I1111_out),
        .I1115_out(I1115_out),
        .I1119_out(I1119_out),
        .I111_out(I111_out),
        .I1123_out(I1123_out),
        .I1127_out(I1127_out),
        .I1131_out(I1131_out),
        .I1135_out(I1135_out),
        .I1139_out(I1139_out),
        .I1143_out(I1143_out),
        .I1147_out(I1147_out),
        .I1151_out(I1151_out),
        .I1155_out(I1155_out),
        .I1159_out(I1159_out),
        .I115_out(I115_out),
        .I1163_out(I1163_out),
        .I1167_out(I1167_out),
        .I119_out(I119_out),
        .I123_out(I123_out),
        .I127_out(I127_out),
        .I131_out(I131_out),
        .I135_out(I135_out),
        .I13_out(I13_out),
        .I143_out(I143_out),
        .I147_out(I147_out),
        .I151_out(I151_out),
        .I155_out(I155_out),
        .I159_out(I159_out),
        .I163_out(I163_out),
        .I167_out(I167_out),
        .I171_out(I171_out),
        .I175_out(I175_out),
        .I179_out(I179_out),
        .I17_out(I17_out),
        .I183_out(I183_out),
        .I187_out(I187_out),
        .I191_out(I191_out),
        .I195_out(I195_out),
        .I199_out(I199_out),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_22 ),
        .in({in[32:11],in[9:0]}),
        .out({\ibuffer_reg[2][0]_srl3_n_0 ,\ibuffer_reg[2][1]_srl3_n_0 ,\ibuffer_reg[2][2]_srl3_n_0 ,\ibuffer_reg[2][3]_srl3_n_0 ,\ibuffer_reg[2][4]_srl3_n_0 ,\ibuffer_reg[2][5]_srl3_n_0 ,\ibuffer_reg[2][6]_srl3_n_0 ,\ibuffer_reg[2][7]_srl3_n_0 ,\ibuffer_reg[2][8]_srl3_n_0 ,\ibuffer_reg[2][9]_srl3_n_0 ,\ibuffer_reg[2][10]_srl3_n_0 ,\ibuffer_reg[2][11]_srl3_n_0 ,\ibuffer_reg[2][12]_srl3_n_0 ,\ibuffer_reg[2][13]_srl3_n_0 ,\ibuffer_reg[2][14]_srl3_n_0 ,\ibuffer_reg[2][15]_srl3_n_0 ,\ibuffer_reg[2][16]_srl3_n_0 ,\ibuffer_reg[2][17]_srl3_n_0 ,\ibuffer_reg[2][18]_srl3_n_0 ,\ibuffer_reg[2][19]_srl3_n_0 ,\ibuffer_reg[2][20]_srl3_n_0 ,\ibuffer_reg[2][21]_srl3_n_0 ,\ibuffer_reg[2][22]_srl3_n_0 ,\ibuffer_reg[2][23]_srl3_n_0 ,\ibuffer_reg[2][24]_srl3_n_0 ,\ibuffer_reg[2][25]_srl3_n_0 ,\ibuffer_reg[2][26]_srl3_n_0 ,\ibuffer_reg[2][27]_srl3_n_0 ,\ibuffer_reg[2][28]_srl3_n_0 ,\ibuffer_reg[2][29]_srl3_n_0 ,\ibuffer_reg[2][30]_srl3_n_0 ,\ibuffer_reg[2][31]_srl3_n_0 ,\ibuffer_reg[2][33]_srl3_n_0 ,\ibuffer_reg[2][34]_srl3_n_0 ,\ibuffer_reg[2][35]_srl3_n_0 ,\ibuffer_reg[2][36]_srl3_n_0 ,\ibuffer_reg[2][37]_srl3_n_0 ,\ibuffer_reg[2][38]_srl3_n_0 ,\ibuffer_reg[2][39]_srl3_n_0 ,\ibuffer_reg[2][40]_srl3_n_0 ,\ibuffer_reg[2][41]_srl3_n_0 ,\ibuffer_reg[2][42]_srl3_n_0 }),
        .sel_input_i_1(sel_input_i_1),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_LUT6_118 \Gen_Mux_Select_LUT6[4].Mux_Select_LUT6 
       (.I5(I5),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_21 [0]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_22 ),
        .\Using_FPGA.Native_2 (IReady_0),
        .\Using_FPGA.Native_3 (ex_valid_jump_reg_0),
        .if_sel_input(if_sel_input[2]),
        .sel_input_iii_0(sel_input_iii_0));
  system_microblaze_0_0__MB_LUT6__parameterized2 \Gen_Mux_Select_LUT6[4].Using_ExtraMUX.Mux_Select_Delayslot_LUT6 
       (.I5(I5),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_21 [0]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_22 ),
        .\Using_FPGA.Native_2 (IReady_0),
        .\Using_FPGA.Native_3 (ex_valid_jump_reg_0),
        .if_sel_input(if_sel_input[2]),
        .sel_input_delayslot(sel_input_delayslot));
  system_microblaze_0_0__MB_MUXF7 \Gen_Mux_Select_LUT6[4].Using_ExtraMUX.Sel_Mux_MUXF7 
       (.Q(Q),
        .S(S),
        .ex_branch_with_delayslot_i(ex_branch_with_delayslot_i),
        .sel_input_delayslot(sel_input_delayslot),
        .sel_input_i_1(sel_input_i_1),
        .sel_input_iii_0(sel_input_iii_0),
        .wb_exception(wb_exception));
  system_microblaze_0_0__MB_FDR_119 \Instruction_Prefetch_Mux[0].Gen_Instr_DFF 
       (.Clk(Clk),
        .EX_ALU_Op1142_out__0(EX_ALU_Op1142_out__0),
        .EX_CMP_Op_reg(\Using_FPGA.Native_20 ),
        .EX_Unsigned_Op_reg(of_instr_raw[3]),
        .EX_Unsigned_Op_reg_0(\Using_FPGA.Native_19 ),
        .EX_Use_Carry_reg(of_instr_raw[1]),
        .OF_Op1_Sel_SPR_PC0__0(OF_Op1_Sel_SPR_PC0__0),
        .\Using_FPGA.Native_0 (of_instr_raw[5]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_35 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_36 ),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_37 ),
        .\Using_FPGA.Native_5 (\Using_FPGA.Native_41 ),
        .\Using_FPGA.Native_6 (of_instr_raw[2]),
        .\Using_FPGA.Native_7 (of_instr_raw[4]),
        .ex_jump(ex_jump),
        .ex_jump_nodelay(ex_jump_nodelay),
        .of_instr_ii_42(of_instr_ii_42),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_120 \Instruction_Prefetch_Mux[0].Instr_Mux_MUXF7 
       (.I0169_out(I0169_out),
        .I1167_out(I1167_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_42(of_instr_ii_42));
  system_microblaze_0_0__MB_FDR_121 \Instruction_Prefetch_Mux[10].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Op3[0]_i_4 (\Using_FPGA.Native_i_6__0 [2:0]),
        .\EX_Op3[0]_i_5 (\Using_FPGA.Native_i_6__0_0 [2:0]),
        .\EX_Op3[0]_i_6 (\Using_FPGA.Native ),
        .\EX_Op3[0]_i_6_0 (\Using_FPGA.Native_0 ),
        .\EX_Op3[0]_i_6_1 (\EX_Op3[0]_i_6 ),
        .I0(I0),
        .I4(I4),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .\ex_gpr_write_addr_reg[4] (\Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_3 ),
        .\mem_gpr_write_addr_reg[4] (\Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_1 ),
        .of_instr_ii_32(of_instr_ii_32),
        .sync_reset(sync_reset),
        .\wb_gpr_write_addr_reg[4] (\Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_2 ));
  system_microblaze_0_0__MB_MUXF7_122 \Instruction_Prefetch_Mux[10].Instr_Mux_MUXF7 
       (.I0129_out(I0129_out),
        .I1127_out(I1127_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_32(of_instr_ii_32));
  system_microblaze_0_0__MB_FDR_123 \Instruction_Prefetch_Mux[11].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_2 ),
        .of_instr_ii_31(of_instr_ii_31),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_124 \Instruction_Prefetch_Mux[11].Instr_Mux_MUXF7 
       (.I0125_out(I0125_out),
        .I1123_out(I1123_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_31(of_instr_ii_31));
  system_microblaze_0_0__MB_FDR_125 \Instruction_Prefetch_Mux[12].Gen_Instr_DFF 
       (.Clk(Clk),
        .EX_ALU_Op1142_out__0(EX_ALU_Op1142_out__0),
        .\EX_ALU_Op_reg[1] (of_instr_raw[0]),
        .\EX_ALU_Op_reg[1]_0 (\Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_3 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_3 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_28 [0]),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_29 ),
        .ex_enable_alu_i_reg(of_instr_raw[5]),
        .ex_enable_alu_i_reg_0(of_instr_raw[2]),
        .ex_enable_alu_i_reg_1(of_instr_raw[4]),
        .ex_enable_alu_i_reg_2(of_instr_raw[3]),
        .ex_enable_alu_i_reg_3(\Using_FPGA.Native_11 ),
        .ex_set_bip0__1(ex_set_bip0__1),
        .ex_set_bip_reg(\Using_FPGA.Native_4 ),
        .ex_set_bip_reg_0(\Using_FPGA.Native_2 ),
        .of_instr_ii_30(of_instr_ii_30),
        .p_28_in(p_28_in),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_126 \Instruction_Prefetch_Mux[12].Instr_Mux_MUXF7 
       (.I0121_out(I0121_out),
        .I1119_out(I1119_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_30(of_instr_ii_30));
  system_microblaze_0_0__MB_FDR_127 \Instruction_Prefetch_Mux[13].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_4 ),
        .of_instr_ii_29(of_instr_ii_29),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_128 \Instruction_Prefetch_Mux[13].Instr_Mux_MUXF7 
       (.I0117_out(I0117_out),
        .I1115_out(I1115_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_29(of_instr_ii_29));
  system_microblaze_0_0__MB_FDR_129 \Instruction_Prefetch_Mux[14].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_5 ),
        .\Using_FPGA.Native_1 (ex_mbar_decode_cmb),
        .ex_mbar_decode(ex_mbar_decode),
        .ex_mbar_decode_reg(ex_valid_jump_reg_0),
        .ex_mbar_decode_reg_0(ex_valid_jump_reg_1),
        .of_instr_ii_28(of_instr_ii_28),
        .p_1_in26_in(p_1_in26_in),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_130 \Instruction_Prefetch_Mux[14].Instr_Mux_MUXF7 
       (.I0113_out(I0113_out),
        .I1111_out(I1111_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_28(of_instr_ii_28));
  system_microblaze_0_0__MB_FDR_131 \Instruction_Prefetch_Mux[15].Gen_Instr_DFF 
       (.Clk(Clk),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_instr_ii_27(of_instr_ii_27),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_132 \Instruction_Prefetch_Mux[15].Instr_Mux_MUXF7 
       (.I0109_out(I0109_out),
        .I1107_out(I1107_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_27(of_instr_ii_27));
  system_microblaze_0_0__MB_FDR_133 \Instruction_Prefetch_Mux[16].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Op2_reg[0] (\EX_Op2_reg[0] ),
        .\EX_Op2_reg[0]_0 (\EX_Op2_reg[0]_0 ),
        .GPR_Op2({GPR_Op2[0],GPR_Op2[1],GPR_Op2[2],GPR_Op2[3],GPR_Op2[4],GPR_Op2[5],GPR_Op2[6],GPR_Op2[7],GPR_Op2[8],GPR_Op2[9],GPR_Op2[10],GPR_Op2[11],GPR_Op2[12],GPR_Op2[13],GPR_Op2[14],GPR_Op2[15],GPR_Op2[16]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_6 ),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_1 ),
        .\imm_reg_reg[0] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_17 ),
        .\imm_reg_reg[10] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_7 ),
        .\imm_reg_reg[11] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_6 ),
        .\imm_reg_reg[12] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_5 ),
        .\imm_reg_reg[13] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_4 ),
        .\imm_reg_reg[14] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_3 ),
        .\imm_reg_reg[15] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_2 ),
        .\imm_reg_reg[1] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_16 ),
        .\imm_reg_reg[2] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_15 ),
        .\imm_reg_reg[3] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_14 ),
        .\imm_reg_reg[4] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_13 ),
        .\imm_reg_reg[5] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_12 ),
        .\imm_reg_reg[6] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_11 ),
        .\imm_reg_reg[7] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_10 ),
        .\imm_reg_reg[8] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_9 ),
        .\imm_reg_reg[9] (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_8 ),
        .of_instr_ii_26(of_instr_ii_26),
        .of_op2_sel_imm(of_op2_sel_imm),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_134 \Instruction_Prefetch_Mux[16].Instr_Mux_MUXF7 
       (.I0105_out(I0105_out),
        .I1103_out(I1103_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_26(of_instr_ii_26));
  system_microblaze_0_0__MB_FDR_135 \Instruction_Prefetch_Mux[17].Gen_Instr_DFF 
       (.Clk(Clk),
        .GPR_Op2(GPR_Op2[17]),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3 (\Using_FPGA.Native_8 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0 (\Using_FPGA.Native_6 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_7 ),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[17].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_2 (\Instruction_Prefetch_Mux[17].Gen_Instr_DFF_n_2 ),
        .of_instr_ii_25(of_instr_ii_25),
        .of_op2_sel_imm(of_op2_sel_imm),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_136 \Instruction_Prefetch_Mux[17].Instr_Mux_MUXF7 
       (.I0101_out(I0101_out),
        .I199_out(I199_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_25(of_instr_ii_25));
  system_microblaze_0_0__MB_FDR_137 \Instruction_Prefetch_Mux[18].Gen_Instr_DFF 
       (.Clk(Clk),
        .GPR_Op2(GPR_Op2[18]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_8 ),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[18].Gen_Instr_DFF_n_1 ),
        .of_instr_ii_24(of_instr_ii_24),
        .of_op2_sel_imm(of_op2_sel_imm),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_138 \Instruction_Prefetch_Mux[18].Instr_Mux_MUXF7 
       (.I097_out(I097_out),
        .I195_out(I195_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_24(of_instr_ii_24));
  system_microblaze_0_0__MB_FDR_139 \Instruction_Prefetch_Mux[19].Gen_Instr_DFF 
       (.Clk(Clk),
        .GPR_Op2(GPR_Op2[19]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_9 ),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[19].Gen_Instr_DFF_n_1 ),
        .of_instr_ii_23(of_instr_ii_23),
        .of_op2_sel_imm(of_op2_sel_imm),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_140 \Instruction_Prefetch_Mux[19].Instr_Mux_MUXF7 
       (.I093_out(I093_out),
        .I191_out(I191_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_23(of_instr_ii_23));
  system_microblaze_0_0__MB_FDR_141 \Instruction_Prefetch_Mux[1].Gen_Instr_DFF 
       (.Clk(Clk),
        .EX_ALU_Op1142_out__0(EX_ALU_Op1142_out__0),
        .\EX_ALU_Op_reg[0] (\Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_3 ),
        .\EX_Op2[0]_i_2 (of_instr_raw[3]),
        .\Using_FPGA.Native_0 (of_instr_raw[4]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_28 [1]),
        .\Using_FPGA.Native_2 (of_use_op2_s),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_43 ),
        .ex_gpr_write111_out__0(ex_gpr_write111_out__0),
        .ex_gpr_write_dbg(ex_gpr_write_dbg),
        .ex_gpr_write_dbg_reg(\Using_FPGA.Native_17 ),
        .ex_gpr_write_dbg_reg_0(\Using_FPGA.Native_18 ),
        .ex_gpr_write_dbg_reg_1(ex_valid_jump_reg_1),
        .ex_gpr_write_i_2_0(\Using_FPGA.Native_4 ),
        .ex_gpr_write_i_2_1(\Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_2 ),
        .ex_gpr_write_i_2_2(\Using_FPGA.Native_7 ),
        .ex_gpr_write_reg(ex_gpr_write_reg),
        .ex_gpr_write_reg_0(ex_gpr_write_reg_0),
        .ex_gpr_write_reg_1(ex_valid_jump_reg_0),
        .ex_set_bip(ex_set_bip),
        .ex_set_bip0__1(ex_set_bip0__1),
        .ex_set_bip_reg(of_instr_raw[5]),
        .ex_set_bip_reg_0(of_instr_raw[1]),
        .ex_set_bip_reg_1(of_instr_raw[2]),
        .ex_set_bip_reg_2(of_instr_raw[0]),
        .mem_is_multi_or_load_instr(mem_is_multi_or_load_instr),
        .mem_is_multi_or_load_instr_reg(mem_is_multi_or_load_instr_reg),
        .of_instr_ii_41(of_instr_ii_41),
        .of_op2_sel_imm(of_op2_sel_imm),
        .of_read_mem_write_op2_conflict_part1(of_read_mem_write_op2_conflict_part1),
        .of_read_mem_write_op2_conflict_part2(of_read_mem_write_op2_conflict_part2),
        .p_1_in30_in(p_1_in30_in),
        .p_28_in(p_28_in),
        .sync_reset(sync_reset),
        .wb_exception(wb_exception),
        .wb_exception_i_reg(wb_exception_i_reg));
  system_microblaze_0_0__MB_MUXF7_142 \Instruction_Prefetch_Mux[1].Instr_Mux_MUXF7 
       (.I0165_out(I0165_out),
        .I1163_out(I1163_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_41(of_instr_ii_41));
  system_microblaze_0_0__MB_FDR_143 \Instruction_Prefetch_Mux[20].Gen_Instr_DFF 
       (.Clk(Clk),
        .GPR_Op2(GPR_Op2[20]),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_i_2 (\Instruction_Prefetch_Mux[24].Gen_Instr_DFF_n_2 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_i_2_0 (\Instruction_Prefetch_Mux[17].Gen_Instr_DFF_n_2 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0 (\Using_FPGA.Native_9 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_1 (\Using_FPGA.Native_12 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_2 (\Using_FPGA.Native_11 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_10 ),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[20].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_40 ),
        .ex_set_bip0__1(ex_set_bip0__1),
        .of_Imm180(of_Imm180),
        .of_instr_ii_22(of_instr_ii_22),
        .of_op2_sel_imm(of_op2_sel_imm),
        .p_1_in26_in(p_1_in26_in),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_144 \Instruction_Prefetch_Mux[20].Instr_Mux_MUXF7 
       (.I089_out(I089_out),
        .I187_out(I187_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_22(of_instr_ii_22));
  system_microblaze_0_0__MB_FDR_145 \Instruction_Prefetch_Mux[21].Gen_Instr_DFF 
       (.Clk(Clk),
        .GPR_Op2(GPR_Op2[21]),
        .\Performance_Debug_Control.ex_brki_hit_reg (\Using_FPGA.Native_12 ),
        .\Performance_Debug_Control.ex_brki_hit_reg_0 (\Using_FPGA.Native_9 ),
        .\Performance_Debug_Control.ex_brki_hit_reg_1 (\Using_FPGA.Native_10 ),
        .\Performance_Debug_Control.ex_brki_hit_reg_2 (\Instruction_Prefetch_Mux[24].Gen_Instr_DFF_n_2 ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_11 ),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[21].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_2 (\Instruction_Prefetch_Mux[21].Gen_Instr_DFF_n_2 ),
        .of_instr_ii_21(of_instr_ii_21),
        .of_op2_sel_imm(of_op2_sel_imm),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_146 \Instruction_Prefetch_Mux[21].Instr_Mux_MUXF7 
       (.I085_out(I085_out),
        .I183_out(I183_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_21(of_instr_ii_21));
  system_microblaze_0_0__MB_FDR_147 \Instruction_Prefetch_Mux[22].Gen_Instr_DFF 
       (.Clk(Clk),
        .GPR_Op2(GPR_Op2[22]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_12 ),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[22].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_42 ),
        .\Using_FPGA.Native_3 (of_instr_raw[3]),
        .of_instr_ii_20(of_instr_ii_20),
        .of_op2_sel_imm(of_op2_sel_imm),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_148 \Instruction_Prefetch_Mux[22].Instr_Mux_MUXF7 
       (.I081_out(I081_out),
        .I179_out(I179_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_20(of_instr_ii_20));
  system_microblaze_0_0__MB_FDR_149 \Instruction_Prefetch_Mux[23].Gen_Instr_DFF 
       (.Clk(Clk),
        .GPR_Op2(GPR_Op2[23]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_13 ),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[23].Gen_Instr_DFF_n_1 ),
        .of_instr_ii_19(of_instr_ii_19),
        .of_op2_sel_imm(of_op2_sel_imm),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_150 \Instruction_Prefetch_Mux[23].Instr_Mux_MUXF7 
       (.I077_out(I077_out),
        .I175_out(I175_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_19(of_instr_ii_19));
  system_microblaze_0_0__MB_FDR_151 \Instruction_Prefetch_Mux[24].Gen_Instr_DFF 
       (.Clk(Clk),
        .GPR_Op2(GPR_Op2[24]),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3 (\Using_FPGA.Native_13 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0 (\Using_FPGA.Native_15 [0]),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_1 (\Using_FPGA.Native_15 [1]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_14 ),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[24].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_2 (\Instruction_Prefetch_Mux[24].Gen_Instr_DFF_n_2 ),
        .of_instr_ii_18(of_instr_ii_18),
        .of_op2_sel_imm(of_op2_sel_imm),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_152 \Instruction_Prefetch_Mux[24].Instr_Mux_MUXF7 
       (.I073_out(I073_out),
        .I171_out(I171_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_18(of_instr_ii_18));
  system_microblaze_0_0__MB_FDR_153 \Instruction_Prefetch_Mux[25].Gen_Instr_DFF 
       (.Clk(Clk),
        .GPR_Op2(GPR_Op2[25]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_15 [1]),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[25].Gen_Instr_DFF_n_1 ),
        .of_instr_ii_17(of_instr_ii_17),
        .of_op2_sel_imm(of_op2_sel_imm),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_154 \Instruction_Prefetch_Mux[25].Instr_Mux_MUXF7 
       (.I069_out(I069_out),
        .I167_out(I167_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_17(of_instr_ii_17));
  system_microblaze_0_0__MB_FDR_155 \Instruction_Prefetch_Mux[26].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Sext_Op_reg[0] (\Using_FPGA.Native_15 [1]),
        .GPR_Op2(GPR_Op2[26]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_15 [0]),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[26].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_2 (\Instruction_Prefetch_Mux[26].Gen_Instr_DFF_n_2 ),
        .of_instr_ii_16(of_instr_ii_16),
        .of_op2_sel_imm(of_op2_sel_imm),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_156 \Instruction_Prefetch_Mux[26].Instr_Mux_MUXF7 
       (.I065_out(I065_out),
        .I163_out(I163_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_16(of_instr_ii_16));
  system_microblaze_0_0__MB_FDR_157 \Instruction_Prefetch_Mux[27].Gen_Instr_DFF 
       (.Clk(Clk),
        .GPR_Op2(GPR_Op2[27]),
        .\Performance_Debug_Control.ex_brki_hit_reg (\Performance_Debug_Control.ex_brki_hit_reg ),
        .\Performance_Debug_Control.ex_brki_hit_reg_0 (\Using_FPGA.Native_6 ),
        .\Performance_Debug_Control.ex_brki_hit_reg_1 (\Using_FPGA.Native_8 ),
        .\Performance_Debug_Control.ex_brki_hit_reg_2 (\Using_FPGA.Native_7 ),
        .\Performance_Debug_Control.ex_brki_hit_reg_3 (\Instruction_Prefetch_Mux[21].Gen_Instr_DFF_n_2 ),
        .\Performance_Debug_Control.ex_brki_hit_reg_4 (\Using_FPGA.Native_3 ),
        .\Performance_Debug_Control.ex_brki_hit_reg_5 (\Using_FPGA.Native_4 ),
        .\Performance_Debug_Control.ex_brki_hit_reg_6 (\Using_FPGA.Native_2 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3 (\Using_FPGA.Native_18 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_0 (\Using_FPGA.Native_17 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_1 (\Using_FPGA.Native_19 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_i_3_2 (\Using_FPGA.Native_20 ),
        .\Serial_Dbg_Intf.control_reg_reg[8] (\Serial_Dbg_Intf.control_reg_reg[8] ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_16 ),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[27].Gen_Instr_DFF_n_1 ),
        .of_Imm180(of_Imm180),
        .of_instr_ii_15(of_instr_ii_15),
        .of_op2_sel_imm(of_op2_sel_imm),
        .p_1_in26_in(p_1_in26_in),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_158 \Instruction_Prefetch_Mux[27].Instr_Mux_MUXF7 
       (.I061_out(I061_out),
        .I159_out(I159_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_15(of_instr_ii_15));
  system_microblaze_0_0__MB_FDR_159 \Instruction_Prefetch_Mux[28].Gen_Instr_DFF 
       (.Clk(Clk),
        .GPR_Op2(GPR_Op2[28]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_17 ),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[28].Gen_Instr_DFF_n_2 ),
        .ex_move_to_MSR_instr93_out(ex_move_to_MSR_instr93_out),
        .ex_move_to_MSR_instr_reg(\Using_FPGA.Native_19 ),
        .ex_move_to_MSR_instr_reg_0(\Using_FPGA.Native_18 ),
        .ex_move_to_MSR_instr_reg_1(\Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_2 ),
        .ex_move_to_MSR_instr_reg_2(\Using_FPGA.Native_7 ),
        .ex_move_to_MSR_instr_reg_3(\Using_FPGA.Native_20 ),
        .of_instr_ii_14(of_instr_ii_14),
        .of_op2_sel_imm(of_op2_sel_imm),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_160 \Instruction_Prefetch_Mux[28].Instr_Mux_MUXF7 
       (.I057_out(I057_out),
        .I155_out(I155_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_14(of_instr_ii_14));
  system_microblaze_0_0__MB_FDR_161 \Instruction_Prefetch_Mux[29].Gen_Instr_DFF 
       (.Clk(Clk),
        .GPR_Op2(GPR_Op2[29]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_18 ),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[29].Gen_Instr_DFF_n_1 ),
        .of_instr_ii_13(of_instr_ii_13),
        .of_op2_sel_imm(of_op2_sel_imm),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_162 \Instruction_Prefetch_Mux[29].Instr_Mux_MUXF7 
       (.I053_out(I053_out),
        .I151_out(I151_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_13(of_instr_ii_13));
  system_microblaze_0_0__MB_FDR_163 \Instruction_Prefetch_Mux[2].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_ALU_Op_reg[0] (\Using_FPGA.Native_11 ),
        .\Using_FPGA.Native_0 (of_instr_raw[3]),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_2 ),
        .\Using_FPGA.Native_2 (\Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_3 ),
        .\Using_FPGA.Native_3 (\Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_4 ),
        .\Using_FPGA.Native_4 (of_instr_raw[0]),
        .\Using_FPGA.Native_5 (of_instr_raw[5]),
        .ex_mbar_decode_reg(of_instr_raw[2]),
        .ex_mbar_decode_reg_0(of_instr_raw[1]),
        .ex_mbar_decode_reg_1(of_instr_raw[4]),
        .of_instr_ii_40(of_instr_ii_40),
        .p_1_in26_in(p_1_in26_in),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_164 \Instruction_Prefetch_Mux[2].Instr_Mux_MUXF7 
       (.I0161_out(I0161_out),
        .I1159_out(I1159_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_40(of_instr_ii_40));
  system_microblaze_0_0__MB_FDR_165 \Instruction_Prefetch_Mux[30].Gen_Instr_DFF 
       (.Clk(Clk),
        .GPR_Op2(GPR_Op2[30]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_19 ),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[30].Gen_Instr_DFF_n_1 ),
        .of_instr_ii_12(of_instr_ii_12),
        .of_op2_sel_imm(of_op2_sel_imm),
        .p_2_in(p_2_in),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_166 \Instruction_Prefetch_Mux[30].Instr_Mux_MUXF7 
       (.I049_out(I049_out),
        .I147_out(I147_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_12(of_instr_ii_12));
  system_microblaze_0_0__MB_FDR_167 \Instruction_Prefetch_Mux[31].Gen_Instr_DFF 
       (.Clk(Clk),
        .GPR_Op2(GPR_Op2[31]),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_20 ),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[31].Gen_Instr_DFF_n_1 ),
        .of_instr_ii_11(of_instr_ii_11),
        .of_op2_sel_imm(of_op2_sel_imm),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_168 \Instruction_Prefetch_Mux[31].Instr_Mux_MUXF7 
       (.I045_out(I045_out),
        .I143_out(I143_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_11(of_instr_ii_11));
  system_microblaze_0_0__MB_FDR_169 \Instruction_Prefetch_Mux[32].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Op3[0]_i_3 (\Using_FPGA.Native_i_6__0_1 [0]),
        .\EX_Op3[0]_i_3_0 (D[0]),
        .\EX_Op3[0]_i_3_1 (\Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_3 ),
        .\EX_Op3[0]_i_3_2 (\Instruction_Prefetch_Mux[6].Gen_Instr_DFF_n_33 ),
        .\EX_Op3[0]_i_5 (\EX_Op3[0]_i_5 ),
        .\Using_FPGA.Native_0 (of_predecode_raw[0]),
        .mem_gpr_write(mem_gpr_write),
        .mem_valid_instr(mem_valid_instr),
        .mem_valid_reg(\Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_1 ),
        .of_instr_ii_10(of_instr_ii_10),
        .of_read_ex_write_op3_conflict__1(of_read_ex_write_op3_conflict__1),
        .p_216_in(p_216_in),
        .sync_reset(sync_reset),
        .wb_exception(wb_exception),
        .wb_gpr_write_i(wb_gpr_write_i),
        .wb_gpr_write_i_reg(\Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_3 ),
        .wb_reset(wb_reset));
  system_microblaze_0_0__MB_MUXF7_170 \Instruction_Prefetch_Mux[32].Instr_Mux_MUXF7 
       (.I041_out(I041_out),
        .I139_out(I139_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_10(of_instr_ii_10));
  system_microblaze_0_0__MB_FDR_171 \Instruction_Prefetch_Mux[33].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Branch_CMP_Op1_reg[0] (\EX_Op3_reg[0] ),
        .\EX_Branch_CMP_Op1_reg[0]_0 (\EX_Op3_reg[0]_0 ),
        .\EX_Branch_CMP_Op1_reg[10] (\EX_Op3_reg[10] ),
        .\EX_Branch_CMP_Op1_reg[10]_0 (\EX_Op3_reg[10]_0 ),
        .\EX_Branch_CMP_Op1_reg[11] (\EX_Op3_reg[11] ),
        .\EX_Branch_CMP_Op1_reg[11]_0 (\EX_Op3_reg[11]_0 ),
        .\EX_Branch_CMP_Op1_reg[12] (\EX_Op3_reg[12] ),
        .\EX_Branch_CMP_Op1_reg[12]_0 (\EX_Op3_reg[12]_0 ),
        .\EX_Branch_CMP_Op1_reg[13] (\EX_Op3_reg[13] ),
        .\EX_Branch_CMP_Op1_reg[13]_0 (\EX_Op3_reg[13]_0 ),
        .\EX_Branch_CMP_Op1_reg[14] (\EX_Op3_reg[14] ),
        .\EX_Branch_CMP_Op1_reg[14]_0 (\EX_Op3_reg[14]_0 ),
        .\EX_Branch_CMP_Op1_reg[15] (\EX_Op3_reg[15] ),
        .\EX_Branch_CMP_Op1_reg[15]_0 (\EX_Op3_reg[15]_0 ),
        .\EX_Branch_CMP_Op1_reg[16] (\EX_Op3_reg[16]_0 ),
        .\EX_Branch_CMP_Op1_reg[16]_0 (\EX_Op3_reg[16] ),
        .\EX_Branch_CMP_Op1_reg[17] (\EX_Op3_reg[17] ),
        .\EX_Branch_CMP_Op1_reg[18] (\EX_Op3_reg[18] ),
        .\EX_Branch_CMP_Op1_reg[19] (\EX_Op3_reg[19] ),
        .\EX_Branch_CMP_Op1_reg[1] (\EX_Op3_reg[1] ),
        .\EX_Branch_CMP_Op1_reg[1]_0 (\EX_Op3_reg[1]_0 ),
        .\EX_Branch_CMP_Op1_reg[20] (\EX_Op3_reg[20] ),
        .\EX_Branch_CMP_Op1_reg[21] (\EX_Op3_reg[21] ),
        .\EX_Branch_CMP_Op1_reg[22] (\EX_Op3_reg[22] ),
        .\EX_Branch_CMP_Op1_reg[23] (\EX_Op3_reg[23] ),
        .\EX_Branch_CMP_Op1_reg[24] (\EX_Op3_reg[24] ),
        .\EX_Branch_CMP_Op1_reg[24]_0 (\EX_Op3_reg[24]_0 ),
        .\EX_Branch_CMP_Op1_reg[25] (\EX_Op3_reg[25] ),
        .\EX_Branch_CMP_Op1_reg[25]_0 (\EX_Op3_reg[25]_0 ),
        .\EX_Branch_CMP_Op1_reg[26] (\EX_Op3_reg[26] ),
        .\EX_Branch_CMP_Op1_reg[26]_0 (\EX_Op3_reg[26]_0 ),
        .\EX_Branch_CMP_Op1_reg[27] (\EX_Op3_reg[27] ),
        .\EX_Branch_CMP_Op1_reg[27]_0 (\EX_Op3_reg[27]_0 ),
        .\EX_Branch_CMP_Op1_reg[28] (\EX_Op3_reg[28] ),
        .\EX_Branch_CMP_Op1_reg[28]_0 (\EX_Op3_reg[28]_0 ),
        .\EX_Branch_CMP_Op1_reg[29] (\EX_Op3_reg[29] ),
        .\EX_Branch_CMP_Op1_reg[29]_0 (\EX_Op3_reg[29]_0 ),
        .\EX_Branch_CMP_Op1_reg[2] (\EX_Op3_reg[2] ),
        .\EX_Branch_CMP_Op1_reg[2]_0 (\EX_Op3_reg[2]_0 ),
        .\EX_Branch_CMP_Op1_reg[30] (\EX_Op3_reg[30] ),
        .\EX_Branch_CMP_Op1_reg[30]_0 (\EX_Op3_reg[30]_0 ),
        .\EX_Branch_CMP_Op1_reg[31] (\EX_Op3_reg[31] ),
        .\EX_Branch_CMP_Op1_reg[31]_0 (\EX_Op3_reg[31]_0 ),
        .\EX_Branch_CMP_Op1_reg[3] (\EX_Op3_reg[3] ),
        .\EX_Branch_CMP_Op1_reg[3]_0 (\EX_Op3_reg[3]_0 ),
        .\EX_Branch_CMP_Op1_reg[4] (\EX_Op3_reg[4] ),
        .\EX_Branch_CMP_Op1_reg[4]_0 (\EX_Op3_reg[4]_0 ),
        .\EX_Branch_CMP_Op1_reg[5] (\EX_Op3_reg[5] ),
        .\EX_Branch_CMP_Op1_reg[5]_0 (\EX_Op3_reg[5]_0 ),
        .\EX_Branch_CMP_Op1_reg[6] (\EX_Op3_reg[6] ),
        .\EX_Branch_CMP_Op1_reg[6]_0 (\EX_Op3_reg[6]_0 ),
        .\EX_Branch_CMP_Op1_reg[7] (\EX_Op3_reg[7] ),
        .\EX_Branch_CMP_Op1_reg[7]_0 (\EX_Op3_reg[7]_0 ),
        .\EX_Branch_CMP_Op1_reg[8] (\EX_Op3_reg[8] ),
        .\EX_Branch_CMP_Op1_reg[8]_0 (\EX_Op3_reg[8]_0 ),
        .\EX_Branch_CMP_Op1_reg[9] (\EX_Op3_reg[9] ),
        .\EX_Branch_CMP_Op1_reg[9]_0 (\EX_Op3_reg[9]_0 ),
        .GPR_Op1(GPR_Op1),
        .MEM_Fwd(MEM_Fwd),
        .\Using_FPGA.Native_0 (of_predecode_raw[1]),
        .\Using_FPGA.Native_i_6__0_0 (\Using_FPGA.Native_i_6__0 [4:3]),
        .\Using_FPGA.Native_i_6__0_1 (\Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_1 ),
        .\Using_FPGA.Native_i_6__0_2 (of_predecode_raw[2]),
        .\Using_FPGA.Native_i_6__0_3 (\Using_FPGA.Native_i_6__0_0 [4:3]),
        .\Using_FPGA.Native_i_6__0_4 (\Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_2 ),
        .\Using_FPGA.Native_i_6__0_5 (if_fetch_in_progress_reg_0[0]),
        .\Using_FPGA.Native_i_6__0_6 (\Using_FPGA.Native_i_6__0_1 ),
        .\Using_FPGA.Native_i_6__0_7 (\Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_3 ),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg_1),
        .of_instr_ii_9(of_instr_ii_9),
        .p_213_in(p_213_in),
        .p_216_in(p_216_in),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_172 \Instruction_Prefetch_Mux[33].Instr_Mux_MUXF7 
       (.I037_out(I037_out),
        .I135_out(I135_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_9(of_instr_ii_9));
  system_microblaze_0_0__MB_FDR_173 \Instruction_Prefetch_Mux[34].Gen_Instr_DFF 
       (.Clk(Clk),
        .of_instr_ii_8(of_instr_ii_8),
        .of_predecode_raw(of_predecode_raw[2]),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_174 \Instruction_Prefetch_Mux[34].Instr_Mux_MUXF7 
       (.I033_out(I033_out),
        .I131_out(I131_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_8(of_instr_ii_8));
  system_microblaze_0_0__MB_FDR_175 \Instruction_Prefetch_Mux[35].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (of_predecode_raw[3]),
        .of_instr_ii_7(of_instr_ii_7),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_176 \Instruction_Prefetch_Mux[35].Instr_Mux_MUXF7 
       (.I029_out(I029_out),
        .I127_out(I127_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_7(of_instr_ii_7));
  system_microblaze_0_0__MB_FDR_177 \Instruction_Prefetch_Mux[36].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (of_predecode_raw[4]),
        .of_instr_ii_6(of_instr_ii_6),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_178 \Instruction_Prefetch_Mux[36].Instr_Mux_MUXF7 
       (.I025_out(I025_out),
        .I123_out(I123_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_6(of_instr_ii_6));
  system_microblaze_0_0__MB_FDR_179 \Instruction_Prefetch_Mux[37].Gen_Instr_DFF 
       (.Clk(Clk),
        .I0(I0),
        .I4(I4),
        .\Using_FPGA.Native_0 (of_predecode_raw[5]),
        .\Using_FPGA.Native_i_10 (\EX_Op3[0]_i_6 ),
        .\Using_FPGA.Native_i_8 (\Using_FPGA.Native_i_6__0 [2:0]),
        .\Using_FPGA.Native_i_8_0 (of_predecode_raw[3]),
        .\Using_FPGA.Native_i_8_1 (of_predecode_raw[4]),
        .\Using_FPGA.Native_i_9 (\Using_FPGA.Native_i_6__0_0 [2:0]),
        .\ex_gpr_write_addr_reg[4] (\Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_3 ),
        .\mem_gpr_write_addr_reg[4] (\Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_1 ),
        .of_instr_ii_5(of_instr_ii_5),
        .sync_reset(sync_reset),
        .\wb_gpr_write_addr_reg[4] (\Instruction_Prefetch_Mux[37].Gen_Instr_DFF_n_2 ));
  system_microblaze_0_0__MB_MUXF7_180 \Instruction_Prefetch_Mux[37].Instr_Mux_MUXF7 
       (.I021_out(I021_out),
        .I119_out(I119_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_5(of_instr_ii_5));
  system_microblaze_0_0__MB_FDR_181 \Instruction_Prefetch_Mux[38].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Op2[0]_i_3_0 (\Using_FPGA.Native_i_6__0 [4:3]),
        .\EX_Op2[0]_i_3_1 (\Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_1 ),
        .\EX_Op2[0]_i_3_2 (of_predecode_raw[7]),
        .\EX_Op2[0]_i_3_3 (\Using_FPGA.Native_i_6__0_1 ),
        .\EX_Op2[0]_i_3_4 (\Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_3 ),
        .\EX_Op2[0]_i_3_5 (\Using_FPGA.Native_i_6__0_0 [4:3]),
        .\EX_Op2[0]_i_3_6 (\Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_2 ),
        .\EX_Op2[0]_i_3_7 (if_fetch_in_progress_reg_0[0]),
        .\EX_Op2_reg[0] (\EX_Op3_reg[0] ),
        .\EX_Op2_reg[0]_0 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_17 ),
        .\EX_Op2_reg[0]_1 (\EX_Op3_reg[0]_0 ),
        .\EX_Op2_reg[10] (\EX_Op3_reg[10] ),
        .\EX_Op2_reg[10]_0 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_7 ),
        .\EX_Op2_reg[10]_1 (\EX_Op3_reg[10]_0 ),
        .\EX_Op2_reg[11] (\EX_Op3_reg[11] ),
        .\EX_Op2_reg[11]_0 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_6 ),
        .\EX_Op2_reg[11]_1 (\EX_Op3_reg[11]_0 ),
        .\EX_Op2_reg[12] (\EX_Op3_reg[12] ),
        .\EX_Op2_reg[12]_0 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_5 ),
        .\EX_Op2_reg[12]_1 (\EX_Op3_reg[12]_0 ),
        .\EX_Op2_reg[13] (\EX_Op3_reg[13] ),
        .\EX_Op2_reg[13]_0 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_4 ),
        .\EX_Op2_reg[13]_1 (\EX_Op3_reg[13]_0 ),
        .\EX_Op2_reg[14] (\EX_Op3_reg[14] ),
        .\EX_Op2_reg[14]_0 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_3 ),
        .\EX_Op2_reg[14]_1 (\EX_Op3_reg[14]_0 ),
        .\EX_Op2_reg[15] (\EX_Op3_reg[15] ),
        .\EX_Op2_reg[15]_0 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_2 ),
        .\EX_Op2_reg[15]_1 (\EX_Op3_reg[15]_0 ),
        .\EX_Op2_reg[16] (\EX_Op3_reg[16] ),
        .\EX_Op2_reg[16]_0 (\EX_Op3_reg[16]_0 ),
        .\EX_Op2_reg[16]_1 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_1 ),
        .\EX_Op2_reg[17] (\EX_Op3_reg[17] ),
        .\EX_Op2_reg[17]_0 (\Instruction_Prefetch_Mux[17].Gen_Instr_DFF_n_1 ),
        .\EX_Op2_reg[18] (\EX_Op3_reg[18] ),
        .\EX_Op2_reg[18]_0 (\Instruction_Prefetch_Mux[18].Gen_Instr_DFF_n_1 ),
        .\EX_Op2_reg[19] (\EX_Op3_reg[19] ),
        .\EX_Op2_reg[19]_0 (\Instruction_Prefetch_Mux[19].Gen_Instr_DFF_n_1 ),
        .\EX_Op2_reg[1] (\EX_Op3_reg[1] ),
        .\EX_Op2_reg[1]_0 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_16 ),
        .\EX_Op2_reg[1]_1 (\EX_Op3_reg[1]_0 ),
        .\EX_Op2_reg[20] (\EX_Op3_reg[20] ),
        .\EX_Op2_reg[20]_0 (\Instruction_Prefetch_Mux[20].Gen_Instr_DFF_n_1 ),
        .\EX_Op2_reg[21] (\EX_Op3_reg[21] ),
        .\EX_Op2_reg[21]_0 (\Instruction_Prefetch_Mux[21].Gen_Instr_DFF_n_1 ),
        .\EX_Op2_reg[22] (\EX_Op3_reg[22] ),
        .\EX_Op2_reg[22]_0 (\Instruction_Prefetch_Mux[22].Gen_Instr_DFF_n_1 ),
        .\EX_Op2_reg[23] (\EX_Op3_reg[23] ),
        .\EX_Op2_reg[23]_0 (\Instruction_Prefetch_Mux[23].Gen_Instr_DFF_n_1 ),
        .\EX_Op2_reg[24] (\EX_Op3_reg[24] ),
        .\EX_Op2_reg[24]_0 (\Instruction_Prefetch_Mux[24].Gen_Instr_DFF_n_1 ),
        .\EX_Op2_reg[24]_1 (\EX_Op3_reg[24]_0 ),
        .\EX_Op2_reg[25] (\EX_Op3_reg[25] ),
        .\EX_Op2_reg[25]_0 (\Instruction_Prefetch_Mux[25].Gen_Instr_DFF_n_1 ),
        .\EX_Op2_reg[25]_1 (\EX_Op3_reg[25]_0 ),
        .\EX_Op2_reg[26] (\EX_Op3_reg[26] ),
        .\EX_Op2_reg[26]_0 (\Instruction_Prefetch_Mux[26].Gen_Instr_DFF_n_1 ),
        .\EX_Op2_reg[26]_1 (\EX_Op3_reg[26]_0 ),
        .\EX_Op2_reg[27] (\EX_Op3_reg[27] ),
        .\EX_Op2_reg[27]_0 (\Instruction_Prefetch_Mux[27].Gen_Instr_DFF_n_1 ),
        .\EX_Op2_reg[27]_1 (\EX_Op3_reg[27]_0 ),
        .\EX_Op2_reg[28] (\EX_Op3_reg[28] ),
        .\EX_Op2_reg[28]_0 (\Instruction_Prefetch_Mux[28].Gen_Instr_DFF_n_2 ),
        .\EX_Op2_reg[28]_1 (\EX_Op3_reg[28]_0 ),
        .\EX_Op2_reg[29] (\EX_Op3_reg[29] ),
        .\EX_Op2_reg[29]_0 (\Instruction_Prefetch_Mux[29].Gen_Instr_DFF_n_1 ),
        .\EX_Op2_reg[29]_1 (\EX_Op3_reg[29]_0 ),
        .\EX_Op2_reg[2] (\EX_Op3_reg[2] ),
        .\EX_Op2_reg[2]_0 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_15 ),
        .\EX_Op2_reg[2]_1 (\EX_Op3_reg[2]_0 ),
        .\EX_Op2_reg[30] (\EX_Op3_reg[30] ),
        .\EX_Op2_reg[30]_0 (\Instruction_Prefetch_Mux[30].Gen_Instr_DFF_n_1 ),
        .\EX_Op2_reg[30]_1 (\EX_Op3_reg[30]_0 ),
        .\EX_Op2_reg[31] (\EX_Op3_reg[31] ),
        .\EX_Op2_reg[31]_0 (\Instruction_Prefetch_Mux[31].Gen_Instr_DFF_n_1 ),
        .\EX_Op2_reg[31]_1 (\EX_Op3_reg[31]_0 ),
        .\EX_Op2_reg[3] (\EX_Op3_reg[3] ),
        .\EX_Op2_reg[3]_0 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_14 ),
        .\EX_Op2_reg[3]_1 (\EX_Op3_reg[3]_0 ),
        .\EX_Op2_reg[4] (\EX_Op3_reg[4] ),
        .\EX_Op2_reg[4]_0 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_13 ),
        .\EX_Op2_reg[4]_1 (\EX_Op3_reg[4]_0 ),
        .\EX_Op2_reg[5] (\EX_Op3_reg[5] ),
        .\EX_Op2_reg[5]_0 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_12 ),
        .\EX_Op2_reg[5]_1 (\EX_Op3_reg[5]_0 ),
        .\EX_Op2_reg[6] (\EX_Op3_reg[6] ),
        .\EX_Op2_reg[6]_0 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_11 ),
        .\EX_Op2_reg[6]_1 (\EX_Op3_reg[6]_0 ),
        .\EX_Op2_reg[7] (\EX_Op3_reg[7] ),
        .\EX_Op2_reg[7]_0 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_10 ),
        .\EX_Op2_reg[7]_1 (\EX_Op3_reg[7]_0 ),
        .\EX_Op2_reg[8] (\EX_Op3_reg[8] ),
        .\EX_Op2_reg[8]_0 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_9 ),
        .\EX_Op2_reg[8]_1 (\EX_Op3_reg[8]_0 ),
        .\EX_Op2_reg[9] (\EX_Op3_reg[9] ),
        .\EX_Op2_reg[9]_0 (\Instruction_Prefetch_Mux[16].Gen_Instr_DFF_n_8 ),
        .\EX_Op2_reg[9]_1 (\EX_Op3_reg[9]_0 ),
        .MEM_Fwd(MEM_Fwd),
        .\Using_FPGA.Native_0 (of_predecode_raw[6]),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg),
        .of_instr_ii_4(of_instr_ii_4),
        .of_use_op2_s(of_use_op2_s),
        .p_213_in(p_213_in),
        .p_216_in(p_216_in),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_182 \Instruction_Prefetch_Mux[38].Instr_Mux_MUXF7 
       (.I017_out(I017_out),
        .I115_out(I115_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_4(of_instr_ii_4));
  system_microblaze_0_0__MB_FDR_183 \Instruction_Prefetch_Mux[39].Gen_Instr_DFF 
       (.Clk(Clk),
        .of_instr_ii_3(of_instr_ii_3),
        .of_predecode_raw(of_predecode_raw[7]),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_184 \Instruction_Prefetch_Mux[39].Instr_Mux_MUXF7 
       (.I013_out(I013_out),
        .I111_out(I111_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_3(of_instr_ii_3));
  system_microblaze_0_0__MB_FDR_185 \Instruction_Prefetch_Mux[3].Gen_Instr_DFF 
       (.Clk(Clk),
        .EX_ALU_Op1142_out__0(EX_ALU_Op1142_out__0),
        .\EX_Sext_Op_reg[0] (of_instr_raw[3]),
        .\EX_Sext_Op_reg[0]_0 (\Instruction_Prefetch_Mux[26].Gen_Instr_DFF_n_2 ),
        .\EX_Sext_Op_reg[0]_1 (\Using_FPGA.Native_32 ),
        .\Using_FPGA.Native_0 (of_instr_raw[2]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_23 ),
        .\Using_FPGA.Native_2 (ex_op1_cmp_eq1),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_27 ),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_31 [1]),
        .\Using_FPGA.Native_5 (\Instruction_Prefetch_Mux[3].Gen_Instr_DFF_n_13 ),
        .\Using_FPGA.Native_6 (\Using_FPGA.Native_38 ),
        .ex_branch_with_delayslot_i(ex_branch_with_delayslot_i),
        .ex_branch_with_delayslot_i_reg(\Instruction_Prefetch_Mux[3].Gen_Instr_DFF_n_1 ),
        .ex_branch_with_delayslot_i_reg_0(ex_valid_jump_reg_0),
        .ex_branch_with_delayslot_i_reg_1(ex_branch_with_delayslot_i_reg_0),
        .ex_branch_with_delayslot_reg(\Using_FPGA.Native_2 ),
        .ex_branch_with_delayslot_reg_0(D[1]),
        .ex_enable_sext_shift_i0(ex_enable_sext_shift_i0),
        .ex_op1_cmp_eq_n5_out(ex_op1_cmp_eq_n5_out),
        .ex_op1_cmp_eq_n_reg(\Using_FPGA.Native_0 ),
        .ex_op1_cmp_eq_n_reg_0(\Using_FPGA.Native_1 ),
        .ex_op1_cmp_eq_n_reg_1(\Using_FPGA.Native ),
        .ex_sel_alu_i0(ex_sel_alu_i0),
        .ex_sel_alu_i_reg(\Using_FPGA.Native_11 ),
        .force12_out(force12_out),
        .force2_reg(of_instr_raw[5]),
        .force2_reg_0(of_instr_raw[0]),
        .force2_reg_1(of_instr_raw[4]),
        .force2_reg_2(of_instr_raw[1]),
        .force_Val10_out(force_Val10_out),
        .of_instr_ii_39(of_instr_ii_39),
        .sync_reset(sync_reset),
        .use_Reg_Neg_DI1_out(use_Reg_Neg_DI1_out),
        .use_Reg_Neg_S3_out(use_Reg_Neg_S3_out));
  system_microblaze_0_0__MB_MUXF7_186 \Instruction_Prefetch_Mux[3].Instr_Mux_MUXF7 
       (.I0157_out(I0157_out),
        .I1155_out(I1155_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_39(of_instr_ii_39));
  system_microblaze_0_0__MB_FDR_187 \Instruction_Prefetch_Mux[40].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (of_predecode_raw[8]),
        .of_instr_ii_2(of_instr_ii_2),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_188 \Instruction_Prefetch_Mux[40].Instr_Mux_MUXF7 
       (.I09_out(I09_out),
        .I17_out(I17_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_2(of_instr_ii_2));
  system_microblaze_0_0__MB_FDR_189 \Instruction_Prefetch_Mux[41].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (of_predecode_raw[9]),
        .of_instr_ii_1(of_instr_ii_1),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_190 \Instruction_Prefetch_Mux[41].Instr_Mux_MUXF7 
       (.I05_out(I05_out),
        .I13_out(I13_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_1(of_instr_ii_1));
  system_microblaze_0_0__MB_FDR_191 \Instruction_Prefetch_Mux[42].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Op2[0]_i_6 (\Using_FPGA.Native_i_6__0_0 [2:0]),
        .\EX_Op2[0]_i_7 (\Using_FPGA.Native_i_6__0 [2:0]),
        .\EX_Op2[0]_i_7_0 (of_predecode_raw[8]),
        .\EX_Op2[0]_i_7_1 (of_predecode_raw[9]),
        .\EX_Op2[0]_i_8 (\EX_Op3[0]_i_6 ),
        .I0(I0),
        .I4(I4),
        .\Using_FPGA.Native_0 (of_predecode_raw[10]),
        .\ex_gpr_write_addr_reg[4] (\Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_3 ),
        .\mem_gpr_write_addr_reg[4] (\Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_1 ),
        .of_instr_ii_0(of_instr_ii_0),
        .sync_reset(sync_reset),
        .\wb_gpr_write_addr_reg[4] (\Instruction_Prefetch_Mux[42].Gen_Instr_DFF_n_2 ));
  system_microblaze_0_0__MB_MUXF7_192 \Instruction_Prefetch_Mux[42].Instr_Mux_MUXF7 
       (.I0_0(I0_0),
        .I1(I1),
        .IReady(IReady),
        .IReady_0(IReady_0),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .\Using_FPGA.Native_1 (ex_branch_with_delayslot_i_reg_0),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_76 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_77 ),
        .if_missed_fetch(if_missed_fetch),
        .of_instr_ii_0(of_instr_ii_0));
  system_microblaze_0_0__MB_FDR_193 \Instruction_Prefetch_Mux[4].Gen_Instr_DFF 
       (.Clk(Clk),
        .D224_out(D224_out),
        .\EX_Op1_reg[0] (\EX_Op1_reg[0] ),
        .EX_SWAP_Instr(EX_SWAP_Instr),
        .EX_SWAP_Instr_reg(\Using_FPGA.Native_13 ),
        .EX_SWAP_Instr_reg_0(\Using_FPGA.Native_15 [1]),
        .EX_SWAP_Instr_reg_1(\Using_FPGA.Native_15 [0]),
        .EX_SWAP_Instr_reg_2(\Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_4 ),
        .\EX_Sext_Op_reg[1] (\Using_FPGA.Native_20 ),
        .I1_1(I1_1),
        .OF_Op1_Sel_SPR_PC0__0(OF_Op1_Sel_SPR_PC0__0),
        .\Using_FPGA.Native_0 (of_instr_raw[1]),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[4].Gen_Instr_DFF_n_2 ),
        .\Using_FPGA.Native_10 (\Using_FPGA.Native_49 ),
        .\Using_FPGA.Native_11 (\Using_FPGA.Native_50 ),
        .\Using_FPGA.Native_12 (\Using_FPGA.Native_51 ),
        .\Using_FPGA.Native_13 (\Using_FPGA.Native_52 ),
        .\Using_FPGA.Native_14 (\Using_FPGA.Native_53 ),
        .\Using_FPGA.Native_15 (\Using_FPGA.Native_54 ),
        .\Using_FPGA.Native_16 (\Using_FPGA.Native_55 ),
        .\Using_FPGA.Native_17 (\Using_FPGA.Native_56 ),
        .\Using_FPGA.Native_18 (\Using_FPGA.Native_57 ),
        .\Using_FPGA.Native_19 (\Using_FPGA.Native_58 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_30 ),
        .\Using_FPGA.Native_20 (\Using_FPGA.Native_59 ),
        .\Using_FPGA.Native_21 (\Using_FPGA.Native_60 ),
        .\Using_FPGA.Native_22 (\Using_FPGA.Native_61 ),
        .\Using_FPGA.Native_23 (\Using_FPGA.Native_62 ),
        .\Using_FPGA.Native_24 (\Using_FPGA.Native_63 ),
        .\Using_FPGA.Native_25 (\Using_FPGA.Native_64 ),
        .\Using_FPGA.Native_26 (\Using_FPGA.Native_65 ),
        .\Using_FPGA.Native_27 (\Using_FPGA.Native_66 ),
        .\Using_FPGA.Native_28 (\Using_FPGA.Native_67 ),
        .\Using_FPGA.Native_29 (\Using_FPGA.Native_68 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_31 [0]),
        .\Using_FPGA.Native_30 (\Using_FPGA.Native_69 ),
        .\Using_FPGA.Native_31 (\Using_FPGA.Native_70 ),
        .\Using_FPGA.Native_32 (\Using_FPGA.Native_71 ),
        .\Using_FPGA.Native_33 (\Using_FPGA.Native_72 ),
        .\Using_FPGA.Native_34 (\Using_FPGA.Native_73 ),
        .\Using_FPGA.Native_35 (\Using_FPGA.Native_74 ),
        .\Using_FPGA.Native_36 (of_instr_raw[0]),
        .\Using_FPGA.Native_37 (\Instruction_Prefetch_Mux[2].Gen_Instr_DFF_n_2 ),
        .\Using_FPGA.Native_38 (\Using_FPGA.Native_11 ),
        .\Using_FPGA.Native_39 (\Instruction_Prefetch_Mux[3].Gen_Instr_DFF_n_13 ),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_32 ),
        .\Using_FPGA.Native_5 (\Using_FPGA.Native_44 ),
        .\Using_FPGA.Native_6 (\Using_FPGA.Native_45 ),
        .\Using_FPGA.Native_7 (\Using_FPGA.Native_46 ),
        .\Using_FPGA.Native_8 (\Using_FPGA.Native_47 ),
        .\Using_FPGA.Native_9 (\Using_FPGA.Native_48 ),
        .ex_MSR(ex_MSR),
        .ex_is_multi_instr2_reg(\Using_FPGA.Native_7 ),
        .ex_is_multi_or_load_instr0(ex_is_multi_or_load_instr0),
        .ex_is_multi_or_load_instr_reg(of_instr_raw[4]),
        .ex_is_multi_or_load_instr_reg_0(of_instr_raw[2]),
        .ex_is_multi_or_load_instr_reg_1(of_instr_raw[5]),
        .ex_load_shift_carry0(ex_load_shift_carry0),
        .ex_load_shift_carry_reg(of_instr_raw[3]),
        .ex_mfsmsr_i_reg(\Using_FPGA.Native_18 ),
        .ex_mfsmsr_i_reg_0(\Using_FPGA.Native_19 ),
        .ex_mfsmsr_i_reg_1(\Using_FPGA.Native_17 ),
        .of_Sel_SPR_MSR1(of_Sel_SPR_MSR1),
        .of_Sel_SPR_MSR88_out(of_Sel_SPR_MSR88_out),
        .of_instr_ii_38(of_instr_ii_38),
        .of_op1_sel_spr(of_op1_sel_spr),
        .p_1_in30_in(p_1_in30_in),
        .p_9_in(p_9_in),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_194 \Instruction_Prefetch_Mux[4].Instr_Mux_MUXF7 
       (.I0153_out(I0153_out),
        .I1151_out(I1151_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_38(of_instr_ii_38));
  system_microblaze_0_0__MB_FDR_195 \Instruction_Prefetch_Mux[5].Gen_Instr_DFF 
       (.Clk(Clk),
        .EX_Is_Div_Instr(EX_Is_Div_Instr),
        .\Using_FPGA.Native_0 (of_instr_raw[0]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_33 ),
        .\Using_FPGA.Native_2 (of_instr_raw[1]),
        .ex_is_div_instr_I_reg(ex_is_div_instr_I_reg),
        .ex_is_div_instr_I_reg_0(ex_valid_jump_reg_1),
        .ex_is_div_instr_I_reg_1(ex_valid_jump_reg_0),
        .ex_is_div_instr_I_reg_2(of_instr_raw[2]),
        .ex_is_div_instr_I_reg_3(of_instr_raw[5]),
        .ex_is_div_instr_I_reg_4(of_instr_raw[4]),
        .of_instr_ii_37(of_instr_ii_37),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_196 \Instruction_Prefetch_Mux[5].Instr_Mux_MUXF7 
       (.I0149_out(I0149_out),
        .I1147_out(I1147_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_37(of_instr_ii_37));
  system_microblaze_0_0__MB_FDR_197 \Instruction_Prefetch_Mux[6].Gen_Instr_DFF 
       (.Clk(Clk),
        .\EX_Op3[0]_i_2_0 (\Using_FPGA.Native_i_6__0 [4:3]),
        .\EX_Op3[0]_i_2_1 (\Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_1 ),
        .\EX_Op3[0]_i_2_2 (D[0]),
        .\EX_Op3[0]_i_2_3 (\Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_1 ),
        .\EX_Op3[0]_i_2_4 (\Using_FPGA.Native_i_6__0_0 [4:3]),
        .\EX_Op3[0]_i_2_5 (\Instruction_Prefetch_Mux[10].Gen_Instr_DFF_n_2 ),
        .\EX_Op3[0]_i_2_6 (\Instruction_Prefetch_Mux[32].Gen_Instr_DFF_n_3 ),
        .\EX_Op3[0]_i_6 (\Using_FPGA.Native_i_6__0_1 [1]),
        .\EX_Op3_reg[0] (\EX_Op3_reg[0] ),
        .\EX_Op3_reg[0]_0 (\EX_Op3_reg[0]_0 ),
        .\EX_Op3_reg[10] (\EX_Op3_reg[10] ),
        .\EX_Op3_reg[10]_0 (\EX_Op3_reg[10]_0 ),
        .\EX_Op3_reg[11] (\EX_Op3_reg[11] ),
        .\EX_Op3_reg[11]_0 (\EX_Op3_reg[11]_0 ),
        .\EX_Op3_reg[12] (\EX_Op3_reg[12] ),
        .\EX_Op3_reg[12]_0 (\EX_Op3_reg[12]_0 ),
        .\EX_Op3_reg[13] (\EX_Op3_reg[13] ),
        .\EX_Op3_reg[13]_0 (\EX_Op3_reg[13]_0 ),
        .\EX_Op3_reg[14] (\EX_Op3_reg[14] ),
        .\EX_Op3_reg[14]_0 (\EX_Op3_reg[14]_0 ),
        .\EX_Op3_reg[15] (\EX_Op3_reg[15] ),
        .\EX_Op3_reg[15]_0 (\EX_Op3_reg[15]_0 ),
        .\EX_Op3_reg[16] (\EX_Op3_reg[16]_0 ),
        .\EX_Op3_reg[16]_0 (\EX_Op3_reg[16] ),
        .\EX_Op3_reg[17] (\EX_Op3_reg[17] ),
        .\EX_Op3_reg[18] (\EX_Op3_reg[18] ),
        .\EX_Op3_reg[19] (\EX_Op3_reg[19] ),
        .\EX_Op3_reg[1] (\EX_Op3_reg[1] ),
        .\EX_Op3_reg[1]_0 (\EX_Op3_reg[1]_0 ),
        .\EX_Op3_reg[20] (\EX_Op3_reg[20] ),
        .\EX_Op3_reg[21] (\EX_Op3_reg[21] ),
        .\EX_Op3_reg[22] (\EX_Op3_reg[22] ),
        .\EX_Op3_reg[23] (\EX_Op3_reg[23] ),
        .\EX_Op3_reg[24] (\EX_Op3_reg[24] ),
        .\EX_Op3_reg[24]_0 (\EX_Op3_reg[24]_0 ),
        .\EX_Op3_reg[25] (\EX_Op3_reg[25] ),
        .\EX_Op3_reg[25]_0 (\EX_Op3_reg[25]_0 ),
        .\EX_Op3_reg[26] (\EX_Op3_reg[26] ),
        .\EX_Op3_reg[26]_0 (\EX_Op3_reg[26]_0 ),
        .\EX_Op3_reg[27] (\EX_Op3_reg[27] ),
        .\EX_Op3_reg[27]_0 (\EX_Op3_reg[27]_0 ),
        .\EX_Op3_reg[28] (\EX_Op3_reg[28] ),
        .\EX_Op3_reg[28]_0 (\EX_Op3_reg[28]_0 ),
        .\EX_Op3_reg[29] (\EX_Op3_reg[29] ),
        .\EX_Op3_reg[29]_0 (\EX_Op3_reg[29]_0 ),
        .\EX_Op3_reg[2] (\EX_Op3_reg[2] ),
        .\EX_Op3_reg[2]_0 (\EX_Op3_reg[2]_0 ),
        .\EX_Op3_reg[30] (\EX_Op3_reg[30] ),
        .\EX_Op3_reg[30]_0 (\EX_Op3_reg[30]_0 ),
        .\EX_Op3_reg[31] (\EX_Op3_reg[31] ),
        .\EX_Op3_reg[31]_0 (\EX_Op3_reg[31]_0 ),
        .\EX_Op3_reg[3] (\EX_Op3_reg[3] ),
        .\EX_Op3_reg[3]_0 (\EX_Op3_reg[3]_0 ),
        .\EX_Op3_reg[4] (\EX_Op3_reg[4] ),
        .\EX_Op3_reg[4]_0 (\EX_Op3_reg[4]_0 ),
        .\EX_Op3_reg[5] (\EX_Op3_reg[5] ),
        .\EX_Op3_reg[5]_0 (\EX_Op3_reg[5]_0 ),
        .\EX_Op3_reg[6] (\EX_Op3_reg[6] ),
        .\EX_Op3_reg[6]_0 (\EX_Op3_reg[6]_0 ),
        .\EX_Op3_reg[7] (\EX_Op3_reg[7] ),
        .\EX_Op3_reg[7]_0 (\EX_Op3_reg[7]_0 ),
        .\EX_Op3_reg[8] (\EX_Op3_reg[8] ),
        .\EX_Op3_reg[8]_0 (\EX_Op3_reg[8]_0 ),
        .\EX_Op3_reg[9] (\EX_Op3_reg[9] ),
        .\EX_Op3_reg[9]_0 (\EX_Op3_reg[9]_0 ),
        .GPR_Op3(GPR_Op3),
        .MEM_Fwd(MEM_Fwd),
        .\Using_FPGA.Native_0 (D[1]),
        .\Using_FPGA.Native_1 (\Instruction_Prefetch_Mux[6].Gen_Instr_DFF_n_33 ),
        .ex_sel_alu_i_reg(ex_sel_alu_i_reg_0),
        .of_instr_ii_36(of_instr_ii_36),
        .of_read_ex_write_op3_conflict__1(of_read_ex_write_op3_conflict__1),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_198 \Instruction_Prefetch_Mux[6].Instr_Mux_MUXF7 
       (.I0145_out(I0145_out),
        .I1143_out(I1143_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_36(of_instr_ii_36));
  system_microblaze_0_0__MB_FDR_199 \Instruction_Prefetch_Mux[7].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (D[0]),
        .\Using_FPGA.Native_1 (ex_mbar_is_sleep_cmb),
        .ex_mbar_is_sleep(ex_mbar_is_sleep),
        .ex_mbar_is_sleep_reg(D[1]),
        .ex_mbar_is_sleep_reg_0(ex_valid_jump_reg_0),
        .of_instr_ii_35(of_instr_ii_35),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_200 \Instruction_Prefetch_Mux[7].Instr_Mux_MUXF7 
       (.I0141_out(I0141_out),
        .I1139_out(I1139_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_35(of_instr_ii_35));
  system_microblaze_0_0__MB_FDR_201 \Instruction_Prefetch_Mux[8].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .ex_gpr_write111_out__0(ex_gpr_write111_out__0),
        .ex_gpr_write_reg(ex_valid_jump_reg_0),
        .ex_gpr_write_reg_0(D[1]),
        .ex_gpr_write_reg_1(D[0]),
        .ex_op1_cmp_eq(ex_op1_cmp_eq),
        .ex_op1_cmp_eq1(ex_op1_cmp_eq1),
        .ex_op1_cmp_eq_reg(\Using_FPGA.Native_1 ),
        .ex_op1_cmp_eq_reg_0(\Using_FPGA.Native_0 ),
        .of_instr_ii_34(of_instr_ii_34),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_202 \Instruction_Prefetch_Mux[8].Instr_Mux_MUXF7 
       (.I0137_out(I0137_out),
        .I1135_out(I1135_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_34(of_instr_ii_34));
  system_microblaze_0_0__MB_FDR_203 \Instruction_Prefetch_Mux[9].Gen_Instr_DFF 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .of_instr_ii_33(of_instr_ii_33),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_MUXF7_204 \Instruction_Prefetch_Mux[9].Instr_Mux_MUXF7 
       (.I0133_out(I0133_out),
        .I1131_out(I1131_out),
        .\Using_FPGA.Native_0 (ex_valid_jump_reg_0),
        .of_instr_ii_33(of_instr_ii_33));
  system_microblaze_0_0__MB_FDS Last_Sel_DFF
       (.Clk(Clk),
        .I0101_out(I0101_out),
        .I0105_out(I0105_out),
        .I0109_out(I0109_out),
        .I0113_out(I0113_out),
        .I0117_out(I0117_out),
        .I0121_out(I0121_out),
        .I0125_out(I0125_out),
        .I0129_out(I0129_out),
        .I0133_out(I0133_out),
        .I0137_out(I0137_out),
        .I013_out(I013_out),
        .I0141_out(I0141_out),
        .I0145_out(I0145_out),
        .I0149_out(I0149_out),
        .I0153_out(I0153_out),
        .I0157_out(I0157_out),
        .I0161_out(I0161_out),
        .I0165_out(I0165_out),
        .I0169_out(I0169_out),
        .I017_out(I017_out),
        .I021_out(I021_out),
        .I025_out(I025_out),
        .I029_out(I029_out),
        .I033_out(I033_out),
        .I037_out(I037_out),
        .I041_out(I041_out),
        .I045_out(I045_out),
        .I049_out(I049_out),
        .I053_out(I053_out),
        .I057_out(I057_out),
        .I05_out(I05_out),
        .I061_out(I061_out),
        .I065_out(I065_out),
        .I069_out(I069_out),
        .I073_out(I073_out),
        .I077_out(I077_out),
        .I081_out(I081_out),
        .I085_out(I085_out),
        .I089_out(I089_out),
        .I093_out(I093_out),
        .I097_out(I097_out),
        .I09_out(I09_out),
        .I0_0(I0_0),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_21 [0]),
        .\Using_FPGA.Native_1 (IReady_0),
        .\Using_FPGA.Native_10 (\Using_FPGA.Native_13 ),
        .\Using_FPGA.Native_11 (\Using_FPGA.Native_12 ),
        .\Using_FPGA.Native_12 (\Using_FPGA.Native_11 ),
        .\Using_FPGA.Native_13 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_14 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_15 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_16 (D[0]),
        .\Using_FPGA.Native_17 (D[1]),
        .\Using_FPGA.Native_18 (of_instr_raw[0]),
        .\Using_FPGA.Native_19 (of_instr_raw[1]),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_20 ),
        .\Using_FPGA.Native_20 (of_instr_raw[2]),
        .\Using_FPGA.Native_21 (of_instr_raw[3]),
        .\Using_FPGA.Native_22 (of_instr_raw[4]),
        .\Using_FPGA.Native_23 (of_instr_raw[5]),
        .\Using_FPGA.Native_24 (\Using_FPGA.Native_2 ),
        .\Using_FPGA.Native_25 (\Using_FPGA.Native_3 ),
        .\Using_FPGA.Native_26 (\Using_FPGA.Native_4 ),
        .\Using_FPGA.Native_27 (\Using_FPGA.Native_5 ),
        .\Using_FPGA.Native_28 (\Using_FPGA.Native_6 ),
        .\Using_FPGA.Native_29 (\Using_FPGA.Native_7 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_19 ),
        .\Using_FPGA.Native_30 (\Using_FPGA.Native_8 ),
        .\Using_FPGA.Native_31 (\Using_FPGA.Native_9 ),
        .\Using_FPGA.Native_32 (\Using_FPGA.Native_10 ),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_18 ),
        .\Using_FPGA.Native_5 (\Using_FPGA.Native_17 ),
        .\Using_FPGA.Native_6 (\Using_FPGA.Native_16 ),
        .\Using_FPGA.Native_7 (\Using_FPGA.Native_15 [0]),
        .\Using_FPGA.Native_8 (\Using_FPGA.Native_15 [1]),
        .\Using_FPGA.Native_9 (\Using_FPGA.Native_14 ),
        .in({in[32:11],in[9:0]}),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_predecode_raw(of_predecode_raw),
        .sel_input_i_0(sel_input_i_0),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_LUT6__parameterized4 Mux_Select_Empty_LUT6
       (.I5(I5),
        .S(S),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_21 [0]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_22 ),
        .\Using_FPGA.Native_2 (IReady_0),
        .\Using_FPGA.Native_3 (ex_valid_jump_reg_0),
        .sel_input_i_0(sel_input_i_0));
  system_microblaze_0_0__MB_LUT6__parameterized6 Mux_Select_OF_Valid_LUT6
       (.I5(I5),
        .S(S),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_21 [0]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_22 ),
        .\Using_FPGA.Native_2 (IReady_0),
        .\Using_FPGA.Native_3 (ex_valid_jump_reg_0),
        .of_Valid_II(of_Valid_II));
  system_microblaze_0_0__MB_FDR_205 OF_Valid_DFF
       (.Clk(Clk),
        .Dbg_Clean_Stop0(Dbg_Clean_Stop0),
        .Dbg_Clean_Stop_reg(\Using_FPGA.Native_23 ),
        .E(E),
        .Q(Q),
        .\Using_FPGA.Native_0 (of_valid),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_39 ),
        .ex_Exception_Taken(ex_Exception_Taken),
        .ex_branch_with_delayslot(ex_branch_with_delayslot),
        .ex_branch_with_delayslot_reg(ex_branch_with_delayslot_reg),
        .ex_jump(ex_jump),
        .ex_jump_nodelay(ex_jump_nodelay),
        .ex_jump_q(ex_jump_q),
        .ex_valid_jump_reg(ex_valid_jump_reg),
        .ex_valid_jump_reg_0(ex_valid_jump_reg_2),
        .ex_valid_jump_reg_1(ex_valid_jump_reg_1),
        .ex_valid_jump_reg_2(ex_valid_jump_reg_0),
        .ex_valid_reg(ex_valid_reg),
        .ex_valid_reg_0(ex_valid_reg_0),
        .mem_exception_from_ex(mem_exception_from_ex),
        .mem_valid_instr(mem_valid_instr),
        .of_Valid_II(of_Valid_II),
        .p_9_in(p_9_in),
        .sync_reset(sync_reset),
        .wb_exception(wb_exception));
  FDRE #(
    .INIT(1'b0)) 
    ex_branch_with_delayslot_i_reg
       (.C(Clk),
        .CE(1'b1),
        .D(\Instruction_Prefetch_Mux[3].Gen_Instr_DFF_n_1 ),
        .Q(ex_branch_with_delayslot_i),
        .R(1'b0));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][0]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][0]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[32]),
        .Q(\ibuffer_reg[2][0]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][10]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][10]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[22]),
        .Q(\ibuffer_reg[2][10]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][11]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][11]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[9]),
        .Q(\ibuffer_reg[2][11]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][12]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][12]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[8]),
        .Q(\ibuffer_reg[2][12]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][13]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][13]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[7]),
        .Q(\ibuffer_reg[2][13]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][14]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][14]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[6]),
        .Q(\ibuffer_reg[2][14]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][15]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][15]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[5]),
        .Q(\ibuffer_reg[2][15]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][16]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][16]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[4]),
        .Q(\ibuffer_reg[2][16]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][17]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][17]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[3]),
        .Q(\ibuffer_reg[2][17]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][18]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][18]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[2]),
        .Q(\ibuffer_reg[2][18]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][19]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][19]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[1]),
        .Q(\ibuffer_reg[2][19]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][1]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][1]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[31]),
        .Q(\ibuffer_reg[2][1]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][20]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][20]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[0]),
        .Q(\ibuffer_reg[2][20]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][21]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][21]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[21]),
        .Q(\ibuffer_reg[2][21]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][22]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][22]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[20]),
        .Q(\ibuffer_reg[2][22]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][23]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][23]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[19]),
        .Q(\ibuffer_reg[2][23]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][24]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][24]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[18]),
        .Q(\ibuffer_reg[2][24]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][25]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][25]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[17]),
        .Q(\ibuffer_reg[2][25]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][26]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][26]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[16]),
        .Q(\ibuffer_reg[2][26]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][27]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][27]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[15]),
        .Q(\ibuffer_reg[2][27]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][28]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][28]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[14]),
        .Q(\ibuffer_reg[2][28]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][29]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][29]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[13]),
        .Q(\ibuffer_reg[2][29]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][2]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][2]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[30]),
        .Q(\ibuffer_reg[2][2]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][30]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][30]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[12]),
        .Q(\ibuffer_reg[2][30]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][31]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][31]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[11]),
        .Q(\ibuffer_reg[2][31]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][32]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][32]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[10]),
        .Q(\Using_FPGA.Native_75 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][33]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][33]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[9]),
        .Q(\ibuffer_reg[2][33]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][34]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][34]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[8]),
        .Q(\ibuffer_reg[2][34]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][35]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][35]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[7]),
        .Q(\ibuffer_reg[2][35]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][36]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][36]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[6]),
        .Q(\ibuffer_reg[2][36]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][37]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][37]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[5]),
        .Q(\ibuffer_reg[2][37]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][38]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][38]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[4]),
        .Q(\ibuffer_reg[2][38]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][39]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][39]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[3]),
        .Q(\ibuffer_reg[2][39]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][3]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[29]),
        .Q(\ibuffer_reg[2][3]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][40]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][40]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[2]),
        .Q(\ibuffer_reg[2][40]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][41]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][41]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[1]),
        .Q(\ibuffer_reg[2][41]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][42]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][42]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[0]),
        .Q(\ibuffer_reg[2][42]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][4]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][4]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[28]),
        .Q(\ibuffer_reg[2][4]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][5]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][5]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[27]),
        .Q(\ibuffer_reg[2][5]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][6]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][6]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[26]),
        .Q(\ibuffer_reg[2][6]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][7]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][7]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[25]),
        .Q(\ibuffer_reg[2][7]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][8]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][8]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[24]),
        .Q(\ibuffer_reg[2][8]_srl3_n_0 ));
  (* srl_bus_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2] " *) 
  (* srl_name = "U0/\MicroBlaze_Core_I/Performance.Core/Decode_I/PreFetch_Buffer_I1/ibuffer_reg[2][9]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \ibuffer_reg[2][9]_srl3 
       (.A0(if_pre_buffer_addr),
        .A1(\Using_FPGA.Native_21 [1]),
        .A2(1'b0),
        .A3(1'b0),
        .CE(IReady_0),
        .CLK(Clk),
        .D(in[23]),
        .Q(\ibuffer_reg[2][9]_srl3_n_0 ));
endmodule

(* ORIG_REF_NAME = "Register_File_gti" *) 
module system_microblaze_0_0__Register_File_gti
   (GPR_Op1,
    GPR_Op2,
    GPR_Op3,
    Clk,
    WB_GPR_Wr,
    DID,
    of_gpr_op1_rd_addr,
    of_imm_data,
    of_gpr_op3_rd_addr,
    \EX_Branch_CMP_Op1_reg[18] ,
    \EX_Branch_CMP_Op1_reg[2] ,
    \EX_Branch_CMP_Op1_reg[4] ,
    \EX_Branch_CMP_Op1_reg[6] ,
    \EX_Branch_CMP_Op1_reg[8] ,
    \EX_Branch_CMP_Op1_reg[10] ,
    \EX_Branch_CMP_Op1_reg[12] ,
    \EX_Branch_CMP_Op1_reg[14] ,
    \EX_Branch_CMP_Op1_reg[16] ,
    \EX_Branch_CMP_Op1_reg[18]_0 ,
    \EX_Branch_CMP_Op1_reg[20] ,
    \EX_Branch_CMP_Op1_reg[22] ,
    \EX_Branch_CMP_Op1_reg[24] ,
    \EX_Branch_CMP_Op1_reg[26] ,
    \EX_Branch_CMP_Op1_reg[28] ,
    \EX_Branch_CMP_Op1_reg[30] );
  output [0:31]GPR_Op1;
  output [0:31]GPR_Op2;
  output [0:31]GPR_Op3;
  input Clk;
  input WB_GPR_Wr;
  input [1:0]DID;
  input [0:4]of_gpr_op1_rd_addr;
  input [4:0]of_imm_data;
  input [0:4]of_gpr_op3_rd_addr;
  input [4:0]\EX_Branch_CMP_Op1_reg[18] ;
  input [1:0]\EX_Branch_CMP_Op1_reg[2] ;
  input [1:0]\EX_Branch_CMP_Op1_reg[4] ;
  input [1:0]\EX_Branch_CMP_Op1_reg[6] ;
  input [1:0]\EX_Branch_CMP_Op1_reg[8] ;
  input [1:0]\EX_Branch_CMP_Op1_reg[10] ;
  input [1:0]\EX_Branch_CMP_Op1_reg[12] ;
  input [1:0]\EX_Branch_CMP_Op1_reg[14] ;
  input [1:0]\EX_Branch_CMP_Op1_reg[16] ;
  input [1:0]\EX_Branch_CMP_Op1_reg[18]_0 ;
  input [1:0]\EX_Branch_CMP_Op1_reg[20] ;
  input [1:0]\EX_Branch_CMP_Op1_reg[22] ;
  input [1:0]\EX_Branch_CMP_Op1_reg[24] ;
  input [1:0]\EX_Branch_CMP_Op1_reg[26] ;
  input [1:0]\EX_Branch_CMP_Op1_reg[28] ;
  input [1:0]\EX_Branch_CMP_Op1_reg[30] ;

  wire Clk;
  wire [1:0]DID;
  wire [1:0]\EX_Branch_CMP_Op1_reg[10] ;
  wire [1:0]\EX_Branch_CMP_Op1_reg[12] ;
  wire [1:0]\EX_Branch_CMP_Op1_reg[14] ;
  wire [1:0]\EX_Branch_CMP_Op1_reg[16] ;
  wire [4:0]\EX_Branch_CMP_Op1_reg[18] ;
  wire [1:0]\EX_Branch_CMP_Op1_reg[18]_0 ;
  wire [1:0]\EX_Branch_CMP_Op1_reg[20] ;
  wire [1:0]\EX_Branch_CMP_Op1_reg[22] ;
  wire [1:0]\EX_Branch_CMP_Op1_reg[24] ;
  wire [1:0]\EX_Branch_CMP_Op1_reg[26] ;
  wire [1:0]\EX_Branch_CMP_Op1_reg[28] ;
  wire [1:0]\EX_Branch_CMP_Op1_reg[2] ;
  wire [1:0]\EX_Branch_CMP_Op1_reg[30] ;
  wire [1:0]\EX_Branch_CMP_Op1_reg[4] ;
  wire [1:0]\EX_Branch_CMP_Op1_reg[6] ;
  wire [1:0]\EX_Branch_CMP_Op1_reg[8] ;
  wire [0:31]GPR_Op1;
  wire [0:31]GPR_Op2;
  wire [0:31]GPR_Op3;
  wire WB_GPR_Wr;
  wire [0:4]of_gpr_op1_rd_addr;
  wire [0:4]of_gpr_op3_rd_addr;
  wire [4:0]of_imm_data;

  system_microblaze_0_0__MB_RAM32M \Using_LUT6.All_RAM32M[0].ram32m_i 
       (.Clk(Clk),
        .DID(DID),
        .\EX_Branch_CMP_Op1_reg[0] (\EX_Branch_CMP_Op1_reg[18] ),
        .GPR_Op1({GPR_Op1[0],GPR_Op1[1]}),
        .GPR_Op2({GPR_Op2[0],GPR_Op2[1]}),
        .GPR_Op3({GPR_Op3[0],GPR_Op3[1]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  system_microblaze_0_0__MB_RAM32M_410 \Using_LUT6.All_RAM32M[10].ram32m_i 
       (.Clk(Clk),
        .\EX_Branch_CMP_Op1_reg[20] (\EX_Branch_CMP_Op1_reg[20] ),
        .\EX_Branch_CMP_Op1_reg[20]_0 (\EX_Branch_CMP_Op1_reg[18] ),
        .GPR_Op1({GPR_Op1[20],GPR_Op1[21]}),
        .GPR_Op2({GPR_Op2[20],GPR_Op2[21]}),
        .GPR_Op3({GPR_Op3[20],GPR_Op3[21]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  system_microblaze_0_0__MB_RAM32M_411 \Using_LUT6.All_RAM32M[11].ram32m_i 
       (.Clk(Clk),
        .\EX_Branch_CMP_Op1_reg[22] (\EX_Branch_CMP_Op1_reg[22] ),
        .\EX_Branch_CMP_Op1_reg[22]_0 (\EX_Branch_CMP_Op1_reg[18] ),
        .GPR_Op1({GPR_Op1[22],GPR_Op1[23]}),
        .GPR_Op2({GPR_Op2[22],GPR_Op2[23]}),
        .GPR_Op3({GPR_Op3[22],GPR_Op3[23]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  system_microblaze_0_0__MB_RAM32M_412 \Using_LUT6.All_RAM32M[12].ram32m_i 
       (.Clk(Clk),
        .\EX_Branch_CMP_Op1_reg[24] (\EX_Branch_CMP_Op1_reg[24] ),
        .\EX_Branch_CMP_Op1_reg[24]_0 (\EX_Branch_CMP_Op1_reg[18] ),
        .GPR_Op1({GPR_Op1[24],GPR_Op1[25]}),
        .GPR_Op2({GPR_Op2[24],GPR_Op2[25]}),
        .GPR_Op3({GPR_Op3[24],GPR_Op3[25]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  system_microblaze_0_0__MB_RAM32M_413 \Using_LUT6.All_RAM32M[13].ram32m_i 
       (.Clk(Clk),
        .\EX_Branch_CMP_Op1_reg[26] (\EX_Branch_CMP_Op1_reg[26] ),
        .\EX_Branch_CMP_Op1_reg[26]_0 (\EX_Branch_CMP_Op1_reg[18] ),
        .GPR_Op1({GPR_Op1[26],GPR_Op1[27]}),
        .GPR_Op2({GPR_Op2[26],GPR_Op2[27]}),
        .GPR_Op3({GPR_Op3[26],GPR_Op3[27]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  system_microblaze_0_0__MB_RAM32M_414 \Using_LUT6.All_RAM32M[14].ram32m_i 
       (.Clk(Clk),
        .\EX_Branch_CMP_Op1_reg[28] (\EX_Branch_CMP_Op1_reg[28] ),
        .\EX_Branch_CMP_Op1_reg[28]_0 (\EX_Branch_CMP_Op1_reg[18] ),
        .GPR_Op1({GPR_Op1[28],GPR_Op1[29]}),
        .GPR_Op2({GPR_Op2[28],GPR_Op2[29]}),
        .GPR_Op3({GPR_Op3[28],GPR_Op3[29]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  system_microblaze_0_0__MB_RAM32M_415 \Using_LUT6.All_RAM32M[15].ram32m_i 
       (.Clk(Clk),
        .\EX_Branch_CMP_Op1_reg[30] (\EX_Branch_CMP_Op1_reg[30] ),
        .\EX_Branch_CMP_Op1_reg[30]_0 (\EX_Branch_CMP_Op1_reg[18] ),
        .GPR_Op1({GPR_Op1[30],GPR_Op1[31]}),
        .GPR_Op2({GPR_Op2[30],GPR_Op2[31]}),
        .GPR_Op3({GPR_Op3[30],GPR_Op3[31]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  system_microblaze_0_0__MB_RAM32M_416 \Using_LUT6.All_RAM32M[1].ram32m_i 
       (.Clk(Clk),
        .\EX_Branch_CMP_Op1_reg[2] (\EX_Branch_CMP_Op1_reg[2] ),
        .\EX_Branch_CMP_Op1_reg[2]_0 (\EX_Branch_CMP_Op1_reg[18] ),
        .GPR_Op1({GPR_Op1[2],GPR_Op1[3]}),
        .GPR_Op2({GPR_Op2[2],GPR_Op2[3]}),
        .GPR_Op3({GPR_Op3[2],GPR_Op3[3]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  system_microblaze_0_0__MB_RAM32M_417 \Using_LUT6.All_RAM32M[2].ram32m_i 
       (.Clk(Clk),
        .\EX_Branch_CMP_Op1_reg[4] (\EX_Branch_CMP_Op1_reg[4] ),
        .\EX_Branch_CMP_Op1_reg[4]_0 (\EX_Branch_CMP_Op1_reg[18] ),
        .GPR_Op1({GPR_Op1[4],GPR_Op1[5]}),
        .GPR_Op2({GPR_Op2[4],GPR_Op2[5]}),
        .GPR_Op3({GPR_Op3[4],GPR_Op3[5]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  system_microblaze_0_0__MB_RAM32M_418 \Using_LUT6.All_RAM32M[3].ram32m_i 
       (.Clk(Clk),
        .\EX_Branch_CMP_Op1_reg[6] (\EX_Branch_CMP_Op1_reg[6] ),
        .\EX_Branch_CMP_Op1_reg[6]_0 (\EX_Branch_CMP_Op1_reg[18] ),
        .GPR_Op1({GPR_Op1[6],GPR_Op1[7]}),
        .GPR_Op2({GPR_Op2[6],GPR_Op2[7]}),
        .GPR_Op3({GPR_Op3[6],GPR_Op3[7]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  system_microblaze_0_0__MB_RAM32M_419 \Using_LUT6.All_RAM32M[4].ram32m_i 
       (.Clk(Clk),
        .\EX_Branch_CMP_Op1_reg[8] (\EX_Branch_CMP_Op1_reg[8] ),
        .\EX_Branch_CMP_Op1_reg[8]_0 (\EX_Branch_CMP_Op1_reg[18] ),
        .GPR_Op1({GPR_Op1[8],GPR_Op1[9]}),
        .GPR_Op2({GPR_Op2[8],GPR_Op2[9]}),
        .GPR_Op3({GPR_Op3[8],GPR_Op3[9]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  system_microblaze_0_0__MB_RAM32M_420 \Using_LUT6.All_RAM32M[5].ram32m_i 
       (.Clk(Clk),
        .\EX_Branch_CMP_Op1_reg[10] (\EX_Branch_CMP_Op1_reg[10] ),
        .\EX_Branch_CMP_Op1_reg[10]_0 (\EX_Branch_CMP_Op1_reg[18] ),
        .GPR_Op1({GPR_Op1[10],GPR_Op1[11]}),
        .GPR_Op2({GPR_Op2[10],GPR_Op2[11]}),
        .GPR_Op3({GPR_Op3[10],GPR_Op3[11]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  system_microblaze_0_0__MB_RAM32M_421 \Using_LUT6.All_RAM32M[6].ram32m_i 
       (.Clk(Clk),
        .\EX_Branch_CMP_Op1_reg[12] (\EX_Branch_CMP_Op1_reg[12] ),
        .\EX_Branch_CMP_Op1_reg[12]_0 (\EX_Branch_CMP_Op1_reg[18] ),
        .GPR_Op1({GPR_Op1[12],GPR_Op1[13]}),
        .GPR_Op2({GPR_Op2[12],GPR_Op2[13]}),
        .GPR_Op3({GPR_Op3[12],GPR_Op3[13]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  system_microblaze_0_0__MB_RAM32M_422 \Using_LUT6.All_RAM32M[7].ram32m_i 
       (.Clk(Clk),
        .\EX_Branch_CMP_Op1_reg[14] (\EX_Branch_CMP_Op1_reg[14] ),
        .\EX_Branch_CMP_Op1_reg[14]_0 (\EX_Branch_CMP_Op1_reg[18] ),
        .GPR_Op1({GPR_Op1[14],GPR_Op1[15]}),
        .GPR_Op2({GPR_Op2[14],GPR_Op2[15]}),
        .GPR_Op3({GPR_Op3[14],GPR_Op3[15]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  system_microblaze_0_0__MB_RAM32M_423 \Using_LUT6.All_RAM32M[8].ram32m_i 
       (.Clk(Clk),
        .\EX_Branch_CMP_Op1_reg[16] (\EX_Branch_CMP_Op1_reg[16] ),
        .\EX_Branch_CMP_Op1_reg[16]_0 (\EX_Branch_CMP_Op1_reg[18] ),
        .GPR_Op1({GPR_Op1[16],GPR_Op1[17]}),
        .GPR_Op2({GPR_Op2[16],GPR_Op2[17]}),
        .GPR_Op3({GPR_Op3[16],GPR_Op3[17]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
  system_microblaze_0_0__MB_RAM32M_424 \Using_LUT6.All_RAM32M[9].ram32m_i 
       (.Clk(Clk),
        .\EX_Branch_CMP_Op1_reg[18] (\EX_Branch_CMP_Op1_reg[18]_0 ),
        .\EX_Branch_CMP_Op1_reg[18]_0 (\EX_Branch_CMP_Op1_reg[18] ),
        .GPR_Op1({GPR_Op1[18],GPR_Op1[19]}),
        .GPR_Op2({GPR_Op2[18],GPR_Op2[19]}),
        .GPR_Op3({GPR_Op3[18],GPR_Op3[19]}),
        .WB_GPR_Wr(WB_GPR_Wr),
        .of_gpr_op1_rd_addr(of_gpr_op1_rd_addr),
        .of_gpr_op3_rd_addr(of_gpr_op3_rd_addr),
        .of_imm_data(of_imm_data));
endmodule

(* ORIG_REF_NAME = "Shift_Logic_Module_gti" *) 
module system_microblaze_0_0__Shift_Logic_Module_gti
   (out,
    \EX_Op1_reg[24] ,
    in0,
    \Using_FPGA.Native );
  output out;
  output \EX_Op1_reg[24] ;
  input in0;
  input \Using_FPGA.Native ;

  (* RTL_KEEP = "true" *) wire sign_byte;
  (* RTL_KEEP = "true" *) wire sign_doublet;

  assign \EX_Op1_reg[24]  = sign_doublet;
  assign out = sign_byte;
  assign sign_byte = in0;
  assign sign_doublet = \Using_FPGA.Native ;
endmodule

(* ORIG_REF_NAME = "Zero_Detect_gti" *) 
module system_microblaze_0_0__Zero_Detect_gti
   (ex_op1_zero,
    ex_op1_cmp_equal,
    ex_op1_cmp_equal_n,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1,
    lopt_2);
  output ex_op1_zero;
  input ex_op1_cmp_equal;
  input ex_op1_cmp_equal_n;
  input \Using_FPGA.Native ;
  input [29:0]\Using_FPGA.Native_0 ;
  output lopt;
  input lopt_1;
  input lopt_2;

  wire S;
  wire \S0_inferred__0/i__n_0 ;
  wire \S0_inferred__1/i__n_0 ;
  wire \S0_inferred__2/i__n_0 ;
  wire \S0_inferred__3/i__n_0 ;
  wire \Using_FPGA.Native ;
  wire [29:0]\Using_FPGA.Native_0 ;
  wire ex_op1_cmp_equal;
  wire ex_op1_cmp_equal_n;
  wire \^lopt_2 ;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire zero_CI_3;
  wire NLW_Part_Of_Zero_Carry_Start_lopt_UNCONNECTED;
  wire NLW_Part_Of_Zero_Carry_Start_lopt_3_UNCONNECTED;
  wire NLW_Part_Of_Zero_Carry_Start_zero_CI_6_UNCONNECTED;
  wire \NLW_Zero_Detecting[3].I_Part_Of_Zero_Detect_lopt_UNCONNECTED ;
  wire \NLW_Zero_Detecting[3].I_Part_Of_Zero_Detect_lopt_2_UNCONNECTED ;
  wire \NLW_Zero_Detecting[3].I_Part_Of_Zero_Detect_zero_CI_2_UNCONNECTED ;
  wire \NLW_Zero_Detecting[4].I_Part_Of_Zero_Detect_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_Zero_Detecting[4].I_Part_Of_Zero_Detect_ex_op1_cmp_equal_n_UNCONNECTED ;
  wire \NLW_Zero_Detecting[4].I_Part_Of_Zero_Detect_zero_CI_4_UNCONNECTED ;

  assign lopt = lopt_5;
  assign lopt_6 = lopt_1;
  assign lopt_7 = lopt_2;
  system_microblaze_0_0__MB_MUXCY_403 Part_Of_Zero_Carry_Start
       (.ex_op1_cmp_equal(ex_op1_cmp_equal),
        .lopt(NLW_Part_Of_Zero_Carry_Start_lopt_UNCONNECTED),
        .lopt_1(ex_op1_cmp_equal_n),
        .lopt_2(S),
        .lopt_3(NLW_Part_Of_Zero_Carry_Start_lopt_3_UNCONNECTED),
        .lopt_4(\S0_inferred__3/i__n_0 ),
        .lopt_5(\^lopt_2 ),
        .lopt_6(\S0_inferred__2/i__n_0 ),
        .zero_CI_6(NLW_Part_Of_Zero_Carry_Start_zero_CI_6_UNCONNECTED));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \S0_inferred__0/i_ 
       (.I0(\Using_FPGA.Native_0 [0]),
        .I1(\Using_FPGA.Native_0 [5]),
        .I2(\Using_FPGA.Native_0 [3]),
        .I3(\Using_FPGA.Native_0 [4]),
        .I4(\Using_FPGA.Native_0 [1]),
        .I5(\Using_FPGA.Native_0 [2]),
        .O(\S0_inferred__0/i__n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \S0_inferred__1/i_ 
       (.I0(\Using_FPGA.Native_0 [6]),
        .I1(\Using_FPGA.Native_0 [11]),
        .I2(\Using_FPGA.Native_0 [9]),
        .I3(\Using_FPGA.Native_0 [10]),
        .I4(\Using_FPGA.Native_0 [7]),
        .I5(\Using_FPGA.Native_0 [8]),
        .O(\S0_inferred__1/i__n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \S0_inferred__2/i_ 
       (.I0(\Using_FPGA.Native_0 [12]),
        .I1(\Using_FPGA.Native_0 [17]),
        .I2(\Using_FPGA.Native_0 [15]),
        .I3(\Using_FPGA.Native_0 [16]),
        .I4(\Using_FPGA.Native_0 [13]),
        .I5(\Using_FPGA.Native_0 [14]),
        .O(\S0_inferred__2/i__n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \S0_inferred__3/i_ 
       (.I0(\Using_FPGA.Native_0 [18]),
        .I1(\Using_FPGA.Native_0 [23]),
        .I2(\Using_FPGA.Native_0 [21]),
        .I3(\Using_FPGA.Native_0 [22]),
        .I4(\Using_FPGA.Native_0 [19]),
        .I5(\Using_FPGA.Native_0 [20]),
        .O(\S0_inferred__3/i__n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \S0_inferred__4/i_ 
       (.I0(\Using_FPGA.Native_0 [24]),
        .I1(\Using_FPGA.Native_0 [29]),
        .I2(\Using_FPGA.Native_0 [27]),
        .I3(\Using_FPGA.Native_0 [28]),
        .I4(\Using_FPGA.Native_0 [25]),
        .I5(\Using_FPGA.Native_0 [26]),
        .O(S));
  system_microblaze_0_0__MB_MUXCY_406 \Zero_Detecting[3].I_Part_Of_Zero_Detect 
       (.\Using_FPGA.Native_0 (\S0_inferred__1/i__n_0 ),
        .ex_op1_cmp_equal_n(ex_op1_cmp_equal_n),
        .lopt(\NLW_Zero_Detecting[3].I_Part_Of_Zero_Detect_lopt_UNCONNECTED ),
        .lopt_1(\S0_inferred__0/i__n_0 ),
        .lopt_2(\NLW_Zero_Detecting[3].I_Part_Of_Zero_Detect_lopt_2_UNCONNECTED ),
        .lopt_3(\Using_FPGA.Native ),
        .lopt_4(lopt_5),
        .lopt_5(lopt_6),
        .lopt_6(lopt_7),
        .zero_CI_2(\NLW_Zero_Detecting[3].I_Part_Of_Zero_Detect_zero_CI_2_UNCONNECTED ),
        .zero_CI_3(zero_CI_3));
  system_microblaze_0_0__MB_MUXCY_407 \Zero_Detecting[4].I_Part_Of_Zero_Detect 
       (.\Using_FPGA.Native_0 (\NLW_Zero_Detecting[4].I_Part_Of_Zero_Detect_Using_FPGA.Native_0_UNCONNECTED ),
        .ex_op1_cmp_equal_n(\NLW_Zero_Detecting[4].I_Part_Of_Zero_Detect_ex_op1_cmp_equal_n_UNCONNECTED ),
        .lopt(\^lopt_2 ),
        .zero_CI_3(zero_CI_3),
        .zero_CI_4(\NLW_Zero_Detecting[4].I_Part_Of_Zero_Detect_zero_CI_4_UNCONNECTED ));
endmodule

(* ORIG_REF_NAME = "address_hit" *) 
module system_microblaze_0_0__address_hit
   (Hit,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ,
    single_Step_N_reg,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ,
    Q,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1 ,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_2 ,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_3 ,
    Dbg_Reg_En,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_i_2 ,
    force_stop_i,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg ,
    mem_Exception_Taken,
    ex_Exception_Taken,
    \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_4 ,
    \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0 ,
    single_Step_N,
    Dbg_TDI,
    Address,
    Dbg_Clk);
  output Hit;
  output \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  output single_Step_N_reg;
  input \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ;
  input [1:0]Q;
  input \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1 ;
  input \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_2 ;
  input \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_3 ;
  input [0:7]Dbg_Reg_En;
  input \Performance_Debug_Control.ex_dbg_pc_hit_i_i_2 ;
  input force_stop_i;
  input \Performance_Debug_Control.ex_dbg_pc_hit_i_reg ;
  input mem_Exception_Taken;
  input ex_Exception_Taken;
  input \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_4 ;
  input \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0 ;
  input single_Step_N;
  input Dbg_TDI;
  input [0:31]Address;
  input Dbg_Clk;

  wire [0:31]Address;
  wire Dbg_Clk;
  wire [0:7]Dbg_Reg_En;
  wire Dbg_TDI;
  wire Hit;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_i_2 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_reg ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_2 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_3 ;
  wire \Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_4 ;
  wire [1:0]Q;
  wire SRL16_MC15_1;
  wire SRL16_MC15_2;
  wire SRL16_MC15_3;
  wire SRL16_MC15_4;
  wire SRL16_MC15_5;
  wire SRL16_MC15_6;
  wire SRL16_MC15_7;
  wire SRL16_Sel_0;
  wire SRL16_Sel_1;
  wire SRL16_Sel_2;
  wire SRL16_Sel_3;
  wire SRL16_Sel_4;
  wire SRL16_Sel_5;
  wire SRL16_Sel_6;
  wire SRL16_Sel_7;
  wire carry_0;
  wire carry_4;
  wire ex_Exception_Taken;
  wire force_stop_i;
  wire lopt_1;
  wire lopt_10;
  wire lopt_11;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_7;
  wire lopt_9;
  wire mem_Exception_Taken;
  wire single_Step_N;
  wire single_Step_N_reg;
  wire which_pc__0;
  wire \NLW_Compare[0].MUXCY_I_carry_7_UNCONNECTED ;
  wire \NLW_Compare[0].MUXCY_I_lopt_UNCONNECTED ;
  wire \NLW_Compare[0].MUXCY_I_lopt_3_UNCONNECTED ;
  wire \NLW_Compare[1].MUXCY_I_SRL16_Sel_6_UNCONNECTED ;
  wire \NLW_Compare[1].MUXCY_I_carry_6_UNCONNECTED ;
  wire \NLW_Compare[1].MUXCY_I_carry_7_UNCONNECTED ;
  wire \NLW_Compare[1].MUXCY_I_lopt_UNCONNECTED ;
  wire \NLW_Compare[2].MUXCY_I_SRL16_Sel_5_UNCONNECTED ;
  wire \NLW_Compare[2].MUXCY_I_carry_5_UNCONNECTED ;
  wire \NLW_Compare[2].MUXCY_I_carry_6_UNCONNECTED ;
  wire \NLW_Compare[2].MUXCY_I_lopt_UNCONNECTED ;
  wire \NLW_Compare[3].MUXCY_I_SRL16_Sel_4_UNCONNECTED ;
  wire \NLW_Compare[3].MUXCY_I_carry_5_UNCONNECTED ;
  wire \NLW_Compare[4].MUXCY_I_carry_3_UNCONNECTED ;
  wire \NLW_Compare[4].MUXCY_I_lopt_UNCONNECTED ;
  wire \NLW_Compare[4].MUXCY_I_lopt_3_UNCONNECTED ;
  wire \NLW_Compare[5].MUXCY_I_SRL16_Sel_2_UNCONNECTED ;
  wire \NLW_Compare[5].MUXCY_I_carry_2_UNCONNECTED ;
  wire \NLW_Compare[5].MUXCY_I_carry_3_UNCONNECTED ;
  wire \NLW_Compare[5].MUXCY_I_lopt_UNCONNECTED ;
  wire \NLW_Compare[6].MUXCY_I_SRL16_Sel_1_UNCONNECTED ;
  wire \NLW_Compare[6].MUXCY_I_carry_1_UNCONNECTED ;
  wire \NLW_Compare[6].MUXCY_I_carry_2_UNCONNECTED ;
  wire \NLW_Compare[6].MUXCY_I_lopt_UNCONNECTED ;
  wire \NLW_Compare[7].MUXCY_I_SRL16_Sel_0_UNCONNECTED ;
  wire \NLW_Compare[7].MUXCY_I_carry_1_UNCONNECTED ;

  system_microblaze_0_0__MB_MUXCY \Compare[0].MUXCY_I 
       (.Q(Q[1]),
        .SRL16_Sel_7(SRL16_Sel_7),
        .carry_7(\NLW_Compare[0].MUXCY_I_carry_7_UNCONNECTED ),
        .lopt(\NLW_Compare[0].MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1),
        .lopt_2(SRL16_Sel_6),
        .lopt_3(\NLW_Compare[0].MUXCY_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_3),
        .lopt_5(SRL16_Sel_5),
        .lopt_6(lopt_4),
        .lopt_7(lopt_5),
        .lopt_8(SRL16_Sel_4));
  system_microblaze_0_0__MB_SRLC16E \Compare[0].SRLC16E_I 
       (.Address({Address[28],Address[29],Address[30],Address[31]}),
        .Dbg_Clk(Dbg_Clk),
        .Dbg_Reg_En(Dbg_Reg_En),
        .SRL16_MC15_7(SRL16_MC15_7),
        .SRL16_Sel_7(SRL16_Sel_7),
        .which_pc__0(which_pc__0));
  system_microblaze_0_0__MB_MUXCY_31 \Compare[1].MUXCY_I 
       (.SRL16_Sel_6(\NLW_Compare[1].MUXCY_I_SRL16_Sel_6_UNCONNECTED ),
        .carry_6(\NLW_Compare[1].MUXCY_I_carry_6_UNCONNECTED ),
        .carry_7(\NLW_Compare[1].MUXCY_I_carry_7_UNCONNECTED ),
        .lopt(\NLW_Compare[1].MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_1));
  system_microblaze_0_0__MB_SRLC16E_32 \Compare[1].SRLC16E_I 
       (.Address({Address[24],Address[25],Address[26],Address[27]}),
        .Dbg_Clk(Dbg_Clk),
        .SRL16_MC15_6(SRL16_MC15_6),
        .SRL16_MC15_7(SRL16_MC15_7),
        .SRL16_Sel_6(SRL16_Sel_6),
        .which_pc__0(which_pc__0));
  system_microblaze_0_0__MB_MUXCY_33 \Compare[2].MUXCY_I 
       (.SRL16_Sel_5(\NLW_Compare[2].MUXCY_I_SRL16_Sel_5_UNCONNECTED ),
        .carry_5(\NLW_Compare[2].MUXCY_I_carry_5_UNCONNECTED ),
        .carry_6(\NLW_Compare[2].MUXCY_I_carry_6_UNCONNECTED ),
        .lopt(\NLW_Compare[2].MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_3));
  system_microblaze_0_0__MB_SRLC16E_34 \Compare[2].SRLC16E_I 
       (.Address({Address[20],Address[21],Address[22],Address[23]}),
        .Dbg_Clk(Dbg_Clk),
        .SRL16_MC15_5(SRL16_MC15_5),
        .SRL16_MC15_6(SRL16_MC15_6),
        .SRL16_Sel_5(SRL16_Sel_5),
        .which_pc__0(which_pc__0));
  system_microblaze_0_0__MB_MUXCY_35 \Compare[3].MUXCY_I 
       (.SRL16_Sel_4(\NLW_Compare[3].MUXCY_I_SRL16_Sel_4_UNCONNECTED ),
        .carry_4(carry_4),
        .carry_5(\NLW_Compare[3].MUXCY_I_carry_5_UNCONNECTED ),
        .lopt(lopt_4),
        .lopt_1(lopt_5));
  system_microblaze_0_0__MB_SRLC16E_36 \Compare[3].SRLC16E_I 
       (.Address({Address[16],Address[17],Address[18],Address[19]}),
        .Dbg_Clk(Dbg_Clk),
        .SRL16_MC15_4(SRL16_MC15_4),
        .SRL16_MC15_5(SRL16_MC15_5),
        .SRL16_Sel_4(SRL16_Sel_4),
        .which_pc__0(which_pc__0));
  system_microblaze_0_0__MB_MUXCY_37 \Compare[4].MUXCY_I 
       (.SRL16_Sel_3(SRL16_Sel_3),
        .carry_3(\NLW_Compare[4].MUXCY_I_carry_3_UNCONNECTED ),
        .carry_4(carry_4),
        .lopt(\NLW_Compare[4].MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_7),
        .lopt_2(SRL16_Sel_2),
        .lopt_3(\NLW_Compare[4].MUXCY_I_lopt_3_UNCONNECTED ),
        .lopt_4(lopt_9),
        .lopt_5(SRL16_Sel_1),
        .lopt_6(lopt_10),
        .lopt_7(lopt_11),
        .lopt_8(SRL16_Sel_0));
  system_microblaze_0_0__MB_SRLC16E_38 \Compare[4].SRLC16E_I 
       (.Address({Address[12],Address[13],Address[14],Address[15]}),
        .Dbg_Clk(Dbg_Clk),
        .SRL16_MC15_3(SRL16_MC15_3),
        .SRL16_MC15_4(SRL16_MC15_4),
        .SRL16_Sel_3(SRL16_Sel_3),
        .which_pc__0(which_pc__0));
  system_microblaze_0_0__MB_MUXCY_39 \Compare[5].MUXCY_I 
       (.SRL16_Sel_2(\NLW_Compare[5].MUXCY_I_SRL16_Sel_2_UNCONNECTED ),
        .carry_2(\NLW_Compare[5].MUXCY_I_carry_2_UNCONNECTED ),
        .carry_3(\NLW_Compare[5].MUXCY_I_carry_3_UNCONNECTED ),
        .lopt(\NLW_Compare[5].MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_7));
  system_microblaze_0_0__MB_SRLC16E_40 \Compare[5].SRLC16E_I 
       (.Address({Address[8],Address[9],Address[10],Address[11]}),
        .Dbg_Clk(Dbg_Clk),
        .SRL16_MC15_2(SRL16_MC15_2),
        .SRL16_MC15_3(SRL16_MC15_3),
        .SRL16_Sel_2(SRL16_Sel_2),
        .which_pc__0(which_pc__0));
  system_microblaze_0_0__MB_MUXCY_41 \Compare[6].MUXCY_I 
       (.SRL16_Sel_1(\NLW_Compare[6].MUXCY_I_SRL16_Sel_1_UNCONNECTED ),
        .carry_1(\NLW_Compare[6].MUXCY_I_carry_1_UNCONNECTED ),
        .carry_2(\NLW_Compare[6].MUXCY_I_carry_2_UNCONNECTED ),
        .lopt(\NLW_Compare[6].MUXCY_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_9));
  system_microblaze_0_0__MB_SRLC16E_42 \Compare[6].SRLC16E_I 
       (.Address({Address[4],Address[5],Address[6],Address[7]}),
        .Dbg_Clk(Dbg_Clk),
        .SRL16_MC15_1(SRL16_MC15_1),
        .SRL16_MC15_2(SRL16_MC15_2),
        .SRL16_Sel_1(SRL16_Sel_1),
        .which_pc__0(which_pc__0));
  system_microblaze_0_0__MB_MUXCY_43 \Compare[7].MUXCY_I 
       (.SRL16_Sel_0(\NLW_Compare[7].MUXCY_I_SRL16_Sel_0_UNCONNECTED ),
        .carry_0(carry_0),
        .carry_1(\NLW_Compare[7].MUXCY_I_carry_1_UNCONNECTED ),
        .lopt(lopt_10),
        .lopt_1(lopt_11));
  system_microblaze_0_0__MB_SRLC16E_44 \Compare[7].SRLC16E_I 
       (.Address({Address[0],Address[1],Address[2],Address[3]}),
        .Dbg_Clk(Dbg_Clk),
        .Dbg_TDI(Dbg_TDI),
        .SRL16_MC15_1(SRL16_MC15_1),
        .SRL16_Sel_0(SRL16_Sel_0),
        .which_pc__0(which_pc__0));
  system_microblaze_0_0__MB_MUXCY_45 \The_First_BreakPoints.MUXCY_Post 
       (.Hit(Hit),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_i_2_0 (\Performance_Debug_Control.ex_dbg_pc_hit_i_i_2 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_reg (\Performance_Debug_Control.ex_dbg_pc_hit_i_reg ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0 (\Performance_Debug_Control.ex_dbg_pc_hit_i_reg_0 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg (\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 (\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_0 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1 (\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_1 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_2 (\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_2 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_3 (\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_3 ),
        .\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_4 (\Performance_Debug_Control.ex_dbg_pc_hit_single_step_reg_4 ),
        .Q(Q[0]),
        .carry_0(carry_0),
        .ex_Exception_Taken(ex_Exception_Taken),
        .force_stop_i(force_stop_i),
        .mem_Exception_Taken(mem_Exception_Taken),
        .single_Step_N(single_Step_N),
        .single_Step_N_reg(single_Step_N_reg));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module system_microblaze_0_0__carry_and
   (of_PipeRun_carry_1,
    use_Reg_Neg_S_reg,
    of_PipeRun_carry_2,
    lopt,
    lopt_1);
  output of_PipeRun_carry_1;
  input use_Reg_Neg_S_reg;
  input of_PipeRun_carry_2;
  input lopt;
  output lopt_1;

  wire lopt;
  wire lopt_1;
  wire of_PipeRun_carry_1;
  wire NLW_MUXCY_I_of_PipeRun_carry_2_UNCONNECTED;
  wire NLW_MUXCY_I_use_Reg_Neg_S_reg_UNCONNECTED;

  system_microblaze_0_0__MB_MUXCY_111 MUXCY_I
       (.lopt(lopt),
        .lopt_1(lopt_1),
        .of_PipeRun_carry_1(of_PipeRun_carry_1),
        .of_PipeRun_carry_2(NLW_MUXCY_I_of_PipeRun_carry_2_UNCONNECTED),
        .use_Reg_Neg_S_reg(NLW_MUXCY_I_use_Reg_Neg_S_reg_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module system_microblaze_0_0__carry_and_57
   (of_PipeRun_for_ce,
    ex_jump_nodelay_reg,
    of_read_imm_reg_ii_reg,
    wb_exception_i_reg,
    of_PipeRun_carry_1,
    ex_jump_nodelay,
    ex_jump,
    ex_jump_nodelay_reg_0,
    IB_Ready,
    if_missed_fetch,
    of_read_imm_reg_ii,
    p_9_in,
    of_read_imm_reg_ii_reg_0,
    dbg_pause,
    wb_exception,
    sync_reset);
  output of_PipeRun_for_ce;
  output ex_jump_nodelay_reg;
  output of_read_imm_reg_ii_reg;
  output wb_exception_i_reg;
  input of_PipeRun_carry_1;
  input ex_jump_nodelay;
  input ex_jump;
  input ex_jump_nodelay_reg_0;
  input IB_Ready;
  input if_missed_fetch;
  input of_read_imm_reg_ii;
  input p_9_in;
  input of_read_imm_reg_ii_reg_0;
  input dbg_pause;
  input wb_exception;
  input sync_reset;

  wire IB_Ready;
  wire ex_jump;
  wire ex_jump_nodelay;
  wire ex_jump_nodelay_reg;
  wire ex_jump_nodelay_reg_0;
  wire if_missed_fetch;
  wire of_PipeRun_carry_1;
  wire of_PipeRun_for_ce;
  wire of_read_imm_reg_ii;
  wire of_read_imm_reg_ii_reg;
  wire of_read_imm_reg_ii_reg_0;
  wire p_9_in;
  wire sync_reset;
  wire wb_exception;
  wire wb_exception_i_reg;
  wire NLW_MUXCY_I_dbg_pause_UNCONNECTED;

  system_microblaze_0_0__MB_MUXCY_110 MUXCY_I
       (.IB_Ready(IB_Ready),
        .dbg_pause(NLW_MUXCY_I_dbg_pause_UNCONNECTED),
        .ex_jump(ex_jump),
        .ex_jump_nodelay(ex_jump_nodelay),
        .ex_jump_nodelay_reg(ex_jump_nodelay_reg),
        .ex_jump_nodelay_reg_0(ex_jump_nodelay_reg_0),
        .if_missed_fetch(if_missed_fetch),
        .of_PipeRun_carry_1(of_PipeRun_carry_1),
        .of_pause_reg(of_PipeRun_for_ce),
        .of_read_imm_reg_ii(of_read_imm_reg_ii),
        .of_read_imm_reg_ii_reg(of_read_imm_reg_ii_reg),
        .of_read_imm_reg_ii_reg_0(of_read_imm_reg_ii_reg_0),
        .p_9_in(p_9_in),
        .sync_reset(sync_reset),
        .wb_exception(wb_exception),
        .wb_exception_i_reg(wb_exception_i_reg));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module system_microblaze_0_0__carry_and_58
   (of_PipeRun_carry_10,
    \Using_FPGA.Native ,
    lopt,
    lopt_1,
    lopt_2);
  output of_PipeRun_carry_10;
  input \Using_FPGA.Native ;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire lopt_1;
  wire lopt_2;
  wire \NLW_MUXCY_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_10_UNCONNECTED;

  system_microblaze_0_0__MB_MUXCY_109 MUXCY_I
       (.\Using_FPGA.Native_0 (\NLW_MUXCY_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .of_PipeRun_carry_10(NLW_MUXCY_I_of_PipeRun_carry_10_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module system_microblaze_0_0__carry_and_59
   (of_PipeRun_carry_9,
    EX_MBAR_Stall__2,
    \Using_FPGA.Native ,
    of_PipeRun_carry_10,
    ex_mbar_sleep,
    ex_jump_hold,
    ex_mbar_decode,
    ex_first_cycle,
    ex_mbar_stall_no_sleep_1,
    lopt,
    lopt_1);
  output of_PipeRun_carry_9;
  output EX_MBAR_Stall__2;
  input \Using_FPGA.Native ;
  input of_PipeRun_carry_10;
  input ex_mbar_sleep;
  input ex_jump_hold;
  input ex_mbar_decode;
  input ex_first_cycle;
  input ex_mbar_stall_no_sleep_1;
  input lopt;
  output lopt_1;

  wire EX_MBAR_Stall__2;
  wire ex_first_cycle;
  wire ex_jump_hold;
  wire ex_mbar_decode;
  wire ex_mbar_sleep;
  wire ex_mbar_stall_no_sleep_1;
  wire lopt;
  wire lopt_1;
  wire of_PipeRun_carry_9;
  wire \NLW_MUXCY_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire NLW_MUXCY_I_of_PipeRun_carry_10_UNCONNECTED;

  system_microblaze_0_0__MB_MUXCY_108 MUXCY_I
       (.EX_MBAR_Stall__2(EX_MBAR_Stall__2),
        .\Using_FPGA.Native_0 (\NLW_MUXCY_I_Using_FPGA.Native_0_UNCONNECTED ),
        .ex_first_cycle(ex_first_cycle),
        .ex_jump_hold(ex_jump_hold),
        .ex_mbar_decode(ex_mbar_decode),
        .ex_mbar_sleep(ex_mbar_sleep),
        .ex_mbar_stall_no_sleep_1(ex_mbar_stall_no_sleep_1),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .of_PipeRun_carry_10(NLW_MUXCY_I_of_PipeRun_carry_10_UNCONNECTED),
        .of_PipeRun_carry_9(of_PipeRun_carry_9));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module system_microblaze_0_0__carry_and_60
   (\Using_FPGA.Native ,
    E,
    in0,
    ex_Write_ICache_i_cmb,
    mem_gpr_write_dbg_reg,
    mem_gpr_write_reg,
    of_PipeRun_carry_9,
    \mem_pc_i_reg[0] ,
    Q,
    wb_exception,
    ex_Write_DCache_decode_reg,
    ex_write_dcache_instr,
    ex_Write_ICache_i,
    mem_gpr_write_dbg,
    ex_gpr_write_dbg,
    sync_reset,
    mem_gpr_write,
    mem_gpr_write_reg_0,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output \Using_FPGA.Native ;
  output [0:0]E;
  output in0;
  output ex_Write_ICache_i_cmb;
  output mem_gpr_write_dbg_reg;
  output mem_gpr_write_reg;
  input of_PipeRun_carry_9;
  input \mem_pc_i_reg[0] ;
  input [1:0]Q;
  input wb_exception;
  input ex_Write_DCache_decode_reg;
  input ex_write_dcache_instr;
  input ex_Write_ICache_i;
  input mem_gpr_write_dbg;
  input ex_gpr_write_dbg;
  input sync_reset;
  input mem_gpr_write;
  input mem_gpr_write_reg_0;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire [0:0]E;
  wire [1:0]Q;
  wire \Using_FPGA.Native ;
  wire ex_Write_DCache_decode_reg;
  wire ex_gpr_write_dbg;
  wire ex_write_dcache_instr;
  wire in0;
  wire lopt_1;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire mem_gpr_write;
  wire mem_gpr_write_dbg;
  wire mem_gpr_write_dbg_reg;
  wire mem_gpr_write_reg;
  wire mem_gpr_write_reg_0;
  wire \mem_pc_i_reg[0] ;
  wire of_PipeRun_carry_9;
  wire sync_reset;
  wire wb_exception;
  wire NLW_MUXCY_I_ex_Write_ICache_i_UNCONNECTED;
  wire NLW_MUXCY_I_ex_Write_ICache_i_reg_UNCONNECTED;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;
  wire NLW_MUXCY_I_lopt_3_UNCONNECTED;

  system_microblaze_0_0__MB_MUXCY_107 MUXCY_I
       (.E(E),
        .Q(Q),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .ex_Write_DCache_decode_reg(ex_Write_DCache_decode_reg),
        .ex_Write_ICache_i(NLW_MUXCY_I_ex_Write_ICache_i_UNCONNECTED),
        .ex_Write_ICache_i_reg(NLW_MUXCY_I_ex_Write_ICache_i_reg_UNCONNECTED),
        .ex_gpr_write_dbg(ex_gpr_write_dbg),
        .ex_write_dcache_instr(ex_write_dcache_instr),
        .in0(in0),
        .lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(NLW_MUXCY_I_lopt_3_UNCONNECTED),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .mem_gpr_write(mem_gpr_write),
        .mem_gpr_write_dbg(mem_gpr_write_dbg),
        .mem_gpr_write_dbg_reg(mem_gpr_write_dbg_reg),
        .mem_gpr_write_reg(mem_gpr_write_reg),
        .mem_gpr_write_reg_0(mem_gpr_write_reg_0),
        .\mem_pc_i_reg[0] (\mem_pc_i_reg[0] ),
        .of_PipeRun_carry_9(of_PipeRun_carry_9),
        .sync_reset(sync_reset),
        .wb_exception(wb_exception));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module system_microblaze_0_0__carry_and_61
   (of_PipeRun_carry_7,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    lopt,
    lopt_1);
  output of_PipeRun_carry_7;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input lopt;
  output lopt_1;

  wire lopt_1;
  wire \NLW_MUXCY_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire \NLW_MUXCY_I_Using_FPGA.Native_1_UNCONNECTED ;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_7_UNCONNECTED;

  system_microblaze_0_0__MB_MUXCY_106 MUXCY_I
       (.\Using_FPGA.Native_0 (\NLW_MUXCY_I_Using_FPGA.Native_0_UNCONNECTED ),
        .\Using_FPGA.Native_1 (\NLW_MUXCY_I_Using_FPGA.Native_1_UNCONNECTED ),
        .lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1),
        .of_PipeRun_carry_7(NLW_MUXCY_I_of_PipeRun_carry_7_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module system_microblaze_0_0__carry_and_62
   (of_PipeRun_carry_6,
    A,
    of_PipeRun_carry_7,
    lopt,
    lopt_1);
  output of_PipeRun_carry_6;
  input A;
  input of_PipeRun_carry_7;
  input lopt;
  output lopt_1;

  wire lopt_1;
  wire NLW_MUXCY_I_A_UNCONNECTED;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_6_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_7_UNCONNECTED;

  system_microblaze_0_0__MB_MUXCY_105 MUXCY_I
       (.A(NLW_MUXCY_I_A_UNCONNECTED),
        .lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1),
        .of_PipeRun_carry_6(NLW_MUXCY_I_of_PipeRun_carry_6_UNCONNECTED),
        .of_PipeRun_carry_7(NLW_MUXCY_I_of_PipeRun_carry_7_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module system_microblaze_0_0__carry_and_63
   (of_PipeRun_carry_5,
    \Using_FPGA.Native ,
    of_PipeRun_carry_6,
    lopt,
    lopt_1);
  output of_PipeRun_carry_5;
  input \Using_FPGA.Native ;
  input of_PipeRun_carry_6;
  input lopt;
  output lopt_1;

  wire lopt;
  wire lopt_1;
  wire of_PipeRun_carry_5;
  wire \NLW_MUXCY_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire NLW_MUXCY_I_of_PipeRun_carry_6_UNCONNECTED;

  system_microblaze_0_0__MB_MUXCY_104 MUXCY_I
       (.\Using_FPGA.Native_0 (\NLW_MUXCY_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .of_PipeRun_carry_5(of_PipeRun_carry_5),
        .of_PipeRun_carry_6(NLW_MUXCY_I_of_PipeRun_carry_6_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module system_microblaze_0_0__carry_and_64
   (of_PipeRun_carry_4,
    \Using_FPGA.Native ,
    of_PipeRun_carry_5,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output of_PipeRun_carry_4;
  input \Using_FPGA.Native ;
  input of_PipeRun_carry_5;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire \Using_FPGA.Native ;
  wire lopt_1;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire of_PipeRun_carry_5;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;
  wire NLW_MUXCY_I_lopt_3_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_4_UNCONNECTED;

  system_microblaze_0_0__MB_MUXCY_103 MUXCY_I
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(NLW_MUXCY_I_lopt_3_UNCONNECTED),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .of_PipeRun_carry_4(NLW_MUXCY_I_of_PipeRun_carry_4_UNCONNECTED),
        .of_PipeRun_carry_5(of_PipeRun_carry_5));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module system_microblaze_0_0__carry_and_65
   (of_PipeRun_carry_3,
    \Using_FPGA.Native ,
    of_PipeRun_carry_4,
    lopt,
    lopt_1);
  output of_PipeRun_carry_3;
  input \Using_FPGA.Native ;
  input of_PipeRun_carry_4;
  input lopt;
  output lopt_1;

  wire lopt_1;
  wire \NLW_MUXCY_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_3_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_4_UNCONNECTED;

  system_microblaze_0_0__MB_MUXCY_102 MUXCY_I
       (.\Using_FPGA.Native_0 (\NLW_MUXCY_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1),
        .of_PipeRun_carry_3(NLW_MUXCY_I_of_PipeRun_carry_3_UNCONNECTED),
        .of_PipeRun_carry_4(NLW_MUXCY_I_of_PipeRun_carry_4_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module system_microblaze_0_0__carry_and_66
   (of_PipeRun_carry_2,
    \Using_FPGA.Native ,
    of_PipeRun_carry_3,
    lopt,
    lopt_1);
  output of_PipeRun_carry_2;
  input \Using_FPGA.Native ;
  input of_PipeRun_carry_3;
  input lopt;
  output lopt_1;

  wire lopt_1;
  wire \NLW_MUXCY_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_2_UNCONNECTED;
  wire NLW_MUXCY_I_of_PipeRun_carry_3_UNCONNECTED;

  system_microblaze_0_0__MB_MUXCY_101 MUXCY_I
       (.\Using_FPGA.Native_0 (\NLW_MUXCY_I_Using_FPGA.Native_0_UNCONNECTED ),
        .lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1),
        .of_PipeRun_carry_2(NLW_MUXCY_I_of_PipeRun_carry_2_UNCONNECTED),
        .of_PipeRun_carry_3(NLW_MUXCY_I_of_PipeRun_carry_3_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module system_microblaze_0_0__carry_and_86
   (if_pc_incr_carry1,
    \Using_FPGA.Native ,
    if_pc_incr_carry0,
    lopt,
    lopt_1);
  output if_pc_incr_carry1;
  input \Using_FPGA.Native ;
  input if_pc_incr_carry0;
  input lopt;
  output lopt_1;

  wire lopt_1;
  wire \NLW_MUXCY_I_Using_FPGA.Native_0_UNCONNECTED ;
  wire NLW_MUXCY_I_if_pc_incr_carry0_UNCONNECTED;
  wire NLW_MUXCY_I_if_pc_incr_carry1_UNCONNECTED;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;

  system_microblaze_0_0__MB_MUXCY_100 MUXCY_I
       (.\Using_FPGA.Native_0 (\NLW_MUXCY_I_Using_FPGA.Native_0_UNCONNECTED ),
        .if_pc_incr_carry0(NLW_MUXCY_I_if_pc_incr_carry0_UNCONNECTED),
        .if_pc_incr_carry1(NLW_MUXCY_I_if_pc_incr_carry1_UNCONNECTED),
        .lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module system_microblaze_0_0__carry_and_87
   (if_pc_incr_carry0,
    if_missed_fetch,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8,
    lopt_9);
  output if_pc_incr_carry0;
  input if_missed_fetch;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;
  output lopt_9;

  wire if_missed_fetch;
  wire lopt_1;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire lopt_9;
  wire NLW_MUXCY_I_if_pc_incr_carry0_UNCONNECTED;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;
  wire NLW_MUXCY_I_lopt_3_UNCONNECTED;

  system_microblaze_0_0__MB_MUXCY_99 MUXCY_I
       (.if_missed_fetch(if_missed_fetch),
        .if_pc_incr_carry0(NLW_MUXCY_I_if_pc_incr_carry0_UNCONNECTED),
        .lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(NLW_MUXCY_I_lopt_3_UNCONNECTED),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .lopt_9(lopt_9));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module system_microblaze_0_0__carry_and_88
   (CI,
    if_fetch_for_timing_optimization1,
    if_pc_incr_carry1,
    lopt,
    lopt_1);
  output CI;
  input if_fetch_for_timing_optimization1;
  input if_pc_incr_carry1;
  input lopt;
  output lopt_1;

  wire lopt_1;
  wire NLW_MUXCY_I_CI_UNCONNECTED;
  wire NLW_MUXCY_I_if_fetch_for_timing_optimization1_UNCONNECTED;
  wire NLW_MUXCY_I_if_pc_incr_carry1_UNCONNECTED;
  wire NLW_MUXCY_I_lopt_UNCONNECTED;

  system_microblaze_0_0__MB_MUXCY_98 MUXCY_I
       (.CI(NLW_MUXCY_I_CI_UNCONNECTED),
        .if_fetch_for_timing_optimization1(NLW_MUXCY_I_if_fetch_for_timing_optimization1_UNCONNECTED),
        .if_pc_incr_carry1(NLW_MUXCY_I_if_pc_incr_carry1_UNCONNECTED),
        .lopt(NLW_MUXCY_I_lopt_UNCONNECTED),
        .lopt_1(lopt_1));
endmodule

(* ORIG_REF_NAME = "carry_and" *) 
module system_microblaze_0_0__carry_and_89
   (\Using_FPGA.Native ,
    mem_valid_reg,
    wb_valid_reg,
    wb_gpr_write_dbg0,
    wb_gpr_write_i0,
    mem_wait_on_ready_N,
    mem_valid_instr,
    mem_exception_from_ex,
    mem_valid_reg_0,
    mem_valid_reg_1,
    flush_pipe,
    wb_valid_reg_0,
    wb_piperun,
    sync_reset,
    wb_exception,
    mem_gpr_write_dbg,
    mem_gpr_write,
    lopt,
    lopt_1,
    lopt_2);
  output \Using_FPGA.Native ;
  output mem_valid_reg;
  output wb_valid_reg;
  output wb_gpr_write_dbg0;
  output wb_gpr_write_i0;
  input mem_wait_on_ready_N;
  input mem_valid_instr;
  input mem_exception_from_ex;
  input mem_valid_reg_0;
  input mem_valid_reg_1;
  input flush_pipe;
  input wb_valid_reg_0;
  input wb_piperun;
  input sync_reset;
  input wb_exception;
  input mem_gpr_write_dbg;
  input mem_gpr_write;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire \Using_FPGA.Native ;
  wire flush_pipe;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire mem_exception_from_ex;
  wire mem_gpr_write;
  wire mem_gpr_write_dbg;
  wire mem_valid_instr;
  wire mem_valid_reg;
  wire mem_valid_reg_0;
  wire mem_valid_reg_1;
  wire sync_reset;
  wire wb_exception;
  wire wb_gpr_write_dbg0;
  wire wb_gpr_write_i0;
  wire wb_piperun;
  wire wb_valid_reg;
  wire wb_valid_reg_0;
  wire NLW_MUXCY_I_mem_wait_on_ready_N_UNCONNECTED;

  system_microblaze_0_0__MB_MUXCY_91 MUXCY_I
       (.\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .flush_pipe(flush_pipe),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .mem_exception_from_ex(mem_exception_from_ex),
        .mem_gpr_write(mem_gpr_write),
        .mem_gpr_write_dbg(mem_gpr_write_dbg),
        .mem_valid_instr(mem_valid_instr),
        .mem_valid_reg(mem_valid_reg),
        .mem_valid_reg_0(mem_valid_reg_0),
        .mem_valid_reg_1(mem_valid_reg_1),
        .mem_wait_on_ready_N(NLW_MUXCY_I_mem_wait_on_ready_N_UNCONNECTED),
        .sync_reset(sync_reset),
        .wb_exception(wb_exception),
        .wb_gpr_write_dbg0(wb_gpr_write_dbg0),
        .wb_gpr_write_i0(wb_gpr_write_i0),
        .wb_piperun(wb_piperun),
        .wb_valid_reg(wb_valid_reg),
        .wb_valid_reg_0(wb_valid_reg_0));
endmodule

(* ORIG_REF_NAME = "carry_or" *) 
module system_microblaze_0_0__carry_or
   (mem_wait_on_ready_N,
    MEM_DataBus_Ready,
    mem_load_store_access,
    mem_Write_DCache,
    mem_valid_instr,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7,
    lopt_8);
  output mem_wait_on_ready_N;
  input MEM_DataBus_Ready;
  input mem_load_store_access;
  input mem_Write_DCache;
  input mem_valid_instr;
  output lopt;
  input lopt_1;
  input lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  input lopt_7;
  input lopt_8;

  wire MEM_DataBus_Ready;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire lopt_8;
  wire mem_Write_DCache;
  wire mem_load_store_access;
  wire mem_valid_instr;
  wire NLW_MUXCY_I_lopt_3_UNCONNECTED;
  wire NLW_MUXCY_I_mem_wait_on_ready_N_UNCONNECTED;

  system_microblaze_0_0__MB_MUXCY_90 MUXCY_I
       (.MEM_DataBus_Ready(MEM_DataBus_Ready),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(NLW_MUXCY_I_lopt_3_UNCONNECTED),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lopt_8(lopt_8),
        .mem_Write_DCache(mem_Write_DCache),
        .mem_load_store_access(mem_load_store_access),
        .mem_valid_instr(mem_valid_instr),
        .mem_wait_on_ready_N(NLW_MUXCY_I_mem_wait_on_ready_N_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "exception_registers_gti" *) 
module system_microblaze_0_0__exception_registers_gti
   (DI,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    \Using_FPGA.Native_3 ,
    \Using_FPGA.Native_4 ,
    \Using_FPGA.Native_5 ,
    \Using_FPGA.Native_6 ,
    \Using_FPGA.Native_7 ,
    \Using_FPGA.Native_8 ,
    \Using_FPGA.Native_9 ,
    \Using_FPGA.Native_10 ,
    \Using_FPGA.Native_11 ,
    \Using_FPGA.Native_12 ,
    \Using_FPGA.Native_13 ,
    \Using_FPGA.Native_14 ,
    \Using_FPGA.Native_15 ,
    \Using_FPGA.Native_16 ,
    \Using_FPGA.Native_17 ,
    \Using_FPGA.Native_18 ,
    \Using_FPGA.Native_19 ,
    \Using_FPGA.Native_20 ,
    \Using_FPGA.Native_21 ,
    \Using_FPGA.Native_22 ,
    \Using_FPGA.Native_23 ,
    \Using_FPGA.Native_24 ,
    \Using_FPGA.Native_25 ,
    \Using_FPGA.Native_26 ,
    \Using_FPGA.Native_27 ,
    \Using_FPGA.Native_28 ,
    \Using_FPGA.Native_29 ,
    \Using_FPGA.Native_30 ,
    wb_gpr_write_dbg_reg,
    \Using_FPGA.Native_31 ,
    \Using_FPGA.Native_32 ,
    \Using_FPGA.Native_33 ,
    \Using_FPGA.Native_34 ,
    Clk,
    I1_1,
    wb_gpr_write_dbg,
    \data_rd_reg_reg[23] ,
    read_register_MSR_1,
    \LOCKSTEP_Out_reg[3030] ,
    wb_byte_access,
    \LOCKSTEP_Out_reg[3024] ,
    Q,
    \LOCKSTEP_Out_reg[3026] ,
    \LOCKSTEP_Out_reg[3028] ,
    \LOCKSTEP_Out_reg[3030]_0 ,
    \LOCKSTEP_Out_reg[3029] ,
    \LOCKSTEP_Out_reg[3027] ,
    \LOCKSTEP_Out_reg[3025] ,
    \LOCKSTEP_Out_reg[3023] );
  output DI;
  output \Using_FPGA.Native ;
  output \Using_FPGA.Native_0 ;
  output \Using_FPGA.Native_1 ;
  output \Using_FPGA.Native_2 ;
  output \Using_FPGA.Native_3 ;
  output \Using_FPGA.Native_4 ;
  output \Using_FPGA.Native_5 ;
  output \Using_FPGA.Native_6 ;
  output \Using_FPGA.Native_7 ;
  output \Using_FPGA.Native_8 ;
  output \Using_FPGA.Native_9 ;
  output \Using_FPGA.Native_10 ;
  output \Using_FPGA.Native_11 ;
  output \Using_FPGA.Native_12 ;
  output \Using_FPGA.Native_13 ;
  output \Using_FPGA.Native_14 ;
  output \Using_FPGA.Native_15 ;
  output \Using_FPGA.Native_16 ;
  output \Using_FPGA.Native_17 ;
  output \Using_FPGA.Native_18 ;
  output \Using_FPGA.Native_19 ;
  output \Using_FPGA.Native_20 ;
  output \Using_FPGA.Native_21 ;
  output \Using_FPGA.Native_22 ;
  output \Using_FPGA.Native_23 ;
  output \Using_FPGA.Native_24 ;
  output \Using_FPGA.Native_25 ;
  output \Using_FPGA.Native_26 ;
  output \Using_FPGA.Native_27 ;
  output \Using_FPGA.Native_28 ;
  output [8:0]\Using_FPGA.Native_29 ;
  output [23:0]\Using_FPGA.Native_30 ;
  output [7:0]wb_gpr_write_dbg_reg;
  input [0:0]\Using_FPGA.Native_31 ;
  input [31:0]\Using_FPGA.Native_32 ;
  input \Using_FPGA.Native_33 ;
  input \Using_FPGA.Native_34 ;
  input Clk;
  input I1_1;
  input wb_gpr_write_dbg;
  input \data_rd_reg_reg[23] ;
  input read_register_MSR_1;
  input \LOCKSTEP_Out_reg[3030] ;
  input wb_byte_access;
  input \LOCKSTEP_Out_reg[3024] ;
  input [7:0]Q;
  input \LOCKSTEP_Out_reg[3026] ;
  input \LOCKSTEP_Out_reg[3028] ;
  input \LOCKSTEP_Out_reg[3030]_0 ;
  input \LOCKSTEP_Out_reg[3029] ;
  input \LOCKSTEP_Out_reg[3027] ;
  input \LOCKSTEP_Out_reg[3025] ;
  input \LOCKSTEP_Out_reg[3023] ;

  wire Clk;
  wire DI;
  wire I1_1;
  wire \LOCKSTEP_Out_reg[3023] ;
  wire \LOCKSTEP_Out_reg[3024] ;
  wire \LOCKSTEP_Out_reg[3025] ;
  wire \LOCKSTEP_Out_reg[3026] ;
  wire \LOCKSTEP_Out_reg[3027] ;
  wire \LOCKSTEP_Out_reg[3028] ;
  wire \LOCKSTEP_Out_reg[3029] ;
  wire \LOCKSTEP_Out_reg[3030] ;
  wire \LOCKSTEP_Out_reg[3030]_0 ;
  wire O5;
  wire [7:0]Q;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \^Using_FPGA.Native_10 ;
  wire \^Using_FPGA.Native_11 ;
  wire \^Using_FPGA.Native_12 ;
  wire \^Using_FPGA.Native_13 ;
  wire \Using_FPGA.Native_14 ;
  wire \Using_FPGA.Native_15 ;
  wire \Using_FPGA.Native_16 ;
  wire \Using_FPGA.Native_17 ;
  wire \Using_FPGA.Native_18 ;
  wire \Using_FPGA.Native_19 ;
  wire \Using_FPGA.Native_2 ;
  wire \Using_FPGA.Native_20 ;
  wire \Using_FPGA.Native_21 ;
  wire \Using_FPGA.Native_22 ;
  wire \Using_FPGA.Native_23 ;
  wire \Using_FPGA.Native_24 ;
  wire \Using_FPGA.Native_25 ;
  wire \Using_FPGA.Native_26 ;
  wire \Using_FPGA.Native_27 ;
  wire \Using_FPGA.Native_28 ;
  wire [8:0]\Using_FPGA.Native_29 ;
  wire \Using_FPGA.Native_3 ;
  wire [23:0]\Using_FPGA.Native_30 ;
  wire [0:0]\Using_FPGA.Native_31 ;
  wire [31:0]\Using_FPGA.Native_32 ;
  wire \Using_FPGA.Native_33 ;
  wire \Using_FPGA.Native_34 ;
  wire \Using_FPGA.Native_4 ;
  wire \Using_FPGA.Native_5 ;
  wire \^Using_FPGA.Native_6 ;
  wire \^Using_FPGA.Native_7 ;
  wire \^Using_FPGA.Native_8 ;
  wire \^Using_FPGA.Native_9 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[0].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[10].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[11].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[12].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[13].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[14].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[15].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[16].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[17].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[18].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[19].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[1].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[20].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[21].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[22].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[23].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[24].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[25].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[26].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[27].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[28].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[29].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[2].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[30].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[3].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[4].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[5].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[6].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[7].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[8].I_RET_ADDR_WB_n_0 ;
  wire \Using_FPGA_LUT6.Gen_Ret_Addr[9].I_RET_ADDR_WB_n_0 ;
  wire addr_AddSub_0;
  wire addr_AddSub_1;
  wire addr_AddSub_10;
  wire addr_AddSub_11;
  wire addr_AddSub_12;
  wire addr_AddSub_13;
  wire addr_AddSub_14;
  wire addr_AddSub_15;
  wire addr_AddSub_16;
  wire addr_AddSub_17;
  wire addr_AddSub_18;
  wire addr_AddSub_19;
  wire addr_AddSub_2;
  wire addr_AddSub_20;
  wire addr_AddSub_21;
  wire addr_AddSub_22;
  wire addr_AddSub_23;
  wire addr_AddSub_24;
  wire addr_AddSub_25;
  wire addr_AddSub_26;
  wire addr_AddSub_27;
  wire addr_AddSub_28;
  wire addr_AddSub_29;
  wire addr_AddSub_3;
  wire addr_AddSub_30;
  wire addr_AddSub_31;
  wire addr_AddSub_4;
  wire addr_AddSub_5;
  wire addr_AddSub_6;
  wire addr_AddSub_7;
  wire addr_AddSub_8;
  wire addr_AddSub_9;
  wire carry_11;
  wire carry_15;
  wire carry_19;
  wire carry_23;
  wire carry_27;
  wire carry_3;
  wire carry_31;
  wire carry_7;
  wire \data_rd_reg_reg[23] ;
  wire lopt_10;
  wire lopt_11;
  wire lopt_14;
  wire lopt_15;
  wire lopt_16;
  wire lopt_17;
  wire lopt_2;
  wire lopt_20;
  wire lopt_21;
  wire lopt_22;
  wire lopt_23;
  wire lopt_26;
  wire lopt_27;
  wire lopt_28;
  wire lopt_29;
  wire lopt_3;
  wire lopt_32;
  wire lopt_33;
  wire lopt_34;
  wire lopt_35;
  wire lopt_38;
  wire lopt_39;
  wire lopt_4;
  wire lopt_40;
  wire lopt_41;
  wire lopt_44;
  wire lopt_45;
  wire lopt_46;
  wire lopt_47;
  wire lopt_5;
  wire lopt_8;
  wire lopt_9;
  wire read_register_MSR_1;
  wire wb_byte_access;
  wire wb_gpr_write_dbg;
  wire [7:0]wb_gpr_write_dbg_reg;
  wire NLW_CarryIn_MUXCY_CI_UNCONNECTED;
  wire NLW_CarryIn_MUXCY_lopt_UNCONNECTED;
  wire NLW_CarryIn_MUXCY_lopt_3_UNCONNECTED;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_LOCKSTEP_Out_reg[3017]_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_LOCKSTEP_Out_reg[3018]_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[12].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[12].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[12].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[13].MUXCY_XOR_I_LOCKSTEP_Out_reg[3020]_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[13].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[13].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_LOCKSTEP_Out_reg[3021]_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_LOCKSTEP_Out_reg[3022]_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[16].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[16].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[16].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[17].MUXCY_XOR_I_LOCKSTEP_Out_reg[3024]_1_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[17].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_LOCKSTEP_Out_reg[3025]_1_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_LOCKSTEP_Out_reg[3026]_1_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[1].MUXCY_XOR_I_LOCKSTEP_Out_reg[3008]_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[1].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[1].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[20].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[20].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[20].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[21].MUXCY_XOR_I_LOCKSTEP_Out_reg[3028]_1_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[21].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_LOCKSTEP_Out_reg[3029]_1_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_LOCKSTEP_Out_reg[3030]_1_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[24].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[24].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[24].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[25].MUXCY_XOR_I_LOCKSTEP_Out_reg[3032]_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[25].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[25].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_LOCKSTEP_Out_reg[3033]_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_LOCKSTEP_Out_reg[3034]_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[28].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[28].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[28].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[29].MUXCY_XOR_I_LOCKSTEP_Out_reg[3036]_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[29].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[29].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_LOCKSTEP_Out_reg[3009]_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_LOCKSTEP_Out_reg[3037]_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_CI_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_DI_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_LOCKSTEP_Out_reg[3010]_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[4].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[4].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[4].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[5].MUXCY_XOR_I_LOCKSTEP_Out_reg[3012]_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[5].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[5].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_LOCKSTEP_Out_reg[3013]_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_LOCKSTEP_Out_reg[3014]_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[8].MUXCY_XOR_I_LO_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[8].MUXCY_XOR_I_lopt_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[8].MUXCY_XOR_I_lopt_3_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[9].MUXCY_XOR_I_CI_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[9].MUXCY_XOR_I_S_UNCONNECTED ;
  wire \NLW_Using_FPGA_LUT6.Gen_Ret_Addr[9].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ;

  system_microblaze_0_0__MB_MUXCY_307 CarryIn_MUXCY
       (.CI(NLW_CarryIn_MUXCY_CI_UNCONNECTED),
        .\Using_FPGA.Native_I2 (\Using_FPGA.Native_31 ),
        .lopt(NLW_CarryIn_MUXCY_lopt_UNCONNECTED),
        .lopt_1(DI),
        .lopt_10(lopt_4),
        .lopt_11(lopt_5),
        .lopt_2(addr_AddSub_0),
        .lopt_3(NLW_CarryIn_MUXCY_lopt_3_UNCONNECTED),
        .lopt_4(\Using_FPGA.Native ),
        .lopt_5(addr_AddSub_1),
        .lopt_6(lopt_2),
        .lopt_7(\Using_FPGA.Native_0 ),
        .lopt_8(addr_AddSub_2),
        .lopt_9(lopt_3));
  system_microblaze_0_0__MB_LUT6_2__parameterized5 \Using_FPGA_LUT6.Gen_Ret_Addr[0].I_RET_ADDR_WB 
       (.\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[0].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_29 [8]),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_32 [31]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_33 ),
        .addr_AddSub_31(addr_AddSub_31));
  system_microblaze_0_0__MB_MUXCY_XORCY_308 \Using_FPGA_LUT6.Gen_Ret_Addr[0].MUXCY_XOR_I 
       (.LO(carry_31),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [23]),
        .addr_AddSub_31(addr_AddSub_31));
  system_microblaze_0_0__MB_FDRE_309 \Using_FPGA_LUT6.Gen_Ret_Addr[0].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_29 [8]),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[0].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_310 \Using_FPGA_LUT6.Gen_Ret_Addr[10].I_RET_ADDR_WB 
       (.S(addr_AddSub_21),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[10].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_19 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_32 [21]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_311 \Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3017] (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_LOCKSTEP_Out_reg[3017]_UNCONNECTED ),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [13]),
        .\Using_FPGA.Native_I2_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[10].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_34));
  system_microblaze_0_0__MB_FDRE_312 \Using_FPGA_LUT6.Gen_Ret_Addr[10].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_19 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[10].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_313 \Using_FPGA_LUT6.Gen_Ret_Addr[11].I_RET_ADDR_WB 
       (.S(addr_AddSub_20),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[11].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_18 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_32 [20]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_314 \Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3018] (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_LOCKSTEP_Out_reg[3018]_UNCONNECTED ),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [12]),
        .\Using_FPGA.Native_I2_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[11].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_33));
  system_microblaze_0_0__MB_FDRE_315 \Using_FPGA_LUT6.Gen_Ret_Addr[11].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_18 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[11].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_316 \Using_FPGA_LUT6.Gen_Ret_Addr[12].I_RET_ADDR_WB 
       (.S(addr_AddSub_19),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[12].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_17 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_32 [19]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_317 \Using_FPGA_LUT6.Gen_Ret_Addr[12].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[12].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3019] (carry_19),
        .S(addr_AddSub_19),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [11]),
        .\Using_FPGA.Native_I2_0 (\Using_FPGA.Native_17 ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[12].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\Using_FPGA.Native_18 ),
        .lopt_10(lopt_34),
        .lopt_11(lopt_35),
        .lopt_2(addr_AddSub_20),
        .lopt_3(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[12].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(\Using_FPGA.Native_19 ),
        .lopt_5(addr_AddSub_21),
        .lopt_6(lopt_32),
        .lopt_7(\Using_FPGA.Native_20 ),
        .lopt_8(addr_AddSub_22),
        .lopt_9(lopt_33));
  system_microblaze_0_0__MB_FDRE_318 \Using_FPGA_LUT6.Gen_Ret_Addr[12].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_17 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[12].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_319 \Using_FPGA_LUT6.Gen_Ret_Addr[13].I_RET_ADDR_WB 
       (.S(addr_AddSub_18),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[13].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_16 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_32 [18]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_320 \Using_FPGA_LUT6.Gen_Ret_Addr[13].MUXCY_XOR_I 
       (.LO(carry_19),
        .\LOCKSTEP_Out_reg[3020] (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[13].MUXCY_XOR_I_LOCKSTEP_Out_reg[3020]_UNCONNECTED ),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[13].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [10]),
        .\Using_FPGA.Native_I2_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[13].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ),
        .lopt(lopt_26),
        .lopt_1(lopt_29));
  system_microblaze_0_0__MB_FDRE_321 \Using_FPGA_LUT6.Gen_Ret_Addr[13].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_16 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[13].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_322 \Using_FPGA_LUT6.Gen_Ret_Addr[14].I_RET_ADDR_WB 
       (.S(addr_AddSub_17),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[14].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_15 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_32 [17]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_323 \Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3021] (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_LOCKSTEP_Out_reg[3021]_UNCONNECTED ),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [9]),
        .\Using_FPGA.Native_I2_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[14].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_28));
  system_microblaze_0_0__MB_FDRE_324 \Using_FPGA_LUT6.Gen_Ret_Addr[14].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_15 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[14].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_325 \Using_FPGA_LUT6.Gen_Ret_Addr[15].I_RET_ADDR_WB 
       (.S(addr_AddSub_16),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[15].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_14 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_32 [16]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_326 \Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3022] (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_LOCKSTEP_Out_reg[3022]_UNCONNECTED ),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [8]),
        .\Using_FPGA.Native_I2_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[15].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_27));
  system_microblaze_0_0__MB_FDRE_327 \Using_FPGA_LUT6.Gen_Ret_Addr[15].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_14 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[15].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_328 \Using_FPGA_LUT6.Gen_Ret_Addr[16].I_RET_ADDR_WB 
       (.DI(\^Using_FPGA.Native_13 ),
        .S(addr_AddSub_15),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[16].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_32 [15]),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_329 \Using_FPGA_LUT6.Gen_Ret_Addr[16].MUXCY_XOR_I 
       (.DI(\^Using_FPGA.Native_13 ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[16].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3023] (\LOCKSTEP_Out_reg[3030] ),
        .\LOCKSTEP_Out_reg[3023]_0 (\LOCKSTEP_Out_reg[3023] ),
        .\LOCKSTEP_Out_reg[3023]_1 (carry_15),
        .Q(Q[7]),
        .S(addr_AddSub_15),
        .WB_Byte_Access_reg(\Using_FPGA.Native_29 [7]),
        .\data_rd_reg_reg[16] (\data_rd_reg_reg[23] ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[16].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\Using_FPGA.Native_14 ),
        .lopt_10(lopt_28),
        .lopt_11(lopt_29),
        .lopt_2(addr_AddSub_16),
        .lopt_3(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[16].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(\Using_FPGA.Native_15 ),
        .lopt_5(addr_AddSub_17),
        .lopt_6(lopt_26),
        .lopt_7(\Using_FPGA.Native_16 ),
        .lopt_8(addr_AddSub_18),
        .lopt_9(lopt_27),
        .read_register_MSR_1(read_register_MSR_1),
        .wb_byte_access(wb_byte_access),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .wb_gpr_write_dbg_reg(wb_gpr_write_dbg_reg[7]));
  system_microblaze_0_0__MB_FDRE_330 \Using_FPGA_LUT6.Gen_Ret_Addr[16].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\^Using_FPGA.Native_13 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[16].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_331 \Using_FPGA_LUT6.Gen_Ret_Addr[17].I_RET_ADDR_WB 
       (.DI(\^Using_FPGA.Native_12 ),
        .S(addr_AddSub_14),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[17].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_32 [14]),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_332 \Using_FPGA_LUT6.Gen_Ret_Addr[17].MUXCY_XOR_I 
       (.DI(\^Using_FPGA.Native_12 ),
        .LO(carry_15),
        .\LOCKSTEP_Out_reg[3024] (\LOCKSTEP_Out_reg[3030] ),
        .\LOCKSTEP_Out_reg[3024]_0 (\LOCKSTEP_Out_reg[3024] ),
        .\LOCKSTEP_Out_reg[3024]_1 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[17].MUXCY_XOR_I_LOCKSTEP_Out_reg[3024]_1_UNCONNECTED ),
        .Q(Q[6]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[17].MUXCY_XOR_I_S_UNCONNECTED ),
        .WB_Byte_Access_reg(\Using_FPGA.Native_29 [6]),
        .\data_rd_reg_reg[17] (\data_rd_reg_reg[23] ),
        .lopt(lopt_20),
        .lopt_1(lopt_23),
        .read_register_MSR_1(read_register_MSR_1),
        .wb_byte_access(wb_byte_access),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .wb_gpr_write_dbg_reg(wb_gpr_write_dbg_reg[6]));
  system_microblaze_0_0__MB_FDRE_333 \Using_FPGA_LUT6.Gen_Ret_Addr[17].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\^Using_FPGA.Native_12 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[17].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_334 \Using_FPGA_LUT6.Gen_Ret_Addr[18].I_RET_ADDR_WB 
       (.DI(\^Using_FPGA.Native_11 ),
        .S(addr_AddSub_13),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[18].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_32 [13]),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_335 \Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I 
       (.DI(\^Using_FPGA.Native_11 ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3025] (\LOCKSTEP_Out_reg[3030] ),
        .\LOCKSTEP_Out_reg[3025]_0 (\LOCKSTEP_Out_reg[3025] ),
        .\LOCKSTEP_Out_reg[3025]_1 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_LOCKSTEP_Out_reg[3025]_1_UNCONNECTED ),
        .Q(Q[5]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_S_UNCONNECTED ),
        .WB_Byte_Access_reg(\Using_FPGA.Native_29 [5]),
        .\data_rd_reg_reg[18] (\data_rd_reg_reg[23] ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[18].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_22),
        .read_register_MSR_1(read_register_MSR_1),
        .wb_byte_access(wb_byte_access),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .wb_gpr_write_dbg_reg(wb_gpr_write_dbg_reg[5]));
  system_microblaze_0_0__MB_FDRE_336 \Using_FPGA_LUT6.Gen_Ret_Addr[18].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\^Using_FPGA.Native_11 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[18].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_337 \Using_FPGA_LUT6.Gen_Ret_Addr[19].I_RET_ADDR_WB 
       (.DI(\^Using_FPGA.Native_10 ),
        .S(addr_AddSub_12),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[19].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_32 [12]),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_338 \Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I 
       (.DI(\^Using_FPGA.Native_10 ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3026] (\LOCKSTEP_Out_reg[3030] ),
        .\LOCKSTEP_Out_reg[3026]_0 (\LOCKSTEP_Out_reg[3026] ),
        .\LOCKSTEP_Out_reg[3026]_1 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_LOCKSTEP_Out_reg[3026]_1_UNCONNECTED ),
        .Q(Q[4]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_S_UNCONNECTED ),
        .WB_Byte_Access_reg(\Using_FPGA.Native_29 [4]),
        .\data_rd_reg_reg[19] (\data_rd_reg_reg[23] ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[19].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_21),
        .read_register_MSR_1(read_register_MSR_1),
        .wb_byte_access(wb_byte_access),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .wb_gpr_write_dbg_reg(wb_gpr_write_dbg_reg[4]));
  system_microblaze_0_0__MB_FDRE_339 \Using_FPGA_LUT6.Gen_Ret_Addr[19].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\^Using_FPGA.Native_10 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[19].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_340 \Using_FPGA_LUT6.Gen_Ret_Addr[1].I_RET_ADDR_WB 
       (.S(addr_AddSub_30),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[1].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_28 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_32 [30]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_341 \Using_FPGA_LUT6.Gen_Ret_Addr[1].MUXCY_XOR_I 
       (.LO(carry_31),
        .\LOCKSTEP_Out_reg[3008] (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[1].MUXCY_XOR_I_LOCKSTEP_Out_reg[3008]_UNCONNECTED ),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[1].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [22]),
        .\Using_FPGA.Native_I2_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[1].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ),
        .lopt(lopt_44),
        .lopt_1(lopt_47));
  system_microblaze_0_0__MB_FDRE_342 \Using_FPGA_LUT6.Gen_Ret_Addr[1].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_28 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[1].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_343 \Using_FPGA_LUT6.Gen_Ret_Addr[20].I_RET_ADDR_WB 
       (.DI(\^Using_FPGA.Native_9 ),
        .S(addr_AddSub_11),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[20].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_32 [11]),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_344 \Using_FPGA_LUT6.Gen_Ret_Addr[20].MUXCY_XOR_I 
       (.DI(\^Using_FPGA.Native_9 ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[20].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3027] (\LOCKSTEP_Out_reg[3030] ),
        .\LOCKSTEP_Out_reg[3027]_0 (\LOCKSTEP_Out_reg[3027] ),
        .\LOCKSTEP_Out_reg[3027]_1 (carry_11),
        .Q(Q[3]),
        .S(addr_AddSub_11),
        .WB_Byte_Access_reg(\Using_FPGA.Native_29 [3]),
        .\data_rd_reg_reg[20] (\data_rd_reg_reg[23] ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[20].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^Using_FPGA.Native_10 ),
        .lopt_10(lopt_22),
        .lopt_11(lopt_23),
        .lopt_2(addr_AddSub_12),
        .lopt_3(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[20].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(\^Using_FPGA.Native_11 ),
        .lopt_5(addr_AddSub_13),
        .lopt_6(lopt_20),
        .lopt_7(\^Using_FPGA.Native_12 ),
        .lopt_8(addr_AddSub_14),
        .lopt_9(lopt_21),
        .read_register_MSR_1(read_register_MSR_1),
        .wb_byte_access(wb_byte_access),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .wb_gpr_write_dbg_reg(wb_gpr_write_dbg_reg[3]));
  system_microblaze_0_0__MB_FDRE_345 \Using_FPGA_LUT6.Gen_Ret_Addr[20].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\^Using_FPGA.Native_9 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[20].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_346 \Using_FPGA_LUT6.Gen_Ret_Addr[21].I_RET_ADDR_WB 
       (.DI(\^Using_FPGA.Native_8 ),
        .S(addr_AddSub_10),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[21].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_32 [10]),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_347 \Using_FPGA_LUT6.Gen_Ret_Addr[21].MUXCY_XOR_I 
       (.DI(\^Using_FPGA.Native_8 ),
        .LO(carry_11),
        .\LOCKSTEP_Out_reg[3028] (\LOCKSTEP_Out_reg[3030] ),
        .\LOCKSTEP_Out_reg[3028]_0 (\LOCKSTEP_Out_reg[3028] ),
        .\LOCKSTEP_Out_reg[3028]_1 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[21].MUXCY_XOR_I_LOCKSTEP_Out_reg[3028]_1_UNCONNECTED ),
        .Q(Q[2]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[21].MUXCY_XOR_I_S_UNCONNECTED ),
        .WB_Byte_Access_reg(\Using_FPGA.Native_29 [2]),
        .\data_rd_reg_reg[21] (\data_rd_reg_reg[23] ),
        .lopt(lopt_14),
        .lopt_1(lopt_17),
        .read_register_MSR_1(read_register_MSR_1),
        .wb_byte_access(wb_byte_access),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .wb_gpr_write_dbg_reg(wb_gpr_write_dbg_reg[2]));
  system_microblaze_0_0__MB_FDRE_348 \Using_FPGA_LUT6.Gen_Ret_Addr[21].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\^Using_FPGA.Native_8 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[21].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_349 \Using_FPGA_LUT6.Gen_Ret_Addr[22].I_RET_ADDR_WB 
       (.DI(\^Using_FPGA.Native_7 ),
        .S(addr_AddSub_9),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[22].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_32 [9]),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_350 \Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I 
       (.DI(\^Using_FPGA.Native_7 ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3029] (\LOCKSTEP_Out_reg[3030] ),
        .\LOCKSTEP_Out_reg[3029]_0 (\LOCKSTEP_Out_reg[3029] ),
        .\LOCKSTEP_Out_reg[3029]_1 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_LOCKSTEP_Out_reg[3029]_1_UNCONNECTED ),
        .Q(Q[1]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_S_UNCONNECTED ),
        .WB_Byte_Access_reg(\Using_FPGA.Native_29 [1]),
        .\data_rd_reg_reg[22] (\data_rd_reg_reg[23] ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[22].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_16),
        .read_register_MSR_1(read_register_MSR_1),
        .wb_byte_access(wb_byte_access),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .wb_gpr_write_dbg_reg(wb_gpr_write_dbg_reg[1]));
  system_microblaze_0_0__MB_FDRE_351 \Using_FPGA_LUT6.Gen_Ret_Addr[22].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\^Using_FPGA.Native_7 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[22].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_352 \Using_FPGA_LUT6.Gen_Ret_Addr[23].I_RET_ADDR_WB 
       (.DI(\^Using_FPGA.Native_6 ),
        .S(addr_AddSub_8),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[23].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_32 [8]),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_353 \Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I 
       (.DI(\^Using_FPGA.Native_6 ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3030] (\LOCKSTEP_Out_reg[3030] ),
        .\LOCKSTEP_Out_reg[3030]_0 (\LOCKSTEP_Out_reg[3030]_0 ),
        .\LOCKSTEP_Out_reg[3030]_1 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_LOCKSTEP_Out_reg[3030]_1_UNCONNECTED ),
        .Q(Q[0]),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_S_UNCONNECTED ),
        .WB_Byte_Access_reg(\Using_FPGA.Native_29 [0]),
        .\data_rd_reg_reg[23] (\data_rd_reg_reg[23] ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[23].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_15),
        .read_register_MSR_1(read_register_MSR_1),
        .wb_byte_access(wb_byte_access),
        .wb_gpr_write_dbg(wb_gpr_write_dbg),
        .wb_gpr_write_dbg_reg(wb_gpr_write_dbg_reg[0]));
  system_microblaze_0_0__MB_FDRE_354 \Using_FPGA_LUT6.Gen_Ret_Addr[23].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\^Using_FPGA.Native_6 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[23].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_355 \Using_FPGA_LUT6.Gen_Ret_Addr[24].I_RET_ADDR_WB 
       (.S(addr_AddSub_7),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[24].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_5 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_32 [7]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_356 \Using_FPGA_LUT6.Gen_Ret_Addr[24].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[24].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3031] (carry_7),
        .S(addr_AddSub_7),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [7]),
        .\Using_FPGA.Native_I2_0 (\Using_FPGA.Native_5 ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[24].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\^Using_FPGA.Native_6 ),
        .lopt_10(lopt_16),
        .lopt_11(lopt_17),
        .lopt_2(addr_AddSub_8),
        .lopt_3(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[24].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(\^Using_FPGA.Native_7 ),
        .lopt_5(addr_AddSub_9),
        .lopt_6(lopt_14),
        .lopt_7(\^Using_FPGA.Native_8 ),
        .lopt_8(addr_AddSub_10),
        .lopt_9(lopt_15));
  system_microblaze_0_0__MB_FDRE_357 \Using_FPGA_LUT6.Gen_Ret_Addr[24].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_5 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[24].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_358 \Using_FPGA_LUT6.Gen_Ret_Addr[25].I_RET_ADDR_WB 
       (.S(addr_AddSub_6),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[25].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_4 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_32 [6]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_359 \Using_FPGA_LUT6.Gen_Ret_Addr[25].MUXCY_XOR_I 
       (.LO(carry_7),
        .\LOCKSTEP_Out_reg[3032] (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[25].MUXCY_XOR_I_LOCKSTEP_Out_reg[3032]_UNCONNECTED ),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[25].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [6]),
        .\Using_FPGA.Native_I2_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[25].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ),
        .lopt(lopt_8),
        .lopt_1(lopt_11));
  system_microblaze_0_0__MB_FDRE_360 \Using_FPGA_LUT6.Gen_Ret_Addr[25].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_4 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[25].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_361 \Using_FPGA_LUT6.Gen_Ret_Addr[26].I_RET_ADDR_WB 
       (.S(addr_AddSub_5),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[26].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_3 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_32 [5]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_362 \Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3033] (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_LOCKSTEP_Out_reg[3033]_UNCONNECTED ),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [5]),
        .\Using_FPGA.Native_I2_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[26].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_10));
  system_microblaze_0_0__MB_FDRE_363 \Using_FPGA_LUT6.Gen_Ret_Addr[26].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_3 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[26].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_364 \Using_FPGA_LUT6.Gen_Ret_Addr[27].I_RET_ADDR_WB 
       (.S(addr_AddSub_4),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[27].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_2 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_32 [4]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_365 \Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3034] (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_LOCKSTEP_Out_reg[3034]_UNCONNECTED ),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [4]),
        .\Using_FPGA.Native_I2_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[27].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_9));
  system_microblaze_0_0__MB_FDRE_366 \Using_FPGA_LUT6.Gen_Ret_Addr[27].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_2 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[27].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_367 \Using_FPGA_LUT6.Gen_Ret_Addr[28].I_RET_ADDR_WB 
       (.S(addr_AddSub_3),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[28].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_32 [3]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_368 \Using_FPGA_LUT6.Gen_Ret_Addr[28].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[28].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3035] (carry_3),
        .S(addr_AddSub_3),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [3]),
        .\Using_FPGA.Native_I2_0 (\Using_FPGA.Native_1 ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[28].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\Using_FPGA.Native_2 ),
        .lopt_10(lopt_10),
        .lopt_11(lopt_11),
        .lopt_2(addr_AddSub_4),
        .lopt_3(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[28].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(\Using_FPGA.Native_3 ),
        .lopt_5(addr_AddSub_5),
        .lopt_6(lopt_8),
        .lopt_7(\Using_FPGA.Native_4 ),
        .lopt_8(addr_AddSub_6),
        .lopt_9(lopt_9));
  system_microblaze_0_0__MB_FDRE_369 \Using_FPGA_LUT6.Gen_Ret_Addr[28].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[28].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_370 \Using_FPGA_LUT6.Gen_Ret_Addr[29].I_RET_ADDR_WB 
       (.I1_1(I1_1),
        .S(addr_AddSub_2),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[29].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_32 [2]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_371 \Using_FPGA_LUT6.Gen_Ret_Addr[29].MUXCY_XOR_I 
       (.LO(carry_3),
        .\LOCKSTEP_Out_reg[3036] (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[29].MUXCY_XOR_I_LOCKSTEP_Out_reg[3036]_UNCONNECTED ),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[29].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [2]),
        .\Using_FPGA.Native_I2_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[29].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ),
        .lopt(lopt_2),
        .lopt_1(lopt_5));
  system_microblaze_0_0__MB_FDRE_372 \Using_FPGA_LUT6.Gen_Ret_Addr[29].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[29].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_373 \Using_FPGA_LUT6.Gen_Ret_Addr[2].I_RET_ADDR_WB 
       (.S(addr_AddSub_29),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[2].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_27 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_32 [29]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_374 \Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3009] (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_LOCKSTEP_Out_reg[3009]_UNCONNECTED ),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [21]),
        .\Using_FPGA.Native_I2_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[2].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_46));
  system_microblaze_0_0__MB_FDRE_375 \Using_FPGA_LUT6.Gen_Ret_Addr[2].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_27 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[2].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_376 \Using_FPGA_LUT6.Gen_Ret_Addr[30].I_RET_ADDR_WB 
       (.S(addr_AddSub_1),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[30].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_32 [1]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_377 \Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3037] (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_LOCKSTEP_Out_reg[3037]_UNCONNECTED ),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [1]),
        .\Using_FPGA.Native_I2_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[30].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_4));
  system_microblaze_0_0__MB_FDRE_378 \Using_FPGA_LUT6.Gen_Ret_Addr[30].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[30].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_379 \Using_FPGA_LUT6.Gen_Ret_Addr[31].I_RET_ADDR_WB 
       (.DI(DI),
        .O5(O5),
        .S(addr_AddSub_0),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_32 [0]),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_380 \Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I 
       (.CI(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_CI_UNCONNECTED ),
        .DI(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_DI_UNCONNECTED ),
        .LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_LO_UNCONNECTED ),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [0]),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[31].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_3));
  system_microblaze_0_0__MB_FDRE_381 \Using_FPGA_LUT6.Gen_Ret_Addr[31].WB_PC_FDRE 
       (.Clk(Clk),
        .DI(DI),
        .O5(O5),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_34 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_382 \Using_FPGA_LUT6.Gen_Ret_Addr[3].I_RET_ADDR_WB 
       (.S(addr_AddSub_28),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[3].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_26 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_32 [28]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_383 \Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3010] (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_LOCKSTEP_Out_reg[3010]_UNCONNECTED ),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [20]),
        .\Using_FPGA.Native_I2_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[3].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_45));
  system_microblaze_0_0__MB_FDRE_384 \Using_FPGA_LUT6.Gen_Ret_Addr[3].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_26 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[3].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_385 \Using_FPGA_LUT6.Gen_Ret_Addr[4].I_RET_ADDR_WB 
       (.S(addr_AddSub_27),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[4].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_25 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_32 [27]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_386 \Using_FPGA_LUT6.Gen_Ret_Addr[4].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[4].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3011] (carry_27),
        .S(addr_AddSub_27),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [19]),
        .\Using_FPGA.Native_I2_0 (\Using_FPGA.Native_25 ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[4].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\Using_FPGA.Native_26 ),
        .lopt_10(lopt_46),
        .lopt_11(lopt_47),
        .lopt_2(addr_AddSub_28),
        .lopt_3(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[4].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(\Using_FPGA.Native_27 ),
        .lopt_5(addr_AddSub_29),
        .lopt_6(lopt_44),
        .lopt_7(\Using_FPGA.Native_28 ),
        .lopt_8(addr_AddSub_30),
        .lopt_9(lopt_45));
  system_microblaze_0_0__MB_FDRE_387 \Using_FPGA_LUT6.Gen_Ret_Addr[4].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_25 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[4].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_388 \Using_FPGA_LUT6.Gen_Ret_Addr[5].I_RET_ADDR_WB 
       (.S(addr_AddSub_26),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[5].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_24 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_32 [26]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_389 \Using_FPGA_LUT6.Gen_Ret_Addr[5].MUXCY_XOR_I 
       (.LO(carry_27),
        .\LOCKSTEP_Out_reg[3012] (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[5].MUXCY_XOR_I_LOCKSTEP_Out_reg[3012]_UNCONNECTED ),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[5].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [18]),
        .\Using_FPGA.Native_I2_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[5].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ),
        .lopt(lopt_38),
        .lopt_1(lopt_41));
  system_microblaze_0_0__MB_FDRE_390 \Using_FPGA_LUT6.Gen_Ret_Addr[5].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_24 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[5].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_391 \Using_FPGA_LUT6.Gen_Ret_Addr[6].I_RET_ADDR_WB 
       (.S(addr_AddSub_25),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[6].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_23 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_32 [25]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_392 \Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3013] (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_LOCKSTEP_Out_reg[3013]_UNCONNECTED ),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [17]),
        .\Using_FPGA.Native_I2_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[6].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_40));
  system_microblaze_0_0__MB_FDRE_393 \Using_FPGA_LUT6.Gen_Ret_Addr[6].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_23 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[6].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_394 \Using_FPGA_LUT6.Gen_Ret_Addr[7].I_RET_ADDR_WB 
       (.S(addr_AddSub_24),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[7].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_22 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_32 [24]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_395 \Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3014] (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_LOCKSTEP_Out_reg[3014]_UNCONNECTED ),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [16]),
        .\Using_FPGA.Native_I2_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[7].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(lopt_39));
  system_microblaze_0_0__MB_FDRE_396 \Using_FPGA_LUT6.Gen_Ret_Addr[7].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_22 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[7].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_397 \Using_FPGA_LUT6.Gen_Ret_Addr[8].I_RET_ADDR_WB 
       (.S(addr_AddSub_23),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[8].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_21 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_32 [23]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_398 \Using_FPGA_LUT6.Gen_Ret_Addr[8].MUXCY_XOR_I 
       (.LO(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[8].MUXCY_XOR_I_LO_UNCONNECTED ),
        .\LOCKSTEP_Out_reg[3015] (carry_23),
        .S(addr_AddSub_23),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [15]),
        .\Using_FPGA.Native_I2_0 (\Using_FPGA.Native_21 ),
        .lopt(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[8].MUXCY_XOR_I_lopt_UNCONNECTED ),
        .lopt_1(\Using_FPGA.Native_22 ),
        .lopt_10(lopt_40),
        .lopt_11(lopt_41),
        .lopt_2(addr_AddSub_24),
        .lopt_3(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[8].MUXCY_XOR_I_lopt_3_UNCONNECTED ),
        .lopt_4(\Using_FPGA.Native_23 ),
        .lopt_5(addr_AddSub_25),
        .lopt_6(lopt_38),
        .lopt_7(\Using_FPGA.Native_24 ),
        .lopt_8(addr_AddSub_26),
        .lopt_9(lopt_39));
  system_microblaze_0_0__MB_FDRE_399 \Using_FPGA_LUT6.Gen_Ret_Addr[8].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_21 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[8].I_RET_ADDR_WB_n_0 ));
  system_microblaze_0_0__MB_LUT6_2__parameterized5_400 \Using_FPGA_LUT6.Gen_Ret_Addr[9].I_RET_ADDR_WB 
       (.S(addr_AddSub_22),
        .\Using_FPGA.Native_0 (\Using_FPGA_LUT6.Gen_Ret_Addr[9].I_RET_ADDR_WB_n_0 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_20 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_31 ),
        .\Using_FPGA.Native_3 (\Using_FPGA.Native_32 [22]),
        .\Using_FPGA.Native_4 (\Using_FPGA.Native_33 ));
  system_microblaze_0_0__MB_MUXCY_XORCY_401 \Using_FPGA_LUT6.Gen_Ret_Addr[9].MUXCY_XOR_I 
       (.CI(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[9].MUXCY_XOR_I_CI_UNCONNECTED ),
        .LO(carry_23),
        .S(\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[9].MUXCY_XOR_I_S_UNCONNECTED ),
        .\Using_FPGA.Native (\Using_FPGA.Native_30 [14]),
        .\Using_FPGA.Native_I2_0 (\NLW_Using_FPGA_LUT6.Gen_Ret_Addr[9].MUXCY_XOR_I_Using_FPGA.Native_I2_0_UNCONNECTED ),
        .lopt(lopt_32),
        .lopt_1(lopt_35));
  system_microblaze_0_0__MB_FDRE_402 \Using_FPGA_LUT6.Gen_Ret_Addr[9].WB_PC_FDRE 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_20 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_34 ),
        .\Using_FPGA.Native_2 (\Using_FPGA_LUT6.Gen_Ret_Addr[9].I_RET_ADDR_WB_n_0 ));
endmodule

(* ORIG_REF_NAME = "instr_mux" *) 
module system_microblaze_0_0__instr_mux
   (I139_out,
    Y,
    in,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    Instr,
    LOCKSTEP_Master_Out);
  output I139_out;
  output [0:31]Y;
  output [0:0]in;
  input [0:0]\Using_FPGA.Native ;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:31]Instr;
  input [32:0]LOCKSTEP_Master_Out;

  wire I139_out;
  wire [0:31]Instr;
  wire [32:0]LOCKSTEP_Master_Out;
  wire [0:0]\Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:31]Y;
  wire [0:0]in;

  system_microblaze_0_0__mux_bus \Mux_LD.LD_inst 
       (.I139_out(I139_out),
        .Instr(Instr),
        .LOCKSTEP_Master_Out(LOCKSTEP_Master_Out),
        .\Using_FPGA.Native (\Using_FPGA.Native ),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native_0 ),
        .Y(Y),
        .in(in));
endmodule

(* ORIG_REF_NAME = "jump_logic" *) 
module system_microblaze_0_0__jump_logic
   (ex_jump,
    ex_op1_cmp_equal,
    ex_op1_cmp_equal_n,
    ex_jump_q,
    I5,
    ex_jump_hold_reg,
    ex_delayslot_Instr0,
    keep_jump_taken_with_ds_reg,
    mem_jump_taken0,
    \if_pc_reg[0] ,
    if_missed_fetch_reg,
    \Using_FPGA.Native ,
    ex_op1_zero,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    sync_reset,
    use_Reg_Neg_S_reg_0,
    ex_jump_hold_reg_0,
    ex_op1_cmp_eq,
    Clk,
    ex_op1_cmp_eq_n5_out,
    force_Val2_N_reg_0,
    ex_op1_cmp_eq1,
    use_Reg_Neg_DI1_out,
    force_Val10_out,
    use_Reg_Neg_S3_out,
    force12_out,
    \Using_FPGA.Native_2 ,
    Q,
    wb_exception,
    out,
    ex_jump_hold,
    ex_mbar_stall_no_sleep_1,
    ex_first_cycle,
    ex_mbar_decode,
    ex_mbar_sleep,
    keep_jump_taken_with_ds,
    ex_branch_with_delayslot,
    ex_databus_addr,
    \if_pc_reg[30] ,
    \if_pc_reg[0]_0 ,
    O,
    \if_pc_reg[28] ,
    \if_pc_reg[27] ,
    \if_pc_reg[26] ,
    \if_pc_reg[25] ,
    \if_pc_reg[24] ,
    \if_pc_reg[23] ,
    \if_pc_reg[22] ,
    \if_pc_reg[21] ,
    \if_pc_reg[20] ,
    \if_pc_reg[19] ,
    \if_pc_reg[18] ,
    \if_pc_reg[17] ,
    \if_pc_reg[16] ,
    \if_pc_reg[15] ,
    \if_pc_reg[14] ,
    \if_pc_reg[13] ,
    \if_pc_reg[12] ,
    \if_pc_reg[11] ,
    \if_pc_reg[10] ,
    \if_pc_reg[9] ,
    \if_pc_reg[8] ,
    \if_pc_reg[7] ,
    \if_pc_reg[6] ,
    \if_pc_reg[5] ,
    \if_pc_reg[4] ,
    \if_pc_reg[3] ,
    \if_pc_reg[2] ,
    \if_pc_reg[1] ,
    \if_pc_reg[0]_1 ,
    if_missed_fetch,
    if_missed_fetch_reg_0,
    IB_Ready,
    LOCKSTEP_Master_Out,
    of_valid,
    EX_MBAR_Stall__2,
    lopt,
    lopt_1,
    lopt_2);
  output ex_jump;
  output ex_op1_cmp_equal;
  output ex_op1_cmp_equal_n;
  output ex_jump_q;
  output I5;
  output ex_jump_hold_reg;
  output ex_delayslot_Instr0;
  output keep_jump_taken_with_ds_reg;
  output mem_jump_taken0;
  output [31:0]\if_pc_reg[0] ;
  output if_missed_fetch_reg;
  output \Using_FPGA.Native ;
  input ex_op1_zero;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input sync_reset;
  input use_Reg_Neg_S_reg_0;
  input ex_jump_hold_reg_0;
  input ex_op1_cmp_eq;
  input Clk;
  input ex_op1_cmp_eq_n5_out;
  input force_Val2_N_reg_0;
  input ex_op1_cmp_eq1;
  input use_Reg_Neg_DI1_out;
  input force_Val10_out;
  input use_Reg_Neg_S3_out;
  input force12_out;
  input [0:0]\Using_FPGA.Native_2 ;
  input [1:0]Q;
  input wb_exception;
  input out;
  input ex_jump_hold;
  input ex_mbar_stall_no_sleep_1;
  input ex_first_cycle;
  input ex_mbar_decode;
  input ex_mbar_sleep;
  input keep_jump_taken_with_ds;
  input ex_branch_with_delayslot;
  input [1:0]ex_databus_addr;
  input [1:0]\if_pc_reg[30] ;
  input [29:0]\if_pc_reg[0]_0 ;
  input O;
  input \if_pc_reg[28] ;
  input \if_pc_reg[27] ;
  input \if_pc_reg[26] ;
  input \if_pc_reg[25] ;
  input \if_pc_reg[24] ;
  input \if_pc_reg[23] ;
  input \if_pc_reg[22] ;
  input \if_pc_reg[21] ;
  input \if_pc_reg[20] ;
  input \if_pc_reg[19] ;
  input \if_pc_reg[18] ;
  input \if_pc_reg[17] ;
  input \if_pc_reg[16] ;
  input \if_pc_reg[15] ;
  input \if_pc_reg[14] ;
  input \if_pc_reg[13] ;
  input \if_pc_reg[12] ;
  input \if_pc_reg[11] ;
  input \if_pc_reg[10] ;
  input \if_pc_reg[9] ;
  input \if_pc_reg[8] ;
  input \if_pc_reg[7] ;
  input \if_pc_reg[6] ;
  input \if_pc_reg[5] ;
  input \if_pc_reg[4] ;
  input \if_pc_reg[3] ;
  input \if_pc_reg[2] ;
  input \if_pc_reg[1] ;
  input \if_pc_reg[0]_1 ;
  input if_missed_fetch;
  input [0:0]if_missed_fetch_reg_0;
  input IB_Ready;
  input [0:0]LOCKSTEP_Master_Out;
  input of_valid;
  input EX_MBAR_Stall__2;
  input lopt;
  output lopt_1;
  output lopt_2;

  wire Clk;
  wire DI;
  wire EX_MBAR_Stall__2;
  wire I5;
  wire IB_Ready;
  wire [0:0]LOCKSTEP_Master_Out;
  wire MUXCY_JUMP_CARRY6_n_39;
  wire O;
  wire [1:0]Q;
  wire S;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire [0:0]\Using_FPGA.Native_2 ;
  (* DIRECT_RESET *) wire ex_PipeRun_for_rst;
  wire ex_branch_with_delayslot;
  wire [1:0]ex_databus_addr;
  wire ex_delayslot_Instr0;
  wire ex_first_cycle;
  (* DIRECT_ENABLE *) wire ex_jump_for_ce;
  wire ex_jump_hold;
  wire ex_jump_hold_reg;
  wire ex_jump_q;
  wire ex_mbar_decode;
  wire ex_mbar_sleep;
  wire ex_mbar_stall_no_sleep_1;
  wire ex_op1_cmp_eq;
  wire ex_op1_cmp_eq1;
  wire ex_op1_cmp_eq_n5_out;
  wire ex_op1_cmp_equal;
  wire ex_op1_cmp_equal_n;
  wire force12_out;
  wire force1_reg_n_0;
  wire force2;
  wire force_Val10_out;
  wire force_Val1_reg_n_0;
  wire force_Val2_N;
  wire force_Val2_N_reg_0;
  wire if_missed_fetch;
  wire if_missed_fetch_reg;
  wire [0:0]if_missed_fetch_reg_0;
  wire [31:0]\if_pc_reg[0] ;
  wire [29:0]\if_pc_reg[0]_0 ;
  wire \if_pc_reg[0]_1 ;
  wire \if_pc_reg[10] ;
  wire \if_pc_reg[11] ;
  wire \if_pc_reg[12] ;
  wire \if_pc_reg[13] ;
  wire \if_pc_reg[14] ;
  wire \if_pc_reg[15] ;
  wire \if_pc_reg[16] ;
  wire \if_pc_reg[17] ;
  wire \if_pc_reg[18] ;
  wire \if_pc_reg[19] ;
  wire \if_pc_reg[1] ;
  wire \if_pc_reg[20] ;
  wire \if_pc_reg[21] ;
  wire \if_pc_reg[22] ;
  wire \if_pc_reg[23] ;
  wire \if_pc_reg[24] ;
  wire \if_pc_reg[25] ;
  wire \if_pc_reg[26] ;
  wire \if_pc_reg[27] ;
  wire \if_pc_reg[28] ;
  wire \if_pc_reg[2] ;
  wire [1:0]\if_pc_reg[30] ;
  wire \if_pc_reg[3] ;
  wire \if_pc_reg[4] ;
  wire \if_pc_reg[5] ;
  wire \if_pc_reg[6] ;
  wire \if_pc_reg[7] ;
  wire \if_pc_reg[8] ;
  wire \if_pc_reg[9] ;
  wire jump_carry1;
  wire jump_carry5;
  wire keep_jump_taken_with_ds;
  wire keep_jump_taken_with_ds_reg;
  wire lopt;
  wire \^lopt_1 ;
  wire \^lopt_2 ;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  (* DIRECT_ENABLE *) wire of_PipeRun_for_ce;
  wire of_valid;
  wire out;
  (* DIRECT_RESET *) wire reset_bool_for_rst;
  wire use_Reg_Neg_DI1_out;
  wire use_Reg_Neg_DI_reg_n_0;
  wire use_Reg_Neg_S3_out;
  wire use_Reg_Neg_S_reg_n_0;
  wire wb_exception;
  wire NLW_MUXCY_JUMP_CARRY_DI_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY_S_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY_ex_op1_zero_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY2_jump_carry2_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY2_lopt_3_UNCONNECTED;
  wire \NLW_MUXCY_JUMP_CARRY3_Using_FPGA.Native_1_UNCONNECTED ;
  wire NLW_MUXCY_JUMP_CARRY3_ex_jump_wanted_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY3_jump_carry2_UNCONNECTED;
  wire \NLW_MUXCY_JUMP_CARRY4_Using_FPGA.Native_0_UNCONNECTED ;
  wire NLW_MUXCY_JUMP_CARRY4_ex_jump_wanted_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY4_jump_carry4_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY4_lopt_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY5_jump_carry4_UNCONNECTED;
  wire NLW_MUXCY_JUMP_CARRY6_mem_jump_taken0_UNCONNECTED;

  assign ex_PipeRun_for_rst = ex_jump_hold_reg_0;
  assign ex_jump = ex_jump_for_ce;
  assign lopt_1 = DI;
  assign lopt_2 = S;
  assign of_PipeRun_for_ce = use_Reg_Neg_S_reg_0;
  assign reset_bool_for_rst = sync_reset;
  system_microblaze_0_0__MB_MUXCY_92 MUXCY_JUMP_CARRY
       (.DI(NLW_MUXCY_JUMP_CARRY_DI_UNCONNECTED),
        .S(NLW_MUXCY_JUMP_CARRY_S_UNCONNECTED),
        .ex_op1_zero(NLW_MUXCY_JUMP_CARRY_ex_op1_zero_UNCONNECTED),
        .jump_carry1(jump_carry1),
        .lopt(lopt));
  system_microblaze_0_0__MB_MUXCY_93 MUXCY_JUMP_CARRY2
       (.force2(force2),
        .force_Val2_N(force_Val2_N),
        .jump_carry1(jump_carry1),
        .jump_carry2(NLW_MUXCY_JUMP_CARRY2_jump_carry2_UNCONNECTED),
        .lopt(\^lopt_1 ),
        .lopt_1(\^lopt_2 ),
        .lopt_2(\Using_FPGA.Native_0 ),
        .lopt_3(NLW_MUXCY_JUMP_CARRY2_lopt_3_UNCONNECTED),
        .lopt_4(lopt_4),
        .lopt_5(\Using_FPGA.Native_1 ),
        .lopt_6(lopt_5),
        .lopt_7(lopt_6),
        .lopt_8(lopt_7),
        .out(out));
  system_microblaze_0_0__MB_MUXCY_94 MUXCY_JUMP_CARRY3
       (.EX_MBAR_Stall__2(EX_MBAR_Stall__2),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\NLW_MUXCY_JUMP_CARRY3_Using_FPGA.Native_1_UNCONNECTED ),
        .ex_branch_with_delayslot(ex_branch_with_delayslot),
        .ex_jump_wanted(NLW_MUXCY_JUMP_CARRY3_ex_jump_wanted_UNCONNECTED),
        .jump_carry2(NLW_MUXCY_JUMP_CARRY3_jump_carry2_UNCONNECTED),
        .lopt(\^lopt_1 ),
        .lopt_1(\^lopt_2 ),
        .of_valid(of_valid));
  system_microblaze_0_0__MB_MUXCY_95 MUXCY_JUMP_CARRY4
       (.\Using_FPGA.Native_0 (\NLW_MUXCY_JUMP_CARRY4_Using_FPGA.Native_0_UNCONNECTED ),
        .ex_jump_wanted(NLW_MUXCY_JUMP_CARRY4_ex_jump_wanted_UNCONNECTED),
        .jump_carry4(NLW_MUXCY_JUMP_CARRY4_jump_carry4_UNCONNECTED),
        .lopt(NLW_MUXCY_JUMP_CARRY4_lopt_UNCONNECTED),
        .lopt_1(lopt_4));
  system_microblaze_0_0__MB_MUXCY_96 MUXCY_JUMP_CARRY5
       (.jump_carry4(NLW_MUXCY_JUMP_CARRY5_jump_carry4_UNCONNECTED),
        .jump_carry5(jump_carry5),
        .lopt(lopt_5),
        .lopt_1(lopt_6),
        .lopt_2(lopt_7));
  system_microblaze_0_0__MB_MUXCY_97 MUXCY_JUMP_CARRY6
       (.I5(I5),
        .IB_Ready(IB_Ready),
        .LOCKSTEP_Master_Out(LOCKSTEP_Master_Out),
        .O(O),
        .Q(Q),
        .ex_branch_with_delayslot(ex_branch_with_delayslot),
        .ex_databus_addr(ex_databus_addr),
        .ex_delayslot_Instr0(ex_delayslot_Instr0),
        .ex_first_cycle(ex_first_cycle),
        .ex_jump_hold(ex_jump_hold),
        .ex_jump_hold_reg(ex_jump_hold_reg),
        .ex_jump_hold_reg_0(ex_PipeRun_for_rst),
        .ex_jump_q(ex_jump_q),
        .ex_jump_q_reg(MUXCY_JUMP_CARRY6_n_39),
        .ex_mbar_decode(ex_mbar_decode),
        .ex_mbar_sleep(ex_mbar_sleep),
        .ex_mbar_stall_no_sleep_1(ex_mbar_stall_no_sleep_1),
        .if_missed_fetch(if_missed_fetch),
        .if_missed_fetch_reg(if_missed_fetch_reg),
        .if_missed_fetch_reg_0(if_missed_fetch_reg_0),
        .\if_pc_reg[0] (\if_pc_reg[0] ),
        .\if_pc_reg[0]_0 (\if_pc_reg[0]_0 ),
        .\if_pc_reg[0]_1 (\if_pc_reg[0]_1 ),
        .\if_pc_reg[10] (\if_pc_reg[10] ),
        .\if_pc_reg[11] (\if_pc_reg[11] ),
        .\if_pc_reg[12] (\if_pc_reg[12] ),
        .\if_pc_reg[13] (\if_pc_reg[13] ),
        .\if_pc_reg[14] (\if_pc_reg[14] ),
        .\if_pc_reg[15] (\if_pc_reg[15] ),
        .\if_pc_reg[16] (\if_pc_reg[16] ),
        .\if_pc_reg[17] (\if_pc_reg[17] ),
        .\if_pc_reg[18] (\if_pc_reg[18] ),
        .\if_pc_reg[19] (\if_pc_reg[19] ),
        .\if_pc_reg[1] (\if_pc_reg[1] ),
        .\if_pc_reg[20] (\if_pc_reg[20] ),
        .\if_pc_reg[21] (\if_pc_reg[21] ),
        .\if_pc_reg[22] (\if_pc_reg[22] ),
        .\if_pc_reg[23] (\if_pc_reg[23] ),
        .\if_pc_reg[24] (\if_pc_reg[24] ),
        .\if_pc_reg[25] (\if_pc_reg[25] ),
        .\if_pc_reg[26] (\if_pc_reg[26] ),
        .\if_pc_reg[27] (\if_pc_reg[27] ),
        .\if_pc_reg[28] (\if_pc_reg[28] ),
        .\if_pc_reg[2] (\if_pc_reg[2] ),
        .\if_pc_reg[30] (\if_pc_reg[30] ),
        .\if_pc_reg[3] (\if_pc_reg[3] ),
        .\if_pc_reg[4] (\if_pc_reg[4] ),
        .\if_pc_reg[5] (\if_pc_reg[5] ),
        .\if_pc_reg[6] (\if_pc_reg[6] ),
        .\if_pc_reg[7] (\if_pc_reg[7] ),
        .\if_pc_reg[8] (\if_pc_reg[8] ),
        .\if_pc_reg[9] (\if_pc_reg[9] ),
        .in0(ex_jump_for_ce),
        .jump_carry5(jump_carry5),
        .keep_jump_taken_with_ds(keep_jump_taken_with_ds),
        .keep_jump_taken_with_ds_reg(keep_jump_taken_with_ds_reg),
        .keep_jump_taken_with_ds_reg_0(of_PipeRun_for_ce),
        .mem_jump_taken0(NLW_MUXCY_JUMP_CARRY6_mem_jump_taken0_UNCONNECTED),
        .sync_reset(reset_bool_for_rst),
        .wb_exception(wb_exception));
  FDRE #(
    .INIT(1'b0)) 
    ex_jump_q_reg
       (.C(Clk),
        .CE(1'b1),
        .D(MUXCY_JUMP_CARRY6_n_39),
        .Q(ex_jump_q),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    ex_op1_cmp_eq_n_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_op1_cmp_eq_n5_out),
        .Q(ex_op1_cmp_equal_n),
        .R(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    ex_op1_cmp_eq_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_op1_cmp_eq),
        .Q(ex_op1_cmp_equal),
        .S(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    force1_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(force12_out),
        .Q(force1_reg_n_0),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    force2_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(ex_op1_cmp_eq1),
        .Q(force2),
        .R(reset_bool_for_rst));
  LUT3 #(
    .INIT(8'hA6)) 
    force_DI1
       (.I0(force_Val1_reg_n_0),
        .I1(use_Reg_Neg_DI_reg_n_0),
        .I2(\Using_FPGA.Native_2 ),
        .O(DI));
  FDRE #(
    .INIT(1'b0)) 
    force_Val1_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(force_Val10_out),
        .Q(force_Val1_reg_n_0),
        .R(reset_bool_for_rst));
  FDSE #(
    .INIT(1'b1)) 
    force_Val2_N_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(force_Val2_N_reg_0),
        .Q(force_Val2_N),
        .S(reset_bool_for_rst));
  LUT3 #(
    .INIT(8'hA6)) 
    force_jump1
       (.I0(force1_reg_n_0),
        .I1(use_Reg_Neg_S_reg_n_0),
        .I2(\Using_FPGA.Native_2 ),
        .O(S));
  FDRE #(
    .INIT(1'b0)) 
    use_Reg_Neg_DI_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(use_Reg_Neg_DI1_out),
        .Q(use_Reg_Neg_DI_reg_n_0),
        .R(reset_bool_for_rst));
  FDRE #(
    .INIT(1'b0)) 
    use_Reg_Neg_S_reg
       (.C(Clk),
        .CE(of_PipeRun_for_ce),
        .D(use_Reg_Neg_S3_out),
        .Q(use_Reg_Neg_S_reg_n_0),
        .R(reset_bool_for_rst));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module system_microblaze_0_0__mb_sync_bit
   (out,
    reset_temp,
    Clk);
  output [0:0]out;
  input reset_temp;
  input Clk;

  wire Clk;
  wire reset_temp;
  (* async_reg = "true" *) wire [1:2]sync;

  assign out[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(reset_temp),
        .Q(sync[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module system_microblaze_0_0__mb_sync_bit_0
   (out,
    SR,
    Wakeup,
    Clk);
  output [0:0]out;
  input [0:0]SR;
  input [0:0]Wakeup;
  input Clk;

  wire Clk;
  wire [0:0]SR;
  wire [0:0]Wakeup;
  (* async_reg = "true" *) wire [1:2]sync;

  assign out[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(Wakeup),
        .Q(sync[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module system_microblaze_0_0__mb_sync_bit_1
   (out,
    SR,
    Wakeup,
    Clk);
  output [0:0]out;
  input [0:0]SR;
  input [0:0]Wakeup;
  input Clk;

  wire Clk;
  wire [0:0]SR;
  wire [0:0]Wakeup;
  (* async_reg = "true" *) wire [1:2]sync;

  assign out[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(Wakeup),
        .Q(sync[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module system_microblaze_0_0__mb_sync_bit_46
   (sample_synced,
    normal_stop_cmd_i0,
    Q,
    sync_reset,
    D,
    Clk);
  output [0:0]sample_synced;
  output normal_stop_cmd_i0;
  input [0:0]Q;
  input sync_reset;
  input [0:0]D;
  input Clk;

  wire Clk;
  wire [0:0]D;
  wire [0:0]Q;
  wire normal_stop_cmd_i0;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  LUT2 #(
    .INIT(4'h2)) 
    \Serial_Dbg_Intf.normal_stop_cmd_i_i_1 
       (.I0(sync[2]),
        .I1(Q),
        .O(normal_stop_cmd_i0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(D),
        .Q(sync[1]),
        .R(sync_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module system_microblaze_0_0__mb_sync_bit_47
   (sample_synced,
    force_stop_cmd_i0,
    Q,
    sync_reset,
    \Synchronize.use_sync_reset.sync_reg[1]_0 ,
    Clk);
  output [0:0]sample_synced;
  output force_stop_cmd_i0;
  input [0:0]Q;
  input sync_reset;
  input [0:0]\Synchronize.use_sync_reset.sync_reg[1]_0 ;
  input Clk;

  wire Clk;
  wire [0:0]Q;
  wire [0:0]\Synchronize.use_sync_reset.sync_reg[1]_0 ;
  wire force_stop_cmd_i0;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  LUT2 #(
    .INIT(4'h2)) 
    \Serial_Dbg_Intf.force_stop_cmd_i_i_1 
       (.I0(sync[2]),
        .I1(Q),
        .O(force_stop_cmd_i0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(\Synchronize.use_sync_reset.sync_reg[1]_0 ),
        .Q(sync[1]),
        .R(sync_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module system_microblaze_0_0__mb_sync_bit_48
   (sample_synced,
    start_single_cmd0,
    Q,
    sync_reset,
    \Synchronize.use_sync_reset.sync_reg[1]_0 ,
    Clk);
  output [0:0]sample_synced;
  output start_single_cmd0;
  input [0:0]Q;
  input sync_reset;
  input [0:0]\Synchronize.use_sync_reset.sync_reg[1]_0 ;
  input Clk;

  wire Clk;
  wire [0:0]Q;
  wire [0:0]\Synchronize.use_sync_reset.sync_reg[1]_0 ;
  wire start_single_cmd0;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  LUT2 #(
    .INIT(4'h2)) 
    \Serial_Dbg_Intf.start_single_cmd_i_1 
       (.I0(sync[2]),
        .I1(Q),
        .O(start_single_cmd0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(\Synchronize.use_sync_reset.sync_reg[1]_0 ),
        .Q(sync[1]),
        .R(sync_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module system_microblaze_0_0__mb_sync_bit_49
   (sample_synced,
    read_register_MSR0,
    Q,
    sync_reset,
    \Synchronize.use_sync_reset.sync_reg[1]_0 ,
    Clk);
  output [0:0]sample_synced;
  output read_register_MSR0;
  input [0:0]Q;
  input sync_reset;
  input [0:0]\Synchronize.use_sync_reset.sync_reg[1]_0 ;
  input Clk;

  wire Clk;
  wire [0:0]Q;
  wire [0:0]\Synchronize.use_sync_reset.sync_reg[1]_0 ;
  wire read_register_MSR0;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  LUT2 #(
    .INIT(4'h2)) 
    \Serial_Dbg_Intf.read_register_MSR_i_1 
       (.I0(sync[2]),
        .I1(Q),
        .O(read_register_MSR0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(\Synchronize.use_sync_reset.sync_reg[1]_0 ),
        .Q(sync[1]),
        .R(sync_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module system_microblaze_0_0__mb_sync_bit_50
   (sample_synced,
    read_register_PC0,
    Q,
    sync_reset,
    \Synchronize.use_sync_reset.sync_reg[1]_0 ,
    Clk);
  output [0:0]sample_synced;
  output read_register_PC0;
  input [0:0]Q;
  input sync_reset;
  input [0:0]\Synchronize.use_sync_reset.sync_reg[1]_0 ;
  input Clk;

  wire Clk;
  wire [0:0]Q;
  wire [0:0]\Synchronize.use_sync_reset.sync_reg[1]_0 ;
  wire read_register_PC0;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  LUT2 #(
    .INIT(4'h2)) 
    \Serial_Dbg_Intf.read_register_PC_i_1 
       (.I0(sync[2]),
        .I1(Q),
        .O(read_register_PC0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(\Synchronize.use_sync_reset.sync_reg[1]_0 ),
        .Q(sync[1]),
        .R(sync_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module system_microblaze_0_0__mb_sync_bit_51
   (sample_synced,
    \Use_Async_Reset.sync_reset_reg ,
    continue_from_brk0,
    sync_reset,
    \Serial_Dbg_Intf.trig_in_1_reg ,
    Q,
    Dbg_Trig_In,
    \Synchronize.use_sync_reset.sync_reg[1]_0 ,
    Clk);
  output [0:0]sample_synced;
  output \Use_Async_Reset.sync_reset_reg ;
  output continue_from_brk0;
  input sync_reset;
  input [2:0]\Serial_Dbg_Intf.trig_in_1_reg ;
  input [3:0]Q;
  input [0:0]Dbg_Trig_In;
  input [0:0]\Synchronize.use_sync_reset.sync_reg[1]_0 ;
  input Clk;

  wire Clk;
  wire [3:0]Q;
  wire [2:0]\Serial_Dbg_Intf.trig_in_1_reg ;
  wire [0:0]\Synchronize.use_sync_reset.sync_reg[1]_0 ;
  wire continue_from_brk0;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  LUT4 #(
    .INIT(16'h4F44)) 
    \Serial_Dbg_Intf.continue_from_brk_i_1 
       (.I0(Q[2]),
        .I1(sync[2]),
        .I2(Q[1]),
        .I3(\Serial_Dbg_Intf.trig_in_1_reg [1]),
        .O(continue_from_brk0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(\Synchronize.use_sync_reset.sync_reg[1]_0 ),
        .Q(sync[1]),
        .R(sync_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module system_microblaze_0_0__mb_sync_bit_52
   (sample_synced,
    if_debug_ready_i0,
    Q,
    sync_reset,
    \Synchronize.use_sync_reset.sync_reg[1]_0 ,
    Clk);
  output [0:0]sample_synced;
  output if_debug_ready_i0;
  input [0:0]Q;
  input sync_reset;
  input [0:0]\Synchronize.use_sync_reset.sync_reg[1]_0 ;
  input Clk;

  wire Clk;
  wire [0:0]Q;
  wire [0:0]\Synchronize.use_sync_reset.sync_reg[1]_0 ;
  wire if_debug_ready_i0;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  LUT2 #(
    .INIT(4'h2)) 
    \Serial_Dbg_Intf.if_debug_ready_i_i_1 
       (.I0(sync[2]),
        .I1(Q),
        .O(if_debug_ready_i0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(\Synchronize.use_sync_reset.sync_reg[1]_0 ),
        .Q(sync[1]),
        .R(sync_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module system_microblaze_0_0__mb_sync_bit_53
   (sample_synced,
    \Serial_Dbg_Intf.trig_ack_out_1_reg ,
    Dbg_Trig_Ack_Out,
    sync_reset,
    Q,
    Dbg_Trig_Out,
    Clk);
  output [0:0]sample_synced;
  output \Serial_Dbg_Intf.trig_ack_out_1_reg ;
  input [0:0]Dbg_Trig_Ack_Out;
  input sync_reset;
  input [0:0]Q;
  input [0:0]Dbg_Trig_Out;
  input Clk;

  wire Clk;
  wire [0:0]Dbg_Trig_Out;
  (* async_reg = "true" *) wire [1:2]sync;
  wire sync_reset;

  assign sample_synced[0] = sync[2];
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[1] 
       (.C(Clk),
        .CE(1'b1),
        .D(Dbg_Trig_Out),
        .Q(sync[1]),
        .R(sync_reset));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Synchronize.use_sync_reset.sync_reg[2] 
       (.C(Clk),
        .CE(1'b1),
        .D(sync[1]),
        .Q(sync[2]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module system_microblaze_0_0__mb_sync_bit__parameterized2
   (D,
    dbg_brki_hit,
    Dbg_Clk,
    AR);
  output [0:0]D;
  input dbg_brki_hit;
  input Dbg_Clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]D;
  wire Dbg_Clk;
  wire dbg_brki_hit;

  FDCE #(
    .INIT(1'b0)) 
    \Single_Synchronize.use_async_reset.sync_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(AR),
        .D(dbg_brki_hit),
        .Q(D));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module system_microblaze_0_0__mb_sync_bit__parameterized2_26
   (D,
    running_clock,
    Dbg_Clk,
    AR);
  output [0:0]D;
  input running_clock;
  input Dbg_Clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]D;
  wire Dbg_Clk;
  wire running_clock;

  FDCE #(
    .INIT(1'b0)) 
    \Single_Synchronize.use_async_reset.sync_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(AR),
        .D(running_clock),
        .Q(D));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module system_microblaze_0_0__mb_sync_bit__parameterized2_27
   (D,
    Sleep,
    Dbg_Clk,
    AR);
  output [0:0]D;
  input Sleep;
  input Dbg_Clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]D;
  wire Dbg_Clk;
  wire Sleep;

  FDCE #(
    .INIT(1'b0)) 
    \Single_Synchronize.use_async_reset.sync_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Sleep),
        .Q(D));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module system_microblaze_0_0__mb_sync_bit__parameterized2_28
   (D,
    \Single_Synchronize.use_async_reset.sync_reg_0 ,
    Dbg_Clk,
    AR);
  output [0:0]D;
  input \Single_Synchronize.use_async_reset.sync_reg_0 ;
  input Dbg_Clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]D;
  wire Dbg_Clk;
  wire \Single_Synchronize.use_async_reset.sync_reg_0 ;

  FDCE #(
    .INIT(1'b0)) 
    \Single_Synchronize.use_async_reset.sync_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Single_Synchronize.use_async_reset.sync_reg_0 ),
        .Q(D));
endmodule

(* ORIG_REF_NAME = "mb_sync_bit" *) 
module system_microblaze_0_0__mb_sync_bit__parameterized2_56
   (D,
    AR,
    Raw,
    Dbg_Clk,
    Scan_Reset,
    Scan_Reset_Sel,
    Scan_En);
  output [0:0]D;
  output [0:0]AR;
  input Raw;
  input Dbg_Clk;
  input Scan_Reset;
  input Scan_Reset_Sel;
  input Scan_En;

  wire [0:0]AR;
  wire [0:0]D;
  wire Dbg_Clk;
  wire Raw;

  (* OPT_MODIFIED = "PROPCONST" *) 
  GND GND
       (.G(AR));
  FDCE #(
    .INIT(1'b0)) 
    \Single_Synchronize.use_async_reset.sync_reg 
       (.C(Dbg_Clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Raw),
        .Q(D));
endmodule

(* ORIG_REF_NAME = "mb_sync_vec" *) 
module system_microblaze_0_0__mb_sync_vec
   (D,
    AR,
    Raw,
    Dbg_Clk,
    Scan_Reset,
    Scan_Reset_Sel,
    Scan_En);
  output [0:0]D;
  output [0:0]AR;
  input Raw;
  input Dbg_Clk;
  input Scan_Reset;
  input Scan_Reset_Sel;
  input Scan_En;

  wire [0:0]AR;
  wire [0:0]D;
  wire Dbg_Clk;
  wire Raw;
  wire \NLW_sync_bits[0].sync_bit_Scan_En_UNCONNECTED ;
  wire \NLW_sync_bits[0].sync_bit_Scan_Reset_UNCONNECTED ;
  wire \NLW_sync_bits[0].sync_bit_Scan_Reset_Sel_UNCONNECTED ;

  system_microblaze_0_0__mb_sync_bit__parameterized2_56 \sync_bits[0].sync_bit 
       (.AR(AR),
        .D(D),
        .Dbg_Clk(Dbg_Clk),
        .Raw(Raw),
        .Scan_En(\NLW_sync_bits[0].sync_bit_Scan_En_UNCONNECTED ),
        .Scan_Reset(\NLW_sync_bits[0].sync_bit_Scan_Reset_UNCONNECTED ),
        .Scan_Reset_Sel(\NLW_sync_bits[0].sync_bit_Scan_Reset_Sel_UNCONNECTED ));
endmodule

(* ORIG_REF_NAME = "mb_sync_vec" *) 
module system_microblaze_0_0__mb_sync_vec__parameterized1
   (sample_synced,
    \Use_Async_Reset.sync_reset_reg ,
    continue_from_brk0,
    \Serial_Dbg_Intf.trig_ack_out_1_reg ,
    start_single_cmd0,
    force_stop_cmd_i0,
    if_debug_ready_i0,
    read_register_MSR0,
    read_register_PC0,
    normal_stop_cmd_i0,
    sync_reset,
    Q,
    Dbg_Trig_Ack_Out,
    Dbg_Trig_In,
    D,
    Clk,
    \Synchronize.use_sync_reset.sync_reg[1] ,
    \Synchronize.use_sync_reset.sync_reg[1]_0 ,
    \Synchronize.use_sync_reset.sync_reg[1]_1 ,
    \Synchronize.use_sync_reset.sync_reg[1]_2 ,
    \Synchronize.use_sync_reset.sync_reg[1]_3 ,
    Dbg_Trig_Out,
    Dbg_Trig_Ack_In,
    \Synchronize.use_sync_reset.sync_reg[1]_4 );
  output [0:9]sample_synced;
  output \Use_Async_Reset.sync_reset_reg ;
  output continue_from_brk0;
  output \Serial_Dbg_Intf.trig_ack_out_1_reg ;
  output start_single_cmd0;
  output force_stop_cmd_i0;
  output if_debug_ready_i0;
  output read_register_MSR0;
  output read_register_PC0;
  output normal_stop_cmd_i0;
  input sync_reset;
  input [8:0]Q;
  input [0:0]Dbg_Trig_Ack_Out;
  input [0:0]Dbg_Trig_In;
  input [0:0]D;
  input Clk;
  input [0:0]\Synchronize.use_sync_reset.sync_reg[1] ;
  input [0:0]\Synchronize.use_sync_reset.sync_reg[1]_0 ;
  input [1:0]\Synchronize.use_sync_reset.sync_reg[1]_1 ;
  input [0:0]\Synchronize.use_sync_reset.sync_reg[1]_2 ;
  input [0:0]\Synchronize.use_sync_reset.sync_reg[1]_3 ;
  input [0:0]Dbg_Trig_Out;
  input [0:0]Dbg_Trig_Ack_In;
  input [0:0]\Synchronize.use_sync_reset.sync_reg[1]_4 ;

  wire Clk;
  wire [0:0]D;
  wire [0:0]Dbg_Trig_Out;
  wire [8:0]Q;
  wire [0:0]\Synchronize.use_sync_reset.sync_reg[1] ;
  wire [0:0]\Synchronize.use_sync_reset.sync_reg[1]_0 ;
  wire [1:0]\Synchronize.use_sync_reset.sync_reg[1]_1 ;
  wire [0:0]\Synchronize.use_sync_reset.sync_reg[1]_2 ;
  wire [0:0]\Synchronize.use_sync_reset.sync_reg[1]_3 ;
  wire continue_from_brk0;
  wire force_stop_cmd_i0;
  wire if_debug_ready_i0;
  wire normal_stop_cmd_i0;
  wire read_register_MSR0;
  wire read_register_PC0;
  wire [0:9]sample_synced;
  wire start_single_cmd0;
  wire sync_reset;
  wire \NLW_sync_bits[5].sync_bit_Use_Async_Reset.sync_reset_reg_UNCONNECTED ;
  wire [0:0]\NLW_sync_bits[5].sync_bit_Dbg_Trig_In_UNCONNECTED ;
  wire [3:0]\NLW_sync_bits[5].sync_bit_Q_UNCONNECTED ;
  wire [2:0]\NLW_sync_bits[5].sync_bit_Serial_Dbg_Intf.trig_in_1_reg_UNCONNECTED ;
  wire \NLW_sync_bits[7].sync_bit_Serial_Dbg_Intf.trig_ack_out_1_reg_UNCONNECTED ;
  wire [0:0]\NLW_sync_bits[7].sync_bit_Dbg_Trig_Ack_Out_UNCONNECTED ;
  wire [0:0]\NLW_sync_bits[7].sync_bit_Q_UNCONNECTED ;

  system_microblaze_0_0__mb_sync_bit_46 \sync_bits[0].sync_bit 
       (.Clk(Clk),
        .D(D),
        .Q(Q[8]),
        .normal_stop_cmd_i0(normal_stop_cmd_i0),
        .sample_synced(sample_synced[0]),
        .sync_reset(sync_reset));
  system_microblaze_0_0__mb_sync_bit_47 \sync_bits[1].sync_bit 
       (.Clk(Clk),
        .Q(Q[7]),
        .\Synchronize.use_sync_reset.sync_reg[1]_0 (\Synchronize.use_sync_reset.sync_reg[1] ),
        .force_stop_cmd_i0(force_stop_cmd_i0),
        .sample_synced(sample_synced[1]),
        .sync_reset(sync_reset));
  system_microblaze_0_0__mb_sync_bit_48 \sync_bits[2].sync_bit 
       (.Clk(Clk),
        .Q(Q[6]),
        .\Synchronize.use_sync_reset.sync_reg[1]_0 (\Synchronize.use_sync_reset.sync_reg[1]_0 ),
        .sample_synced(sample_synced[2]),
        .start_single_cmd0(start_single_cmd0),
        .sync_reset(sync_reset));
  system_microblaze_0_0__mb_sync_bit_49 \sync_bits[3].sync_bit 
       (.Clk(Clk),
        .Q(Q[5]),
        .\Synchronize.use_sync_reset.sync_reg[1]_0 (\Synchronize.use_sync_reset.sync_reg[1]_1 [1]),
        .read_register_MSR0(read_register_MSR0),
        .sample_synced(sample_synced[3]),
        .sync_reset(sync_reset));
  system_microblaze_0_0__mb_sync_bit_50 \sync_bits[4].sync_bit 
       (.Clk(Clk),
        .Q(Q[4]),
        .\Synchronize.use_sync_reset.sync_reg[1]_0 (\Synchronize.use_sync_reset.sync_reg[1]_1 [0]),
        .read_register_PC0(read_register_PC0),
        .sample_synced(sample_synced[4]),
        .sync_reset(sync_reset));
  system_microblaze_0_0__mb_sync_bit_51 \sync_bits[5].sync_bit 
       (.Clk(Clk),
        .Dbg_Trig_In(\NLW_sync_bits[5].sync_bit_Dbg_Trig_In_UNCONNECTED [0]),
        .Q({\NLW_sync_bits[5].sync_bit_Q_UNCONNECTED [3],Q[3],Q[1],\NLW_sync_bits[5].sync_bit_Q_UNCONNECTED [0]}),
        .\Serial_Dbg_Intf.trig_in_1_reg ({\NLW_sync_bits[5].sync_bit_Serial_Dbg_Intf.trig_in_1_reg_UNCONNECTED [2],sample_synced[7],\NLW_sync_bits[5].sync_bit_Serial_Dbg_Intf.trig_in_1_reg_UNCONNECTED [0]}),
        .\Synchronize.use_sync_reset.sync_reg[1]_0 (\Synchronize.use_sync_reset.sync_reg[1]_2 ),
        .\Use_Async_Reset.sync_reset_reg (\NLW_sync_bits[5].sync_bit_Use_Async_Reset.sync_reset_reg_UNCONNECTED ),
        .continue_from_brk0(continue_from_brk0),
        .sample_synced(sample_synced[5]),
        .sync_reset(sync_reset));
  system_microblaze_0_0__mb_sync_bit_52 \sync_bits[6].sync_bit 
       (.Clk(Clk),
        .Q(Q[2]),
        .\Synchronize.use_sync_reset.sync_reg[1]_0 (\Synchronize.use_sync_reset.sync_reg[1]_3 ),
        .if_debug_ready_i0(if_debug_ready_i0),
        .sample_synced(sample_synced[6]),
        .sync_reset(sync_reset));
  system_microblaze_0_0__mb_sync_bit_53 \sync_bits[7].sync_bit 
       (.Clk(Clk),
        .Dbg_Trig_Ack_Out(\NLW_sync_bits[7].sync_bit_Dbg_Trig_Ack_Out_UNCONNECTED [0]),
        .Dbg_Trig_Out(Dbg_Trig_Out),
        .Q(\NLW_sync_bits[7].sync_bit_Q_UNCONNECTED [0]),
        .\Serial_Dbg_Intf.trig_ack_out_1_reg (\NLW_sync_bits[7].sync_bit_Serial_Dbg_Intf.trig_ack_out_1_reg_UNCONNECTED ),
        .sample_synced(sample_synced[7]),
        .sync_reset(sync_reset));
endmodule

(* ORIG_REF_NAME = "msr_reg_gti" *) 
module system_microblaze_0_0__msr_reg_gti
   (ex_MSR,
    MEM_Fwd,
    \wb_MSR_i_reg[28]_0 ,
    sync_reset,
    Clk,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    \Using_FPGA.Native_1 ,
    \Using_FPGA.Native_2 ,
    mem_sel_msr,
    \WB_MEM_Result_reg[0] ,
    wb_piperun);
  output [2:0]ex_MSR;
  output [3:0]MEM_Fwd;
  output [2:0]\wb_MSR_i_reg[28]_0 ;
  input sync_reset;
  input Clk;
  input \Using_FPGA.Native ;
  input \Using_FPGA.Native_0 ;
  input \Using_FPGA.Native_1 ;
  input \Using_FPGA.Native_2 ;
  input mem_sel_msr;
  input [3:0]\WB_MEM_Result_reg[0] ;
  input wb_piperun;

  wire Clk;
  wire [3:0]MEM_Fwd;
  wire \MEM_MSR_Bits[28].Using_FDR.MSR_I_n_2 ;
  wire \MEM_MSR_Bits[29].Using_FDR.MSR_I_n_3 ;
  wire \MEM_MSR_Bits[30].Using_FDR.MSR_I_n_2 ;
  wire \OF_EX_MSR_Bits[28].Using_FDR.MSR_ex_I_n_1 ;
  wire \OF_EX_MSR_Bits[29].Using_FDR.MSR_ex_I_n_1 ;
  wire \OF_EX_MSR_Bits[30].Using_FDR.MSR_ex_I_n_1 ;
  wire \Using_FPGA.Native ;
  wire \Using_FPGA.Native_0 ;
  wire \Using_FPGA.Native_1 ;
  wire \Using_FPGA.Native_2 ;
  wire [3:0]\WB_MEM_Result_reg[0] ;
  wire [2:0]ex_MSR;
  wire [28:30]mem_MSR;
  wire mem_sel_msr;
  wire sync_reset;
  wire [2:0]\wb_MSR_i_reg[28]_0 ;
  wire wb_piperun;

  system_microblaze_0_0__MB_FDR_301 \MEM_MSR_Bits[28].Using_FDR.MSR_I 
       (.Clk(Clk),
        .MEM_Fwd(MEM_Fwd[2]),
        .\Using_FPGA.Native_0 (\MEM_MSR_Bits[28].Using_FDR.MSR_I_n_2 ),
        .\Using_FPGA.Native_1 (\OF_EX_MSR_Bits[28].Using_FDR.MSR_ex_I_n_1 ),
        .\WB_MEM_Result_reg[28] (\WB_MEM_Result_reg[0] [2]),
        .mem_MSR(mem_MSR[28]),
        .mem_sel_msr(mem_sel_msr),
        .sync_reset(sync_reset),
        .\wb_MSR_i_reg[28] (\wb_MSR_i_reg[28]_0 [2]),
        .wb_piperun(wb_piperun));
  system_microblaze_0_0__MB_FDR_302 \MEM_MSR_Bits[29].Using_FDR.MSR_I 
       (.Clk(Clk),
        .MEM_Fwd({MEM_Fwd[3],MEM_Fwd[1]}),
        .\Using_FPGA.Native_0 (\MEM_MSR_Bits[29].Using_FDR.MSR_I_n_3 ),
        .\Using_FPGA.Native_1 (\OF_EX_MSR_Bits[29].Using_FDR.MSR_ex_I_n_1 ),
        .\WB_MEM_Result_reg[0] ({\WB_MEM_Result_reg[0] [3],\WB_MEM_Result_reg[0] [1]}),
        .mem_MSR(mem_MSR[29]),
        .mem_sel_msr(mem_sel_msr),
        .sync_reset(sync_reset),
        .\wb_MSR_i_reg[29] (\wb_MSR_i_reg[28]_0 [1]),
        .wb_piperun(wb_piperun));
  system_microblaze_0_0__MB_FDR_303 \MEM_MSR_Bits[30].Using_FDR.MSR_I 
       (.Clk(Clk),
        .MEM_Fwd(MEM_Fwd[0]),
        .\Using_FPGA.Native_0 (\MEM_MSR_Bits[30].Using_FDR.MSR_I_n_2 ),
        .\Using_FPGA.Native_1 (\OF_EX_MSR_Bits[30].Using_FDR.MSR_ex_I_n_1 ),
        .\WB_MEM_Result_reg[30] (\WB_MEM_Result_reg[0] [0]),
        .mem_MSR(mem_MSR[30]),
        .mem_sel_msr(mem_sel_msr),
        .sync_reset(sync_reset),
        .\wb_MSR_i_reg[30] (\wb_MSR_i_reg[28]_0 [0]),
        .wb_piperun(wb_piperun));
  system_microblaze_0_0__MB_FDR_304 \OF_EX_MSR_Bits[28].Using_FDR.MSR_ex_I 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\OF_EX_MSR_Bits[28].Using_FDR.MSR_ex_I_n_1 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_2 ),
        .ex_MSR(ex_MSR[2]),
        .mem_MSR(mem_MSR[28]),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_FDR_305 \OF_EX_MSR_Bits[29].Using_FDR.MSR_ex_I 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\OF_EX_MSR_Bits[29].Using_FDR.MSR_ex_I_n_1 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_2 ),
        .ex_MSR(ex_MSR[1]),
        .mem_MSR(mem_MSR[29]),
        .sync_reset(sync_reset));
  system_microblaze_0_0__MB_FDR_306 \OF_EX_MSR_Bits[30].Using_FDR.MSR_ex_I 
       (.Clk(Clk),
        .\Using_FPGA.Native_0 (\OF_EX_MSR_Bits[30].Using_FDR.MSR_ex_I_n_1 ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_1 ),
        .\Using_FPGA.Native_2 (\Using_FPGA.Native_2 ),
        .ex_MSR(ex_MSR[0]),
        .mem_MSR(mem_MSR[30]),
        .sync_reset(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \wb_MSR_i_reg[28] 
       (.C(Clk),
        .CE(1'b1),
        .D(\MEM_MSR_Bits[28].Using_FDR.MSR_I_n_2 ),
        .Q(\wb_MSR_i_reg[28]_0 [2]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \wb_MSR_i_reg[29] 
       (.C(Clk),
        .CE(1'b1),
        .D(\MEM_MSR_Bits[29].Using_FDR.MSR_I_n_3 ),
        .Q(\wb_MSR_i_reg[28]_0 [1]),
        .R(sync_reset));
  FDRE #(
    .INIT(1'b0)) 
    \wb_MSR_i_reg[30] 
       (.C(Clk),
        .CE(1'b1),
        .D(\MEM_MSR_Bits[30].Using_FDR.MSR_I_n_2 ),
        .Q(\wb_MSR_i_reg[28]_0 [0]),
        .R(sync_reset));
endmodule

(* ORIG_REF_NAME = "mux_bus" *) 
module system_microblaze_0_0__mux_bus
   (I139_out,
    Y,
    in,
    \Using_FPGA.Native ,
    \Using_FPGA.Native_0 ,
    Instr,
    LOCKSTEP_Master_Out);
  output I139_out;
  output [0:31]Y;
  output [0:0]in;
  input [0:0]\Using_FPGA.Native ;
  input [0:0]\Using_FPGA.Native_0 ;
  input [0:31]Instr;
  input [32:0]LOCKSTEP_Master_Out;

  wire I139_out;
  wire [0:31]Instr;
  wire [32:0]LOCKSTEP_Master_Out;
  wire [0:0]\Using_FPGA.Native ;
  wire [0:0]\Using_FPGA.Native_0 ;
  wire [0:31]Y;
  wire [0:0]in;

  system_microblaze_0_0__MB_LUT6_2__parameterized3 \Mux_Loop[0].I_MUX_LUT6 
       (.I139_out(I139_out),
        .Instr({Instr[0],Instr[16]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32:31],LOCKSTEP_Master_Out[15]}),
        .\Using_FPGA.Native_0 (\Using_FPGA.Native ),
        .\Using_FPGA.Native_1 (\Using_FPGA.Native_0 ),
        .\Using_FPGA.Native_2 ({Y[1],Y[3]}),
        .Y({Y[0],Y[16]}),
        .in(in));
  system_microblaze_0_0__MB_LUT6_2__parameterized3_2 \Mux_Loop[10].I_MUX_LUT6 
       (.Instr({Instr[10],Instr[26]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[21],LOCKSTEP_Master_Out[5]}),
        .Y({Y[10],Y[26]}));
  system_microblaze_0_0__MB_LUT6_2__parameterized3_3 \Mux_Loop[11].I_MUX_LUT6 
       (.Instr({Instr[11],Instr[27]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[20],LOCKSTEP_Master_Out[4]}),
        .Y({Y[11],Y[27]}));
  system_microblaze_0_0__MB_LUT6_2__parameterized3_4 \Mux_Loop[12].I_MUX_LUT6 
       (.Instr({Instr[12],Instr[28]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[19],LOCKSTEP_Master_Out[3]}),
        .Y({Y[12],Y[28]}));
  system_microblaze_0_0__MB_LUT6_2__parameterized3_5 \Mux_Loop[13].I_MUX_LUT6 
       (.Instr({Instr[13],Instr[29]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[18],LOCKSTEP_Master_Out[2]}),
        .Y({Y[13],Y[29]}));
  system_microblaze_0_0__MB_LUT6_2__parameterized3_6 \Mux_Loop[14].I_MUX_LUT6 
       (.Instr({Instr[14],Instr[30]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[17],LOCKSTEP_Master_Out[1]}),
        .Y({Y[14],Y[30]}));
  system_microblaze_0_0__MB_LUT6_2__parameterized3_7 \Mux_Loop[15].I_MUX_LUT6 
       (.Instr({Instr[15],Instr[31]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[16],LOCKSTEP_Master_Out[0]}),
        .Y({Y[15],Y[31]}));
  system_microblaze_0_0__MB_LUT6_2__parameterized3_8 \Mux_Loop[1].I_MUX_LUT6 
       (.Instr({Instr[1],Instr[17]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[30],LOCKSTEP_Master_Out[14]}),
        .Y({Y[1],Y[17]}));
  system_microblaze_0_0__MB_LUT6_2__parameterized3_9 \Mux_Loop[2].I_MUX_LUT6 
       (.Instr({Instr[2],Instr[18]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[29],LOCKSTEP_Master_Out[13]}),
        .Y({Y[2],Y[18]}));
  system_microblaze_0_0__MB_LUT6_2__parameterized3_10 \Mux_Loop[3].I_MUX_LUT6 
       (.Instr({Instr[3],Instr[19]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[28],LOCKSTEP_Master_Out[12]}),
        .Y({Y[3],Y[19]}));
  system_microblaze_0_0__MB_LUT6_2__parameterized3_11 \Mux_Loop[4].I_MUX_LUT6 
       (.Instr({Instr[4],Instr[20]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[27],LOCKSTEP_Master_Out[11]}),
        .Y({Y[4],Y[20]}));
  system_microblaze_0_0__MB_LUT6_2__parameterized3_12 \Mux_Loop[5].I_MUX_LUT6 
       (.Instr({Instr[5],Instr[21]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[26],LOCKSTEP_Master_Out[10]}),
        .Y({Y[5],Y[21]}));
  system_microblaze_0_0__MB_LUT6_2__parameterized3_13 \Mux_Loop[6].I_MUX_LUT6 
       (.Instr({Instr[6],Instr[22]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[25],LOCKSTEP_Master_Out[9]}),
        .Y({Y[6],Y[22]}));
  system_microblaze_0_0__MB_LUT6_2__parameterized3_14 \Mux_Loop[7].I_MUX_LUT6 
       (.Instr({Instr[7],Instr[23]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[24],LOCKSTEP_Master_Out[8]}),
        .Y({Y[7],Y[23]}));
  system_microblaze_0_0__MB_LUT6_2__parameterized3_15 \Mux_Loop[8].I_MUX_LUT6 
       (.Instr({Instr[8],Instr[24]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[23],LOCKSTEP_Master_Out[7]}),
        .Y({Y[8],Y[24]}));
  system_microblaze_0_0__MB_LUT6_2__parameterized3_16 \Mux_Loop[9].I_MUX_LUT6 
       (.Instr({Instr[9],Instr[25]}),
        .LOCKSTEP_Master_Out({LOCKSTEP_Master_Out[32],LOCKSTEP_Master_Out[22],LOCKSTEP_Master_Out[6]}),
        .Y({Y[9],Y[25]}));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
